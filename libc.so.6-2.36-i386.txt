


Gadgets
=======


0x0010f005: aaa; adc ecx, esi; jmp dword ptr [ebp - 0x77]; 
0x0007b4a6: aaa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00142d26: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000cac9a: aaa; add esp, 0x28; pop ebx; ret; 
0x00106ecc: aaa; add esp, 0x74; pop ebx; pop esi; ret; 
0x000567a8: aaa; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00076a99: aaa; call dword ptr [eax + 0xc]; 
0x000b5294: aaa; call ebx; 
0x000b51f5: aaa; call esi; 
0x001226a5: aaa; cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000b64f5: aaa; dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00035245: aaa; dec esp; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00021dca: aaa; inc edx; and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x000714d0: aaa; int1; cli; jmp dword ptr [esi - 0x70]; 
0x0016ee2a: aaa; int1; jmp dword ptr [ebp - 0x75]; 
0x00124706: aaa; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00114160: aaa; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000847d8: aaa; mov eax, edi; call dword ptr gs:[0x10]; 
0x00088945: aaa; outsd dx, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0013ddef: aaa; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00082960: aaa; pop ebx; pop esi; pop edi; ret; 
0x00057545: aaa; pop es; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0013cb64: aaa; pop esi; pop edi; ret; 
0x0002feca: aaa; popal; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0016cb03: aaa; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016bab2: aaa; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012bcd0: aaa; push edi; stc; call dword ptr [eax - 0x18]; 
0x00033e15: aaa; ret; 
0x0015d86a: aaa; std; jmp dword ptr [esi - 0x70]; 
0x0013e3e5: aaa; sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x000936cb: aaa; sub dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00160fd8: aaa; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00075168: aaa; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0011b1e8: aaa; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0007a325: aaa; xchg edi, edi; jmp dword ptr [ecx]; 
0x00082049: aaa; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000e9769: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000ddd5d: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00023b1d: aad 0x10; add byte ptr [ebp - 0x691637d], cl; call dword ptr [eax - 0x73]; 
0x000c9cd7: aad 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016efd4: aad 0x30; stc; call dword ptr [eax - 0x18]; 
0x00047991: aad 0x30; stc; call dword ptr [esi + 0x6a]; 
0x0013102c: aad 0x4f; sldt word ptr [ebx - 0x7f72e714]; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0015ae67: aad 0x52; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00149b3c: aad 0x5f; stc; call dword ptr [eax - 0x73]; 
0x00084de4: aad 0x72; cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x00113ff8: aad 0x81; leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x000847fa: aad 0x83; in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0012a1ea: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0004bc9e: aad 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000a0bd2: aad 0x83; ret 0x3801; 
0x000b787d: aad 0x83; ret; 
0x000c9401: aad 0x89; ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x00024eef: aad 0x89; ret 0xc483; 
0x0008d282: aad 0x89; ret 0xe083; 
0x00195c85: aad 0x89; ret 0xe8c1; 
0x00199a30: aad 0x89; ret; 
0x0007bfc7: aad 0xc7; or byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011a3a7: aad 0xd1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00094253: aad 0xe6; call dword ptr [eax + 0x56]; 
0x0009b299: aad 0xe8; inc dword ptr [eax - 0x6d72fd1b]; adc byte ptr [esi - 0xa], 0xff; cmovne eax, edx; ret; 
0x0003568f: aad 0xe9; ret 0xfffc; 
0x001333d4: aad 0xf0; call dword ptr [eax - 0x18]; 
0x00135114: aad 0xf4; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00133a58: aad 0xff; jmp dword ptr [esi - 0x70]; 
0x0003d3d7: aad 1; ret 0xf089; 
0x00109e62: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c8958: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0009f1ac: aam 0x29; ret 0x1a8b; 
0x0009f285: aam 0x29; ret 0xb48d; 
0x0009f1c9: aam 0x31; fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x0007841f: aam 0x52; push ebx; push esi; call eax; 
0x0017746d: aam 0x66; movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000f8dc8: aam 0x6a; add eax, 0x9bcc868d; stc; call dword ptr [eax - 0x73]; 
0x0002444e: aam 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x00026f26: aam 0x6f; stc; call dword ptr [eax - 0x18]; 
0x000279c0: aam 0x70; stc; call dword ptr [eax - 0x73]; 
0x000563c4: aam 0x76; stc; call dword ptr [eax - 0x18]; 
0x0002c519: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0008f015: aam 0x82; stc; call dword ptr [eax - 0x18]; 
0x000995fb: aam 0x83; in al, dx; or al, 0x50; call edx; 
0x0009ed90: aam 0x83; ret 0xf01; 
0x000f53eb: aam 0x83; ret; 
0x00146804: aam 0x85; ror byte ptr [edi], 0x84; ret; 
0x000532e3: aam 0x89; ret 0x458b; 
0x0007a75b: aam 0x89; ret 0xf889; 
0x0008efe1: aam 0x89; ret; 
0x0013d3b8: aam 0x8b; add byte ptr [ecx], bh; ret 0x460f; 
0x0004a7c2: aam 0x8b; ja 0x4a802; mov edi, dword ptr [edi + 0x38]; ret; 
0x00140bdb: aam 0x8d; je 0x140c05; add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x39]; 
0x00092499: aam 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x00176238: aam 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00092c6a: aam 0xe6; call dword ptr [eax - 0x73]; 
0x0009b259: aam 0xe8; inc dword ptr [eax - 0x6d72fd1b]; jo 0x9b294; idiv bh; cmovne eax, edx; ret; 
0x000c8d7b: aam 0xf; lahf; ret; 
0x00143ba8: aam 0xfe; jmp dword ptr [esi - 0x70]; 
0x0005f741: aam 0xff; call dword ptr [eax - 0x75]; 
0x0005d248: aam 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005d5b8: aam 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00133bd9: aam 0xff; jmp dword ptr [esi - 0x70]; 
0x000b4978: aam 1; add byte ptr [eax], al; ret; 
0x00083ce0: aas; add byte ptr [eax], al; ja 0x83cf0; ret; 
0x00192982: aas; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000dd158: aas; add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xdd163; call eax; 
0x0018f856: aas; in al, dx; std; inc dword ptr [ecx + 0x967a6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015c558: aas; in eax, dx; inc dword ptr [ebx - 0x72afef3c]; xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0014c1b3: aas; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x0018f356: aas; int1; std; inc dword ptr [ecx + 0x96ca6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00192922: aas; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000e4370: aas; jne 0xe4389; mov eax, 1; ret; 
0x00124756: aas; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00092670: aas; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000ac39d: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014f918: aas; or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0018c48d: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006cff5: aas; sbb byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0x6d024; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x00086db8: aas; stc; call dword ptr [eax - 0x18]; 
0x00087808: aas; stc; call dword ptr [eax - 0x73]; 
0x0002ce6f: aas; test bh, dh; call dword ptr [ebp + 3]; 
0x001557fd: aas; test eax, 0xc483ffec; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008f014: adc ah, 0x82; stc; call dword ptr [eax - 0x18]; 
0x000b4977: adc ah, 1; add byte ptr [eax], al; ret; 
0x0018e8a2: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0015f123: adc ah, ch; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00050c6c: adc ah, ch; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x000f659d: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0007b1b3: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x0007c35f: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x860f; 
0x000c44d3: adc al, 0; add byte ptr [eax], al; add byte ptr [edx - 0x18], dl; ret 0xd4d; 
0x000ddc45: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddc45: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x00103581: adc al, 0; add byte ptr [eax], al; jne 0x103597; add esp, 0x1c; ret; 
0x00103a27: adc al, 0; add byte ptr [eax], al; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106187: adc al, 0; add byte ptr [eax], al; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd5: adc al, 0; add byte ptr [eax], al; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c55: adc al, 0; add byte ptr [eax], al; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x0010a3c0: adc al, 0; add byte ptr [eax], al; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x001143d8: adc al, 0; add byte ptr [eax], al; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115cea: adc al, 0; add byte ptr [eax], al; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d8a: adc al, 0; add byte ptr [eax], al; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115ff5: adc al, 0; add byte ptr [eax], al; jne 0x115fff; add esp, 0x1c; ret; 
0x0011715e: adc al, 0; add byte ptr [eax], al; jne 0x117177; add esp, 0x3c; ret; 
0x001171cf: adc al, 0; add byte ptr [eax], al; jne 0x1171d9; add esp, 0x1c; ret; 
0x001181ba: adc al, 0; add byte ptr [eax], al; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823f: adc al, 0; add byte ptr [eax], al; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0011ae79: adc al, 0; add byte ptr [eax], al; jne 0x11ae83; add esp, 0x1c; ret; 
0x0011c141: adc al, 0; add byte ptr [eax], al; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0011c942: adc al, 0; add byte ptr [eax], al; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00121e10: adc al, 0; add byte ptr [eax], al; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121f35: adc al, 0; add byte ptr [eax], al; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb5: adc al, 0; add byte ptr [eax], al; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x00122220: adc al, 0; add byte ptr [eax], al; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x00122960: adc al, 0; add byte ptr [eax], al; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e5: adc al, 0; add byte ptr [eax], al; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a70: adc al, 0; add byte ptr [eax], al; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122bc9: adc al, 0; add byte ptr [eax], al; jne 0x122bd3; add esp, 0x1c; ret; 
0x001232d3: adc al, 0; add byte ptr [eax], al; jne 0x1232e4; add esp, 0x7c; ret; 
0x00130c65: adc al, 0; add byte ptr [eax], al; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd5: adc al, 0; add byte ptr [eax], al; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d86: adc al, 0; add byte ptr [eax], al; jne 0x137d90; add esp, 0x2c; ret; 
0x0014243f: adc al, 0; add byte ptr [eax], al; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x0014249b: adc al, 0; add byte ptr [eax], al; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e7: adc al, 0; add byte ptr [eax], al; jne 0x1424f1; add esp, 0x1c; ret; 
0x00143d9e: adc al, 0; add byte ptr [eax], al; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e3e: adc al, 0; add byte ptr [eax], al; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143efe: adc al, 0; add byte ptr [eax], al; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f9e: adc al, 0; add byte ptr [eax], al; jne 0x143fcd; add esp, 0x11c; ret; 
0x0014422e: adc al, 0; add byte ptr [eax], al; jne 0x14427c; add esp, 0x1c; ret; 
0x00147938: adc al, 0; add byte ptr [eax], al; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba79: adc al, 0; add byte ptr [eax], al; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x0014df5c: adc al, 0; add byte ptr [eax], al; jne 0x14df66; add esp, 0x1c; ret; 
0x0015589c: adc al, 0; add byte ptr [eax], al; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015b8bf: adc al, 0; add byte ptr [eax], al; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb14: adc al, 0; add byte ptr [eax], al; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015ec3e: adc al, 0; add byte ptr [eax], al; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecde: adc al, 0; add byte ptr [eax], al; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015f030: adc al, 0; add byte ptr [eax], al; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a7: adc al, 0; add byte ptr [eax], al; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015feeb: adc al, 0; add byte ptr [eax], al; jne 0x15fef5; add esp, 0x4c; ret; 
0x0015ff5b: adc al, 0; add byte ptr [eax], al; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffcb: adc al, 0; add byte ptr [eax], al; jne 0x15ffd5; add esp, 0x4c; ret; 
0x0016003b: adc al, 0; add byte ptr [eax], al; jne 0x160045; add esp, 0x4c; ret; 
0x0016009e: adc al, 0; add byte ptr [eax], al; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600fe: adc al, 0; add byte ptr [eax], al; jne 0x160108; add esp, 0x4c; ret; 
0x0016016b: adc al, 0; add byte ptr [eax], al; jne 0x160175; add esp, 0x4c; ret; 
0x001601eb: adc al, 0; add byte ptr [eax], al; jne 0x1601f5; add esp, 0x4c; ret; 
0x001606d9: adc al, 0; add byte ptr [eax], al; jne 0x1606e3; add esp, 0x1c; ret; 
0x00160721: adc al, 0; add byte ptr [eax], al; jne 0x160754; add esp, 0x1c; ret; 
0x00161f22: adc al, 0; add byte ptr [eax], al; jne 0x161f2c; add esp, 0x2c; ret; 
0x00161fd3: adc al, 0; add byte ptr [eax], al; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c3: adc al, 0; add byte ptr [eax], al; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x0016236a: adc al, 0; add byte ptr [eax], al; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623fa: adc al, 0; add byte ptr [eax], al; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b9: adc al, 0; add byte ptr [eax], al; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x0016251e: adc al, 0; add byte ptr [eax], al; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625ba: adc al, 0; add byte ptr [eax], al; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dda: adc al, 0; add byte ptr [eax], al; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e6a: adc al, 0; add byte ptr [eax], al; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162efa: adc al, 0; add byte ptr [eax], al; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f8a: adc al, 0; add byte ptr [eax], al; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x00163642: adc al, 0; add byte ptr [eax], al; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x001636a2: adc al, 0; add byte ptr [eax], al; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x0016370b: adc al, 0; add byte ptr [eax], al; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x0016376b: adc al, 0; add byte ptr [eax], al; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168157: adc al, 0; add byte ptr [eax], al; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x0016992c: adc al, 0; add byte ptr [eax], al; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a4: adc al, 0; add byte ptr [eax], al; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016af67: adc al, 0; add byte ptr [eax], al; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b128: adc al, 0; add byte ptr [eax], al; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1ca: adc al, 0; add byte ptr [eax], al; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85f: adc al, 0; add byte ptr [eax], al; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016e0c2: adc al, 0; add byte ptr [eax], al; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb9: adc al, 0; add byte ptr [eax], al; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176715: adc al, 0; add byte ptr [eax], al; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x00021daf: adc al, 0; add byte ptr [eax], al; jne 0x21db9; add esp, 0x1c; ret; 
0x00036478: adc al, 0; add byte ptr [eax], al; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370be: adc al, 0; add byte ptr [eax], al; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x00037bac: adc al, 0; add byte ptr [eax], al; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d52: adc al, 0; add byte ptr [eax], al; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038104: adc al, 0; add byte ptr [eax], al; jne 0x38111; add esp, 0x12c; ret; 
0x00038724: adc al, 0; add byte ptr [eax], al; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a4: adc al, 0; add byte ptr [eax], al; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x0003882c: adc al, 0; add byte ptr [eax], al; jne 0x38839; add esp, 0x9c; ret; 
0x0003aaac: adc al, 0; add byte ptr [eax], al; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abdc: adc al, 0; add byte ptr [eax], al; jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aead: adc al, 0; add byte ptr [eax], al; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b40e: adc al, 0; add byte ptr [eax], al; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b461: adc al, 0; add byte ptr [eax], al; jne 0x3b46b; add esp, 0x1c; ret; 
0x0003b4be: adc al, 0; add byte ptr [eax], al; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b511: adc al, 0; add byte ptr [eax], al; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b55e: adc al, 0; add byte ptr [eax], al; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5b1: adc al, 0; add byte ptr [eax], al; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000484f8: adc al, 0; add byte ptr [eax], al; jne 0x48505; add esp, 0x42c; ret; 
0x00057d6c: adc al, 0; add byte ptr [eax], al; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057deb: adc al, 0; add byte ptr [eax], al; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x00058398: adc al, 0; add byte ptr [eax], al; jne 0x583af; add esp, 0x1c; ret; 
0x0007b332: adc al, 0; add byte ptr [eax], al; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x00081645: adc al, 0; add byte ptr [eax], al; jne 0x8166d; add esp, 0x2c; ret; 
0x000817ad: adc al, 0; add byte ptr [eax], al; jne 0x817db; add esp, 0x2c; ret; 
0x0008597e: adc al, 0; add byte ptr [eax], al; jne 0x85988; add esp, 0x2c; ret; 
0x0008a20a: adc al, 0; add byte ptr [eax], al; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a8: adc al, 0; add byte ptr [eax], al; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b62e: adc al, 0; add byte ptr [eax], al; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba8e: adc al, 0; add byte ptr [eax], al; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf8a: adc al, 0; add byte ptr [eax], al; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3da: adc al, 0; add byte ptr [eax], al; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f163: adc al, 0; add byte ptr [eax], al; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f3d3: adc al, 0; add byte ptr [eax], al; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65f: adc al, 0; add byte ptr [eax], al; jne 0x8f687; add esp, 0x2c; ret; 
0x0008f8cf: adc al, 0; add byte ptr [eax], al; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000914f9: adc al, 0; add byte ptr [eax], al; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092ad1: adc al, 0; add byte ptr [eax], al; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x0009307f: adc al, 0; add byte ptr [eax], al; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c2f9e: adc al, 0; add byte ptr [eax], al; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9a9e: adc al, 0; add byte ptr [eax], al; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b1e: adc al, 0; add byte ptr [eax], al; jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b69: adc al, 0; add byte ptr [eax], al; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bc9: adc al, 0; add byte ptr [eax], al; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000caa3f: adc al, 0; add byte ptr [eax], al; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x000cac95: adc al, 0; add byte ptr [eax], al; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cb059: adc al, 0; add byte ptr [eax], al; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d3572: adc al, 0; add byte ptr [eax], al; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5c02: adc al, 0; add byte ptr [eax], al; jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d66: adc al, 0; add byte ptr [eax], al; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f65: adc al, 0; add byte ptr [eax], al; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d7115: adc al, 0; add byte ptr [eax], al; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d719a: adc al, 0; add byte ptr [eax], al; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d7241: adc al, 0; add byte ptr [eax], al; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72ca: adc al, 0; add byte ptr [eax], al; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d93ba: adc al, 0; add byte ptr [eax], al; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a5: adc al, 0; add byte ptr [eax], al; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000ddd76: adc al, 0; add byte ptr [eax], al; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde16: adc al, 0; add byte ptr [eax], al; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000df7a7: adc al, 0; add byte ptr [eax], al; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e47: adc al, 0; add byte ptr [eax], al; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf7: adc al, 0; add byte ptr [eax], al; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b7: adc al, 0; add byte ptr [eax], al; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x000d7c37: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001071a9: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001140d2: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0005b340: adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0002b807: adc al, 0; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00022747: adc al, 0; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022727: adc al, 0; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021dc7: adc al, 0; add eax, 0x204237; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021747: adc al, 0; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021727: adc al, 0; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00021407: adc al, 0; add eax, 0x204bf7; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000236ce: adc al, 0; mov dword ptr [esp], ebx; call edi; 
0x0002279b: adc al, 0; mov dword ptr [esp], ebx; call esi; 
0x0002290e: adc al, 0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f9e: adc al, 0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000deb6d: adc al, 0; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xdeb80; ret; 
0x0002b810: adc al, 0x10; add byte ptr [eax], al; ret; 
0x000b787b: adc al, 0x11; aad 0x83; ret; 
0x0015919b: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x159190; pop ebx; ret; 
0x00155cae: adc al, 0x24; call dword ptr [eax + 0x10]; 
0x0016e49e: adc al, 0x24; ret; 
0x00155404: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00095f2e: adc al, 0x29; ret 0x4f8d; 
0x0009ddf0: adc al, 0x29; ret 0x748d; 
0x0009e45c: adc al, 0x29; ret 0x8b90; 
0x0009e204: adc al, 0x29; ret 0xb48d; 
0x00129ad9: adc al, 0x29; ret; 
0x00079137: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000b4b1b: adc al, 0x2c; ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0006b6ef: adc al, 0x30; sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x00129f39: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x000b6f3f: adc al, 0x31; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00090529: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00082dc3: adc al, 0x39; ret 0x1074; 
0x0011c791: adc al, 0x39; ret 0x1a77; 
0x00166255: adc al, 0x39; ret 0x870f; 
0x00124755: adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x001269a0: adc al, 0x42; and edx, 0x1000; mov eax, edx; ret; 
0x0012603e: adc al, 0x42; and edx, 0x100; mov eax, edx; ret; 
0x001268a0: adc al, 0x42; and edx, 0x2000; mov eax, edx; ret; 
0x001266a0: adc al, 0x42; and edx, 0x200; mov eax, edx; ret; 
0x001267a0: adc al, 0x42; and edx, 0x4000; mov eax, edx; ret; 
0x001264a0: adc al, 0x42; and edx, 0x400; mov eax, edx; ret; 
0x00126720: adc al, 0x42; and edx, 0x8000; mov eax, edx; ret; 
0x00126520: adc al, 0x42; and edx, 1; mov eax, edx; ret; 
0x001265a0: adc al, 0x42; and edx, 2; mov eax, edx; ret; 
0x00126820: adc al, 0x42; and edx, 4; mov eax, edx; ret; 
0x00126420: adc al, 0x42; and edx, 8; mov eax, edx; ret; 
0x00118e68: adc al, 0x44; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00118efa: adc al, 0x44; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0010ac32: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af7b: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af0a: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00154f3e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x00154f3e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0010a6d1: adc al, 0x51; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000df7be: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x001560ac: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x00155bb2: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00160289: adc al, 0x53; call dword ptr [eax]; 
0x000654b7: adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x00155289: adc al, 0x56; call dword ptr [eax + 4]; 
0x00081ac4: adc al, 0x56; push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000814bc: adc al, 0x5b; pop esi; jmp eax; 
0x000cbefc: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000748f3: adc al, 0x5b; pop esi; pop edi; ret; 
0x0002c6fa: adc al, 0x5b; pop esi; ret; 
0x000755bb: adc al, 0x5e; pop edi; jmp eax; 
0x0010fb12: adc al, 0x5e; pop edi; ret; 
0x000ab1f3: adc al, 0x5f; pop esi; pop ebx; ret; 
0x000ddfc6: adc al, 0x6a; add byte ptr [edx], ch; call 0xddf60; add esp, 0x1c; ret; 
0x001698c0: adc al, 0x6a; add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x0016a9c7: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00074541: adc al, 0x73; ret; 
0x0010876c: adc al, 0x74; fisttp dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x00086fbc: adc al, 0x7f; stc; call dword ptr [eax - 0x18]; 
0x0016e4e2: adc al, 0x81; setne al; movzx eax, al; ret; 
0x00083bcb: adc al, 0x83; clc; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x0014fdc9: adc al, 0x83; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503eb: adc al, 0x83; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x0003a5c4: adc al, 0x83; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x000ce6f1: adc al, 0x83; jle 0xce705; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x00156a25: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0007b337: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0007ac5b: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00025dfe: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003dc58: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0007a667: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00027200: adc al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008d5b4: adc al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f08a2: adc al, 0x83; ret 0x8901; 
0x0008a764: adc al, 0x83; ret; 
0x000b5565: adc al, 0x85; ror byte ptr [edi], 0x84; ret 0; 
0x000d6c83: adc al, 0x85; sal byte ptr [ebp - 0x2e], cl; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000314c9: adc al, 0x85; test byte ptr [edi], -0x7b; ret; 
0x0006db38: adc al, 0x86; jmp edx; 
0x0007474f: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00093f8b: adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00163240: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x000d6a2a: adc al, 0x89; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00121d75: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001220da: adc al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00079911: adc al, 0x89; jae 0x7992d; pop ebx; pop esi; pop edi; ret; 
0x001647fd: adc al, 0x89; push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f91a8: adc al, 0x89; push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x0007aeb9: adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x00080d99: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00162171: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00163adb: adc al, 0x89; ret 0x4489; 
0x001311c6: adc al, 0x89; ret 0x998b; 
0x0013f167: adc al, 0x89; ret 0xc085; 
0x00089ace: adc al, 0x89; ret 0xc74; 
0x00149ee5: adc al, 0x89; ret 0xc985; 
0x000ed091: adc al, 0x89; ret 0xd339; 
0x0019bd10: adc al, 0x89; ret 0xe283; 
0x0009c17c: adc al, 0x89; ret 0xf901; 
0x0003524e: adc al, 0x89; ret; 
0x00141e39: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013ed4b: adc al, 0x89; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x00070eda: adc al, 0x89; xchg byte ptr [eax + eax - 0x17aa0000], dl; stc; ret 0; 
0x0010a4ed: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100fd: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011cead: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012d: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213dd: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00093f88: adc al, 0x8b; inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00156a22: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0016ce12: adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x00021512: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00122297: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d7: adc al, 0x8b; inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b2386: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000aeef0: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x000937dc: adc al, 0x8b; je 0x93804; adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x000660ce: adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x001745f1: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0011a186: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b2e: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef6: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a426: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121766: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121566: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121446: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121606: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb6: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf46: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce16: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f21f: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00113bae: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009257d: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00107841: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000584ba: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001768c2: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123992: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000faed1: adc al, 0x8d; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x00150120: adc al, 0x8d; adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x0011e1f2: adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x000b50a3: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x001516b0: adc al, 0x8d; add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x00150790: adc al, 0x8d; and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x001529b0: adc al, 0x8d; and byte ptr [eax + 0x50fff962], 0x6a; push es; call 0x14f970; add esp, 0x1c; ret; 
0x0010aec7: adc al, 0x8d; and byte ptr [edi + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0011bf43: adc al, 0x8d; and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x0014ef23: adc al, 0x8d; cmp byte ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000fb17e: adc al, 0x8d; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x00079b80: adc al, 0x8d; dec edx; add ebx, ebp; mov esp, 0x7e0c828d; stc; call dword ptr [eax - 0x73]; 
0x000d62ce: adc al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00048e4a: adc al, 0x8d; je 0x48e74; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x000fb01a: adc al, 0x8d; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000f91ab: adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x0014fdd0: adc al, 0x8d; or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503f2: adc al, 0x8d; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x0007447b: adc al, 0x8d; pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00153ff0: adc al, 0x8d; sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x000d9165: adc al, 0x8d; sbb byte ptr [eax - 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00152ec0: adc al, 0x8d; sub byte ptr [edx + 0x6a50fff9], 1; call 0x14f970; add esp, 0x1c; ret; 
0x001542b0: adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00033bf9: adc al, 0x8d; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x00144065: adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x000fac91: adc al, 0x8d; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x0003eab6: adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000f9455: adc al, 0x8d; xchg dword ptr [esp + ebx*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x001179dd: adc al, 0x8d; xchg ecx, eax; sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x000f937e: adc al, 0x8d; xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x000f4e93: adc al, 0x8d; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x00154810: adc al, 0x8d; xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x000b56b0: adc al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x00172a48: adc al, 0x9b; stc; call dword ptr [eax - 0x73]; 
0x0012bc9a: adc al, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x0013de3c: adc al, 0xa8; stc; call dword ptr [eax - 0x18]; 
0x00163027: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x001633de: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000826ab: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001234ef: adc al, 0xbb; or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00072c98: adc al, 0xdb; cli; jmp dword ptr [esi - 0x70]; 
0x00072a58: adc al, 0xdd; cli; jmp dword ptr [esi - 0x70]; 
0x00082b23: adc al, 0xe8; pop ss; salc; stc; jmp dword ptr [ebp - 0x39]; 
0x0009c7e4: adc al, 0xeb; ret; 
0x0012554b: adc al, 0xf2; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00113a15: adc al, 0xf6; ret 0x7540; 
0x0008e10f: adc al, 0xf6; ret 0xf02; 
0x00056eb3: adc al, 0xf6; ret 0xf50; 
0x00094f7f: adc al, 0xf; test edx, esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c8955: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011d0fe: adc al, 0xf; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x00159d6f: adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0013bef3: adc al, 0xf; xchg esp, eax; ret; 
0x0011ead6: adc al, 0xff; je 0x11eafe; sbb byte ptr [edx], ch; call 0x1200a0; add esp, 0x1c; ret; 
0x001556ee: adc al, 0xff; je 0x155716; adc al, 0xff; je 0x15571a; je 0x155748; call dword ptr [ecx]; 
0x001556f2: adc al, 0xff; je 0x15571a; je 0x155748; call dword ptr [ecx]; 
0x00169890: adc al, 0xff; je 0x1698b8; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x0002150e: adc al, 0xff; je 0x21536; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003b65a: adc al, 0xff; je 0x3b682; sbb byte ptr [eax + 0x50], dl; call 0x3b670; add esp, 0x1c; ret; 
0x00073065: adc al, 0xff; jne 0x73075; push esi; call dword ptr [ebx + 0x2c]; 
0x00147571: adc al, 0xff; xor byte ptr [ebx - 0x17b3dba4], cl; ret; 
0x000b5706: adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x0003799a: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00088986: adc al, 1; add byte ptr [eax], al; ret; 
0x000a0d05: adc al, 1; cmp edx, ebx; je 0xa0d00; pop ebx; ret; 
0x0016305d: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000d5c2c: adc al, 1; je 0xd5c38; add esp, 0xc; ret; 
0x000d5d0c: adc al, 1; je 0xd5d18; add esp, 0xc; ret; 
0x001403bb: adc al, 1; ret; 
0x0002afc0: adc al, 1; xor bh, byte ptr [ecx]; ret; 
0x00139297: adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x001633ba: adc al, 4; mov eax, 1; ret; 
0x00167c02: adc al, 5; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012a712: adc al, 5; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x001442df: adc al, 8; pop ebx; mov eax, edx; ret; 
0x00047826: adc al, 9; ret 0x874; 
0x0010780a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e2aed: adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000e045d: adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x0004f9d8: adc al, byte ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00097383: adc al, byte ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ch; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000f9a93: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ea0db: adc al, byte ptr [ebp - 0x9dc8a01]; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000c8d05: adc al, byte ptr [ebx + 0x4827c]; lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x0011b39d: adc al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000d7e49: adc al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0013b8d6: adc al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x000aba8a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbea: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b161d: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa42a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa58a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaaa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa44a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5aa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abaca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa46a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab959: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa319: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ea: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7292: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a72d2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a72f2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f02: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a7042: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a7282: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a8e7d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001951c2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1463: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a7d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c72: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5aa7: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a2e92: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000abbe2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa582: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abc02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa5a2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abc22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa5c2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000abc42: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa5e2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7312: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2f22: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7332: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f42: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7352: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f62: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000aed72: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21d5: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed62: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab062: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000f3900: adc al, ch; cli; or al, 0xfc; inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x0007bfda: adc al, ch; mov ecx, 0x81000f24; ret; 
0x0012b688: adc al, ch; ret 0xef4a; 
0x0012a9c7: adc al, ch; ret; 
0x0011d0ea: adc al, ch; test eax, 0x81000513; ret; 
0x000d72ea: adc al, ch; test eax, 0x81000971; ret; 
0x0007e9ea: adc al, ch; test eax, 0x81000efa; ret; 
0x000717ea: adc al, ch; test eax, 0x81000fcc; ret; 
0x000b3335: adc al, dh; ret; 
0x0006ad10: adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006c0d9: adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x00176f17: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x001477f3: adc bh, bh; je 0x14781b; sbb al, 0xe8; ret; 
0x00155285: adc bh, bh; je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x000390a8: adc bh, bh; jne 0x390ac; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008ef33: adc bh, bh; jo 0x8ef3b; call dword ptr [eax]; 
0x0006ff1b: adc bh, byte ptr [ecx]; ret 0x420f; 
0x000591d6: adc bh, byte ptr [ecx]; ret 0x850f; 
0x00098af2: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x001300e6: adc bh, ch; jmp dword ptr [esi - 0x70]; 
0x00021c2d: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x00097f0e: adc bh, dh; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [edi + 2], 0; add dh, dh; ret; 
0x00125984: adc bh, dh; ret 0xff80; 
0x00143fc5: adc bh, dh; rol cl, 1; call 0xe8dc2aed; dec esi; sar dh, 1; jmp dword ptr [esi - 0x70]; 
0x0009b149: adc bl, bh; out 0xff, eax; cmovne eax, edx; ret; 
0x00035c98: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c07: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x00035c8d: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00117d4d: adc bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000ac8a2: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0018e19d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x000821a8: adc bl, ch; fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x0016f070: adc bl, ch; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0003a49b: adc bl, ch; lds ecx, ptr [ebp - 0x68bdf70]; call dword ptr [edx - 0x73]; 
0x0013ddd5: adc bl, ch; mov al, 0xe8; inc ebx; xor bh, bh; dec dword ptr [ebp - 0x6579f79]; call dword ptr [eax - 0x73]; 
0x0009983f: adc bl, ch; mov dh, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x00149c1f: adc bl, ch; mov ebp, 0xac88868d; stc; call dword ptr [eax - 0x73]; 
0x00138bcf: adc bl, ch; mov gs, eax; dec ecx; test bh, bh; jmp dword ptr [esi - 0x70]; 
0x00047ea2: adc bl, ch; ret 0x768d; 
0x0007e94b: adc bl, ch; ret 0x9066; 
0x0008298f: adc bl, ch; ret 0xb68d; 
0x0007ffe5: adc bl, ch; ret; 
0x0009955d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00155fa6: adc bl, ch; shr al, 0x72; mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0016339e: adc bl, ch; shr eax, cl; jp 0x163380; cld; jmp dword ptr [esi - 0x70]; 
0x000aeec6: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee87: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af048: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef48: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00130f3a: adc byte ptr [0x3ff], bh; ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x00036d37: adc byte ptr [0x80000000], ah; ret; 
0x0011a18a: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x00113b32: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00113a2e: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00109efa: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x0010a42a: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x00122d4a: adc byte ptr [eax + 0x151], bh; call dword ptr gs:[0x10]; 
0x0012176a: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x0012156a: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x0012105c: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x00113aae: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0003d14e: adc byte ptr [eax + 0x3901c083], dl; ret; 
0x0011c4df: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000b2383: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aeeed: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000b2407: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aef71: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000ac984: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ab1f0: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000ab274: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ab374: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00116faf: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x000411b9: adc byte ptr [eax + 0x76], 0xf9; call dword ptr [eax - 0x73]; 
0x0012144a: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x0012160a: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x0011cfba: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x0011cf4a: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x0011ce1a: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x00084f56: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085ca2: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d5c48: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x001174d2: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x00071833: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x001583f0: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0012448f: adc byte ptr [eax + 1], bh; ret; 
0x0011315d: adc byte ptr [eax + eax*8 - 0x137c1f8b], al; or al, 0x8d; xchg byte ptr [eax], ch; stc; call dword ptr [eax - 0x18]; 
0x0008d8ce: adc byte ptr [eax + eax*8 - 0x3fcef28c], al; add esp, 8; pop ebx; ret; 
0x001143fd: adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x0013de3b: adc byte ptr [eax + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00021700: adc byte ptr [eax - 0x45], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x0009370f: adc byte ptr [eax - 0x73], dl; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0011a424: adc byte ptr [eax - 0x73], dl; test dword ptr [edx + 0x4b], edi; stc; call dword ptr [eax - 1]; 
0x0012e6cb: adc byte ptr [eax - 0x73], dl; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x0015c55d: adc byte ptr [eax - 0x73], dl; xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0008e42e: adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0008d6f3: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000b9694: adc byte ptr [eax - 0x78f08206], al; ret 4; 
0x000b46b2: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0005768d: adc byte ptr [eax - 1], 0x30; call 0x58e80; add esp, 0x1c; ret; 
0x0007484d: adc byte ptr [eax - 1], 0x30; call 0x5f980; add esp, 0x1c; ret; 
0x0013627a: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012f187: adc byte ptr [eax], 0x2e; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0013791d: adc byte ptr [eax], 0xa6; stc; call dword ptr [eax + 0x55]; 
0x0009b297: adc byte ptr [eax], 0xd5; call 0x2ef339e; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009af27: adc byte ptr [eax], 0xd9; call 0x2ef302e; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0008405b: adc byte ptr [eax], ah; je 0x84068; add esp, 8; pop ebx; ret; 
0x000b3365: adc byte ptr [eax], ah; ret; 
0x0007f41e: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0008d601: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0011390e: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008d4b4: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000d5dcc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00108860: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x0010936e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0011386c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146c0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114710: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x001183a0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183f0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011c4e8: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011ede0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x00120960: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209b0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x00120a00: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x000377c1: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x00058470: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f0c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092b14: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef4: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000cadde: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000de01c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00156caa: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156c0e: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156be6: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00037786: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107da2: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x00103540: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x001131c2: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000dd279: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008271e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008c4f9: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0019407b: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0008f1bc: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00083996: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000681fe: adc byte ptr [eax], al; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x0018cdce: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006ba16: adc byte ptr [eax], al; add byte ptr [ebx - 0x4a00fb14], al; push esp; idiv edi; call dword ptr [esi - 1]; 
0x0016f15a: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00057a6a: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0010d398: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0016f0e9: adc byte ptr [eax], al; add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x0002e448: adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x000dfb87: adc byte ptr [eax], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x0002469a: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x8b370; add esp, 0x1c; ret; 
0x0005cabb: adc byte ptr [eax], al; add dh, al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000829f3: adc byte ptr [eax], al; inc eax; add byte ptr [eax], al; ret; 
0x00116e2c: adc byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012591c: adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0011edcd: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012094d: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001209ed: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012099d: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00116b48: adc byte ptr [eax], al; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00118433: adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00180c54: adc byte ptr [eax], bh; ret 0x840f; 
0x00156d0d: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001438cf: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b3355: adc byte ptr [eax], dl; ret; 
0x0011d425: adc byte ptr [ebp + 0x1b840fc0], al; or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0011d240: adc byte ptr [ebp + 0x1f840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011d132: adc byte ptr [ebp + 0x25840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0007ca3d: adc byte ptr [ebp + 0x292678c0], al; ret; 
0x000c3e4c: adc byte ptr [ebp + 0x2c928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x0008306a: adc byte ptr [ebp + 0x314174d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0014dac6: adc byte ptr [ebp + 0x31840fc0], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x000c3f02: adc byte ptr [ebp + 0x34928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00042aae: adc byte ptr [ebp + 0x391574d2], al; ret; 
0x001026c5: adc byte ptr [ebp + 0x391678db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000c2eb9: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x000c2dd0: adc byte ptr [ebp + 0x391b74db], al; ret; 
0x00117e0f: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x0010d9f3: adc byte ptr [ebp + 0x393374c0], al; ret; 
0x000fbe65: adc byte ptr [ebp + 0x3a840fc0], al; add al, 0; add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011d3ba: adc byte ptr [ebp + 0x40840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0007b44f: adc byte ptr [ebp + 0x4889014a], cl; add al, 0xf; mov dh, 2; ret; 
0x00077bb4: adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0015359b: adc byte ptr [ebp + 0x4e0f0347], cl; ret 0xec83; 
0x0011d168: adc byte ptr [ebp + 0x4f840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x00157ba1: adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x00039046: adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000996df: adc byte ptr [ebp + 0x5b2e74c0], al; pop esi; pop edi; ret; 
0x0003a8a4: adc byte ptr [ebp + 0x5bc775db], al; pop esi; pop edi; ret; 
0x0019d1bc: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x000fdcfa: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x0013d860: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x000f667d: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00119c21: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000ac87d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000ac89f: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000ac8dd: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000ac961: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000aca71: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0011d2e2: adc byte ptr [ebp + 0x60840fc0], al; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0002f832: adc byte ptr [ebp + 0x63840fc0], al; or bh, bh; call dword ptr [edx + 0x52]; 
0x0014ac50: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x0008217c: adc byte ptr [ebp + 0xf0f75d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x000871bc: adc byte ptr [ebp + 9], dh; add esp, 0xc; ret; 
0x00163973: adc byte ptr [ebp - 0x107af040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x0011d40b: adc byte ptr [ebp - 0x107bf040], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x0013dd29: adc byte ptr [ebp - 0x146f8b40], al; ret; 
0x00092c66: adc byte ptr [ebp - 0x192baf7d], cl; call dword ptr [eax - 0x73]; 
0x00087bea: adc byte ptr [ebp - 0x19e51f80], cl; call dword ptr [eax - 0x73]; 
0x000a9633: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0011d4db: adc byte ptr [ebp - 0x1e7bf040], al; or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x001377a1: adc byte ptr [ebp - 0x1ff7d], cl; jmp dword ptr [esi + 0x3d]; 
0x000f0715: adc byte ptr [ebp - 0x2b7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000c67c0: adc byte ptr [ebp - 0x35f343], cl; call dword ptr [eax - 0x48]; 
0x0004f941: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x00033060: adc byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 0x75]; 
0x00153c9d: adc byte ptr [ebp - 0x3b7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0011d3f0: adc byte ptr [ebp - 0x3b7bf040], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x001579e9: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00157464: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0014cd61: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00168917: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x001518af: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x0013b121: adc byte ptr [ebp - 0x4177f040], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000cc25a: adc byte ptr [ebp - 0x427bf040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x00063d0b: adc byte ptr [ebp - 0x4b7bf040], al; or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x000dfee8: adc byte ptr [ebp - 0x4e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x18f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x00104158: adc byte ptr [ebp - 0x4e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x0013f88e: adc byte ptr [ebp - 0x567bf040], al; add al, 0; add byte ptr [esi - 0x3f], ah; ret; 
0x00133c44: adc byte ptr [ebp - 0x57af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012f95d: adc byte ptr [ebp - 0x657bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x0013923f: adc byte ptr [ebp - 0x659037e], cl; call dword ptr [eax - 0x73]; 
0x001374a4: adc byte ptr [ebp - 0x6599f79], cl; call dword ptr [eax - 0x73]; 
0x001379ab: adc byte ptr [ebp - 0x659c37f], cl; dec dword ptr [ebp - 0x68d4b57]; call dword ptr [eax + 0x55]; 
0x0013791b: adc byte ptr [ebp - 0x659ef80], cl; call dword ptr [eax + 0x55]; 
0x0013781b: adc byte ptr [ebp - 0x65a1779], cl; call dword ptr [eax - 0x73]; 
0x00137598: adc byte ptr [ebp - 0x65a3779], cl; call dword ptr [eax - 0x73]; 
0x00100b44: adc byte ptr [ebp - 0x6616779], cl; call dword ptr [eax - 0x73]; 
0x000ffc8e: adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax + 0x68]; 
0x000ffa4d: adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax - 0x73]; 
0x00100d6f: adc byte ptr [ebp - 0x6618f79], cl; call dword ptr [eax - 0x73]; 
0x0011d19e: adc byte ptr [ebp - 0x67bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0008226a: adc byte ptr [ebp - 0x6818f80], cl; call dword ptr [eax - 0x18]; 
0x0015e7e9: adc byte ptr [ebp - 0x69bdb79], cl; call dword ptr [eax - 0x73]; 
0x00161d2e: adc byte ptr [ebp - 0x69c1f7a], cl; call dword ptr [eax - 0x73]; 
0x001518a0: adc byte ptr [ebp - 0x69dbe7f], cl; call dword ptr [eax - 0x18]; 
0x0014e9db: adc byte ptr [ebp - 0x69e767f], cl; call dword ptr [eax + 0x53]; 
0x0014ebc0: adc byte ptr [ebp - 0x69e7f7f], cl; call dword ptr [eax + 0x53]; 
0x0014eb50: adc byte ptr [ebp - 0x69e867f], cl; call dword ptr [eax + 0x53]; 
0x0014ee56: adc byte ptr [ebp - 0x69ebb68], cl; call dword ptr [ebx - 0x73]; 
0x00137894: adc byte ptr [ebp - 0x6a42680], cl; call dword ptr [eax - 0x73]; 
0x00137986: adc byte ptr [ebp - 0x6a43b7f], cl; call dword ptr [eax - 0x73]; 
0x001375e8: adc byte ptr [ebp - 0x6a44d80], cl; call dword ptr [eax + 0x6a]; 
0x0013725d: adc byte ptr [ebp - 0x6a45b7d], cl; call dword ptr [eax - 1]; 
0x001372ea: adc byte ptr [ebp - 0x6a48580], cl; call dword ptr [eax + 0x6a]; 
0x001379fb: adc byte ptr [ebp - 0x6a4a379], cl; call dword ptr [eax - 0x73]; 
0x001377d6: adc byte ptr [ebp - 0x6a4cc80], cl; call dword ptr [eax - 0x42]; 
0x001378bb: adc byte ptr [ebp - 0x6a8877d], cl; call dword ptr [eax + 0x6a]; 
0x00137565: adc byte ptr [ebp - 0x6b5fd80], cl; call dword ptr [eax + 0x6a]; 
0x0011d183: adc byte ptr [ebp - 0x6b7bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x001179ad: adc byte ptr [ebp - 0x6d1786f], cl; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x00137618: adc byte ptr [ebp - 0x6d17880], cl; call dword ptr [eax + 0x56]; 
0x0014efac: adc byte ptr [ebp - 0x6d5a47a], cl; call dword ptr [eax + 0x53]; 
0x0011d291: adc byte ptr [ebp - 0x6d7bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x001603ba: adc byte ptr [ebp - 0x6fffd98c], cl; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0008df1b: adc byte ptr [ebp - 0x72bf8b40], al; inc esi; inc dword ptr [ebx - 0x69f00208]; ret; 
0x001374c7: adc byte ptr [ebp - 0x72dd8740], al; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [ebp - 0x77]; 
0x0015604b: adc byte ptr [ebp - 0x74728b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0015e4b8: adc byte ptr [ebp - 0x749c8b40], al; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0011f928: adc byte ptr [ebp - 0x74cc8b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000de36a: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x00162e19: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x001623a9: adc byte ptr [ebp - 0x74efdbac], cl; inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x00193dad: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00091295: adc byte ptr [ebp - 0x76a98125], al; ret; 
0x0014f78c: adc byte ptr [ebp - 0x76dc8b40], al; ret 0x488d; 
0x001244d7: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x000d9b01: adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x0018cdc7: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00187cc3: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000a48cc: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x00139563: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019d32b: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019cc7c: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00159377: adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x00155e13: adc byte ptr [ebp - 0x7c388b40], al; ret; 
0x0015694f: adc byte ptr [ebp - 0x7c398b40], al; ret; 
0x00155124: adc byte ptr [ebp - 0x7c4d8b40], al; in al, dx; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x001763c0: adc byte ptr [ebp - 0x7c548b40], al; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x001564f3: adc byte ptr [ebp - 0x7c568b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00156b98: adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x001569e9: adc byte ptr [ebp - 0x7c5e8b40], al; ret; 
0x0015864a: adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x000de387: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x0015c7cb: adc byte ptr [ebp - 0x7c9f8a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x00169666: adc byte ptr [ebp - 0x7cb08b40], al; in al, dx; or byte ptr [ebp - 0x64c3345], cl; call dword ptr [edi + 0x56]; 
0x001477ff: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x00146e3f: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x001191fd: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x00160fd4: adc byte ptr [ebp - 0x7cc88b40], al; in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000faca1: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000246f9: adc byte ptr [ebp - 0x7ccd8b40], al; ret; 
0x00116bc2: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x00159432: adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x0012aca0: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x0012ec5b: adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0015867c: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x0014cd4a: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x0004869b: adc byte ptr [ebp - 0x7cef8b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d01d: adc byte ptr [ebp - 0x7cf18a2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011313d: adc byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011926d: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x0019cfba: adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x000374c7: adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016d4b8: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016e611: adc byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016808a: adc byte ptr [ebp - 0x7cf68740], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00156a4a: adc byte ptr [ebp - 0x7cf68a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002ddfa: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0012ff42: adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00122b43: adc byte ptr [ebp - 0x7cf78740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0007bb03: adc byte ptr [ebp - 0x7cf78b40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00037756: adc byte ptr [ebp - 0x7cfa8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00043d6b: adc byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x001415e8: adc byte ptr [ebp - 0x7d], ah; cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x0011d3d5: adc byte ptr [ebp - 0x7f7bf040], al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x000cbd26: adc byte ptr [ebp - 0x7fd38a2e], al; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0019ce02: adc byte ptr [ebp - 0x8924f7d], cl; call dword ptr [eax - 1]; 
0x001462b9: adc byte ptr [ebp - 0xb98b40], al; je 0x1462e5; xor al, 0x89; ret; 
0x00139704: adc byte ptr [ebp - 0xc7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x00155082: adc byte ptr [ebp - 0xd106f7d], cl; call dword ptr [eax - 0x73]; 
0x0012798c: adc byte ptr [ebp - 0xd7af040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00139ef2: adc byte ptr [ebp - 0xec14f7d], cl; call dword ptr [eax - 0x73]; 
0x0002409c: adc byte ptr [ebp - 0xf7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0015dc86: adc byte ptr [ebp - 0xf7bf040], al; add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0009958d: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x99588; xor eax, eax; ret; 
0x0015f108: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000937e0: adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x00049374: adc byte ptr [ebx + 0x128244c], cl; ret; 
0x000d78a4: adc byte ptr [ebx + 0x167f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0008b11f: adc byte ptr [ebx + 0x1b7501fa], al; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00157b2b: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000d782e: adc byte ptr [ebx + 0x1c7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000d763d: adc byte ptr [ebx + 0x1d7f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003acd3: adc byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x001682da: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00087381: adc byte ptr [ebx + 0x217f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00168500: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016824e: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000813fe: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00144f1d: adc byte ptr [ebx + 0x390c244c], cl; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000d7bbd: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x00055de1: adc byte ptr [ebx + 0x3918245c], cl; ret; 
0x000e8a20: adc byte ptr [ebx + 0x39242454], cl; ret; 
0x00055f61: adc byte ptr [ebx + 0x3924245c], cl; ret; 
0x00139291: adc byte ptr [ebx + 0x438b1853], cl; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x0003b403: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b456: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x0015e7d5: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0011df38: adc byte ptr [ebx + 0x468801e0], al; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x0015f6fc: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000f898f: adc byte ptr [ebx + 0x4b8d10c6], al; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x00170914: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x0015f10d: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00162e1d: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 0x24]; 
0x001623ad: adc byte ptr [ebx + 0x51520441], cl; call dword ptr [eax + 4]; 
0x00094e25: adc byte ptr [ebx + 0x574fff8], al; add esp, 0xc; ret; 
0x000b31a2: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b2138: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aecf5: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000776b5: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x000227b8: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000218b7: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0002f505: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000945a6: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00081051: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00023c3f: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000ef2df: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00138dd6: adc byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00029458: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x001570fe: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x0005662a: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002ba96: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008fe4e: adc byte ptr [ebx + 0x5e], bl; ret; 
0x001606d1: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0003b406: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b459: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x00021da7: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x001171c7: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x00170bb1: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x0003b4b6: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b509: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b556: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5a9: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000c9b16: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d356a: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bfa: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x00161f1a: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x00130c5d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130ccd: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d7e: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0003aaa4: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd4: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00085976: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b626: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba86: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf82: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0015ff53: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160033: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160096: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f6: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160163: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x0015fee3: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x0010298a: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0010dcc7: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f567: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0011c273: adc byte ptr [ebx + 0x74c08500], cl; inc esi; call eax; 
0x0008b37d: adc byte ptr [ebx + 0xd7402e2], al; xor eax, eax; ret; 
0x0019ccde: adc byte ptr [ebx + 0xff483], cl; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x8949f6d], cl; call dword ptr [edx + 0x50]; 
0x000fdbbe: adc byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011570f: adc byte ptr [ebx - 0x13347], cl; jmp dword ptr [ebp - 0x75]; 
0x001193e9: adc byte ptr [ebx - 0x13362], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x00166e3e: adc byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0007b25b: adc byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0003d523: adc byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x001321ba: adc byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x00176496: adc byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x000dd95b: adc byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x001423ae: adc byte ptr [ebx - 0x13b77], cl; jmp dword ptr [ebp - 0x75]; 
0x0016ac77: adc byte ptr [ebx - 0x14b80], cl; jmp dword ptr [ebp - 0x77]; 
0x0014f6e7: adc byte ptr [ebx - 0x14f3dbac], cl; ret 0x9066; 
0x0004a4fd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x0016853d: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x0012830d: adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x001082a6: adc byte ptr [ebx - 0x16a4f73c], al; sar dh, 0xff; inc dword ptr [ebx - 0x7c72f314]; sbb al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x000c0188: adc byte ptr [ebx - 0x16d7dbb4], cl; leave; in eax, 0xff; dec dword ptr [ebx - 0x7ab3dbbc]; ror byte ptr [edi], 0x84; ret 0xffea; 
0x00153f83: adc byte ptr [ebx - 0x17d3dba4], cl; ret; 
0x000d5b58: adc byte ptr [ebx - 0x1916ef90], cl; idiv edi; call dword ptr [ecx + 0x50]; 
0x0002e179: adc byte ptr [ebx - 0x1cb6b], cl; inc dword ptr [ecx]; ret 0xd139; 
0x00157346: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x0011740f: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0004f207: adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000c4d18: adc byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000776b2: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x00155bac: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00145120: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x00155036: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x155047; sub esp, 0xc; push esi; call eax; 
0x00155504: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x155515; sub esp, 0xc; push esi; call eax; 
0x00156513: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x156524; sub esp, 0xc; push esi; call eax; 
0x001567db: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15666a; sub esp, 0xc; push edi; call eax; 
0x001568bc: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1568cd; sub esp, 0xc; push edi; call eax; 
0x0015ac19: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15ac2a; sub esp, 0xc; push esi; call eax; 
0x0015c31e: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15c32f; sub esp, 0xc; push edi; call eax; 
0x0015d6c7: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15d6d8; sub esp, 0xc; push ebp; call eax; 
0x0002ddf7: adc byte ptr [ebx - 0x3f7aefba], cl; je 0x2de08; sub esp, 0xc; push esi; call eax; 
0x0008b34b: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x8b365; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009958f: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0x99588; xor eax, eax; ret; 
0x0007f774: adc byte ptr [ebx - 0x3f8a0008], al; add esp, 4; pop ebx; pop esi; ret; 
0x000835ea: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0008fdc6: adc byte ptr [ebx - 0x3fe6fe08], al; pop ebx; pop esi; pop edi; ret; 
0x0011ce51: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001213e1: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ceb1: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011cd81: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a4f1: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e17e4: adc byte ptr [ebx - 0x4937b], cl; dec dword ptr [ecx]; ret 0x840f; 
0x0014484a: adc byte ptr [ebx - 0x4c72f314], al; fistp dword ptr [esi - 7]; call dword ptr [esi - 0x18]; 
0x0014481e: adc byte ptr [ebx - 0x4c72f314], al; into; pop esi; stc; call dword ptr [esi - 0x18]; 
0x000640e7: adc byte ptr [ebx - 0x50f7b], cl; call dword ptr [edx - 1]; 
0x000c66f8: adc byte ptr [ebx - 0x57ccf16], al; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x00099ff0: adc byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x00153f07: adc byte ptr [ebx - 0x6bf00008], al; ret 0xe2e9; 
0x00071906: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x00066eba: adc byte ptr [ebx - 0x6bf0f505], al; ret; 
0x00163825: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x001170df: adc byte ptr [ebx - 0x723cf33c], al; je 0x11710d; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0011703d: adc byte ptr [ebx - 0x723cf33c], al; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x39]; 
0x0012bdbc: adc byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0012bdf9: adc byte ptr [ebx - 0x72affb14], al; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00079b7c: adc byte ptr [ebx - 0x72ebdbbc], cl; dec edx; add ebx, ebp; mov esp, 0x7e0c828d; stc; call dword ptr [eax - 0x73]; 
0x0009a8a3: adc byte ptr [ebx - 0x72f3db94], cl; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x0007bdb6: adc byte ptr [ebx - 0x73f0ff21], al; mov al, byte ptr [0x39000001]; ret 0x448b; 
0x000f5946: adc byte ptr [ebx - 0x74bbdbb4], cl; sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x00092579: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00121878: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121478: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108008: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a548: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a488: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109328: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113188: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea48: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121528: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121228: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a028: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121318: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121348: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9748: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121598: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd268: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e88: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de038: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de068: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e58: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a148: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a118: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce78: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda8: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000755b7: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00075717: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007c241: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00151b43: adc byte ptr [ebx - 0x76b3db94], cl; ret; 
0x00122358: adc byte ptr [ebx - 0x76bfdbbc], cl; inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122c27: adc byte ptr [ebx - 0x76c3dbbc], cl; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0019701f: adc byte ptr [ebx - 0x76cfdb8c], cl; ret 0x448b; 
0x0010fa83: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00167d92: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x0007f185: adc byte ptr [ebx - 0x76f7dbb4], cl; ret; 
0x00103509: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00075beb: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00138292: adc byte ptr [ebx - 0x7972f314], al; subps xmm7, xmm1; call dword ptr [eax - 0x18]; 
0x000a5183: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0003016d: adc byte ptr [ebx - 0x7a72f714], al; cmp al, 0x73; stc; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00067b0d: adc byte ptr [ebx - 0x7af00008], al; ret 0xfffa; 
0x00061f79: adc byte ptr [ebx - 0x7af09308], al; std; fdivp st(7); jmp dword ptr [ebp - 0x77]; 
0x000be60f: adc byte ptr [ebx - 0x7af0e00d], al; adc dword ptr [esi], 0x948b0000; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00117366: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x00117385: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x001697ab: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x00145d17: adc byte ptr [ebx - 0x7bf00006], al; daa; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00065411: adc byte ptr [ebx - 0x7bf00008], al; movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00059d52: adc byte ptr [ebx - 0x7bf00008], al; ret; 
0x000df5fa: adc byte ptr [ebx - 0x7c], bl; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000873bd: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x00037862: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00198134: adc byte ptr [ebx - 0x7cfb4dbc], cl; ret 0xd304; 
0x001674ea: adc byte ptr [ebx - 0xdb7b], cl; jmp dword ptr [ebp - 0x77]; 
0x00140c68: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00099a8b: adc byte ptr [ebx - 1], 0xff; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0009b199: adc byte ptr [ebx], 0xe8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00124f57: adc byte ptr [ebx], bh; and dword ptr [esi + eax*2], 0xb730000; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0007453e: adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x00073a20: adc byte ptr [ebx], bh; push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00157c62: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000dfb83: adc byte ptr [ecx + 0x1000fb], al; add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x00037997: adc byte ptr [ecx + 0x114c4], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000d7d3f: adc byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00046cb7: adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], cl; ret; 
0x00043b77: adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000e89f0: adc byte ptr [ecx + 0x244489c2], cl; sbb byte ptr [ecx], bh; ret; 
0x0002f3ca: adc byte ptr [ecx + 0x246c8be8], cl; add al, 0x89; ret 0x748d; 
0x00100eba: adc byte ptr [ecx + 0x247c8b07], cl; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax - 0x73]; 
0x00124d67: adc byte ptr [ecx + 0x260b3], cl; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c0112: adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x001561c7: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000b2467: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aefb4: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000b2497: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aefd4: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x000ac9f4: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000745e5: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x0011742b: adc byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x0003ae39: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000c9d9b: adc byte ptr [ecx + 0x5168247c], cl; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00161ff9: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x00079b55: adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00074481: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00080e41: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00073902: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0016e289: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x00051b68: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x00099628: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x000cbb4c: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x0008fec7: adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x0008fe4b: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000ab2b4: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ab2d4: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x0008ae0b: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x001462fd: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00070f4d: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00107ee6: adc byte ptr [ecx + 0x74c085c7], cl; adc ecx, dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x7d]; 
0x0014bf1d: adc byte ptr [ecx + 0x75c08503], cl; ret; 
0x00057a37: adc byte ptr [ecx + 0x78c085c3], cl; cmp al, byte ptr [ebx - 0x7972f714]; jnp 0x57a76; stc; call dword ptr [eax + 0x53]; 
0x0013118d: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00040b11: adc byte ptr [ecx + 0xfc739c1], cl; test byte ptr [ebx + eax], dl; add byte ptr [ecx], bh; ret; 
0x0013a82b: adc byte ptr [ecx + 0xfcc83], cl; add bl, ch; or dword ptr [ebp - 0x72ffd98c], 0xfffbc8b5; jmp dword ptr [esi - 0x70]; 
0x00114c93: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x000cddd1: adc byte ptr [ecx - 0x10b7b], cl; inc dword ptr [ebp + 0x50840fc0]; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00130d9f: adc byte ptr [ecx - 0x16f3dbb4], cl; inc edi; mov esp, esi; jmp dword ptr [esi - 0x70]; 
0x0012f75f: adc byte ptr [ecx - 0x16f3dbb4], cl; pop ss; test ebx, esi; jmp dword ptr [esi - 0x70]; 
0x00130d3f: adc byte ptr [ecx - 0x16f3dbb4], cl; xlatb; xchg esp, esi; jmp dword ptr [esi - 0x70]; 
0x000a11c7: adc byte ptr [ecx - 0x16f3dbbc], cl; syscall; 
0x0008dcb2: adc byte ptr [ecx - 0x18], dl; aaa; ret; 
0x0003a802: adc byte ptr [ecx - 0x3fcef7ba], cl; pop ebx; pop esi; pop edi; ret; 
0x001411e8: adc byte ptr [ecx - 0x44f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013862f: adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001597a4: adc byte ptr [ecx - 0x59b1739], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x0005e19b: adc byte ptr [ecx - 0x59f7b], cl; inc dword ptr [ebx - 0x7af00008]; scasd eax, dword ptr es:[edi]; or al, byte ptr [eax]; add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005f5f1: adc byte ptr [ecx - 0x59f7b], cl; inc dword ptr [ebx - 0x7af0fe40]; out dx, eax; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000fb6d1: adc byte ptr [ecx - 0x70f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00070fb8: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00089aca: adc byte ptr [ecx - 0x76ebdba4], cl; ret 0xc74; 
0x00122cb1: adc byte ptr [ecx - 0x76ebdba4], cl; ret; 
0x001219e2: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [esi + eax*8 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x0003eb6f: adc byte ptr [ecx - 0x7aafdbbc], cl; ror byte ptr [edi], 0x84; ret 0x24; 
0x0002c7e4: adc byte ptr [ecx - 0x7ae7dba4], cl; sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x00099117: adc byte ptr [ecx - 0x7c3fcefe], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002b625: adc byte ptr [ecx - 0x7cfbdb84], cl; ret 0x8d01; 
0x00066c2d: adc byte ptr [ecx - 0x7ff0efa3], cl; mov ebp, 0x85fffff8; fisttp dword ptr [edi]; mov dword ptr [ebp - 0x1600000c], ecx; ret; 
0x00077abc: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00077bba: adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00156059: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x156071; push ebx; call dword ptr [esi + 0x14]; 
0x00125467: adc byte ptr [ecx - 0xbf7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001951ff: adc byte ptr [ecx - 0xc3fce3e], cl; bsf edx, edx; add eax, edx; ret; 
0x00167310: adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00051aeb: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x00143b9e: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00081e06: adc byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000b2766: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x00095f23: adc byte ptr [ecx], al; ret 0x48d; 
0x000769ab: adc byte ptr [ecx], al; ret 0x532b; 
0x000b2f85: adc byte ptr [ecx], al; ret 0x67c; 
0x0006a870: adc byte ptr [ecx], al; ret; 
0x000f9a27: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003a65f: adc byte ptr [ecx], bh; ret 0x1177; 
0x00129b46: adc byte ptr [ecx], bh; ret 0x1d77; 
0x000974d7: adc byte ptr [ecx], bh; ret 0x3a73; 
0x0015a0c4: adc byte ptr [ecx], bh; ret 0x4e0f; 
0x0013929a: adc byte ptr [ecx], bh; ret 0x6273; 
0x000612e5: adc byte ptr [ecx], bh; ret 0x840f; 
0x0006bd65: adc byte ptr [ecx], bh; ret 0x850f; 
0x000b9842: adc byte ptr [ecx], bh; ret 0xca19; 
0x0003a670: adc byte ptr [ecx], bh; ret 0xef76; 
0x00065c57: adc byte ptr [ecx], bh; ret 0xf475; 
0x00021805: adc byte ptr [ecx], bh; ret; 
0x000c8dd8: adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x000759cf: adc byte ptr [ecx], bh; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00144f97: adc byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x548b; 
0x0007e642: adc byte ptr [ecx], bh; sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x00099649: adc byte ptr [ecx], ch; ret 0x408b; 
0x0003af70: adc byte ptr [ecx], ch; ret 0xc269; 
0x0009d225: adc byte ptr [ecx], ch; ret 0xc8d; 
0x00192f5d: adc byte ptr [ecx], ch; ret 0xe183; 
0x00079c59: adc byte ptr [ecx], ch; ret 0xea39; 
0x0007cd32: adc byte ptr [ecx], ch; ret 0xfa39; 
0x000339ab: adc byte ptr [ecx], ch; ret; 
0x000b9b09: adc byte ptr [ecx], ch; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0009ad67: adc byte ptr [ecx], cl; ret 0x448b; 
0x000b72c6: adc byte ptr [ecx], cl; ret 0x5489; 
0x00085425: adc byte ptr [ecx], cl; ret 0x9675; 
0x00085115: adc byte ptr [ecx], cl; ret 0x9a75; 
0x000d7d1b: adc byte ptr [ecx], cl; ret 0xffb8; 
0x0009ca99: adc byte ptr [ecx], cl; ret; 
0x0013e0cd: adc byte ptr [ecx], dh; fucomi st(3); ret 0xb48d; 
0x0009a1d2: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00075ac3: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0012d5ad: adc byte ptr [ecx], dh; rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00129f5e: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0003d433: adc byte ptr [ecx], dh; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00198ad3: adc byte ptr [ecx], dh; ror byte ptr [ecx], cl; fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x00144331: adc byte ptr [ecx], dh; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x000741e4: adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x000a8eff: adc byte ptr [edi + 0x5b], bl; ret; 
0x000ab16d: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a16ba: adc byte ptr [edi + 0x5e], bl; ret; 
0x0011d0f2: adc byte ptr [edi + 0x7c830010], cl; and al, 0x18; add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0018dcf5: adc byte ptr [edi + esi*8 + 0x5dc829ff], 0x5b; ret; 
0x0018b4e1: adc byte ptr [edi + esi*8 - 0x7c7b7401], 0x80; xchg esp, eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00193e7d: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x0009a083: adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x000a1363: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x00168822: adc byte ptr [edi], cl; mov bh, 0x99; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x00054e63: adc byte ptr [edi], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x000b2c92: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x00192e2d: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000829ec: adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0012b201: adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x00022f16: adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x000ac3c0: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000aad1d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x00082c72: adc byte ptr [edi], cl; test dword ptr [edi - 0x77000000], eax; ret 0xca83; 
0x00193e02: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000a48cf: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x00193ce2: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000c8940: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000a8cd0: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001920bb: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0018f977: adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x0018e4d0: adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x0019c8f0: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0019c872: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xd589; 
0x00198d9d: adc byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000fb15a: adc byte ptr [edi], cl; xchg esp, eax; ret 0x6889; 
0x0013b65b: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x00055b80: adc byte ptr [edi], cl; xchg esp, eax; ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x0011e1d8: adc byte ptr [edx + 0x408bfff6], ah; jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x00162df1: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 0x20]; 
0x00162499: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00162381: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x00162b2f: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x0015bacb: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x00162201: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0016219e: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x0013e24d: adc byte ptr [edx + 0x56], dl; call eax; 
0x0013e181: adc byte ptr [edx + 0x57], dl; call eax; 
0x000389e6: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x3c560; add esp, 0x1c; ret; 
0x00118a28: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00070f76: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x00030536: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x304e0; add esp, 0x1c; ret; 
0x00030516: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x00156a86: adc byte ptr [edx + 8], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x162670; add esp, 0x1c; ret; 
0x000f9ae6: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0009bab3: adc byte ptr [edx + ebx - 0x7d], dh; ret; 
0x000f1916: adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0007a77d: adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00155a62: adc byte ptr [edx - 0x73], dl; xchg esi, eax; add ch, 0xf3; call dword ptr [edx - 0x73]; 
0x000faed3: adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0015501c: adc byte ptr [edx], bl; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000dc106: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0xdc120; add esp, 0x1c; ret; 
0x000385e6: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38570; add esp, 0x1c; ret; 
0x00073676: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x00155380: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0009a383: adc byte ptr [esi + 0x440fffe7], dh; ret 0x66c3; 
0x0007571b: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00163499: adc byte ptr [esi + 0xc], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0018e8b7: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0018bb53: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00192a5a: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00192a72: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2c2d: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000ea282: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x0016c0ae: adc byte ptr [esi - 0x3f], ah; call 0x1015fcb9; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000b2438: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aef95: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ac9a5: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ab295: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0009b2a1: adc byte ptr [esi - 0xa], 0xff; cmovne eax, edx; ret; 
0x000eff3f: adc byte ptr [esi - 1], dl; je 0xeff68; cmp al, 0xe8; inc esi; ret; 
0x0016ca62: adc byte ptr [esi*2 - 0x5f7d72e8], al; pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x000294b4: adc byte ptr [esi], al; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0012f188: adc byte ptr [esi], ch; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0014a546: adc ch, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x0007a54e: adc ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x0014860e: adc ch, byte ptr [ecx]; ret 0xd101; 
0x0009b298: adc ch, dl; call 0x2ef339e; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0011e535: adc cl, 0x54; stc; call dword ptr [eax - 0x18]; 
0x00150122: adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00150222: adc cl, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00076f62: adc cl, al; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x000ba11a: adc cl, bh; call dword ptr [ebx - 1]; 
0x0009af28: adc cl, bl; call 0x2ef302e; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x000aac9a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013f017: adc cl, byte ptr [eax]; add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0007b48d: adc cl, byte ptr [ebp + 0x4889014a]; add al, 0xf; mov dh, 2; ret; 
0x0007a962: adc cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0009af25: adc cl, byte ptr [ebp - 0x1726ef7e]; inc dword ptr [eax - 0x6d72fd1b]; mov al, 0xa5; idiv bh; cmovne eax, edx; ret; 
0x0009b295: adc cl, byte ptr [ebp - 0x172aef7e]; inc dword ptr [eax - 0x6d72fd1b]; adc byte ptr [esi - 0xa], 0xff; cmovne eax, edx; ret; 
0x0009b002: adc cl, byte ptr [ebp - 0xa50ff7e]; inc dword ptr [ebx - 0x6d72fe1d]; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0012f1a2: adc cl, byte ptr [ebp - 0xa610f7e]; inc dword ptr [ebx - 0x6d72fe1d]; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x0011d191: adc cl, byte ptr [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0008ddfd: adc cl, byte ptr [ebx + 0x104a3908]; je 0x8de10; ret; 
0x00092e02: adc cl, byte ptr [ebx + 0x107b818]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001102ce: adc cl, byte ptr [ebx - 0x13373]; jmp dword ptr [ebp - 0x75]; 
0x000c575e: adc cl, byte ptr [ebx - 0x36277b]; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x0004de8f: adc cl, byte ptr [ebx - 0x362b7b]; inc dword ptr [ebx + 0x440ffff8]; ret 0x8589; 
0x001463d1: adc cl, byte ptr [ebx - 0x7699f7ae]; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000be28a: adc cl, byte ptr [ebx - 0x76b3dbbc]; sub byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0012448d: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a71b6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7316: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f26: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7336: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f46: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7356: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f66: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000faed4: adc cl, byte ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x0012603b: adc cl, byte ptr [edi]; mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x00157b72: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000aedf6: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005d766: adc cl, ch; inc ebp; fdivr st(7); inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x000d5ae5: adc cl, ch; leave; jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x0016b659: adc cl, ch; mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x00046f05: adc cl, ch; mov edi, 0x83ffffdf; in al, dx; add al, 0x83; ret; 
0x00068df3: adc cl, ch; mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000c7860: adc cl, ch; mov esi, 0x89fffffd; ret 0x858d; 
0x0002f847: adc cl, ch; push ecx; or bh, bh; call dword ptr [eax - 0x73]; 
0x0005d3be: adc cl, ch; ret 0xffe1; 
0x00100822: adc cl, ch; ret 0xfff5; 
0x00127011: adc cl, ch; ret 0xfffe; 
0x00049ebe: adc cl, ch; ret; 
0x0011e800: adc cl, dh; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x0015f534: adc dh, al; add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007f636: adc dh, dh; push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014f019: adc dh, dh; ret 0xf20; 
0x0013cd26: adc dh, dh; ret; 
0x00097ecc: adc dh, dh; rol dword ptr [edx], 0x75; cmp dword ptr [ebx - 0x15f7b], ecx; jmp dword ptr [ebp - 0x75]; 
0x00136302: adc dh, dl; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00081b8a: adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x001311f3: adc dl, byte ptr [ebx - 0x18]; push esi; arpl dx, si; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000889b1: adc dword ptr [eax + 0x29], -0x1a; call dword ptr [eax - 0x73]; 
0x00165c84: adc dword ptr [eax + 0x500000a5], -0x73; and ebp, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x0015919c: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x159190; pop ebx; ret; 
0x00092c68: adc dword ptr [eax - 0x2c], -0x1a; call dword ptr [eax - 0x73]; 
0x00033232: adc dword ptr [eax - 0x30], -0x20; call dword ptr [eax + 0x6a]; 
0x0003e7f1: adc dword ptr [eax - 0x46], -7; dec dword ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x39]; 
0x00090c86: adc dword ptr [eax - 0x55], -0x1a; call dword ptr [eax + 0x55]; 
0x000fde70: adc dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x0004c233: adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x000c4c12: adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0002e3f2: adc dword ptr [eax], eax; add byte ptr [ebp - 0x68e037a], cl; call dword ptr [eax - 0x18]; 
0x0006d3d6: adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x00169d14: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000b50d6: adc dword ptr [eax], eax; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0002e3ec: adc dword ptr [eax], eax; add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68e037a], cl; call dword ptr [eax - 0x18]; 
0x000dcd40: adc dword ptr [eax], eax; and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00115f8d: adc dword ptr [eax], eax; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x115f9d; ret; 
0x0013d7c2: adc dword ptr [eax], eax; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0010935d: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010884d: adc dword ptr [eax], eax; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114e6d: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001146ad: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011385d: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00106b35: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00113c13: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00107b78: adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00135878: adc dword ptr [ebp + 0x5a], -7; call dword ptr [eax - 0x18]; 
0x00078435: adc dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x00149989: adc dword ptr [ebp + 0x5f], -7; call dword ptr [eax - 0x73]; 
0x0006633b: adc dword ptr [ebp - 0x3b7d0000], edi; adc byte ptr [ecx], bh; ret; 
0x00156bde: adc dword ptr [ebx + 0x1c7401f9], eax; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00070275: adc dword ptr [ebx + 0x1d7f01fa], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x001574cf: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0011f950: adc dword ptr [ebx + 0x4e7426fa], eax; pop ebx; pop esi; ret; 
0x00081d6e: adc dword ptr [ebx + 0x54890450], ecx; and al, 4; jmp dword ptr [eax]; 
0x0011d4e5: adc dword ptr [ebx + 0x54], -7; call dword ptr [edx + 0x52]; 
0x00132a3d: adc dword ptr [ebx + 0x59], -7; call dword ptr [eax - 0x18]; 
0x00132bd1: adc dword ptr [ebx + 0x59], -7; call dword ptr [eax - 0x73]; 
0x000977ae: adc dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0012192a: adc dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x00065006: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0002b6a9: adc dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x00107d75: adc dword ptr [ebx + 0x5e5b60c4], eax; pop edi; ret; 
0x0013d8e3: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007a6f1: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x00085afe: adc dword ptr [ebx - 0x11f7cfe], ecx; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012a969: adc dword ptr [ebx - 0x13b77], ecx; jmp dword ptr [ebp - 0x75]; 
0x00155dde: adc dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x0018e84e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18e859; neg eax; ret; 
0x0002fb90: adc dword ptr [ebx - 0x677f], ecx; jmp dword ptr [ebp - 0x75]; 
0x00065a66: adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x000b3f62: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0005a729: adc dword ptr [ecx - 0x5e743], ecx; jmp dword ptr [esi - 0x77]; 
0x0006f89a: adc dword ptr [ecx], edi; ret 0x420f; 
0x00114e6c: adc dword ptr [ecx], edx; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0014e09e: adc dword ptr [ecx], esi; leave; cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x000ac880: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00139feb: adc dword ptr [edi - 0x3b7c000c], eax; adc byte ptr [ebp - 0x77], ah; pop ebx; pop esi; pop edi; ret; 
0x000f66bf: adc dword ptr [edi - 3], -8; call dword ptr [ecx + 0x6a]; 
0x0011d190: adc dword ptr [edx], 0x4d; stc; call dword ptr [eax + 0x57]; 
0x000e9c8a: adc dword ptr [esi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x000a4d31: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x00124ae4: adc dword ptr [esi - 7], edx; call dword ptr [eax + 0x6a]; 
0x0011d35b: adc dword ptr [esi], 0x51; stc; call dword ptr [eax + 0x57]; 
0x0016397d: adc dword ptr [esi], 0x65; stc; call dword ptr [ebp + 0x6a]; 
0x000be615: adc dword ptr [esi], 0x948b0000; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00118e67: adc dword ptr [esp + eax*2], 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000b3f61: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00160e70: adc eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x000e67a2: adc eax, -0x66; stc; call dword ptr [eax - 0x73]; 
0x0015f9ec: adc eax, -0x69; call dword ptr [eax - 0x73]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x000b59ff: adc eax, -0x6b; stc; call dword ptr [eax - 0x18]; 
0x000d5dcb: adc eax, 0x10; cmp eax, -0x26; jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010885f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x0010936d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0011386b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146bf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011470f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011839f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183ef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011c4e7: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011eddf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0012095f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209af: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x001209ff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x000377c0: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x0005846f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f0b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092b13: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef3: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000caddd: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000de01b: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037785: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107da1: adc eax, 0x10; mov ebx, edx; ret; 
0x0010353f: adc eax, 0x10; neg eax; pop ebx; ret; 
0x001131c1: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000dd278: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008271d: adc eax, 0x10; pop ebx; pop esi; ret; 
0x0013bd02: adc eax, 0x10; pop ebx; ret; 
0x0008f1bb: adc eax, 0x10; ret; 
0x00103580: adc eax, 0x14; jne 0x103597; add esp, 0x1c; ret; 
0x00103a26: adc eax, 0x14; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106186: adc eax, 0x14; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd4: adc eax, 0x14; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c54: adc eax, 0x14; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x0010a3bf: adc eax, 0x14; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x001143d7: adc eax, 0x14; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115ce9: adc eax, 0x14; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d89: adc eax, 0x14; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115ff4: adc eax, 0x14; jne 0x115fff; add esp, 0x1c; ret; 
0x0011715d: adc eax, 0x14; jne 0x117177; add esp, 0x3c; ret; 
0x001171ce: adc eax, 0x14; jne 0x1171d9; add esp, 0x1c; ret; 
0x001181b9: adc eax, 0x14; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823e: adc eax, 0x14; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0011ae78: adc eax, 0x14; jne 0x11ae83; add esp, 0x1c; ret; 
0x0011c941: adc eax, 0x14; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00121e0f: adc eax, 0x14; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121f34: adc eax, 0x14; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb4: adc eax, 0x14; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x0012221f: adc eax, 0x14; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x0012295f: adc eax, 0x14; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e4: adc eax, 0x14; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a6f: adc eax, 0x14; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122bc8: adc eax, 0x14; jne 0x122bd3; add esp, 0x1c; ret; 
0x001232d2: adc eax, 0x14; jne 0x1232e4; add esp, 0x7c; ret; 
0x00130c64: adc eax, 0x14; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd4: adc eax, 0x14; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d85: adc eax, 0x14; jne 0x137d90; add esp, 0x2c; ret; 
0x0014243e: adc eax, 0x14; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x0014249a: adc eax, 0x14; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e6: adc eax, 0x14; jne 0x1424f1; add esp, 0x1c; ret; 
0x00143d9d: adc eax, 0x14; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e3d: adc eax, 0x14; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143efd: adc eax, 0x14; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f9d: adc eax, 0x14; jne 0x143fcd; add esp, 0x11c; ret; 
0x0014422d: adc eax, 0x14; jne 0x14427c; add esp, 0x1c; ret; 
0x00147937: adc eax, 0x14; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba78: adc eax, 0x14; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x0015589b: adc eax, 0x14; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015b8be: adc eax, 0x14; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb13: adc eax, 0x14; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015ec3d: adc eax, 0x14; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecdd: adc eax, 0x14; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015f02f: adc eax, 0x14; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a6: adc eax, 0x14; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015feea: adc eax, 0x14; jne 0x15fef5; add esp, 0x4c; ret; 
0x00161fd2: adc eax, 0x14; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c2: adc eax, 0x14; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162369: adc eax, 0x14; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623f9: adc eax, 0x14; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b8: adc eax, 0x14; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x0016251d: adc eax, 0x14; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625b9: adc eax, 0x14; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dd9: adc eax, 0x14; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e69: adc eax, 0x14; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162ef9: adc eax, 0x14; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f89: adc eax, 0x14; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x00163641: adc eax, 0x14; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x001636a1: adc eax, 0x14; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x0016370a: adc eax, 0x14; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x0016376a: adc eax, 0x14; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168156: adc eax, 0x14; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x0016992b: adc eax, 0x14; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a3: adc eax, 0x14; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016af66: adc eax, 0x14; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b127: adc eax, 0x14; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1c9: adc eax, 0x14; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85e: adc eax, 0x14; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016e0c1: adc eax, 0x14; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb8: adc eax, 0x14; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176714: adc eax, 0x14; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x00037bab: adc eax, 0x14; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d51: adc eax, 0x14; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038103: adc eax, 0x14; jne 0x38111; add esp, 0x12c; ret; 
0x00038723: adc eax, 0x14; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a3: adc eax, 0x14; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x0003882b: adc eax, 0x14; jne 0x38839; add esp, 0x9c; ret; 
0x0003aaab: adc eax, 0x14; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abdb: adc eax, 0x14; jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aeac: adc eax, 0x14; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b4bd: adc eax, 0x14; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b510: adc eax, 0x14; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b55d: adc eax, 0x14; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5b0: adc eax, 0x14; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000484f7: adc eax, 0x14; jne 0x48505; add esp, 0x42c; ret; 
0x00057d6b: adc eax, 0x14; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057dea: adc eax, 0x14; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x00058397: adc eax, 0x14; jne 0x583af; add esp, 0x1c; ret; 
0x00081644: adc eax, 0x14; jne 0x8166d; add esp, 0x2c; ret; 
0x000817ac: adc eax, 0x14; jne 0x817db; add esp, 0x2c; ret; 
0x0008597d: adc eax, 0x14; jne 0x85988; add esp, 0x2c; ret; 
0x0008a209: adc eax, 0x14; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a7: adc eax, 0x14; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b62d: adc eax, 0x14; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba8d: adc eax, 0x14; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf89: adc eax, 0x14; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d9: adc eax, 0x14; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f162: adc eax, 0x14; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f3d2: adc eax, 0x14; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65e: adc eax, 0x14; jne 0x8f687; add esp, 0x2c; ret; 
0x0008f8ce: adc eax, 0x14; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000914f8: adc eax, 0x14; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092ad0: adc eax, 0x14; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x0009307e: adc eax, 0x14; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c2f9d: adc eax, 0x14; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9a9d: adc eax, 0x14; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b1d: adc eax, 0x14; jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b68: adc eax, 0x14; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bc8: adc eax, 0x14; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000cac94: adc eax, 0x14; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cb058: adc eax, 0x14; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d3571: adc eax, 0x14; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5c01: adc eax, 0x14; jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d65: adc eax, 0x14; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f64: adc eax, 0x14; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d7114: adc eax, 0x14; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d7199: adc eax, 0x14; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d7240: adc eax, 0x14; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72c9: adc eax, 0x14; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d93b9: adc eax, 0x14; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a4: adc eax, 0x14; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000ddd75: adc eax, 0x14; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde15: adc eax, 0x14; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000df7a6: adc eax, 0x14; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e46: adc eax, 0x14; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf6: adc eax, 0x14; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b6: adc eax, 0x14; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x00114d6a: adc eax, 0x14ba; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x000213ca: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000b2a0a: adc eax, 0x29c0bc0f; ret 0x860f; 
0x00044aaa: adc eax, 0x3156001e; not byte ptr [ebx - 0x77]; ret; 
0x000376f7: adc eax, 0x440fffe1; ret 0x24e9; 
0x0009afc4: adc eax, 0x440ffff5; ret 0x66c3; 
0x00034ef1: adc eax, 0x4b; stc; dec dword ptr [edi]; inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x0015fa5a: adc eax, 0x504c483; nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015faea: adc eax, 0x504c483; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000d813a: adc eax, 0x560cec83; call eax; 
0x000ddf09: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000a5048: adc eax, 0x5bfffffe; ret; 
0x00127f90: adc eax, 0x5ed0895b; pop edi; ret; 
0x00088a10: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00081c70: adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00081ca7: adc eax, 0x7c; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000825c9: adc eax, 0x7c; ret; 
0x00081c66: adc eax, 0x80; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00081d39: adc eax, 0x80; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x0014df80: adc eax, 0x81000205; ret; 
0x0007107a: adc eax, 0x824448b; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007bd17: adc eax, 0x83000002; in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0009b3bc: adc eax, 0x8300768d; ret 0x8b20; 
0x0003c966: adc eax, 0x83167500; ret 0x3901; 
0x0009f10e: adc eax, 0x83cc7d8b; ret 0xf01; 
0x0009ed8d: adc eax, 0x83d4758b; ret 0xf01; 
0x000a0311: adc eax, 0x83d47d8b; ret 0xf01; 
0x001685e7: adc eax, 0x83fff1a1; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000382ea: adc eax, 0x8901488d; mov ch, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x00037bb1: adc eax, 0x98c481; add byte ptr [eax], al; pop ebx; ret; 
0x00083348: adc eax, 0xb85b0000; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0018c92e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0002cf3a: adc eax, 0xc7810014; ret; 
0x000ca950: adc eax, 0xec830000; add al, 0x8d; xchg byte ptr [edi - 0x72b00000], cl; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000c88da: adc eax, 0xf390e8b; jne 0xc8a30; pop edi; pop esi; ret; 
0x000fb8a1: adc eax, dword ptr [eax]; add byte ptr [eax + 0x30840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000de65d: adc eax, dword ptr [eax]; add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x0003b709: adc eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00068717: adc eax, dword ptr [eax]; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x0018cb7e: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00098a58: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000973a7: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ch; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097573: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0015e5a7: adc eax, dword ptr [eax]; add byte ptr [ecx - 0x1f7c723b], cl; arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x000382a7: adc eax, dword ptr [eax]; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038287: adc eax, dword ptr [eax]; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x00038057: adc eax, dword ptr [eax]; add eax, 0x1edfa7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002fee7: adc eax, dword ptr [eax]; add eax, 0x1f6117; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec7: adc eax, dword ptr [eax]; add eax, 0x1f6137; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea7: adc eax, dword ptr [eax]; add eax, 0x1f6157; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x000b223c: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedb9: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b225c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedd9: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002b7b9: adc eax, dword ptr [eax]; mov dword ptr [esp], esi; call ebx; 
0x000b21d9: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed66: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b221d: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed9a: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b227e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedfb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b229e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22be: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3b: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00083d49: adc eax, dword ptr [ebp - 0x74c58b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0015563b: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x000787dc: adc eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00022586: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x001585a0: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0015f4a8: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0005bce3: adc eax, dword ptr [ebx - 0x117cfe3f]; add dword ptr [ecx], edi; ret 0x850f; 
0x00093658: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1c9b969; mov dword ptr [edx + 0x1fc], eax; ret; 
0x00022793: adc eax, dword ptr [ebx - 0x17a9f314]; and ecx, dword ptr [esp + edx + 0x241c8900]; call esi; 
0x00194b1c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a4da6: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000a4db6: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000a4dc6: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000a4dd6: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000a4d62: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a4d82: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d92: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d72: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4da2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a4db2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dc2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dd2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d52: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x000993c3: adc eax, dword ptr [ecx]; ret 0x1089; 
0x00120ed8: adc eax, dword ptr [ecx]; ret; 
0x000ab456: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ab466: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ab3f2: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000ac776: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ab079: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab0b9: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab0d9: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab09a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab452: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab0fb: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab462: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab11b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab13b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab066: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000aba8f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbef: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b1622: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa42f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000aa58f: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000abaaf: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b1642: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa44f: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000aa5af: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000abacf: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b1662: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa46f: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000aa5cf: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000ab95e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000aa31e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000aa5ef: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000a9f9b: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7046: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000a7286: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000a8e81: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ae6e9: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ae709: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a7159: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a7299: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2d69: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a2ea9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b1832: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a7199: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72d9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2da9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a2ee9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a7089: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72f9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a8eb9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a4ab9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2cb9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a5a32: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a2f09: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ae729: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ae749: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001951c6: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1467: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a81: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c76: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000a5aab: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000a2e96: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000a717a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72ba: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2d8a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a2eca: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a71bb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dcb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f2b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a71db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2deb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f4b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a71fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e0b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59de: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f6b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a8ef6: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b14ba: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af6: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae60a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000aba86: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa426: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa586: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa446: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa466: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab955: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc46: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa315: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00038056: adc eax, dword ptr fs:[eax]; add eax, 0x1edfa7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000512dc: adc eax, edi; add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x00149b3b: adc ebp, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x0009b19a: adc ebp, eax; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0015e969: adc ebp, ebx; ret 0x748d; 
0x0019d349: adc ebp, edi; inc dword ptr [ecx + 0x88cb4c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0013404f: adc ebx, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00157913: adc ebx, 0x63; stc; call dword ptr [edx + 0x6a]; 
0x000b23a2: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef0f: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23c2: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef2f: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009ea17: adc ebx, dword ptr [ebx + 0x5e]; ret; 
0x000ac8c0: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c8a1c: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000ab20f: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000ac93f: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ab22f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00058e58: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000b2282: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedff: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22a2: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1f: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22c2: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3f: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003a075: adc ecx, dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000ea73f: adc ecx, dword ptr [ebp + 0xf3d244c]; mov dh, 0x14; ret 0xc083; 
0x000ac433: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0013cddb: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00058544: adc ecx, dword ptr [ebx - 0x1336b]; jmp dword ptr [ebp - 0x75]; 
0x00107eec: adc ecx, dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x7d]; 
0x00090d20: adc ecx, dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x75]; 
0x000847d1: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x84810; mov eax, edi; call dword ptr gs:[0x10]; 
0x0005f95a: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x000d8309: adc ecx, dword ptr [ecx - 0x16fbdbbc]; jge 0xd832e; cld; jmp dword ptr [esi - 0x70]; 
0x000d82d9: adc ecx, dword ptr [ecx - 0x16fbdbbc]; std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000ac80f: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ab0ff: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ab11f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ab13f: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000ac436: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000a71bf: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000a2dcf: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000a2f2f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000a71df: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000a2def: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000a2f4f: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000a71ff: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000a2e0f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000a59e2: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000a2f6f: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000a8efa: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b188e: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b14be: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4afa: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae60e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0010f006: adc ecx, esi; jmp dword ptr [ebp - 0x77]; 
0x00129bb9: adc edi, 0x56; stc; call dword ptr [eax - 1]; 
0x00129b6c: adc edi, 0x56; stc; call dword ptr [edx + 0x50]; 
0x00160938: adc edi, 0x64; stc; call dword ptr [eax - 0x73]; 
0x0003c963: adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x001666b0: adc edi, edi; je 0x1666d8; sbb bh, bh; je 0x1666dc; and al, ch; ret 0x13; 
0x0003a8e3: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00021c31: adc edx, 0; neg edx; ret; 
0x0011d109: adc edx, 0x4b; stc; call dword ptr [eax + 0x57]; 
0x0011d3c7: adc edx, 0x51; stc; call dword ptr [eax + 0x57]; 
0x0011e1f4: adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x000b2405: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef6f: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2465: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2495: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefd2: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23e2: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef4f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2436: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef93: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ac95f: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ab272: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab2b2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab2d2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab293: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab24f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x00071ce4: adc edx, ebp; cli; jmp dword ptr [esi - 0x70]; 
0x0011e9e4: adc edx, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014f3fb: adc edx, esi; jmp dword ptr [ebp - 0x77]; 
0x00024c64: adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0008e4f7: adc esi, dword ptr [ebp + 0xe]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e83f: adc esi, dword ptr [ebp + 0xe]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00077ac0: adc esi, esi; ret 0x7402; 
0x00077bbe: adc esi, esi; ret 0xf02; 
0x00077a1e: adc esi, esi; ret 0xf08; 
0x0007200c: adc esi, esi; ret 0xf20; 
0x0011a96b: adc esp, ecx; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000b4937: add ah, 1; add byte ptr [eax], al; ret; 
0x0006ad12: add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006c0db: add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x0012a290: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000aba87: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa427: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa587: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa447: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa467: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab956: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc47: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa316: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a71bc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000a2dcc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000a2f2c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000a71dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000a2dec: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000a2f4c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000a71fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000a2e0c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000a59df: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000a2f6c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000a8ef7: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b14bb: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af7: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae60b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b3cc4: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3624: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b3d3d: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a7263: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a2e73: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000ab015: add ah, byte ptr [esi - 0x77]; js 0x5e69b275; pop ebx; ret; 
0x00085ea7: add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0008a43d: add al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000e513f: add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x000c7a54: add al, 0; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x0012835a: add al, 0; add byte ptr [eax - 0x73], dl; and dword ptr [eax + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x00044343: add al, 0; add byte ptr [eax - 0x73], dl; xchg al, ch; je 0x44345; call dword ptr [eax - 0x18]; 
0x00044224: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x000411c7: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000411a6: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0014940c: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], esp; stc; call dword ptr [eax - 0x18]; 
0x00040fe8: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x40fea; call dword ptr [eax - 0x18]; 
0x0004747f: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c85: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8be: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03f9: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x0003a728: add al, 0; add byte ptr [eax - 1], dl; je 0x3a753; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x00093be0: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x001400ff: add al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x395c2474], cl; ret; 
0x0016c4fb: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x00110710: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0010059b: add al, 0; add byte ptr [eax], al; add cl, ch; ret; 
0x0016e185: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00092d37: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00020002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000825c3: add al, 0; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d1b: add al, 0; add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x00108658: add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d5f0: add al, 0; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00193f9e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x00081c54: add al, 0; add byte ptr [eax], al; ret; 
0x000484f2: add al, 0; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x48505; add esp, 0x42c; ret; 
0x0011c6d3: add al, 0; add byte ptr [ebp - 0x65f1780], cl; jmp dword ptr [ebp - 0x75]; 
0x0011c823: add al, 0; add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x00064970: add al, 0; add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x000d8bee: add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x00081d44: add al, 0; add byte ptr [ebx + 0x47401f8], al; ret; 
0x0015caa6: add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x00041cd1: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00051390: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x00048073: add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x000825e8: add al, 0; add byte ptr [ebx + 0x87401f8], al; ret; 
0x000c71f9: add al, 0; add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x00050379: add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0005312b: add al, 0; add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x000e14fc: add al, 0; add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x000e6c1e: add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x000fbe6b: add al, 0; add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00197099: add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000e561b: add al, 0; add byte ptr [ebx - 0x7ad3dbbc], cl; ror byte ptr [edi], 0x85; ret 8; 
0x000cc1d6: add al, 0; add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x0011d11d: add al, 0; add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011d153: add al, 0; add byte ptr [ebx - 0x7c72f714], al; stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x00146ff5: add al, 0; add byte ptr [ecx - 0x7209ce08], cl; je 0x147025; add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x0012e3bc: add al, 0; add byte ptr [ecx], al; call eax; 
0x00046cc1: add al, 0; add byte ptr [ecx], bh; ret; 
0x000fb7ca: add al, 0; add byte ptr [ecx], cl; ret 0x840f; 
0x00048b82: add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000aafdb: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fab4d: add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x000f0054: add al, 0; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x000b84ed: add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x0012a595: add al, 0; add byte ptr [edx], al; call eax; 
0x0007c4dd: add al, 0; add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0013f894: add al, 0; add byte ptr [esi - 0x3f], ah; ret; 
0x00094a97: add al, 0; add cl, ch; ret 0xfffd; 
0x00102e05: add al, 0; add dh, dh; ret 0xf20; 
0x000530bf: add al, 0; add dh, dh; ret 0xf50; 
0x00102e0e: add al, 0; add dh, dh; ret 0xf80; 
0x00125917: add al, 0; add eax, 0x1006e7; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0008f786: add al, 0; add esp, 0x1c; ret; 
0x000382e7: add al, 0; je 0x38300; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x000c8d09: add al, 0; lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x000a10ce: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a1006: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00037833: add al, 0; mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e5cb5: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0013d7c1: add al, 0x11; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00092e01: add al, 0x12; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0011773a: add al, 0x16; out dx, eax; call dword ptr [eax - 0x73]; 
0x000930c3: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00074089: add al, 0x1e; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004c230: add al, 0x24; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x0004c5aa: add al, 0x24; add esp, 0xc; ret; 
0x00036247: add al, 0x24; add esp, 4; ret; 
0x00035f87: add al, 0x24; add esp, 8; ret; 
0x0016d4d2: add al, 0x24; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0015e7dc: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0009340f: add al, 0x24; call esi; 
0x0004c55d: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0004c5e1: add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000361aa: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00121d3b: add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224cb: add al, 0x24; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122406: add al, 0x24; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0004ab71: add al, 0x24; ret; 
0x0016c10f: add al, 0x29; ret 0x143b; 
0x0004c3ad: add al, 0x29; ret 0x3b89; 
0x0007dd3d: add al, 0x29; ret 0x5052; 
0x0016c337: add al, 0x29; ret 0x543b; 
0x0013881b: add al, 0x29; ret 0x5752; 
0x0019579d: add al, 0x29; ret 0xc085; 
0x0019622c: add al, 0x29; ret 0xfa83; 
0x00077b90: add al, 0x29; ret 0xfac1; 
0x00058bcd: add al, 0x29; ret; 
0x0012a093: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00030780: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016bfbf: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x0016dcc3: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x000b49eb: add al, 0x2d; ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0004a774: add al, 0x30; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0015f536: add al, 0x30; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008dba3: add al, 0x31; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000800c7: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00158952: add al, 0x31; ret 0xd889; 
0x000a1522: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x8a0], dl; ret; 
0x000a14f2: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x9c0], dl; ret; 
0x0006f382: add al, 0x31; rol byte ptr [ecx + 0x85fa], 0; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00124477: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x124488; ret; 
0x0007aa14: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007aebc: add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000cda7a: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00102eea: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016b6a4: add al, 0x31; test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [eax], edx; push esp; hlt; call dword ptr [eax - 0x73]; 
0x00142d25: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a0c7e: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0c3a: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000f0a38: add al, 0x39; ret 0x2b75; 
0x000876cd: add al, 0x39; ret 0x5072; 
0x000f35d0: add al, 0x39; ret 0xd375; 
0x001161e4: add al, 0x39; ret 0xf372; 
0x000f443d: add al, 0x39; ret 0xf375; 
0x00196268: add al, 0x39; ret 0xf572; 
0x0004f383: add al, 0x39; ret 0xf672; 
0x0009bb4c: add al, 0x39; ret 0xf775; 
0x0004d362: add al, 0x39; ret; 
0x000804bd: add al, 0x39; retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000b622d: add al, 0x39; retf 0x474; test edx, edx; jne 0xb6228; ret; 
0x000a135d: add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0012553f: add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x00092230: add al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000e7dd7: add al, 0x3b; push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000e436e: add al, 0x3c; aas; jne 0xe4389; mov eax, 1; ret; 
0x000fc5cb: add al, 0x3c; jg 0xfc5de; inc esp; ret 0x8589; 
0x0013d862: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000ea0e1: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000de37a: add al, 0x47; stc; call dword ptr [eax + 0x53]; 
0x000de3d7: add al, 0x47; stc; call dword ptr [eax - 1]; 
0x000fbc47: add al, 0x49; in eax, dx; call dword ptr [eax - 0x73]; 
0x0002fb5d: add al, 0x50; and eax, 0x1000; ret; 
0x0002fb2d: add al, 0x50; and eax, 0x100; ret; 
0x0002fafd: add al, 0x50; and eax, 0x2000; ret; 
0x0002fa3d: add al, 0x50; and eax, 0x200; ret; 
0x0002fa9d: add al, 0x50; and eax, 0x4000; ret; 
0x0002f9ad: add al, 0x50; and eax, 0x400; ret; 
0x0002fa6d: add al, 0x50; and eax, 0x8000; ret; 
0x0002fa0d: add al, 0x50; and eax, 0x800; ret; 
0x0002fc0d: add al, 0x50; and eax, 1; ret; 
0x0002f9dd: add al, 0x50; and eax, 2; ret; 
0x0002facd: add al, 0x50; and eax, 4; ret; 
0x0002f97d: add al, 0x50; and eax, 8; ret; 
0x00155641: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x001557ee: add al, 0x50; call dword ptr [edx + 0x10]; 
0x0014d9f5: add al, 0x50; call edi; 
0x00162873: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x1626a0; add esp, 0x1c; ret; 
0x0005765d: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57610; add esp, 0x1c; ret; 
0x0007486d: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57630; add esp, 0x1c; ret; 
0x0007cc91: add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077177: add al, 0x50; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007c727: add al, 0x50; push edx; push esi; call ecx; 
0x0012e915: add al, 0x50; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0011b222: add al, 0x51; push 3; push ebx; call edx; 
0x0016f77c: add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0015caab: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0015f6f4: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0006b6f3: add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x00155d50: add al, 0x52; call dword ptr [eax + 0x10]; 
0x0015e86a: add al, 0x52; call dword ptr [eax + 0x14]; 
0x0015e9c9: add al, 0x52; call dword ptr [ecx + 0x10]; 
0x00155c64: add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x000782df: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00161e75: add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161ead: add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x00157a0c: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x001579cc: add al, 0x52; push ebx; call dword ptr [eax]; 
0x00162e20: add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x001623b0: add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x00155a88: add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015ef83: add al, 0x53; call dword ptr [eax]; 
0x0014b3a4: add al, 0x53; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x0006688b: add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x000654b2: add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00071007: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006cffb: add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000660f7: add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068203: add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00072ed9: add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066212: add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00161e92: add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00161eca: add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x00162719: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x0006b15a: add al, 0x53; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3db: add al, 0x53; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0004a5e7: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016cb06: add al, 0x55; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00038ede: add al, 0x55; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007cb9b: add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069054: add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f69: add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00069e58: add al, 0x55; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038bd6: add al, 0x55; push ebx; push esi; call edi; 
0x00074254: add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038bb2: add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038b85: add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0007b702: add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dc0: add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00073f25: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007b884: add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0015bab5: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0015f702: add al, 0x57; call dword ptr [eax + 0x10]; 
0x0011b1eb: add al, 0x57; push 0; push ebx; call esi; 
0x0011b1ff: add al, 0x57; push 1; push ebx; call esi; 
0x0011b212: add al, 0x57; push 2; push ebx; call esi; 
0x00071338: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072165: add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053348: add al, 0x57; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006e238: add al, 0x57; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00156088: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0003b32b: add al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000776b8: add al, 0x5b; pop esi; jmp eax; 
0x00034fc7: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009962b: add al, 0x5b; pop esi; pop edi; ret; 
0x00022712: add al, 0x5b; pop esi; ret; 
0x000218ba: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000377cb: add al, 0x5b; ret; 
0x0018decb: add al, 0x5d; pop ebx; ret; 
0x0018ded2: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00083c5b: add al, 0x5e; pop edi; ret; 
0x0012a108: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x000a8e53: add al, 0x5f; pop ebx; ret; 
0x000ab039: add al, 0x5f; pop esi; pop ebx; ret; 
0x000a711c: add al, 0x5f; ret; 
0x0014f758: add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x001131be: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x00081ca4: add al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001029b7: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000a7127: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7267: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b154a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d47: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a2e77: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000aba29: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000abb89: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aa3c9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000aa529: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000741e2: add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x0007fbf4: add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x0012c9d1: add al, 0x6a; add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x0012ceaf: add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x000f64f0: add al, 0x6a; add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x0012e656: add al, 0x6a; add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x000f8be0: add al, 0x6a; add eax, 0x9bac868d; stc; call dword ptr [eax - 0x73]; 
0x0012c662: add al, 0x6a; add eax, 0xa468808d; stc; call dword ptr [eax - 0x75]; 
0x0012d294: add al, 0x6a; add eax, 0xa4a0808d; stc; call dword ptr [eax + 0x6a]; 
0x000fdd4c: add al, 0x6a; add eax, 0xb4818d50; jb 0xfdd4e; call dword ptr [eax - 0x18]; 
0x001576f4: add al, 0x6a; add eax, 0xb4838d50; jb 0x1576f6; call dword ptr [eax - 0x18]; 
0x0005793d: add al, 0x6a; add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x00080f19: add al, 0x6a; add eax, 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x0009a53b: add al, 0x6a; add eax, 0xb4838d50; jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x0005890e: add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; 
0x0005890e: add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00161df7: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00161df7: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x001639d3: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00033bf3: add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x000cb227: add al, 0x6b; ret; 
0x0013ca60: add al, 0x72; ret; 
0x00073a23: add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00123db2: add al, 0x74; push ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0010352d: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016707e: add al, 0x74; ret 0xf883; 
0x000e7dda: add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0003a2c8: add al, 0x74; stc; call dword ptr [eax - 0x73]; 
0x00191f23: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x000ef6b3: add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0012e899: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0006d15b: add al, 0x75; ret; 
0x0016ca63: add al, 0x75; sbb byte ptr [ebp - 0xba65f7e], cl; jmp dword ptr [esi - 9]; 
0x0018fc3b: add al, 0x76; ret; 
0x0010dcc5: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f565: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x000f9b16: add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x000ee853: add al, 0x7c; ret 0xb48d; 
0x0012447c: add al, 0x80; cmp dword ptr [eax], eax; je 0x124488; ret; 
0x0013dc37: add al, 0x80; js 0x13dc3d; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0006f2e0: add al, 0x81; les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007bf05: add al, 0x81; les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000b86b2: add al, 0x81; ret 0; 
0x000e74a8: add al, 0x81; ret 0x2000; 
0x0007b3b7: add al, 0x83; and bh, cl; ret; 
0x0014f94f: add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x0005ffa9: add al, 0x83; clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00081e22: add al, 0x83; cmp byte ptr [ecx], al; je 0x81e30; ret; 
0x0008fee0: add al, 0x83; cmp dword ptr [edx], eax; je 0x8fea2; pop ebx; pop esi; ret; 
0x001639d0: add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00156052: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0013777a: add al, 0x83; in al, dx; or al, 0xff; je 0x1377a5; or al, 0x89; ret; 
0x0015eb58: add al, 0x83; in al, dx; or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00156dea: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x001633b7: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x000888e3: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x00124701: add al, 0x83; jmp dword ptr [eax]; 
0x000b8df1: add al, 0x83; lds eax, ptr [ebx + eax*4]; ret; 
0x00030783: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00162032: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00198bba: add al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00071e13: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001442da: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0002c00d: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00099d5f: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0009979c: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00155baf: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00182f9d: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0017fe6d: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000b41b0: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000b41b3: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x00083be3: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x00065c54: add al, 0x83; rcl dword ptr [eax], 0x39; ret 0xf475; 
0x00040462: add al, 0x83; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x0015c054: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0003afde: add al, 0x83; ret 0x3904; 
0x0003357c: add al, 0x83; ret 0x3908; 
0x0013da14: add al, 0x83; ret 0x8108; 
0x0002b3d6: add al, 0x83; ret 0x8301; 
0x0004b464: add al, 0x83; ret 0x8304; 
0x000c8d6a: add al, 0x83; ret 0x8310; 
0x000b3e73: add al, 0x83; ret 0x8404; 
0x000b4d62: add al, 0x83; ret 0x8504; 
0x0012d505: add al, 0x83; ret 0x8518; 
0x0013cb78: add al, 0x83; ret 0x8802; 
0x0004ba7b: add al, 0x83; ret 0x8901; 
0x00153ca9: add al, 0x83; ret 0x8902; 
0x0002a221: add al, 0x83; ret 0x8904; 
0x000d4449: add al, 0x83; ret 0x8930; 
0x000b3bc2: add al, 0x83; ret 0x8b04; 
0x0002b629: add al, 0x83; ret 0x8d01; 
0x0012eaed: add al, 0x83; ret 0xc601; 
0x00196c27: add al, 0x83; ret 0xd304; 
0x000e645b: add al, 0x83; ret 0xeb04; 
0x000a15b4: add al, 0x83; ret 0xf04; 
0x0013fbdf: add al, 0x83; ret 0xf0c; 
0x00028d9f: add al, 0x83; ret; 
0x000b622a: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xb6236; test edx, edx; jne 0xb6228; ret; 
0x00093661: add al, 0x83; rol byte ptr [ecx], 0x89; cmp ah, 1; add byte ptr [eax], al; ret; 
0x0009b3b7: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x00149efc: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x00154f38: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x154f53; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00055b7a: add al, 0x83; stc; dec dword ptr [ecx - 0x6bf0ef88]; ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x00101ca8: add al, 0x83; sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00153b9e: add al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0009147b: add al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x00023392: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000ec5bb: add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x0008b0db: add al, 0x85; sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0011bcdf: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x0011bd03: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x0014af32: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00144de4: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000c8e09: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000b6231: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x000c8dd2: add al, 0x85; sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x00118563: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000dd212: add al, 0x85; sal byte ptr [esi + ecx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x0008cea2: add al, 0x85; sar byte ptr [eax + 9], 0x89; sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013de25: add al, 0x85; sar byte ptr [ecx + 0x26], 0x8d; or byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x000d6007: add al, 0x85; sar byte ptr [ecx + 0x2f], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0014f94c: add al, 0x87; inc edx; add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x00158918: add al, 0x87; std; jmp dword ptr [esi - 0x70]; 
0x000b3f5f: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a2d36: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000a7116: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0006735a: add al, 0x88; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00155cac: add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x00065a64: add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x00118e65: add al, 0x89; adc dword ptr [esp + eax*2], 0; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0005f958: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0015e7da: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0004c5df: add al, 0x89; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000827d2: add al, 0x89; add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000a10e7: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x00039088: add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000b4dd0: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x0011e98a: add al, 0x89; call 0x5d7147ec; ret; 
0x000b152c: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000a2d39: add al, 0x89; clc; pop edi; ret; 
0x00077ab9: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00077bb7: add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x000f8dc5: add al, 0x89; dec ebp; aam 0x6a; add eax, 0x9bcc868d; stc; call dword ptr [eax - 0x73]; 
0x0013deab: add al, 0x89; dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00161f7a: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f92: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00157349: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013d97e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003a465: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00157b28: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00102736: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00129ad6: add al, 0x89; inc edi; adc al, 0x29; ret; 
0x000aa2c7: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000aa506: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000aa566: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000abb56: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0007baae: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0007c023: add al, 0x89; inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d62d2: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000ab034: add al, 0x89; js 0x5e69b493; pop ebx; ret; 
0x00066a73: add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00066a73: add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006c902: add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x001223fc: add al, 0x89; loope 0x122389; ret 0x448b; 
0x001034f5: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010350d: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b217a: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aed24: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000755e2: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000ab045: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0007447e: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00074e83: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0012c590: add al, 0x89; push ebp; mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x00157ba4: add al, 0x89; push ebx; adc bl, ch; ret; 
0x00129e4d: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00081cdc: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000a0fcc: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0014edce: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00162502: add al, 0x89; ret 0x18b; 
0x00025548: add al, 0x89; ret 0x2374; 
0x00122331: add al, 0x89; ret 0x448b; 
0x0002f3d0: add al, 0x89; ret 0x748d; 
0x0011b444: add al, 0x89; ret 0xe083; 
0x000c332b: add al, 0x89; ret 0xe089; 
0x0008490e: add al, 0x89; ret 0xe183; 
0x000910d3: add al, 0x89; ret 0xe281; 
0x000f47da: add al, 0x89; ret 0xe283; 
0x0011d539: add al, 0x89; ret 0xe8c1; 
0x00095cbd: add al, 0x89; ret 0xf089; 
0x00036293: add al, 0x89; ret 0xff25; 
0x000937e7: add al, 0x89; ret; 
0x000a4f9b: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xa4e61; pop ebx; ret; 
0x00078830: add al, 0x89; rol byte ptr [ebx - 0x3b7cfe20], 1; adc al, 0x5b; pop esi; ret; 
0x0003a8b7: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0002e2b6: add al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x000aa509: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000aa3a9: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003801d: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00085ca0: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x00081b88: add al, 0x8b; adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x0005a727: add al, 0x8b; adc dword ptr [ecx - 0x5e743], ecx; jmp dword ptr [esi - 0x77]; 
0x0016e02b: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007a617: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x00093642: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x0007a5c7: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x00093682: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0x93690; ret; 
0x000936d2: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0008d917: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc039dbad; ret; 
0x0007517f: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000226c1: add al, 0x8b; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x0004c5d9: add al, 0x8b; add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0007b3c7: add al, 0x8b; add cl, al; call 0x1e836d4; ret; 
0x0007b3e7: add al, 0x8b; add cl, al; call 0x1e836f5; ret; 
0x000b1512: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000ae662: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0005c86e: add al, 0x8b; add dword ptr [ecx - 0x5e743], ecx; jmp dword ptr [esi - 0x77]; 
0x00074e4f: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0011b9f7: add al, 0x8b; dec edx; or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x0011d020: add al, 0x8b; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0002fe5b: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0016e047: add al, 0x8b; inc eax; dec esp; ret; 
0x000937c2: add al, 0x8b; inc eax; or al, 0x83; ret; 
0x000818b8: add al, 0x8b; inc eax; or bh, bh; je 0x818e3; xor byte ptr [edx + 0x51], dl; call eax; 
0x00113f07: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x0012e9d2: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0016e0e7: add al, 0x8b; inc eax; pop eax; ret; 
0x0016e077: add al, 0x8b; inc eax; pop esp; ret; 
0x0016e067: add al, 0x8b; inc eax; push eax; ret; 
0x0016e0f7: add al, 0x8b; inc eax; push esp; ret; 
0x00160ee3: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x001030a2: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0011ba36: add al, 0x8b; inc ecx; add al, 0x89; ret; 
0x000aa569: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000aa409: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000abba9: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aa549: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0015f6f1: add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0015760a: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x15761e; push edi; call dword ptr [eax + 0x10]; 
0x00080a27: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00161e72: add al, 0x8b; inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161eaa: add al, 0x8b; inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x001221fd: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e7c: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000b219e: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000362b2: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000837da: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000aed3b: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x001963ec: add al, 0x8b; jl 0x196373; add al, 0x83; ret; 
0x0019640f: add al, 0x8b; jl 0x196437; adc byte ptr [ecx], ch; ret; 
0x00196c23: add al, 0x8b; jl 0x196ba9; add al, 0x83; ret 0xd304; 
0x0003527b: add al, 0x8b; jl 0x352a3; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x00130f22: add al, 0x8b; jns 0x130f2e; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00037336: add al, 0x8b; js 0x37342; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00037386: add al, 0x8b; js 0x37392; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0018b577: add al, 0x8b; mov word ptr [ebx - 0x86b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0006bbf4: add al, 0x8b; popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x000c77b0: add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x00093c0a: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0007cc11: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x001745ed: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001560a8: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x000f6a5a: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x001633d7: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0016e057: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001638bf: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00083ac7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080037: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e007: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de77: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000f2b12: add al, 0x8b; pushfd; xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0002fc61: add al, 0x8b; sbb byte ptr [eax + 0x65ffffff], 0x8b; add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc31: add al, 0x8b; sbb byte ptr [eax + 0x65ffffff], 0x8b; add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0015a1bf: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00090c84: add al, 0x8d; adc dword ptr [eax - 0x55], -0x1a; call dword ptr [eax + 0x55]; 
0x00161ff5: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00162779: add al, 0x8d; dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x00047f56: add al, 0x8d; inc edi; add dword ptr [ecx], edi; ret 0x860f; 
0x000a7119: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000a108c: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000ab90a: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000abb59: add al, 0x8d; inc edx; pop es; ret; 
0x0013dc73: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x0013e03b: add al, 0x8d; mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0016530d: add al, 0x8d; or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0016dcc6: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00162b2b: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015bac7: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621fd: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016219a: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00162ded: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00162495: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0016237d: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00162b15: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00162185: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00162535: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0011cc7a: add al, 0x8d; sub dword ptr [eax + 0x4a], -7; call ptr [ebx + 0x5e]; ret; 
0x0015ca35: add al, 0x8d; sub dword ptr [ecx], 0x6afff964; add eax, 0xb4818d50; jb 0x15ca3d; call dword ptr [eax - 0x18]; 
0x000596aa: add al, 0x8d; test dword ptr [eax + 0x6afffffb], edi; add dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x401; 
0x0013653a: add al, 0x8d; test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xb4858d50; jb 0x136542; call dword ptr [eax - 0x18]; 
0x0009a31a: add al, 0x8d; test dword ptr [ebx + 0x6afff943], esi; add eax, 0xb4858d50; jb 0x9a322; call dword ptr [eax - 0x18]; 
0x00058adc: add al, 0x8d; test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x00058cda: add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x0013647c: add al, 0x8d; test dword ptr [edx + 0x6afff95a], edi; add eax, 0xb4858d50; jb 0x136484; call dword ptr [eax - 0x18]; 
0x00137c21: add al, 0x8d; test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x00021fa2: add al, 0x8d; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x000ca955: add al, 0x8d; xchg byte ptr [edi - 0x72b00000], cl; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0014b485: add al, 0x8d; xchg dword ptr [eax + 0x53], edx; bnd call dword ptr [ebx + 0x50]; 
0x00085d2f: add al, 0x8d; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0011d900: add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x0009a380: add al, 0x8d; xchg edx, eax; adc byte ptr [esi + 0x440fffe7], dh; ret 0x66c3; 
0x0009a4d0: add al, 0x8d; xchg edx, eax; add bh, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00099f90: add al, 0x8d; xchg edx, eax; jo 0x99f5b; call 0xc24daf99; ret; 
0x0009aef0: add al, 0x8d; xchg edx, eax; jo 0x9aebe; call 0xc24dbef9; ret; 
0x000a12f0: add al, 0x8d; xchg edx, eax; ror ah, 1; call 0xc24e22f9; ret; 
0x0016e00d: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0016e02d: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002fba0: add al, 0x90; ret; 
0x00051aed: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b50a5: add al, 0x98; pop ebx; pop esi; ret; 
0x0003a8fb: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00037f69: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x000fa929: add al, 0x9d; stc; call dword ptr [eax - 0x18]; 
0x0011e84d: add al, 0xa2; stc; call dword ptr [eax - 0x18]; 
0x0008c4f3: add al, 0xa8; add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0014d8de: add al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x00155f18: add al, 0xb1; std; jmp dword ptr [esi - 0x70]; 
0x0016b758: add al, 0xb4; stc; call dword ptr [eax + 0x6a]; 
0x001551e2: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0016b918: add al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0010c70a: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001633bb: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000deb72: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xdeb80; ret; 
0x00107d99: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107d99: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ddf6d: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ee99: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ee99: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001215cd: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00113907: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00121379: add al, 0xb8; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddd0d: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116eb9: add al, 0xb8; jae 0x116ebd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121669: add al, 0xb8; je 0x12166d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001217fd: add al, 0xb8; jge 0x121802; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121829: add al, 0xb8; jle 0x12182e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121259: add al, 0xb8; jno 0x12125d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011624d: add al, 0xb8; jns 0x116251; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dc089: add al, 0xb8; jp 0xdc08d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00083ecf: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849c8: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011f4b9: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4b9: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001094a9: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a519: add al, 0xb8; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d5ec3: add al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d61a2: add al, 0xb8; or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0010a3ed: add al, 0xb8; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d6026: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108f5d: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eaf6b: add al, 0xb8; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0009912a: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00083b9b: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x000dc639: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a579: add al, 0xb8; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001092c9: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddf39: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001094d9: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012128d: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d6561: add al, 0xb8; xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d66b2: add al, 0xb8; xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116929: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00168023: add al, 0xba; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0006f292: add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x00075a82: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000a1027: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0003614c: add al, 0xd9; inc esp; and al, 4; ret; 
0x00036242: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00035c0b: add al, 0xd9; std; fstp st(1); ret; 
0x00155bdd: add al, 0xd; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x0004c5a8: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00099f3e: add al, 0xdd; call 0x7d4b9645; add cl, byte ptr [ebp - 0x17928f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a07b: add al, 0xe3; call 0x7e4b9782; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009b13e: add al, 0xe6; call 0x7d4ba845; add cl, byte ptr [ebp - 0x1804ef6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0002c6f2: add al, 0xe8; dec eax; cmp bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f199a: add al, 0xe8; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x0008fe66: add al, 0xe8; sub eax, 0x81000de6; ret; 
0x0014c0c9: add al, 0xe9; add dword ptr [eax], esp; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000d798d: add al, 0xe9; dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000d79bd: add al, 0xe9; int 0x26; cld; jmp dword ptr [esi - 0x70]; 
0x000d830d: add al, 0xe9; jge 0xd832e; cld; jmp dword ptr [esi - 0x70]; 
0x001708e8: add al, 0xe9; mov dl, 0x1c; int1; jmp dword ptr [esi - 0x70]; 
0x0015b71f: add al, 0xe9; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000e1dd3: add al, 0xe9; pop es; cmp bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x00037514: add al, 0xe9; push esi; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x000226c7: add al, 0xe9; ret; 
0x0011e7e1: add al, 0xe9; sbb eax, 0x8dffffff; or dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000d82dd: add al, 0xe9; std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0013e3e1: add al, 0xeb; mov ecx, 0xff2c37e8; jmp dword ptr [esi - 0x70]; 
0x000390c4: add al, 0xeb; ret 0xb48d; 
0x0008d487: add al, 0xf0; dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x0007a5f7: add al, 0xf6; add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x0011bb33: add al, 0xf6; ret 0x7401; 
0x0011b976: add al, 0xf6; ret 0xf01; 
0x00096c71: add al, 0xf6; ret; 
0x00087319: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000384bb: add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x00092691: add al, 0xf7; fmul dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x77]; 
0x000b41b6: add al, 0xf7; ret 0; 
0x000fb73f: add al, 0xf7; ret 0xfffd; 
0x000ef4f1: add al, 0xf7; ret; 
0x0010067b: add al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0009a3b6: add al, 0xf; inc ebp; ret 0x66c3; 
0x00091735: add al, 0xf; inc ebp; ret 0x968b; 
0x0009b0bd: add al, 0xf; inc esp; ret 0xc083; 
0x0002598b: add al, 0xf; inc esp; ret; 
0x00102987: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007ef00: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0007ed35: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0007f735: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0002ce6a: add al, 0xf; mov dh, 0x84; push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x00158611: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0007b455: add al, 0xf; mov dh, 2; ret; 
0x0004678d: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0018e357: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00035285: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x00025022: add al, 0xf; test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0019a52a: add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x00193464: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00096c90: add al, 0xf; test dword ptr [ebx + 0x39000001], ebx; ret; 
0x00193d1b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000c88f5: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000a47fb: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0016e16d: add al, 0xf; test dword ptr [esi - 0x470014cf], ecx; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000ac1dc: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00038454: add al, 0xf; xchg ebp, eax; ret; 
0x0012da42: add al, 0xf; xchg esp, eax; ret; 
0x0008f0e1: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00170bc5: add al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0016cb01: add al, 0xff; aaa; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016bab0: add al, 0xff; aaa; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00081d75: add al, 0xff; and byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00081ce0: add al, 0xff; and byte ptr [ebp - 0x6fffd98c], cl; ret; 
0x0012a58d: add al, 0xff; je 0x12a5b5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x001579dd: add al, 0xff; je 0x157a05; sbb al, 0x53; call dword ptr [eax]; 
0x00157a2d: add al, 0xff; je 0x157a55; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00021672: add al, 0xff; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00039042: add al, 0xff; je 0x3906a; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000391a4: add al, 0xff; je 0x391cc; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039215: add al, 0xff; je 0x3923d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00071061: add al, 0xff; je 0x71089; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007bba4: add al, 0xff; je 0x7bbcc; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00072922: add al, 0xff; jne 0x7290a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073062: add al, 0xff; jne 0x7307a; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00073e57: add al, 0xff; jne 0x73e3f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0006ba1b: add al, 0xff; mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x000c9cd3: add al, 0xff; xor al, ch; aad 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9c33: add al, 0xff; xor al, ch; jne 0xc9c5c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9d20: add al, 0xff; xor al, ch; mov byte ptr [edx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9c80: add al, 0xff; xor al, ch; sub byte ptr [ebx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011c2c8: add al, 0xff; xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011c460: add al, 0xff; xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x000daefe: add al, 0xff; xor byte ptr [ebp - 0x6b9fe7d], cl; call dword ptr [eax + 0x56]; 
0x0011b1c3: add al, 1; add byte ptr [eax], al; add cl, ch; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007fd4f: add al, 1; add byte ptr [eax], al; add cl, ch; sub eax, 0xe8fffffe; ret 0xb12; 
0x0009314b: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c8928: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00081da6: add al, 1; add byte ptr [eax], al; ret; 
0x000b47d9: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000888e6: add al, 1; add esp, 0xc; ret; 
0x000585d8: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00092ee7: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092f4b: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00081c47: add al, 1; je 0x81c58; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00157c68: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013ff74: add al, 1; ret 0x4489; 
0x00157d47: add al, 1; ret 0xc129; 
0x00058632: add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00093692: add al, 2; add byte ptr [eax], al; ret; 
0x0004b43d: add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0015fa5d: add al, 5; nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015faed: add al, 5; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007a5cb: add al, 8; add byte ptr [eax], al; ret; 
0x000485cf: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016cb9e: add al, ah; dec dword ptr [edi]; inc ebp; ret 0xe0c1; 
0x000f58cb: add al, al; call 0xfe1ddd4; xchg esp, eax; ret 0xd020; 
0x001310ca: add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00131189: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000827d4: add al, bh; and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000e97ba: add al, bh; jmp dword ptr [esi + 0xb]; 
0x000aafaa: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x000f0052: add al, byte ptr [eax]; add al, 0; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0019dd76: add al, byte ptr [eax]; add al, ch; ret 0xe823; 
0x0019cca5: add al, byte ptr [eax]; add al, ch; ret; 
0x0009044b: add al, byte ptr [eax]; add bl, ch; fisttp word ptr [ebp - 0x67c837d]; call dword ptr [eax - 0x73]; 
0x00024cd1: add al, byte ptr [eax]; add bl, ch; fucomi st(0); inc ebp; ret; 
0x0019211f: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0019210e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00086ae2: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00085cf4: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x000860e5: add al, byte ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x001920b7: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000a8fc8: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001920c8: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001920d9: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00024c5f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0014f753: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014a520: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x000c7a9e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000c17f7: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and eax, 0xffffff97; stc; call dword ptr [eax - 0x18]; 
0x0019d078: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cd6ab: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cd6e9: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x00024bce: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x000cd6ca: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x0009045f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x40], -7; call dword ptr [eax - 0x18]; 
0x00089de2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00025e36: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2], bl; stc; call dword ptr [eax - 0x18]; 
0x00025f6d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025ecb: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000885c2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00148089: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0002524d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], ebx; stc; call dword ptr [eax - 0x18]; 
0x00086fb6: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2], edx; stc; call dword ptr [eax - 0x18]; 
0x000baaaf: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00041051: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x00025304: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0003aaec: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0015d8b6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015cea6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015a1e9: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015adf6: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0004abba: add al, byte ptr [eax]; add byte ptr [eax], al; call 0x4ab70; add eax, ebx; jmp eax; 
0x00092366: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00037210: add al, byte ptr [eax]; add byte ptr [eax], al; je 0x3721d; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x0004a5ef: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001211d8: add al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012481a: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012398b: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008b298: add al, byte ptr [eax]; add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007a89b: add al, byte ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008674f: add al, byte ptr [eax]; add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x001570e7: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000c8c71: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x0011c997: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000d74b9: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011d0c1: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x00087e21: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c74: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00082633: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x000826b2: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00085cee: add al, byte ptr [eax]; add byte ptr [ebp + 0x22c96], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0012d35b: add al, byte ptr [eax]; add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x00037517: add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0008f043: add al, byte ptr [eax]; add byte ptr [ebp - 0x196fff7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0008f04f: add al, byte ptr [eax]; add byte ptr [ebp - 0x19714f7d], cl; call dword ptr [ecx + 0x50]; 
0x0014a542: add al, byte ptr [eax]; add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x0009042c: add al, byte ptr [eax]; add byte ptr [ebp - 0x6bfb67d], cl; call dword ptr [eax - 0x73]; 
0x00027aed: add al, byte ptr [eax]; add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x0013ff6b: add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x0009e1fe: add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0004bfd4: add al, byte ptr [eax]; add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x00147ff7: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x0007bd18: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000c1698: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x00124d6b: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000589c3: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000389a0: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005612b: add al, byte ptr [eax]; add byte ptr [ebx + 0xf0c247c], cl; mov esi, 0x8b572444; xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x0010d964: add al, byte ptr [eax]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0010cf2d: add al, byte ptr [eax]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00094f83: add al, byte ptr [eax]; add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00139c29: add al, byte ptr [eax]; add byte ptr [ebx - 0x17a9f314], al; mov edx, dword ptr [edi]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x0005036b: add al, byte ptr [eax]; add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp - 0x7071f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000c562e: add al, byte ptr [eax]; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0004dce8: add al, byte ptr [eax]; add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0004fe67: add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0006e019: add al, byte ptr [eax]; add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x0005e2fb: add al, byte ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0005edfc: add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000fd6fa: add al, byte ptr [eax]; add byte ptr [ebx - 0x70373], cl; jmp dword ptr [ebp - 0x7d]; 
0x0002a21b: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x000e64fa: add al, byte ptr [eax]; add byte ptr [ebx - 0x98f7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000e4a2a: add al, byte ptr [eax]; add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000813cc: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00124969: add al, byte ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000c1261: add al, byte ptr [eax]; add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000c12c5: add al, byte ptr [eax]; add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x00082bfe: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00082e0f: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012e573: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000b2a13: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013b127: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00138c5a: add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xc031; 
0x000a4b67: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000f0f03: add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x0008b16a: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x00136e38: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x001487f6: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x0003d3d2: add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0007c6c7: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0016fc17: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x001487c1: add al, byte ptr [eax]; add dh, dh; ret 0xf08; 
0x0006f740: add al, byte ptr [eax]; add dh, dh; ret; 
0x00143fe7: add al, byte ptr [eax]; add eax, 0xe2017; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000575c9: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00057570: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0013dc3a: add al, byte ptr [eax]; jne 0x13dc48; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000a0fb1: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0011cc26: add al, byte ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0013da83: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a0fe7: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0015b0df: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00178328: add al, byte ptr [ebx + 0x27402ea]; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00083801: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00085b00: add al, byte ptr [ebx + 0x440bfee0]; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0005866e: add al, byte ptr [ebx + 0x47f01f8]; ret; 
0x0015f025: add al, byte ptr [ebx + 0x548b01e8]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x00081403: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0013d6c8: add al, byte ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x00125214: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0007402a: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000c6802: add al, byte ptr [ebx + 0x6a5004ec]; add byte ptr [ebx - 0x363f63], cl; call dword ptr [edi - 0x18]; 
0x0004f983: add al, byte ptr [ebx + 0x6a5004ec]; add byte ptr [ebx - 0x365363], cl; call dword ptr [esi - 0x18]; 
0x00084c4c: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x000b945c: add al, byte ptr [ebx - 0x2d7cfc40]; add byte ptr [ecx - 0x162c763f], cl; ret 0xfffc; 
0x0004f473: add al, byte ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00125539: add al, byte ptr [ebx - 0x3d7cef40]; add al, 0x39; sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x000838c3: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000b368e: add al, byte ptr [ebx - 0x540cfc1e]; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0005ffa6: add al, byte ptr [ebx - 0x77cfb3e]; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0013bed3: add al, byte ptr [ebx - 0x79f0f008]; ret; 
0x000cda65: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00033ab1: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0009c2e3: add al, byte ptr [ecx]; jne 0x9c2d0; pop ebx; pop esi; pop edi; ret; 
0x00042123: add al, byte ptr [ecx]; ret 0x448b; 
0x0004eaaf: add al, byte ptr [ecx]; ret 0x858b; 
0x0002bb9b: add al, byte ptr [ecx]; ret 0x953b; 
0x00052f88: add al, byte ptr [ecx]; ret; 
0x000c8c04: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xc8c30; ret; 
0x0019211e: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00124968: add al, byte ptr fs:[eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0019d718: add al, ch; and ch, byte ptr [edx]; call 0x18de5b20; pop ebx; ret; 
0x00139ec7: add al, ch; and dword ptr [edx - 0x12], 0xffffffff; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x001681ab: add al, ch; call 0x81168214; ret; 
0x001682ab: add al, ch; call 0x81168313; ret; 
0x0012beeb: add al, ch; iretd; jecxz 0x12bee6; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00157678: add al, ch; jb 0x1576a7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00120aab: add al, ch; jmp dword ptr [edi]; 
0x0006dc81: add al, ch; leave; ret 0xffff; 
0x000d5d20: add al, ch; ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x0019da50: add al, ch; ljmp 0x18c4:0x83ffe826; pop ebx; ret; 
0x00083200: add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x00025860: add al, ch; mov edx, 0x8b0010b7; jl 0x2588d; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0010faec: add al, ch; mov esi, 0x89000036; ret 0xdaf7; 
0x000c8f13: add al, ch; pop es; ret; 
0x00031d19: add al, ch; popal; or dword ptr [esi], 0x24448900; and al, 0x89; ret; 
0x0016832b: add al, ch; push 0x81000061; ret; 
0x000f1d5c: add al, ch; push cs; ret 0xffff; 
0x0019dd78: add al, ch; ret 0xe823; 
0x0012bf28: add al, ch; ret 0xf0e2; 
0x0007d5f7: add al, ch; ret; 
0x00136f90: add al, ch; stosb byte ptr es:[edi], al; insb byte ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x3f]; 
0x0007ef0f: add al, ch; stosd dword ptr es:[edi], eax; ret; 
0x00123979: add al, ch; sub ch, byte ptr [ebx - 0x3a7efffc]; and dword ptr [esi], 0x31570010; call dword ptr [esi + 0x53]; 
0x0013025f: add al, ch; wait; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0015ce48: add al, ch; xor byte ptr [ecx + esi*8], 0xff; add esp, 0x18; pop ebx; ret; 
0x0008211d: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x00097fc1: add al, dh; dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e10: add al, dh; dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985be: add al, dh; dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00097c81: add al, dh; dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000a10ad: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00049516: add al, dh; inc esp; and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009a4d3: add bh, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00156c77: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0009790f: add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0008b295: add bh, al; add eax, dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00080477: add bh, al; and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x0012e56a: add bh, al; inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x00093bdd: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011070d: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00153802: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008016e: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007e928: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0006d4c1: add bh, al; inc esp; and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006d471: add bh, al; inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000682f1: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00068299: add bh, al; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006ea6f: add bh, al; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006ea9f: add bh, al; inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006deb9: add bh, al; inc esp; and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00092361: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006de73: add bh, al; inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006e9ef: add bh, al; inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006dbc5: add bh, al; inc esp; and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006e9df: add bh, al; inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00068a55: add bh, al; inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00093437: add bh, al; or byte ptr [eax], 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0014e4a4: add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x0014e288: add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x0014e396: add bh, al; or dword ptr [eax], 0x72; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0014e41d: add bh, al; or eax, 0x61; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0006c378: add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x000fd6e0: add bh, al; test dword ptr [ecx + edi*8 - 1], ebx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x6fb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000decef: add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x000b3902: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000b375e: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x0010af7e: add bh, bh; je 0x10afa6; xor bh, bh; jne 0x10af92; call dword ptr [ebp + 0x24]; 
0x0010bfae: add bh, bh; je 0x10bfd6; xor bh, bh; jne 0x10bfc2; call dword ptr [ebp + 0x24]; 
0x00112b2e: add bh, bh; je 0x112b56; xor bh, bh; jne 0x112b42; call dword ptr [ebp + 0x24]; 
0x0015a4c5: add bh, bh; je 0x15a4ed; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x001603b0: add bh, bh; je 0x1603d8; sbb al, 0x53; call eax; 
0x0016ac51: add bh, bh; je 0x16ac79; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00076ff7: add bh, bh; je 0x7701f; sbb bh, bh; je 0x77023; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0007710c: add bh, bh; je 0x77134; sub bh, bh; je 0x77138; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000817ca: add bh, bh; je 0x817f2; xor bh, bh; je 0x817f6; cmp al, 0x51; call eax; 
0x000dc108: add bh, bh; je 0xdc130; sbb byte ptr [edx - 1], ch; call 0xdc120; add esp, 0x1c; ret; 
0x001029b0: add bh, bh; jne 0x1029bd; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0007841c: add bh, bh; jne 0x783f4; push edx; push ebx; push esi; call eax; 
0x0009997b: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x0016faf7: add bh, bh; mov ah, 0x24; mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x000390ab: add bh, bh; mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x0008de7b: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x0009e9cf: add bh, bh; push dword ptr [esp - 9]; ret 0; 
0x000de8b2: add bh, bh; ret; 
0x000574f4: add bh, byte ptr [eax + 1]; ret; 
0x001037ea: add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000584ea: add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; ret; 
0x000925a2: add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x000377da: add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x000216e9: add bh, byte ptr [eax - 1]; ret; 
0x000b3428: add bh, byte ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x0013ce25: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00053a13: add bh, byte ptr [ecx]; ret 0x8c0f; 
0x0011cc65: add bh, byte ptr [ecx]; ret 0xf089; 
0x0002a17b: add bh, byte ptr [ecx]; test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00028d93: add bh, byte ptr [ecx]; test dword ptr [edi], 0x31382; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00169e7d: add bh, byte ptr [edi + 0x10]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000832d9: add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x00097fba: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e09: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985b7: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00097c7a: add bh, dh; fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000216de: add bh, dh; fmul dword ptr [ebx - 0x1336e]; jmp dword ptr [ebp - 0x77]; 
0x0008d27a: add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000b3255: add bh, dh; ret 0x3f; 
0x00177628: add bh, dh; ret 0xf; 
0x000b3dd5: add bh, dh; ret 3; 
0x000d5dbf: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a03f: add bl, ah; call 0x7d4b9745; add cl, byte ptr [ebp - 0x1848bf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00152890: add bl, byte ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x00150384: add bl, byte ptr [ebx + 0x5e]; mov eax, edx; pop edi; pop ebp; ret; 
0x000a0f08: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000755e6: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000804c4: add bl, byte ptr [ebx + 0x5e]; ret; 
0x0014bf72: add bl, byte ptr [ebx + 0x5e]; sub eax, 1; pop edi; pop ebp; ret; 
0x000740dc: add bl, byte ptr [edi + 0x5d]; ret; 
0x000ab01b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001448a0: add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x00075766: add bl, byte ptr [esi + 0x5f]; ret; 
0x00194fe7: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x0009044d: add bl, ch; fisttp word ptr [ebp - 0x67c837d]; call dword ptr [eax - 0x73]; 
0x00169946: add bl, ch; fsub st(0), st(0); sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00155f14: add bl, ch; fucomi st(0); add al, 0xb1; std; jmp dword ptr [esi - 0x70]; 
0x00024cd3: add bl, ch; fucomi st(0); inc ebp; ret; 
0x00158914: add bl, ch; fucomp st(0); add al, 0x87; std; jmp dword ptr [esi - 0x70]; 
0x0013b8e6: add bl, ch; fucompi st(0); xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x001699b6: add bl, ch; in al, 0xe8; bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x00142d57: add bl, ch; lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x0014b2f9: add bl, ch; mov byte ptr [0xfe5d1fe8], al; dec dword ptr [ebp - 0x652af7b]; call dword ptr [eax - 0x73]; 
0x0013cc5a: add bl, ch; mov dword ptr [ebp - 0x658377a], ecx; call dword ptr [eax - 0x73]; 
0x00029d56: add bl, ch; mov eax, 0x1072c2e8; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x00027b62: add bl, ch; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg esp, edx; jo 0x27b67; call dword ptr [eax - 0x73]; 
0x00091932: add bl, ch; mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], cl; stc; call dword ptr [eax + 0x68]; 
0x0013a831: add bl, ch; or dword ptr [ebp - 0x72ffd98c], 0xfffbc8b5; jmp dword ptr [esi - 0x70]; 
0x001189e8: add bl, ch; ret 0x748d; 
0x000751a4: add bl, ch; ret 0xb48d; 
0x00084370: add bl, ch; ret; 
0x0002d780: add bl, ch; test al, 0xe8; cwde; cmp byte ptr [eax], dl; add byte ptr [ebp - 0x68e7379], cl; call dword ptr [eax - 0x73]; 
0x00099339: add bl, ch; xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000a736f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2f7f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b251f: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af04c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24bf: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefec: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24df: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af00c: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24ff: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af02c: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab46f: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ab47f: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x00125918: add byte ptr [0x1006e7], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x000936a8: add byte ptr [0x192957], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x00093618: add byte ptr [0x1929e7], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935f8: add byte ptr [0x192a07], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000935a8: add byte ptr [0x192a57], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00088978: add byte ptr [0x19d687], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00087768: add byte ptr [0x19e897], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00081d98: add byte ptr [0x1a4267], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00080348: add byte ptr [0x1a5cb7], al; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000382a8: add byte ptr [0x1edd57], al; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038288: add byte ptr [0x1edd77], al; mov eax, dword ptr [eax + 0x68]; ret; 
0x00038058: add byte ptr [0x1edfa7], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002fee8: add byte ptr [0x1f6117], al; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec8: add byte ptr [0x1f6137], al; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea8: add byte ptr [0x1f6157], al; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002f668: add byte ptr [0x1f6997], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002ec58: add byte ptr [0x1f73a7], al; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002b808: add byte ptr [0x1fa7f7], al; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0019293f: add byte ptr [0x1ff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0007a619: add byte ptr [0x200], ah; ret; 
0x00022748: add byte ptr [0x2038b7], al; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022728: add byte ptr [0x2038d7], al; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021dc8: add byte ptr [0x204237], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021748: add byte ptr [0x2048b7], al; lea eax, [eax - 0x6921c]; ret; 
0x00021728: add byte ptr [0x2048d7], al; lea eax, [eax - 0x69214]; ret; 
0x00021408: add byte ptr [0x204bf7], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x00093644: add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x0002d960: add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x00035a71: add byte ptr [0x7fff], ah; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0007a5c9: add byte ptr [0x804], ah; ret; 
0x0015a1ec: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001680b8: add byte ptr [0xbdf47], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0015f7d8: add byte ptr [0xc6827], al; mov edx, dword ptr [eax - 0x150]; lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x00143fe8: add byte ptr [0xe2017], al; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x0008afed: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00131418: add byte ptr [0xf4be7], al; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x0019285a: add byte ptr [0xff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192891: add byte ptr [0xfff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928ca: add byte ptr [0xffff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00093684: add byte ptr [0xffff], bh; jbe 0x93690; ret; 
0x0011e3dd: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x00106b46: add byte ptr [0xfffff000], bh; ja 0x106b58; pop ebx; pop esi; ret; 
0x00107855: add byte ptr [0xfffff000], bh; ja 0x107868; pop ebx; pop esi; pop edi; ret; 
0x00107b89: add byte ptr [0xfffff000], bh; ja 0x107b98; pop ebx; pop esi; ret; 
0x00107bd9: add byte ptr [0xfffff000], bh; ja 0x107be8; pop ebx; pop esi; ret; 
0x00108863: add byte ptr [0xfffff000], bh; ja 0x108870; pop ebx; ret; 
0x0010923d: add byte ptr [0xfffff000], bh; ja 0x109290; add esp, 0x14; pop ebx; pop esi; ret; 
0x00109371: add byte ptr [0xfffff000], bh; ja 0x109380; pop ebx; ret; 
0x00109401: add byte ptr [0xfffff000], bh; ja 0x109450; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011386f: add byte ptr [0xfffff000], bh; ja 0x113880; pop ebx; ret; 
0x00113a3f: add byte ptr [0xfffff000], bh; ja 0x113a60; pop ebx; pop esi; pop edi; ret; 
0x00113ac2: add byte ptr [0xfffff000], bh; ja 0x113ae0; pop ebx; pop esi; pop edi; ret; 
0x00113b3e: add byte ptr [0xfffff000], bh; ja 0x113b60; pop ebx; pop esi; pop edi; ret; 
0x00113bc1: add byte ptr [0xfffff000], bh; ja 0x113be0; pop ebx; pop esi; pop edi; ret; 
0x00113c28: add byte ptr [0xfffff000], bh; ja 0x113c38; pop ebx; pop esi; ret; 
0x00113cd8: add byte ptr [0xfffff000], bh; ja 0x113ce8; pop ebx; pop esi; ret; 
0x001146c3: add byte ptr [0xfffff000], bh; ja 0x1146d0; pop ebx; ret; 
0x00114713: add byte ptr [0xfffff000], bh; ja 0x114720; pop ebx; ret; 
0x00114829: add byte ptr [0xfffff000], bh; ja 0x114838; pop ebx; pop esi; pop edi; ret; 
0x00114879: add byte ptr [0xfffff000], bh; ja 0x114888; pop ebx; pop esi; pop edi; ret; 
0x00114f98: add byte ptr [0xfffff000], bh; ja 0x114fa8; pop ebx; pop esi; ret; 
0x001169ad: add byte ptr [0xfffff000], bh; ja 0x116a00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116a7d: add byte ptr [0xfffff000], bh; ja 0x116ad0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116b5a: add byte ptr [0xfffff000], bh; ja 0x116b68; pop ebx; pop esi; ret; 
0x001183a3: add byte ptr [0xfffff000], bh; ja 0x1183b0; pop ebx; ret; 
0x001183f3: add byte ptr [0xfffff000], bh; ja 0x118400; pop ebx; ret; 
0x00118448: add byte ptr [0xfffff000], bh; ja 0x118458; pop ebx; pop esi; ret; 
0x00118498: add byte ptr [0xfffff000], bh; ja 0x1184a8; pop ebx; pop esi; ret; 
0x0011c4eb: add byte ptr [0xfffff000], bh; ja 0x11c4f8; pop ebx; ret; 
0x0011ede3: add byte ptr [0xfffff000], bh; ja 0x11edf0; pop ebx; ret; 
0x0011ee3d: add byte ptr [0xfffff000], bh; ja 0x11ee50; pop ebx; pop esi; pop edi; ret; 
0x0011f22e: add byte ptr [0xfffff000], bh; ja 0x11f240; pop ebx; pop esi; pop edi; ret; 
0x0011f47d: add byte ptr [0xfffff000], bh; ja 0x11f490; pop ebx; pop esi; pop edi; ret; 
0x0011f9f2: add byte ptr [0xfffff000], bh; ja 0x11fa18; pop ebx; pop esi; pop edi; ret; 
0x00120963: add byte ptr [0xfffff000], bh; ja 0x120970; pop ebx; ret; 
0x001209b3: add byte ptr [0xfffff000], bh; ja 0x1209c0; pop ebx; ret; 
0x00120a03: add byte ptr [0xfffff000], bh; ja 0x120a10; pop ebx; ret; 
0x00120b14: add byte ptr [0xfffff000], bh; ja 0x120b20; pop ebx; pop esi; pop edi; ret; 
0x00174679: add byte ptr [0xfffff000], bh; ja 0x174688; pop ebx; pop esi; ret; 
0x000377c4: add byte ptr [0xfffff000], bh; ja 0x377d0; pop ebx; ret; 
0x00037822: add byte ptr [0xfffff000], bh; ja 0x37870; add esp, 0x14; pop ebx; pop esi; ret; 
0x00058473: add byte ptr [0xfffff000], bh; ja 0x58480; pop ebx; ret; 
0x000584cd: add byte ptr [0xfffff000], bh; ja 0x584e0; pop ebx; pop esi; pop edi; ret; 
0x00082c10: add byte ptr [0xfffff000], bh; ja 0x82c20; pop ebx; pop esi; pop edi; ret; 
0x0008b313: add byte ptr [0xfffff000], bh; ja 0x8b320; pop ebx; pop esi; pop edi; ret; 
0x00091f0f: add byte ptr [0xfffff000], bh; ja 0x91f20; pop ebx; ret; 
0x00092466: add byte ptr [0xfffff000], bh; ja 0x92488; pop ebx; pop esi; pop edi; ret; 
0x00092588: add byte ptr [0xfffff000], bh; ja 0x92598; pop ebx; pop esi; ret; 
0x00092b17: add byte ptr [0xfffff000], bh; ja 0x92b28; pop ebx; ret; 
0x00092ef7: add byte ptr [0xfffff000], bh; ja 0x92f08; pop ebx; ret; 
0x000cade1: add byte ptr [0xfffff000], bh; ja 0xcadf0; pop ebx; ret; 
0x000d7bd2: add byte ptr [0xfffff000], bh; ja 0xd7be0; pop ebx; pop esi; ret; 
0x000dc738: add byte ptr [0xfffff000], bh; ja 0xdc780; add esp, 0x18; pop ebx; ret; 
0x000dce08: add byte ptr [0xfffff000], bh; ja 0xdce30; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f9aa8: add byte ptr [0xfffff000], bh; ja 0xf9ab8; pop ebx; pop esi; ret; 
0x000de01f: add byte ptr [0xfffff001], bh; jae 0x216d0; ret; 
0x001310df: add byte ptr [0xffffff], ah; ret; 
0x0005862e: add byte ptr [eax + 0x1044283], dl; xor eax, eax; pop ebx; pop esi; ret; 
0x0008d5ff: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x000d6420: add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000a703e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a2c6e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a4dae: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dbe: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dce: add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0009227c: add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00120a71: add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x00107f3d: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00108b4e: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00083bd3: add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x00083def: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008403f: add byte ptr [eax + 0x16], bh; ret; 
0x000a70be: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a2cee: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001951de: add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0004a55f: add byte ptr [eax + 0x180], bh; call dword ptr gs:[0x10]; 
0x0008601f: add byte ptr [eax + 0x182], bh; call dword ptr gs:[0x10]; 
0x000ae61f: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ae65f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000d6145: add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000d63aa: add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00038360: add byte ptr [eax + 0x1a5], bh; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000824dc: add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00129c0e: add byte ptr [eax + 0x1b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0018773e: add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x00118a5f: add byte ptr [eax + 0x1ba0000], al; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x000de78d: add byte ptr [eax + 0x20], bh; mov edx, 0x40; cmove eax, edx; ret; 
0x000b210f: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x0003dc86: add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003d496: add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x001876ae: add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x000a700e: add byte ptr [eax + 0x289018b], dl; lea eax, [edx + 3]; pop edi; ret; 
0x000a2c3e: add byte ptr [eax + 0x289018b], dl; mov eax, edi; pop edi; ret; 
0x00129b67: add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x000fb8a3: add byte ptr [eax + 0x30840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x00125c6e: add byte ptr [eax + 0x3130ea83], dl; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012f227: add byte ptr [eax + 0x31], 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00058d3e: add byte ptr [eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x001876be: add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x000c1a66: add byte ptr [eax + 0x3901c083], dl; ret; 
0x00082f4e: add byte ptr [eax + 0x39a0478d], dl; ret; 
0x0015890e: add byte ptr [eax + 0x3b8], dl; add bl, ch; fucomp st(0); add al, 0x87; std; jmp dword ptr [esi - 0x70]; 
0x000de737: add byte ptr [eax + 0x40], bh; ret; 
0x000b22fd: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aee67: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x001876ce: add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018f0ee: add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x0018f04e: add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x000995ce: add byte ptr [eax + 0x5008ec83], dl; push dword ptr [ebx + 0x24]; call edx; 
0x000a4d1e: add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x0015c05d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015c05d: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000fd856: add byte ptr [eax + 0x52], dl; call ebx; 
0x000654ae: add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x001876de: add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0015c18e: add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000f0a2e: add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x001567c4: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00157168: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0007eb5e: add byte ptr [eax + 0x5b00b60f], dl; pop esi; pop edi; ret; 
0x0009d83e: add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x000a4cee: add byte ptr [eax + 0x5b118966], dl; ret; 
0x0018f69e: add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x000b7195: add byte ptr [eax + 0x5d5f5e5b], al; ret; 
0x000ab38e: add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x001634ce: add byte ptr [eax + 0x5ec0315b], dl; pop edi; ret; 
0x0019228e: add byte ptr [eax + 0x5f01478d], dl; ret; 
0x0019408e: add byte ptr [eax + 0x5f01c083], dl; ret; 
0x0007519e: add byte ptr [eax + 0x611be8], dl; add bl, ch; ret 0xb48d; 
0x001876ee: add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000a70de: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000a2d0e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000aecee: add byte ptr [eax + 0x66168b66], dl; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00122861: add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x000aee4e: add byte ptr [eax + 0x66f0ff3], dl; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00116f3a: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0007e9be: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0012076f: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00047a75: add byte ptr [eax + 0x6a], dl; add ebp, eax; ret 0xfefa; 
0x001208ef: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120836: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fc17f: add byte ptr [eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x000c5986: add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00123aa0: add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0012412b: add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235db: add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0017fe1e: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0011af0e: add byte ptr [eax + 0x7608fb83], dl; sub al, 0x69; ret; 
0x00192121: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00192110: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001920ff: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0004a5b6: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000de63d: add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000de65f: add byte ptr [eax + 0x7f], bh; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de5d0: add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00156c9e: add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x0015e9be: add byte ptr [eax + 0x8244489], dl; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x001248d6: add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0010267e: add byte ptr [eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00086ae4: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00085cf6: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00156c8e: add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00041696: add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00037647: add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x00085ea9: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00090953: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008d324: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0004b74e: add byte ptr [eax + 0xb8], dl; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00124486: add byte ptr [eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0011fb5e: add byte ptr [eax + 0xc244c8d], dl; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00194045: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000d7a1d: add byte ptr [eax + 0xdc], bh; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00087e8f: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00193fd8: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019403b: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x0018768e: add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x000884d8: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088fe9: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00089fd4: add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00090daa: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000860e7: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e49: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008a43f: add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008ace3: add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008b4ec: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001709ce: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000de68f: add byte ptr [eax + 0xfc17], bh; pop ebx; ret; 
0x000a0a9e: add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00188f7f: add byte ptr [eax + 1], bh; ja 0x188f89; neg eax; pop ebp; ret; 
0x0018e37f: add byte ptr [eax + 1], bh; ja 0x18e389; neg eax; ret; 
0x0018e67f: add byte ptr [eax + 1], bh; ja 0x18e689; neg eax; pop ebp; ret; 
0x000c8a5f: add byte ptr [eax + 1], bh; jg 0xc8a69; neg eax; ret; 
0x0009959f: add byte ptr [eax + 1], bh; ret; 
0x000c8c6f: add byte ptr [eax + 2], bh; ret; 
0x000871df: add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x000877a7: add byte ptr [eax + 3], bh; ret; 
0x00193f9c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x000c8c8f: add byte ptr [eax + 4], bh; ret; 
0x000c8c9f: add byte ptr [eax + 5], bh; ret; 
0x000c8caf: add byte ptr [eax + 6], bh; ret; 
0x00102e8c: add byte ptr [eax + 7], 0xf9; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000c8cbf: add byte ptr [eax + 7], bh; ret; 
0x00193ff5: add byte ptr [eax + 8], bh; pop edi; ret; 
0x000871b5: add byte ptr [eax + eax - 0x1f7d0000], 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x001261dc: add byte ptr [eax + eax], 0x81; ret; 
0x000c8d08: add byte ptr [eax + eax], 0x8d; dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x00128359: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; and dword ptr [eax + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x000fb7c9: add byte ptr [eax + eax], al; add byte ptr [ecx], cl; ret 0x840f; 
0x000f0053: add byte ptr [eax + eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0013ccbe: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00114e98: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00156c79: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x000de867: add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000ddd55: add byte ptr [eax + esi - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf5: add byte ptr [eax + esi - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0014dd71: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x0006fbff: add byte ptr [eax - 0x14bff3b2], al; ret 0xb48d; 
0x0008ec78: add byte ptr [eax - 0x15], al; ret; 
0x001920b9: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x0015f9f7: add byte ptr [eax - 0x18], dl; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x00080448: add byte ptr [eax - 0x18], dl; mov cl, 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001104f1: add byte ptr [eax - 0x18], dl; push 0x83fffffd; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000596b7: add byte ptr [eax - 0x18], dl; ret 0x401; 
0x000cd0e6: add byte ptr [eax - 0x18], dl; ret; 
0x000c8c1e: add byte ptr [eax - 0x1a7f0a78], dl; pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x0007166e: add byte ptr [eax - 0x1a800000], al; add dword ptr [edx + ebp*2 - 0x77], esi; ret; 
0x00079efe: add byte ptr [eax - 0x1a800000], al; add dword ptr [edx + ebx*2 - 0x77], esi; ret; 
0x0007a418: add byte ptr [eax - 0x1a800000], al; add dword ptr [esi + edi - 0x77], esi; ret; 
0x000a8bf2: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001920ca: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019520e: add byte ptr [eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x00126724: add byte ptr [eax - 0x2f770000], al; ret; 
0x0004ddc5: add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x000c8d16: add byte ptr [eax - 0x37763e77], dl; ret; 
0x001920db: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0004b60e: add byte ptr [eax - 0x3f7ce775], dl; add al, 0x83; ret 0x8904; 
0x000ebb3e: add byte ptr [eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x000ec2ce: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x000e92fa: add byte ptr [eax - 0x3f7cf8f4], cl; add dword ptr [ecx], edi; ret; 
0x001924be: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x00113ffd: add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x00194769: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001551de: add byte ptr [eax - 0x47fb3b7d], dl; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0014cdc6: add byte ptr [eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00146666: add byte ptr [eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0018e86e: add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0002b7fe: add byte ptr [eax - 0x4e1f00d], dl; call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0002171e: add byte ptr [eax - 0x4e1f00d], dl; call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x0007f67e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00176efe: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x00161f3e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 1; ret; 
0x001572de: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 2; ret; 
0x0007b3ae: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc7e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0007f5ce: add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x0008f048: add byte ptr [eax - 0x5c9a001a], dl; pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19714f7d], cl; call dword ptr [ecx + 0x50]; 
0x00199e67: add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000e5141: add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x00146fff: add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x000b2f2e: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x000b2f3e: add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x000b335e: add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x000a1096: add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0013920e: add byte ptr [eax - 0x72f7137d], dl; xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000b59fc: add byte ptr [eax - 0x73], dl; adc eax, -0x6b; stc; call dword ptr [eax - 0x18]; 
0x00024c61: add byte ptr [eax - 0x73], dl; adc esi, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00117737: add byte ptr [eax - 0x73], dl; add al, 0x16; out dx, eax; call dword ptr [eax - 0x73]; 
0x0014f755: add byte ptr [eax - 0x73], dl; add al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00126c93: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x18], -0x10; call dword ptr [eax - 0x18]; 
0x00128363: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x0013347c: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x00139f85: add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x5000004b], -0x73; add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x001350b3: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x6f; bnd call dword ptr [eax - 0x73]; 
0x00133483: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x000db50c: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x71; bnd call dword ptr [eax - 0x73]; 
0x0012771c: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x72; bnd call dword ptr [eax - 0x73]; 
0x00139f8c: add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x00023b0d: add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x0016482f: add byte ptr [eax - 0x73], dl; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000e1b50: add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000c7a56: add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000c7b39: add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0014a522: add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x000c7aa0: add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x0012835c: add byte ptr [eax - 0x73], dl; and dword ptr [eax + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x0013297f: add byte ptr [eax - 0x73], dl; and dword ptr [eax - 0x35], 0xfffffff0; call dword ptr [eax - 0x18]; 
0x000c17f9: add byte ptr [eax - 0x73], dl; and eax, 0xffffff97; stc; call dword ptr [eax - 0x18]; 
0x00165c88: add byte ptr [eax - 0x73], dl; and ebp, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00075ff3: add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00076b33: add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00058d7f: add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00133609: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x49], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x00139f7e: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x4b], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x5000004b], -0x73; add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x00024c93: add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x000db505: add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + edi], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x71; bnd call dword ptr [eax - 0x73]; 
0x00165c08: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x00156afc: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x0002e9a8: add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x000c7959: add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x30; stc; call dword ptr [eax - 0x18]; 
0x0019d07a: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cd6ad: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00023ae3: add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cd6eb: add byte ptr [eax - 0x73], dl; or esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x000c7aea: add byte ptr [eax - 0x73], dl; sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x00024bd0: add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x000cd6cc: add byte ptr [eax - 0x73], dl; sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x00079d20: add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x7d; stc; call dword ptr [eax - 0x18]; 
0x00144cb9: add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x00090461: add byte ptr [eax - 0x73], dl; sub dword ptr [edi + 0x40], -7; call dword ptr [eax - 0x18]; 
0x00079d3f: add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x001350ac: add byte ptr [eax - 0x73], dl; sub dword ptr [edx + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x6f; bnd call dword ptr [eax - 0x73]; 
0x000faa1b: add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0002da32: add byte ptr [eax - 0x73], dl; sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00089e28: add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x000cdb46: add byte ptr [eax - 0x73], dl; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0007daa5: add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x00089f76: add byte ptr [eax - 0x73], dl; test eax, esp; jg 0x89f76; call dword ptr [eax - 0x18]; 
0x000c3e13: add byte ptr [eax - 0x73], dl; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00089de4: add byte ptr [eax - 0x73], dl; test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x0014b312: add byte ptr [eax - 0x73], dl; test esp, edi; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00028706: add byte ptr [eax - 0x73], dl; xchg ah, bh; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000563c0: add byte ptr [eax - 0x73], dl; xchg ah, dl; jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x00028752: add byte ptr [eax - 0x73], dl; xchg ah, dl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00088347: add byte ptr [eax - 0x73], dl; xchg al, ah; jg 0x88347; call dword ptr [eax - 0x18]; 
0x00089086: add byte ptr [eax - 0x73], dl; xchg al, ah; jg 0x89086; call dword ptr [eax - 0x18]; 
0x000ca95b: add byte ptr [eax - 0x73], dl; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x001672dd: add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x000442ff: add byte ptr [eax - 0x73], dl; xchg al, bl; jne 0x442ff; call dword ptr [eax - 0x18]; 
0x00146c97: add byte ptr [eax - 0x73], dl; xchg al, bl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x00044345: add byte ptr [eax - 0x73], dl; xchg al, ch; je 0x44345; call dword ptr [eax - 0x18]; 
0x000fd8b7: add byte ptr [eax - 0x73], dl; xchg al, ch; popfd; stc; call dword ptr [eax - 0x18]; 
0x000b607d: add byte ptr [eax - 0x73], dl; xchg al, dl; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00149c33: add byte ptr [eax - 0x73], dl; xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00029c44: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x70], cl; stc; call dword ptr [eax - 0x18]; 
0x000883da: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x000441e0: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x00044419: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jbe 0x44419; call dword ptr [eax - 0x18]; 
0x00029c67: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x29c67; call dword ptr [eax - 0x18]; 
0x0002b06f: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x2b06f; call dword ptr [eax - 0x18]; 
0x00044226: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x0014f449: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x0014aaa1: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x60], dl; stc; call dword ptr [eax - 0x18]; 
0x00029d73: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00025f29: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2], bh; stc; call dword ptr [eax - 0x18]; 
0x00025e38: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2], bl; stc; call dword ptr [eax - 0x18]; 
0x0013caae: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x18]; 
0x000fd23f: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x0014aac0: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x60], ah; stc; call dword ptr [eax - 0x18]; 
0x00138df9: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x000443d3: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x00023715: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000286c5: add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x000861a0: add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x00025f6f: add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025ecd: add byte ptr [eax - 0x73], dl; xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00026487: add byte ptr [eax - 0x73], dl; xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000885c4: add byte ptr [eax - 0x73], dl; xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x00026e73: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x70], ecx; stc; call dword ptr [eax - 0x18]; 
0x000656f6: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00041030: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi - 7], edi; call dword ptr [eax - 0x18]; 
0x000fa969: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x18]; 
0x000fa947: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x63], esi; stc; call dword ptr [eax - 0x18]; 
0x0008889a: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebp; stc; call dword ptr [eax - 0x18]; 
0x000895ec: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebp; stc; call dword ptr [eax - 0x18]; xchg byte ptr [edx - 6], ah; jmp dword ptr [esi - 0x70]; 
0x00101e49: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0004100d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0x4100d; call dword ptr [eax - 0x18]; 
0x000474a4: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050bf3: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba929: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7c8: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c041e: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x00026e96: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x26e96; call dword ptr [eax - 0x18]; 
0x00027b9d: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x27b9d; call dword ptr [eax - 0x18]; 
0x000411c9: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000411a8: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00087054: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x000905a5: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x00149fae: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0014808b: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4], esp; stc; call dword ptr [eax - 0x18]; 
0x0004048e: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x000b9b50: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x0004362d: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x00087098: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x000870ba: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x3f], ebx; stc; call dword ptr [eax - 0x18]; 
0x00026f7a: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x0002524f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], ebx; stc; call dword ptr [eax - 0x18]; 
0x00025348: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; 
0x000258b0: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x00086fb8: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2], edx; stc; call dword ptr [eax - 0x18]; 
0x00041076: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0012bccc: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x00086fda: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x47], ebp; stc; call dword ptr [eax - 0x18]; 
0x0004112f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00100ed2: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ecx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000410cf: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x000c393a: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x000baab1: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00102075: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00086ffc: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x000411ec: add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x000fa98b: add byte ptr [eax - 0x73], dl; xchg eax, eax; popfd; stc; call dword ptr [eax - 0x18]; 
0x000fa903: add byte ptr [eax - 0x73], dl; xchg eax, eax; pushfd; stc; call dword ptr [eax - 0x18]; 
0x0016778c: add byte ptr [eax - 0x73], dl; xchg eax, eax; stc; call dword ptr [eax - 0x18]; 
0x00040fea: add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x40fea; call dword ptr [eax - 0x18]; 
0x00047481: add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c87: add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8c0: add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03fb: add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x00041175: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0x41175; call dword ptr [eax - 0x18]; 
0x000473a2: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c18: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000baa02: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6a9: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c0490: add byte ptr [eax - 0x73], dl; xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x00151d6e: add byte ptr [eax - 0x73], dl; xchg eax, ecx; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0002d799: add byte ptr [eax - 0x73], dl; xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00149ff4: add byte ptr [eax - 0x73], dl; xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000c3802: add byte ptr [eax - 0x73], dl; xchg eax, edx; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00100e84: add byte ptr [eax - 0x73], dl; xchg ebp, esp; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0008a856: add byte ptr [eax - 0x73], dl; xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x00041053: add byte ptr [eax - 0x73], dl; xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x000c395d: add byte ptr [eax - 0x73], dl; xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0008a875: add byte ptr [eax - 0x73], dl; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00025306: add byte ptr [eax - 0x73], dl; xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00026eb9: add byte ptr [eax - 0x73], dl; xchg esp, edi; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00026f22: add byte ptr [eax - 0x73], dl; xchg esp, edx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000e41d7: add byte ptr [eax - 0x73], dl; xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0013e297: add byte ptr [eax - 0x73], dl; xor al, 0x7f; int1; call dword ptr [eax - 0x73]; 
0x0014a4ff: add byte ptr [eax - 0x73], dl; xor al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0014e173: add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014e173: add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x0002e95b: add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00023b31: add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x0013e1c7: add byte ptr [eax - 0x73], dl; xor eax, 0x7f; int1; call dword ptr [eax - 0x73]; 
0x0011d036: add byte ptr [eax - 0x74bbbf75], dl; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0016b136: add byte ptr [eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0010309e: add byte ptr [eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0012d4fe: add byte ptr [eax - 0x74fe3f7d], dl; dec edx; add al, 0x83; ret 0x8518; 
0x000ca534: add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x0007a47e: add byte ptr [eax - 0x76b7b175], dl; ret; 
0x0016797e: add byte ptr [eax - 0x76efbd75], dl; ret 0xf839; 
0x000ee99e: add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x0008bd8e: add byte ptr [eax - 0x76ffba75], dl; ret 0xe283; 
0x0011d8f9: add byte ptr [eax - 0x77000000], 0x56; add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x0016e61e: add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000ebb0e: add byte ptr [eax - 0x7a2641f1], dl; fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x001931de: add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x000fab46: add byte ptr [eax - 0x7bf02d7c], dl; nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x0007222e: add byte ptr [eax - 0x7bf039c7], dl; call 0x89072239; ret 0x808b; 
0x00170303: add byte ptr [eax - 0x7bf09d07], al; ret; 
0x000e5138: add byte ptr [eax - 0x7bf0a205], al; push ecx; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x000466c3: add byte ptr [eax - 0x7bf0cfc1], al; ret 0xd; 
0x0009128e: add byte ptr [eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x0008b44f: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00048e4e: add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x00121b3e: add byte ptr [eax - 0x7c76f373], dl; ret 0x8d01; 
0x0004f1ae: add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0018de4e: add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x001876fe: add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x001511a6: add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x000bc116: add byte ptr [eax - 0x7cfbbd75], dl; ret 0x8304; 
0x0016deee: add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x000a15de: add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0013f436: add byte ptr [eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x0002e7de: add byte ptr [eax - 0x7f72fff8], al; cld; jno 0x2e7e0; call dword ptr [eax - 0x18]; 
0x0010924e: add byte ptr [eax - 0x8767418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00066e0f: add byte ptr [eax - 0x89843], al; jmp dword ptr [eax]; 
0x0006bcf7: add byte ptr [eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x000b4a1b: add byte ptr [eax - 0x90015d6], 0x81; add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0009a4fb: add byte ptr [eax - 0x900171c], 0x41; jle 0x9a514; cmovne eax, edx; ret; 
0x0009a3ab: add byte ptr [eax - 0x900172d], 0x81; add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x000b81ae: add byte ptr [eax - 0x917a8ab], dl; bound ecx, qword ptr [ebx]; add byte ptr [ecx + 0x16de49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x001169be: add byte ptr [eax - 0x94de418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00116a8e: add byte ptr [eax - 0x94eb418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00130386: add byte ptr [eax - 0xa8c18], dl; jmp dword ptr [esi - 0x70]; 
0x00130596: add byte ptr [eax - 0xc9c18], dl; jmp dword ptr [esi - 0x70]; 
0x001305de: add byte ptr [eax - 0xce418], dl; jmp dword ptr [esi - 0x70]; 
0x00052914: add byte ptr [eax - 0xcf43], al; jmp dword ptr [esi + 0xf]; 
0x0013063e: add byte ptr [eax - 0xd4418], dl; jmp dword ptr [esi - 0x70]; 
0x00035e00: add byte ptr [eax - 0xdb], al; jg 0x35e11; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x00036140: add byte ptr [eax - 0xdb], al; jg 0x36151; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0008ad1e: add byte ptr [eax - 0xe7f2dcf], dl; xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00133487: add byte ptr [eax - 0xe], dh; call dword ptr [eax - 0x73]; 
0x0008dd9f: add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002166e: add byte ptr [eax - 0xfb137d], dl; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000220cc: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00160a9c: add byte ptr [eax - 1], bh; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00144221: add byte ptr [eax - 1], bh; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0003ba7c: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011408c: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003758c: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037494: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003752c: add byte ptr [eax - 1], bh; ret; 
0x000225bb: add byte ptr [eax - 1], dl; jae 0x225c4; call esi; 
0x0002666f: add byte ptr [eax - 1], dl; je 0x26698; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027178: add byte ptr [eax - 1], dl; je 0x271a1; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00027e40: add byte ptr [eax - 1], dl; je 0x27e69; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x000293d0: add byte ptr [eax - 1], dl; je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a7c8: add byte ptr [eax - 1], dl; je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b52b: add byte ptr [eax - 1], dl; je 0x2b554; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0003a72a: add byte ptr [eax - 1], dl; je 0x3a753; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x000e4526: add byte ptr [eax - 7], cl; call dword ptr [eax - 0x18]; 
0x000b59f9: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; adc eax, -0x6b; stc; call dword ptr [eax - 0x18]; 
0x000293cd: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a7c5: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0014e313: add byte ptr [eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0007f3c3: add byte ptr [eax], 0; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7f3c0; ret; 
0x00081d3a: add byte ptr [eax], 0; add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x0011d8fa: add byte ptr [eax], 0; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x00081c67: add byte ptr [eax], 0; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x000e9498: add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x0013da1c: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0008262e: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0019898c: add byte ptr [eax], 0; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0019a18d: add byte ptr [eax], 0; add dh, dh; ret 0x7407; 
0x0019969d: add byte ptr [eax], 0; add dh, dh; ret; 
0x00035a6f: add byte ptr [eax], 0; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x0014e302: add byte ptr [eax], 0; das; je 0x14e36c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00126725: add byte ptr [eax], 0; mov eax, edx; ret; 
0x00118a60: add byte ptr [eax], 0; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00116f3b: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0002fa71: add byte ptr [eax], 0; ret; 
0x00058d7c: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0009b004: add byte ptr [eax], 0xaf; cmc; inc dword ptr [ebx - 0x6d72fe1d]; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0009a03e: add byte ptr [eax], 0xe3; call 0x7d4b9745; add cl, byte ptr [ebp - 0x1848bf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001268a4: add byte ptr [eax], ah; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002fb00: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x0009a37e: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; adc byte ptr [esi + 0x440fffe7], dh; ret 0x66c3; 
0x00099f8e: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; jo 0x99f5b; call 0xc24daf99; ret; 
0x0009aeee: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; jo 0x9aebe; call 0xc24dbef9; ret; 
0x000a12ee: add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; ror ah, 1; call 0xc24e22f9; ret; 
0x0009a3b4: add byte ptr [eax], al; add al, 0xf; inc ebp; ret 0x66c3; 
0x000f58c9: add byte ptr [eax], al; add al, al; call 0xfe1ddd4; xchg esp, eax; ret 0xd020; 
0x001310c8: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00131187: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001487f4: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x001681a9: add byte ptr [eax], al; add al, ch; call 0x81168214; ret; 
0x001682a9: add byte ptr [eax], al; add al, ch; call 0x81168313; ret; 
0x00157676: add byte ptr [eax], al; add al, ch; jb 0x1576a7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00120aa9: add byte ptr [eax], al; add al, ch; jmp dword ptr [edi]; 
0x0006dc7f: add byte ptr [eax], al; add al, ch; leave; ret 0xffff; 
0x0019da4e: add byte ptr [eax], al; add al, ch; ljmp 0x18c4:0x83ffe826; pop ebx; ret; 
0x000c8f11: add byte ptr [eax], al; add al, ch; pop es; ret; 
0x00168329: add byte ptr [eax], al; add al, ch; push 0x81000061; ret; 
0x000f1d5a: add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x001703f5: add byte ptr [eax], al; add al, ch; ret; 
0x0007ef0d: add byte ptr [eax], al; add al, ch; stosd dword ptr es:[edi], eax; ret; 
0x00123977: add byte ptr [eax], al; add al, ch; sub ch, byte ptr [ebx - 0x3a7efffc]; and dword ptr [esi], 0x31570010; call dword ptr [esi + 0x53]; 
0x00080475: add byte ptr [eax], al; add bh, al; and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x0014e4a2: add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x0014e286: add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x0006c376: add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0015a4c3: add byte ptr [eax], al; add bh, bh; je 0x15a4ed; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x001603ae: add byte ptr [eax], al; add bh, bh; je 0x1603d8; sbb al, 0x53; call eax; 
0x00097fb8: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e07: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985b5: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000b3253: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00169944: add byte ptr [eax], al; add bl, ch; fsub st(0), st(0); sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00155f12: add byte ptr [eax], al; add bl, ch; fucomi st(0); add al, 0xb1; std; jmp dword ptr [esi - 0x70]; 
0x00158912: add byte ptr [eax], al; add bl, ch; fucomp st(0); add al, 0x87; std; jmp dword ptr [esi - 0x70]; 
0x0013b8e4: add byte ptr [eax], al; add bl, ch; fucompi st(0); xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x001699b4: add byte ptr [eax], al; add bl, ch; in al, 0xe8; bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x00142d55: add byte ptr [eax], al; add bl, ch; lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x0014b2f7: add byte ptr [eax], al; add bl, ch; mov byte ptr [0xfe5d1fe8], al; dec dword ptr [ebp - 0x652af7b]; call dword ptr [eax - 0x73]; 
0x0013cc58: add byte ptr [eax], al; add bl, ch; mov dword ptr [ebp - 0x658377a], ecx; call dword ptr [eax - 0x73]; 
0x00091930: add byte ptr [eax], al; add bl, ch; mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], cl; stc; call dword ptr [eax + 0x68]; 
0x001625ec: add byte ptr [eax], al; add bl, ch; ret 0xb48d; 
0x0016254f: add byte ptr [eax], al; add bl, ch; ret; 
0x0015a1ea: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00192858: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019288f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928c8: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00106b44: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x106b58; pop ebx; pop esi; ret; 
0x00107b87: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x107b98; pop ebx; pop esi; ret; 
0x00107bd7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x107be8; pop ebx; pop esi; ret; 
0x00108861: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x108870; pop ebx; ret; 
0x0010936f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x109380; pop ebx; ret; 
0x0011386d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x113880; pop ebx; ret; 
0x00113c26: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x113c38; pop ebx; pop esi; ret; 
0x00113cd6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x113ce8; pop ebx; pop esi; ret; 
0x001146c1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1146d0; pop ebx; ret; 
0x00114711: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114720; pop ebx; ret; 
0x00114f96: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114fa8; pop ebx; pop esi; ret; 
0x00116b58: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x116b68; pop ebx; pop esi; ret; 
0x001183a1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1183b0; pop ebx; ret; 
0x001183f1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x118400; pop ebx; ret; 
0x00118446: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x118458; pop ebx; pop esi; ret; 
0x00118496: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1184a8; pop ebx; pop esi; ret; 
0x0011c4e9: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11c4f8; pop ebx; ret; 
0x0011ede1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11edf0; pop ebx; ret; 
0x00120961: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120970; pop ebx; ret; 
0x001209b1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1209c0; pop ebx; ret; 
0x00120a01: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120a10; pop ebx; ret; 
0x00174677: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x174688; pop ebx; pop esi; ret; 
0x000377c2: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x377d0; pop ebx; ret; 
0x00058471: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x58480; pop ebx; ret; 
0x00091f0d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x91f20; pop ebx; ret; 
0x00092586: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x92598; pop ebx; pop esi; ret; 
0x00092b15: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x92b28; pop ebx; ret; 
0x00092ef5: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x92f08; pop ebx; ret; 
0x000caddf: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xcadf0; pop ebx; ret; 
0x000d7bd0: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xd7be0; pop ebx; pop esi; ret; 
0x000dc736: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xdc780; add esp, 0x18; pop ebx; ret; 
0x000dce06: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xdce30; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f9aa6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xf9ab8; pop ebx; pop esi; ret; 
0x000de01d: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x216d0; ret; 
0x000d641e: add byte ptr [eax], al; add byte ptr [eax + 0x10b], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009227a: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00120a6f: add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x00107f3b: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00108b4c: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00083bd1: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x00170955: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008b0c5: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x001951dc: add byte ptr [eax], al; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000d6143: add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000d63a8: add byte ptr [eax], al; add byte ptr [eax + 0x197], bh; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000824da: add byte ptr [eax], al; add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000b210d: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x00129b65: add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x000c257c: add byte ptr [eax], al; add byte ptr [eax + 0x3901c083], dl; ret; 
0x00082f4c: add byte ptr [eax], al; add byte ptr [eax + 0x39a0478d], dl; ret; 
0x0018f0ec: add byte ptr [eax], al; add byte ptr [eax + 0x486f0ff3], dl; ret 0xff3; 
0x000995cc: add byte ptr [eax], al; add byte ptr [eax + 0x5008ec83], dl; push dword ptr [ebx + 0x24]; call edx; 
0x0015c18c: add byte ptr [eax], al; add byte ptr [eax + 0x560cec83], dl; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000f0a2c: add byte ptr [eax], al; add byte ptr [eax + 0x568bd689], dl; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x0018f69c: add byte ptr [eax], al; add byte ptr [eax + 0x5b5fc031], dl; ret; 
0x000b7193: add byte ptr [eax], al; add byte ptr [eax + 0x5d5f5e5b], al; ret; 
0x0019408c: add byte ptr [eax], al; add byte ptr [eax + 0x5f01c083], dl; ret; 
0x0012285f: add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012076d: add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001208ed: add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120834: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00124129: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235d9: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0017fe1c: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x0011af0c: add byte ptr [eax], al; add byte ptr [eax + 0x7608fb83], dl; sub al, 0x69; ret; 
0x001920fd: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x0004a5b4: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00156c9c: add byte ptr [eax], al; add byte ptr [eax + 0x800c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00156c8c: add byte ptr [eax], al; add byte ptr [eax + 0xa00c7], dl; add byte ptr [eax], al; pop ebx; ret; 
0x00037645: add byte ptr [eax], al; add byte ptr [eax + 0xae], bh; call dword ptr gs:[0x10]; 
0x00090951: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008d322: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0004b74c: add byte ptr [eax], al; add byte ptr [eax + 0xb8], dl; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x0011fb5c: add byte ptr [eax], al; add byte ptr [eax + 0xc244c8d], dl; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00194043: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00087e8d: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x00193fd6: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00194039: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000884d6: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089fd2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00090da8: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008ace1: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001709cc: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000de68d: add byte ptr [eax], al; add byte ptr [eax + 0xfc17], bh; pop ebx; ret; 
0x0018e37d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x18e389; neg eax; ret; 
0x0009959d: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000871dd: add byte ptr [eax], al; add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x00193f9a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x00193ff3: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x0008ec76: add byte ptr [eax], al; add byte ptr [eax - 0x15], al; ret; 
0x0004b60c: add byte ptr [eax], al; add byte ptr [eax - 0x3f7ce775], dl; add al, 0x83; ret 0x8904; 
0x000ec2cc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x00113ffb: add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x00194767: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00176efc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x00161f3c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 1; ret; 
0x001572dc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 2; ret; 
0x0002fc7c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0007f5cc: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000b2f2c: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], ah; ret; 
0x000b2f3c: add byte ptr [eax], al; add byte ptr [eax - 0x723f42f1], dl; inc esp; or byte ptr [eax], dh; ret; 
0x000b335c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; adc byte ptr [eax], ah; ret; 
0x000b59fa: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc eax, -0x6b; stc; call dword ptr [eax - 0x18]; 
0x00075ff1: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00165c06: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x00079d1e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x7d; stc; call dword ptr [eax - 0x18]; 
0x00079d3d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x0002da30: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x000c3e11: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000563be: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, dl; jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x001672db: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x00146c95: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, bl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x000b607b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, dl; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00149c31: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0014f447: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x0014aa9f: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x60], dl; stc; call dword ptr [eax - 0x18]; 
0x0014aabe: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x60], ah; stc; call dword ptr [eax - 0x18]; 
0x00138df7: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x00023713: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0008619e: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x000656f4: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00088898: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x80], ebp; stc; call dword ptr [eax - 0x18]; 
0x000905a3: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x000c3938: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x00086ffa: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x0016778a: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, eax; stc; call dword ptr [eax - 0x18]; 
0x000c3800: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, edx; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000c395b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0012d4fc: add byte ptr [eax], al; add byte ptr [eax - 0x74fe3f7d], dl; dec edx; add al, 0x83; ret 0x8518; 
0x000ca532: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x000ee99c: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret 0xe989; 
0x000ebb0c: add byte ptr [eax], al; add byte ptr [eax - 0x7a2641f1], dl; fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x001931dc: add byte ptr [eax], al; add byte ptr [eax - 0x7bdfb673], dl; in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0007222c: add byte ptr [eax], al; add byte ptr [eax - 0x7bf039c7], dl; call 0x89072239; ret 0x808b; 
0x00170301: add byte ptr [eax], al; add byte ptr [eax - 0x7bf09d07], al; ret; 
0x0004f1ac: add byte ptr [eax], al; add byte ptr [eax - 0x7ccf157d], dl; cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0016deec: add byte ptr [eax], al; add byte ptr [eax - 0x7cfd49f1], dl; ret 0x8801; 
0x001305dc: add byte ptr [eax], al; add byte ptr [eax - 0xce418], dl; jmp dword ptr [esi - 0x70]; 
0x0008dd9d: add byte ptr [eax], al; add byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000220ca: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0011408a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0003758a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037492: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003752a: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00027e3e: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x27e69; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x000293ce: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a7c6: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b529: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2b554; push eax; push dword ptr [esp + 0x50]; call esi; 
0x000f1d58: add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x0014b2f5: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; mov byte ptr [0xfe5d1fe8], al; dec dword ptr [ebp - 0x652af7b]; call dword ptr [eax - 0x73]; 
0x00176f19: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000f1d56: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add al, ch; push cs; ret 0xffff; 
0x0007972a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x00074b3a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00118ed2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011767d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0014e28d: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008047c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x0014fd56: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x00097944: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000827d9: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x001573db: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00080486: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007972c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x00074b3c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x0019d8ac: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00163901: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0019d9a5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00097945: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014f739: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0014c86f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x00094245: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x192a8f7d], cl; call dword ptr [eax + 0x56]; 
0x00097911: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000bd127: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000723b5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007b385: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080425: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x001573dc: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00191f4c: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; ret; 
0x0019357c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1935d0; lea eax, [ecx + 0xa]; ret; 
0x0019358c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1935d0; lea eax, [ecx + 0xb]; ret; 
0x0019359c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1935d0; lea eax, [ecx + 0xd]; ret; 
0x001935ac: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x001935bc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1935d0; lea eax, [ecx + 0xf]; ret; 
0x0019355c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x0019356c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1935d0; lea eax, [ecx + 9]; ret; 
0x0008b35e: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007e92c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00118ed4: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002270c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00083c6c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x0011767f: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001026dc: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000b2c4c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b2c6c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b2c3c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x00083f8c: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014e28f: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008cbdb: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x00123267: add byte ptr [eax], al; add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0009d7f5: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0009052f: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0008b0ec: add byte ptr [eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x8b100; mov eax, 0x16; ret; 
0x000802fc: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0016e0dc: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008032c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x0008030c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000682f6: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0018eba3: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x18f320; pop ebx; ret; 
0x0018e9dc: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x18f336; pop ebx; ret; 
0x0019034b: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x190590; pop ebx; ret; 
0x00191a15: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x191c40; pop ebx; ret; 
0x00191ad2: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x191c60; pop ebx; ret; 
0x0004a6aa: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x4a6b2; push ecx; ret; 
0x0004a950: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x4a958; push ecx; ret; 
0x0019485c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00194adc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0019392c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x000b4f64: add byte ptr [eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00092f94: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00191f46: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x001310d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x000b3349: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b2f19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a079: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000991e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00154f68: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x000821b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00080358: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x00194855: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00192308: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00192318: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192328: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00192338: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00192348: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00192298: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001922a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001922b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001922c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001922d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001922e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001922f8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x00192768: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x00192758: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x00192748: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x00192738: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001927d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001927c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001927b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00194ae8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001927a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00192798: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x00192788: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x00192778: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00193926: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000a4cd5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008de09: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084039: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x00146419: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x0013d609: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c8c56: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c8c69: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c8c79: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c8c89: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c8c99: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c8ca9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c8cb9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00194828: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000dcdf9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c8c37: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00193327: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00193337: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00193347: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00193357: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00193367: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x001932c7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x001932d7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x001932e7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x001932f7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00193307: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00193317: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00193997: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x001939a7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x001939b7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x001939c7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x00193937: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x00193947: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x00193957: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00193967: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00193977: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00193987: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000c8c47: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a4cc6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00192358: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00094e39: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000aecdc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4cdc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00083988: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00080474: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x0008047e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x0014fd58: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0007f470: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x000f6a75: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008cb2a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00149582: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f6a6e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007f477: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x0008398f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00156cb1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00037eca: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00170954: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008b0c4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0012076c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001208ec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004a5b3: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00087e8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000de68c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x00176f1a: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0018e37c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ja 0x18e389; neg eax; ret; 
0x0009959c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x000871dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 3; add esp, 0xc; ret; 
0x0011d0cc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x0015537a: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0003751c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0019519c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00161f74: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00193f3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0019488c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007a8a4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b189c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00192e3c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00021544: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000cd914: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012082c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011f95c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0014e0ac: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x00083f80: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00090495: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011f374: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0004a76d: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0008441d: add byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0008a7d3: add byte ptr [eax], al; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x000a4d7c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d8c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d6c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d9c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0018769c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019408b: add byte ptr [eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x000b333b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b335b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b2f2b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f3b: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007ee9a: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00161f3b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x001572db: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x0015518a: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0007f5cb: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x0011fb5b: add byte ptr [eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00156c8b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00156c9b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a4d0b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000de7db: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x00083aaa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000de69a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000de6aa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x00085ffa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a596b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013bdbb: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a4d4a: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000af05b: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00081d7b: add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x0013119b: add byte ptr [eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x00143d3a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x00039f8a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00075503: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00097946: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000827db: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0018e85c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004a7cb: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0010faa4: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000aaaec: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00110711: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00194a1c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00160fb6: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x001573dd: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0012e56e: add byte ptr [eax], al; add byte ptr [eax], al; push 0x1000002; call edx; 
0x00021dd7: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007f7bc: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0015602c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00099514: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x000723b6: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x723d0; ret; 
0x0007b386: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7b3a0; ret; 
0x00080426: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80440; ret; 
0x00058669: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x0016a9d4: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c8a4c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000b306c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00037ed0: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00037993: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00103582: add byte ptr [eax], al; add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x00058399: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x0018f30a: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0015f0a8: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000c9a9f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0011715f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x0008d5b0: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007b333: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00037bad: add byte ptr [eax], al; add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x0015eb91: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0011c943: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x1018; pop ebx; ret; 
0x00121f36: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x18; pop ebx; ret; 
0x00106f72: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00142440: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x001074f9: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000a2e1a: add byte ptr [eax], al; add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000cb05a: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x000df7a8: add byte ptr [eax], al; add byte ptr [ebp + 0x19], dh; add esp, 0x78; pop ebx; ret; 
0x00114c25: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00106ddf: add byte ptr [eax], al; add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000934e7: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00122221: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000cd781: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00121e11: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x28; pop ebx; ret; 
0x0016b129: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x28; pop ebx; ret; 
0x00176716: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x0008f3d4: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x2c; ret; 
0x00114a8f: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000979d5: add byte ptr [eax], al; add byte ptr [ebp + 0x20840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1637a], cl; jmp dword ptr [ebp - 0x75]; 
0x00051388: add byte ptr [eax], al; add byte ptr [ebp + 0x20], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x0008f8d0: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x0008434c: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081646: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x2c; ret; 
0x0011498b: add byte ptr [eax], al; add byte ptr [ebp + 0x22], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00081b6d: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0016b1cb: add byte ptr [eax], al; add byte ptr [ebp + 0x24], dh; add esp, 0x28; pop ebx; ret; 
0x00194856: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x000a4cd6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00190275: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0018e366: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00116de3: add byte ptr [eax], al; add byte ptr [ebp + 0x27], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c2f9f: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x000817ae: add byte ptr [eax], al; add byte ptr [ebp + 0x28], dh; add esp, 0x2c; ret; 
0x00143f9f: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x0013bdad: add byte ptr [eax], al; add byte ptr [ebp + 0x2a], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038826: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38839; add esp, 0x9c; ret; 
0x00191c30: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00160722: add byte ptr [eax], al; add byte ptr [ebp + 0x2d], dh; add esp, 0x1c; ret; 
0x0008e5a9: add byte ptr [eax], al; add byte ptr [ebp + 0x2e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00168158: add byte ptr [eax], al; add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x001683de: add byte ptr [eax], al; add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008fa60: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00155f71: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d021d: add byte ptr [eax], al; add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x00037d53: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x00081487: add byte ptr [eax], al; add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d5d67: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x000cac96: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x28; pop ebx; ret; 
0x00106ec8: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0008f4ea: add byte ptr [eax], al; add byte ptr [ebp + 0x38], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003aeae: add byte ptr [eax], al; add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x00093be2: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0008f164: add byte ptr [eax], al; add byte ptr [ebp + 0x3b], dh; add esp, 0x38; pop ebx; ret; 
0x0008e64b: add byte ptr [eax], al; add byte ptr [ebp + 0x3c], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0019054e: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000cdaaa: add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15c3df6e], cl; call dword ptr [ecx + 0x52]; 
0x0016b2f9: add byte ptr [eax], al; add byte ptr [ebp + 0x3e], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00143d9f: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000d93bb: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x28; pop ebx; ret; 
0x00037a8f: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x000dc85c: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00083cea: add byte ptr [eax], al; add byte ptr [ebp + 0x448b0076], cl; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0018f2d6: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x000ddd77: add byte ptr [eax], al; add byte ptr [ebp + 0x46], dh; add esp, 0x28; pop ebx; ret; 
0x00143eff: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00077ab4: add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0014422f: add byte ptr [eax], al; add byte ptr [ebp + 0x48], dh; add esp, 0x1c; ret; 
0x00105f02: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016236b: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x18; pop ebx; ret; 
0x0016ac36: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x000de0e0: add byte ptr [eax], al; add byte ptr [ebp + 0x4d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0015e861: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x001138ec: add byte ptr [eax], al; add byte ptr [ebp + 0x51], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013e17b: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013e247: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x000d5dfa: add byte ptr [eax], al; add byte ptr [ebp + 0x548b0076], cl; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00109df0: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0016251f: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dh; add esp, 0x18; pop ebx; ret; 
0x0016fafc: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000cad4f: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001625bb: add byte ptr [eax], al; add byte ptr [ebp + 0x59], dh; add esp, 0x18; pop ebx; ret; 
0x00143e3f: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x001131c3: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x00161fd4: add byte ptr [eax], al; add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x0005e5b6: add byte ptr [eax], al; add byte ptr [ebp + 0x64850fdb], al; in eax, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000a4cf9: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x00115e3a: add byte ptr [eax], al; add byte ptr [ebp + 0x67], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013e26b: add byte ptr [eax], al; add byte ptr [ebp + 0x68], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f9875: add byte ptr [eax], al; add byte ptr [ebp + 0x6a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d5eba: add byte ptr [eax], al; add byte ptr [ebp + 0x6c8d0076], cl; and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0015b8c0: add byte ptr [eax], al; add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x00075366: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00130c66: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0015a4df: add byte ptr [eax], al; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0018e377: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x18e389; neg eax; ret; 
0x000c8c57: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00094e47: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00066e77: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x001143d9: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001232d4: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x001302ea: add byte ptr [eax], al; add byte ptr [ebp + 0xbe80076], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0015eb15: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x00107c45: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107d05: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x000a4d5a: add byte ptr [eax], al; add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x001699a5: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x18; pop ebx; ret; 
0x00154f5a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0004a6ab: add byte ptr [eax], al; add byte ptr [ebp + 2], dh; push ecx; ret; 
0x00021db0: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003aaad: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0015feec: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x000370bf: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0008a20b: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x00093080: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000c9bca: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00057dec: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00081ee5: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010fb0b: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x000385cc: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00117f7d: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001635d1: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00122b02: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00038105: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x12c; ret; 
0x000cdc4c: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000484f9: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x42c; ret; 
0x0003882d: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x00163643: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0010a3c1: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x00147939: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x00057d6d: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011c142: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000d7116: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0008d4f5: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; and eax, 0x38; cmp eax, 8; je 0x8d503; ret; 
0x00081c09: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; and edx, 0x38; cmp edx, 8; je 0x81c17; ret; 
0x00036479: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00037433: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0004cc37: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00098cf5: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00037b2e: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00190582: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0008d27e: add byte ptr [eax], al; add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x000fadaa: add byte ptr [eax], al; add byte ptr [ebp - 0x12c52f79], cl; call dword ptr [eax + 0x6a]; 
0x000fb26a: add byte ptr [eax], al; add byte ptr [ebp - 0x12c52f7a], cl; call dword ptr [eax + 0x6a]; 
0x000a1355: add byte ptr [eax], al; add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000922ba: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x193f2f79], cl; call dword ptr [eax - 0x73]; 
0x001219ca: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001189ba: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x00092c5a: add byte ptr [eax], al; add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [eax - 0x2c], -0x1a; call dword ptr [eax - 0x73]; 
0x000460da: add byte ptr [eax], al; add byte ptr [ebp - 0x157cff8a], cl; xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x0007972e: add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x00074b3e: add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00083b0a: add byte ptr [eax], al; add byte ptr [ebp - 0x1f7cff8a], cl; std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000213e2: add byte ptr [eax], al; add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000b4f65: add byte ptr [eax], al; add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x00098567: add byte ptr [eax], al; add byte ptr [ebp - 0x297bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000dcdfa: add byte ptr [eax], al; add byte ptr [ebp - 0x2f76ff8a], cl; call dword ptr gs:[0x10]; 
0x000213f0: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x0012486a: add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x00082baa: add byte ptr [eax], al; add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x0004892a: add byte ptr [eax], al; add byte ptr [ebp - 0x3c7cff8a], cl; add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x000832dc: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011c998: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x0011a45a: add byte ptr [eax], al; add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000e7e5a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00094e3a: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x001078d2: add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001207f8: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001638b4: add byte ptr [eax], al; add byte ptr [ebp - 0x49f6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000975db: add byte ptr [eax], al; add byte ptr [ebp - 0x4d7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x0013025a: add byte ptr [eax], al; add byte ptr [ebp - 0x6417ff8a], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00099e89: add byte ptr [eax], al; add byte ptr [ebp - 0x66b7780], cl; call dword ptr [eax + 0x68]; 
0x00099980: add byte ptr [eax], al; add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x00163979: add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x00149b37: add byte ptr [eax], al; add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x0002f7b8: add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x00034e0c: add byte ptr [eax], al; add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0015cae1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x00137d61: add byte ptr [eax], al; add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x00091941: add byte ptr [eax], al; add byte ptr [ebp - 0x6bf547a], cl; call dword ptr [eax - 0x73]; 
0x00089505: add byte ptr [eax], al; add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008879c: add byte ptr [eax], al; add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x000c8c38: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x00193328: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x00193338: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x00193348: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x00193358: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x00193368: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x001932c8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x001932d8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x001932e8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x001932f8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x00193308: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x00193318: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x00192288: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x00192278: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x00193998: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x001939a8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x001939b8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x001939c8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x00193938: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x00193948: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x00193958: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x00193968: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x00193978: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x00193988: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x000a4ce8: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c8c48: add byte ptr [eax], al; add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x00087dd1: add byte ptr [eax], al; add byte ptr [ebp - 0x7257f72], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001922b9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x00194ae9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x00192799: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x00192759: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x00192329: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x00192739: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x00192349: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x001922d9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x00192789: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x001927b9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x001927a9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x00116997: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a67: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00109227: add byte ptr [eax], al; add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011b96d: add byte ptr [eax], al; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000ea0d6: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; adc al, byte ptr [ebp - 0x9dc8a01]; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000d5dde: add byte ptr [eax], al; add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008d3dc: add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x000825c4: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x0014d83d: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0003a87f: add byte ptr [eax], al; add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x00094e4d: add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000d989d: add byte ptr [eax], al; add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000b0bc9: add byte ptr [eax], al; add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x0016078c: add byte ptr [eax], al; add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00121a02: add byte ptr [eax], al; add byte ptr [ebp - 0x7c578b2e], al; in al, dx; or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x0013beea: add byte ptr [eax], al; add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x000cde45: add byte ptr [eax], al; add byte ptr [ebp - 0x7cbf8b40], al; ret; 
0x000b2b99: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x00188f19: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x00180259: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x0007536c: add byte ptr [eax], al; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001608b5: add byte ptr [eax], al; add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aec5: add byte ptr [eax], al; add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x000a2f79: add byte ptr [eax], al; add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000de016: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107d9c: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0013bcfd: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0008f1b6: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x001490cd: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x00149208: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000dcd3c: add byte ptr [eax], al; add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0005416d: add byte ptr [eax], al; add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x00099125: add byte ptr [eax], al; add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00192edd: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x00193f1d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001935ad: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0010c705: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010738e: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00124963: add byte ptr [eax], al; add byte ptr [ebx + 0x26497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00196226: add byte ptr [eax], al; add byte ptr [ebx + 0x2904245c], cl; ret 0xfa83; 
0x00114d6d: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x00192ecd: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x00193f0d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019359d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00086a30: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0011b195: add byte ptr [eax], al; add byte ptr [ebx + 0x31182444], cl; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000ea5ec: add byte ptr [eax], al; add byte ptr [ebx + 0x34ff5307], cl; mov al, 0xff; je 0xea61c; and al, 0xe8; ret 0xfcb0; 
0x00120733: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b3: add byte ptr [eax], al; add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00140101: add byte ptr [eax], al; add byte ptr [ebx + 0x395c2474], cl; ret; 
0x00198615: add byte ptr [eax], al; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00192ebd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x00193efd: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019358d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x00157a25: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x157a55; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016046c: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x16049c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0015602d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00070436: add byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00091730: add byte ptr [eax], al; add byte ptr [ebx + 0x450f04f8], al; ret 0x968b; 
0x00056fe5: add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000c223e: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1c50: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c1a2c: add byte ptr [eax], al; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d249d: add byte ptr [eax], al; add byte ptr [ebx + 0x490f01ea], al; ret 0x708d; 
0x00192ead: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x00193eed: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0019357d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0009ef2a: add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x00161f75: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0015adf7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d8b7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015cea7: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009f27d: add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x0015e2e4: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x00093c05: add byte ptr [eax], al; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000df7b5: add byte ptr [eax], al; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00103a35: add byte ptr [eax], al; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007cc8c: add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0007cc0c: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x00072f2a: add byte ptr [eax], al; add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x00096c85: add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000ce14d: add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x00192e9d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x00193edd: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0019356d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0002270d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000d5fdb: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007e92d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000d62a9: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00092f89: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00078053: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00155b27: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x001238aa: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x000dc490: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0010a4ff: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c8ab4: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000879f2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014afb2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0012e9fd: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0002831d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00195d08: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000225fd: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00071836: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008271f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00193f3d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x00083c6d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00037a97: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x00103536: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0008f3c9: add byte ptr [eax], al; add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f655: add byte ptr [eax], al; add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x0007fc6b: add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0015537b: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x000733d9: add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x00192e8d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x00193ecd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0019355d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x000933e1: add byte ptr [eax], al; add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0012a588: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x18; push 0; push 0x2000004; call eax; 
0x0007bb9f: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x001552af: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000582c5: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0007305d: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x73075; push esi; call dword ptr [ebx + 0x2c]; 
0x0007291d: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x72931; push edx; call dword ptr [ebx + 0x1c]; 
0x0015dc23: add byte ptr [eax], al; add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0012082d: add byte ptr [eax], al; add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00107a2b: add byte ptr [eax], al; add byte ptr [ebx + 0x90249c], cl; add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00108a10: add byte ptr [eax], al; add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000871b7: add byte ptr [eax], al; add byte ptr [ebx + 0x97510e0], al; add esp, 0xc; ret; 
0x00107f34: add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108a17: add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00120a68: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00083b9e: add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x001200cf: add byte ptr [eax], al; add byte ptr [ebx + 0xb0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00192eed: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x00193f2d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0008b0ed: add byte ptr [eax], al; add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001935bd: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x0012331a: add byte ptr [eax], al; add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x001688e1: add byte ptr [eax], al; add byte ptr [ebx + 0xc48b3], cl; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x000d5dcd: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00122864: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; call dword ptr gs:[0x10]; 
0x000f5d47: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x00054e5d: add byte ptr [eax], al; add byte ptr [ebx + 0xf10247c], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x000de667: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x0016f945: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0007a897: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008674b: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087e1d: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c70: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017694b: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x00146e03: add byte ptr [eax], al; add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x0014692b: add byte ptr [eax], al; add byte ptr [ebx - 0x1137f], cl; jmp dword ptr [ebp - 0x39]; 
0x0015c68c: add byte ptr [eax], al; add byte ptr [ebx - 0x12b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0015c6e7: add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000378b5: add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x001227cd: add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0008e65d: add byte ptr [eax], al; add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x7d]; 
0x000374d5: add byte ptr [eax], al; add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x77]; 
0x0009249d: add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0012fafd: add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0007d5ad: add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003757d: add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x0014c871: add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000217d5: add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x7d]; 
0x000df08d: add byte ptr [eax], al; add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x001481fd: add byte ptr [eax], al; add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013970a: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x0004812d: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0011c1cd: add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d61cd: add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x39]; 
0x0008ec2a: add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x0003751d: add byte ptr [eax], al; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0013290a: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; dec dword ptr [ecx - 0x16e7dbbc]; mov ebp, 0xe8fffffe; jmp esi; 
0x00048111: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00148ca9: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x0010d19f: add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [esi - 0x77]; 
0x0016f8e5: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00077b88: add byte ptr [eax], al; add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x0002f635: add byte ptr [eax], al; add byte ptr [ebx - 0x13b68], cl; jmp dword ptr [ebp - 0x77]; 
0x000eb42d: add byte ptr [eax], al; add byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x000975e3: add byte ptr [eax], al; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000d744a: add byte ptr [eax], al; add byte ptr [ebx - 0x17acf314], al; cli; ret; 
0x000f1994: add byte ptr [eax], al; add byte ptr [ebx - 0x17fbdbbc], cl; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x000dfeee: add byte ptr [eax], al; add byte ptr [ebx - 0x18f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x0010415e: add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x000b48ae: add byte ptr [eax], al; add byte ptr [ebx - 0x1c877d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000e9490: add byte ptr [eax], al; add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000c1fb2: add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x00114b13: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x000a0b13: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00087bd1: add byte ptr [eax], al; add byte ptr [ebx - 0x27cc71b], al; or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x0004c234: add byte ptr [eax], al; add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x00102ee5: add byte ptr [eax], al; add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0016216c: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00118a2b: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0014edc9: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x000c6d1d: add byte ptr [eax], al; add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x0004fe8d: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004f845: add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x0004e708: add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000c54b8: add byte ptr [eax], al; add byte ptr [ebx - 0x363363], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x000c5424: add byte ptr [eax], al; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0004e664: add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0011fc4f: add byte ptr [eax], al; add byte ptr [ebx - 0x3776bb3c], al; pop ebx; pop esi; ret; 
0x000e93ad: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003ac56: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000227b3: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0007f3c4: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7f3c0; ret; 
0x001026dd: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0009845a: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00140b4d: add byte ptr [eax], al; add byte ptr [ebx - 0x44773], cl; jmp dword ptr [ebp - 0x75]; 
0x0005e77f: add byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x00142005: add byte ptr [eax], al; add byte ptr [ebx - 0x44f7b], cl; dec dword ptr [ebx - 0x45373]; jmp dword ptr [ebp - 0x75]; 
0x000ff341: add byte ptr [eax], al; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0016801d: add byte ptr [eax], al; add byte ptr [ebx - 0x45fbdbbc], cl; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000e0db9: add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000e10cc: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e0e93: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000377b2: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e3744: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000e3513: add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x0007a89c: add byte ptr [eax], al; add byte ptr [ebx - 0x497233ab], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0005ff1d: add byte ptr [eax], al; add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00124759: add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000623c5: add byte ptr [eax], al; add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x000609dd: add byte ptr [eax], al; add byte ptr [ebx - 0x5037b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005c5bd: add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00081d3b: add byte ptr [eax], al; add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x000825df: add byte ptr [eax], al; add byte ptr [ebx - 0x5d9af7c0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0008bfcf: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008b3d9: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00057fe5: add byte ptr [eax], al; add byte ptr [ebx - 0x6072f714], al; jg 0x58020; stc; call dword ptr [ecx + 0x53]; 
0x0015f945: add byte ptr [eax], al; add byte ptr [ebx - 0x637d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0003a9fd: add byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b51ad: add byte ptr [eax], al; add byte ptr [ebx - 0x677f], cl; jmp dword ptr [ebp - 0x75]; 
0x0010cb93: add byte ptr [eax], al; add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00169792: add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x0016891d: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00070e60: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000fd6e8: add byte ptr [eax], al; add byte ptr [ebx - 0x6fb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013e036: add byte ptr [eax], al; add byte ptr [ebx - 0x7172fb14], al; pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x001604b5: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x00080f3b: add byte ptr [eax], al; add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x00157857: add byte ptr [eax], al; add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00025237: add byte ptr [eax], al; add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x00025e20: add byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00024bb8: add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00038e65: add byte ptr [eax], al; add byte ptr [ebx - 0x72cfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x00094096: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x0006aee5: add byte ptr [eax], al; add byte ptr [ebx - 0x72ff22f9], cl; push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x0006f28d: add byte ptr [eax], al; add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x0011f375: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001768bc: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012398c: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120952: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00058462: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00122d40: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00028614: add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x000b8a0e: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x001631b0: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000e976b: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00088525: add byte ptr [eax], al; add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0015e7e4: add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x0002d095: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; scasd eax, dword ptr es:[edi]; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0006c38a: add byte ptr [eax], al; add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x00154103: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001364c5: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x001637f9: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0014cd44: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x0014dc90: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00193fe0: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000bc3ce: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x00165815: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000e49bd: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000e9dd1: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x000cbd31: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x000e9c83: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011cc75: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb3c], al; push 0x5bfff94a; pop esi; ret; 
0x000f0675: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x0008e055: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7dbbc], cl; in al, dx; or byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x000eff8d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004ba75: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00153ca3: add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0016847d: add byte ptr [eax], al; add byte ptr [ebx - 0x7f97f314], al; add dword ptr [eax], eax; add al, ch; ret; 
0x00065f75: add byte ptr [eax], al; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x000d7b65: add byte ptr [eax], al; add byte ptr [ebx - 0x8d3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0011657d: add byte ptr [eax], al; add byte ptr [ebx - 0x8e3dbbc], cl; fisttp word ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00037705: add byte ptr [eax], al; add byte ptr [ebx - 0x8f3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0011423d: add byte ptr [eax], al; add byte ptr [ebx - 0x8f3dbbc], cl; fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0011382d: add byte ptr [eax], al; add byte ptr [ebx - 0x8f7dbb4], cl; fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x000384b5: add byte ptr [eax], al; add byte ptr [ebx - 0x8fbdb8c], cl; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x000718f6: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x71908; push esi; call dword ptr [ebx + 0x1c]; 
0x00099460: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0x9948e; call eax; 
0x0016f777: add byte ptr [eax], al; add byte ptr [ebx - 0xaefb14], al; je 0x16f7a5; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0015c8cc: add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0013eb25: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0011cd50: add byte ptr [eax], al; add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x0009b943: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0006db34: add byte ptr [eax], al; add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x001518b5: add byte ptr [eax], al; add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x0011390a: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00082faf: add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7c38: add byte ptr [eax], al; add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001071aa: add byte ptr [eax], al; add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x00094d2b: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829da], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000b86a6: add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0013f6f6: add byte ptr [eax], al; add byte ptr [ecx + 0x24448b10], cl; sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp - 0x75]; 
0x0004a76e: add byte ptr [eax], al; add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00160705: add byte ptr [eax], al; add byte ptr [ecx + 0x310c2454], cl; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0014432b: add byte ptr [eax], al; add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00122547: add byte ptr [eax], al; add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x87; div ch; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00024074: add byte ptr [eax], al; add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00161aa7: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x4a; sub esi, ebp; call ecx; 
0x00161b87: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x6a; sub dh, ch; call ecx; 
0x0013b860: add byte ptr [eax], al; add byte ptr [ecx + 0x313c2444], cl; shr al, 0xb2; jb 0x13b86b; inc dword ptr [ebp - 0x76a98740]; ret; 
0x0015eb4c: add byte ptr [eax], al; add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00114470: add byte ptr [eax], al; add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00083cda: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0012c1a8: add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000f483f: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x00121d37: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224c7: add byte ptr [eax], al; add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016008c: add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00114435: add byte ptr [eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00070fc0: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000ac15d: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0011d715: add byte ptr [eax], al; add byte ptr [ecx + 0x5e5b1056], cl; pop edi; ret; 
0x000d736a: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000711f5: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00070f29: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00066609: add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x000884db: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089fd7: add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00085e9f: add byte ptr [eax], al; add byte ptr [ecx + 0x7c888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00094247: add byte ptr [eax], al; add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x192a8f7d], cl; call dword ptr [eax + 0x56]; 
0x0019a6ee: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0008262a: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090dad: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000860ea: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b713: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00082e4c: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00088c1a: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000368d3: add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00084115: add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015e955: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003783b: add byte ptr [eax], al; add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dcd63: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0014e0ad: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov eax, ecx; ret; 
0x0008a7c8: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00037814: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0008a442: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x0004b752: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x0004a541: add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007b1b5: add byte ptr [eax], al; add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x00119ad7: add byte ptr [eax], al; add byte ptr [ecx - 0x17a9a81b], cl; ret 0x549; 
0x0010d852: add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00088a12: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x000c723a: add byte ptr [eax], al; add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x000503ba: add byte ptr [eax], al; add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0008b3cc: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c5100: add byte ptr [eax], al; add byte ptr [ecx - 0x36376b], cl; dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x0004e348: add byte ptr [eax], al; add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x001630db: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0016309b: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x0008c4e3: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x0012345f: add byte ptr [eax], al; add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122145: add byte ptr [eax], al; add byte ptr [ecx - 0x47dbdb84], cl; sbb eax, 0xf000000; inc ebp; ret; 
0x00038672: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061ab9: add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0005c065: add byte ptr [eax], al; add byte ptr [ecx - 0x5bb4b], cl; dec dword ptr [ecx - 0x76287608]; ret 0x7de9; 
0x00081ca9: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; jl 0x81cb3; add byte ptr [eax], al; ret; 
0x0011d8fb: add byte ptr [eax], al; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000fd682: add byte ptr [eax], al; add byte ptr [ecx - 0x70b7b], cl; dec dword ptr [ebx - 0x6fb43]; jmp dword ptr [ebp + 3]; 
0x00026520: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00081c68: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x001201c7: add byte ptr [eax], al; add byte ptr [ecx - 0x74a7dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00162144: add byte ptr [eax], al; add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00038477: add byte ptr [eax], al; add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038427: add byte ptr [eax], al; add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000d161a: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00090956: add byte ptr [eax], al; add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x00094035: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x0015a1ef: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x001223f6: add byte ptr [eax], al; add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x122389; ret 0x448b; 
0x000240a2: add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0019a244: add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x00122840: add byte ptr [eax], al; add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x0003a5be: add byte ptr [eax], al; add byte ptr [ecx - 0x7cebdbb4], cl; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0015952a: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00028506: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x0004045c: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdba4], cl; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x000455f9: add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x0004a7cc: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013e600: add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x00166d66: add byte ptr [eax], al; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000dc2b2: add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000b43ad: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000b460a: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x00083c55: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000b26c5: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0009438a: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x0016c4fd: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x1deb; 
0x000ee11c: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x00124c39: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x000f1817: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0016b91a: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000cb626: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x000eaf6e: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0008bfd8: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6174; 
0x0008c733: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6674; 
0x0008b67b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7e74; 
0x0008b3e2: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0007c361: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x860f; 
0x00067558: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014f7ad: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x000ecc2d: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x0009bd6c: add byte ptr [eax], al; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000c16a2: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1da7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c1c5a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000cf6da: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000d19b1: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x000d4934: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000d1919: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x0009ef32: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x000d3a9b: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000c1a36: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000d009a: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000cb281: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000ce409: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x00044014: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd889; 
0x000984a3: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xda21; 
0x0002c626: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf883; 
0x000c74a0: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x0002c563: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00199673: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x00199e6d: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000971ec: add byte ptr [eax], al; add byte ptr [ecx], cl; ret; 
0x000db7b0: add byte ptr [eax], al; add byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x5f]; 
0x0012412e: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x001235de: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00083ed2: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849cb: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000983ca: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008b566: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00087e22: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102c75: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000501d0: add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00087ae7: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00083833: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00086086: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00086010: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0008a950: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000723b7: add byte ptr [eax], al; add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007b387: add byte ptr [eax], al; add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080427: add byte ptr [eax], al; add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0005866a: add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58678; ret; 
0x0002194f: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x000aaaed: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c8944: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0010faa5: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000c8a62: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x0018b632: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00188f82: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0018f6b2: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00187742: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x00190268: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x0006f388: add byte ptr [eax], al; add byte ptr [edi + 7], dh; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00190593: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000c8a32: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x0009a3b3: add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0004ea4b: add byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000d3de4: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x000d3c86: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x0006e027: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret; 
0x000d1f73: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x0009062f: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0004f352: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x0005270e: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004b64b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x000f0c3b: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x00140163: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x000e9499: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000d5def: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000a069f: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x00090530: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0xc3c3; 
0x0012214e: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret; 
0x000d7a20: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010fafd: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x000936eb: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8189; 
0x0008cbdc: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8dc3; 
0x0008d341: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x000cb331: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x00151897: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x4489; 
0x0013da1d: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x00123268: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x90c3; 
0x000df600: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x31c3; 
0x000b5708: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000de777: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00164861: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8589; 
0x00083bd6: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000d251e: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000ed31b: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0007a755: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x00056e47: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0006ad14: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0013d8b5: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b2874: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00138c53: add byte ptr [eax], al; add byte ptr [edi], cl; mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x000b2c4d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000aec4d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0004003f: add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00142e99: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0018f0dd: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0018e9dd: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00108ffb: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x000d07a3: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax], ebp; loope 0xd07aa; call dword ptr [edi + 0x57]; 
0x001904ca: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0018f188: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0018efa8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0018ea78: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0018edd2: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0011fb49: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018eba4: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00092f83: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018ecac: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x0019043e: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00155b21: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0018ec21: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00195c0d: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0018f391: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], eax; inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x000dc48a: add byte ptr [eax], al; add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0018f891: add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0018b691: add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; jle 0x18b68b; call dword ptr [ebx - 0x18]; 
0x0007f420: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0019a17d: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x000c0bbe: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0004cfca: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0010cc3d: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x4f8b; 
0x000c4c70: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x0004998e: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000de709: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0015a4e6: add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x001552e8: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000de640: add byte ptr [eax], al; add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x0008441e: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000de603: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x0008b4ef: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c6d3: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089784: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844e0: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b909: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c64: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000de662: add byte ptr [eax], al; add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000de625: add byte ptr [eax], al; add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000de5d3: add byte ptr [eax], al; add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x00082c02: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0016b718: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0014afad: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008270c: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00084f59: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a94b: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082e13: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844ae: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085133: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007c8e2: add byte ptr [eax], al; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0008262f: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000826ae: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00070953: add byte ptr [eax], al; add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x000c44d5: add byte ptr [eax], al; add byte ptr [edx - 0x18], dl; ret 0xd4d; 
0x000c763c: add byte ptr [eax], al; add byte ptr [edx - 0x75], dl; popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000b3de4: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0004a53d: add byte ptr [eax], al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007ce6d: add byte ptr [eax], al; add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00160fb7: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x001573de: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00199e62: add byte ptr [eax], al; add byte ptr [esi + 0x25], ah; add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0004a9e2: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000a4d7d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d8d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d6d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d9d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0018feb1: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0017761d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000b2b5f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000b2e48: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2e6d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00086750: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x000383d3: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00085e9a: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00070ede: add byte ptr [eax], al; add byte ptr [esi - 0x18], dl; stc; ret 0; 
0x000b2c5b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0007ee9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x0008036b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0015518b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x0016340b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0002ec2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a720b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000abadb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a721b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a2e2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000a4d2b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00083aab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000de69b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x7e; pop ebx; ret; 
0x000de6ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x00085ffb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a4d4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001951ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x00083bab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00143d3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x00039f8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a0deb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0008fe5d: add byte ptr [eax], al; add byte ptr [esi - 0x77], dl; rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; sub eax, 0x81000de6; ret; 
0x001029aa: add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x000991a4: add byte ptr [eax], al; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x00081e39: add byte ptr [eax], al; add cl, al; call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00098aed: add byte ptr [eax], al; add cl, al; call 0xfd9c408; inc edi; ret 0xc083; 
0x0007114a: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x000213cc: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x0011e6f0: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x00169dbd: add byte ptr [eax], al; add cl, ch; and eax, 0xe8ffffff; push esi; jb 0x169dc5; jmp dword ptr [esi - 0x70]; 
0x00020076: add byte ptr [eax], al; add cl, ch; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00109ca5: add byte ptr [eax], al; add cl, ch; cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0004c80c: add byte ptr [eax], al; add cl, ch; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0019898d: add byte ptr [eax], al; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00101dd6: add byte ptr [eax], al; add cl, ch; imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x00146a86: add byte ptr [eax], al; add cl, ch; paddd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00034b86: add byte ptr [eax], al; add cl, ch; psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0015d860: add byte ptr [eax], al; add cl, ch; push 0xe8ffffff; mov bl, 0x37; std; jmp dword ptr [esi - 0x70]; 
0x0011df99: add byte ptr [eax], al; add cl, ch; push ebx; idiv bh; dec dword ptr [ebp - 0x65eb77d]; call dword ptr [eax - 0x73]; 
0x00034bcc: add byte ptr [eax], al; add cl, ch; push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x00043e28: add byte ptr [eax], al; add cl, ch; ret 0xffe3; 
0x000bc6a3: add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x000f5c2f: add byte ptr [eax], al; add cl, ch; ret 0xfff0; 
0x0006c0dd: add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x000278da: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x00020136: add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00020036: add byte ptr [eax], al; add cl, ch; ret 0xffff; 
0x000e066d: add byte ptr [eax], al; add cl, ch; ret 3; 
0x00023275: add byte ptr [eax], al; add cl, ch; ret; 
0x0004012a: add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x0007fd51: add byte ptr [eax], al; add cl, ch; sub eax, 0xe8fffffe; ret 0xb12; 
0x00193286: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x193320; lea eax, [ecx + 8]; ret; 
0x001932af: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x0019a18e: add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0012fc0d: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x00028a08: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0008b698: add byte ptr [eax], al; add dh, dh; ret 0x7502; 
0x0008df99: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00193ddc: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0019476f: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x00193cdd: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00193e06: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x00193e0f: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x00052305: add byte ptr [eax], al; add dh, dh; ret 0xf50; 
0x0019805c: add byte ptr [eax], al; add dh, dh; ret; 
0x000935d8: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c0], edx; ret; 
0x00093588: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c4], edx; ret; 
0x00093528: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c8], edx; ret; 
0x00093558: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1e4], edx; ret; 
0x00082bff: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e10: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009afbe: add byte ptr [eax], al; add dword ptr [ebp - 0xaeaaf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f28e: add byte ptr [eax], al; add dword ptr [ebp - 0xaeacf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b09e: add byte ptr [eax], al; add dword ptr [ebp - 0xaf0cf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000803c8: add byte ptr [eax], al; add dword ptr [ebx + 0x19a0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000803ce: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00083c56: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0014efa6: add byte ptr [eax], al; add dword ptr [ebx - 0x72efdb8c], ecx; xchg byte ptr [ebx + 0x2a], bl; stc; call dword ptr [eax + 0x53]; 
0x0015d8b8: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015cea8: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015a1eb: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00193d20: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001680b7: add byte ptr [eax], al; add eax, 0xbdf47; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0015f7d7: add byte ptr [eax], al; add eax, 0xc6827; mov edx, dword ptr [eax - 0x150]; lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x00193d49: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00191f4e: add byte ptr [eax], al; add eax, 1; ret; 
0x00193cd3: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x00193cf9: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x0015adf8: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00124b7c: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x000b26c6: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x00195217: add byte ptr [eax], al; add eax, edx; ret; 
0x001933ac: add byte ptr [eax], al; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x0019357e: add byte ptr [eax], al; add edx, 0xa; jl 0x1935d0; lea eax, [ecx + 0xa]; ret; 
0x0019358e: add byte ptr [eax], al; add edx, 0xb; jl 0x1935d0; lea eax, [ecx + 0xb]; ret; 
0x001934f9: add byte ptr [eax], al; add edx, 0xc; jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x0019359e: add byte ptr [eax], al; add edx, 0xd; jl 0x1935d0; lea eax, [ecx + 0xd]; ret; 
0x001935ae: add byte ptr [eax], al; add edx, 0xe; jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x001935be: add byte ptr [eax], al; add edx, 0xf; jl 0x1935d0; lea eax, [ecx + 0xf]; ret; 
0x00142253: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00193496: add byte ptr [eax], al; add edx, 4; jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x0019355e: add byte ptr [eax], al; add edx, 7; jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x001934cf: add byte ptr [eax], al; add edx, 8; jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x0019356e: add byte ptr [eax], al; add edx, 9; jl 0x1935d0; lea eax, [ecx + 9]; ret; 
0x0006db35: add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0003b70b: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000227b4: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008b360: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00124b4f: add byte ptr [eax], al; add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00124b73: add byte ptr [eax], al; add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d5c44: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000220b2: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x000791ca: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011774a: add byte ptr [eax], al; add esp, 0x10; test eax, eax; jne 0x11770c; add esp, 0xc; ret; 
0x0016216d: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0007e92e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b610: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00114b14: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00035d4e: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002ebd1: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000842ca: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x000d62aa: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00092f8a: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011a362: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000304fc: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00078054: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00155b28: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000b51a1: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0011fc50: add byte ptr [eax], al; add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x001238ab: add byte ptr [eax], al; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x000dc491: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x000dc1ad: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x00084116: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x0015e956: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0012c449: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b31a: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012b0d3: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x000871e3: add byte ptr [eax], al; add esp, 0xc; ret; 
0x000df392: add byte ptr [eax], al; add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x0004c235: add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x0011cc76: add byte ptr [eax], al; add esp, 4; lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x00099126: add byte ptr [eax], al; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0007518e: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0010c706: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000a0b01: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014edca: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x0009b944: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0002270e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00083c6e: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x0009845b: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001309bb: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00117529: add byte ptr [eax], al; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0008ce7b: add byte ptr [eax], al; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00118a2c: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003635c: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001026de: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00124f64: add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x00035dff: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0003613f: add byte ptr [eax], al; and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000871b8: add byte ptr [eax], al; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x00035a70: add byte ptr [eax], al; and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00192828: add byte ptr [eax], al; and eax, 0xf; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192859: add byte ptr [eax], al; and eax, 0xff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192890: add byte ptr [eax], al; and eax, 0xfff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928c9: add byte ptr [eax], al; and eax, 0xffff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0011e3dc: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001928de: add byte ptr [eax], al; and eax, 1; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002fe96: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000b2c4e: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b2c6e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b2c3e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b27f3: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00155836: add byte ptr [eax], al; call 0x115fc0; mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x0002c240: add byte ptr [eax], al; call 0x11bcf0; add esp, 0x1c; ret; 
0x00124dd2: add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x001176d6: add byte ptr [eax], al; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00139ec6: add byte ptr [eax], al; call 0x20150; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0004abbc: add byte ptr [eax], al; call 0x4ab70; add eax, ebx; jmp eax; 
0x00080e7d: add byte ptr [eax], al; call 0x810e0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0008b26f: add byte ptr [eax], al; call 0x81c90; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000920bb: add byte ptr [eax], al; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x00156501: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x0003764b: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011c4e3: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x000377bc: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x00092b0f: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092eef: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000de017: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037781: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107d9d: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000dd274: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0013bcfe: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0008f1b7: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x00071011: add byte ptr [eax], al; call eax; 
0x0016e65f: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0014e291: add byte ptr [eax], al; call esi; 
0x000936ec: add byte ptr [eax], al; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x0008cbdd: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000d7a21: add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00123269: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0008d4b6: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000de5d9: add byte ptr [eax], al; cmove eax, edx; pop ebx; ret; 
0x00083bd7: add byte ptr [eax], al; cmove eax, edx; ret; 
0x0003763e: add byte ptr [eax], al; cmove edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000e949a: add byte ptr [eax], al; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00090531: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000a8bf1: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x0019403a: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x1940c2; mov eax, 0xc; pop edi; ret; 
0x0018ea72: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191b88: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x000d5dce: add byte ptr [eax], al; cmp eax, -0x26; jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00106b45: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x106b58; pop ebx; pop esi; ret; 
0x00107b88: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x107b98; pop ebx; pop esi; ret; 
0x00107bd8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x107be8; pop ebx; pop esi; ret; 
0x00108862: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x00109370: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0011386e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x00113c27: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x113c38; pop ebx; pop esi; ret; 
0x00113cd7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x113ce8; pop ebx; pop esi; ret; 
0x001146c2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114712: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x00114f97: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114fa8; pop ebx; pop esi; ret; 
0x00116b59: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x116b68; pop ebx; pop esi; ret; 
0x001183a2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183f2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x00118447: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x118458; pop ebx; pop esi; ret; 
0x00118497: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1184a8; pop ebx; pop esi; ret; 
0x0011c4ea: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011ede2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x00120962: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209b2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x00120a02: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x00174678: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x174688; pop ebx; pop esi; ret; 
0x000377c3: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x00058472: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f0e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092587: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92598; pop ebx; pop esi; ret; 
0x00092b16: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef6: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000cade0: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000d7bd1: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xd7be0; pop ebx; pop esi; ret; 
0x000dc737: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdc780; add esp, 0x18; pop ebx; ret; 
0x000dce07: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdce30; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f9aa7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xf9ab8; pop ebx; pop esi; ret; 
0x000de01e: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00081d45: add byte ptr [eax], al; cmp eax, 1; je 0x81d50; ret; 
0x000825e9: add byte ptr [eax], al; cmp eax, 1; je 0x825f8; ret; 
0x0011e8dc: add byte ptr [eax], al; cmp eax, 1; jg 0x11e910; add esp, 8; pop ebx; ret; 
0x0014e53c: add byte ptr [eax], al; cmp eax, 1; jg 0x14e568; add esp, 8; pop ebx; ret; 
0x001681cf: add byte ptr [eax], al; cmp eax, 1; jg 0x1681f8; add esp, 8; pop ebx; ret; 
0x0016834f: add byte ptr [eax], al; cmp eax, 1; jg 0x168378; add esp, 8; pop ebx; ret; 
0x000723be: add byte ptr [eax], al; cmp eax, 1; jg 0x723d0; ret; 
0x0007b38e: add byte ptr [eax], al; cmp eax, 1; jg 0x7b3a0; ret; 
0x0007e114: add byte ptr [eax], al; cmp eax, 1; jg 0x7e150; add esp, 8; pop ebx; ret; 
0x0008042e: add byte ptr [eax], al; cmp eax, 1; jg 0x80440; ret; 
0x000cbf65: add byte ptr [eax], al; cmp eax, 1; jg 0xcbf90; add esp, 8; pop ebx; ret; 
0x00120734: add byte ptr [eax], al; cmp edi, 1; je 0x120770; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b4: add byte ptr [eax], al; cmp edi, 1; je 0x1208f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00083cdb: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x0008b0ee: add byte ptr [eax], al; cmp edx, 1; je 0x8b100; mov eax, 0x16; ret; 
0x00083b9f: add byte ptr [eax], al; cmp edx, 2; jbe 0x83bb0; ret; 
0x0014f7ae: add byte ptr [eax], al; cmp edx, ecx; jne 0x14f7a0; add esp, 8; pop ebx; ret; 
0x0014e303: add byte ptr [eax], al; das; je 0x14e36c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0002015e: add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x000802fe: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x00176f0e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0016e0de: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008032e: add byte ptr [eax], al; endbr32; ret; 
0x0008030e: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000b375d: add byte ptr [eax], al; inc dword ptr [eax]; je 0xb3764; inc eax; pop edi; ret; 
0x0008b128: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x000375a3: add byte ptr [eax], al; int 0x80; 
0x00130f3e: add byte ptr [eax], al; ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x00187743: add byte ptr [eax], al; ja 0x187749; neg eax; ret; 
0x00188f83: add byte ptr [eax], al; ja 0x188f89; neg eax; pop ebp; ret; 
0x0018b633: add byte ptr [eax], al; ja 0x18b639; neg eax; add esp, 4; pop ebx; ret; 
0x0018e383: add byte ptr [eax], al; ja 0x18e389; neg eax; ret; 
0x0018e683: add byte ptr [eax], al; ja 0x18e689; neg eax; pop ebp; ret; 
0x0018e853: add byte ptr [eax], al; ja 0x18e859; neg eax; ret; 
0x0018f33a: add byte ptr [eax], al; ja 0x18f340; neg eax; ret; 
0x0018f6b3: add byte ptr [eax], al; ja 0x18f6b9; neg eax; pop edi; pop ebx; ret; 
0x001905eb: add byte ptr [eax], al; ja 0x1905f1; neg eax; ret; 
0x00191c64: add byte ptr [eax], al; ja 0x191c6a; neg eax; ret; 
0x0006f389: add byte ptr [eax], al; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00083ce1: add byte ptr [eax], al; ja 0x83cf0; ret; 
0x00124f5c: add byte ptr [eax], al; jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00093648: add byte ptr [eax], al; jbe 0x93650; ret; 
0x00093688: add byte ptr [eax], al; jbe 0x93690; ret; 
0x00037212: add byte ptr [eax], al; je 0x3721d; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000789a7: add byte ptr [eax], al; je 0x789b8; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x789b8; ret; 
0x000de831: add byte ptr [eax], al; je 0xde89a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x00190269: add byte ptr [eax], al; jg 0x190270; neg eax; ret; 
0x00190594: add byte ptr [eax], al; jg 0x1905a0; neg eax; ret; 
0x001946c4: add byte ptr [eax], al; jg 0x1946d0; neg eax; ret; 
0x000c8a33: add byte ptr [eax], al; jg 0xc8a40; neg eax; pop edi; pop esi; ret; 
0x000c8a63: add byte ptr [eax], al; jg 0xc8a69; neg eax; ret; 
0x00020004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x000218c5: add byte ptr [eax], al; jmp eax; 
0x0006de7a: add byte ptr [eax], al; jmp ebx; 
0x00103583: add byte ptr [eax], al; jne 0x103597; add esp, 0x1c; ret; 
0x00103a29: add byte ptr [eax], al; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00105f03: add byte ptr [eax], al; jne 0x105f52; add esp, 0x14; pop ebx; pop esi; ret; 
0x00106189: add byte ptr [eax], al; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd7: add byte ptr [eax], al; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c57: add byte ptr [eax], al; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x00106de0: add byte ptr [eax], al; jne 0x106dfe; add esp, 0x74; pop ebx; pop esi; ret; 
0x00106ec9: add byte ptr [eax], al; jne 0x106f04; add esp, 0x74; pop ebx; pop esi; ret; 
0x00106f73: add byte ptr [eax], al; jne 0x106f8e; add esp, 0x74; pop ebx; pop esi; ret; 
0x001074fa: add byte ptr [eax], al; jne 0x107516; add esp, 0x74; pop ebx; pop esi; ret; 
0x00107c46: add byte ptr [eax], al; jne 0x107c57; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107ca6: add byte ptr [eax], al; jne 0x107cb7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107d06: add byte ptr [eax], al; jne 0x107d17; add esp, 0x64; pop ebx; pop esi; ret; 
0x00108ffc: add byte ptr [eax], al; jne 0x1090b0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010914c: add byte ptr [eax], al; jne 0x109200; add esp, 0x24; pop ebx; pop esi; ret; 
0x00109df1: add byte ptr [eax], al; jne 0x109e4b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0010a3c2: add byte ptr [eax], al; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x0010fa5e: add byte ptr [eax], al; jne 0x10fa68; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010fb0c: add byte ptr [eax], al; jne 0x10fb16; add esp, 0x14; pop esi; pop edi; ret; 
0x00110831: add byte ptr [eax], al; jne 0x11086c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001138ed: add byte ptr [eax], al; jne 0x113942; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011399d: add byte ptr [eax], al; jne 0x1139f2; add esp, 0x14; pop ebx; pop esi; ret; 
0x001143da: add byte ptr [eax], al; jne 0x1143e9; add esp, 0x1c; ret; 
0x0011498c: add byte ptr [eax], al; jne 0x1149b2; add esp, 0x54; pop ebx; pop esi; ret; 
0x00114a90: add byte ptr [eax], al; jne 0x114ab2; add esp, 0x54; pop ebx; pop esi; ret; 
0x00114b0e: add byte ptr [eax], al; jne 0x114bb4; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00114c26: add byte ptr [eax], al; jne 0x114c44; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114ce8: add byte ptr [eax], al; jne 0x114cf9; add esp, 0x54; pop ebx; pop esi; ret; 
0x00115cec: add byte ptr [eax], al; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d8c: add byte ptr [eax], al; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115e3b: add byte ptr [eax], al; jne 0x115ea6; add esp, 0x24; pop ebx; pop esi; ret; 
0x00115f0b: add byte ptr [eax], al; jne 0x115f76; add esp, 0x24; pop ebx; pop esi; ret; 
0x00115ff7: add byte ptr [eax], al; jne 0x115fff; add esp, 0x1c; ret; 
0x00116de4: add byte ptr [eax], al; jne 0x116e0f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00117160: add byte ptr [eax], al; jne 0x117177; add esp, 0x3c; ret; 
0x001171d1: add byte ptr [eax], al; jne 0x1171d9; add esp, 0x1c; ret; 
0x00117f7e: add byte ptr [eax], al; jne 0x117f88; add esp, 0x34; pop ebx; pop esi; ret; 
0x00118003: add byte ptr [eax], al; jne 0x11800d; add esp, 0x34; pop ebx; pop esi; ret; 
0x001180a1: add byte ptr [eax], al; jne 0x1180ab; add esp, 0x34; pop ebx; pop esi; ret; 
0x00118123: add byte ptr [eax], al; jne 0x11812d; add esp, 0x34; pop ebx; pop esi; ret; 
0x001181bc: add byte ptr [eax], al; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x00118241: add byte ptr [eax], al; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x001182d0: add byte ptr [eax], al; jne 0x1182da; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011ae7b: add byte ptr [eax], al; jne 0x11ae83; add esp, 0x1c; ret; 
0x0011c143: add byte ptr [eax], al; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0011c944: add byte ptr [eax], al; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x0011fb4a: add byte ptr [eax], al; jne 0x11fbdf; add esp, 0x24; pop ebx; pop esi; ret; 
0x00121e12: add byte ptr [eax], al; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121f37: add byte ptr [eax], al; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb7: add byte ptr [eax], al; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x00122222: add byte ptr [eax], al; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x00122962: add byte ptr [eax], al; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e7: add byte ptr [eax], al; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a72: add byte ptr [eax], al; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122b03: add byte ptr [eax], al; jne 0x122b0d; add esp, 0x74; pop ebx; pop esi; ret; 
0x00122bcb: add byte ptr [eax], al; jne 0x122bd3; add esp, 0x1c; ret; 
0x001232d5: add byte ptr [eax], al; jne 0x1232e4; add esp, 0x7c; ret; 
0x0012d35c: add byte ptr [eax], al; jne 0x12d390; pop ebx; pop esi; pop edi; ret; 
0x00130c67: add byte ptr [eax], al; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd7: add byte ptr [eax], al; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d88: add byte ptr [eax], al; jne 0x137d90; add esp, 0x2c; ret; 
0x0013bdae: add byte ptr [eax], al; jne 0x13bddc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013e26c: add byte ptr [eax], al; jne 0x13e2d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00142441: add byte ptr [eax], al; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x0014249d: add byte ptr [eax], al; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e9: add byte ptr [eax], al; jne 0x1424f1; add esp, 0x1c; ret; 
0x00143da0: add byte ptr [eax], al; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e40: add byte ptr [eax], al; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143f00: add byte ptr [eax], al; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143fa0: add byte ptr [eax], al; jne 0x143fcd; add esp, 0x11c; ret; 
0x00144230: add byte ptr [eax], al; jne 0x14427c; add esp, 0x1c; ret; 
0x0014793a: add byte ptr [eax], al; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba7b: add byte ptr [eax], al; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x0014df5e: add byte ptr [eax], al; jne 0x14df66; add esp, 0x1c; ret; 
0x0015589e: add byte ptr [eax], al; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x00155b22: add byte ptr [eax], al; jne 0x155bc3; add esp, 0x34; pop ebx; pop esi; ret; 
0x00155f72: add byte ptr [eax], al; jne 0x155fa9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00157f5f: add byte ptr [eax], al; jne 0x157f96; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015b8c1: add byte ptr [eax], al; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb16: add byte ptr [eax], al; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015eb92: add byte ptr [eax], al; jne 0x15ebac; add esp, 0x74; pop ebx; pop edi; ret; 
0x0015ec40: add byte ptr [eax], al; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ece0: add byte ptr [eax], al; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015f032: add byte ptr [eax], al; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a9: add byte ptr [eax], al; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015feed: add byte ptr [eax], al; jne 0x15fef5; add esp, 0x4c; ret; 
0x0015ff5d: add byte ptr [eax], al; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffcd: add byte ptr [eax], al; jne 0x15ffd5; add esp, 0x4c; ret; 
0x0016003d: add byte ptr [eax], al; jne 0x160045; add esp, 0x4c; ret; 
0x001600a0: add byte ptr [eax], al; jne 0x1600a8; add esp, 0x4c; ret; 
0x00160100: add byte ptr [eax], al; jne 0x160108; add esp, 0x4c; ret; 
0x0016016d: add byte ptr [eax], al; jne 0x160175; add esp, 0x4c; ret; 
0x001601ed: add byte ptr [eax], al; jne 0x1601f5; add esp, 0x4c; ret; 
0x001605df: add byte ptr [eax], al; jne 0x1605ec; add esp, 0x94; pop ebx; pop edi; ret; 
0x001606db: add byte ptr [eax], al; jne 0x1606e3; add esp, 0x1c; ret; 
0x00160723: add byte ptr [eax], al; jne 0x160754; add esp, 0x1c; ret; 
0x00161f24: add byte ptr [eax], al; jne 0x161f2c; add esp, 0x2c; ret; 
0x00161fd5: add byte ptr [eax], al; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c5: add byte ptr [eax], al; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x0016236c: add byte ptr [eax], al; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623fc: add byte ptr [eax], al; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624bb: add byte ptr [eax], al; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x00162520: add byte ptr [eax], al; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625bc: add byte ptr [eax], al; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162ddc: add byte ptr [eax], al; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e6c: add byte ptr [eax], al; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162efc: add byte ptr [eax], al; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f8c: add byte ptr [eax], al; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x001635d2: add byte ptr [eax], al; jne 0x1635dc; add esp, 0x54; pop ebx; pop esi; ret; 
0x00163644: add byte ptr [eax], al; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x001636a4: add byte ptr [eax], al; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x0016370d: add byte ptr [eax], al; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x0016376d: add byte ptr [eax], al; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168159: add byte ptr [eax], al; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x001683df: add byte ptr [eax], al; jne 0x168414; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016846f: add byte ptr [eax], al; jne 0x1684a4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016992e: add byte ptr [eax], al; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a6: add byte ptr [eax], al; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016ac37: add byte ptr [eax], al; jne 0x16ac87; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0016af69: add byte ptr [eax], al; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b12a: add byte ptr [eax], al; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1cc: add byte ptr [eax], al; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b2fa: add byte ptr [eax], al; jne 0x16b33c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016b861: add byte ptr [eax], al; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016e0c4: add byte ptr [eax], al; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bbb: add byte ptr [eax], al; jne 0x170bc3; add esp, 0x1c; ret; 
0x001765ec: add byte ptr [eax], al; jne 0x1765f6; add esp, 0x14; pop esi; pop edi; ret; 
0x00176717: add byte ptr [eax], al; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x001767e0: add byte ptr [eax], al; jne 0x1767ea; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017685a: add byte ptr [eax], al; jne 0x176864; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018eba5: add byte ptr [eax], al; jne 0x18f320; pop ebx; ret; 
0x0018e9de: add byte ptr [eax], al; jne 0x18f336; pop ebx; ret; 
0x0019034d: add byte ptr [eax], al; jne 0x190590; pop ebx; ret; 
0x00191a17: add byte ptr [eax], al; jne 0x191c40; pop ebx; ret; 
0x00191ad4: add byte ptr [eax], al; jne 0x191c60; pop ebx; ret; 
0x0019285e: add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000213e3: add byte ptr [eax], al; jne 0x213c2; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000213f1: add byte ptr [eax], al; jne 0x213c2; ret; 
0x00021db1: add byte ptr [eax], al; jne 0x21db9; add esp, 0x1c; ret; 
0x0003647a: add byte ptr [eax], al; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370c0: add byte ptr [eax], al; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x00037434: add byte ptr [eax], al; jne 0x37441; add esp, 0x124; pop ebx; pop esi; ret; 
0x00037994: add byte ptr [eax], al; jne 0x379a8; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037a14: add byte ptr [eax], al; jne 0x37a28; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037a90: add byte ptr [eax], al; jne 0x37ad6; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037b2f: add byte ptr [eax], al; jne 0x37b3c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037bae: add byte ptr [eax], al; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d54: add byte ptr [eax], al; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038106: add byte ptr [eax], al; jne 0x38111; add esp, 0x12c; ret; 
0x000385cd: add byte ptr [eax], al; jne 0x385d7; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038726: add byte ptr [eax], al; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a6: add byte ptr [eax], al; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x0003882e: add byte ptr [eax], al; jne 0x38839; add esp, 0x9c; ret; 
0x0003aaae: add byte ptr [eax], al; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abde: add byte ptr [eax], al; jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aeaf: add byte ptr [eax], al; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b410: add byte ptr [eax], al; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b463: add byte ptr [eax], al; jne 0x3b46b; add esp, 0x1c; ret; 
0x0003b4c0: add byte ptr [eax], al; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b513: add byte ptr [eax], al; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b560: add byte ptr [eax], al; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5b3: add byte ptr [eax], al; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000484fa: add byte ptr [eax], al; jne 0x48505; add esp, 0x42c; ret; 
0x0004a6ac: add byte ptr [eax], al; jne 0x4a6b2; push ecx; ret; 
0x0004a952: add byte ptr [eax], al; jne 0x4a958; push ecx; ret; 
0x0004cc38: add byte ptr [eax], al; jne 0x4cc45; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004ccb6: add byte ptr [eax], al; jne 0x4ccc3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00050d66: add byte ptr [eax], al; jne 0x50d73; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00051389: add byte ptr [eax], al; jne 0x513ad; add esp, 0x434; pop ebx; pop esi; ret; 
0x00057d6e: add byte ptr [eax], al; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057ded: add byte ptr [eax], al; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x0005839a: add byte ptr [eax], al; jne 0x583af; add esp, 0x1c; ret; 
0x0007b334: add byte ptr [eax], al; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x00080066: add byte ptr [eax], al; jne 0x80078; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00081488: add byte ptr [eax], al; jne 0x814c1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081647: add byte ptr [eax], al; jne 0x8166d; add esp, 0x2c; ret; 
0x000817af: add byte ptr [eax], al; jne 0x817db; add esp, 0x2c; ret; 
0x00081b6e: add byte ptr [eax], al; jne 0x81b95; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081c0a: add byte ptr [eax], al; jne 0x81c16; and edx, 0x38; cmp edx, 8; je 0x81c17; ret; 
0x00081ee6: add byte ptr [eax], al; jne 0x81ef0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00084110: add byte ptr [eax], al; jne 0x84207; add esp, 0x94; pop ebx; pop esi; ret; 
0x0008434d: add byte ptr [eax], al; jne 0x84373; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085980: add byte ptr [eax], al; jne 0x85988; add esp, 0x2c; ret; 
0x00087a76: add byte ptr [eax], al; jne 0x87aa8; mov eax, edx; pop ebx; pop esi; ret; 
0x00087d74: add byte ptr [eax], al; jne 0x87d80; xor eax, eax; pop ebx; ret; 
0x000889e1: add byte ptr [eax], al; jne 0x889eb; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008a20c: add byte ptr [eax], al; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2aa: add byte ptr [eax], al; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b630: add byte ptr [eax], al; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba90: add byte ptr [eax], al; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf8c: add byte ptr [eax], al; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3dc: add byte ptr [eax], al; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008d4f6: add byte ptr [eax], al; jne 0x8d502; and eax, 0x38; cmp eax, 8; je 0x8d503; ret; 
0x0008d5b1: add byte ptr [eax], al; jne 0x8d5c9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e5aa: add byte ptr [eax], al; jne 0x8e5dc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e64c: add byte ptr [eax], al; jne 0x8e68c; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008f165: add byte ptr [eax], al; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f3d5: add byte ptr [eax], al; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f4eb: add byte ptr [eax], al; jne 0x8f527; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f661: add byte ptr [eax], al; jne 0x8f687; add esp, 0x2c; ret; 
0x0008f8d1: add byte ptr [eax], al; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x0008fa61: add byte ptr [eax], al; jne 0x8fa98; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008fafc: add byte ptr [eax], al; jne 0x8fb3c; add esp, 0x124; pop ebx; pop esi; ret; 
0x000914fb: add byte ptr [eax], al; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092835: add byte ptr [eax], al; jne 0x9283f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00092ad3: add byte ptr [eax], al; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x00092f84: add byte ptr [eax], al; jne 0x9301f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00093081: add byte ptr [eax], al; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000934e8: add byte ptr [eax], al; jne 0x93507; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00094342: add byte ptr [eax], al; jne 0x9434c; add esp, 0x24; pop ebx; pop esi; ret; 
0x00098cf6: add byte ptr [eax], al; jne 0x98d03; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000c2fa0: add byte ptr [eax], al; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c7ba6: add byte ptr [eax], al; jne 0xc7bb3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c7c28: add byte ptr [eax], al; jne 0xc7c35; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c7ca6: add byte ptr [eax], al; jne 0xc7cb3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c9aa0: add byte ptr [eax], al; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b20: add byte ptr [eax], al; jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b6b: add byte ptr [eax], al; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bcb: add byte ptr [eax], al; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000caa41: add byte ptr [eax], al; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x000cac97: add byte ptr [eax], al; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cad50: add byte ptr [eax], al; jne 0xcadac; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cb05b: add byte ptr [eax], al; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000cd782: add byte ptr [eax], al; jne 0xcd7a2; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cd81a: add byte ptr [eax], al; jne 0xcd83a; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cdc4d: add byte ptr [eax], al; jne 0xcdc58; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000d3574: add byte ptr [eax], al; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5c04: add byte ptr [eax], al; jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d68: add byte ptr [eax], al; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f67: add byte ptr [eax], al; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d7117: add byte ptr [eax], al; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d719c: add byte ptr [eax], al; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d7243: add byte ptr [eax], al; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72cc: add byte ptr [eax], al; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d93bc: add byte ptr [eax], al; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a7: add byte ptr [eax], al; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000dc48b: add byte ptr [eax], al; jne 0xdc553; add esp, 0x64; pop ebx; pop esi; ret; 
0x000dc85d: add byte ptr [eax], al; jne 0xdc8a4; add esp, 0x34; pop ebx; pop esi; ret; 
0x000ddd78: add byte ptr [eax], al; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde18: add byte ptr [eax], al; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000de0e1: add byte ptr [eax], al; jne 0xde132; add esp, 0x24; pop ebx; pop esi; ret; 
0x000de191: add byte ptr [eax], al; jne 0xde1e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x000df7a9: add byte ptr [eax], al; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e49: add byte ptr [eax], al; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf9: add byte ptr [eax], al; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b9: add byte ptr [eax], al; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x000f9876: add byte ptr [eax], al; jne 0xf98e4; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002eba4: add byte ptr [eax], al; lea eax, [eax + 0x1120]; ret; 
0x00193e59: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00193e82: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x00193e97: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x00193ea7: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x00193def: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x00193eb7: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00193e22: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x001932b9: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x00193517: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x00193527: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x00193537: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x00193266: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00193547: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00193290: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001921d4: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019218e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192e57: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x00192e67: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x00192131: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00192e77: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001920eb: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001926b1: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001926d6: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x00192729: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x00192700: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x001938f0: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x00193919: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x0019392e: add byte ptr [eax], al; lea eax, [edx + 1]; ret; 
0x001938a3: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x001938c6: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0016b71e: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000dcd69: add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00085e3e: add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000b4f66: add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00114166: add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000dd2e2: add byte ptr [eax], al; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00087dd2: add byte ptr [eax], al; lea ecx, [esi - 0x72580]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0015e862: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00092f96: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000d626c: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x001207f9: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00117275: add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001638b5: add byte ptr [eax], al; lea edx, [edx - 0x4a0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00085cef: add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0013e17c: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e248: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x00092bc6: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001078d3: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00107a33: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00107396: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0015a4e0: add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x00191f48: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x00082bab: add byte ptr [eax], al; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x001310db: add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x00083b0b: add byte ptr [eax], al; lea esi, [esi]; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000b334b: add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b2f1b: add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a07b: add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000991ea: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00154f6a: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x001633ea: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0016e03b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x000821ba: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008035a: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x00194857: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019230a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019231a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019232a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019233a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019234a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019229a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001922aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001922ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001922ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001922da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001922ea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001922fa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019276a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019275a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019274a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019273a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001927da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001927ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001927ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00194aea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001927aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019279a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019278a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x0019277a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00193928: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000d5ebb: add byte ptr [eax], al; lea esi, [esi]; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00194104: add byte ptr [eax], al; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000a2e1b: add byte ptr [eax], al; lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000aecd8: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4cd7: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008de0b: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x0008403b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x0014641b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x0013d60b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0018e378: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x18e389; neg eax; ret; 
0x000c8a5a: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xc8a69; neg eax; ret; 
0x000c8c58: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c8c6b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c8c7b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c8c8b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c8c9b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c8cab: add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c8cbb: add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x0003802b: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00037518: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00161f8b: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00083ceb: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0019482a: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000dcdfb: add byte ptr [eax], al; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000d5dfb: add byte ptr [eax], al; lea esi, [esi]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000a4cfa: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a736b: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2f7a: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a4d5b: add byte ptr [eax], al; lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c8c39: add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00193329: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00193339: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00193349: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00193359: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00193369: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x001932c9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x001932d9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x001932e9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x001932f9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00193309: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00193319: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00192289: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x00192279: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x00193999: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x001939a9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x001939b9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x001939c9: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x00193939: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x00193949: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x00193959: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00193969: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00193979: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00193989: add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000a4ce9: add byte ptr [eax], al; lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c8c49: add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a4cc8: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x000e7e5b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x000c8a48: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x0019235a: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00094e3b: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0008211c: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x00097fc0: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e0f: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985bd: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00097c80: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x00081c4f: add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000485cc: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000b210e: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecde: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4cde: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008398a: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00080476: add byte ptr [eax], al; mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00080480: add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x000935dc: add byte ptr [eax], al; mov dword ptr [eax + 0x1c0], edx; ret; 
0x0009358c: add byte ptr [eax], al; mov dword ptr [eax + 0x1c4], edx; ret; 
0x0009352c: add byte ptr [eax], al; mov dword ptr [eax + 0x1c8], edx; ret; 
0x00081c69: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0009355c: add byte ptr [eax], al; mov dword ptr [eax + 0x1e4], edx; ret; 
0x00081c73: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00093436: add byte ptr [eax], al; mov dword ptr [eax + 0x3b08], 0; ret; 
0x00083983: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000904a3: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x00081caa: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001630dc: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016309c: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0014fd5a: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014fd60: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014957d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0007f472: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00156cac: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000f6a77: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008cb2c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013ccc1: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00156c10: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156c3a: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00156be8: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00156c27: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00149584: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f6a70: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007f479: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x00083991: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00156c17: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0015a1c4: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00088a13: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0019ce66: add byte ptr [eax], al; mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x00037ecc: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000813cd: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008b268: add byte ptr [eax], al; mov dword ptr [ebp - 0x30], 1; call 0x81c90; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0014e4a3: add byte ptr [eax], al; mov dword ptr [ebx + 0x5188], 0; call esi; 
0x0014e41c: add byte ptr [eax], al; mov dword ptr [ebx + 0x61c8], 0; call esi; 
0x0014e395: add byte ptr [eax], al; mov dword ptr [ebx + 0x7208], 0; call esi; 
0x0014e30e: add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0014e287: add byte ptr [eax], al; mov dword ptr [ebx + 0x9288], 0; call esi; 
0x0014224c: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0016afee: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008a7ce: add byte ptr [eax], al; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0016b041: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0008b294: add byte ptr [eax], al; mov dword ptr [ebx], 2; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0016b44a: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0008ce17: add byte ptr [eax], al; mov dword ptr [ecx], eax; mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x0011ed72: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0008c4e4: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009049d: add byte ptr [eax], al; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011070c: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x0008779e: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f9548: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x0004a7d4: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0011d716: add byte ptr [eax], al; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; pop edi; ret; 
0x00153801: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007e927: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008016d: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0011c90d: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00080e94: add byte ptr [eax], al; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x000d7c39: add byte ptr [eax], al; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00080d94: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0003a5bf: add byte ptr [eax], al; mov dword ptr [esp + 0x14], ecx; sub esp, 8; push 0; push edx; call edi; 
0x00123a95: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00123460: add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0011479a: add byte ptr [eax], al; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001071ab: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0008d40e: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0006d4c0: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 0; jmp eax; 
0x0006d470: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 1; jmp eax; 
0x0008d419: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012216b: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00038673: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000682f0: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp eax; 
0x00068298: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00090957: add byte ptr [eax], al; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00092d2d: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0006ea6e: add byte ptr [eax], al; mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x0006deb8: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 0x20; jmp eax; 
0x0015caa0: add byte ptr [eax], al; mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0006de72: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x00092360: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006e9ee: add byte ptr [eax], al; mov dword ptr [esp + 0x4c], 1; jmp ebx; 
0x001201c8: add byte ptr [eax], al; mov dword ptr [esp + 0x58], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0006dbc4: add byte ptr [eax], al; mov dword ptr [esp + 0x5c], 0; jmp eax; 
0x001201d2: add byte ptr [eax], al; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001140d4: add byte ptr [eax], al; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006e9de: add byte ptr [eax], al; mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x00068a54: add byte ptr [eax], al; mov dword ptr [esp + 0x68], 1; jmp eax; 
0x0016b384: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x000710c0: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x000d61a6: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0015a1f0: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000866d6: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00070fc1: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00121d38: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224c8: add byte ptr [eax], al; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000825c5: add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d1d: add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x0002ff4a: add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0003a880: add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0014d83e: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0015f7e8: add byte ptr [eax], al; mov dword ptr gs:[edx], eax; ret; 
0x000d641f: add byte ptr [eax], al; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x0009227b: add byte ptr [eax], al; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00120a70: add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00107f3c: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108b4d: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00083bd2: add byte ptr [eax], al; mov eax, 0x16; cmove eax, edx; ret; 
0x00170956: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x0008b0c6: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0004a55e: add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0008601e: add byte ptr [eax], al; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000d6144: add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d63a9: add byte ptr [eax], al; mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x0003835f: add byte ptr [eax], al; mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000824db: add byte ptr [eax], al; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000de78c: add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00122860: add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012076e: add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001208ee: add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120835: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00123a9f: add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012412a: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235da: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x0004a5b5: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000de65e: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de5cf: add byte ptr [eax], al; mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00086ae3: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00085cf5: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00037646: add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00085ea8: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00090952: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008d323: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00194044: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x000d7a1c: add byte ptr [eax], al; mov eax, 0xdc; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00087e8e: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000884d7: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088fe8: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00089fd3: add byte ptr [eax], al; mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00090da9: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000860e6: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e48: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008a43e: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008ace2: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001709cd: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000de68e: add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x000220cb: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0011408b: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003758b: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00037493: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003752b: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0018e37e: add byte ptr [eax], al; mov eax, 1; ja 0x18e389; neg eax; ret; 
0x0009959e: add byte ptr [eax], al; mov eax, 1; ret; 
0x000871de: add byte ptr [eax], al; mov eax, 3; add esp, 0xc; ret; 
0x00193f9b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x00193ff4: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x00157445: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00081d3c: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x0003ac57: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0007f3c5: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7f3c0; ret; 
0x0011d0ce: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x000825e0: add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x825f8; ret; 
0x0011cd51: add byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x000dd159: add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xdd163; call eax; 
0x0015dc24: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0015abfc: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007a0e8: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0015537c: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0008e88e: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0015f946: add byte ptr [eax], al; mov eax, dword ptr [ebx - 0x64]; add esp, 4; pop ebx; pop esi; ret; 
0x0003751e: add byte ptr [eax], al; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0019519e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0015d6b3: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00161f76: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0011c50e: add byte ptr [eax], al; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x000d7506: add byte ptr [eax], al; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00082d96: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000e93ae: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00161ec6: add byte ptr [eax], al; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x001252ba: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x0015501e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00193f3e: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0010346c: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000d736b: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00167c04: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016ac3f: add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x00037ccb: add byte ptr [eax], al; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00038307: add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007a8a6: add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008608e: add byte ptr [eax], al; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b189e: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00070f2a: add byte ptr [eax], al; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ac15e: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00192e3e: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x00021546: add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x001687bd: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0014af94: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x00178aaf: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007a5bb: add byte ptr [eax], al; mov eax, edx; ret; 
0x00057a6b: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011418d: add byte ptr [eax], al; mov ebp, dword ptr [eax - 0x134]; mov eax, dword ptr gs:[ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x000dcd3d: add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0012331b: add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00122865: add byte ptr [eax], al; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00113a32: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00108073: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b7: add byte ptr [eax], al; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0007a898: add byte ptr [eax], al; mov ebx, 2; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008674c: add byte ptr [eax], al; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087e1e: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c71: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017694c: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013c293: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0012475a: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0012470a: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00102ee6: add byte ptr [eax], al; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00047bdd: add byte ptr [eax], al; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00107849: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001211da: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00120b04: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000925ff: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000cd916: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00108c52: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012082e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00107a2c: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x90]; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x001200d0: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xb0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f95e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00091f03: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00103537: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x000377b3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00109363: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00082fb0: add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000884dc: add byte ptr [eax], al; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000882bf: add byte ptr [eax], al; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00089fd8: add byte ptr [eax], al; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00115e20: add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00037788: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107da4: add byte ptr [eax], al; mov ebx, edx; ret; 
0x00092bcf: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011390b: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00114436: add byte ptr [eax], al; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0008262b: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090dae: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000860eb: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b714: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00082e4d: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00088c1b: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000dcd64: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00102ef0: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b43ae: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0014e0ae: add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x0008a7c9: add byte ptr [eax], al; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00037815: add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0008a443: add byte ptr [eax], al; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00070e61: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0012481c: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00083f82: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00090497: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00120953: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001768bd: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012398d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010f880: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010f80c: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010f8e0: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0011f376: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d63ae: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6424: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108a11: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x94]; mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00108732: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00058463: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122d41: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0011d054: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x000cadd3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00086a31: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092280: add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc2b3: add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00038369: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00038478: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038428: add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000928a8: add byte ptr [eax], al; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000d600f: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d66b6: add byte ptr [eax], al; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0008ace7: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00122cd7: add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0012083a: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00108ebb: add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108c5b: add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0004a76f: add byte ptr [eax], al; mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0010f815: add byte ptr [eax], al; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00123fe1: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00114471: add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00115177: add byte ptr [eax], al; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000de70a: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x000de641: add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x0008441f: add byte ptr [eax], al; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000de604: add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0008b4f0: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c6d4: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089785: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844e1: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b90a: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c65: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000de663: add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de626: add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000de5d4: add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00118a61: add byte ptr [eax], al; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082c03: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b719: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0011446c: add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014afae: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008270d: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00084f5a: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a94c: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082e14: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844af: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085134: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082630: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000826af: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0015caa7: add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0007a89d: add byte ptr [eax], al; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006df13: add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x001234f3: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001637fa: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x163810; add esp, 0xc; ret; 
0x0016384a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x163860; add esp, 0xc; ret; 
0x00155ca4: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0008f3ca: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f656: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x000f9841: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003b95a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fb11: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001020e4: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00107774: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc58c: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123403: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00107f35: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108a18: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0003783c: add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00108307: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000d6565: add byte ptr [eax], al; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0010845d: add byte ptr [eax], al; mov edx, edi; call dword ptr gs:[0x10]; 
0x00085ea0: add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000cd91f: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x00086751: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x00038364: add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00085e9b: add byte ptr [eax], al; mov esi, 8; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010738f: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000d5e33: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00123320: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120a69: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000930ce: add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011fd30: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x000884e3: add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00088c20: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0004a7bf: add byte ptr [eax], al; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x001145ab: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000a0fd6: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x000ab47e: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a4d7e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d8e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d6e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d9e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000ab3ee: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab3fe: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ae5af: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000825b7: add byte ptr [eax], al; movzx eax, al; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00068a96: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689f6: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068446: add byte ptr [eax], al; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00188e67: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0018769e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00188e87: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x00188ea7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00188ec7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x00188ee7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x00188e47: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00081d0f: add byte ptr [eax], al; movzx edx, dl; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00103542: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00080e82: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0019408d: add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x0019350d: add byte ptr [eax], al; nop; add edx, 1; jl 0x1935d0; lea eax, [ecx + 1]; ret; 
0x000b333d: add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b2c5c: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b335d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b2f2d: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f3d: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007ee9c: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00161f3d: add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x001572dd: add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x0007b3ad: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc7d: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0008036c: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0015518c: add byte ptr [eax], al; nop; endbr32; ret; 
0x0007f5cd: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x0011fb5d: add byte ptr [eax], al; nop; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0002ec2c: add byte ptr [eax], al; nop; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a720c: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000abadc: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a721c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a2e2c: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00156c8d: add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00156c9d: add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a4d3d: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a4d2c: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a4d0d: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000de7dd: add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x00083aac: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000de69c: add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000de6ac: add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x0016e5dd: add byte ptr [eax], al; nop; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x0003819d: add byte ptr [eax], al; nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x00085ffc: add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a596d: add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013bdbd: add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001951dd: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a4d4c: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001951ac: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0012f15a: add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x00083bac: add byte ptr [eax], al; nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0008266d: add byte ptr [eax], al; nop; pop ebx; pop esi; pop edi; ret; 
0x000af05d: add byte ptr [eax], al; nop; pop esi; ret; 
0x00081d7d: add byte ptr [eax], al; nop; ret; 
0x0013119d: add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x0015c18d: add byte ptr [eax], al; nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000995cd: add byte ptr [eax], al; nop; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00143d3c: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x0018f69d: add byte ptr [eax], al; nop; xor eax, eax; pop edi; pop ebx; ret; 
0x00039f8c: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000a0dec: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000d5dbe: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000881aa: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x001310cf: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00108ea2: add byte ptr [eax], al; or byte ptr [edi], 0xa3; ret 0xdc73; 
0x000b452d: add byte ptr [eax], al; or cl, cl; jne 0xb4535; xor eax, eax; ret; 
0x001235e6: add byte ptr [eax], al; or dh, 1; call dword ptr gs:[0x10]; 
0x000574ee: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00035a75: add byte ptr [eax], al; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00084e9a: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000b2b86: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b2e6e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x001131c4: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000de62b: add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x000dd27b: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004a5c1: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x00083269: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00071856: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0019058e: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x1905a0; neg eax; ret; 
0x0015794b: add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x001631b1: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00051ba0: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0016f946: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0003799c: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0010a500: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c8ab5: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x000879f3: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0014afb3: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0012e9fe: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x0002831e: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00195d09: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000225fe: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000389a1: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00021476: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0002d7fe: add byte ptr [eax], al; pop ebx; ret; 
0x00114d6e: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000c2d7e: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018e85e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x0004a7cd: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0010faa6: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x00021950: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x000a4800: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000aaaee: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c88e3: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00193fa0: add byte ptr [eax], al; pop edi; ret; 
0x001552e9: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0004a9e3: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000b39c0: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x00194a1e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0007c6c8: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x0016fc18: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x00116f3c: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0007ce6e: add byte ptr [eax], al; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007c4de: add byte ptr [eax], al; push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00160fb8: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x001573df: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0012e570: add byte ptr [eax], al; push 0x1000002; call edx; 
0x001617ea: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x161520; add esp, 0x1c; ret; 
0x000774b7: add byte ptr [eax], al; push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007c8e3: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007725a: add byte ptr [eax], al; push 2; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00070954: add byte ptr [eax], al; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007c7d4: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00139b83: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00155398: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00076ff6: add byte ptr [eax], al; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0010948e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x108170; add esp, 0x1c; ret; 
0x00114568: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x10; add esp, 0xc; ret; 
0x001143ff: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x001617ef: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x161520; add esp, 0x1c; ret; 
0x0008373a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x83660; add esp, 0x18; pop ebx; ret; 
0x00083a6e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x839a0; add esp, 0x1c; ret; 
0x0008cc0a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x8cbb0; add esp, 0x18; pop ebx; ret; 
0x000794ea: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72e40; add esp, 0x1c; ret; 
0x001603af: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0016ac50: add byte ptr [eax], al; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015a4c4: add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0016faf6: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0011ae15: add byte ptr [eax], al; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x00080447: add byte ptr [eax], al; push eax; call 0x82700; add esp, 0x1c; ret; 
0x0008cdd5: add byte ptr [eax], al; push eax; call 0x835b0; add esp, 0x1c; ret; 
0x0014de50: add byte ptr [eax], al; push eax; call edx; 
0x000ca533: add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0011aea5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x11aec0; add esp, 0x1c; ret; 
0x00135e55: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x135e70; add esp, 0x1c; ret; 
0x001362a5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x1362c0; add esp, 0x1c; ret; 
0x0003b635: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x3b860; add esp, 0x1c; ret; 
0x0002b52a: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002666e: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027177: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000293cf: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027e3f: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x0015c05c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015c05c: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000fd855: add byte ptr [eax], al; push eax; push edx; call ebx; 
0x000368db: add byte ptr [eax], al; push eax; ret; 
0x0007c5f3: add byte ptr [eax], al; push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00038b6e: add byte ptr [eax], al; push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x0016fafd: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0015e2e5: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x00082712: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016008d: add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016b13f: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016b1df: add byte ptr [eax], al; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0013966e: add byte ptr [eax], al; push edx; call eax; 
0x0002469b: add byte ptr [eax], al; push edx; push eax; call 0x8b370; add esp, 0x1c; ret; 
0x0015dc44: add byte ptr [eax], al; push edx; push ebx; call dword ptr [eax + 4]; 
0x0015a4e7: add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x00157401: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x0007534c: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0012e9c8: add byte ptr [eax], al; push esi; call eax; 
0x000213d6: add byte ptr [eax], al; ret; 
0x001310c9: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x00131188: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0002146d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213cd: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0013109b: add byte ptr [eax], al; ror ax, 8; ret; 
0x0014de46: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b7194: add byte ptr [eax], al; sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0015b0f9: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000de83b: add byte ptr [eax], al; setne al; ret; 
0x00081e3a: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0016a5ec: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x001028e7: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011c13c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x000b446d: add byte ptr [eax], al; sub eax, edx; ret; 
0x0007f7be: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x000759de: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00035a2d: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00193e79: add byte ptr [eax], al; sub edi, 0x10; jb 0x193f40; lea eax, [eax + 0xf]; pop edi; ret; 
0x00193eee: add byte ptr [eax], al; sub edi, 0xa; jb 0x193f40; lea eax, [eax + 9]; pop edi; ret; 
0x00193efe: add byte ptr [eax], al; sub edi, 0xb; jb 0x193f40; lea eax, [eax + 0xa]; pop edi; ret; 
0x00193f0e: add byte ptr [eax], al; sub edi, 0xd; jb 0x193f40; lea eax, [eax + 0xc]; pop edi; ret; 
0x00193f1e: add byte ptr [eax], al; sub edi, 0xe; jb 0x193f40; lea eax, [eax + 0xd]; pop edi; ret; 
0x00193f2e: add byte ptr [eax], al; sub edi, 0xf; jb 0x193f40; lea eax, [eax + 0xe]; pop edi; ret; 
0x00193e8e: add byte ptr [eax], al; sub edi, 2; jb 0x193f40; lea eax, [eax + 1]; pop edi; ret; 
0x00193de6: add byte ptr [eax], al; sub edi, 4; jb 0x193f40; lea eax, [eax + 3]; pop edi; ret; 
0x00193ece: add byte ptr [eax], al; sub edi, 7; jb 0x193f40; lea eax, [eax + 6]; pop edi; ret; 
0x00193e19: add byte ptr [eax], al; sub edi, 8; jb 0x193f40; lea eax, [eax + 7]; pop edi; ret; 
0x00193ede: add byte ptr [eax], al; sub edi, 9; jb 0x193f40; lea eax, [eax + 8]; pop edi; ret; 
0x00192e29: add byte ptr [eax], al; sub edx, 0x10; jb 0x192f00; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192eae: add byte ptr [eax], al; sub edx, 0xa; jb 0x192f00; lea eax, [edi + 9]; pop edi; ret; 
0x00192ebe: add byte ptr [eax], al; sub edx, 0xb; jb 0x192f00; lea eax, [edi + 0xa]; pop edi; ret; 
0x00192e00: add byte ptr [eax], al; sub edx, 0xc; jb 0x192f00; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192ece: add byte ptr [eax], al; sub edx, 0xd; jb 0x192f00; lea eax, [edi + 0xc]; pop edi; ret; 
0x00192ede: add byte ptr [eax], al; sub edx, 0xe; jb 0x192f00; lea eax, [edi + 0xd]; pop edi; ret; 
0x00192eee: add byte ptr [eax], al; sub edx, 0xf; jb 0x192f00; lea eax, [edi + 0xe]; pop edi; ret; 
0x00192d95: add byte ptr [eax], al; sub edx, 4; jb 0x192f00; lea eax, [edi + 3]; pop edi; ret; 
0x00192e8e: add byte ptr [eax], al; sub edx, 7; jb 0x192f00; lea eax, [edi + 6]; pop edi; ret; 
0x00192dc6: add byte ptr [eax], al; sub edx, 8; jb 0x192f00; lea eax, [edi + 7]; pop edi; ret; 
0x00192e9e: add byte ptr [eax], al; sub edx, 9; jb 0x192f00; lea eax, [edi + 8]; pop edi; ret; 
0x0011c93d: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00143d99: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e39: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143ef9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f99: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x143fcd; add esp, 0x11c; ret; 
0x00037ba7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x000380ff: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38111; add esp, 0x12c; ret; 
0x0003871f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x0003879f: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x00038827: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38839; add esp, 0x9c; ret; 
0x000484f3: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x48505; add esp, 0x42c; ret; 
0x00057d67: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x000d7110: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d723c: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x0007c0d6: add byte ptr [eax], al; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x000933e2: add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0015dc8d: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x001552c9: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0015602e: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x000831fa: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x827f0; add esp, 0x1c; ret; 
0x001575dc: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0007d2f1: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x00139c2a: add byte ptr [eax], al; sub esp, 0xc; push esi; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x0015ac02: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007f1e1: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0017054d: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00078b94: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00099516: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0007fbf0: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0007305e: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007291e: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0012a589: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x0007bba0: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007cc8d: add byte ptr [eax], al; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00069050: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f65: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00038b81: add byte ptr [eax], al; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x00066887: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006cff7: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000660f3: add byte ptr [eax], al; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000681ff: add byte ptr [eax], al; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00072f2b: add byte ptr [eax], al; sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0006620e: add byte ptr [eax], al; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006b156: add byte ptr [eax], al; sub esp, 4; push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3d7: add byte ptr [eax], al; sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0016f778: add byte ptr [eax], al; sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x000718f7: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0006e234: add byte ptr [eax], al; sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00067dbc: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x0007c082: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007bd19: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00076d1f: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070437: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000df7b6: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007c3c2: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00103a36: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015ba6e: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00157a26: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016046d: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00156d67: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0015744b: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00070613: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001552b0: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dc74: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000582c6: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015a513: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x001604b6: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x00099461: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00192720: add byte ptr [eax], al; test ah, 0x20; jne 0x1927c0; lea eax, [edi - 4]; pop edi; ret; 
0x001932b0: add byte ptr [eax], al; test ah, 0x20; jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x00192264: add byte ptr [eax], al; test ah, 0x40; jne 0x192350; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192c20: add byte ptr [eax], al; test ah, 0x40; jne 0x192d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x00193910: add byte ptr [eax], al; test ah, 0x40; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x001926f7: add byte ptr [eax], al; test ah, 2; jne 0x192790; lea eax, [edi - 8]; pop edi; ret; 
0x00193287: add byte ptr [eax], al; test ah, 2; jne 0x193320; lea eax, [ecx + 8]; ret; 
0x00192bf7: add byte ptr [eax], al; test ah, 4; jne 0x192d30; lea eax, [edi + 0xb]; pop edi; ret; 
0x001938e7: add byte ptr [eax], al; test ah, 4; jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x001926ce: add byte ptr [eax], al; test al, 0x20; jne 0x192760; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019325e: add byte ptr [eax], al; test al, 0x20; jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x00192212: add byte ptr [eax], al; test al, 0x40; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x00192bce: add byte ptr [eax], al; test al, 0x40; jne 0x192d00; lea eax, [edi + 7]; pop edi; ret; 
0x001938be: add byte ptr [eax], al; test al, 0x40; jne 0x193970; lea eax, [edx + 7]; ret; 
0x00194a03: add byte ptr [eax], al; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001926a9: add byte ptr [eax], al; test al, 2; jne 0x192730; lea eax, [edi - 0x10]; pop edi; ret; 
0x001930d9: add byte ptr [eax], al; test al, 2; jne 0x1932c0; mov eax, ecx; ret; 
0x00192bab: add byte ptr [eax], al; test al, 4; jne 0x192cd0; lea eax, [edi + 3]; pop edi; ret; 
0x0019389b: add byte ptr [eax], al; test al, 4; jne 0x193940; lea eax, [edx + 3]; ret; 
0x00193d17: add byte ptr [eax], al; test dh, 4; jne 0x1940bd; add eax, 0xb; pop edi; ret; 
0x001920e2: add byte ptr [eax], al; test dl, 0x40; jne 0x192360; lea eax, [edi + 7]; pop edi; ret; 
0x00193cf0: add byte ptr [eax], al; test dl, 0x40; jne 0x1940a9; add eax, 7; pop edi; ret; 
0x00194770: add byte ptr [eax], al; test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x00192128: add byte ptr [eax], al; test dl, 4; jne 0x192360; lea eax, [edi + 3]; pop edi; ret; 
0x00193cca: add byte ptr [eax], al; test dl, 4; jne 0x194095; add eax, 3; pop edi; ret; 
0x0011c999: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000832dd: add byte ptr [eax], al; test eax, eax; cmovne eax, edx; ret; 
0x00149554: add byte ptr [eax], al; test eax, eax; je 0x149560; add esp, 8; pop ebx; ret; 
0x00155827: add byte ptr [eax], al; test eax, eax; je 0x155838; add esp, 8; pop ebx; ret; 
0x000710b6: add byte ptr [eax], al; test eax, eax; je 0x710d0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x00109228: add byte ptr [eax], al; test eax, eax; jne 0x109250; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00116998: add byte ptr [eax], al; test eax, eax; jne 0x1169c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a68: add byte ptr [eax], al; test eax, eax; jne 0x116a90; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0016078d: add byte ptr [eax], al; test eax, eax; jne 0x160778; add esp, 8; pop ebx; ret; 
0x000dc727: add byte ptr [eax], al; test eax, eax; jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001591c2: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x000938cf: add byte ptr [eax], al; test ecx, ecx; jne 0x938e0; ret; 
0x000deb76: add byte ptr [eax], al; test ecx, ecx; js 0xdeb80; ret; 
0x00082546: add byte ptr [eax], al; test esi, esi; jne 0x82588; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000723b8: add byte ptr [eax], al; xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x723d0; ret; 
0x0007b388: add byte ptr [eax], al; xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7b3a0; ret; 
0x00080428: add byte ptr [eax], al; xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80440; ret; 
0x0005866b: add byte ptr [eax], al; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x0008b103: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00083e5c: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000849d3: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008dd9e: add byte ptr [eax], al; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d74bb: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x0011c914: add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001071b2: add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000d7c40: add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000983cb: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00058621: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x0008ce1f: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c88c2: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000b2bfe: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00083834: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00037ed2: add byte ptr [eax], al; xor eax, eax; ret; 
0x0003b3bd: add byte ptr [eax], al; xor eax, edx; ret; 
0x0002153e: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00085ff3: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00102bb8: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008d4ab: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000882b8: add byte ptr [eax], al; xor ecx, ecx; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008254f: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x00087ae8: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00086087: add byte ptr [eax], al; xor edx, edx; mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00087e23: add byte ptr [eax], al; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c76: add byte ptr [eax], al; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000824e0: add byte ptr [eax], al; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00086011: add byte ptr [eax], al; xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0003ba29: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00082e52: add byte ptr [eax], al; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0008a951: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082635: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012412f: add byte ptr [eax], al; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235df: add byte ptr [eax], al; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x000844b4: add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001709d2: add byte ptr [eax], al; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083ed3: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849cc: add byte ptr [eax], al; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000826b4: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00085139: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018ea73: add byte ptr [eax], bh; std; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191b89: add byte ptr [eax], bh; std; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0002fa10: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000b452e: add byte ptr [eax], cl; leave; jne 0xb4535; xor eax, eax; ret; 
0x0007a5f9: add byte ptr [eax], cl; sete al; movzx eax, al; ret; 
0x000dd2eb: add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001269a4: add byte ptr [eax], dl; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002fb60: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x00195c05: add byte ptr [eax], dl; add byte ptr [ecx + 0x7c6f7f2], cl; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0004169c: add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00037995: add byte ptr [ebp + 0x10], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x00103584: add byte ptr [ebp + 0x10], dh; add esp, 0x1c; ret; 
0x0006541a: add byte ptr [ebp + 0x10e74c0], al; ret; 
0x0002e3e8: add byte ptr [ebp + 0x110c86], cl; add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68e037a], cl; call dword ptr [eax - 0x18]; 
0x00121928: add byte ptr [ebp + 0x11], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0005839b: add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x00107d73: add byte ptr [ebp + 0x11], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0018f30c: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x0015f0aa: add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000b4fa3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x15d2d0]; and ch, 2; lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x00099fc3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x171c70]; and ch, 2; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0009af23: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x1726f0]; and ch, 2; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b293: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x172af0]; and ch, 2; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b1d3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x172b60]; and ch, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x000c9aa1: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x00117161: add byte ptr [ebp + 0x13], dh; add esp, 0x3c; ret; 
0x0008d5b2: add byte ptr [ebp + 0x14], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007b335: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00037baf: add byte ptr [ebp + 0x15], dh; add esp, 0x98; pop ebx; ret; 
0x0003e385: add byte ptr [ebp + 0x15], dh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001588fe: add byte ptr [ebp + 0x16], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0015eb93: add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0011c945: add byte ptr [ebp + 0x17], dh; add esp, 0x1018; pop ebx; ret; 
0x00121f38: add byte ptr [ebp + 0x17], dh; add esp, 0x18; pop ebx; ret; 
0x00106f74: add byte ptr [ebp + 0x17], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00142442: add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x001074fb: add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000ab96c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a2e1c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000cb05c: add byte ptr [ebp + 0x19], dh; add esp, 0x38; pop ebx; ret; 
0x000df7aa: add byte ptr [ebp + 0x19], dh; add esp, 0x78; pop ebx; ret; 
0x00087cf2: add byte ptr [ebp + 0x1a2093], cl; add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00114c27: add byte ptr [ebp + 0x1a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003899a: add byte ptr [ebp + 0x1a], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00106de1: add byte ptr [ebp + 0x1a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00188f7c: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001104ab: add byte ptr [ebp + 0x1b], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000934e9: add byte ptr [ebp + 0x1b], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00122223: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000cd783: add byte ptr [ebp + 0x1c], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00121e13: add byte ptr [ebp + 0x1c], dh; add esp, 0x28; pop ebx; ret; 
0x0016b12b: add byte ptr [ebp + 0x1d], dh; add esp, 0x28; pop ebx; ret; 
0x00167bfd: add byte ptr [ebp + 0x1d], dh; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x00176718: add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x000caaa3: add byte ptr [ebp + 0x1e], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008f3d6: add byte ptr [ebp + 0x1e], dh; add esp, 0x2c; ret; 
0x00114a91: add byte ptr [ebp + 0x1e], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00094d74: add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x00121d70: add byte ptr [ebp + 0x1f], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00123f18: add byte ptr [ebp + 0x1f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cda0b: add byte ptr [ebp + 0x1f], dh; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x000979d7: add byte ptr [ebp + 0x20840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1637a], cl; jmp dword ptr [ebp - 0x75]; 
0x0011ffdf: add byte ptr [ebp + 0x20], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0005138a: add byte ptr [ebp + 0x20], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x0008f8d2: add byte ptr [ebp + 0x22], dh; add esp, 0x18; pop ebx; ret; 
0x0008434e: add byte ptr [ebp + 0x22], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081648: add byte ptr [ebp + 0x22], dh; add esp, 0x2c; ret; 
0x001105a7: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011498d: add byte ptr [ebp + 0x22], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00085cf0: add byte ptr [ebp + 0x22c96], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00081993: add byte ptr [ebp + 0x23], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00081b6f: add byte ptr [ebp + 0x23], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011436c: add byte ptr [ebp + 0x23], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000b5700: add byte ptr [ebp + 0x2444c7c0], al; adc al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x001222cb: add byte ptr [ebp + 0x24], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016b1cd: add byte ptr [ebp + 0x24], dh; add esp, 0x28; pop ebx; ret; 
0x00194858: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00194105: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a4cd8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00190277: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0018e368: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x00116de5: add byte ptr [ebp + 0x27], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c2fa1: add byte ptr [ebp + 0x28], dh; add esp, 0x18; pop ebx; ret; 
0x000817b0: add byte ptr [ebp + 0x28], dh; add esp, 0x2c; ret; 
0x0004a883: add byte ptr [ebp + 0x28], dh; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00143fa1: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x00094b63: add byte ptr [ebp + 0x2a], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x0013bdaf: add byte ptr [ebp + 0x2a], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011c93e: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00143d9a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e3a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143efa: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f9a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x143fcd; add esp, 0x11c; ret; 
0x00037ba8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00038100: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38111; add esp, 0x12c; ret; 
0x00038720: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a0: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x00038828: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38839; add esp, 0x9c; ret; 
0x000484f4: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x48505; add esp, 0x42c; ret; 
0x00057d68: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x000d7111: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d723d: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x0011c13d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0015f5c1: add byte ptr [ebp + 0x2b], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00191c32: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00021e50: add byte ptr [ebp + 0x2c], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008189c: add byte ptr [ebp + 0x2c], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00160724: add byte ptr [ebp + 0x2d], dh; add esp, 0x1c; ret; 
0x0002ba91: add byte ptr [ebp + 0x2e], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008e5ab: add byte ptr [ebp + 0x2e], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00087a77: add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x0016815a: add byte ptr [ebp + 0x2f], dh; add esp, 0x18; pop ebx; ret; 
0x0008d872: add byte ptr [ebp + 0x2f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008d354: add byte ptr [ebp + 0x30], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012d35d: add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x0019d357: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000ff957: add byte ptr [ebp + 0x3154244c], cl; dec dword ptr [ebp - 0x76afdba4]; ret 0x4c89; 
0x001683e0: add byte ptr [ebp + 0x31], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001147be: add byte ptr [ebp + 0x31], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000de832: add byte ptr [ebp + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000d742f: add byte ptr [ebp + 0x32], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0008fa62: add byte ptr [ebp + 0x33], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00155f73: add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d686d: add byte ptr [ebp + 0x33], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000d021f: add byte ptr [ebp + 0x348d0148], cl; mov dh, 0x83; ret 0x8901; 
0x00037d55: add byte ptr [ebp + 0x34], dh; add esp, 0x28; pop ebx; ret; 
0x00081489: add byte ptr [ebp + 0x35], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000871b1: add byte ptr [ebp + 0x35], dh; mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x001501b5: add byte ptr [ebp + 0x36], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d5d69: add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x000cac98: add byte ptr [ebp + 0x37], dh; add esp, 0x28; pop ebx; ret; 
0x00106eca: add byte ptr [ebp + 0x37], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00082047: add byte ptr [ebp + 0x37], dh; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00108a34: add byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x0008f4ec: add byte ptr [ebp + 0x38], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00119fae: add byte ptr [ebp + 0x39], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003aeb0: add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x000d839d: add byte ptr [ebp + 0x39], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00093be4: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x000912d3: add byte ptr [ebp + 0x39b874c0], al; ret 0xf475; 
0x00119eec: add byte ptr [ebp + 0x3b], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008f166: add byte ptr [ebp + 0x3b], dh; add esp, 0x38; pop ebx; ret; 
0x0008e64d: add byte ptr [ebp + 0x3c], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x001161f8: add byte ptr [ebp + 0x3c], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x000c073b: add byte ptr [ebp + 0x3d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00190550: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000cdaac: add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15c3df6e], cl; call dword ptr [ecx + 0x52]; 
0x0016b2fb: add byte ptr [ebp + 0x3e], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0011078b: add byte ptr [ebp + 0x3e], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0013dd01: add byte ptr [ebp + 0x40], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00143da1: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000f190f: add byte ptr [ebp + 0x40f6f004], cl; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00161f8c: add byte ptr [ebp + 0x428b0076], cl; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000d93bd: add byte ptr [ebp + 0x42], dh; add esp, 0x28; pop ebx; ret; 
0x0014226e: add byte ptr [ebp + 0x42], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00037a91: add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x0016bfbc: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x000dc85e: add byte ptr [ebp + 0x43], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00083cec: add byte ptr [ebp + 0x448b0076], cl; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0015eda0: add byte ptr [ebp + 0x44], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00109f86: add byte ptr [ebp + 0x44], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x0018f2d8: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x000ddd79: add byte ptr [ebp + 0x46], dh; add esp, 0x28; pop ebx; ret; 
0x00143f01: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00077ab6: add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00144231: add byte ptr [ebp + 0x48], dh; add esp, 0x1c; ret; 
0x0003a724: add byte ptr [ebp + 0x4a080], cl; add byte ptr [eax - 1], dl; je 0x3a753; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x00105f04: add byte ptr [ebp + 0x4b], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016236d: add byte ptr [ebp + 0x4b], dh; add esp, 0x18; pop ebx; ret; 
0x0016ac38: add byte ptr [ebp + 0x4c], dh; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x000c058b: add byte ptr [ebp + 0x4d], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000de0e2: add byte ptr [ebp + 0x4d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120760: add byte ptr [ebp + 0x4d], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000b5772: add byte ptr [ebp + 0x50342444], cl; push dword ptr [ebp + 8]; call ebx; 
0x0015e863: add byte ptr [ebp + 0x5128244c], cl; push 4; push edx; call dword ptr [eax + 0x14]; 
0x001138ee: add byte ptr [ebp + 0x51], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00038b6f: add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x0013e17d: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013e249: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x00080edd: add byte ptr [ebp + 0x52840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x000d5dfc: add byte ptr [ebp + 0x548b0076], cl; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00109df2: add byte ptr [ebp + 0x56], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00162521: add byte ptr [ebp + 0x57], dh; add esp, 0x18; pop ebx; ret; 
0x0007ce71: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x40]; 
0x0016fafe: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x0008a437: add byte ptr [ebp + 0x5840fc9], al; add al, 0; add byte ptr [eax + 0xf0], bh; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000cad51: add byte ptr [ebp + 0x58], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001625bd: add byte ptr [ebp + 0x59], dh; add esp, 0x18; pop ebx; ret; 
0x0016c01b: add byte ptr [ebp + 0x5a], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012e9f7: add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0016a4dd: add byte ptr [ebp + 0x5b], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00143e41: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x00047c64: add byte ptr [ebp + 0x5d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121063: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x216d0; ret; 
0x000e7e4f: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x00023a1a: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x001131c5: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000c065b: add byte ptr [ebp + 0x5f], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00161fd6: add byte ptr [ebp + 0x60], dh; add esp, 0x18; pop ebx; ret; 
0x0005e5b8: add byte ptr [ebp + 0x64850fdb], al; in eax, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000a4cfb: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x00115e3c: add byte ptr [ebp + 0x67], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013e26d: add byte ptr [ebp + 0x68], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010ac2f: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x10ac5d; xor bh, bh; jne 0x10ac49; call dword ptr [ebp + 0x24]; 
0x0010bc5f: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x10bc8d; xor bh, bh; jne 0x10bc79; call dword ptr [ebp + 0x24]; 
0x001127df: add byte ptr [ebp + 0x6a501445], cl; add edi, edi; je 0x11280d; xor bh, bh; jne 0x1127f9; call dword ptr [ebp + 0x24]; 
0x000f9877: add byte ptr [ebp + 0x6a], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015f1b1: add byte ptr [ebp + 0x6b], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x000d5ebc: add byte ptr [ebp + 0x6c8d0076], cl; and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0015b8c2: add byte ptr [ebp + 0x73], dh; add esp, 0x18; pop ebx; ret; 
0x00075368: add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x00143b99: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00099e45: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00130c68: add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x001438ca: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00092061: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0011ed09: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00030473: add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x0013dc3b: add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0015a4e1: add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0018e379: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ja 0x18e389; neg eax; ret; 
0x000c8c59: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 1], bh; ret; 
0x00094e49: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00037519: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x00066e79: add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x001143db: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x001232d6: add byte ptr [ebp + 0xb], dh; add esp, 0x7c; ret; 
0x001302ec: add byte ptr [ebp + 0xbe80076], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0015eb17: add byte ptr [ebp + 0xd], dh; add esp, 0x1c; ret; 
0x00107c47: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107d07: add byte ptr [ebp + 0xd], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x0003a9b0: add byte ptr [ebp + 0xd], dh; add esp, 4; pop ebx; pop esi; ret; 
0x0015efae: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00080067: add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000a4d5c: add byte ptr [ebp + 0xf660076], cl; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x00103185: add byte ptr [ebp + 0xf840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x001699a7: add byte ptr [ebp + 0xf], dh; add esp, 0x18; pop ebx; ret; 
0x000c4c14: add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x000a736c: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x0016e03c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x00154f5c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x000bb456: add byte ptr [ebp + 0xff589ff], al; xchg ebp, eax; ret 0x6eb; 
0x0004a6ad: add byte ptr [ebp + 2], dh; push ecx; ret; 
0x00021db2: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x0003aaaf: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0015feee: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x000370c1: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x0008a20d: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x00093082: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000c9bcc: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x00057dee: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x00081ee7: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010fb0d: add byte ptr [ebp + 6], dh; add esp, 0x14; pop esi; pop edi; ret; 
0x000385ce: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00117f7f: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x001635d3: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00122b04: add byte ptr [ebp + 6], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x001640f0: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038107: add byte ptr [ebp + 7], dh; add esp, 0x12c; ret; 
0x00085a3f: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cdc4e: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00118362: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000484fb: add byte ptr [ebp + 7], dh; add esp, 0x42c; ret; 
0x0003882f: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0016cf76: add byte ptr [ebp + 7], dh; add esp, 4; pop ebx; pop esi; ret; 
0x00163645: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0010a3c3: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014793b: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x00057d6f: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0011c144: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x0011cb23: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000d7118: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0008d4f7: add byte ptr [ebp + 8], dh; and eax, 0x38; cmp eax, 8; je 0x8d503; ret; 
0x00081c0b: add byte ptr [ebp + 8], dh; and edx, 0x38; cmp edx, 8; je 0x81c17; ret; 
0x0003647b: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00087d75: add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x00037435: add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0004cc39: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00098cf7: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00037b30: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00190584: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x00020f44: add byte ptr [ebp + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0008d280: add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x000fadac: add byte ptr [ebp - 0x12c52f79], cl; call dword ptr [eax + 0x6a]; 
0x000fb26c: add byte ptr [ebp - 0x12c52f7a], cl; call dword ptr [eax + 0x6a]; 
0x000a1357: add byte ptr [ebp - 0x137c00ba], cl; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000922bc: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x193f2f79], cl; call dword ptr [eax - 0x73]; 
0x001219cc: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001189bc: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x0016027c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00092c5c: add byte ptr [ebp - 0x137cff8a], cl; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [eax - 0x2c], -0x1a; call dword ptr [eax - 0x73]; 
0x000460dc: add byte ptr [ebp - 0x157cff8a], cl; xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x000cdab2: add byte ptr [ebp - 0x15c3df6e], cl; call dword ptr [ecx + 0x52]; 
0x000961bf: add byte ptr [ebp - 0x173e00ba], cl; add al, 0x89; ret; 
0x00079730: add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0009424f: add byte ptr [ebp - 0x192a8f7d], cl; call dword ptr [eax + 0x56]; 
0x0008f045: add byte ptr [ebp - 0x196fff7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0008f051: add byte ptr [ebp - 0x19714f7d], cl; call dword ptr [ecx + 0x50]; 
0x00074b40: add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x00083b0c: add byte ptr [ebp - 0x1f7cff8a], cl; std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000213e4: add byte ptr [ebp - 0x25], dh; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x0011779c: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x000b4f67: add byte ptr [ebp - 0x2776fba8], cl; pop ebx; ret; 
0x000c8d0a: add byte ptr [ebp - 0x278afeb8], cl; mov eax, ecx; ret; 
0x00098569: add byte ptr [ebp - 0x297bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000dcdfc: add byte ptr [ebp - 0x2f76ff8a], cl; call dword ptr gs:[0x10]; 
0x000213f2: add byte ptr [ebp - 0x33], dh; ret; 
0x0012486c: add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x00082bac: add byte ptr [ebp - 0x3b7cff8a], cl; add al, 0x5b; pop esi; ret; 
0x0004892c: add byte ptr [ebp - 0x3c7cff8a], cl; add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x000832de: add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011c99a: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x001591c3: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x0011a45c: add byte ptr [ebp - 0x3f7cff8a], cl; add dword ptr [ecx], edi; ret; 
0x000e7e5c: add byte ptr [ebp - 0x3fceff8a], cl; pop ebx; pop esi; ret; 
0x00094e3c: add byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0013a837: add byte ptr [ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x000e2aef: add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000e045f: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x0008d3d5: add byte ptr [ebp - 0x46efdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x0002b483: add byte ptr [ebp - 0x47958a01], al; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00191c5c: add byte ptr [ebp - 0x47a4ff8a], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x191c6a; neg eax; ret; 
0x00107397: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092bc7: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001078d4: add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001207fa: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d5ebf: add byte ptr [ebp - 0x47fbdb94], cl; or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c8a5b: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xc8a69; neg eax; ret; 
0x001638b6: add byte ptr [ebp - 0x49f6e], cl; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000975dd: add byte ptr [ebp - 0x4d7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000cd063: add byte ptr [ebp - 0x5397008b], cl; ret 0xf0; 
0x000c37df: add byte ptr [ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0013025c: add byte ptr [ebp - 0x6417ff8a], cl; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00121973: add byte ptr [ebp - 0x65d6b79], cl; call dword ptr [eax - 0x18]; 
0x0011c6d5: add byte ptr [ebp - 0x65f1780], cl; jmp dword ptr [ebp - 0x75]; 
0x0010131e: add byte ptr [ebp - 0x661677a], cl; call dword ptr [eax - 0x73]; 
0x000df2d2: add byte ptr [ebp - 0x665bf7b], cl; call dword ptr [eax - 0x73]; 
0x000c3de5: add byte ptr [ebp - 0x6675b7b], cl; call dword ptr [eax - 0x73]; 
0x000b5682: add byte ptr [ebp - 0x6698f7e], cl; call dword ptr [eax - 0x73]; 
0x00099e8b: add byte ptr [ebp - 0x66b7780], cl; call dword ptr [eax + 0x68]; 
0x00099982: add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x0019496f: add byte ptr [ebp - 0x677af02e], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0008ed1d: add byte ptr [ebp - 0x67d4b7e], cl; call dword ptr [eax - 0x73]; 
0x00079cef: add byte ptr [ebp - 0x6820f7d], cl; call dword ptr [eax - 0x73]; 
0x00078142: add byte ptr [ebp - 0x682e37a], cl; call dword ptr [eax - 0x73]; 
0x0002e3f4: add byte ptr [ebp - 0x68e037a], cl; call dword ptr [eax - 0x18]; 
0x0002e7e1: add byte ptr [ebp - 0x68e0380], cl; call dword ptr [eax - 0x18]; 
0x0002d787: add byte ptr [ebp - 0x68e7379], cl; call dword ptr [eax - 0x73]; 
0x00023b1f: add byte ptr [ebp - 0x691637d], cl; call dword ptr [eax - 0x73]; 
0x00022620: add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x00021705: add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x0016397b: add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x0014dace: add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x00149b39: add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x0014a544: add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x0002f7ba: add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x0011d4e3: add byte ptr [ebp - 0x6abac7d], cl; call dword ptr [edx + 0x52]; 
0x0011d42d: add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0011d413: add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00034e0e: add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011c825: add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x0015cae3: add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x000ffc9a: add byte ptr [ebp - 0x6b67579], cl; call dword ptr [eax - 0x73]; 
0x00137d63: add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x000e010b: add byte ptr [ebp - 0x6b83f79], cl; call dword ptr [eax - 0x73]; 
0x000fc787: add byte ptr [ebp - 0x6bb7b], cl; call dword ptr [eax - 0x73]; 
0x00091943: add byte ptr [ebp - 0x6bf547a], cl; call dword ptr [eax - 0x73]; 
0x0009042e: add byte ptr [ebp - 0x6bfb67d], cl; call dword ptr [eax - 0x73]; 
0x00089507: add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008879e: add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x00086dad: add byte ptr [ebp - 0x6c11179], cl; call dword ptr [eax - 0x73]; 
0x00085d3b: add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x00087070: add byte ptr [ebp - 0x6c1317a], cl; call dword ptr [eax - 0x73]; 
0x00064972: add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x0016f0ef: add byte ptr [ebp - 0x6ce8979], cl; call dword ptr [eax + 0x6a]; 
0x0003eac2: add byte ptr [ebp - 0x6cf3879], cl; call dword ptr [eax - 0x73]; 
0x00044d22: add byte ptr [ebp - 0x6cf4279], cl; call dword ptr [eax - 0x73]; 
0x00025365: add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x00025f46: add byte ptr [ebp - 0x6d4517a], cl; call dword ptr [eax - 0x73]; 
0x00024cb0: add byte ptr [ebp - 0x6d4517d], cl; call dword ptr [eax - 0x73]; 
0x000c8c3a: add byte ptr [ebp - 0x6fffd98c], cl; add eax, 3; ret; 
0x0007f67a: add byte ptr [ebp - 0x6fffd98c], cl; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0019332a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xa]; ret; 
0x0019333a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xb]; ret; 
0x0019334a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xd]; ret; 
0x0019335a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xe]; ret; 
0x0019336a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 0xf]; ret; 
0x001932ca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 2]; ret; 
0x001932da: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 3]; ret; 
0x001932ea: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 5]; ret; 
0x001932fa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 6]; ret; 
0x0019330a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 7]; ret; 
0x0019331a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [ecx + 9]; ret; 
0x0019228a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi + 1]; pop edi; ret; 
0x0019227a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edi]; pop edi; ret; 
0x0019399a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xa]; ret; 
0x001939aa: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xc]; ret; 
0x001939ba: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xd]; ret; 
0x001939ca: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 0xe]; ret; 
0x0019393a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 2]; ret; 
0x0019394a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 4]; ret; 
0x0019395a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 5]; ret; 
0x0019396a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 6]; ret; 
0x0019397a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 8]; ret; 
0x0019398a: add byte ptr [ebp - 0x6fffd98c], cl; lea eax, [edx + 9]; ret; 
0x000a4d1a: add byte ptr [ebp - 0x6fffd98c], cl; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0018773a: add byte ptr [ebp - 0x6fffd98c], cl; mov eax, 1; ja 0x187749; neg eax; ret; 
0x000a4cea: add byte ptr [ebp - 0x6fffd98c], cl; mov word ptr [ecx], dx; pop ebx; ret; 
0x000c8c4a: add byte ptr [ebp - 0x6fffd98c], cl; xor eax, eax; ret; 
0x00087dd3: add byte ptr [ebp - 0x7257f72], cl; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001922bb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; add al, 0x5f; ret; 
0x00194aeb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cld; pop edi; ret; 
0x0019279b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cli; pop edi; ret; 
0x0019275b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; cmc; pop edi; ret; 
0x0019232b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; or al, 0x5f; ret; 
0x0019273b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; pop edi; ret; 
0x0019234b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push cs; pop edi; ret; 
0x001922db: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; push es; pop edi; ret; 
0x0019278b: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; stc; pop edi; ret; 
0x001927bb: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; std; pop edi; ret; 
0x001927ab: add byte ptr [ebp - 0x72ffd98c], cl; inc edi; sti; pop edi; ret; 
0x001467fd: add byte ptr [ebp - 0x7481870a], al; inc ebp; aam 0x85; ror byte ptr [edi], 0x84; ret; 
0x000267aa: add byte ptr [ebp - 0x7497dbbc], cl; je 0x267d6; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x00116999: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a69: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00037809: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00109229: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x001093e9: add byte ptr [ebp - 0x74dd8a40], al; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011b96f: add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000ec93b: add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000ea0d8: add byte ptr [ebp - 0x75], ah; adc al, byte ptr [ebp - 0x9dc8a01]; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00113a28: add byte ptr [ebp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00113b28: add byte ptr [ebp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000aa32b: add byte ptr [ebp - 0x75ffd98c], cl; add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x000ab39c: add byte ptr [ebp - 0x7699ff8a], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000f11e1: add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x000d5de0: add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008d3de: add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x0004817b: add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x000825c6: add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x0014d83f: add byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0003a881: add byte ptr [ebp - 0x77], ah; pop ss; push dword ptr [ebx + 4]; call eax; 
0x00094e4f: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000d9957: add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000d989f: add byte ptr [ebp - 0x786a7240], al; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000b0bcb: add byte ptr [ebp - 0x7affd98c], cl; sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00046b6c: add byte ptr [ebp - 0x7b76feaf], cl; mov word ptr [eax + eax - 0x6b770000], ds; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x0019d3ee: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016078e: add byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00121a04: add byte ptr [ebp - 0x7c578b2e], al; in al, dx; or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x0015fa6c: add byte ptr [ebp - 0x7c74ff8a], cl; mov eax, 0x83ffffff; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013beec: add byte ptr [ebp - 0x7c99ff8a], cl; sti; adc al, 0xf; xchg esp, eax; ret; 
0x00140c28: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x00147888: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000cde47: add byte ptr [ebp - 0x7cbf8b40], al; ret; 
0x00146ec8: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000b0bcf: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000d5fb4: add byte ptr [ebp - 0x7cd08b40], al; in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0012d977: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x12d9b3; call eax; 
0x0019cce4: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x8949f6d], cl; call dword ptr [edx + 0x50]; 
0x0014a59d: add byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001442c5: add byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x00155828: add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00159305: add byte ptr [ebp - 0x7cf98b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00149555: add byte ptr [ebp - 0x7cf98b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016bebf: add byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x0013ff6d: add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x00033adb: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x0015527b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000b2b9b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x8340; 
0x0016a743: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x00188f1b: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x0018025b: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x000b4872: add byte ptr [ebp - 0x7fffffff], 0x74; pop es; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x0007536e: add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x001608b7: add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aec7: add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x000a2f7b: add byte ptr [ebp - 0xcffd98c], cl; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0011c4e4: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x000377bd: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x00092b10: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef0: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000de018: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037782: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107d9e: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000dd275: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0013bcff: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0008f1b8: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000c9978: add byte ptr [ebp - 7], ch; call dword ptr [eax + 0x56]; 
0x000de644: add byte ptr [ebp], bh; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x001490cf: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x0014920a: add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000741df: add byte ptr [ebx + 0x106a04ec], al; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0003ea0f: add byte ptr [ebx + 0x1182474], cl; ret; 
0x000dcd3e: add byte ptr [ebx + 0x1200011], bh; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00081b85: add byte ptr [ebx + 0x128b04ec], al; push ebx; push eax; push ecx; call edx; 
0x000787d7: add byte ptr [ebx + 0x1389cfe2], al; add esp, 4; pop ebx; pop esi; ret; 
0x0005416f: add byte ptr [ebx + 0x14898114], cl; xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0014078f: add byte ptr [ebx + 0x148d1451], cl; ret 0x1a8b; 
0x0007fd6f: add byte ptr [ebx + 0x16a14ec], al; call 0x7f7d0; add esp, 0x18; pop ebx; ret; 
0x00099127: add byte ptr [ebx + 0x16b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0019d351: add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000803c9: add byte ptr [ebx + 0x19a083], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00192edf: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x00193f1f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001935af: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0010c707: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00071830: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00107390: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0005df34: add byte ptr [ebx + 0x1e910c4], al; ret 0xffff; 
0x0019d5d2: add byte ptr [ebx + 0x207f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0016d1c1: add byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0016d311: add byte ptr [ebx + 0x217f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x00082fa9: add byte ptr [ebx + 0x21ba084e], cl; add byte ptr [eax], al; add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001681d0: add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x0004a4c0: add byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00157446: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000d8bf0: add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000cbf66: add byte ptr [ebx + 0x247f01f8], al; add esp, 8; pop ebx; ret; 
0x0014e53d: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x00124965: add byte ptr [ebx + 0x26497], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0002fc6a: add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fbd9: add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x00085a8d: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000574ef: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0016722f: add byte ptr [ebx + 0x2901106d], al; ret; 
0x00196228: add byte ptr [ebx + 0x2904245c], cl; ret 0xfa83; 
0x0009ddec: add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x0009e458: add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0009e200: add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0004bfd6: add byte ptr [ebx + 0x29302454], cl; ret 0x5489; 
0x0004be93: add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x00114d6f: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x00192ecf: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x00193f0f: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x0019359f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0011e8dd: add byte ptr [ebx + 0x2d7f01f8], al; add esp, 8; pop ebx; ret; 
0x0002fc3a: add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fb99: add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008db9f: add byte ptr [ebx + 0x31042444], cl; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x001524ff: add byte ptr [ebx + 0x31082444], cl; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00086a32: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00109364: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x001527bf: add byte ptr [ebx + 0x310c2444], cl; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003cedf: add byte ptr [ebx + 0x31182444], cl; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0019003f: add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0003aa25: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000ea5ee: add byte ptr [ebx + 0x34ff5307], cl; mov al, 0xff; je 0xea61c; and al, 0xe8; ret 0xfcb0; 
0x00120735: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b5: add byte ptr [ebx + 0x357401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0007e115: add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x0008295b: add byte ptr [ebx + 0x377f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x0006e00f: add byte ptr [ebx + 0x3908245c], cl; ret; 
0x0009734b: add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x0015a0c0: add byte ptr [ebx + 0x3910244c], cl; ret 0x4e0f; 
0x0009c8f0: add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00140103: add byte ptr [ebx + 0x395c2474], cl; ret; 
0x00147ff9: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00198617: add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00192ebf: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x00193eff: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x0019358f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x00149877: add byte ptr [ebx + 0x3b7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00155d5f: add byte ptr [ebx + 0x428b0cec], al; add al, 0x52; call dword ptr [eax + 0x10]; 
0x0015527f: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x00157a27: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x157a55; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016027f: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x1602ad; adc al, 0x53; call dword ptr [eax]; 
0x0016046e: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x16049c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0015d170: add byte ptr [ebx + 0x438b08ec], al; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015602f: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0003b611: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0004892f: add byte ptr [ebx + 0x43c601c3], al; jmp dword ptr [eax]; 
0x0008277e: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0003785f: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8c36: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; call eax; 
0x0007c083: add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007bd1a: add byte ptr [ebx + 0x448d08ec], al; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00076d20: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070438: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0016624f: add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x00091732: add byte ptr [ebx + 0x450f04f8], al; ret 0x968b; 
0x00023eab: add byte ptr [ebx + 0x45890cc4], al; fmul qword ptr [ebp - 0x20394f7d]; call dword ptr [eax - 0x73]; 
0x0013c23f: add byte ptr [ebx + 0x4589dc45], cl; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0015dc8e: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00082d97: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0005d763: add byte ptr [ebx + 0x45e910c4], al; fdivr st(7); inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x000aed1f: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00081d46: add byte ptr [ebx + 0x47401f8], al; ret; 
0x00035248: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00056ebc: add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x00056fe7: add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x0002fbdb: add byte ptr [ebx + 0x48b2840], cl; nop; ret; 
0x0002fb9b: add byte ptr [ebx + 0x48b3040], cl; nop; ret; 
0x000c169a: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1d9f: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c1c52: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c1a2e: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0019cc9f: add byte ptr [ebx + 0x48e808ec], al; add al, byte ptr [eax]; add al, ch; ret; 
0x000d249f: add byte ptr [ebx + 0x490f01ea], al; ret 0x708d; 
0x00192eaf: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x00193eef: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x0019357f: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x0009ef2c: add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x00161f77: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f8f: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0015adf9: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015d8b9: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015cea9: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009f1a6: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0x1a8b; 
0x0009f27f: add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x000c89ff: add byte ptr [ebx + 0x4f39344e], cl; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0015caa8: add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x000660f4: add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0015dc62: add byte ptr [ebx + 0x50532050], cl; call dword ptr [edx + 4]; 
0x00069e55: add byte ptr [ebx + 0x505504ec], al; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0015a501: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x0015a714: add byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 8]; 
0x0015529b: add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0015e2e6: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0010a08d: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00076e80: add byte ptr [ebx + 0x51], dl; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007c4e1: add byte ptr [ebx + 0x51], dl; push esi; call dword ptr [ebp + 0x40]; 
0x0002f844: add byte ptr [ebx + 0x51e910c4], al; or bh, bh; call dword ptr [eax - 0x73]; 
0x00161ec7: add byte ptr [ebx + 0x52530446], cl; push esi; call dword ptr [eax + 8]; 
0x0006620f: add byte ptr [ebx + 0x525304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00093c07: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0016f7c7: add byte ptr [ebx + 0x538b1043], cl; or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x00155357: add byte ptr [ebx + 0x54890045], cl; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0003aaa1: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd1: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00087e64: add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000df7b7: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007c3c3: add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00103a37: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007cc8e: add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00068200: add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x0006b157: add byte ptr [ebx + 0x565304ec], al; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3d8: add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x00038b82: add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0006e235: add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007cc0e: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x0012b0d4: add byte ptr [ebx + 0x57500cc4], al; push 0x2000006; call dword ptr [esi + 0x14]; 
0x00072f2c: add byte ptr [ebx + 0x575304ec], al; push esi; call dword ptr [eax + 0x2c]; 
0x0002ec66: add byte ptr [ebx + 0x58408b00], cl; ret; 
0x00139641: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00096c87: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000ce14f: add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000b21da: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00192e9f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x00193edf: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x0019356f: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x000719cf: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000aed67: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x00118617: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002270f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0009b7b9: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x000fddb5: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003a389: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000791cb: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007e92f: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000828a5: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0002c2d9: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000d62ab: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00092f8b: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00021f54: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00078055: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00155b29: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000241a5: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000b51a2: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000392fa: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00044760: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x001238ac: add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x000dc492: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x000853ef: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0002b365: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0007c0d7: add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x00085c97: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0010a501: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000c8ab6: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x000879f4: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0014afb4: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0012e9ff: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x00109f06: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0002831f: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x00195d0a: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000225ff: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000389a2: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00021477: add byte ptr [ebx + 0x5e], bl; ret; 
0x00193f3f: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x00083c6f: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x0003799d: add byte ptr [ebx + 0x5f], bl; ret; 
0x00103538: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x0008f3cb: add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f657: add byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x000a2e6f: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000936d4: add byte ptr [ebx + 0x67650f8], al; ret; 
0x0008db3f: add byte ptr [ebx + 0x685704ec], al; ret 0; 
0x00048075: add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x0007fbf1: add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0015744c: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00070614: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000831fb: add byte ptr [ebx + 0x6a0cec], al; call 0x827f0; add esp, 0x1c; ret; 
0x0015537d: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x000733db: add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x00192e8f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x00193ecf: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x0019355f: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x000933e3: add byte ptr [ebx + 0x6c8b28ec], al; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0007a90f: add byte ptr [ebx + 0x73ff04ec], al; add al, 0x83; ret; 
0x0003903f: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012a58a: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x18; push 0; push 0x2000004; call eax; 
0x0007bba1: add byte ptr [ebx + 0x74ff04ec], al; and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x001552b1: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dc75: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x2c; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000582c7: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015a514: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00139b78: add byte ptr [ebx + 0x74ff10c4], al; and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0016f09f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x16e930; add esp, 0x18; pop ebx; ret; 
0x0013cb1f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000792bf: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x70550; add esp, 0x18; pop ebx; ret; 
0x0011769f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00087cf8: add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00080f10: add byte ptr [ebx + 0x75d28516], cl; imul eax, dword ptr [ebx + 0x56a04ec], 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x0007305f: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x73075; push esi; call dword ptr [ebx + 0x2c]; 
0x0007291f: add byte ptr [ebx + 0x75ff04ec], al; in al, 0xff; jne 0x72931; push edx; call dword ptr [ebx + 0x1c]; 
0x0015dc25: add byte ptr [ebx + 0x75ff3c45], cl; push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0019354f: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x001553e5: add byte ptr [ebx + 0x7c8d08ec], al; and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0012082f: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000825ea: add byte ptr [ebx + 0x87401f8], al; ret; 
0x0008135f: add byte ptr [ebx + 0x8890843], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00107a2d: add byte ptr [ebx + 0x90249c], cl; add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00108a12: add byte ptr [ebx + 0x94248c], cl; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x000871b9: add byte ptr [ebx + 0x97510e0], al; add esp, 0xc; ret; 
0x00107f36: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108b47: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00108a19: add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00120a6a: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00083ba0: add byte ptr [ebx + 0xa7602fa], al; ret; 
0x001200d1: add byte ptr [ebx + 0xb0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00192eef: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x00193f2f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0008b0ef: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001935bf: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x000723bf: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0012331c: add byte ptr [ebx + 0xb], bh; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00124f5d: add byte ptr [ebx + 0xb], dh; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x001688e3: add byte ptr [ebx + 0xc48b3], cl; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x000d5dcf: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x001034ec: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0015e7c7: add byte ptr [ebx + 0xcec8303], cl; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00058d76: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00122866: add byte ptr [ebx + 0xe], bh; call dword ptr gs:[0x10]; 
0x000f5d49: add byte ptr [ebx + 0xf00903c], al; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0005612d: add byte ptr [ebx + 0xf0c247c], cl; mov esi, 0x8b572444; xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x00054e5f: add byte ptr [ebx + 0xf10247c], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x0018bb50: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000de62c: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x8dc3; 
0x000de669: add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x000de647: add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x0016f947: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x0007a899: add byte ptr [ebx + 2], bh; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008674d: add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087e1f: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c72: add byte ptr [ebx + 2], bh; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017694d: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x000b78ba: add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x00140bdf: add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x39]; 
0x00146e05: add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x0014c38f: add byte ptr [ebx - 0x1137e], cl; jmp dword ptr [ebp - 0x39]; 
0x0014692d: add byte ptr [ebx - 0x1137f], cl; jmp dword ptr [ebp - 0x39]; 
0x0013141d: add byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x0015c68e: add byte ptr [ebx - 0x12b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0015c6e9: add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x00166c6f: add byte ptr [ebx - 0x13341], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d80ed: add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x000378b7: add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x00108a3c: add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x00127994: add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0012206f: add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x00109ff7: add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x75]; 
0x0011418e: add byte ptr [ebx - 0x13358], cl; jmp dword ptr [ebp - 0x75]; 
0x0015d597: add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x75]; 
0x0008e65f: add byte ptr [ebx - 0x1336a], cl; jmp dword ptr [ebp - 0x7d]; 
0x000374d7: add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x77]; 
0x0012ff4f: add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005847f: add byte ptr [ebx - 0x1336e], cl; push edi; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0008ddd7: add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0012faff: add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0007d5af: add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003757f: add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x0014c873: add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x000217d7: add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x7d]; 
0x0004481f: add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x0008d1cf: add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x75]; 
0x0013970c: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x0002ed9f: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0010d966: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011c1cf: add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d61cf: add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x39]; 
0x0008ec2c: add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x000deb7f: add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003751f: add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0013290c: add byte ptr [ebx - 0x13380], cl; dec dword ptr [ecx - 0x16e7dbbc]; mov ebp, 0xe8fffffe; jmp esi; 
0x00021dcd: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp + 3]; 
0x0003802f: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00148cab: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x0010d1a1: add byte ptr [ebx - 0x13380], cl; jmp dword ptr [esi - 0x77]; 
0x00143c97: add byte ptr [ebx - 0x1365], cl; jmp dword ptr [ebp - 0x75]; 
0x0007a0e9: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00066a6d: add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000f8bda: add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x9bac868d; stc; call dword ptr [eax - 0x73]; 
0x0015d6b4: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0006b6ed: add byte ptr [ebx - 0x137ccfec], cl; add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0007dd37: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0003016a: add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x68cc37b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00077b8a: add byte ptr [ebx - 0x137cf3c0], cl; add al, 0x29; ret 0xfac1; 
0x00155298: add byte ptr [ebx - 0x137cffbb], cl; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00143fed: add byte ptr [ebx - 0x1380], cl; jmp dword ptr [ebp - 0x75]; 
0x0002f637: add byte ptr [ebx - 0x13b68], cl; jmp dword ptr [ebp - 0x77]; 
0x000eb42f: add byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x000cdde5: add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002fead: add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0010318d: add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x0002feed: add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0015f801: add byte ptr [ebx - 0x14f45], cl; jmp dword ptr [ebp - 0x75]; 
0x000de50f: add byte ptr [ebx - 0x15537b], cl; inc dword ptr [ebx - 0x72acf714]; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00094f85: add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00098552: add byte ptr [ebx - 0x15f79], cl; jmp dword ptr [ebp - 0x75]; 
0x000975e5: add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000979df: add byte ptr [ebx - 0x1637a], cl; jmp dword ptr [ebp - 0x75]; 
0x0017094b: add byte ptr [ebx - 0x17], bl; je 0x170942; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00139c2b: add byte ptr [ebx - 0x17a9f314], al; mov edx, dword ptr [edi]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000d744c: add byte ptr [ebx - 0x17acf314], al; cli; ret; 
0x00128301: add byte ptr [ebx - 0x17adf314], al; cmc; mov dword ptr [0xc483fff5], eax; adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x00168531: add byte ptr [ebx - 0x17adf314], al; lds esp, ptr [ecx - 0x3b7c000f]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x00073b6f: add byte ptr [ebx - 0x17aee714], al; mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00175b96: add byte ptr [ebx - 0x17aff314], al; pushal; ljmp 0x110:0xc483fff3; ret; 
0x000f1996: add byte ptr [ebx - 0x17fbdbbc], cl; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x00087819: add byte ptr [ebx - 0x18], dl; pushal; ret 8; 
0x000dfef0: add byte ptr [ebx - 0x18f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x00104160: add byte ptr [ebx - 0x19f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x000b48b0: add byte ptr [ebx - 0x1c877d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0002e9b5: add byte ptr [ebx - 0x1cf6b], cl; dec dword ptr [ebp - 0x68e237e]; call dword ptr [eax - 0x73]; 
0x0002e6af: add byte ptr [ebx - 0x1e773], cl; jmp dword ptr [ebx]; 
0x000e9492: add byte ptr [ebx - 0x1e7efe1e], al; add byte ptr [eax], 0; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000c1fb4: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000821a5: add byte ptr [ebx - 0x2614ef3c], al; nop; nop; nop; endbr32; ret; 
0x000220b3: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x00107f20: add byte ptr [ebx - 0x27767f14], al; pop ebx; pop esi; pop edi; ret; 
0x00119d78: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x0011a363: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x00114b15: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0008ce7c: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x000a0b02: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00087bd3: add byte ptr [ebx - 0x27cc71b], al; or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x0004c236: add byte ptr [ebx - 0x27fefb3c], al; jmp eax; 
0x00083067: add byte ptr [ebx - 0x2d7aefa9], cl; je 0x830b0; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00102ee7: add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0010ab12: add byte ptr [ebx - 0x2dcefe40], 0x3b; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0008d919: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc039dbad; ret; 
0x000f9952: add byte ptr [ebx - 0x2f76df3c], al; pop ebx; pop esi; pop edi; ret; 
0x0016216e: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0013e142: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00118a2d: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0014edcb: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x0004f9da: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c59eb: add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c6d1f: add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x000c71ed: add byte ptr [ebx - 0x36237b], cl; inc dword ptr [ebp + 0x7f8e0fc0]; add al, 0; add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x0004fe8f: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004f847: add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x0005036d: add byte ptr [ebx - 0x36277b], cl; inc dword ptr [ebp - 0x7071f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0004dc02: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0004e70a: add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000c54ba: add byte ptr [ebx - 0x363363], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x0004dcea: add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c6808: add byte ptr [ebx - 0x363f63], cl; call dword ptr [edi - 0x18]; 
0x000c5426: add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000c7b21: add byte ptr [ebx - 0x363f6b], cl; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c584b: add byte ptr [ebx - 0x363f7b], cl; call dword ptr [edi + 0x6a]; 
0x000c6cf9: add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x0004fe69: add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x0004ed4f: add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x35f79]; call dword ptr [eax - 0x73]; 
0x00050c99: add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0004f989: add byte ptr [ebx - 0x365363], cl; call dword ptr [esi - 0x18]; 
0x0004e666: add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0011fc51: add byte ptr [ebx - 0x3776bb3c], al; pop ebx; pop esi; ret; 
0x00144184: add byte ptr [ebx - 0x39e7dba4], cl; inc esp; ud0; add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x00039082: add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x0012cbc9: add byte ptr [ebx - 0x3b7c4bab], cl; or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000e93af: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0003aa27: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000227b5: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x001574e7: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0015faff: add byte ptr [ebx - 0x3b7d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00086ad3: add byte ptr [ebx - 0x3c76df20], al; jne 0x86698; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0015f6eb: add byte ptr [ebx - 0x3e7cf714], al; add al, 0x8b; inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0005289f: add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x0006e01b: add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x0007f3c6: add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7f3c0; ret; 
0x0013921f: add byte ptr [ebx - 0x3f7aef3c], al; je 0x139230; sub esp, 0xc; push esi; call eax; 
0x0013957f: add byte ptr [ebx - 0x3f7aef3c], al; je 0x139590; sub esp, 0xc; push esi; call eax; 
0x0011774b: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x11770c; add esp, 0xc; ret; 
0x000374c4: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037753: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x37760; add esp, 8; pop ebx; ret; 
0x00031389: add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x3131c; ret; 
0x00039f2e: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x000872c9: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00057ce7: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0009845c: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000583d8: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x000a0cff: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xa0d00; pop ebx; ret; 
0x0014158f: add byte ptr [ebx - 0x43763], cl; dec dword ptr [ebx - 0x43343]; dec dword ptr [ebx - 0x1137d]; jmp dword ptr [ebp - 0x75]; 
0x001415dd: add byte ptr [ebx - 0x4437b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x7c9aef3c], cl; cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x00168f16: add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x001688e9: add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x00140b4f: add byte ptr [ebx - 0x44773], cl; jmp dword ptr [ebp - 0x75]; 
0x0005b342: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0005e2fd: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x000216fd: add byte ptr [ebx - 0x4497ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x00142007: add byte ptr [ebx - 0x44f7b], cl; dec dword ptr [ebx - 0x45373]; jmp dword ptr [ebp - 0x75]; 
0x000ff343: add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0016801f: add byte ptr [ebx - 0x45fbdbbc], cl; push es; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000e0dbb: add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x00037834: add byte ptr [ebx - 0x46dfdba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000e10ce: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e0e95: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x000377b4: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e3746: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x000e3515: add byte ptr [ebx - 0x47363], cl; call dword ptr [esi - 1]; 
0x000e36a7: add byte ptr [ebx - 0x4737b], cl; inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0015fa6f: add byte ptr [ebx - 0x477d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0010f80d: add byte ptr [ebx - 0x47abdbb4], cl; sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010f881: add byte ptr [ebx - 0x47abdbb4], cl; xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108c53: add byte ptr [ebx - 0x47afdba4], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x000deb6e: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xdeb80; ret; 
0x0010d84b: add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00191c5f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x191c6a; neg eax; ret; 
0x0019058f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1905a0; neg eax; ret; 
0x001946bf: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1946d0; neg eax; ret; 
0x0008326a: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0005845e: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010884e: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010935e: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0012099e: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001209ee: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000377ae: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001146ae: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012094e: add byte ptr [ebx - 0x48], dl; ret; 
0x00114e6e: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011edce: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0007a89e: add byte ptr [ebx - 0x497233ab], cl; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x001469bb: add byte ptr [ebx - 0x49f047a3], cl; rol dword ptr [ebx], 1; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0005312d: add byte ptr [ebx - 0x49f07fbb], cl; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0007a777: add byte ptr [ebx - 0x49f0ef3c], al; adc byte ptr [edx + edx*8 - 0x57ff48c], al; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0006ba18: add byte ptr [ebx - 0x4a00fb14], al; push esp; idiv edi; call dword ptr [esi - 1]; 
0x0002e9ed: add byte ptr [ebx - 0x4d16ef3c], al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00060d6f: add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0005ff1f: add byte ptr [ebx - 0x4f37b], cl; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0012475b: add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000623c7: add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x000609df: add byte ptr [ebx - 0x5037b], cl; jmp dword ptr [ebp - 0x75]; 
0x00063d13: add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x00061d95: add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0006004d: add byte ptr [ebx - 0x5177b], cl; dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00063918: add byte ptr [ebx - 0x53b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000460df: add byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0013996c: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x001682d7: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0008737e: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0016824b: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0005c5bf: add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005a34f: add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0005e1aa: add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x000e8410: add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x00081d3d: add byte ptr [ebx - 0x5d9adbc0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x000825e1: add byte ptr [ebx - 0x5d9af7c0], cl; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0005b522: add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x0008bfd1: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008b3db: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0005d044: add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x00057fe7: add byte ptr [ebx - 0x6072f714], al; jg 0x58020; stc; call dword ptr [ecx + 0x53]; 
0x0015f947: add byte ptr [ebx - 0x637d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00113a33: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00108074: add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b8: add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003a9ff: add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b51af: add byte ptr [ebx - 0x677f], cl; jmp dword ptr [ebp - 0x75]; 
0x0002ec5d: add byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x0010cb95: add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00169794: add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x000e14fe: add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00146962: add byte ptr [ebx - 0x6b7447a3], cl; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x000e6c20: add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x0016891f: add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x0002c0b6: add byte ptr [ebx - 0x6c72f714], al; jb 0x2c0ea; stc; call dword ptr [edx + 0x50]; 
0x0013964f: add byte ptr [ebx - 0x6c72f714], al; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x001396ed: add byte ptr [ebx - 0x6c72f714], al; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000fdb56: add byte ptr [ebx - 0x6e373], cl; dec dword ptr [ebx - 0x1137f]; jmp dword ptr [ebp - 0x39]; 
0x00070e62: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000fc60e: add byte ptr [ebx - 0x6eb73], cl; dec dword ptr [ecx - 0x6d37b]; call dword ptr [edi + 0x29]; 
0x000fbe6d: add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00093a10: add byte ptr [ebx - 0x6f72e714], al; hlt; xchg ebx, eax; stc; call dword ptr [edx - 0x73]; 
0x0006532b: add byte ptr [ebx - 0x6f72f314], al; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x000fd6ea: add byte ptr [ebx - 0x6fb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fd6fc: add byte ptr [ebx - 0x70373], cl; jmp dword ptr [ebp - 0x7d]; 
0x0013e038: add byte ptr [ebx - 0x7172fb14], al; pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0011e79d: add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x001604b7: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0009370c: add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00080f3d: add byte ptr [ebx - 0x72aff314], al; sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x00157859: add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00025355: add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x00025239: add byte ptr [ebx - 0x72b3db84], cl; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x0002b059: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00029d00: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x00029902: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x00029c51: add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x00026e80: add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026ea3: add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f0c: add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00026f87: add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x00025f36: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025e22: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x000262fd: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00025f59: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ecx + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x00024ca0: add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024bba: add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x000279b9: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x279bc; call dword ptr [eax - 0x73]; 
0x000279e1: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x279e4; call dword ptr [eax - 0x73]; 
0x00027b87: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x27b8a; call dword ptr [eax - 0x73]; 
0x00027baa: add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x27bad; call dword ptr [eax - 0x73]; 
0x0014eac8: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000ba960: add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, ebx; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000bd7b2: add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00038e67: add byte ptr [ebx - 0x72cfdb8c], cl; dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x0004108a: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00098a5a: add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000442a3: add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000c04c7: add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00121a95: add byte ptr [ebx - 0x72dfdb8c], cl; xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000b619d: add byte ptr [ebx - 0x72e3db8c], cl; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00094098: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00096ddc: add byte ptr [ebx - 0x72e7db8c], cl; xchg al, dl; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097385: add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ch; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097575: add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00048e46: add byte ptr [ebx - 0x72ebdbac], cl; je 0x48e74; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x000892de: add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x000885ae: add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0010d514: add byte ptr [ebx - 0x72f3dbbc], cl; sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00085d2b: add byte ptr [ebx - 0x72fbdb84], cl; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x000a8e4c: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x0006aee7: add byte ptr [ebx - 0x72ff22f9], cl; push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x00080ee5: add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0006f28f: add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x0019353f: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001933ad: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000708ce: add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x00168f50: add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x0011f377: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00123404: add byte ptr [ebx - 0x74b7dbac], cl; je 0x123430; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0016429a: add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4a75; 
0x00092600: add byte ptr [ebx - 0x74bfdba4], cl; push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00107775: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x1077a1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d5e34: add byte ptr [ebx - 0x74cbdb8c], cl; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011fb12: add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f9842: add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00155ca5: add byte ptr [ebx - 0x74e3dbac], cl; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x001768be: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012398e: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120954: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x001252bb: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x125170; add esp, 4; ret; 
0x00058464: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00122d42: add byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0009363e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x0009367e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x93690; ret; 
0x000936ce: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x00106b36: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00092574: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00107b79: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00044a57: add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x000d6425: add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x0005823e: add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x0014d85a: add byte ptr [ebx - 0x769adff5], al; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000bc0af: add byte ptr [ebx - 0x76a7dba4], cl; idiv dword ptr [ecx]; ret; 
0x000479a2: add byte ptr [ebx - 0x76a9eb3c], al; ret; 
0x000b50d8: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x00028616: add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x00027f6f: add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x0015501f: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x000cfa77: add byte ptr [ebx - 0x76f3db8c], cl; ret 0x44f6; 
0x00087ea2: add byte ptr [ebx - 0x76f3dbac], cl; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011d055: add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000b8a10: add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000a4a4c: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000d8d9d: add byte ptr [ebx - 0x776ef3c], al; call eax; 
0x0008e2b3: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0008a8fb: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x00083b87: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x001631b2: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000217af: add byte ptr [ebx - 0x77], dl; ret; 
0x000d8373: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [ecx + eax*2 - 0x77]; ret 0xe283; 
0x0007085e: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebp*4 - 0x77]; ret 0xe283; 
0x00089257: add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00088527: add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00091475: add byte ptr [ebx - 0x78726f83], cl; add al, 0x84; stc; call dword ptr [eax - 0x73]; 
0x000fa8ee: add byte ptr [ebx - 0x7872dbc4], cl; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0015e7e6: add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x0002d097: add byte ptr [ebx - 0x7872f314], al; scasd eax, dword ptr es:[edi]; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00145347: add byte ptr [ebx - 0x7872f314], al; xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00137fc7: add byte ptr [ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0008420b: add byte ptr [ebx - 0x7972f314], al; test al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0006b45f: add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x00154105: add byte ptr [ebx - 0x7a72f314], al; fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001364c7: add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0007d72e: add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x00058cd7: add byte ptr [ebx - 0x7a72fb14], al; dec edi; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x00066076: add byte ptr [ebx - 0x7a72fb14], al; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x00066450: add byte ptr [ebx - 0x7a74fb14], al; xchg esp, eax; idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x00102d54: add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0019709b: add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000e561d: add byte ptr [ebx - 0x7ad3dbbc], cl; ror byte ptr [edi], 0x85; ret 8; 
0x001637fb: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0014cd46: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x0002fc3c: add byte ptr [ebx - 0x7b74cfc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0002fc6c: add byte ptr [ebx - 0x7b74d7c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0014dc92: add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000e6c17: add byte ptr [ebx - 0x7bf0a208], al; outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x0002501f: add byte ptr [ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00193fe2: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00165e39: add byte ptr [ebx - 0x7bf0fe05], al; cmp eax, 0x8b000001; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x0009c8e7: add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0014dc89: add byte ptr [ebx - 0x7bf0fe08], al; cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000bc3d0: add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x00139eef: add byte ptr [ebx - 0x7c72ef14], al; mov al, 0x3e; int1; call dword ptr [eax - 0x73]; 
0x0015507f: add byte ptr [ebx - 0x7c72ef14], al; nop; out dx, eax; bnd call dword ptr [eax - 0x73]; 
0x000cc2c3: add byte ptr [ebx - 0x7c72f314], 0x1e; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0015660f: add byte ptr [ebx - 0x7c72f314], al; dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00153478: add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00034dec: add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0008725e: add byte ptr [ebx - 0x7c72f314], al; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87260; call dword ptr [eax - 0x18]; 
0x00165817: add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000e49bf: add byte ptr [ebx - 0x7c72f314], al; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0003a80f: add byte ptr [ebx - 0x7c72f314], al; xor al, 0x74; stc; call dword ptr [eax - 0x18]; 
0x0011d18b: add byte ptr [ebx - 0x7c72f714], al; adc cl, byte ptr [ebp - 7]; call dword ptr [eax + 0x57]; 
0x0011d2ea: add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0011d3a7: add byte ptr [ebx - 0x7c72f714], al; cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x000cc1d8: add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x0011d1a6: add byte ptr [ebx - 0x7c72f714], al; dec bp; stc; call dword ptr [eax + 0x57]; 
0x00117437: add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x0011d305: add byte ptr [ebx - 0x7c72f714], al; dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011d371: add byte ptr [ebx - 0x7c72f714], al; dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011d38c: add byte ptr [ebx - 0x7c72f714], al; jb 0x11d3e5; stc; call dword ptr [eax + 0x57]; 
0x0002c0d4: add byte ptr [ebx - 0x7c72f714], al; js 0x2c108; stc; call dword ptr [eax - 1]; 
0x0011d1c1: add byte ptr [ebx - 0x7c72f714], al; lahf; dec ebp; stc; call dword ptr [eax + 0x57]; 
0x0011d248: add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000e9dd3: add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0014daae: add byte ptr [ebx - 0x7c72f714], al; movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x0011d320: add byte ptr [ebx - 0x7c72f714], al; nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011d3dd: add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x0011d263: add byte ptr [ebx - 0x7c72f714], al; or byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x000cbd33: add byte ptr [ebx - 0x7c72f714], al; or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x0011d1dc: add byte ptr [ebx - 0x7c72f714], al; out 0x4d, al; stc; call dword ptr [eax + 0x57]; 
0x0011d2cf: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0011e598: add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x000cc262: add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x000875af: add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0011d212: add byte ptr [ebx - 0x7c72f714], al; pop esp; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0011d13a: add byte ptr [ebx - 0x7c72f714], al; push ds; dec esi; stc; call dword ptr [eax + 0x57]; 
0x000e9c85: add byte ptr [ebx - 0x7c72f714], al; push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011d27e: add byte ptr [ebx - 0x7c72f714], al; push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0011d356: add byte ptr [ebx - 0x7c72f714], al; push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011d3c2: add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0015f9e7: add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [edi - 0x72af000d]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0011d104: add byte ptr [ebx - 0x7c72f714], al; ror byte ptr [ebx - 7], cl; call dword ptr [eax + 0x57]; 
0x0011d11f: add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011d3f8: add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x0011d1f7: add byte ptr [ebx - 0x7c72f714], al; sbb ecx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011d155: add byte ptr [ebx - 0x7c72f714], al; stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x0011d170: add byte ptr [ebx - 0x7c72f714], al; test al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0011d299: add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0011d22d: add byte ptr [ebx - 0x7c72f714], al; xchg edx, eax; dec esi; stc; call dword ptr [eax + 0x57]; 
0x0008e2bf: add byte ptr [ebx - 0x7c72fb14], al; and byte ptr [esi - 0x1a], bh; call dword ptr [eax - 0x73]; 
0x0011cc77: add byte ptr [ebx - 0x7c72fb3c], al; push 0x5bfff94a; pop esi; ret; 
0x0016b1d7: add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x28]; 
0x0019d61f: add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x85000042]; sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x00122f86: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0009d577: add byte ptr [ebx - 0x7cc3dbac], cl; in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x00025028: add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x001303f7: add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f0677: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x0008e057: add byte ptr [ebx - 0x7cf7dbbc], cl; in al, dx; or byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x000eff8f: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004ba77: add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00028d9b: add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00153ca5: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0002a21d: add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8904; 
0x00081e1e: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x81e30; ret; 
0x00083bdf: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x000ec9ff: add byte ptr [ebx - 0x7cfbdbbc], cl; ret; 
0x001477ef: add byte ptr [ebx - 0x7d], dl; in al, dx; adc bh, bh; je 0x14781b; sbb al, 0xe8; ret; 
0x00145f7d: add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x00193e1a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0008f00f: add byte ptr [ebx - 0x7f72e714], al; aam 0x82; stc; call dword ptr [eax - 0x18]; 
0x0012f90f: add byte ptr [ebx - 0x7f72e714], al; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0013102f: add byte ptr [ebx - 0x7f72e714], al; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x00153fed: add byte ptr [ebx - 0x7f72eb14], al; fsub qword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0015480d: add byte ptr [ebx - 0x7f72eb14], al; mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0015011d: add byte ptr [ebx - 0x7f72eb14], al; shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x0015228d: add byte ptr [ebx - 0x7f72eb14], al; xchg dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016847f: add byte ptr [ebx - 0x7f97f314], al; add dword ptr [eax], eax; add al, ch; ret; 
0x001574da: add byte ptr [ebx - 0x7f], dl; ret; 
0x00065f77: add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x000664f3: add byte ptr [ebx - 0x8737b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0006b310: add byte ptr [ebx - 0x88f43], al; call dword ptr [ebx + 0xf]; 
0x000d7b67: add byte ptr [ebx - 0x8d3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00109b2f: add byte ptr [ebx - 0x8dbdba4], cl; fmul dword ptr [ebx - 0x13355]; jmp dword ptr [ebp - 0x77]; 
0x0011657f: add byte ptr [ebx - 0x8e3dbbc], cl; fisttp word ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00037707: add byte ptr [ebx - 0x8f3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0011f417: add byte ptr [ebx - 0x8f3dbbc], cl; fimul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0011423f: add byte ptr [ebx - 0x8f3dbbc], cl; fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0011380f: add byte ptr [ebx - 0x8f7dba4], cl; fmul dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x77]; 
0x0011382f: add byte ptr [ebx - 0x8f7dbb4], cl; fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x000384b7: add byte ptr [ebx - 0x8fbdb8c], cl; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x000e64fc: add byte ptr [ebx - 0x98f7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000718f8: add byte ptr [ebx - 0xa8fb14], al; jne 0x71908; push esi; call dword ptr [ebx + 0x1c]; 
0x00099462: add byte ptr [ebx - 0xa9f714], al; jae 0x9948e; call eax; 
0x00068f66: add byte ptr [ebx - 0xaafb14], al; je 0x68f92; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x00069051: add byte ptr [ebx - 0xaafb14], al; je 0x6907d; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x0006cff8: add byte ptr [ebx - 0xacfb14], al; je 0x6d024; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0016f779: add byte ptr [ebx - 0xaefb14], al; je 0x16f7a5; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0015c8ce: add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0012c44a: add byte ptr [ebx - 0xaff33c], al; jne 0x12c406; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000e4a2c: add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0002fecd: add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0013eb27: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00081e2f: add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx + 0x9880]; add cl, al; call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00115f8e: add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x115f9d; ret; 
0x0011cd52: add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x0015f9d7: add byte ptr [ebx - 0xcb7d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000938df: add byte ptr [ebx - 0xe7fef14], al; call dword ptr [edx + 0x51]; 
0x00139f90: add byte ptr [ebx - 0xe], dh; call dword ptr [eax - 0x73]; 
0x000b49bc: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0003ae36: add byte ptr [ebx - 0xf76ef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x001462fa: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x0009b945: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000cddb6: add byte ptr [ebx - 0xfb73], cl; inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0007db53: add byte ptr [ebx - 1], dl; push ebp; and al, 0x21; ret 0xc483; 
0x00170365: add byte ptr [ebx - 1], dl; push edi; and al, 0x21; ret 0xc483; 
0x00024ca7: add byte ptr [ebx - 7], ch; call dword ptr [eax + 0x68]; 
0x00024bc1: add byte ptr [ebx - 7], ch; call dword ptr [eax - 0x73]; 
0x00093dca: add byte ptr [ebx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x00166252: add byte ptr [ebx], 0x45; adc al, 0x39; ret 0x870f; 
0x0002fe97: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0006db36: add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x00146e01: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x00146929: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137f], cl; jmp dword ptr [ebp - 0x39]; 
0x00146a84: add byte ptr [ebx], al; add byte ptr [eax], al; add cl, ch; paddd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x001518b7: add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x000fae9b: add byte ptr [ebx], bh; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0008e898: add byte ptr [ebx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0011c90e: add byte ptr [ecx + 0x100c2484], cl; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0012402e: add byte ptr [ecx + 0x101fd1c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012397e: add byte ptr [ecx + 0x102681c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001223c9: add byte ptr [ecx + 0x103c36c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001211be: add byte ptr [ecx + 0x104e41c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00120948: add byte ptr [ecx + 0x1056b7c2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x0011390c: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00082fb1: add byte ptr [ecx + 0x10eb8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001172ed: add byte ptr [ecx + 0x10ed12c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0002e3ee: add byte ptr [ecx + 0x111c86], cl; add byte ptr [ebp - 0x68e037a], cl; call dword ptr [eax - 0x18]; 
0x00169d10: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00107bc3: add byte ptr [ecx + 0x11e43cc6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00107b73: add byte ptr [ecx + 0x11e48cc6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fe3d7: add byte ptr [ecx + 0x127c28c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000d7c3a: add byte ptr [ecx + 0x13c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e92b4: add byte ptr [ecx + 0x13cd4bc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000e4e99: add byte ptr [ecx + 0x141166c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014da72: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000de20a: add byte ptr [ecx + 0x147df5c7], al; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x000ea4c1: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038d65: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000c48b6: add byte ptr [ecx + 0x161749c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000bdde6: add byte ptr [ecx + 0x168219c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000bb106: add byte ptr [ecx + 0x16aef9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b81b6: add byte ptr [ecx + 0x16de49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x001071ac: add byte ptr [ecx + 0x18c2484], cl; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x00094575: add byte ptr [ecx + 0x191a8ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00093706: add byte ptr [ecx + 0x1928f9c2], al; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00093638: add byte ptr [ecx + 0x1929c7c2], al; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x00107379: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00122cd1: add byte ptr [ecx + 0x1a1b8cf], cl; add byte ptr [eax], al; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00081e18: add byte ptr [ecx + 0x1a41e7c2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x81e30; ret; 
0x0007bb49: add byte ptr [ecx + 0x1aa4b6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000d6566: add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d66b7: add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094d2d: add byte ptr [ecx + 0x1c829da], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x0004d636: add byte ptr [ecx + 0x1d89c9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00044aa6: add byte ptr [ecx + 0x1e1559c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000418b6: add byte ptr [ecx + 0x1e4749c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0003e846: add byte ptr [ecx + 0x1e77b9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000373a5: add byte ptr [ecx + 0x1eec5ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00151102: add byte ptr [ecx + 0x1f029f3], cl; ret; 
0x000217a9: add byte ptr [ecx + 0x204856c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000216d8: add byte ptr [ecx + 0x204927c2], al; add bh, dh; fmul dword ptr [ebx - 0x1336e]; jmp dword ptr [ebp - 0x77]; 
0x000b86a8: add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0013f6f8: add byte ptr [ecx + 0x24448b10], cl; sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp - 0x75]; 
0x000928a9: add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x000f9549: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x0016b44b: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00147da9: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004a770: add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00160707: add byte ptr [ecx + 0x310c2454], cl; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0014432d: add byte ptr [ecx + 0x31102444], cl; shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00122bf9: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17c7dba4], 0xd7; out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00122699: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x37; cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00122269: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x67; stc; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00122549: add byte ptr [ecx + 0x311c2444], cl; ror byte ptr [ebx - 0x17cbdba4], 0x87; div ch; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00153469: add byte ptr [ecx + 0x312c2444], cl; rol byte ptr [eax - 0x7bf0ffc6], 0x13; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00024076: add byte ptr [ecx + 0x31342454], cl; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00161aa9: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x4a; sub esi, ebp; call ecx; 
0x00161b89: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x6a; sub dh, ch; call ecx; 
0x0013b862: add byte ptr [ecx + 0x313c2444], cl; shr al, 0xb2; jb 0x13b86b; inc dword ptr [ebp - 0x76a98740]; ret; 
0x0015eb4e: add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00114472: add byte ptr [ecx + 0x36b8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f04ad: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004a7c0: add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x000cc3f5: add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x00083cdc: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0012c1aa: add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x000fb302: add byte ptr [ecx + 0x432cb7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x0015caa1: add byte ptr [ecx + 0x4342494], cl; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x000f4841: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000a10cf: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000b223d: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aedba: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000b225d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aedda: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000b233d: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aeeaa: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000b235d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aeeca: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x00121d39: add byte ptr [ecx + 0x448b2404], cl; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224c9: add byte ptr [ecx + 0x448b2404], cl; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00139184: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x00041ccd: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ab3cf: add byte ptr [ecx + 0x4578817], cl; pop edi; pop esi; pop ebx; ret; 
0x00116cb5: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013dea8: add byte ptr [ecx + 0x4b890453], cl; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00075181: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000813ce: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0011cc27: add byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00077d88: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x0016008e: add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00080d7b: add byte ptr [ecx + 0x52], dl; call 0x16a600; add esp, 0x1c; ret; 
0x0016b140: add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016b1e0: add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x00114437: add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x001603f1: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ab3df: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x00070fc2: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00075713: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000755b3: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00178ab0: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000ab62f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000a1007: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x0013fe93: add byte ptr [ecx + 0x5dcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0004c382: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x0011d717: add byte ptr [ecx + 0x5e5b1056], cl; pop edi; ret; 
0x0004c3b6: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x0009ddad: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x00037ccc: add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x000b5f8d: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x001687be: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x000655de: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x000d736c: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0006a31b: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x0002cad9: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00057a6c: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0003517c: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00070f2b: add byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x001516b2: add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x00151706: add byte ptr [ecx + 0x62], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000a10fb: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x0006660b: add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x00155c61: add byte ptr [ecx + 0x6a], dl; add al, 0x52; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x000aeeea: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0011b963: add byte ptr [ecx + 0x7589cc5d], cl; ror byte ptr [ebp + 0xb6], 1; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x000b47db: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00031381: add byte ptr [ecx + 0x76e8243c], cl; xor cl, byte ptr [eax]; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x3131c; ret; 
0x001106f7: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000884dd: add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089fd9: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00195c07: add byte ptr [ecx + 0x7c6f7f2], cl; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x00085ea1: add byte ptr [ecx + 0x7c888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000ec5c3: add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149bce14; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x00094249: add byte ptr [ecx + 0x7f883], cl; add byte ptr [ebp - 0x192a8f7d], cl; call dword ptr [eax + 0x56]; 
0x0019a6f0: add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x000cdddf: add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0007f3bf: add byte ptr [ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7f3c0; ret; 
0x0008262c: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090daf: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000860ec: add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b715: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00082709: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00082e4e: add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0016865a: add byte ptr [ecx + 0x878dc3], cl; hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x00088c1c: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000368d5: add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00084117: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007c63f: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015e957: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002439e: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003783d: add byte ptr [ecx + 0xb3b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007705c: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015f7fb: add byte ptr [ecx + 0xc6804c3], al; add byte ptr [ebx - 0x14f45], cl; jmp dword ptr [ebp - 0x75]; 
0x000dcd65: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0009214d: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00155bd9: add byte ptr [ecx + 0xd0426c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000df393: add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00155079: add byte ptr [ecx + 0xd0f86c3], al; add byte ptr [ebx - 0x7c72ef14], al; nop; out dx, eax; bnd call dword ptr [eax - 0x73]; 
0x0014f7c9: add byte ptr [ecx + 0xd6836c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014da6c: add byte ptr [ecx + 0xd8593c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014d9bd: add byte ptr [ecx + 0xd8642c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00139ee9: add byte ptr [ecx + 0xec116c3], al; add byte ptr [ebx - 0x7c72ef14], al; mov al, 0x3e; int1; call dword ptr [eax - 0x73]; 
0x00031ec9: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00084c5f: add byte ptr [ecx + 0xf0b8d1], cl; add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00197091: add byte ptr [ecx + 0xf382444], cl; test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000cc3e8: add byte ptr [ecx + 0xfc80ff2], cl; inc ebx; ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x000fafb9: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014e0af: add byte ptr [ecx + 1], bh; mov eax, ecx; ret; 
0x0008a7ca: add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00037816: add byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0008a444: add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b3904: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000b3760: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000b46b6: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0004b754: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x0004a543: add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0007b1b7: add byte ptr [ecx + ecx*8 - 0x137cb18b], al; or byte ptr [ecx - 0x7c72f7bb], cl; add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x0014da8e: add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0015c5a9: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00155402: add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0014da78: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000de210: add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x00168628: add byte ptr [ecx - 0x15f7b], cl; dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x000b9462: add byte ptr [ecx - 0x162c763f], cl; ret 0xfffc; 
0x000226c3: add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x00119ad9: add byte ptr [ecx - 0x17a9a81b], cl; ret 0x549; 
0x0015e5a9: add byte ptr [ecx - 0x1f7c723b], cl; arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x0010d854: add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x0019ce67: add byte ptr [ecx - 0x2d7a57c4], cl; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x00088a14: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0012496b: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000c723c: add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x000503bc: add byte ptr [ecx - 0x35ef7b], cl; dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0008b3ce: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c5102: add byte ptr [ecx - 0x36376b], cl; dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x0004e34a: add byte ptr [ecx - 0x365f6b], cl; dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x001630dd: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0016309d: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00092d2e: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d0ab: add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0008c4e5: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x00123461: add byte ptr [ecx - 0x44e7dba4], cl; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014418d: add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x00122147: add byte ptr [ecx - 0x47dbdb84], cl; sbb eax, 0xf000000; inc ebp; ret; 
0x00038674: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001244b7: add byte ptr [ecx - 0x50b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00061abb: add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00058eca: add byte ptr [ecx - 0x57b4b], cl; jmp dword ptr [ebp - 0x75]; 
0x0005ce9d: add byte ptr [ecx - 0x5a37b], cl; inc dword ptr [eax - 0x7af0ffc1]; ret; 
0x0005c067: add byte ptr [ecx - 0x5bb4b], cl; dec dword ptr [ecx - 0x76287608]; ret 0x7de9; 
0x00081cab: add byte ptr [ecx - 0x5c9af3b0], cl; jl 0x81cb3; add byte ptr [eax], al; ret; 
0x0011d8fd: add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000fd684: add byte ptr [ecx - 0x70b7b], cl; dec dword ptr [ebx - 0x6fb43]; jmp dword ptr [ebp + 3]; 
0x000fcb1a: add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x3f7f723a]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x000fbc3d: add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x3f7f723f]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x00146ff7: add byte ptr [ecx - 0x7209ce08], cl; je 0x147025; add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x0016ee1e: add byte ptr [ecx - 0x72cfdbbc], cl; jl 0x16ee4a; xor byte ptr [edi - 0x18], dl; jae 0x16ee62; int1; jmp dword ptr [ebp - 0x75]; 
0x00026522: add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x00153597: add byte ptr [ecx - 0x72efdbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000d61a7: add byte ptr [ecx - 0x72f7dbb4], cl; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x000b84e4: add byte ptr [ecx - 0x74367a09], cl; mov word ptr [eax + ebp*2], fs; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000be10c: add byte ptr [ecx - 0x74367a09], cl; mov word ptr [eax + ebx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x00081c6a: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x7c; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x001201c9: add byte ptr [ecx - 0x74a7dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000776ae: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00162146: add byte ptr [ecx - 0x74f3dbbc], cl; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00038479: add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038429: add byte ptr [ecx - 0x76057617], cl; inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00122cd8: add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x0014799f: add byte ptr [ecx - 0x762e7638], cl; ret 0xc031; 
0x000a0ab7: add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x00195626: add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00054c3b: add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x000c1263: add byte ptr [ecx - 0x769bdbac], cl; ret 0x448b; 
0x000c12c7: add byte ptr [ecx - 0x76a3dbac], cl; ret 0x448b; 
0x00033951: add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x000d161c: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00090958: add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x000414a8: add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x00031d1e: add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x00093a44: add byte ptr [ecx - 0x76dfdbbc], cl; je 0x93a70; sub byte ptr [ebp - 0x6bf1472], cl; jmp dword ptr [ebp - 0x5f]; 
0x00098d78: add byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x00080d95: add byte ptr [ecx - 0x76ebdbb4], cl; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0010fdb8: add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x00094037: add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x0019a6f6: add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x00114198: add byte ptr [ecx - 0x76f3dbbc], cl; clc; call dword ptr gs:[0x10]; 
0x0009aae6: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x0015a1f1: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x001223f8: add byte ptr [ecx - 0x76fbdb8c], cl; loope 0x122389; ret 0x448b; 
0x0004c5db: add byte ptr [ecx - 0x76fbdbac], cl; add al, 0x24; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000240a4: add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0012f965: add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x000888db: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f0b00: add byte ptr [ecx - 0x7ab7db84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0019a246: add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x0016ca2f: add byte ptr [ecx - 0x7c17760e], cl; ret; 
0x00122842: add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x0008e09f: add byte ptr [ecx - 0x7cebdbac], cl; ret; 
0x0003a5c0: add byte ptr [ecx - 0x7cebdbb4], cl; in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0015952c: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00028508: add byte ptr [ecx - 0x7cf51439], cl; ret; 
0x000b33d7: add byte ptr [ecx - 0x7cf5742d], cl; ret 0x8104; 
0x0004045e: add byte ptr [ecx - 0x7cfbdba4], cl; rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x00137776: add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0xff; je 0x1377a5; or al, 0x89; ret; 
0x000f016c: add byte ptr [ecx - 0x7cff72bc], cl; rol dword ptr [ecx], 9; ret 0xf983; 
0x000455fb: add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x00123a96: add byte ptr [ecx - 0x7ee7dbbc], cl; into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0004a7ce: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x000debd0: add byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ebp - 0x6b8e579]; call dword ptr [eax - 0x18]; 
0x001647f4: add byte ptr [ecx - 0xa37b], cl; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013e602: add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x00166d68: add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000db510: add byte ptr [ecx - 0xe], dh; call dword ptr [eax - 0x73]; 
0x000dc2b4: add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00102ef1: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000b43af: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0009a4cf: add byte ptr [ecx*4 - 0x17387f6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009a37f: add byte ptr [ecx*4 - 0x1849ef6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00168484: add byte ptr [ecx], 0; add al, ch; ret; 
0x00058d73: add byte ptr [ecx], 0; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000774b5: add byte ptr [ecx], 0; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0006844f: add byte ptr [ecx], 0xe9; jmp ecx; 
0x00142bf3: add byte ptr [ecx], ah; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000b460c: add byte ptr [ecx], ah; ret 0x2474; 
0x00071541: add byte ptr [ecx], ah; ret 0xc483; 
0x0002e1ff: add byte ptr [ecx], ah; ret; 
0x0018f38f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi], eax; inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x0018f88f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0018b68f: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test esi, esp; jle 0x18b68b; call dword ptr [ebx - 0x18]; 
0x00082c00: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00082e11: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0002fe94: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0011f538: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a9d: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00126042: add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x0011f4f9: add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001145a9: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000b452b: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xb4535; xor eax, eax; ret; 
0x000574ec: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000fd853: add byte ptr [ecx], al; add byte ptr [eax], al; push eax; push edx; call ebx; 
0x0002fb30: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000b446b: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x00121a93: add byte ptr [ecx], al; add byte ptr [ebx - 0x72dfdb8c], cl; xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000803cf: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00083c57: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x0012dfb7: add byte ptr [ecx], al; call eax; 
0x0012df67: add byte ptr [ecx], al; call edx; 
0x000b26c7: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0009438c: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000f3e36: add byte ptr [ecx], al; inc ebp; sub byte ptr [ecx - 0x170f7616], cl; sub eax, 0x89ffff40; ret 0xb60f; 
0x0009afbf: add byte ptr [ecx], al; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f28f: add byte ptr [ecx], al; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x0009b09f: add byte ptr [ecx], al; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x0012ddae: add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0016c4ff: add byte ptr [ecx], al; ret 0x1deb; 
0x000ee11e: add byte ptr [ecx], al; ret 0x4489; 
0x001490d3: add byte ptr [ecx], al; ret 0x5052; 
0x00124c3b: add byte ptr [ecx], al; ret 0x8389; 
0x00061578: add byte ptr [ecx], al; ret; 
0x00035c83: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000de72e: add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x000b487f: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000fb7e7: add byte ptr [ecx], bh; add cl, byte ptr [edi]; test byte ptr [eax - 0x7cfffff9], dh; ret 0x8014; 
0x00084257: add byte ptr [ecx], bh; bnd jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000cbbbf: add byte ptr [ecx], bh; cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x00096f59: add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x0010d39a: add byte ptr [ecx], bh; ret 0x420f; 
0x00035644: add byte ptr [ecx], bh; ret 0x430f; 
0x0007bdbf: add byte ptr [ecx], bh; ret 0x448b; 
0x0013d3ba: add byte ptr [ecx], bh; ret 0x460f; 
0x000cb628: add byte ptr [ecx], bh; ret 0x470f; 
0x00089c3f: add byte ptr [ecx], bh; ret 0x4e0f; 
0x001498f7: add byte ptr [ecx], bh; ret 0x5473; 
0x0008bfda: add byte ptr [ecx], bh; ret 0x6174; 
0x0008c735: add byte ptr [ecx], bh; ret 0x6674; 
0x0008b67d: add byte ptr [ecx], bh; ret 0x7e74; 
0x0006d364: add byte ptr [ecx], bh; ret 0x820f; 
0x0008b3e4: add byte ptr [ecx], bh; ret 0x840f; 
0x0007c363: add byte ptr [ecx], bh; ret 0x860f; 
0x000cc3fb: add byte ptr [ecx], bh; ret 0x870f; 
0x000fb308: add byte ptr [ecx], bh; ret 0xe74; 
0x00040b1b: add byte ptr [ecx], bh; ret; 
0x0014f7af: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0015f936: add byte ptr [ecx], bh; sal byte ptr [ebp + ecx - 0x7d], 1; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000420c6: add byte ptr [ecx], bl; ret 0xba; 
0x000ecc2f: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x9aeb; 
0x0009bd6e: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x00026874: add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000c16a4: add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1da9: add byte ptr [ecx], ch; ret 0x28b; 
0x000c1c5c: add byte ptr [ecx], ch; ret 0x3a8b; 
0x000cf6dc: add byte ptr [ecx], ch; ret 0x448b; 
0x000d19b3: add byte ptr [ecx], ch; ret 0x448d; 
0x000d4936: add byte ptr [ecx], ch; ret 0x468b; 
0x000d191b: add byte ptr [ecx], ch; ret 0x548d; 
0x0009ef34: add byte ptr [ecx], ch; ret 0x5589; 
0x000d3a9d: add byte ptr [ecx], ch; ret 0x858b; 
0x0005afda: add byte ptr [ecx], ch; ret 0x953b; 
0x000c1a38: add byte ptr [ecx], ch; ret 0xa8b; 
0x000d009c: add byte ptr [ecx], ch; ret 0xbe0f; 
0x00138c5c: add byte ptr [ecx], ch; ret 0xc031; 
0x000cb283: add byte ptr [ecx], ch; ret 0xc889; 
0x000ce40b: add byte ptr [ecx], ch; ret 0xd129; 
0x0005b7b7: add byte ptr [ecx], ch; ret 0xd189; 
0x0009d02b: add byte ptr [ecx], ch; ret 0xd801; 
0x00044016: add byte ptr [ecx], ch; ret 0xd889; 
0x000984a5: add byte ptr [ecx], ch; ret 0xda21; 
0x0002c628: add byte ptr [ecx], ch; ret 0xf883; 
0x000c74a2: add byte ptr [ecx], ch; ret 0xf889; 
0x00024bfc: add byte ptr [ecx], ch; ret 0xfa83; 
0x0002c565: add byte ptr [ecx], ch; ret; 
0x00035a2e: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed1b56; or eax, ecx; ret; 
0x000220c8: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000789c0: add byte ptr [ecx], cl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000fb7cc: add byte ptr [ecx], cl; ret 0x840f; 
0x00047748: add byte ptr [ecx], cl; ret 0x9f74; 
0x000c05d0: add byte ptr [ecx], cl; ret 0xa074; 
0x00199675: add byte ptr [ecx], cl; ret 0xb60f; 
0x00199e6f: add byte ptr [ecx], cl; ret 0xbc89; 
0x000971ee: add byte ptr [ecx], cl; ret; 
0x00143735: add byte ptr [ecx], cl; ror byte ptr [ebx + 0x390c2454], 1; ret 0x307e; 
0x000711ac: add byte ptr [ecx], cl; ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x00035a76: add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00149c00: add byte ptr [ecx], dh; call dword ptr [eax - 0x18]; 
0x000b4f37: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00085ff4: add byte ptr [ecx], dh; fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000db7b2: add byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x5f]; 
0x00102bb9: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00124130: add byte ptr [ecx], dh; idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x001235e0: add byte ptr [ecx], dh; idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00083ed4: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849cd: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d4ac: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000882b9: add byte ptr [ecx], dh; leave; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0013b9e1: add byte ptr [ecx], dh; mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00090bd5: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000983cc: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00153427: add byte ptr [ecx], dh; rol byte ptr [eax + 0x440f0038], cl; ret 0x5e5b; 
0x0008b568: add byte ptr [ecx], dh; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00048b84: add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000fa34f: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00087e24: add byte ptr [ecx], dh; ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102c77: add byte ptr [ecx], dh; ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004ea3f: add byte ptr [ecx], dh; ror byte ptr [ecx + 0xf983da], 0x19; ret 0xba; 
0x000420bf: add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x000501d2: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00087ae9: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00083835: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x00086088: add byte ptr [ecx], dh; sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00086012: add byte ptr [ecx], dh; sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x00108b3f: add byte ptr [ecx], dh; shr bl, 0xdc; lea esi, [esi]; mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00110387: add byte ptr [ecx], dh; shr bl, cl; ret; 
0x0016f0eb: add byte ptr [ecx], dh; shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x00084410: add byte ptr [ecx], dh; test byte ptr [ebx - 0xe7fdbf4], -0x7f; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0016887f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0008a952: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00115f8c: add byte ptr [ecx], dl; add byte ptr [ebx - 0xc77e], cl; dec dword ptr [ebx - 0x3f7aefc0]; je 0x115f9d; ret; 
0x000723b9: add byte ptr [edi + 0x196882], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007b389: add byte ptr [edi + 0x197c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00080429: add byte ptr [edi + 0x199c82], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0007e10f: add byte ptr [edi + 0x199c83], al; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x0005866c: add byte ptr [edi + 0x1f88302], al; jg 0x58678; ret; 
0x001211c4: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0015f609: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x00155bdf: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x0011e797: add byte ptr [edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x0014c425: add byte ptr [edi + 0x53], dl; call edx; 
0x00072d19: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x24]; 
0x000a4801: add byte ptr [edi + 0x5b], bl; ret; 
0x00021951: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x000aaaef: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c88e4: add byte ptr [edi + 0x5e], bl; ret; 
0x00083ce2: add byte ptr [edi + 0xb], dh; ret; 
0x0010faa7: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000c8a64: add byte ptr [edi + 2], bh; neg eax; ret; 
0x0018dec4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0018b634: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x00188f84: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x0018fc14: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0018f6b4: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x00187744: add byte ptr [edi + 2], dh; neg eax; ret; 
0x0019026a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0006f38a: add byte ptr [edi + 7], dh; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00130f3f: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x0010f816: add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00190595: add byte ptr [edi + 8], bh; neg eax; ret; 
0x001945d4: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000c8a34: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x000de379: add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000de3d6: add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x000de0be: add byte ptr [edi + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de16e: add byte ptr [edi + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0005d205: add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x0009a3b5: add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x000b704e: add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x0007b1c4: add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x0009b005: add byte ptr [edi - 0x1c7c000b], ch; add dword ptr [ebp - 0xaa37f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00193eb4: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x00192e74: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x0015c372: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x001350b7: add byte ptr [edi - 0xe], ch; call dword ptr [eax - 0x73]; 
0x0002470c: add byte ptr [edi - 7], ch; call dword ptr [eax - 0x73]; 
0x0016a007: add byte ptr [edi], 0x66; stc; call dword ptr [eax - 0x18]; 
0x000fe3d5: add byte ptr [edi], al; add byte ptr [ecx + 0x127c28c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0015f606: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x000512de: add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x0014e304: add byte ptr [edi], ch; je 0x14e36c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000f5ccf: add byte ptr [edi], cl; dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x0002e44a: add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x0004ea4d: add byte ptr [edi], cl; dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000d3de6: add byte ptr [edi], cl; dec ecx; ret 0x1c8d; 
0x000d3c88: add byte ptr [edi], cl; dec ecx; ret 0xd801; 
0x0006e029: add byte ptr [edi], cl; dec ecx; ret; 
0x000d1f75: add byte ptr [edi], cl; dec edi; ret; 
0x00090631: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0004f354: add byte ptr [edi], cl; dec esi; ret 0x9d8d; 
0x000f0f05: add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x00052710: add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0004b64d: add byte ptr [edi], cl; dec esi; ret; 
0x000f0c3d: add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x00140165: add byte ptr [edi], cl; dec esp; ret; 
0x000e949b: add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000d5df1: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000a06a1: add byte ptr [edi], cl; inc ebp; ret 0xc289; 
0x00090532: add byte ptr [edi], cl; inc ebp; ret 0xc3c3; 
0x00118893: add byte ptr [edi], cl; inc ebp; ret; 
0x000d7a22: add byte ptr [edi], cl; inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010faff: add byte ptr [edi], cl; inc edi; ret 0x548b; 
0x000936ed: add byte ptr [edi], cl; inc edi; ret 0x8189; 
0x0008cbde: add byte ptr [edi], cl; inc edi; ret 0x8dc3; 
0x0008d343: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x000cb333: add byte ptr [edi], cl; inc edi; ret 0x960f; 
0x00151899: add byte ptr [edi], cl; inc edx; ret 0x4489; 
0x0013da1f: add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0012326a: add byte ptr [edi], cl; inc edx; ret 0x90c3; 
0x000c3e54: add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x0008b16c: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000df602: add byte ptr [edi], cl; inc esp; ret 0x31c3; 
0x000b570a: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00136e3a: add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0015342c: add byte ptr [edi], cl; inc esp; ret 0x5e5b; 
0x000de779: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00164863: add byte ptr [edi], cl; inc esp; ret 0x8589; 
0x00083bd8: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000de5da: add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000b548d: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000b58b3: add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x000d2520: add byte ptr [edi], cl; inc esp; ret; 
0x0003763f: add byte ptr [edi], cl; inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x001487f8: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00047ecf: add byte ptr [edi], cl; mov bh, 0x9a; inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x0002fb5a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fb2a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fafa: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fa3a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fa9a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002f9aa: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fa6a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fa0a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fc0a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 1; ret; 
0x0002f9da: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 2; ret; 
0x0002faca: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 4; ret; 
0x0002f97a: add byte ptr [edi], cl; mov bh, 4; push eax; and eax, 8; ret; 
0x0018e874: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x000ed31d: add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000f47d6: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00068a97: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689f7: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068447: add byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0007a757: add byte ptr [edi], cl; mov dh, 0x45; aam 0x89; ret 0xf889; 
0x00188ee8: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x000fa33f: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00056cbf: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x00056e49: add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0006ad16: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0013d8b7: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0013d98f: add byte ptr [edi], cl; mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x000825b8: add byte ptr [edi], cl; mov dh, 0xc0; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d10: add byte ptr [edi], cl; mov dh, 0xd2; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00188e48: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0008aff1: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000b2f5f: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b27f4: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00138c55: add byte ptr [edi], cl; mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x000fab4f: add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x000b2c4f: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000b2c7f: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000aec4f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x0007bdb9: add byte ptr [edi], cl; mov word ptr [eax + 0x39000001], fs; ret 0x448b; 
0x00040041: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00020f3e: add byte ptr [edi], cl; or eax, dword ptr [ebx + 0x7400d07d]; sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x000ce6fb: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0003d3d4: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x00142e9b: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x000cbd2d: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0015cadd: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x7c730000], ch; add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x0019403f: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00193fef: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00186393: add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0018e2de: add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00153472: add byte ptr [edi], cl; test byte ptr [ebx], dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000a5a22: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00193f96: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000a59cc: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00193fdc: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0018f0df: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0018e9df: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00108ffd: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x000d62a5: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000f5d4d: add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x000d07a5: add byte ptr [edi], cl; test dword ptr [eax], ebp; loope 0xd07aa; call dword ptr [edi + 0x57]; 
0x001904cc: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0018f18a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0018efaa: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0018ea7a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x0018edd4: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0011fb4b: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011fc4b: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], edx; les eax, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; ret; 
0x0018eba6: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x00092f85: add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x00162afc: add byte ptr [edi], cl; test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0018ecae: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x00190440: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0018cdbe: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00155b23: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001238a6: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], edx; les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0018ec23: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00162168: add byte ptr [edi], cl; test dword ptr [edi - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007c0d1: add byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000b532f: add byte ptr [edi], cl; test dword ptr [edi], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00195c0f: add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x000f0056: add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x00114b0f: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], ebx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000530bb: add byte ptr [edi], cl; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x0018f393: add byte ptr [edi], cl; test dword ptr [esi], eax; inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x000dc48c: add byte ptr [edi], cl; test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0007804f: add byte ptr [edi], cl; test eax, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x001887ba: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00084111: add byte ptr [edi], cl; test edi, ebp; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0018f893: add byte ptr [edi], cl; test esi, esp; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0018b693: add byte ptr [edi], cl; test esi, esp; jle 0x18b68b; call dword ptr [ebx - 0x18]; 
0x0007f422: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x000fa357: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0019a17f: add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x000b84ef: add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000cbbc5: add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x000c0bc0: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0008b45c: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0004169e: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x000ca4b1: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000e939e: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0004cfcc: add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000cda81: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000dfb89: add byte ptr [edi], cl; xchg esi, eax; ret 0xc085; 
0x0010cc3f: add byte ptr [edi], cl; xchg esp, eax; ret 0x4f8b; 
0x000c4c72: add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x0012b1d2: add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x0004951b: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000de70b: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0002469c: add byte ptr [edx + 0x50], dl; call 0x8b370; add esp, 0x1c; ret; 
0x0015dc45: add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0015a4e8: add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x001552ea: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b51f0: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000aafef: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x0011cd4d: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0015ef80: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x000de642: add byte ptr [edx + 0x7d00], bh; pop ebx; cmove eax, edx; ret; 
0x00084420: add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000de605: add byte ptr [edx + 0x7fffffff], bh; pop ebx; cmove eax, edx; ret; 
0x0008b4f1: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c6d5: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089786: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844e2: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b90b: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c66: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0016ef64: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x000de664: add byte ptr [edx + 0xfa], bh; pop ebx; cmove eax, edx; ret; 
0x000de627: add byte ptr [edx + 0xfde8], bh; pop ebx; cmove eax, edx; ret; 
0x000de5d5: add byte ptr [edx + 0xfffa], bh; cmove eax, edx; pop ebx; ret; 
0x00118a62: add byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082c04: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0016b71a: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0007a5b7: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x0011446d: add byte ptr [edx + 1], bh; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014afaf: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008270e: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00084f5b: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a94d: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082e15: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844b0: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085135: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000774b8: add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007c8e4: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079508: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x72f80; add esp, 0x1c; ret; 
0x0008e3d8: add byte ptr [edx + 1], ch; push eax; call 0x82450; add esp, 0x2c; ret; 
0x00082631: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000826b0: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007725b: add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00070955: add byte ptr [edx + 2], ch; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007c7d5: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x000938ea: add byte ptr [edx + eax], 0; add esp, 0x1c; ret; 
0x0014a62a: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x14a656; add esp, 0xc; ret; 
0x000c44d7: add byte ptr [edx - 0x18], dl; ret 0xd4d; 
0x000c763e: add byte ptr [edx - 0x75], dl; popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000a2cff: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0011cc0b: add byte ptr [edx - 0x77], dh; ret 0xdeb; 
0x00127720: add byte ptr [edx - 0xe], dh; call dword ptr [eax - 0x73]; 
0x0018e1b4: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000486f9: add byte ptr [edx - 1], dl; je 0x48722; sub byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x000b3de6: add byte ptr [edx - 9], al; ret 3; 
0x000c562d: add byte ptr [edx], 0; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00100c0d: add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0015a1e8: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001608b3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aec3: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x0004a53f: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ecx + ebx*2 - 0x77], dh; ret 0xc031; 
0x0002ff48: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x001266a4: add byte ptr [edx], al; add byte ptr [eax], al; mov eax, edx; ret; 
0x000a4c5c: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0002fa40: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0012b327: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0012c455: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x0012b0dd: add byte ptr [edx], al; call dword ptr [esi + 0x14]; 
0x0012a597: add byte ptr [edx], al; call eax; 
0x0012a48a: add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012a716: add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x0008f21e: add byte ptr [edx], al; ret; 
0x000ddfc8: add byte ptr [edx], ch; call 0xddf60; add esp, 0x1c; ret; 
0x000b5770: add byte ptr [edx], ch; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000b576e: add byte ptr [edx], ch; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x00116f18: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x000225b7: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x0008e737: add byte ptr [edx], ch; push 1; push eax; call 0x82450; add esp, 0x2c; ret; 
0x0007c6c9: add byte ptr [edx], ch; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x000774bc: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007725f: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0016fc19: add byte ptr [edx], ch; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0015f3b4: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x15f230; add esp, 0x10; add esp, 0xc; ret; 
0x00116f1a: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0007710a: add byte ptr [edx], ch; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x000304ee: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x00087aca: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x000225b9: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call esi; 
0x00070959: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x0007ce6f: add byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0007db51: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x24]; 
0x0007fbf6: add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x00170363: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x0007d582: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x00076e7e: add byte ptr [edx], ch; push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007c4df: add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00080d79: add byte ptr [edx], ch; push ecx; push edx; call 0x16a600; add esp, 0x1c; ret; 
0x00160fb9: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x001573e0: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0007c7d9: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x0015f50c: add byte ptr [esi + 0x11], bh; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00199e64: add byte ptr [esi + 0x25], ah; add byte ptr [eax - 0x6bdb5377], al; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0018fbff: add byte ptr [esi + 0x31], bl; rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x0008b2fe: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0003e84c: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00114816: add byte ptr [esi + 0x53], dl; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f219: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00156870: add byte ptr [esi + 0x56], dl; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0004a9e4: add byte ptr [esi + 0x5f], bl; ret; 
0x00168826: add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x000ae5b0: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a2e8f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a4d5f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a4d7f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d8f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d6f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d9f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000ab3ef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000ab3ff: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000b239f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef0c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23bf: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef2c: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b227f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedfc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b229f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22bf: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3c: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef6c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefaf: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefcf: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23df: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef4c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef90: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018feb3: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000b2efd: add byte ptr [esi + 0xf], ah; je 0xb2f4b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0017761f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0017ba8b: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000b2b61: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000b2e4a: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2e6f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00093649: add byte ptr [esi + 4], dh; ret; 
0x00086752: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00038365: add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00085e9c: add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c084f: add byte ptr [esi + eax - 0x77], dh; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00070ee0: add byte ptr [esi - 0x18], dl; stc; ret 0; 
0x001402ff: add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x0013f896: add byte ptr [esi - 0x3f], ah; ret; 
0x00157b3d: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000b2c5d: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0007ee9d: add byte ptr [esi - 0x70], ah; endbr32; mov eax, 0xffffffff; ret; 
0x0008036d: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0007e3ad: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0011691d: add byte ptr [esi - 0x70], ah; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0015518d: add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x00085a4d: add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x0002ec2d: add byte ptr [esi - 0x70], ah; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x000a720d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000abadd: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a721d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a2e2d: add byte ptr [esi - 0x70], ah; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000a4d2d: add byte ptr [esi - 0x70], ah; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000ab3ad: add byte ptr [esi - 0x70], ah; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab3bd: add byte ptr [esi - 0x70], ah; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x00083aad: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x000de69d: add byte ptr [esi - 0x70], ah; mov eax, 0x7e; pop ebx; ret; 
0x000de6ad: add byte ptr [esi - 0x70], ah; mov eax, 0xfffa; pop ebx; ret; 
0x0011d04d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011facd: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00092b4d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00085ffd: add byte ptr [esi - 0x70], ah; mov eax, edx; call dword ptr gs:[0x10]; 
0x001138fd: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000a4d4d: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001951ad: add byte ptr [esi - 0x70], ah; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0012f15b: add byte ptr [esi - 0x70], ah; nop; endbr32; ret; 
0x0008ba9c: add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x00083bad: add byte ptr [esi - 0x70], ah; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0018e66d: add byte ptr [esi - 0x70], ah; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x00143d3d: add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x00039f8d: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a0ded: add byte ptr [esi - 0x70], ah; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000b231e: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aee8b: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ab39f: add byte ptr [esi - 0x77], ah; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000b221e: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aed9b: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x001145ac: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x0008fe5f: add byte ptr [esi - 0x77], dl; rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; sub eax, 0x81000de6; ret; 
0x00194977: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00194917: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000dd9c4: add byte ptr [esi - 0x77], dl; ret; 
0x000fa2aa: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013beef: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x0016bca6: add byte ptr [esi - 0x7d], dl; ret; 
0x001029ac: add byte ptr [esi - 9], ah; ret 0xff00; 
0x000aae2a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00038066: add byte ptr [esi], ah; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016865f: add byte ptr [esi], ah; hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x0013b8e2: add byte ptr [esi], al; add byte ptr [eax], al; add bl, ch; fucompi st(0); xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x00145f7b: add byte ptr [esi], cl; add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x0010dce0: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00037588: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037490: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x00037528: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0011afe0: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00098458: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000711f3: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000983c8: add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00115cc9: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d69: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d9399: add byte ptr [esp + ebp - 0x75], dh; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000991a6: add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x00194077: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000cbd2c: add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0008d5fe: add byte ptr es:[eax + 0x10], bh; add esp, 0xc; ret; 
0x000a4dad: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dbd: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dcd: add byte ptr es:[eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x00083dee: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x000a70bd: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a2ced: add byte ptr es:[eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000ae61e: add byte ptr es:[eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x0018773d: add byte ptr es:[eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0003dc85: add byte ptr es:[eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003d495: add byte ptr es:[eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x001876ad: add byte ptr es:[eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00125c6d: add byte ptr es:[eax + 0x3130ea83], dl; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x00058d3d: add byte ptr es:[eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x001876bd: add byte ptr es:[eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x000c1a65: add byte ptr es:[eax + 0x3901c083], dl; ret; 
0x000de736: add byte ptr es:[eax + 0x40], bh; ret; 
0x001876cd: add byte ptr es:[eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0018f04d: add byte ptr es:[eax + 0x486f0ff3], dl; ret; 
0x000a4d1d: add byte ptr es:[eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000654ad: add byte ptr es:[eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x001876dd: add byte ptr es:[eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0009d83d: add byte ptr es:[eax + 0x5b04c483], dl; pop esi; ret; 
0x000a4ced: add byte ptr es:[eax + 0x5b118966], dl; ret; 
0x000ab38d: add byte ptr es:[eax + 0x5e5f1788], dl; pop ebx; ret; 
0x0019228d: add byte ptr es:[eax + 0x5f01478d], dl; ret; 
0x0007519d: add byte ptr es:[eax + 0x611be8], dl; add bl, ch; ret 0xb48d; 
0x001876ed: add byte ptr es:[eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0007e9bd: add byte ptr es:[eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x000fc17e: add byte ptr es:[eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x000c5985: add byte ptr es:[eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x001248d5: add byte ptr es:[eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0010267d: add byte ptr es:[eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00041695: add byte ptr es:[eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00124485: add byte ptr es:[eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0018768d: add byte ptr es:[eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x000a0a9d: add byte ptr es:[eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000c8a5e: add byte ptr es:[eax + 1], bh; jg 0xc8a69; neg eax; ret; 
0x0019520d: add byte ptr es:[eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x000c8d15: add byte ptr es:[eax - 0x37763e77], dl; ret; 
0x000ebb3d: add byte ptr es:[eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x001551dd: add byte ptr es:[eax - 0x47fb3b7d], dl; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0014cdc5: add byte ptr es:[eax - 0x47fb3b7d], dl; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00146665: add byte ptr es:[eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x0018e86d: add byte ptr es:[eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0007f67d: add byte ptr es:[eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00146ffe: add byte ptr es:[eax - 0x6bf0d106], al; ret 0xc083; 
0x000a1095: add byte ptr es:[eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x0013920d: add byte ptr es:[eax - 0x72f7137d], dl; xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0011d035: add byte ptr es:[eax - 0x74bbbf75], dl; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0016b135: add byte ptr es:[eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0010309d: add byte ptr es:[eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0007a47d: add byte ptr es:[eax - 0x76b7b175], dl; ret; 
0x0016797d: add byte ptr es:[eax - 0x76efbd75], dl; ret 0xf839; 
0x0008bd8d: add byte ptr es:[eax - 0x76ffba75], dl; ret 0xe283; 
0x0016e61d: add byte ptr es:[eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000fab45: add byte ptr es:[eax - 0x7bf02d7c], dl; nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x0009128d: add byte ptr es:[eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x00048e4d: add byte ptr es:[eax - 0x7c40fb73], dl; ret; 
0x00121b3d: add byte ptr es:[eax - 0x7c76f373], dl; ret 0x8d01; 
0x0018de4d: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0x8308; 
0x001876fd: add byte ptr es:[eax - 0x7cf73f7d], dl; ret 0xf608; 
0x001511a5: add byte ptr es:[eax - 0x7cfbbc75], dl; ret; 
0x000bc115: add byte ptr es:[eax - 0x7cfbbd75], dl; ret 0x8304; 
0x000a15dd: add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x0013f435: add byte ptr es:[eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x0010924d: add byte ptr es:[eax - 0x8767418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00066e0e: add byte ptr es:[eax - 0x89843], al; jmp dword ptr [eax]; 
0x0006bcf6: add byte ptr es:[eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x000b81ad: add byte ptr es:[eax - 0x917a8ab], dl; bound ecx, qword ptr [ebx]; add byte ptr [ecx + 0x16de49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x001169bd: add byte ptr es:[eax - 0x94de418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00116a8d: add byte ptr es:[eax - 0x94eb418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00130385: add byte ptr es:[eax - 0xa8c18], dl; jmp dword ptr [esi - 0x70]; 
0x00130595: add byte ptr es:[eax - 0xc9c18], dl; jmp dword ptr [esi - 0x70]; 
0x0013063d: add byte ptr es:[eax - 0xd4418], dl; jmp dword ptr [esi - 0x70]; 
0x00038067: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0019357b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1935d0; lea eax, [ecx + 0xa]; ret; 
0x0019358b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1935d0; lea eax, [ecx + 0xb]; ret; 
0x0019359b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1935d0; lea eax, [ecx + 0xd]; ret; 
0x001935ab: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x001935bb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1935d0; lea eax, [ecx + 0xf]; ret; 
0x0019355b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x0019356b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1935d0; lea eax, [ecx + 9]; ret; 
0x0002270b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0013033b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001026db: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000b2c4b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b2c6b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x0008b0eb: add byte ptr es:[eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x8b100; mov eax, 0x16; ret; 
0x0016e0db: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x00068dfb: add byte ptr es:[eax], al; add byte ptr [eax], al; jmp eax; 
0x0019485b: add byte ptr es:[eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x000b4f63: add byte ptr es:[eax], al; add byte ptr [eax], al; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00191f45: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x001310d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x000b3348: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b2f18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0003a078: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000991e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00154f67: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x000821b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00080357: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x00194854: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00192307: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00192317: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192327: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x00192337: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x00192347: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x00192297: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001922a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001922b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001922c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001922d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001922e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001922f7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x00192767: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x00192757: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x00192747: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x00192737: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001927d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001927c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001927b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00194ae7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001927a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x00192797: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x00192787: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x00192777: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x00193925: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000a4cd4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008de08: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084038: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x00146418: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x0013d608: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c8c55: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c8c68: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c8c78: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c8c88: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c8c98: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c8ca8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c8cb8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00194827: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000dcdf8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c8c36: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; add eax, 3; ret; 
0x00193326: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x00193336: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x00193346: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x00193356: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x00193366: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x001932c6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x001932d6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x001932e6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x001932f6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x00193306: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x00193316: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x00193996: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x001939a6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x001939b6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x001939c6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x00193936: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x00193946: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x00193956: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x00193966: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x00193976: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x00193986: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x000c8c46: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000a4cc5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00192357: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00094e38: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a4cdb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008b13b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000de68b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x0016268b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x0011d0cb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x0008d993: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0019519b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00161f73: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0019488b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b189b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x00192e3b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0011f95b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0014e0ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x000a4d8b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d6b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d9b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0018769b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019408a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; add eax, 1; pop edi; ret; 
0x000b333a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; add eax, edx; ret; 
0x000b335a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b2f2a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f3a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0007ee99: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x00161f3a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 1; ret; 
0x001572da: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 2; ret; 
0x00155189: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0007f5ca: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x0011fb5a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00156c8a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00156c9a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a4d0a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000de7da: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x00083aa9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x000de699: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x7e; pop ebx; ret; 
0x000de6a9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0xfffa; pop ebx; ret; 
0x00085ff9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a596a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, edx; pop ebx; ret; 
0x0013bdba: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a4d49: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000af05a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00081d7a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; ret; 
0x0013119a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x00143d39: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x00039f89: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000aaaeb: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00194a1b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0005f963: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x0016a9d3: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b306b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000de893: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00058461: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012e9f6: add byte ptr es:[ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0013a836: add byte ptr es:[ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x000c37de: add byte ptr es:[ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000b0bce: add byte ptr es:[ebp - 0x7cc78a40], al; ret; 
0x0016bebe: add byte ptr es:[ebp - 0x7cfbdbbc], cl; ret; 
0x0003ea0e: add byte ptr es:[ebx + 0x1182474], cl; ret; 
0x0016722e: add byte ptr es:[ebx + 0x2901106d], al; ret; 
0x0008db9e: add byte ptr es:[ebx + 0x31042444], cl; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x001901ae: add byte ptr es:[ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0006e00e: add byte ptr es:[ebx + 0x3908245c], cl; ret; 
0x0015527e: add byte ptr es:[ebx + 0x438b08ec], al; adc bh, bh; je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x0013c23e: add byte ptr es:[ebx + 0x4589dc45], cl; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x000719ce: add byte ptr es:[ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00108b46: add byte ptr es:[ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00140bde: add byte ptr es:[ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x39]; 
0x0014c4c6: add byte ptr es:[ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x00109fbe: add byte ptr es:[ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x77]; 
0x0012ff4e: add byte ptr es:[ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008ddd6: add byte ptr es:[ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x00039d5e: add byte ptr es:[ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x001703de: add byte ptr es:[ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008d1ce: add byte ptr es:[ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x75]; 
0x001231de: add byte ptr es:[ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x001170e6: add byte ptr es:[ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00073b6e: add byte ptr es:[ebx - 0x17aee714], al; mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005289e: add byte ptr es:[ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x00057ce6: add byte ptr es:[ebx - 0x3fcef73c], al; pop ebx; ret; 
0x001946be: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1946d0; neg eax; ret; 
0x00089256: add byte ptr es:[ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00137fc6: add byte ptr es:[ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0006b45e: add byte ptr es:[ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x0002501e: add byte ptr es:[ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0003a80e: add byte ptr es:[ebx - 0x7c72f314], al; xor al, 0x74; stc; call dword ptr [eax - 0x18]; 
0x00117436: add byte ptr es:[ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000875ae: add byte ptr es:[ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0015f9e6: add byte ptr es:[ebx - 0x7c72f714], al; rcl byte ptr [edi - 0x72af000d]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x001303f6: add byte ptr es:[ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0015f9d6: add byte ptr es:[ebx - 0xcb7d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007f3be: add byte ptr es:[ecx + 0x803c48], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7f3c0; ret; 
0x000a0ab6: add byte ptr es:[ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x000b33d6: add byte ptr es:[ecx - 0x7cf5742d], cl; ret 0x8104; 
0x00084256: add byte ptr es:[ecx], bh; bnd jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0015a8de: add byte ptr es:[ecx], ch; ret; 
0x000b4f36: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000fa34e: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0016887e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x0011e796: add byte ptr es:[edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x000ab37e: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000c8a3e: add byte ptr es:[edi + 0x5e], bl; ret; 
0x00056cbe: add byte ptr es:[edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x000a2cfe: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0011cd4f: add byte ptr fs:[eax], al; add byte ptr [ebx - 0xc780], cl; dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x00142e98: add byte ptr fs:[eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x00114434: add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00044ee1: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00155a66: add ch, 0xf3; call dword ptr [edx - 0x73]; 
0x0009428f: add ch, al; stosd dword ptr es:[edi], eax; mov edi, 0xc483fff8; or al, 0x8d; add dword ptr [eax - 0x2b], -0x1a; call dword ptr [eax + 0x56]; 
0x00075a85: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0010dc25: add ch, bl; ret; 
0x001574d5: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000c1fba: add ch, byte ptr [ecx]; ret 0x28b; 
0x000d442e: add ch, byte ptr [ecx]; ret 0x348d; 
0x000d290e: add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000ce788: add ch, byte ptr [ecx]; ret 0x48d; 
0x0006e022: add ch, byte ptr [ecx]; ret; 
0x0007725d: add ch, byte ptr [edx]; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00070957: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00170361: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d580: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007c7d7: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0005d245: add ch, cl; call 0x8c05d220; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005d372: add ch, cl; mov ebx, 0x8bffffd3; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00043582: add ch, cl; ret 0xffee; 
0x00166ba6: add ch, cl; ret 0xfffd; 
0x0008ca8f: add ch, cl; ret; 
0x000e4a30: add ch, dh; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0016261a: add ch, dl; cld; jmp dword ptr [esi - 0x70]; 
0x00115fb1: add cl, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x0010292a: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0007b3c9: add cl, al; call 0x1e836d4; ret; 
0x0007b3e9: add cl, al; call 0x1e836f5; ret; 
0x00081e3b: add cl, al; call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00098aef: add cl, al; call 0xfd9c408; inc edi; ret 0xc083; 
0x00033aae: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000966ff: add cl, al; in eax, dx; or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x0007114c: add cl, al; ret 0x6509; 
0x000213ce: add cl, al; ret 0x8909; 
0x0011e6f2: add cl, al; ret 0xf009; 
0x0014da0a: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000b4380: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b214b: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x00177ddd: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x000a2eaa: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000a2e48: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b1833: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000a2d6a: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000b14fb: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000a2d28: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x0013dc76: add cl, byte ptr [eax]; pop ebx; ret; 
0x000b3f5b: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000a8e50: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000a8e82: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000a10bd: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000a10d1: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000a10e9: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000a10fd: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x0007dd82: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000ac6eb: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0009a3f6: add cl, byte ptr [ebp - 0x176f8f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00099f46: add cl, byte ptr [ebp - 0x17928f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b196: add cl, byte ptr [ebp - 0x17ec7f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b146: add cl, byte ptr [ebp - 0x1804ef6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a486: add cl, byte ptr [ebp - 0x18306f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a046: add cl, byte ptr [ebp - 0x1848bf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0006092d: add cl, byte ptr [ebp - 0x6276e5f4]; call 0x8a060932; ret; 
0x001698c2: add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x00144335: add cl, byte ptr [ebp - 0x6d2887d]; call dword ptr [eax + 0x51]; 
0x000a4f1a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x000b4fae: add cl, byte ptr [ebp - 0x91f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009af2e: add cl, byte ptr [ebp - 0x95a4f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b29e: add cl, byte ptr [ebp - 0x9a97f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b21e: add cl, byte ptr [ebp - 0x9a9af6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b25e: add cl, byte ptr [ebp - 0x9ce8f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b1de: add cl, byte ptr [ebp - 0x9cebf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a43e: add cl, byte ptr [ebp - 0x9e8af6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00099fce: add cl, byte ptr [ebp - 0x9fd1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00153bca: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000ae72a: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x0017ba8f: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000b214e: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000aed08: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0012d04b: add cl, byte ptr [ebx - 0x137ce7c0]; or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x00075be9: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x0018b4f5: add cl, byte ptr [ebx - 0x6b7f7474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0017da6f: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x000a5107: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xa4e61; pop ebx; ret; 
0x000a4ef3: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xa4e61; pop ebx; ret; 
0x000a4f15: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xa4e61; pop ebx; ret; 
0x000a4f3b: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xa4e61; pop ebx; ret; 
0x000a8eba: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x000785cb: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000a4f53: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xa4e61; pop ebx; ret; 
0x001502dc: add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x000a4fd7: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xa4e61; pop ebx; ret; 
0x00084723: add cl, byte ptr [ecx + 0xf0b8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a5a33: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000a2f0a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000a2eea: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000c5163: add cl, byte ptr [ecx - 0x36376b]; call dword ptr [edx + 0x51]; 
0x0004e3ab: add cl, byte ptr [ecx - 0x365f6b]; call dword ptr [edx + 0x51]; 
0x00141aa6: add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x00083aff: add cl, byte ptr [ecx - 0x3fcef7bf]; ret; 
0x00141e64: add cl, byte ptr [ecx - 0x44f7b]; jmp dword ptr [ebp - 0x75]; 
0x0005b4de: add cl, byte ptr [ecx - 0x59f63]; inc dword ptr [ecx]; ret; 
0x00084964: add cl, byte ptr [ecx - 0x76d7dbbc]; ret; 
0x000a4aba: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000a2cba: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000a2daa: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x0003b7c3: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x00194e9a: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x000de208: add cl, byte ptr [ecx]; add byte ptr [ecx + 0x147df5c7], al; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x000df8e4: add cl, byte ptr [ecx]; ret 0xf889; 
0x000971e3: add cl, byte ptr [ecx]; rol byte ptr [ebx - 0x78f0f007], 1; mov eax, dword ptr [0x9000000]; ret; 
0x000b4a53: add cl, byte ptr [edi]; inc ebp; ret 0x66c3; 
0x000939c4: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x000c982b: add cl, byte ptr [edi]; lodsb al, byte ptr [esi]; ret; 
0x0017bb67: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184fb7: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x00076f65: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00077d60: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x000fb7e9: add cl, byte ptr [edi]; test byte ptr [eax - 0x7cfffff9], dh; ret 0x8014; 
0x000a4f1d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0019346c: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001926ac: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019323c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000a4b3d: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ac19e: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00193dd8: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x001934ca: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001926fb: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x00193cc5: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x0004b43f: add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0002c51c: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00162155: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00101cab: add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x0018feb9: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0012d42e: add cl, byte ptr [edx - 7]; call dword ptr [eax + 0x57]; 
0x00100c0e: add cl, byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0015cae6: add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x0012a243: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x00169dbf: add cl, ch; and eax, 0xe8ffffff; push esi; jb 0x169dc5; jmp dword ptr [esi - 0x70]; 
0x00020078: add cl, ch; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00109ca7: add cl, ch; cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0004c80e: add cl, ch; cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0019898f: add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000507ef: add cl, ch; imul edi, edx, 0x478dffff; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00101dd8: add cl, ch; imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x0003fb98: add cl, ch; mov edi, 0x8dffffef; xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0004d628: add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000410b4: add cl, ch; out 0xff, ax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00146a88: add cl, ch; paddd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x00034b88: add cl, ch; psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0015d862: add cl, ch; push 0xe8ffffff; mov bl, 0x37; std; jmp dword ptr [esi - 0x70]; 
0x0011df9b: add cl, ch; push ebx; idiv bh; dec dword ptr [ebp - 0x65eb77d]; call dword ptr [eax - 0x73]; 
0x00034bce: add cl, ch; push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x00043e2a: add cl, ch; ret 0xffe3; 
0x000bc6a5: add cl, ch; ret 0xffee; 
0x000f5c31: add cl, ch; ret 0xfff0; 
0x0006c0df: add cl, ch; ret 0xfff9; 
0x000278dc: add cl, ch; ret 0xfffd; 
0x00020138: add cl, ch; ret 0xfffe; 
0x00020038: add cl, ch; ret 0xffff; 
0x000e066f: add cl, ch; ret 3; 
0x00023277: add cl, ch; ret; 
0x0012ee3c: add cl, ch; sar ch, 0xff; dec dword ptr [ebx - 0x7d7243ab]; mov ah, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x0004012c: add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x0007fd53: add cl, ch; sub eax, 0xe8fffffe; ret 0xb12; 
0x00085a6d: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014ac64: add dh, ah; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000485cd: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00021458: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1aad3f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x00068e07: add dh, al; inc esp; and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0005cabd: add dh, al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0018dec6: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x0018f6b6: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x0018fc16: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x00082cbd: add dh, bh; jne 0x82c61; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0017fe74: add dh, bh; ret 0xf; 
0x0017fe3a: add dh, bh; ret 2; 
0x000b364c: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x0010292d: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000970ca: add dh, bl; stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00102465: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000fb732: add dh, byte ptr [eax + ecx - 0x7c]; ror byte ptr [edi], cl; test dword ptr [esi - 0x74ffffe8], edx; push esi; add al, 0xf7; ret 0xfffd; 
0x000b332c: add dh, byte ptr [eax]; ret; 
0x0014e0a3: add dh, byte ptr [ebp + 0x1a]; mov eax, ecx; ret; 
0x00123199: add dh, byte ptr [ebp + 0x34]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00191f1e: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x00075342: add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00191ed8: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x191f54; add eax, 3; ret; 
0x00084cc8: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x000dd1a2: add dh, byte ptr [ebx + ebp*2 - 0x7d]; ret; 
0x000e7f0b: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00147965: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x71; add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x0008cb4a: add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001034ef: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000fa2ae: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00177ddb: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017832b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; pop ebx; ret; 
0x0014796b: add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x00084707: add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x000cda6b: add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00083ba3: add dh, byte ptr [esi + 0xa]; ret; 
0x00084bc7: add dh, byte ptr [esi + edx - 0x77]; ret 0xe283; 
0x0008fee3: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x001754d9: add dh, ch; call dword ptr [eax + 0x6a]; 
0x00099fd2: add dh, dh; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000ec95b: add dh, dh; inc esp; ret 0x804; 
0x0019487f: add dh, dh; les eax, ptr [ecx]; jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x001926f8: add dh, dh; les eax, ptr [edx]; jne 0x192790; lea eax, [edi - 8]; pop edi; ret; 
0x00193288: add dh, dh; les eax, ptr [edx]; jne 0x193320; lea eax, [ecx + 8]; ret; 
0x00192721: add dh, dh; les esp, ptr [eax]; jne 0x1927c0; lea eax, [edi - 4]; pop edi; ret; 
0x001932b1: add dh, dh; les esp, ptr [eax]; jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x00071807: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0009862c: add dh, dh; ret 0x7402; 
0x0019a190: add dh, dh; ret 0x7407; 
0x00073c47: add dh, dh; ret 0x7420; 
0x00028a0a: add dh, dh; ret 0x7501; 
0x0008b69a: add dh, dh; ret 0x7502; 
0x0002d967: add dh, dh; ret 0x7503; 
0x0012fcf7: add dh, dh; ret 0x7520; 
0x0014884b: add dh, dh; ret 0xf01; 
0x0008df9b: add dh, dh; ret 0xf02; 
0x00192129: add dh, dh; ret 0xf04; 
0x00026cb5: add dh, dh; ret 0xf08; 
0x00194771: add dh, dh; ret 0xf0f; 
0x001920c1: add dh, dh; ret 0xf10; 
0x00102e07: add dh, dh; ret 0xf20; 
0x0006ad48: add dh, dh; ret 0xf40; 
0x00052307: add dh, dh; ret 0xf50; 
0x00102e10: add dh, dh; ret 0xf80; 
0x0005542c: add dh, dh; ret; 
0x0008a816: add di, di; jmp dword ptr [ebp - 0x39]; 
0x0011416a: add dl, byte ptr [eax + eax]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006f295: add dl, byte ptr [eax - 0x77]; ret; 
0x00155ba9: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x0004a6af: add dl, byte ptr [ecx - 0x3d]; jmp ecx; 
0x0006a03d: add dl, byte ptr [esi + 0x51]; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00169942: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; fsub st(0), st(0); sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x001699b2: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; in al, 0xe8; bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x0013df99: add dl, cl; lcall 0x3485, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0019d072: add dword ptr [0x1668fff9], ebp; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002e9a0: add dword ptr [0x7868fff9], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x0002e953: add dword ptr [0xba68fff9], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x0009245a: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x00092b0b: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x001633b8: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x001633dc: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00126c96: add dword ptr [eax + 0x18], -0x10; call dword ptr [eax - 0x18]; 
0x0018dcf4: add dword ptr [eax + 0x29fff794], -0x38; pop ebp; pop ebx; ret; 
0x0018b4e7: add dword ptr [eax + 0x29fff794], -0x38; pop ebx; ret; 
0x000b46b8: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x00128366: add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x0004931d: add dword ptr [eax + 0x3901104c], ecx; ret; 
0x0009c42a: add dword ptr [eax + 0x392aff70], eax; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0007b1d1: add dword ptr [eax + 0x4f], -0x1b; call dword ptr [eax - 0x73]; 
0x0013347f: add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x00139f88: add dword ptr [eax + 0x5000004b], -0x73; add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x0015f9f3: add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0007efb1: add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0015aed0: add dword ptr [eax + 0x53], -0xd; call dword ptr [eax - 0x73]; 
0x000b528b: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000b14d4: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000b4746: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000b40ff: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000a70d1: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000b3906: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x0009ccab: add dword ptr [eax + 0x5f], eax; ret; 
0x000a2d01: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0008c4dd: add dword ptr [eax + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00031d16: add dword ptr [eax + 0x6a], edx; add al, ch; popal; or dword ptr [esi], 0x24448900; and al, 0x89; ret; 
0x0012a976: add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x0011d026: add dword ptr [eax + 1], edi; ret; 
0x0015b0f5: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0013d5f7: add dword ptr [eax + 2], edi; ret; 
0x0014a62d: add dword ptr [eax + 8], 1; je 0x14a656; add esp, 0xc; ret; 
0x00077243: add dword ptr [eax + eax - 0x7a730000], edx; mov al, byte ptr [0x29ffffe3]; ret 0xf989; 
0x000e438f: add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x0017a394: add dword ptr [eax + eax], 0x3e8b1c03; jmp ebx; 
0x000e5cb4: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00046bf6: add dword ptr [eax + ebx + 1], esi; ret; 
0x00146001: add dword ptr [eax - 0x18], edx; mov eax, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x00074b42: add dword ptr [eax - 0x1a], -1; call dword ptr [eax - 0x73]; 
0x00094299: add dword ptr [eax - 0x2b], -0x1a; call dword ptr [eax + 0x56]; 
0x0014aeed: add dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x00155824: add dword ptr [eax - 0x5d], 0; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00133537: add dword ptr [eax - 0x73], edx; cmp dword ptr [eax + 0x49], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x0011e1ef: add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x000667e3: add dword ptr [eax - 0x89843], eax; jmp dword ptr [eax]; 
0x0006b964: add dword ptr [eax - 0x8bc43], eax; jmp dword ptr [eax]; 
0x0015509a: add dword ptr [eax], -0x5d; add byte ptr [eax], al; pop ebx; ret; 
0x000e4a2f: add dword ptr [eax], -0xb; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0009a3b2: add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00057647: add dword ptr [eax], 0; add esp, 0x1c; ret; 
0x000fae9a: add dword ptr [eax], 0x3b; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0006f2e4: add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x00024ca6: add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024bc0: add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x001350b6: add dword ptr [eax], 0x6f; bnd call dword ptr [eax - 0x73]; 
0x00133486: add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x000db50f: add dword ptr [eax], 0x71; bnd call dword ptr [eax - 0x73]; 
0x0012771f: add dword ptr [eax], 0x72; bnd call dword ptr [eax - 0x73]; 
0x00139f8f: add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x000c3e10: add dword ptr [eax], 0x8d500000; test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00108ea1: add dword ptr [eax], 0xa30f8000; ret 0xdc73; 
0x00082e50: add dword ptr [eax], 0xf6310000; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x0010faea: add dword ptr [eax], eax; add al, ch; mov esi, 0x89000036; ret 0xdaf7; 
0x0012bf26: add dword ptr [eax], eax; add al, ch; ret 0xf0e2; 
0x00168485: add dword ptr [eax], eax; add al, ch; ret; 
0x000b3dd3: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000d5dbd: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00027b60: add dword ptr [eax], eax; add bl, ch; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg esp, edx; jo 0x27b67; call dword ptr [eax - 0x73]; 
0x0003835e: add dword ptr [eax], eax; add byte ptr [eax + 0x1a5], bh; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015c05b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015c05b: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000fd854: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call ebx; 
0x00123a9e: add dword ptr [eax], eax; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00102bc0: add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000d7a1b: add dword ptr [eax], eax; add byte ptr [eax + 0xdc], bh; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00088fe7: add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000596b5: add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x401; 
0x000a90be: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00023b0b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x000e1b4e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00076b31: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0002e9a6: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00023ae1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00144cb7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x00089e26: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [eax + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0007daa3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x00089f74: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test eax, esp; jg 0x89f76; call dword ptr [eax - 0x18]; 
0x0014b310: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test esp, edi; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00028704: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ah, bh; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00028750: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ah, dl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00088345: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ah; jg 0x88347; call dword ptr [eax - 0x18]; 
0x00089084: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ah; jg 0x89086; call dword ptr [eax - 0x18]; 
0x00029c42: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x70], cl; stc; call dword ptr [eax - 0x18]; 
0x000883d8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x00029c65: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x29c67; call dword ptr [eax - 0x18]; 
0x0002b06d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x2b06f; call dword ptr [eax - 0x18]; 
0x00029d71: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x000286c3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x00026485: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00026e71: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x70], ecx; stc; call dword ptr [eax - 0x18]; 
0x00101e47: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00026e94: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x26e96; call dword ptr [eax - 0x18]; 
0x00027b9b: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x27b9d; call dword ptr [eax - 0x18]; 
0x00087052: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x00149fac: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebp*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00087096: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x00026f78: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00086fd8: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x47], ebp; stc; call dword ptr [eax - 0x18]; 
0x0004112d: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00102073: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00151d6c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ecx; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0002d797: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00149ff2: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0008a854: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x0008a873: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x00026eb7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, edi; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00026f20: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, edx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000e41d5: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x0014a4fd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0014e171: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014e171: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x0002e959: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00023b2f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x001487f2: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00142251: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0006db33: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x000d5c4a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000e82bc: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00118a2a: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001174d4: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0008b26d: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x81c90; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000920b9: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x00082c06: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00187741: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x187749; neg eax; ret; 
0x00188f81: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x188f89; neg eax; pop ebp; ret; 
0x0018e381: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18e389; neg eax; ret; 
0x0018e681: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18e689; neg eax; pop ebp; ret; 
0x0018e851: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18e859; neg eax; ret; 
0x0018f338: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18f340; neg eax; ret; 
0x001905e9: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1905f1; neg eax; ret; 
0x00191c62: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x191c6a; neg eax; ret; 
0x00190267: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x190270; neg eax; ret; 
0x00190592: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1905a0; neg eax; ret; 
0x001946c2: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1946d0; neg eax; ret; 
0x000c8a61: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xc8a69; neg eax; ret; 
0x0006829e: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006de78: add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0016b71c: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000935da: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c0], edx; ret; 
0x0009358a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c4], edx; ret; 
0x0009352a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c8], edx; ret; 
0x0009355a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1e4], edx; ret; 
0x001630da: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016309a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00156c15: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00090da7: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008ace0: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001709cb: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0014e0b1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007a5b9: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000b43ac: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0011446f: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00082c01: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e12: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0006df11: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x00157949: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; mov eax, ecx; ret; 
0x000c8ab3: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x0014afb1: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x00071835: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0010c70c: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011752f: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0004a9e1: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0016133e: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00082710: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016008b: add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000574f6: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0015b0f7: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000933e0: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000deb74: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xdeb80; ret; 
0x000849d1: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0005861f: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; ret; 
0x0008d4ca: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x0002153c: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008a94f: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082e17: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844b2: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085137: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b452c: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xb4535; xor eax, eax; ret; 
0x00065418: add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00094d72: add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x00143f98: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x143fcd; add esp, 0x11c; ret; 
0x000380fe: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x38111; add esp, 0x12c; ret; 
0x00108a32: add dword ptr [eax], eax; add byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x00038b6d: add dword ptr [eax], eax; add byte ptr [ebp + 0x51], dl; lea esi, [ecx + eax]; push esi; call edi; 
0x00080065: add dword ptr [eax], eax; add byte ptr [ebp + 0xe], dh; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00103183: add dword ptr [eax], eax; add byte ptr [ebp + 0xf840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x0002b481: add dword ptr [eax], eax; add byte ptr [ebp - 0x47958a01], al; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00107395: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00021703: add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x0014dacc: add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x00086dab: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c11179], cl; call dword ptr [eax - 0x73]; 
0x00085d39: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x0003eac0: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cf3879], cl; call dword ptr [eax - 0x73]; 
0x00044d20: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cf4279], cl; call dword ptr [eax - 0x73]; 
0x00025363: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d45179], cl; call dword ptr [eax - 0x73]; 
0x00025f44: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d4517a], cl; call dword ptr [eax - 0x73]; 
0x00024cae: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d4517d], cl; call dword ptr [eax - 0x73]; 
0x001467fb: add dword ptr [eax], eax; add byte ptr [ebp - 0x7481870a], al; inc ebp; aam 0x85; ror byte ptr [edi], 0x84; ret; 
0x000ec939: add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x00048179: add dword ptr [eax], eax; add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x0016a741: add dword ptr [eax], eax; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf604; 
0x001214a6: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000574ed: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x0009ddea: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x748d; 
0x0009e456: add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00109362: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0009c8ee: add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0003b60f: add dword ptr [eax], eax; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0007c081: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0016624d: add dword ptr [eax], eax; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x00056eba: add dword ptr [eax], eax; add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x000c2687: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1d9d: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x0010a08b: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x000b51a0: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0007c0d5: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000376d1: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001161fe: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003743b: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003799b: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0007fbef: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00070612: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0015a512: add dword ptr [eax], eax; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00080f0e: add dword ptr [eax], eax; add byte ptr [ebx + 0x75d28516], cl; imul eax, dword ptr [ebx + 0x56a04ec], 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x00058d74: add dword ptr [eax], eax; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000d80eb: add dword ptr [eax], eax; add byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x00108a3a: add dword ptr [eax], eax; add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x00127992: add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00109ff5: add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x75]; 
0x0007d652: add dword ptr [eax], eax; add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x0003e441: add dword ptr [eax], eax; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x000cacbb: add dword ptr [eax], eax; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0007a0e7: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000f8bd8: add dword ptr [eax], eax; add byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x9bac868d; stc; call dword ptr [eax - 0x73]; 
0x0015d6b2: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0007dd35: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0010318b: add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x00098550: add dword ptr [eax], eax; add byte ptr [ebx - 0x15f79], cl; jmp dword ptr [ebp - 0x75]; 
0x0009856f: add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x000979dd: add dword ptr [eax], eax; add byte ptr [ebx - 0x1637a], cl; jmp dword ptr [ebp - 0x75]; 
0x0002e6ad: add dword ptr [eax], eax; add byte ptr [ebx - 0x1e773], cl; jmp dword ptr [ebx]; 
0x0004dc00: add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000c5849: add dword ptr [eax], eax; add byte ptr [ebx - 0x363f7b], cl; call dword ptr [edi + 0x6a]; 
0x000e840e: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afab], cl; ret 0x830f; 
0x0008bd4c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00113a31: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00108072: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b6: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x00146960: add dword ptr [eax], eax; add byte ptr [ebx - 0x6b7447a3], cl; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x0002c0b4: add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; jb 0x2c0ea; stc; call dword ptr [edx + 0x50]; 
0x001396eb: add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000262fb: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x0014eac6: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x00080ee3: add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x001933ab: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000708cc: add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x000d5e32: add dword ptr [eax], eax; add byte ptr [ebx - 0x74cbdb8c], cl; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011fb10: add dword ptr [eax], eax; add byte ptr [ebx - 0x74cbdbac], cl; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000f9840: add dword ptr [eax], eax; add byte ptr [ebx - 0x74dbdbac], cl; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d6423: add dword ptr [eax], eax; add byte ptr [ebx - 0x768bdbb4], cl; cli; call dword ptr gs:[0x10]; 
0x0007d72c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x00102d52: add dword ptr [eax], eax; add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0009c8e5: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fe05], al; push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x00034dea: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0002c0d2: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; js 0x2c108; stc; call dword ptr [eax - 1]; 
0x0014daac: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x0011e596: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x00025026: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0002fe95: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x00146dff: add dword ptr [eax], eax; add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x00146927: add dword ptr [eax], eax; add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137f], cl; jmp dword ptr [ebp - 0x39]; 
0x000d6564: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d66b5: add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000928a7: add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x0004a7be: add dword ptr [eax], eax; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x00037cca: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x001687bc: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0014366b: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000ec5c1: add dword ptr [eax], eax; add byte ptr [ecx + 0x7ec085c7], cl; jnp 0x149bce14; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000df391: add dword ptr [eax], eax; add byte ptr [ecx + 0xd0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014da8c: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0015c5a7: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014da76: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00168626: add dword ptr [eax], eax; add byte ptr [ecx - 0x15f7b], cl; dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x00153595: add dword ptr [eax], eax; add byte ptr [ecx - 0x72efdbbc], cl; inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000d61a5: add dword ptr [eax], eax; add byte ptr [ecx - 0x72f7dbb4], cl; dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x00122cd6: add dword ptr [eax], eax; add byte ptr [ecx - 0x7605762f], cl; out dx, eax; call dword ptr gs:[0x10]; 
0x00054c39: add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0010fdb6: add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x0009aae4: add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x0012f963: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743d], cl; ret 0xce80; 
0x000f0afe: add dword ptr [eax], eax; add byte ptr [ecx - 0x7ab7db84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x00102eef: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x0009a37d: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x1849ef6e], al; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000f3e34: add dword ptr [eax], eax; add byte ptr [ecx], al; inc ebp; sub byte ptr [ecx - 0x170f7616], cl; sub eax, 0x89ffff40; ret 0xb60f; 
0x0009afbd: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f28d: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x0009b09d: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x0012e755: add dword ptr [eax], eax; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00094d78: add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x00035642: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x0007bdbd: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x448b; 
0x00089c3d: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0014eabe: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0008b05d: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00102bb7: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000a4c8d: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000c88e2: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0010f814: add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003763d: add dword ptr [eax], eax; add byte ptr [edi], cl; inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000f47d4: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000b27f2: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000be115: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000ca4af: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0015dc43: add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x000774b6: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007c7d3: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0012a488: add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012a714: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [edi + 0x14]; 
0x0019308c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00038363: add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x001145aa: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x00194975: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00194915: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00192105: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00192116: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00192127: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x00026cb3: add dword ptr [eax], eax; add dh, dh; ret 0xf08; 
0x001920bf: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001920d0: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001920e1: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0005542a: add dword ptr [eax], eax; add dh, dh; ret; 
0x00099709: add dword ptr [eax], eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000b49bb: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a1132: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00051a68: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0005759e: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x000583d7: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000b47da: add dword ptr [eax], eax; dec ecx; jne 0xb47d8; pop esi; ret; 
0x000de63c: add dword ptr [eax], eax; mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000596b2: add dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x401; 
0x000a0bd5: add dword ptr [eax], edi; ret; 
0x000b2f6c: add dword ptr [eax], edx; ret; 
0x0004a55c: add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000b2f8c: add dword ptr [eax], esi; ret; 
0x0003fba0: add dword ptr [eax], esi; stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x00056eac: add dword ptr [eax], esi; stc; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0014c0cb: add dword ptr [eax], esp; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000b2f7c: add dword ptr [eax], esp; ret; 
0x00194875: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x00194882: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x0008b122: add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000de705: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0014d8a2: add dword ptr [ebp + 0x23], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00195152: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0019513a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00063433: add dword ptr [ebp + 0x440f9304], ecx; ret; 
0x0008d319: add dword ptr [ebp + 0x4c], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001432c5: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x000ce6f5: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0008dd91: add dword ptr [ebp + 0xc], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000f42a3: add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0008c435: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00081c48: add dword ptr [ebp + ecx + 0x65], esi; mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x0008d648: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008ce68: add dword ptr [ebp + ecx - 0x7d], esi; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00120738: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b8: add dword ptr [ebp + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0009ea11: add dword ptr [ebp - 0x13], esi; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0004a9dc: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0009c2e4: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x0008e773: add dword ptr [ebp - 0x1978df79], ecx; call dword ptr [ebx + 0x50]; 
0x0008e416: add dword ptr [ebp - 0x197c3f79], ecx; call dword ptr [ebp + 0x50]; 
0x0008d6dc: add dword ptr [ebp - 0x19887f7b], ecx; call dword ptr [ebx + 0x50]; 
0x0009cdcf: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011779f: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000c8d0d: add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x000995f9: add dword ptr [ebp - 0x2c], esi; sub esp, 0xc; push eax; call edx; 
0x0008c4f5: add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0005f9c2: add dword ptr [ebp - 0x4377b], ecx; call dword ptr [esi - 0x77]; 
0x0011aa3c: add dword ptr [ebp - 0x4c7bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011a47c: add dword ptr [ebp - 0x547bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000c37a3: add dword ptr [ebp - 0x57c03b0], ecx; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000ceac6: add dword ptr [ebp - 0x67f5db6], ecx; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x000ceacc: add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x0011b43d: add dword ptr [ebp - 0x74e18740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x0014d5b2: add dword ptr [ebp - 0x75], esi; pop ebx; pop esi; ret; 
0x0013d993: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0013d8bb: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000aab04: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000a4b18: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0012d543: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f8995: add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x0011c19c: add dword ptr [ebp - 0x7c988a0a], eax; in al, dx; or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x0009b05b: add dword ptr [ebp - 0xa2fdf6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009af7b: add dword ptr [ebp - 0xa836f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0012f1fb: add dword ptr [ebp - 0xa838f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b00b: add dword ptr [ebp - 0xaa37f6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b36b: add dword ptr [ebp - 0xac3af6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0012f1ab: add dword ptr [ebp - 0xac3cf6e], ecx; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009afc0: add dword ptr [ebp - 0xaeaaf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f290: add dword ptr [ebp - 0xaeacf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b0a0: add dword ptr [ebp - 0xaf0cf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000803ca: add dword ptr [ebx + 0x19a0], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000b192f: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0011c78d: add dword ptr [ebx + 0x39142454], ecx; ret 0x1a77; 
0x0008e011: add dword ptr [ebx + 0x418d1068], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0009f271: add dword ptr [ebx + 0x45898704], ecx; rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x00054546: add dword ptr [ebx + 0x458b0850], ecx; test byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0011e1ec: add dword ptr [ebx + 0x468801e2], eax; adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0009d025: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x000a8bf5: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000585d9: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000ed445: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00078835: add dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x0008d64f: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000a109d: add dword ptr [ebx + 0x5e], ebx; ret; 
0x00083c58: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0015cb6f: add dword ptr [ebx + 0x64], -7; call dword ptr [esi + 0x57]; 
0x0015f028: add dword ptr [ebx + 0x650c2454], ecx; sub edx, dword ptr [0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0007a789: add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0007efab: add dword ptr [ebx + 0x798d08ec], eax; add dword ptr [eax + 0x52], edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000a72d3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a72f3: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f03: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x00142257: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x00157c42: add dword ptr [ebx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012cda0: add dword ptr [ebx - 0x137ce7c0], ecx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0012a1e8: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00157b0c: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000e438c: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe4361; xor eax, eax; ret; 
0x000e88b7: add dword ptr [ebx - 0x3f7cafaa], ecx; add dword ptr [ecx], edi; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x0007913b: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x000785cd: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x0005f568: add dword ptr [ebx - 0x5ef7b], ecx; call dword ptr [edx - 0x75]; 
0x0005eb28: add dword ptr [ebx - 0x5ef7b], ecx; dec dword ptr [ecx - 0x5b36b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0018b517: add dword ptr [ebx - 0x6b7f7474], ecx; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0014efa8: add dword ptr [ebx - 0x72efdb8c], ecx; xchg byte ptr [ebx + 0x2a], bl; stc; call dword ptr [eax + 0x53]; 
0x000ee045: add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x000f91a4: add dword ptr [ebx - 0x76ebdbbc], ecx; push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x0012601f: add dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00023195: add dword ptr [ebx - 0x7d], edx; ret; 
0x0004b277: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0012dbbe: add dword ptr [ebx - 0xc363], ecx; dec dword ptr [ecx - 0xcb6b]; call dword ptr [eax - 0x77]; 
0x001709c7: add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011ba30: add dword ptr [ebx], ecx; inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x000ee850: add dword ptr [ebx], edi; pop ebp; add al, 0x7c; ret 0xb48d; 
0x0011e1d3: add dword ptr [ecx + 0x10938d16], ecx; mov byte ptr [0x408bfff6], al; jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x00034de4: add dword ptr [ecx + 0x13840fc6], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0007474c: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000a7141: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a7271: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a2d51: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a2e81: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000a9ff1: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7011: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000a7241: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x0009a75f: add dword ptr [ecx + 0x39102444], ecx; ret; 
0x000d0e5a: add dword ptr [ecx + 0x394c2444], ecx; ret; 
0x00093c58: add dword ptr [ecx + 0x39c131d9], ecx; ret; 
0x000a7261: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a2e71: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a7251: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a2e61: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000aa4f1: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a8e4e: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x0003a902: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0009b92f: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x001356ed: add dword ptr [ecx + 0x5a], -7; call dword ptr [eax - 0x18]; 
0x00135871: add dword ptr [ecx + 0x5a], -7; call dword ptr [eax - 0x73]; 
0x00058e56: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000a5b01: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000b1514: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00125c64: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000a4a4e: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000a2c41: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0011d52b: add dword ptr [ecx + 0x60938d16], ecx; test dh, dh; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x001517af: add dword ptr [ecx + 0x62], -7; call dword ptr [eax - 0x18]; 
0x00103eca: add dword ptr [ecx + 0x7de82404], ecx; ret 0xfff1; 
0x000e9495: add dword ptr [ecx + 0x80e1], eax; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x00119593: add dword ptr [ecx + 0xc61451], ecx; and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x0009a37b: add dword ptr [ecx + eax - 0x72fc0000], 0xe7b61092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b09b: add dword ptr [ecx + eax - 0x72ff0000], 0xf50f3092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f28b: add dword ptr [ecx + eax - 0x72ff0000], 0xf5153092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009afbb: add dword ptr [ecx + eax - 0x72ff0000], 0xf5155092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0014e09c: add dword ptr [ecx + edx + 0x31], esi; leave; cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x000e7df8: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0007b41b: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011d8ef: add dword ptr [ecx - 0x2f6c72ea], ecx; sbb esi, ebp; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0004f805: add dword ptr [ecx - 0x364f43], ecx; dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0014eacf: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0009dad8: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x0014b560: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00090da1: add dword ptr [ecx - 0x45658acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0015fc15: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x0007f6f2: add dword ptr [ecx - 0x49f0fbba], ecx; ret; 
0x0011d6cf: add dword ptr [ecx - 0x4f6c72ea], ecx; xchg esi, esi; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0005cab1: add dword ptr [ecx - 0x5b77b], ecx; dec dword ptr [edi]; test dword ptr [edi - 0x39fffff0], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0005c870: add dword ptr [ecx - 0x5e743], ecx; jmp dword ptr [esi - 0x77]; 
0x000c3401: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4e8b; 
0x000414a1: add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x0008497b: add dword ptr [ecx - 0x76cfdbbc], ecx; ret 0x448b; 
0x00084457: add dword ptr [ecx - 0x76e3dbbc], ecx; ret; 
0x00153b9a: add dword ptr [ecx - 0x7bfbdb84], ecx; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001185f4: add dword ptr [ecx - 0x7c0e7630], ecx; ret 0xf01; 
0x0002734a: add dword ptr [ecx - 0x7cbbdba4], ecx; ret; 
0x000295b3: add dword ptr [ecx - 0x7cd7dba4], ecx; ret; 
0x00150b2f: add dword ptr [ecx - 0x7cd7dbbc], ecx; in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x00026814: add dword ptr [ecx - 0x7ce3dba4], ecx; ret; 
0x0016cd7b: add dword ptr [ecx - 0x7cf760b4], ecx; ret; 
0x0016cd62: add dword ptr [ecx - 0x7cf769b4], ecx; ret 0x3901; 
0x000ce155: add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000daf02: add dword ptr [ecx], 0x46; stc; call dword ptr [eax + 0x56]; 
0x00145bfb: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x0019308b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x0011a18c: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ed22c: add dword ptr [ecx], eax; ret 0xdd39; 
0x0005eb65: add dword ptr [ecx], eax; ret; 
0x00085ad7: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0005417b: add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x001488d4: add dword ptr [ecx], ebp; ret 0x828d; 
0x000e5dde: add dword ptr [ecx], ebp; ret 0xd301; 
0x00167233: add dword ptr [ecx], ebp; ret; 
0x000de72f: add dword ptr [ecx], ebx; push esp; jne 0xde740; lea esi, [esi]; mov eax, 0x40; ret; 
0x0008fdc9: add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000dced3: add dword ptr [ecx], ebx; rol byte ptr [ebx - 0x1f7cfb3c], 0xc; pop ebx; pop esi; ret; 
0x001987b2: add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0011baba: add dword ptr [ecx], ecx; ret 0x1789; 
0x00028480: add dword ptr [ecx], ecx; ret 0x7439; 
0x000f0173: add dword ptr [ecx], ecx; ret 0xf983; 
0x0004856b: add dword ptr [ecx], ecx; ret; 
0x00114e87: add dword ptr [ecx], edi; fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x000a0d06: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000b341c: add dword ptr [ecx], edi; fmul dword ptr [edi]; inc edi; ret; 
0x000e7812: add dword ptr [ecx], edi; lds esi, ptr [edx + ebx + 0x39]; ret; 
0x0009aa02: add dword ptr [ecx], edi; ret 0x1976; 
0x00050fa2: add dword ptr [ecx], edi; ret 0x3a74; 
0x0013efd0: add dword ptr [ecx], edi; ret 0x7372; 
0x000ecd72: add dword ptr [ecx], edi; ret 0x840f; 
0x0005bce9: add dword ptr [ecx], edi; ret 0x850f; 
0x00047f59: add dword ptr [ecx], edi; ret 0x860f; 
0x0013f070: add dword ptr [ecx], edi; ret 0x930f; 
0x000dd08a: add dword ptr [ecx], edi; ret 0xb74; 
0x0009ba86: add dword ptr [ecx], edi; ret 0xc72; 
0x000f4f39: add dword ptr [ecx], edi; ret 0xda75; 
0x0011cd0b: add dword ptr [ecx], edi; ret 0xe075; 
0x000f2182: add dword ptr [ecx], edi; ret 0xe775; 
0x0011a5a2: add dword ptr [ecx], edi; ret 0xe975; 
0x00055377: add dword ptr [ecx], edi; ret 0xec75; 
0x000dd095: add dword ptr [ecx], edi; ret 0xee75; 
0x000eac4c: add dword ptr [ecx], edi; ret 0xef7f; 
0x0019621b: add dword ptr [ecx], edi; ret 0xf27e; 
0x0003d152: add dword ptr [ecx], edi; ret; 
0x000e88bd: add dword ptr [ecx], edi; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x0010ab15: add dword ptr [ecx], esi; sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0008cb7a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008402a: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d78a7: add dword ptr [edi + 0x16], edi; pop ebx; pop esi; pop edi; ret; 
0x000d78f5: add dword ptr [edi + 0x18], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00070389: add dword ptr [edi + 0x1c], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d7831: add dword ptr [edi + 0x1c], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00070278: add dword ptr [edi + 0x1d], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003acd6: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x001682dd: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0003ae05: add dword ptr [edi + 0x20], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0019d5d5: add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00087384: add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0016d1c4: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0016d314: add dword ptr [edi + 0x21], edi; pop ebx; pop esi; pop edi; ret; 
0x0004a4c3: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001681d3: add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x00139972: add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x0014f61a: add dword ptr [edi + 0x23], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00168251: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00039ef9: add dword ptr [edi + 0x24], edi; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000cbf69: add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x00119c81: add dword ptr [edi + 0x24], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0014e540: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000d9ac7: add dword ptr [edi + 0x26], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00132a5e: add dword ptr [edi + 0x27], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0003a28b: add dword ptr [edi + 0x2a], edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a460: add dword ptr [edi + 0x2d], edi; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011e8e0: add dword ptr [edi + 0x2d], edi; add esp, 8; pop ebx; ret; 
0x0007e118: add dword ptr [edi + 0x35], edi; add esp, 8; pop ebx; ret; 
0x000567a6: add dword ptr [edi + 0x37], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0008295e: add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x00054793: add dword ptr [edi + 0x3a], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0014987a: add dword ptr [edi + 0x3b], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00119bbc: add dword ptr [edi + 0x51], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00139644: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0014d9e4: add dword ptr [edi + 0x59], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000e816b: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x0014bf77: add dword ptr [edi + 0x5d], ebx; ret; 
0x000ac6c6: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000723c2: add dword ptr [edi + 0xb], edi; ret; 
0x000d9b80: add dword ptr [edi + 0xd], edi; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00058671: add dword ptr [edi + 4], edi; ret; 
0x00083a8e: add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009d230: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x000d24a2: add dword ptr [edi], ecx; dec ecx; ret 0x708d; 
0x0007180a: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0011bbb6: add dword ptr [edi], ecx; inc esp; ret; 
0x0017bbff: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018503f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x000f3954: add dword ptr [edi], ecx; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f42a7: add dword ptr [edi], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0017bad7: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184f37: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000a0d02: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xa0d00; pop ebx; ret; 
0x00165e3c: add dword ptr [edi], ecx; test byte ptr [0x8b000001], bh; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x0009945c: add dword ptr [edi], ecx; test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0x9948e; call eax; 
0x0014dc8c: add dword ptr [edi], ecx; test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00193cbc: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x000aab07: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0008bbef: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], edx; ret 0xf283; 
0x0008bdff: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0014a3da: add dword ptr [edi], ecx; test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000a4b1b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00089e95: add dword ptr [edi], ecx; test dword ptr [esp + edi*8 - 1], edx; jmp dword ptr [ebp - 0x39]; 
0x0005f5fa: add dword ptr [edi], ecx; test edi, ebp; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000f11db: add dword ptr [edi], ecx; test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x0005689a: add dword ptr [edi], ecx; xchg ebp, eax; ret 0x8366; 
0x0013f004: add dword ptr [edi], ecx; xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; push dword ptr [ecx]; fisttp dword ptr [ebx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0013d645: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000b6598: add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000bf977: add dword ptr [edi], ecx; xchg esp, eax; ret 0xd020; 
0x0004387b: add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x0004928c: add dword ptr [edi], ecx; xchg esp, eax; ret; 
0x00163828: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00023b10: add dword ptr [edx + 0x2a], -7; call dword ptr [eax - 0x18]; 
0x000db516: add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x18]; 
0x000db68c: add dword ptr [edx + 0x46], -7; call dword ptr [eax - 0x73]; 
0x00077d8b: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x00170867: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x00083bce: add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x000a7293: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001709c9: add dword ptr [edx + 1], edi; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000888e4: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000585d6: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058630: add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00124f67: add dword ptr [edx + eax*2], 1; ret; 
0x00071674: add dword ptr [edx + ebp*2 - 0x77], esi; ret; 
0x00079f04: add dword ptr [edx + ebx*2 - 0x77], esi; ret; 
0x000d9afb: add dword ptr [edx + edi*8 + 0x10c483ff], ecx; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0009d7f1: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0009b414: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x000b2122: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000b14d2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000ae622: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x0010a6d8: add dword ptr [edx - 1], edx; jbe 0x10a6e9; call dword ptr [esi + 0x24]; 
0x0010b6db: add dword ptr [edx - 1], edx; jbe 0x10b6ec; call dword ptr [esi + 0x24]; 
0x0011226b: add dword ptr [edx - 1], edx; jbe 0x11227c; call dword ptr [esi + 0x24]; 
0x0011e84c: add dword ptr [edx], -7; call dword ptr [eax - 0x18]; 
0x0012d42d: add dword ptr [edx], 0x4a; stc; call dword ptr [eax + 0x57]; 
0x0015cae5: add dword ptr [edx], 0x4a; stc; call dword ptr [esi + 0x57]; 
0x000774ba: add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007db4f: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00170463: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007c8e6: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007950a: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x72f80; add esp, 0x1c; ret; 
0x0016349c: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0011d499: add dword ptr [esi + 0x53], -7; call dword ptr [eax + 0x57]; 
0x0008de43: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x00164832: add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000a7313: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2f23: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7333: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f43: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7353: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f63: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a4da3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000a4db3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000a4dc3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000a4dd3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000a7043: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000a7283: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000a8e7e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001951c3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1464: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a7e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c73: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000a5aa8: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000a2e93: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000abbe3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa583: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abc03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa5a3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abc23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa5c3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000abc43: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa5e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x00043a70: add dword ptr [esi + ebx + 1], esi; ret; 
0x000ea0e3: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0007a41e: add dword ptr [esi + edi - 0x77], esi; ret; 
0x00194a5b: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0012b566: add dword ptr [esi - 0x18], edx; ret; 
0x001463f3: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x000daf03: add dword ptr [esi - 7], eax; call dword ptr [eax + 0x56]; 
0x000e3433: add dword ptr [esi], 0x2fbb0000; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x0006dd6a: add dword ptr fs:[eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9e3: add dword ptr fs:[eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00057646: add dword ptr ss:[eax], 0; add esp, 0x1c; ret; 
0x0007fbee: add dword ptr ss:[eax], eax; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00098f63: add eax, -0x23; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00021dd6: add eax, 0; ret; 
0x00125919: add eax, 0x1006e7; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x000a16b8: add eax, 0x10; pop edi; pop esi; ret; 
0x000374c3: add eax, 0x10c48300; test eax, eax; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037752: add eax, 0x10c48300; test eax, eax; jne 0x37760; add esp, 8; pop ebx; ret; 
0x0004c232: add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x000f9fa6: add eax, 0x120428d; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x000b227b: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedf8: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011c140: add eax, 0x14; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0014df5b: add eax, 0x14; jne 0x14df66; add esp, 0x1c; ret; 
0x0015ff5a: add eax, 0x14; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffca: add eax, 0x14; jne 0x15ffd5; add esp, 0x4c; ret; 
0x0016003a: add eax, 0x14; jne 0x160045; add esp, 0x4c; ret; 
0x0016009d: add eax, 0x14; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600fd: add eax, 0x14; jne 0x160108; add esp, 0x4c; ret; 
0x0016016a: add eax, 0x14; jne 0x160175; add esp, 0x4c; ret; 
0x001601ea: add eax, 0x14; jne 0x1601f5; add esp, 0x4c; ret; 
0x001606d8: add eax, 0x14; jne 0x1606e3; add esp, 0x1c; ret; 
0x00160720: add eax, 0x14; jne 0x160754; add esp, 0x1c; ret; 
0x00161f21: add eax, 0x14; jne 0x161f2c; add esp, 0x2c; ret; 
0x00036477: add eax, 0x14; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370bd: add eax, 0x14; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x0003b40d: add eax, 0x14; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b460: add eax, 0x14; jne 0x3b46b; add esp, 0x1c; ret; 
0x0007b331: add eax, 0x14; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x0009cca7: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00030538: add eax, 0x182474ff; push 0; call 0x304e0; add esp, 0x1c; ret; 
0x0012e996: add eax, 0x18; call eax; 
0x000218c2: add eax, 0x18; jmp eax; 
0x0013e179: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e245: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a87d: add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002194d: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00153a38: add eax, 0x18; push eax; call 0x153810; add esp, 0x2c; ret; 
0x0014de4d: add eax, 0x18; push eax; call edx; 
0x0012e9c5: add eax, 0x18; push esi; call eax; 
0x000936a9: add eax, 0x192957; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x00093619: add eax, 0x1929e7; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935f9: add eax, 0x192a07; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000935a9: add eax, 0x192a57; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00088979: add eax, 0x19d687; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00087769: add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00081d99: add eax, 0x1a4267; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00080349: add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00030518: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x0015c055: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000382a9: add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038289: add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x00038059: add eax, 0x1edfa7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0002fee9: add eax, 0x1f6117; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec9: add eax, 0x1f6137; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea9: add eax, 0x1f6157; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002f669: add eax, 0x1f6997; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002ec59: add eax, 0x1f73a7; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002b809: add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0012a713: add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x0002ff47: add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00022749: add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022729: add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021dc9: add eax, 0x204237; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021749: add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021729: add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00021409: add eax, 0x204bf7; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000a16c5: add eax, 0x20; pop edi; pop esi; ret; 
0x000a71b8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7318: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f28: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0009b10c: add eax, 0x21; ret; 
0x00087ea1: add eax, 0x24548b00; or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000d9175: add eax, 0x247c8b00; or byte ptr [ebp - 0x6667b79], cl; call dword ptr [eax - 0x73]; 
0x001171f9: add eax, 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00154f39: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000bc84d: add eax, 0x291ff083; ret 0x5489; 
0x000c6749: add eax, 0x291ff083; ret 0x9589; 
0x000d3b16: add eax, 0x2964c16b; ret; 
0x000a4b81: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0004eea7: add eax, 0x3005868d; stc; call dword ptr [eax + 0x57]; 
0x0010af0d: add eax, 0x302474ff; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000a16d2: add eax, 0x30; pop edi; pop esi; ret; 
0x000a8cd4: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0015d8ba: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00067557: add eax, 0x39000000; ret; 
0x000300e3: add eax, 0x3cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012c9c6: add eax, 0x408b068b; sbb byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x000aba8c: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b161f: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x00099264: add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0015ceaa: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000825c1: add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x0010361c: add eax, 0x5002e0c1; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x001600eb: add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x00188eec: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001876e3: add eax, 0x542b60f; sub eax, ecx; ret; 
0x0012c9d3: add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x0012ceb1: add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x0012c595: add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x0012e519: add eax, 0x57df808d; stc; call dword ptr [eax - 0x75]; 
0x0012e9fc: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x000fe3c1: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0003775a: add eax, 0x5b08c483; ret; 
0x00135f71: add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x000370c3: add eax, 0x5b18c483; ret; 
0x0008a20f: add eax, 0x5b28c483; ret; 
0x00093084: add eax, 0x5b38c483; ret; 
0x000c9bce: add eax, 0x5b48c483; ret; 
0x000a4899: add eax, 0x5b5f0000; ret; 
0x00057df0: add eax, 0x5b78c483; ret; 
0x0013f938: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0008d7ca: add eax, 0x5e5bc031; ret; 
0x0012639a: add eax, 0x5e5bd089; ret; 
0x000aaec3: add eax, 0x5e5f0000; pop ebx; ret; 
0x000a71c1: add eax, 0x5f0c428d; ret; 
0x000ac811: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000b1624: add eax, 0x5f5bf889; ret; 
0x000f64f2: add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x0016d7d8: add eax, 0x6410448d; ret; 
0x0012e9bf: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00087e63: add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e658: add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x00080f09: add eax, 0x6f850f00; add dword ptr [eax], eax; add byte ptr [ebx + 0x75d28516], cl; imul eax, dword ptr [ebx + 0x56a04ec], 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x000ab0f8: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x0002d961: add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x000dc0cb: add eax, 0x74f2f883; rdtsc; rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x00030470: add eax, 0x75003880; or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x0014af36: add eax, 0x75085039; hlt; ret; 
0x000e5249: add eax, 0x753ffb80; cmp dword ptr [ebx - 0x7ae7dbbc], ecx; ror byte ptr [edi], 0x95; ret 0xb48d; 
0x00087cfe: add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0015660a: add eax, 0x768dc7eb; add byte ptr [ebx - 0x7c72f314], al; dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0014e590: add eax, 0x810001ff; ret; 
0x000aee01: add eax, 0x824448b; pop esi; ret; 
0x0009172f: add eax, 0x83000000; clc; add al, 0xf; inc ebp; ret 0x968b; 
0x000ebd37: add eax, 0x83fff344; les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00082fa8: add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00193eb2: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00192e72: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00193542: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00186045: add eax, 0x8806b60f; pop es; pop esi; pop edi; pop ebx; ret; 
0x00121d36: add eax, 0x89000000; add al, 0x24; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0002b7b7: add eax, 0x890013fc; xor al, 0x24; call ebx; 
0x000d006f: add eax, 0x8901f083; ret; 
0x0008452a: add eax, 0x89038b10; ret 0xff0; 
0x00092dff: add eax, 0x8b12048d; sbb byte ptr [eax + 0x107], bh; call dword ptr gs:[0x10]; 
0x000c0477: add eax, 0x8bfff6f4; jl 0xc04a2; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0005de89: add eax, 0x8bffffc1; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000c7b37: add eax, 0x8d500000; and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x000c7ae8: add eax, 0x8d500000; sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x000442fd: add eax, 0x8d500000; xchg al, bl; jne 0x442ff; call dword ptr [eax - 0x18]; 
0x00044417: add eax, 0x8d500000; xchg byte ptr [eax], ah; jbe 0x44419; call dword ptr [eax - 0x18]; 
0x000443d1: add eax, 0x8d500000; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x0004100b: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x4100d; call dword ptr [eax - 0x18]; 
0x000474a2: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050bf1: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba927: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7c6: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c041c: add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x0004048c: add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x000b9b4e: add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x0004362b: add eax, 0x8d500000; xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x000410cd: add eax, 0x8d500000; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x00041173: add eax, 0x8d500000; xchg eax, ebx; jne 0x41175; call dword ptr [eax - 0x18]; 
0x000473a0: add eax, 0x8d500000; xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c16: add eax, 0x8d500000; xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000baa00: add eax, 0x8d500000; xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6a7: add eax, 0x8d500000; xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c048e: add eax, 0x8d500000; xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x0015fa5e: add eax, 0x90; pop ebx; pop esi; ret; 
0x000aab8c: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015faee: add eax, 0x94; pop ebx; pop esi; ret; 
0x000f8be2: add eax, 0x9bac868d; stc; call dword ptr [eax - 0x73]; 
0x000f8dca: add eax, 0x9bcc868d; stc; call dword ptr [eax - 0x73]; 
0x00199697: add eax, 0x9c8b0000; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x000ac1ff: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ec6a9: add eax, 0x9dfe283; ret 0x5388; 
0x0015cc41: add eax, 0xa003848d; and al, 0xf9; call dword ptr [eax + 0x52]; 
0x000de203: add eax, 0xa2e80000; add cl, byte ptr [ecx]; add byte ptr [ecx + 0x147df5c7], al; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x0012c90b: add eax, 0xa440968d; stc; call dword ptr [edx + 0x50]; 
0x0012c664: add eax, 0xa468808d; stc; call dword ptr [eax - 0x75]; 
0x0012d296: add eax, 0xa4a0808d; stc; call dword ptr [eax + 0x6a]; 
0x001940bd: add eax, 0xa; pop edi; ret; 
0x00191f74: add eax, 0xa; ret; 
0x0015a1ed: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00176879: add eax, 0xaf787; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00176749: add eax, 0xaf8b7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174819: add eax, 0xb17e7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001747e9: add eax, 0xb1817; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174799: add eax, 0xb1867; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174769: add eax, 0xb1897; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174739: add eax, 0xb18c7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174709: add eax, 0xb18f7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0015ca3d: add eax, 0xb4818d50; jb 0x15ca3d; call dword ptr [eax - 0x18]; 
0x000fdd4e: add eax, 0xb4818d50; jb 0xfdd4e; call dword ptr [eax - 0x18]; 
0x00142189: add eax, 0xb4828d50; jb 0x142189; call dword ptr [eax - 0x18]; 
0x00081720: add eax, 0xb4828d50; jb 0x81720; call dword ptr [eax - 0x18]; 
0x000f8d2f: add eax, 0xb4828d50; jb 0xf8d2f; call dword ptr [eax - 0x18]; 
0x000f8e7c: add eax, 0xb4828d50; jb 0xf8e7c; call dword ptr [eax - 0x18]; 
0x00138902: add eax, 0xb4838d50; jb 0x138902; call dword ptr [eax - 0x18]; 
0x00138bb7: add eax, 0xb4838d50; jb 0x138bb7; call dword ptr [eax - 0x18]; 
0x001443b2: add eax, 0xb4838d50; jb 0x1443b2; call dword ptr [eax - 0x18]; 
0x0015762a: add eax, 0xb4838d50; jb 0x15762a; call dword ptr [eax - 0x18]; 
0x001576f6: add eax, 0xb4838d50; jb 0x1576f6; call dword ptr [eax - 0x18]; 
0x00157822: add eax, 0xb4838d50; jb 0x157822; call dword ptr [eax - 0x18]; 
0x001578ad: add eax, 0xb4838d50; jb 0x1578ad; call dword ptr [eax - 0x18]; 
0x001578da: add eax, 0xb4838d50; jb 0x1578da; call dword ptr [eax - 0x18]; 
0x00158157: add eax, 0xb4838d50; jb 0x158157; call dword ptr [eax - 0x18]; 
0x0015ad6d: add eax, 0xb4838d50; jb 0x15ad6d; call dword ptr [eax - 0x18]; 
0x0015af38: add eax, 0xb4838d50; jb 0x15af38; call dword ptr [eax - 0x18]; 
0x0015b602: add eax, 0xb4838d50; jb 0x15b602; call dword ptr [eax - 0x18]; 
0x0015b680: add eax, 0xb4838d50; jb 0x15b680; call dword ptr [eax - 0x18]; 
0x0015b6cd: add eax, 0xb4838d50; jb 0x15b6cd; call dword ptr [eax - 0x18]; 
0x0015c54d: add eax, 0xb4838d50; jb 0x15c54d; call dword ptr [eax - 0x18]; 
0x0015cbad: add eax, 0xb4838d50; jb 0x15cbad; call dword ptr [eax - 0x18]; 
0x0015d82e: add eax, 0xb4838d50; jb 0x15d82e; call dword ptr [eax - 0x18]; 
0x0015e5b4: add eax, 0xb4838d50; jb 0x15e5b4; call dword ptr [eax - 0x18]; 
0x00160928: add eax, 0xb4838d50; jb 0x160928; call dword ptr [eax - 0x18]; 
0x00160daa: add eax, 0xb4838d50; jb 0x160daa; call dword ptr [eax - 0x18]; 
0x00160dfc: add eax, 0xb4838d50; jb 0x160dfc; call dword ptr [eax - 0x18]; 
0x00160e60: add eax, 0xb4838d50; jb 0x160e60; call dword ptr [eax - 0x18]; 
0x001611c4: add eax, 0xb4838d50; jb 0x1611c4; call dword ptr [eax - 0x18]; 
0x00161704: add eax, 0xb4838d50; jb 0x161704; call dword ptr [eax - 0x18]; 
0x0016174c: add eax, 0xb4838d50; jb 0x16174c; call dword ptr [eax - 0x18]; 
0x0016178a: add eax, 0xb4838d50; jb 0x16178a; call dword ptr [eax - 0x18]; 
0x00161831: add eax, 0xb4838d50; jb 0x161831; call dword ptr [eax - 0x18]; 
0x001627d8: add eax, 0xb4838d50; jb 0x1627d8; call dword ptr [eax - 0x18]; 
0x001632c9: add eax, 0xb4838d50; jb 0x1632c9; call dword ptr [eax - 0x18]; 
0x00163a14: add eax, 0xb4838d50; jb 0x163a14; call dword ptr [eax - 0x18]; 
0x0005793f: add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x00080f1b: add eax, 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x00080f8d: add eax, 0xb4838d50; jb 0x80f8d; call dword ptr [eax - 0x18]; 
0x0009a53d: add eax, 0xb4838d50; jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x0009a59e: add eax, 0xb4838d50; jb 0x9a59e; call dword ptr [eax - 0x18]; 
0x000a1449: add eax, 0xb4838d50; jb 0xa1449; call dword ptr [eax - 0x18]; 
0x00136484: add eax, 0xb4858d50; jb 0x136484; call dword ptr [eax - 0x18]; 
0x00136542: add eax, 0xb4858d50; jb 0x136542; call dword ptr [eax - 0x18]; 
0x0013656a: add eax, 0xb4858d50; jb 0x13656a; call dword ptr [eax - 0x18]; 
0x0013659a: add eax, 0xb4858d50; jb 0x13659a; call dword ptr [eax - 0x18]; 
0x00155c87: add eax, 0xb4858d50; jb 0x155c87; call dword ptr [eax - 0x18]; 
0x00155d83: add eax, 0xb4858d50; jb 0x155d83; call dword ptr [eax - 0x18]; 
0x00162a58: add eax, 0xb4858d50; jb 0x162a58; call dword ptr [eax - 0x18]; 
0x00058910: add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; 
0x00058910: add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x0005896a: add eax, 0xb4858d50; jb 0x5896a; call dword ptr [eax - 0x18]; 
0x0009a322: add eax, 0xb4858d50; jb 0x9a322; call dword ptr [eax - 0x18]; 
0x00155aaa: add eax, 0xb4868d50; jb 0x155aaa; call dword ptr [eax - 0x18]; 
0x0002f918: add eax, 0xb4868d50; jb 0x2f918; call dword ptr [eax - 0x18]; 
0x000f8b98: add eax, 0xb4868d50; jb 0xf8b98; call dword ptr [eax - 0x18]; 
0x0015555a: add eax, 0xb4878d50; jb 0x15555a; call dword ptr [eax - 0x18]; 
0x0015c146: add eax, 0xb4878d50; jb 0x15c146; call dword ptr [eax - 0x18]; 
0x00194103: add eax, 0xb48d0000; add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x0008a43c: add eax, 0xb8000004; lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000c6351: add eax, 0xb9b4878d; stc; call dword ptr [eax + 0x53]; 
0x00193d22: add eax, 0xb; pop edi; ret; 
0x00191f26: add eax, 0xb; ret; 
0x001680b9: add eax, 0xbdf47; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0018d95e: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000b2284: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0015f7d9: add eax, 0xc6827; mov edx, dword ptr [eax - 0x150]; lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x000cda60: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x001940c7: add eax, 0xc; pop edi; ret; 
0x0013cc8e: add eax, 0xc; ret; 
0x00167c03: add eax, 0xd8890000; pop ebx; pop esi; ret; 
0x001940cc: add eax, 0xd; pop edi; ret; 
0x00191f80: add eax, 0xd; ret; 
0x000788f0: add eax, 0xe083d089; add dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x00143fe9: add eax, 0xe2017; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x000a52d7: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x001940d1: add eax, 0xe; pop edi; ret; 
0x00191f84: add eax, 0xe; ret; 
0x0006762f: add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006c8fd: add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0015dc8c: add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0007c3c1: add eax, 0xec830000; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0011d138: add eax, 0xec830000; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011d1a4: add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011d189: add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011d16e: add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x000a4b7e: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000aab89: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000ac1fc: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00131419: add eax, 0xf4be7; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00119d09: add eax, 0xf5c68100; ret 0x10; 
0x00139ece: add eax, 0xf; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00193d4b: add eax, 0xf; pop edi; ret; 
0x00191f3f: add eax, 0xf; ret; 
0x001887be: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0019561f: add eax, 0xff250000; inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00161907: add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x00093662: add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x000a0d00: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa0d00; pop ebx; ret; 
0x00194090: add eax, 1; pop edi; ret; 
0x0009b0c1: add eax, 1; ret; 
0x0009d7ef: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009c428: add eax, 1; xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x9c428; mov eax, ecx; ret; 
0x000a0f06: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00194095: add eax, 2; pop edi; ret; 
0x000c8c27: add eax, 2; ret; 
0x00193cd5: add eax, 3; pop edi; ret; 
0x000c8c40: add eax, 3; ret; 
0x000b622b: add eax, 4; cmp edx, ecx; je 0xb6236; test edx, edx; jne 0xb6228; ret; 
0x0019409f: add eax, 4; pop edi; ret; 
0x00162871: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x1626a0; add esp, 0x1c; ret; 
0x00191f5c: add eax, 4; ret; 
0x000c8e07: add eax, 4; test edx, edx; jne 0xc8e00; mov eax, ecx; pop ebx; ret; 
0x001940a4: add eax, 5; pop edi; ret; 
0x00191f60: add eax, 5; ret; 
0x001940a9: add eax, 6; pop edi; ret; 
0x00191f64: add eax, 6; ret; 
0x00193cfb: add eax, 7; pop edi; ret; 
0x00191eff: add eax, 7; ret; 
0x0015add7: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015adfa: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001940b3: add eax, 8; pop edi; ret; 
0x000f9b35: add eax, 8; push eax; call 0xb3910; add esp, 0x1c; ret; 
0x00191f6c: add eax, 8; ret; 
0x0013cc88: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x001940b8: add eax, 9; pop edi; ret; 
0x00191f70: add eax, 9; ret; 
0x00021dd5: add eax, dword ptr [0]; ret; 
0x0006f96a: add eax, dword ptr [eax - 0x7cfdf2b2]; ret; 
0x000a8f1f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00024c91: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x000c7957: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x30; stc; call dword ptr [eax - 0x18]; 
0x00025f27: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2], bh; stc; call dword ptr [eax - 0x18]; 
0x0013caac: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x18]; 
0x0002889d: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x000870b8: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x3f], ebx; stc; call dword ptr [eax - 0x18]; 
0x00025346: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; 
0x000258ae: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x00041074: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0012bcca: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x000411ea: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x000e5136: add eax, dword ptr [eax]; add byte ptr [eax - 0x7bf0a205], al; push ecx; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x00160af6: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015e7e2: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x000871e1: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00124b7e: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001085cc: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d5dee: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00108598: add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d652: add eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000877a9: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x00080edb: add eax, dword ptr [eax]; add byte ptr [ebp + 0x52840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0008706e: add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c1317a], cl; call dword ptr [eax - 0x73]; 
0x000267a8: add eax, dword ptr [eax]; add byte ptr [ebp - 0x7497dbbc], cl; je 0x267d6; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x00033ad9: add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x0004be91: add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x0016faaf: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00069848: add eax, dword ptr [eax]; add byte ptr [ebx + 0x555304ec], al; push edi; call dword ptr [eax + 0x1c]; 
0x00038b80: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0006ecf0: add eax, dword ptr [eax]; add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x00047a18: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0018dbae: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0011a361: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x000c59e9: add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c71eb: add eax, dword ptr [eax]; add byte ptr [ebx - 0x36237b], cl; inc dword ptr [ebp + 0x7f8e0fc0]; add al, 0; add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x000c6cf7: add eax, dword ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x0010d849: add eax, dword ptr [eax]; add byte ptr [ebx - 0x47fee383], al; push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x00029900: add eax, dword ptr [eax]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x00168f4e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x0011d053: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x000e6c15: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7bf0a208], al; outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x00165e37: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7bf0fe05], al; cmp eax, 0x8b000001; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x00153476: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000cc260: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x00028d99: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x000664f1: add eax, dword ptr [eax]; add byte ptr [ebx - 0x8737b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000cddb4: add eax, dword ptr [eax]; add byte ptr [ebx - 0xfb73], cl; inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x0016b449: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0016b13e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016b1de: add eax, dword ptr [eax]; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x00178aae: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x00169f28: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000cdddd: add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012ddac: add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00040b19: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00026872: add eax, dword ptr [eax]; add byte ptr [ecx], ch; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000a4b1f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00130f3d: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x0005d203: add eax, dword ptr [eax]; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x00077259: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x0012b325: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00093647: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x001402fd: add eax, dword ptr [eax]; add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x00102e17: add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x00193cc9: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00193ce6: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x00193cef: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x00131417: add eax, dword ptr [eax]; add eax, 0xf4be7; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x000813af: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00116f00: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013f439: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00193f95: add eax, dword ptr [eax]; je 0x19409a; mov eax, 4; pop edi; ret; 
0x00139dd7: add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00139ad3: add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00139183: add eax, dword ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0016214c: add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x001557e4: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0013d5f1: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x00156de4: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00084cc5: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x00170916: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x000711b0: add eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00075909: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x00084d2a: add eax, dword ptr [ebx + 0x87403f8]; pop ebx; pop esi; pop edi; ret; 
0x0015e7c9: add eax, dword ptr [ebx + 0x8b0cec]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015f10a: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0003a874: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0007595e: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0007101b: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x0008bdfc: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x0009b931: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00093dcb: add eax, dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x000ce6b9: add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0015d6b1: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00092bcd: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001709c8: add eax, dword ptr [ecx]; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00099444: add eax, dword ptr [ecx]; ret 0x38b; 
0x000f22c3: add eax, dword ptr [ecx]; ret 0x4489; 
0x00089c7b: add eax, dword ptr [ecx]; ret 0x8966; 
0x00165fb8: add eax, dword ptr [ecx]; ret 0x8d89; 
0x000ed321: add eax, dword ptr [ecx]; ret 0xb60f; 
0x0008b297: add eax, dword ptr [edx]; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d6c5f: add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x000dd155: add eax, dword ptr [esi + 0x3f68]; mov eax, dword ptr [eax]; test eax, eax; je 0xdd163; call eax; 
0x000759d4: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0004c22f: add eax, dword ptr [esp]; add eax, 0x11; add esp, 4; add eax, ebx; jmp eax; 
0x0004ab70: add eax, dword ptr [esp]; ret; 
0x000a4b1e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000870b7: add eax, dword ptr es:[eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x3f], ebx; stc; call dword ptr [eax - 0x18]; 
0x00021dd4: add eax, dword ptr gs:[0]; ret; 
0x000e93a5: add eax, eax; pop ebx; pop esi; ret; 
0x00058239: add eax, ebp; inc ecx; fld qword ptr [edi]; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x00023eeb: add eax, ebp; lahf; ret 0xffff; 
0x0004abc3: add eax, ebx; jmp eax; 
0x0016305e: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00071804: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x00179464: add eax, ecx; pop ebx; ret; 
0x000b26ca: add eax, ecx; pop edi; ret; 
0x00190030: add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x000b29b4: add eax, ecx; ret; 
0x0014d5ae: add eax, ecx; sub ebx, 1; jne 0x14d540; pop ebx; pop esi; ret; 
0x000b26c8: add eax, edi; add eax, ecx; pop edi; ret; 
0x0013e5fb: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x000b2767: add eax, edi; pop edi; ret; 
0x000b2946: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000b3054: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000a16b6: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a16c3: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a16d0: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000b31dd: add eax, edx; add eax, ecx; ret; 
0x00157c69: add eax, edx; pop ebx; pop esi; ret; 
0x000a16ac: add eax, edx; pop edi; pop esi; ret; 
0x000b3343: add eax, edx; ret; 
0x00116efe: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0012f2e0: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b2907: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0009b4a2: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000f3b9a: add ebp, dword ptr [ecx]; ret 0x5403; 
0x0009ed65: add ebp, dword ptr [ecx]; ret 0x5503; 
0x00138d9d: add ebp, dword ptr [ecx]; ret 0x8166; 
0x00151af0: add ebp, dword ptr [ecx]; ret 0xc739; 
0x000ed190: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000f3cfd: add ebp, dword ptr [ecx]; ret 0xda01; 
0x0009de89: add ebp, dword ptr [ecx]; ret 0xf201; 
0x0009f24b: add ebp, dword ptr [ecx]; ret 0xfa01; 
0x000940ec: add ebp, dword ptr [ecx]; ret; 
0x0019cbbd: add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00169a5c: add ebp, dword ptr [edi]; jbe 0x1699e5; in al, dx; add al, 0x83; ret; 
0x0007db4d: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00170461: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017035f: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000875d8: add ebp, eax; ret 0x8d0; 
0x00047c78: add ebp, eax; ret 0xfef8; 
0x00047a78: add ebp, eax; ret 0xfefa; 
0x00084bfb: add ebp, ebx; ret 0x9066; 
0x0008473a: add ebp, ebx; ret; 
0x00028c98: add ebp, ecx; sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0015836c: add ebp, ecx; sub eax, ecx; push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00171048: add ebp, ecx; xchg edx, eax; push esi; clc; jmp dword ptr [esi - 0x70]; 
0x00160e55: add ebp, edi; call dword ptr [eax - 0x73]; 
0x00082182: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x00082e56: add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000dd1cb: add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x00092458: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00092b09: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000a10c0: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x0003b2f0: add ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000ab059: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x001837aa: add ebx, dword ptr [edi - 0x18]; call 0x8218365e; ret; 
0x000b42f9: add ebx, dword ptr [esi + 0x5f]; ret; 
0x0011ed84: add ebx, eax; mov ebp, esi; call ebx; 
0x0011ed84: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0009b3ba: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x000b83a0: add ebx, ebp; les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00079b83: add ebx, ebp; mov esp, 0x7e0c828d; stc; call dword ptr [eax - 0x73]; 
0x000a0a81: add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000e43c8: add ebx, ebp; ret 0x9066; 
0x00092ee8: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00092f4c: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a70c3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7373: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a2f83: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x001028e3: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0016a5e8: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000938c5: add ecx, 0x19273b; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x0011dfb2: add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; 
0x0011dfb2: add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; ret; 
0x00102460: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0004a7d0: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0015f6ef: add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0002b079: add ecx, dword ptr [eax]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x000ac759: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000b42f6: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000f3950: add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000c6320: add ecx, dword ptr [ebp - 0x646ab80]; call dword ptr [eax + 0x56]; 
0x000c5854: add ecx, dword ptr [ebp - 0x646bb80]; call dword ptr [eax + 0x56]; 
0x000a4b60: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0015e8f7: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000b21bc: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000aed59: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000b3f63: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x00102e89: add ecx, dword ptr [ebx + 0x740828c]; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0011d0fa: add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0018b557: add ecx, dword ptr [ebx - 0x6b7f7474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000beba0: add ecx, dword ptr [ebx - 0x72d3db84]; xchg dword ptr [ecx + edi*4 - 7], eax; call dword ptr [eax + 0x56]; 
0x00039025: add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000b21b7: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed54: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab054: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000a7146: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000a7276: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x00051b6a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000a4fb9: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x00118539: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000b2607: add ecx, dword ptr [ecx + ebx*4]; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000a2e86: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x00118560: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x11856a; mov dword ptr [eax], edx; ret; 
0x0019be9a: add ecx, dword ptr [ecx - 0x74afdb8c]; je 0x19bec6; and al, 9; ret 0xe889; 
0x0016246e: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x001624fe: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000b1569: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000a2d56: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000fac94: add ecx, dword ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x000ac2d9: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0019c349: add ecx, dword ptr [ecx]; ret 0x48d; 
0x000254ab: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x00025686: add ecx, dword ptr [edi]; dec ecx; ret; 
0x0015359e: add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x000c74f9: add ecx, dword ptr [edi]; pop dword ptr [esi + edi*8 - 1]; call ebx; 
0x000ac1c1: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00084da4: add ecx, dword ptr [edi]; test dword ptr [ebp - 0x77000000], esi; ret 0xca83; 
0x00198785: add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x000a4b63: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0008c644: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x0013f019: add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x000c37a9: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000c37e5: add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x0010cb9b: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x00050c97: add ecx, dword ptr [esi]; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0009365e: add ecx, eax; call 0x1c9b969; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0003b3b2: add ecx, eax; call 0xae674c9; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x00157a9f: add ecx, eax; cmp ecx, dword ptr [edx + 0x14]; ja 0x157a90; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00035c84: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000362ad: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035ff5: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00054729: add ecx, eax; mov eax, ecx; ret; 
0x00068450: add ecx, ebp; jmp ecx; 
0x0004171f: add ecx, ebp; ret; 
0x0011a804: add ecx, ebx; ret 0xcad8; 
0x000bb0b5: add ecx, edi; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x000fa8ba: add ecx, edx; call 0x7430a344; mov ah, 0x85; ret; 
0x000b48b8: add ecx, edx; notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x00084553: add ecx, edx; out dx, al; je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084a53: add ecx, edx; out dx, al; je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x0009964f: add ecx, edx; test eax, eax; jne 0x99648; mov eax, ecx; ret; 
0x00156e09: add ecx, esi; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00133f8d: add edi, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00134111: add edi, 0x59; stc; call dword ptr [eax - 0x73]; 
0x00084418: add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000b3410: add edi, dword ptr [ecx]; fmul dword ptr [edi]; inc edi; ret; 
0x0014d530: add edi, dword ptr [esi]; jmp ecx; 
0x00155f9c: add edi, edi; jae 0x155fa8; push esi; call dword ptr [ebx + 0xc]; 
0x0010ac35: add edi, edi; je 0x10ac5d; xor bh, bh; jne 0x10ac49; call dword ptr [ebp + 0x24]; 
0x0010bc65: add edi, edi; je 0x10bc8d; xor bh, bh; jne 0x10bc79; call dword ptr [ebp + 0x24]; 
0x001127e5: add edi, edi; je 0x11280d; xor bh, bh; jne 0x1127f9; call dword ptr [ebp + 0x24]; 
0x0008a817: add edi, edi; jmp dword ptr [ebp - 0x39]; 
0x00037c96: add edi, esi; ret 0; 
0x001933ae: add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x00109359: add edx, 0x11cca7; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000cadc9: add edx, 0x15b237; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000cda85: add edx, 0x16d; mov eax, edx; ret; 
0x00093639: add edx, 0x1929c7; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x00081e19: add edx, 0x1a41e7; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x00024cb9: add edx, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0008001d: add edx, 0x30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x000a146e: add edx, 0x43; stc; call dword ptr [ecx + 0x50]; 
0x00159535: add edx, 0x62; stc; call dword ptr [eax - 1]; 
0x00193580: add edx, 0xa; jl 0x1935d0; lea eax, [ecx + 0xa]; ret; 
0x00193590: add edx, 0xb; jl 0x1935d0; lea eax, [ecx + 0xb]; ret; 
0x001934fb: add edx, 0xc; jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x001935a0: add edx, 0xd; jl 0x1935d0; lea eax, [ecx + 0xd]; ret; 
0x001935b0: add edx, 0xe; jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x001935c0: add edx, 0xf; jl 0x1935d0; lea eax, [ecx + 0xf]; ret; 
0x00193510: add edx, 1; jl 0x1935d0; lea eax, [ecx + 1]; ret; 
0x00142255: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x001463f1: add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x000e438d: add edx, 1; test al, al; jne 0xe4361; xor eax, eax; ret; 
0x00193520: add edx, 2; jl 0x1935d0; lea eax, [ecx + 2]; ret; 
0x00193530: add edx, 3; jl 0x1935d0; lea eax, [ecx + 3]; ret; 
0x00193498: add edx, 4; jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x00193540: add edx, 5; jl 0x1935d0; lea eax, [ecx + 5]; ret; 
0x00193550: add edx, 6; jl 0x1935d0; lea eax, [ecx + 6]; ret; 
0x00193560: add edx, 7; jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x0013da15: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x001934d1: add edx, 8; jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x00193570: add edx, 9; jl 0x1935d0; lea eax, [ecx + 9]; ret; 
0x0007d56a: add edx, dword ptr [eax + eax - 0x78730000]; mov al, byte ptr [0x29ffffe3]; ret 0xf189; 
0x0006db37: add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00123262: add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x000b2f56: add edx, eax; jl 0xb2f90; add eax, ecx; ret; 
0x000b2f66: add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b2f76: add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f86: add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x30]; ret; 
0x0004a7b9: add edx, ebp; mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x0006dc0c: add edx, ebx; jmp edx; 
0x00085ad8: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00116b44: add esi, 0x10f4bc; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00107bc4: add esi, 0x11e43c; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00107b74: add esi, 0x11e48c; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0015bb53: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00156076: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00084d2d: add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0008bb91: add esi, dword ptr [ebp + edi*4 - 0x77]; ret 0xca83; 
0x000eb9c8: add esi, dword ptr [ecx + esi - 0xa]; ret 0x7404; 
0x000b47d5: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000ebd0e: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0008b431: add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x000847d6: add esi, dword ptr [edi + esi - 0x77]; clc; call dword ptr gs:[0x10]; 
0x0002bfb3: add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x001570e3: add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x00084c4f: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0013b748: add esi, dword ptr [esp + esi*2 - 0x7d]; ret 0x8303; 
0x00048932: add esi, eax; inc ebx; jmp dword ptr [eax]; 
0x000491f2: add esi, eax; inc esi; jmp dword ptr [eax]; 
0x0013cb91: add esi, eax; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0013cb60: add esi, eax; pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0014f760: add esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0011fabb: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000b3691: add esi, ebx; stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x0015824c: add esi, edx; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000b33b2: add esi, esi; ret 0x7403; 
0x000fa449: add esi, esi; ret 0xf01; 
0x000ef513: add esi, esi; ret; 
0x000e4ca2: add esp, -0x66; stc; call dword ptr [eax - 0x73]; 
0x0009388d: add esp, -0x7c; stc; call dword ptr [ebp + 0x51]; 
0x000b4469: add esp, 0x100; sub eax, edx; ret; 
0x00057d72: add esp, 0x1018; pop ebx; ret; 
0x0012f2dd: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000945a4: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b70d: add esp, 0x10; add esp, 0xc; ret; 
0x001574e8: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00140c66: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000227b6: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000835e8: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00117d04: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002bf59: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008b279: add esp, 0x10; call eax; 
0x00094e23: add esp, 0x10; cmp eax, -1; je 0x94e30; add esp, 0xc; ret; 
0x0015b0f0: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00163823: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x001282cf: add esp, 0x10; cmp edx, 1; jg 0x1282f8; add esp, 0x18; pop ebx; ret; 
0x0016824c: add esp, 0x10; cmp edx, 1; jg 0x168278; add esp, 0x18; pop ebx; ret; 
0x001682d8: add esp, 0x10; cmp edx, 1; jg 0x168300; add esp, 0x18; pop ebx; ret; 
0x001685b0: add esp, 0x10; cmp edx, 1; jg 0x1685d8; add esp, 0x18; pop ebx; ret; 
0x0008737f: add esp, 0x10; cmp edx, 1; jg 0x873a8; add esp, 0x18; pop ebx; ret; 
0x0013d85e: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x00119c1f: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00143cb6: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00124b51: add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00124b75: add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d9aff: add esp, 0x10; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000d5c46: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x001174d0: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00071831: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011c271: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3b3: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11c458; call eax; 
0x00129ebd: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00161f18: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0015ff51: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160031: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160094: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f4: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160161: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x00037860: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873bb: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000d8c37: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x001606cf: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0003b404: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b457: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x00117429: add esp, 0x10; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000d8d9e: add esp, 0x10; mov eax, edi; call eax; 
0x00070f4b: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0008ae09: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0003ae37: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x001462fb: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00021da5: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x00118a26: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00130c5b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130ccb: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d7c: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0003aaa2: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd2: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00085974: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b624: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba84: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf80: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0015fee1: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x001171c5: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x00170baf: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x0003b4b4: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b507: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b554: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5a7: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000c9b14: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d3568: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bf8: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x00021c2b: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000220b4: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0008adee: add esp, 0x10; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00056628: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ba94: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00139b79: add esp, 0x10; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0014511e: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0015f6fa: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0015f10b: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00156e0d: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0012ff40: add esp, 0x10; test eax, eax; je 0x12ff50; add esp, 8; pop ebx; ret; 
0x00139220: add esp, 0x10; test eax, eax; je 0x139230; sub esp, 0xc; push esi; call eax; 
0x00139580: add esp, 0x10; test eax, eax; je 0x139590; sub esp, 0xc; push esi; call eax; 
0x001575d3: add esp, 0x10; test eax, eax; je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0011774c: add esp, 0x10; test eax, eax; jne 0x11770c; add esp, 0xc; ret; 
0x000374c5: add esp, 0x10; test eax, eax; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037754: add esp, 0x10; test eax, eax; jne 0x37760; add esp, 8; pop ebx; ret; 
0x000dc7d4: add esp, 0x10; test eax, eax; jne 0xdc7e0; add esp, 8; pop ebx; ret; 
0x00122b41: add esp, 0x10; test eax, eax; js 0x122b50; add esp, 8; pop ebx; ret; 
0x0014cd5f: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x00099520: add esp, 0x10; test ebp, ebp; jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0016e60f: add esp, 0x10; test ebx, ebx; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x000871d1: add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0003502f: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ebd3b: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000872ca: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00143b9c: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00037998: add esp, 0x114; pop ebx; pop edi; ret; 
0x00143da4: add esp, 0x118; pop ebx; ret; 
0x00143fa4: add esp, 0x11c; ret; 
0x00169d11: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00037438: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003810a: add esp, 0x12c; ret; 
0x000b50a1: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x00121d73: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016216f: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00099e48: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0008fd5e: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000814ba: add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x000cbefa: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002c6f8: add esp, 0x14; pop ebx; pop esi; ret; 
0x0010fb10: add esp, 0x14; pop esi; pop edi; ret; 
0x00155bb0: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007aa88: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00074ae6: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038d66: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014ee3d: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00155096: add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0003b612: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x00114b16: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00050eb8: add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x00162033: add esp, 0x18; pop ebx; jmp eax; 
0x0009ba97: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035d0a: add esp, 0x18; pop ebx; ret; 
0x000832ae: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x001687b9: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x001161fb: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0010737a: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016a130: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011f2ac: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x001591c9: add esp, 0x1c; movzx eax, al; ret; 
0x001637b9: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00072b0b: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00021cf9: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036480: add esp, 0x1c; ret 4; 
0x00021714: add esp, 0x1c; ret; 
0x001747d2: add esp, 0x1c; sar eax, 0x1f; ret; 
0x000842cc: add esp, 0x20; add esp, 0xc; ret; 
0x00139f2d: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0013996d: add esp, 0x20; cmp edx, 1; jg 0x139998; add esp, 0x18; pop ebx; ret; 
0x0013ddb8: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000d5c9b: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000cab45: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00057c4a: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f9953: add esp, 0x20; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0007124e: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ae6f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00021e53: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0019cb55: add esp, 0x20; ret; 
0x0003899d: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0008189f: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000cb11d: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000385d1: add esp, 0x24; pop ebx; pop esi; ret; 
0x000749e9: add esp, 0x24c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004cc3c: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0011a364: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00170f3c: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00037d58: add esp, 0x28; pop ebx; ret; 
0x000cdc51: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e6af0: add esp, 0x28ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00147daa: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011f2ed: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000f6abc: add esp, 0x2c; movzx eax, al; ret; 
0x00021f55: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000304fe: add esp, 0x2c; ret; 
0x000ca9d2: add esp, 0x30; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00078056: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016b32a: add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0003a97a: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000dc861: add esp, 0x34; pop ebx; pop esi; ret; 
0x000fe46b: add esp, 0x36c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000f04ae: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00098cfa: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00143041: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008f169: add esp, 0x38; pop ebx; ret; 
0x00036d21: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000241a6: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00117164: add esp, 0x3c; ret; 
0x00035b91: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x00035b1f: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0011c147: add esp, 0x418; pop ebx; ret; 
0x000484fe: add esp, 0x42c; ret; 
0x0005138d: add esp, 0x434; pop ebx; pop esi; ret; 
0x0011fc52: add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x00109f89: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00041cce: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001473ca: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c9bcf: add esp, 0x48; pop ebx; ret; 
0x00116cb6: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036579: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000392fb: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010a3c9: add esp, 0x4c; ret; 
0x0006d144: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011d24d: add esp, 0x4e; stc; call dword ptr [eax + 0x57]; 
0x000cda0e: add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x00167c00: add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011cb26: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00107c4a: add esp, 0x54; pop ebx; pop esi; ret; 
0x0013f935: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00024ba1: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002621c: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013fe94: add esp, 0x5dc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00107d76: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0015347d: add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000dc493: add esp, 0x64; pop ebx; pop esi; ret; 
0x000dc1af: add esp, 0x68; pop ebx; ret; 
0x00025214: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000853f0: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00119d79: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d7432: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0019d06a: add esp, 0x71; stc; call dword ptr [eax - 0x73]; 
0x0015eb96: add esp, 0x74; pop ebx; pop edi; ret; 
0x00106de4: add esp, 0x74; pop ebx; pop esi; ret; 
0x00057df1: add esp, 0x78; pop ebx; ret; 
0x00026b27: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000217c9: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001232d9: add esp, 0x7c; ret; 
0x001438cd: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0006f2e1: add esp, 0x816c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e7d66: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e5020: add esp, 0x8ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008d357: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00037a94: add esp, 0x94; pop ebx; pop edi; ret; 
0x00084118: add esp, 0x94; pop ebx; pop esi; ret; 
0x00037bb2: add esp, 0x98; pop ebx; ret; 
0x00195d05: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003791c: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00038832: add esp, 0x9c; ret; 
0x0015e958: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00197890: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002439f: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000934ec: add esp, 0xb4; pop ebx; pop esi; ret; 
0x0019954a: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00057732: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00080da1: add esp, 0xc; jmp eax; 
0x001575c5: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0003048f: add esp, 0xc; mov eax, edx; ret; 
0x0008f216: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00047d08: add esp, 0xc; movzx eax, al; ret; 
0x00075201: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x00099d60: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002f506: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00155391: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0012c44b: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b31c: add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012b0d5: add esp, 0xc; push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012cbcd: add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x000220bb: add esp, 0xc; ret; 
0x0005887b: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000df394: add esp, 0xd0; pop ebx; pop esi; pop edi; ret; 
0x0016ac3b: add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0011ed0c: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00109df5: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000d711b: add esp, 0xe8; pop ebx; ret; 
0x00031eca: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fafba: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015fa5b: add esp, 4; add eax, 0x90; pop ebx; pop esi; ret; 
0x0015faeb: add esp, 4; add eax, 0x94; pop ebx; pop esi; ret; 
0x000e93a2: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0004c237: add esp, 4; add eax, ebx; jmp eax; 
0x00157c66: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000dced6: add esp, 4; and eax, 0xc; pop ebx; pop esi; ret; 
0x0011cc78: add esp, 4; lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x001551e0: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00099128: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x00075190: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0010c708: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00157347: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0003a463: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00139301: add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x0014edcc: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x0003ae08: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0015860f: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00087317: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x0018dec9: add esp, 4; pop ebp; pop ebx; ret; 
0x000776b6: add esp, 4; pop ebx; pop esi; jmp eax; 
0x00034fc5: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00022710: add esp, 4; pop ebx; pop esi; ret; 
0x000218b8: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0018b639: add esp, 4; pop ebx; ret; 
0x00083c59: add esp, 4; pop esi; pop edi; ret; 
0x000361ae: add esp, 4; ret; 
0x0015f9cb: add esp, 4; sub eax, -0x80; pop ebx; pop esi; ret; 
0x00157c58: add esp, 4; sub eax, ecx; pop ebx; pop esi; ret; 
0x00083966: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00039efc: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001442db: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008a198: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x001309bd: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0011752b: add esp, 8; mov eax, 1; pop ebx; ret; 
0x0008ce6b: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00118a2e: add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007dbc4: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0015746a: add esp, 8; movzx eax, al; pop ebx; ret; 
0x001026d2: add esp, 8; or eax, edx; pop ebx; ret; 
0x0005118f: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002bf5c: add esp, 8; pop ebx; ret; 
0x00035f89: add esp, 8; ret; 
0x00037137: add esp, 8; xor eax, eax; pop ebx; ret; 
0x000f64f5: add esp, dword ptr [eax - 4]; clc; call dword ptr [eax - 0x73]; 
0x00108089: add sp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00124f66: add word ptr [edx + eax*2], 1; ret; 
0x0011ae12: and ah, 0x44; add byte ptr [eax], al; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x000e1b53: and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00086054: and ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0009a4fc: and ah, 0xe8; push esi; inc ecx; jle 0x9a514; cmovne eax, edx; ret; 
0x0016ef59: and ah, bh; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x001329a5: and ah, byte ptr [ebp - 0x77]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d8d9a: and ah, byte ptr [esi]; or dword ptr [eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x000dce0f: and ah, dh; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f0f01: and al, 0; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0xc085; 
0x000de5ce: and al, 0; add byte ptr [eax + 0x7f], bh; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00075502: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011a9ca: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00116a35: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116a35: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0012c448: and al, 0; add byte ptr [ebx - 0xaff33c], al; jne 0x12c406; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012bf24: and al, 0x10; add dword ptr [eax], eax; add al, ch; ret 0xf0e2; 
0x00179462: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00157345: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x001551d2: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x001303fa: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0008405a: and al, 0x10; and byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00036d36: and al, 0x10; and eax, 0x80000000; ret; 
0x0012595d: and al, 0x10; call 0x124de0; pop edx; pop ecx; pop eax; ret; 
0x0007425a: and al, 0x10; call dword ptr [eax + 0x1c]; 
0x0016fd93: and al, 0x10; call dword ptr [eax + 0x40]; 
0x0010784d: and al, 0x10; call dword ptr gs:[0x10]; 
0x0016cb0a: and al, 0x10; call eax; 
0x00114c92: and al, 0x10; cmp al, 1; ret 0x1389; 
0x00130f39: and al, 0x10; cmp eax, 0x3ff; ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x000f9a26: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00035c97: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c06: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035c8c: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00162e18: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623a8: and al, 0x10; lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00176f16: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0016e288: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0008b305: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00122dfb: and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db5: and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00070fb7: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00080e40: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x0011a189: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b31: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113a2d: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00109ef9: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a429: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00122d49: and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00121769: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121569: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012105b: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0011c4de: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00121449: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121609: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb9: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf49: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce19: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x000776b1: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00080d9c: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0012529b: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x00080e98: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00170913: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00162e1c: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623ac: and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00122c26: and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122357: and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008cbbf: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00106b3a: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d7bbc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010a4f0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00121640: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00110100: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce50: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceb0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd80: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110130: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213e0: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00082744: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00121877: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121477: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108007: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a547: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a487: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109327: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113187: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea47: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121527: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121227: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a027: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121317: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121347: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9747: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121597: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd267: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e87: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de037: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de067: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e57: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a147: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a117: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce77: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda7: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000872fb: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00092578: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011486b: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0011481d: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f222: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010fa82: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000584c1: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00113bb1: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113aad: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00075716: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000755b6: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0007c240: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x001570fd: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0009cfdb: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008ef32: and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000390a7: and al, 0x10; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007c6ce: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00139b87: and al, 0x10; push ebp; call edi; 
0x00039045: and al, 0x10; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015e936: and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071068: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00161ff8: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00162b2e: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015baca: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00162200: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016219d: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00162df0: and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00162498: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00162380: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013e180: and al, 0x10; push edx; push edi; call eax; 
0x0013e24c: and al, 0x10; push edx; push esi; call eax; 
0x000294b3: and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0015539c: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x0007c6d2: and al, 0x10; push esi; call dword ptr [edx + 0x40]; 
0x000cb22f: and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x0013f463: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00038eda: and al, 0x10; sub esp, 4; push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0011f927: and al, 0x10; test edx, edx; je 0x11f960; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000b78b8: and al, 0x13; add byte ptr [ebx + ecx*2 - 0x7d], dh; ret; 
0x000b76cc: and al, 0x13; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x0010fdb4: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x00089e93: and al, 0x14; add dword ptr [edi], ecx; test dword ptr [esp + edi*8 - 1], edx; jmp dword ptr [ebp - 0x39]; 
0x0012a711: and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00171046: and al, 0x14; add ebp, ecx; xchg edx, eax; push esi; clc; jmp dword ptr [esi - 0x70]; 
0x0003048d: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x000304c2: and al, 0x14; call 0x2ff60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00114821: and al, 0x14; call dword ptr gs:[0x10]; 
0x00021515: and al, 0x14; call eax; 
0x001211de: and al, 0x14; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000d6261: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xd6300; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000c9c0d: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000d62cd: and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00080d98: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x001220d9: and al, 0x14; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012235f: and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000826aa: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00156a21: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00129e99: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x0016ce11: and al, 0x14; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00021511: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00122296: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d6: and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001234ee: and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000872ff: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001745f0: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0011a185: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b2d: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef5: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a425: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121765: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121565: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121445: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121605: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb5: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf45: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce15: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f21e: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00113bad: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0009257c: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a4ec: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100fc: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceac: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012c: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213dc: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00107840: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000584b9: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001768c1: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123991: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120b08: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001037c2: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011486f: and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x000748f2: and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x00157d50: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0002150d: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001556ed: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x001556f1: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x000654b6: and al, 0x14; push ebp; call dword ptr [eax + 0x1c]; 
0x00160288: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000df7bd: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001560ab: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00155288: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0003a5c3: and al, 0x14; sub esp, 8; push 0; push edx; call edi; 
0x00047bd2: and al, 0x14; xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00088c26: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d0f8: and al, 0x18; add ecx, dword ptr [ebx + 0xf142474]; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0007b692: and al, 0x18; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015c196: and al, 0x18; call dword ptr [eax + 0x10]; 
0x0006a043: and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0016b3ed: and al, 0x18; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x000774c1: and al, 0x18; call dword ptr [ebx + 0x40]; 
0x00077264: and al, 0x18; call dword ptr [edi + 0x40]; 
0x00076d2b: and al, 0x18; call dword ptr [edi + 0x48]; 
0x00090961: and al, 0x18; call dword ptr gs:[0x10]; 
0x0015dc80: and al, 0x18; call eax; 
0x0007717c: and al, 0x18; call ecx; 
0x0011fdb1: and al, 0x18; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00087291: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0011f9e0: and al, 0x18; cmp esi, -1; je 0x11fa00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000c9bed: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0012d95f: and al, 0x18; je 0x12d970; add esp, 8; pop ebx; ret; 
0x00169893: and al, 0x18; lea eax, [eax - 0x699dd]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x000f6a5d: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000a10ba: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a0ff2: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0003b752: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00155022: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00092bca: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001078d7: and al, 0x18; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00107a37: and al, 0x18; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00107844: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00122dff: and al, 0x18; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db9: and al, 0x18; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012229e: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00088c16: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00051a89: and al, 0x18; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x000747e9: and al, 0x18; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x0005768a: and al, 0x18; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x58e80; add esp, 0x1c; ret; 
0x0007484a: and al, 0x18; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x5f980; add esp, 0x1c; ret; 
0x0016b3a7: and al, 0x18; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00119cde: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016ba40: and al, 0x18; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00076e85: and al, 0x18; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x00122027: and al, 0x18; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122787: and al, 0x18; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012340f: and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00122166: and al, 0x18; mov ebx, 0xf; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000f9a22: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000584bd: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00121055: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011a181: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00109ef1: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a421: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121761: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121561: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121441: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121601: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb1: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf41: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce11: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001768c5: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011ed69: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0010a4e8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00121638: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100f8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce48: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011cea8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd78: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110128: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213d8: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00120afb: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001037ba: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001211d0: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0010fa86: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00076ffe: and al, 0x18; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00123995: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011479e: and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00123a99: and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00106cdb: and al, 0x18; push -0x64; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d8f: and al, 0x18; push -0x64; call 0x107160; add esp, 0x1c; ret; 
0x00107e22: and al, 0x18; push -0x64; call 0x107e30; add esp, 0x1c; ret; 
0x000dc10b: and al, 0x18; push -1; call 0xdc120; add esp, 0x1c; ret; 
0x000dc151: and al, 0x18; push -1; call 0xdc260; add esp, 0x1c; ret; 
0x0011ead9: and al, 0x18; push 0; call 0x1200a0; add esp, 0x1c; ret; 
0x0003053b: and al, 0x18; push 0; call 0x304e0; add esp, 0x1c; ret; 
0x000b5498: and al, 0x18; push 0; call 0xb54b0; add esp, 0x1c; ret; 
0x0012a590: and al, 0x18; push 0; push 0x2000004; call eax; 
0x0003a75a: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x00116f8b: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x00109489: and al, 0x18; push 0x241; push dword ptr [esp + 0x1c]; call 0x108170; add esp, 0x1c; ret; 
0x00083a69: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x839a0; add esp, 0x1c; ret; 
0x000c9c2f: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x0016b3a3: and al, 0x18; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00076ffa: and al, 0x18; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00106d8b: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x107160; add esp, 0x1c; ret; 
0x00107e1e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x107e30; add esp, 0x1c; ret; 
0x000dc14d: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0xdc260; add esp, 0x1c; ret; 
0x000b5494: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xb54b0; add esp, 0x1c; ret; 
0x0016fc1e: and al, 0x18; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0003b65d: and al, 0x18; push eax; push eax; call 0x3b670; add esp, 0x1c; ret; 
0x0007c089: and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00093402: and al, 0x18; push ebp; call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0014c421: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x00077002: and al, 0x18; push esi; call dword ptr [edi + 0x40]; 
0x0016fc22: and al, 0x18; push esi; call dword ptr [edx + 0x40]; 
0x0002c006: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00077173: and al, 0x18; sub esp, 4; push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x001704ac: and al, 0x18; test ebx, ebx; jne 0x1704c0; add esp, 8; pop ebx; ret; 
0x0007db9c: and al, 0x18; test ebx, ebx; jne 0x7dbb0; add esp, 8; pop ebx; ret; 
0x001637fe: and al, 0x18; test edx, edx; jne 0x163810; add esp, 0xc; ret; 
0x0016384e: and al, 0x18; test edx, edx; jne 0x163860; add esp, 0xc; ret; 
0x00084de2: and al, 0x19; aad 0x72; cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x000f9b33: and al, 0x1c; add eax, 8; push eax; call 0xb3910; add esp, 0x1c; ret; 
0x00106c85: and al, 0x1c; call 0x1077f0; add esp, 0x1c; ret; 
0x00057e39: and al, 0x1c; call 0x108030; add esp, 0x1c; ret; 
0x00109492: and al, 0x1c; call 0x108170; add esp, 0x1c; ret; 
0x001747cb: and al, 0x1c; call 0x108c00; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00108e51: and al, 0x1c; call 0x108e60; add esp, 0x1c; ret; 
0x00114549: and al, 0x1c; call 0x114f70; add esp, 0x10; add esp, 0xc; ret; 
0x00114403: and al, 0x1c; call 0x114f70; add esp, 0x1c; ret; 
0x00117718: and al, 0x1c; call 0x117e40; add esp, 0x10; add esp, 0xc; ret; 
0x00119a44: and al, 0x1c; call 0x1193c0; add esp, 0x1c; ret; 
0x0011aeaa: and al, 0x1c; call 0x11aec0; add esp, 0x1c; ret; 
0x0011bfdb: and al, 0x1c; call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011bfab: and al, 0x1c; call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x0011edab: and al, 0x1c; call 0x11edc0; add esp, 0x1c; ret; 
0x00123963: and al, 0x1c; call 0x123ea0; add esp, 0x1c; ret; 
0x00176a25: and al, 0x1c; call 0x127840; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0012e8d0: and al, 0x1c; call 0x12d300; add esp, 0x1c; ret; 
0x0012d4d0: and al, 0x1c; call 0x12d3b0; add esp, 0x18; pop ebx; ret; 
0x00176ca5: and al, 0x1c; call 0x1340b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176d95: and al, 0x1c; call 0x1351e0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176dc5: and al, 0x1c; call 0x135810; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00135e5a: and al, 0x1c; call 0x135e70; add esp, 0x1c; ret; 
0x001362aa: and al, 0x1c; call 0x1362c0; add esp, 0x1c; ret; 
0x00137a6b: and al, 0x1c; call 0x136d30; add esp, 0x1c; ret; 
0x00176e75: and al, 0x1c; call 0x13a0b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00143cdb: and al, 0x1c; call 0x143bb0; add esp, 0x1c; ret; 
0x0015f3d8: and al, 0x1c; call 0x15f130; add esp, 0x10; add esp, 0xc; ret; 
0x0015f3b9: and al, 0x1c; call 0x15f230; add esp, 0x10; add esp, 0xc; ret; 
0x001617f3: and al, 0x1c; call 0x161520; add esp, 0x1c; ret; 
0x00156a8f: and al, 0x1c; call 0x162670; add esp, 0x1c; ret; 
0x00162877: and al, 0x1c; call 0x1626a0; add esp, 0x1c; ret; 
0x000d8c30: and al, 0x1c; call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0016f0a5: and al, 0x1c; call 0x16e930; add esp, 0x18; pop ebx; ret; 
0x0002bf52: and al, 0x1c; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00103645: and al, 0x1c; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00099683: and al, 0x1c; call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ebcc: and al, 0x1c; call 0x2ebe0; add esp, 0x1c; ret; 
0x0003051f: and al, 0x1c; call 0x304e0; add esp, 0x1c; ret; 
0x000385ef: and al, 0x1c; call 0x38570; add esp, 0x1c; ret; 
0x0003a4e2: and al, 0x1c; call 0x3a3f0; add esp, 0x1c; ret; 
0x0016e56b: and al, 0x1c; call 0x3a4c0; add esp, 0x1c; ret; 
0x0003b5da: and al, 0x1c; call 0x3b7e0; add esp, 0x1c; ret; 
0x0003b63a: and al, 0x1c; call 0x3b860; add esp, 0x1c; ret; 
0x000389ed: and al, 0x1c; call 0x3c560; add esp, 0x1c; ret; 
0x00038a2d: and al, 0x1c; call 0x3c660; add esp, 0x1c; ret; 
0x000389cb: and al, 0x1c; call 0x3e2a0; add esp, 0x1c; ret; 
0x0003e234: and al, 0x1c; call 0x3eaf0; add esp, 0x1c; ret; 
0x0003e294: and al, 0x1c; call 0x41b60; add esp, 0x1c; ret; 
0x0003e2f4: and al, 0x1c; call 0x44d50; add esp, 0x1c; ret; 
0x0004851b: and al, 0x1c; call 0x484c0; add esp, 0x1c; ret; 
0x000546d4: and al, 0x1c; call 0x51e90; add esp, 0x1c; ret; 
0x00057665: and al, 0x1c; call 0x57610; add esp, 0x1c; ret; 
0x00074875: and al, 0x1c; call 0x57630; add esp, 0x1c; ret; 
0x00116fe1: and al, 0x1c; call 0x58070; add esp, 0x10; add esp, 0xc; ret; 
0x00116f1f: and al, 0x1c; call 0x58070; add esp, 0x1c; ret; 
0x00057623: and al, 0x1c; call 0x58e80; add esp, 0x1c; ret; 
0x00057643: and al, 0x1c; call 0x5f980; add esp, 0x1c; ret; 
0x00051a63: and al, 0x1c; call 0x67c80; add esp, 0x1c; ret; 
0x00057603: and al, 0x1c; call 0x6ced0; add esp, 0x1c; ret; 
0x000702e4: and al, 0x1c; call 0x701f0; add esp, 0x1c; ret; 
0x000792c5: and al, 0x1c; call 0x70550; add esp, 0x18; pop ebx; ret; 
0x00070f7f: and al, 0x1c; call 0x70e80; add esp, 0x1c; ret; 
0x00058353: and al, 0x1c; call 0x71a30; add esp, 0x1c; ret; 
0x000794f2: and al, 0x1c; call 0x72e40; add esp, 0x1c; ret; 
0x0007950f: and al, 0x1c; call 0x72f80; add esp, 0x1c; ret; 
0x000575c4: and al, 0x1c; call 0x79520; add esp, 0x1c; ret; 
0x000575e4: and al, 0x1c; call 0x796f0; add esp, 0x1c; ret; 
0x00079d63: and al, 0x1c; call 0x79bb0; add esp, 0x1c; ret; 
0x000809cc: and al, 0x1c; call 0x80910; add esp, 0x18; pop ebx; ret; 
0x0008373e: and al, 0x1c; call 0x83660; add esp, 0x18; pop ebx; ret; 
0x00083a72: and al, 0x1c; call 0x839a0; add esp, 0x1c; ret; 
0x0008a186: and al, 0x1c; call 0x89820; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008a23b: and al, 0x1c; call 0x89820; add esp, 0x18; pop ebx; ret; 
0x0008aeeb: and al, 0x1c; call 0x8ad90; add esp, 0x1c; ret; 
0x0008cc0e: and al, 0x1c; call 0x8cbb0; add esp, 0x18; pop ebx; ret; 
0x00090dfb: and al, 0x1c; call 0x90640; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000924e1: and al, 0x1c; call 0x92430; add esp, 0x18; pop ebx; ret; 
0x00091f4f: and al, 0x1c; call 0x92560; add esp, 0x1c; ret; 
0x0009adfe: and al, 0x1c; call 0x9ae10; add esp, 0x1c; ret; 
0x000a1259: and al, 0x1c; call 0x9cb50; add esp, 0x18; pop ebx; ret; 
0x0009a000: and al, 0x1c; call 0x9daf0; add esp, 0x1c; ret; 
0x0009aeb4: and al, 0x1c; call 0x9ea70; add esp, 0x1c; ret; 
0x0009a2ac: and al, 0x1c; call 0xa13a0; add esp, 0x1c; ret; 
0x0012f393: and al, 0x1c; call 0xb3c10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a112d: and al, 0x1c; call 0xb3c10; add esp, 0x18; pop ebx; ret; 
0x000b5141: and al, 0x1c; call 0xb3d20; add esp, 0x18; pop ebx; ret; 
0x000a14cb: and al, 0x1c; call 0xb3d70; add esp, 0x18; pop ebx; ret; 
0x00130377: and al, 0x1c; call 0xb4c50; add esp, 0x18; pop ebx; ret; 
0x000c8e48: and al, 0x1c; call 0xb4fc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130587: and al, 0x1c; call 0xb50b0; add esp, 0x18; pop ebx; ret; 
0x000b6464: and al, 0x1c; call 0xb83e0; add esp, 0x1c; ret; 
0x000b64c4: and al, 0x1c; call 0xbb330; add esp, 0x1c; ret; 
0x000b6524: and al, 0x1c; call 0xbe010; add esp, 0x1c; ret; 
0x000c07b0: and al, 0x1c; call 0xc0920; add esp, 0x1c; ret; 
0x000c07e4: and al, 0x1c; call 0xc1580; add esp, 0x1c; ret; 
0x000ca8cb: and al, 0x1c; call 0xc9fb0; add esp, 0x18; pop ebx; ret; 
0x00170ef5: and al, 0x1c; call 0xd9bc0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00170fa5: and al, 0x1c; call 0xdb630; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dc133: and al, 0x1c; call 0xdc440; add esp, 0x1c; ret; 
0x0008f781: and al, 0x1c; call 0xdce40; add esp, 0x1c; ret; 
0x000dd3df: and al, 0x1c; call 0xdd260; add esp, 0x1c; ret; 
0x000ddc13: and al, 0x1c; call 0xdd8f0; add esp, 0x1c; ret; 
0x000dd67f: and al, 0x1c; call 0xddc00; add esp, 0x1c; ret; 
0x00064fc3: and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x000584c5: and al, 0x1c; call dword ptr gs:[0x10]; 
0x00038bb7: and al, 0x1c; call edi; 
0x00157a08: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001579c8: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000a0fc8: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000d8944: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0009340c: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x00120aff: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011fc1a: and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0012202f: and al, 0x1c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cd8ae: and al, 0x1c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00155ca8: and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0008d412: and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x001037be: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00119cda: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00090bab: and al, 0x1c; mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00058521: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x58560; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0007bfc1: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x1087a0; add esp, 0x18; pop ebx; ret; 
0x0012f6bc: and al, 0x1c; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x0013067c: and al, 0x1c; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00033070: and al, 0x1c; push dword ptr [eax]; call 0xb3440; add esp, 0x1c; ret; 
0x0007100b: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x00119a40: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0011bfd7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011bfa7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x0012395f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x123ea0; add esp, 0x1c; ret; 
0x0012d4cc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x12d3b0; add esp, 0x18; pop ebx; ret; 
0x00156a8b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x162670; add esp, 0x1c; ret; 
0x0003051b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x000385eb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x38570; add esp, 0x1c; ret; 
0x0003a4de: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0004122f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3eaf0; add esp, 0x1c; ret; 
0x0003e2be: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x0003e2f0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x00057661: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x57610; add esp, 0x1c; ret; 
0x00074871: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x57630; add esp, 0x1c; ret; 
0x0005761f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x58e80; add esp, 0x1c; ret; 
0x0005763f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a5f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x000575ff: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000702e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x701f0; add esp, 0x1c; ret; 
0x00070f7b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x000794ee: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72e40; add esp, 0x1c; ret; 
0x000796df: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x000575e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d5f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x000a1255: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9cb50; add esp, 0x18; pop ebx; ret; 
0x00099ffc: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x9daf0; add esp, 0x1c; ret; 
0x000b4fdd: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb3c10; add esp, 0x18; pop ebx; ret; 
0x000b513d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb3d20; add esp, 0x18; pop ebx; ret; 
0x00130373: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb4c50; add esp, 0x18; pop ebx; ret; 
0x00130583: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb50b0; add esp, 0x18; pop ebx; ret; 
0x000baacf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xb83e0; add esp, 0x1c; ret; 
0x000bd8bf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbb330; add esp, 0x1c; ret; 
0x000c050f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xbe010; add esp, 0x1c; ret; 
0x000c07ac: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc0920; add esp, 0x1c; ret; 
0x000c07e0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc1580; add esp, 0x1c; ret; 
0x000dc12f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdc440; add esp, 0x1c; ret; 
0x0008f77d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdce40; add esp, 0x1c; ret; 
0x000dd3db: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdd260; add esp, 0x1c; ret; 
0x000ddc0f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xdd8f0; add esp, 0x1c; ret; 
0x0012f728: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x001306e8: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00119a5b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0012395b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x123ea0; add esp, 0x1c; ret; 
0x0003a4da: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0003e2ec: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x0005761b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x58e80; add esp, 0x1c; ret; 
0x000c39fb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a5b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x000575fb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000796db: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x0007988b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d5b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x000c07dc: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1580; add esp, 0x1c; ret; 
0x000dc12b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdc440; add esp, 0x1c; ret; 
0x0008f779: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdce40; add esp, 0x1c; ret; 
0x000ddc0b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd8f0; add esp, 0x1c; ret; 
0x00160477: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00157a30: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001579e0: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001603b3: and al, 0x1c; push ebx; call eax; 
0x0014c16e: and al, 0x1c; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001552b7: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0010fa8c: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00161f1d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0007b32d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x000caa3a: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x00115ce5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d85: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00121e0b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00122a6b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00130c60: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd0: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d81: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x00147933: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba74: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x00155897: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015ec39: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecd9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0016af62: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b123: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1c5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85a: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x00037d4d: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x0003aaa7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd7: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00081640: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817a8: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x00085979: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008a205: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a3: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b629: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba89: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf85: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f3ce: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65a: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x000914f4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092acc: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x000c9a99: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000cac90: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000d5d61: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f60: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d93b5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000ddd71: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde11: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x00068c7d: and al, 0x1c; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x001211d4: and al, 0x1c; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0006d4c4: and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006d474: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00160089: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0016e1f9: and al, 0x20; call 0x16e070; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e245: and al, 0x20; call 0x16e0e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e1e0: and al, 0x20; call 0x16e0f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001176a5: and al, 0x20; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0012a48e: and al, 0x20; call dword ptr [eax + 0x14]; 
0x00120b0c: and al, 0x20; call dword ptr gs:[0x10]; 
0x0003904b: and al, 0x20; call eax; 
0x0014058f: and al, 0x20; call edx; 
0x000d6137: and al, 0x20; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd61d0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d8f9c: and al, 0x20; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00113902: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0008d41d: and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00114431: and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012216f: and al, 0x20; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001169a0: and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a70: and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00038677: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00037810: and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001138cf: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00109230: and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x0016202e: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0011ed65: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00114467: and al, 0x20; mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00037837: and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00119cd6: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f871: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b951: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a071: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fe1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150a1: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f701: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108591: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108651: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f0: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011f89f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b97f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a09f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0011500f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150cf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f72f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085bf: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x0010867f: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00109417: and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f9849: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001037c6: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x001169c7: and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a97: and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00109257: and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00119a8c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0012f6ec: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x001306ac: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x00130d0c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x00130d6c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00130dcc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x0015e879: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016e658: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0016277c: and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x001567c9: and al, 0x20; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012a027: and al, 0x20; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0015edba: and al, 0x20; push edx; push eax; call edi; 
0x00081ac8: and al, 0x20; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015e13c: and al, 0x20; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00058525: and al, 0x20; test edi, edi; je 0x58560; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0007db57: and al, 0x21; ret 0xc483; 
0x000682f4: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00102bbe: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0006829c: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x001488d2: and al, 0x24; add dword ptr [ecx], ebp; ret 0x828d; 
0x001600e9: and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x001037ca: and al, 0x24; call dword ptr gs:[0x10]; 
0x00081595: and al, 0x24; call eax; 
0x0016abfb: and al, 0x24; call edx; 
0x001220d5: and al, 0x24; lea eax, [esp + 0x14]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013d8e0: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x000838c0: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0003927e: and al, 0x24; mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00121d3f: and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122200: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f875: and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b955: and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a075: and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fe5: and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150a5: and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f705: and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108595: and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108655: and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f4: and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0014c174: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00156876: and al, 0x24; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000f9845: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f8a3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b983: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115013: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f733: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c3: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108683: and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0016abf7: and al, 0x24; mov edx, dword ptr [esp + 0x24]; call edx; 
0x0010941b: and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0009095b: and al, 0x24; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016bb56: and al, 0x24; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000d8fa5: and al, 0x24; push dword ptr [esp + 0x30]; call ebx; 
0x0006cfff: and al, 0x24; push ebp; call dword ptr [esi + 0x1c]; 
0x00157172: and al, 0x28; call dword ptr [eax + 0x18]; 
0x00076e89: and al, 0x28; call dword ptr [eax + 0x40]; 
0x0003b95e: and al, 0x28; call dword ptr gs:[0x10]; 
0x0012a02d: and al, 0x28; call eax; 
0x00093145: and al, 0x28; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001138c6: and al, 0x28; cmp ecx, 9; je 0x113900; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00113976: and al, 0x28; cmp ecx, 9; je 0x1139b0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00122023: and al, 0x28; mov dword ptr [esp + 0x18], eax; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122162: and al, 0x28; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xf; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e7f: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011f8a9: and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b989: and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x00047bd8: and al, 0x28; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001220dd: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011ed6d: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011a0a9: and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115019: and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d9: and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f739: and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0009098c: and al, 0x28; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00108d64: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001085c9: and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108689: and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x000814b5: and al, 0x28; mov eax, dword ptr [eax + 0x1c]; add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x000582d1: and al, 0x28; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015ff47: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00117155: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x00077113: and al, 0x28; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0012285c: and al, 0x28; or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00107805: and al, 0x28; push -0x64; call 0x107820; add esp, 0x2c; ret; 
0x00057593: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00031973: and al, 0x28; push 0; call 0x31900; add esp, 0x2c; ret; 
0x0016ba56: and al, 0x28; push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016bb3c: and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007710f: and al, 0x28; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00107801: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x107820; add esp, 0x2c; ret; 
0x0003196f: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x31900; add esp, 0x2c; ret; 
0x000b53d2: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0007bd20: and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0015e866: and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x0007b706: and al, 0x28; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dc4: and al, 0x28; push edi; call dword ptr [ebx + 0x1c]; 
0x0007c3c9: and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00039282: and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015a64b: and al, 0x28; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000cb2bc: and al, 0x29; ret; 
0x0010340f: and al, 0x2c; call 0x102a60; add esp, 0x2c; ret; 
0x00102a1f: and al, 0x2c; call 0x1033d0; add esp, 0x2c; ret; 
0x00106ca9: and al, 0x2c; call 0x107820; add esp, 0x2c; ret; 
0x0011c317: and al, 0x2c; call 0x11c220; add esp, 0x28; pop ebx; ret; 
0x0011c4af: and al, 0x2c; call 0x11c330; add esp, 0x28; pop ebx; ret; 
0x0012bf7b: and al, 0x2c; call 0x12bd50; add esp, 0x28; pop ebx; ret; 
0x00176b7d: and al, 0x2c; call 0x132b60; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176bfd: and al, 0x2c; call 0x1335b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00137a51: and al, 0x2c; call 0x136f10; add esp, 0x2c; ret; 
0x00137b87: and al, 0x2c; call 0x137a80; add esp, 0x2c; ret; 
0x001383cf: and al, 0x2c; call 0x137da0; add esp, 0x2c; ret; 
0x00139f26: and al, 0x2c; call 0x139910; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0015f7b9: and al, 0x2c; call 0x15f600; add esp, 0x2c; ret; 
0x0013917e: and al, 0x2c; call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000304f7: and al, 0x2c; call 0x31140; add esp, 0x2c; ret; 
0x00031947: and al, 0x2c; call 0x31900; add esp, 0x2c; ret; 
0x000396a7: and al, 0x2c; call 0x39340; add esp, 0x2c; ret; 
0x0003c548: and al, 0x2c; call 0x3c720; add esp, 0x2c; ret; 
0x0003c5c8: and al, 0x2c; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c648: and al, 0x2c; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6c8: and al, 0x2c; call 0x3da60; add esp, 0x2c; ret; 
0x0004870e: and al, 0x2c; call 0x48720; add esp, 0x2c; ret; 
0x00071ecb: and al, 0x2c; call 0x71cf0; add esp, 0x2c; ret; 
0x00057599: and al, 0x2c; call 0x73290; add esp, 0x2c; ret; 
0x00074137: and al, 0x2c; call 0x73f50; add esp, 0x28; pop ebx; ret; 
0x000747bb: and al, 0x2c; call 0x74900; add esp, 0x2c; ret; 
0x0005756b: and al, 0x2c; call 0x79920; add esp, 0x2c; ret; 
0x0007f56f: and al, 0x2c; call 0x7f490; add esp, 0x28; pop ebx; ret; 
0x000842c5: and al, 0x2c; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x00087ad3: and al, 0x2c; call 0x87b00; add esp, 0x2c; ret; 
0x00092517: and al, 0x2c; call 0x927d0; add esp, 0x2c; ret; 
0x00092547: and al, 0x2c; call 0x92a70; add esp, 0x2c; ret; 
0x000b6268: and al, 0x2c; call 0xb6560; add esp, 0x2c; ret; 
0x000b62e8: and al, 0x2c; call 0xb6a60; add esp, 0x2c; ret; 
0x000b6368: and al, 0x2c; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63e8: and al, 0x2c; call 0xb7570; add esp, 0x2c; ret; 
0x000b58c5: and al, 0x2c; call 0xc35f0; add esp, 0x2c; ret; 
0x000ce6b6: and al, 0x2c; call 0xce7c0; add esp, 0x2c; ret; 
0x000d1588: and al, 0x2c; call 0xd3530; add esp, 0x2c; ret; 
0x000d15c8: and al, 0x2c; call 0xd5bc0; add esp, 0x2c; ret; 
0x000f964d: and al, 0x2c; call 0xf8ec0; add esp, 0x28; pop ebx; ret; 
0x000f9585: and al, 0x2c; call 0xf94d0; add esp, 0x28; pop ebx; ret; 
0x00155c68: and al, 0x2c; call dword ptr [eax]; 
0x0013918a: and al, 0x2c; call eax; 
0x00092d31: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0010739a: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00120b7a: and al, 0x2c; push -0x64; call 0x107820; add esp, 0x20; add esp, 0xc; ret; 
0x0016ba3c: and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0010340b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x102a60; add esp, 0x2c; ret; 
0x00102a1b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1033d0; add esp, 0x2c; ret; 
0x0011c313: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11c220; add esp, 0x28; pop ebx; ret; 
0x0011c4ab: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11c330; add esp, 0x28; pop ebx; ret; 
0x0012bf77: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x12bd50; add esp, 0x28; pop ebx; ret; 
0x00137b83: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x137a80; add esp, 0x2c; ret; 
0x001383cb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x137da0; add esp, 0x2c; ret; 
0x0015f7b5: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x15f600; add esp, 0x2c; ret; 
0x000304f3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x00031943: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x31900; add esp, 0x2c; ret; 
0x000396a3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x39340; add esp, 0x2c; ret; 
0x0003c582: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3c720; add esp, 0x2c; ret; 
0x0003d253: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c644: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6c4: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x3da60; add esp, 0x2c; ret; 
0x00049a1b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x48720; add esp, 0x2c; ret; 
0x00071ec7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x71cf0; add esp, 0x2c; ret; 
0x00074133: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x73f50; add esp, 0x28; pop ebx; ret; 
0x000747b7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x00057567: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0007f56b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7f490; add esp, 0x28; pop ebx; ret; 
0x00087acf: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x00092543: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x92a70; add esp, 0x2c; ret; 
0x000b6264: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb6560; add esp, 0x2c; ret; 
0x000b6ed3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb6a60; add esp, 0x2c; ret; 
0x000b6364: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63e4: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xb7570; add esp, 0x2c; ret; 
0x000d1543: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xce7c0; add esp, 0x2c; ret; 
0x000d1584: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd3530; add esp, 0x2c; ret; 
0x000f9649: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf8ec0; add esp, 0x28; pop ebx; ret; 
0x000f9581: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf94d0; add esp, 0x28; pop ebx; ret; 
0x00103407: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x102a60; add esp, 0x2c; ret; 
0x00102a17: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1033d0; add esp, 0x2c; ret; 
0x00137b7f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137a80; add esp, 0x2c; ret; 
0x001383c7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137da0; add esp, 0x2c; ret; 
0x0015f7b1: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x15f600; add esp, 0x2c; ret; 
0x00031913: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x0003193f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31900; add esp, 0x2c; ret; 
0x0003969f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x39340; add esp, 0x2c; ret; 
0x0003c57e: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3c720; add esp, 0x2c; ret; 
0x0003d24f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c640: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6c0: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3da60; add esp, 0x2c; ret; 
0x00049a17: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x48720; add esp, 0x2c; ret; 
0x00071ec3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x71cf0; add esp, 0x2c; ret; 
0x000747b3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x00057563: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0009253f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92a70; add esp, 0x2c; ret; 
0x000b6260: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6560; add esp, 0x2c; ret; 
0x000b6ecf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6a60; add esp, 0x2c; ret; 
0x000b6360: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63e0: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7570; add esp, 0x2c; ret; 
0x000d153f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce7c0; add esp, 0x2c; ret; 
0x000d1580: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd3530; add esp, 0x2c; ret; 
0x000b6129: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b5de9: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0008165b: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000b57de: and al, 0x2c; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x00137a4c: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x136f10; add esp, 0x2c; ret; 
0x000b600e: and al, 0x2c; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0015f6d2: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x0015dc7b: and al, 0x2c; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0007ba15: and al, 0x2c; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008d5ed: and al, 0x2c; push edx; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x000819ab: and al, 0x2c; push edx; push ecx; push esi; call eax; 
0x0015a4c8: and al, 0x2c; push esi; call dword ptr [eax + 0xc]; 
0x00106bd0: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c50: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x00117159: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x001181b5: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823a: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0008f15e: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0009307a: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c9b64: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000cb054: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d7195: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d72c5: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x00035b1d: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000582d5: and al, 0x30; call eax; 
0x000d8fa9: and al, 0x30; call ebx; 
0x00038b8a: and al, 0x30; call edi; 
0x00071064: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000cd726: and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00122403: and al, 0x30; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010806e: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b2: and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00114795: and al, 0x30; mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115cce: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d6e: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d939e: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000de0c3: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de173: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ddd5a: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddfa: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108eb6: and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001151a1: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115351: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00115277: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115427: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00102107: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021d7: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0011f4f2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc583: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001082fe: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108454: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011f5c2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f692: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011516e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011524a: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011531e: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153fa: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001230a2: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001020db: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021ab: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00108337: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00108497: and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0011fb19: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d5e3b: and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00108eef: and al, 0x30; mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001087ce: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0017693f: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00123f69: and al, 0x30; mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001080ac: and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001081fc: and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000f9913: and al, 0x30; mov esi, dword ptr [esp + 0x34]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0010ac38: and al, 0x30; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00022561: and al, 0x30; push dword ptr [ebx + 4]; call esi; 
0x000fa177: and al, 0x30; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x000c3710: and al, 0x30; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000fa17b: and al, 0x30; push dword ptr [esp + 0x3c]; call esi; 
0x000817cd: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0012f57a: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x000818be: and al, 0x30; push edx; push ecx; call eax; 
0x00038ee2: and al, 0x30; push esi; call edi; 
0x00090a32: and al, 0x31; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0015cbd8: and al, 0x31; shr bl, cl; or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x00058d42: and al, 0x32; stc; call dword ptr [esi - 0x77]; 
0x00092d35: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015caa4: and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0006ea72: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0006df0f: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x00123328: and al, 0x34; call dword ptr gs:[0x10]; 
0x000c9f0a: and al, 0x34; call eax; 
0x000c9da8: and al, 0x34; call ecx; 
0x000f9917: and al, 0x34; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00176943: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001151a5: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115355: and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00123358: and al, 0x34; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011527b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210b: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021db: and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0011f4f6: and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc587: and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00108302: and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108458: and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011f5c6: and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f696: and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115172: and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011524e: and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115322: and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153fe: and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001230a6: and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123f75: and al, 0x34; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001020df: and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021af: and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000cd722: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011fb15: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d5e37: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011f52b: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f5fb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6cb: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230db: and al, 0x34; mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0015fed7: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00090986: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010833b: and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010849b: and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000582cd: and al, 0x34; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c3889: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b5b1d: and al, 0x34; push dword ptr [esp + 0x40]; push edi; call esi; 
0x00078204: and al, 0x34; push eax; call ebx; 
0x000b5775: and al, 0x34; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000b53d7: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000b59c3: and al, 0x34; push eax; push edi; call esi; 
0x001305c8: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x0012f608: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x001561bf: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0011415f: and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006de41: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006eaa2: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x001020e8: and al, 0x38; call dword ptr gs:[0x10]; 
0x00123f6d: and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00122292: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121df0: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012240a: and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001151ad: and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011535d: and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00117270: and al, 0x38; mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123316: and al, 0x38; mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00102113: and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021e3: and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0015dc5f: and al, 0x38; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x00107778: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc590: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc5c1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f531: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f601: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6d1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230e1: and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001087c8: and al, 0x38; mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0007f2e8: and al, 0x38; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00151a0d: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x000b612d: and al, 0x38; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000d8fa0: and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00073f29: and al, 0x38; push edi; call dword ptr [edx + 0x1c]; 
0x000b5df1: and al, 0x38; push edi; call esi; 
0x001604be: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000b6131: and al, 0x38; push esi; call ebx; 
0x000c89b2: and al, 0x39; dec edi; and al, 0x75; js 0xc8a18; pop esi; ret; 
0x000ca4d8: and al, 0x39; lds esi, ptr [edx + ebp*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0014374c: and al, 0x39; ret 0x1f7e; 
0x0002567c: and al, 0x39; ret; 
0x000eadcf: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x0012e892: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x000904a0: and al, 0x3a; add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0006debc: and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00141727: and al, 0x3c; call 0x141190; add esp, 0x3c; ret; 
0x00151a13: and al, 0x3c; call 0x151860; add esp, 0x3c; ret; 
0x0015e627: and al, 0x3c; call 0x15e360; add esp, 0x3c; ret; 
0x000dc594: and al, 0x3c; call dword ptr gs:[0x10]; 
0x00081664: and al, 0x3c; call eax; 
0x000fa17f: and al, 0x3c; call esi; 
0x000933e9: and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0012229a: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dc5c5: and al, 0x3c; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f535: and al, 0x3c; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f605: and al, 0x3c; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6d5: and al, 0x3c; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230e5: and al, 0x3c; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001087d2: and al, 0x3c; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x00107780: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00123324: and al, 0x3c; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000b5ded: and al, 0x3c; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00141723: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x141190; add esp, 0x3c; ret; 
0x00151a41: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0015e623: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x15e360; add esp, 0x3c; ret; 
0x0014171f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x141190; add esp, 0x3c; ret; 
0x00151a3d: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0015e61f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x15e360; add esp, 0x3c; ret; 
0x0015ea3e: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0015dc2e: and al, 0x3c; push ebx; call dword ptr [eax + 0x14]; 
0x000817d1: and al, 0x3c; push ecx; call eax; 
0x0008165f: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0007cb9f: and al, 0x3c; push edi; call dword ptr [esi + 0x20]; 
0x0015a51a: and al, 0x3c; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015ff56: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160036: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160099: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f9: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160166: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x0010a3bb: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x0015fee6: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x000c9bc4: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x0006db31: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006ea62: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0002167a: and al, 0x40; call dword ptr [ebp]; 
0x0007efb6: and al, 0x40; call dword ptr [esi + 0xc]; 
0x00021617: and al, 0x40; call eax; 
0x001142cc: and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000da7f8: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0012235b: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d2: and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083124: and al, 0x40; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001553eb: and al, 0x40; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00092913: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092673: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009289f: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092603: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000926b7: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00092707: and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0010777c: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c3c96: and al, 0x40; push dword ptr [eax]; call esi; 
0x0012a023: and al, 0x40; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000b5290: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00076d26: and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000b5b21: and al, 0x40; push edi; call esi; 
0x00092364: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006ea55: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006de76: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00025afe: and al, 0x44; call eax; 
0x001226da: and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016b325: and al, 0x44; mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x001142c8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00069058: and al, 0x44; push edi; call dword ptr [eax + 0x1c]; 
0x00068f6d: and al, 0x44; push edi; call dword ptr [ebx + 0x1c]; 
0x0015a769: and al, 0x44; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00124f5a: and al, 0x46; add byte ptr [eax], al; jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x000b6a96: and al, 0x48; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0015c4d8: and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015c376: and al, 0x48; call dword ptr [eax + 0x14]; 
0x000249e8: and al, 0x48; call eax; 
0x00092917: and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092677: and al, 0x48; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000928a3: and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092607: and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000926bb: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009270b: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00092963: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b3: and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00123407: and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00072d16: and al, 0x48; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0006ddb4: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9f2: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0015dc41: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x000928ae: and al, 0x4c; call dword ptr gs:[0x10]; 
0x00027184: and al, 0x4c; call eax; 
0x0009296d: and al, 0x4c; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929bd: and al, 0x4c; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000e7c46: and al, 0x4c; or byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002b3fe: and al, 0x4c; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00068e0a: and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x00048071: and al, 0x50; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x00049519: and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009aae2: and al, 0x50; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x0011fdbc: and al, 0x50; call dword ptr gs:[0x10]; 
0x0002b40b: and al, 0x50; call esi; 
0x000cd8aa: and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012340b: and al, 0x50; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00123457: and al, 0x50; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00123db7: and al, 0x50; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cd91a: and al, 0x50; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00108c56: and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fd27: and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00108ce6: and al, 0x50; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011fc12: and al, 0x50; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00110351: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102ac: and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0002b407: and al, 0x50; push dword ptr [esp + 0x50]; call esi; 
0x0006e111: and al, 0x50; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0011fc16: and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0012202b: and al, 0x54; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010f884: and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fd2b: and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010f810: and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00026677: and al, 0x54; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0010f8e4: and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00026673: and al, 0x54; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026181: and al, 0x54; push dword ptr [esp + 0x5c]; call edi; 
0x000c3c91: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0006d000: and al, 0x55; call dword ptr [esi + 0x1c]; 
0x000faa19: and al, 0x57; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x000be113: and al, 0x58; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b6596: and al, 0x58; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000ca794: and al, 0x58; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ca52c: and al, 0x58; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x001201cc: and al, 0x58; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00029f8c: and al, 0x58; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d8cb6: and al, 0x58; push dword ptr [esp + 0x1c]; call edi; 
0x0002b403: and al, 0x58; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00029f88: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d8cb2: and al, 0x58; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00139742: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025af6: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249e0: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002255c: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00139746: and al, 0x58; push esi; call edi; 
0x0002ec22: and al, 0x5b; mov eax, edx; ret; 
0x000cb11f: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000385d3: and al, 0x5b; pop esi; ret; 
0x0006dbc8: and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006e9d2: and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ca538: and al, 0x5c; call eax; 
0x00026185: and al, 0x5c; call edi; 
0x00028bde: and al, 0x5c; call esi; 
0x0015fed3: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00110355: and al, 0x5c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001201d6: and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001102b0: and al, 0x5c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00027180: and al, 0x5c; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025af2: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249dc: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028bda: and al, 0x5c; push dword ptr [esp + 0x5c]; call esi; 
0x0002717c: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025533: and al, 0x5c; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0014d968: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000dc1a0: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x001140d8: and al, 0x5c; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00054c37: and al, 0x60; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x001148c6: and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0012278b: and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001601d3: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011f37e: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0015a711: and al, 0x60; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00025afa: and al, 0x60; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249e4: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002552f: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00150792: and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00150892: and al, 0x61; stc; call dword ptr [eax - 0x18]; 
0x0006dd69: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9e2: and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000293d8: and al, 0x64; call edi; 
0x00093141: and al, 0x64; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000b59bf: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000930c9: and al, 0x64; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00025537: and al, 0x64; mov eax, dword ptr [esp + 0x48]; call eax; 
0x001148c2: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0011f37a: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000293d4: and al, 0x64; push dword ptr [esp + 0x64]; call edi; 
0x000b6013: and al, 0x64; push eax; push esi; call ebx; 
0x0015c7be: and al, 0x64; stc; call dword ptr [eax + 0x53]; 
0x0015e7ec: and al, 0x64; stc; call dword ptr [eax - 0x73]; 
0x00081d16: and al, 0x65; mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00081d40: and al, 0x65; mov byte ptr [0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x000b84eb: and al, 0x68; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x00068a58: and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000b6f26: and al, 0x68; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00029f83: and al, 0x68; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028bd5: and al, 0x68; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x000c9d9e: and al, 0x68; push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00027e48: and al, 0x6c; call esi; 
0x00027e44: and al, 0x6c; push dword ptr [esp + 0x6c]; call esi; 
0x0002617c: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000c9da3: and al, 0x6c; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000c9f04: and al, 0x6c; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00103a22: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106182: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x001232ce: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00057de6: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x000df7a2: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e42: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf2: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b2: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x0006ddff: and al, 0x70; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00068634: and al, 0x70; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000d8bec: and al, 0x74; add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000d65e0: and al, 0x74; mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d63b2: and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6428: and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d64e7: and al, 0x74; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d6477: and al, 0x74; mov esi, dword ptr [esp + 4]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000ec956: and al, 0x74; out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x001556f5: and al, 0x74; push eax; call dword ptr [ecx]; 
0x00048570: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000c89b5: and al, 0x75; js 0xc8a18; pop esi; ret; 
0x00067c55: and al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0007b342: and al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x000293cc: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a7c4: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0019898b: and al, 0x80; add byte ptr [eax], al; add cl, ch; dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0019a18c: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0019969c: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x00084415: and al, 0x80; int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x000e6aef: and al, 0x81; les ebp, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0003ef7a: and al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x00121987: and al, 0x83; in al, dx; add al, 0x89; ret; 
0x0007b4eb: and al, 0x83; in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x00155405: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0012d97b: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x12d9b3; call eax; 
0x0012cee2: and al, 0x83; in al, dx; or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x00034fc4: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016b1cf: and al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0007f2f1: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00168253: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00072b0a: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000d6f9d: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000cbf6b: and al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00035f88: and al, 0x83; les ecx, ptr [eax]; ret; 
0x00127b4d: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00072d1f: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000cbef9: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001222cd: and al, 0x83; les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000ff900: and al, 0x83; ret 0x8901; 
0x000c08d0: and al, 0x83; ret; 
0x0008fcd2: and al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x00120832: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001207f6: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b8a0c: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00046b79: and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x0011cd5b: and al, 0x85; ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0009e1f8: and al, 0x85; ror byte ptr [edi], 0x89; push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0009e450: and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x001490cb: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x00149206: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x000be61b: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000b86a4: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0019a242: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x000455f7: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x000dc2b0: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00199671: and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x0010a089: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x00199a2e: and al, 0x89; aad 0x89; ret; 
0x0013d8e1: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000838c1: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013dfe1: and al, 0x89; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00119c83: and al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x0003927f: and al, 0x89; dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000818a1: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001106fd: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x00121d40: and al, 0x89; inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122201: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007e846: and al, 0x89; push eax; add al, 0x5b; ret; 
0x00038f6a: and al, 0x89; push eax; add al, 0xe9; ret; 
0x0016fc7e: and al, 0x89; ret 0x4489; 
0x000f390b: and al, 0x89; ret 0x448b; 
0x00167f17: and al, 0x89; ret 0x748d; 
0x0016dbc5: and al, 0x89; ret 0x808b; 
0x0010941c: and al, 0x89; ret 0x8b8; 
0x0011e47d: and al, 0x89; ret 0xc483; 
0x000414ac: and al, 0x89; ret 0xe283; 
0x0005733a: and al, 0x89; ret 0xfa29; 
0x0003017a: and al, 0x89; ret; 
0x0009095c: and al, 0x89; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x00069571: and al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x0007dedc: and al, 0x8b; adc esi, esi; ret 0xf08; 
0x000e92c3: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x000f5f2a: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f5f3f: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0014c175: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00121d3c: and al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224cc: and al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00139187: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00156877: and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x00122407: and al, 0x8b; inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015119a: and al, 0x8b; je 0x1511c2; sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1511cc; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x00155f36: and al, 0x8b; je 0x155f5e; and byte ptr [ebp - 0xc3f6f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0004a6ba: and al, 0x8b; jo 0x4a6e6; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004a963: and al, 0x8b; jo 0x4a98f; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x000455f4: and al, 0x8b; mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x00082d7b: and al, 0x8b; pop eax; or al, 0xe8; mov esp, 0x390005ae; ret; 
0x000d263b: and al, 0x8b; pop eax; sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x000f9846: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0015ff41: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0016abf8: and al, 0x8b; push esp; and al, 0x24; call edx; 
0x0006dc7d: and al, 0x8c; add byte ptr [eax], al; add al, ch; leave; ret 0xffff; 
0x0019a17b: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x0004cfc8: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0019805a: and al, 0x8c; add byte ptr [eax], al; add dh, dh; ret; 
0x0015cb6d: and al, 0x8d; add dword ptr [ebx + 0x64], -7; call dword ptr [esi + 0x57]; 
0x001220d6: and al, 0x8d; inc esp; and al, 0x14; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000be2d5: and al, 0x8d; jl 0xbe260; add al, 0x81; ret 0; 
0x0004954f: and al, 0x8d; pop edi; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x00109ad2: and al, 0x8d; sbb dword ptr [eax], -0x60; stc; call dword ptr [eax - 0x73]; 
0x000441ce: and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x0004361b: and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00149f9c: and al, 0x8d; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x00086da1: and al, 0x8d; xchg dword ptr [edi + edi*2 - 7], edi; call dword ptr [eax + 0x68]; 
0x00086fc8: and al, 0x8d; xchg dword ptr [edi + edi*2 - 7], edi; call dword ptr [eax - 0x73]; 
0x000bf5e2: and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00101e37: and al, 0x8d; xchg dword ptr [esi + ebx*4 - 7], edi; call dword ptr [eax - 0x73]; 
0x000fa8f1: and al, 0x8d; xchg dword ptr [esi + ebx*4], esi; stc; call dword ptr [eax - 0x73]; 
0x00044379: and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000855c2: and al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x000fa99b: and al, 0x8d; xor dword ptr [esi + ebx*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001078d0: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107f32: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00148ca7: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x00108a15: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00120a66: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000bb93c: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00145a9e: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00199e6b: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00107f39: and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00108b4a: and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00040128: and al, 0x98; add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x00120aa7: and al, 0x9c; add byte ptr [eax], al; add al, ch; jmp dword ptr [edi]; 
0x000bc3cc: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x000bc6a1: and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x0008df97: and al, 0x9c; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x00092278: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00120a6d: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x12c], bh; call dword ptr gs:[0x10]; 
0x0008d320: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010afbd: and al, 0xa0; stc; call dword ptr [eax - 0x73]; 
0x0011e869: and al, 0xa2; stc; call dword ptr [eax - 0x18]; 
0x001603ac: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x1603d8; sbb al, 0x53; call eax; 
0x000f1992: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx - 0x17fbdbbc], cl; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x0014808f: and al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x0015a4e4: and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0014b322: and al, 0xad; stc; call dword ptr [edx - 0x73]; 
0x000ca798: and al, 0xb4; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x001200cd: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx + 0xb0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00090eaf: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108656: and al, 0xb8; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00038670: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108596: and al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b956: and al, 0xb8; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f5: and al, 0xb8; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012214b: and al, 0xb8; sbb eax, 0xf000000; inc ebp; ret; 
0x0010f706: and al, 0xb8; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001385d3: and al, 0xb; stc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0016fafa: and al, 0xbc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000d1618: and al, 0xbc; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00107393: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c86d: and al, 0xc7; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0008034f: and al, 0xc; add byte ptr [eax], al; ret; 
0x000b704c: and al, 0xc; add byte ptr [edi + edi*2 - 0x7d], dh; ret; 
0x001633da: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000dd1c9: and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0003b9b0: and al, 0xc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00037865: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873c0: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00071081: and al, 0xc; add esp, 0x1c; ret; 
0x00099400: and al, 0xc; call dword ptr [edx]; 
0x00082719: and al, 0xc; call dword ptr gs:[0x10]; 
0x0012095b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209ab: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x001209fb: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x00082719: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000d8c3c: and al, 0xc; call eax; 
0x0002cbed: and al, 0xc; call edx; 
0x000d7bc0: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000361a7: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00035ffd: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035a7b: and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x000361e6: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00162b69: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621d9: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00087d36: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0016e031: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x00083878: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003a8ff: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00157a82: and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000d5e02: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000dd219: and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x00162cfd: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d15: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157975: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015795d: and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00092f9a: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000d64ed: and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x0010a4f4: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0011fb62: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0011f92f: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000d6270: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f991b: and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00121df4: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cd72a: and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00121644: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0010872d: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011f962: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00109589: and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00110104: and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0012073d: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208bd: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001207fd: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00103532: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ce54: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceb4: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd84: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110134: and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x0011c91a: and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001213e4: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00099342: and al, 0xc; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x001570f2: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x264]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00035c88: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0012a70d: and al, 0xc; mov eax, dword ptr [esp + 0x14]; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x0013ffa3: and al, 0xc; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0011419b: and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x0011fdb8: and al, 0xc; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00109585: and al, 0xc; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00058467: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012187b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012147b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0010800b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010932b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011318b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4bb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114dab: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012152b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012122b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd26b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109ebb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce7b: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cedb: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdab: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00087e6a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00087ea5: and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00070fbb: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0012448a: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008ddfa: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8de10; ret; 
0x00122df7: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db1: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d45: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008cbbb: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001151a9: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115359: and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x000684fd: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x000687fd: and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00035a46: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x00080e44: and al, 0xc; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x000b2114: and al, 0xc; pop ebx; pop esi; ret; 
0x00193db4: and al, 0xc; pop edi; ret; 
0x0012a485: and al, 0xc; push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x000d8cae: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0013973e: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000d5e95: and al, 0xc; push ebp; push ebx; call eax; 
0x0016f780: and al, 0xc; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007bba7: and al, 0xc; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0002160d: and al, 0xc; push edx; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00162b18: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00162b6d: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621dd: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00162188: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000d5ff7: and al, 0xc; push edx; push ebx; call eax; 
0x00162538: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00026752: and al, 0xc; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00021675: and al, 0xc; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021612: and al, 0xc; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00064fbc: and al, 0xc; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0014df57: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x001606d4: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071c: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x00036473: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370b9: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x0003b409: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45c: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x00021daa: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x0010357c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x001143d3: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115ff0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x001171ca: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x0011ae74: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00121f30: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x0012221b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x0012295b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122bc4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x0014243a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x00142496: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x00144229: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0015b8ba: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb0f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015f02b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x00161fce: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620be: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162365: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623f5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x00162519: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625b5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dd5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e65: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162ef5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f85: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x0016363d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x0016369d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x00163706: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x00163766: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168152: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x00169927: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x0016999f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016e0bd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176710: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x0003aea8: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b4b9: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b559: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5ac: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x00058393: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x0008f8ca: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000c2f99: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9b19: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d356d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bfd: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x0007cd93: and al, 0xc; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00038bd2: and al, 0xc; sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x00038bae: and al, 0xc; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00162712: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0011bcfe: and al, 0xc; test eax, eax; je 0x11bd08; test edx, edx; jne 0x11bd10; ret; 
0x00082748: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082748: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000dc3ac: and al, 0xc; xor eax, eax; test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000733d7: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x000c9768: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000fe69f: and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0019a6ec: and al, 0xd4; add byte ptr [eax], al; add byte ptr [ecx + 0x7fffe2], al; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x00036245: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x000361ea: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0004c5e2: and al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x000c9bf3: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x00035f85: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x000b58c8: and al, 0xdd; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00074b38: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x0015e2e2: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000f1815: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00099e87: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x66b7780], cl; call dword ptr [eax + 0x68]; 
0x0015ae65: and al, 0xe8; aad 0x52; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00079728: and al, 0xe8; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0015cf13: and al, 0xe8; daa; xor ch, ah; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00129b56: and al, 0xe8; in al, 0x65; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e9856: and al, 0xe8; in al, 0x68; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015b876: and al, 0xe8; les ecx, ptr [eax - 0x14]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012ba36: and al, 0xe8; les ecx, ptr [ebx + 0x4f8bfff8]; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0015a259: and al, 0xe8; loope 0x15a2bb; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001159dc: and al, 0xe8; pop esi; ret 0xfff6; 
0x0014f3f8: and al, 0xe8; push edx; adc edx, esi; jmp dword ptr [ebp - 0x77]; 
0x0014eef8: and al, 0xe8; push edx; push ss; bnd jmp dword ptr [ebp - 0x77]; 
0x00160f78: and al, 0xe8; ret 0xebf1; 
0x000ea5f8: and al, 0xe8; ret 0xfcb0; 
0x000cd5e7: and al, 0xe8; ret; 
0x00099ea4: and al, 0xe8; salc; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x000e9568: and al, 0xe8; shr byte ptr [ebx - 0xd], cl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00157ad5: and al, 0xe8; xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015dab3: and al, 0xe8; xchg dword ptr [esi], esp; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0008fd58: and al, 0xe8; xor byte ptr [ecx - 0x3b7c0001], 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000ca530: and al, 0xec; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x000c8f0f: and al, 0xf0; add byte ptr [eax], al; add al, ch; pop es; ret; 
0x0009997e: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x00151305: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0017175c: and al, 0xf4; call dword ptr [edi - 1]; 
0x0016ca5f: and al, 0xf6; inc ebp; adc byte ptr [esi*2 - 0x5f7d72e8], al; pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x00056ec2: and al, 0xf6; ret 0xf20; 
0x00109b33: and al, 0xf7; fmul dword ptr [ebx - 0x13355]; jmp dword ptr [ebp - 0x77]; 
0x000f0c39: and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x0015cc46: and al, 0xf9; call dword ptr [eax + 0x52]; 
0x000cb1b6: and al, 0xf; mov bh, 0x84; inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x000f0b08: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0003d3ce: and al, 0xf; or dword ptr [ebx + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0003d665: and al, 0xf; scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x00069b22: and al, 0xf; test dword ptr [edx - 0x16000003], ebp; dec edi; jecxz 0x69b2c; jmp dword ptr [esi - 0x70]; 
0x0006d3d2: and al, 0xf; xchg byte ptr [edi], ah; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x00095c34: and al, 0xf; xchg esp, eax; ret 0xff85; 
0x000e7275: and al, 0xf; xchg esp, eax; ret; 
0x0012fdf4: and al, 0xfd; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000920c4: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x00157674: and al, 1; add byte ptr [eax], al; add al, ch; jb 0x1576a7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0010cc3b: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x4f8b; 
0x0008e92e: and al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00121482: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102bbf: and al, 1; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0003743a: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a4c38: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00084866: and al, 2; xor eax, eax; pop ebx; pop edi; ret; 
0x0009a166: and al, 3; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x001633b6: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00081c46: and al, 4; add dword ptr [ebp + ecx + 0x65], esi; mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x0013cc86: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00083be2: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007b3b6: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc86: and al, 4; and eax, 0x7f; ret; 
0x00131096: and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00131086: and al, 4; bswap eax; ret; 
0x000d61ae: and al, 4; call dword ptr gs:[0x10]; 
0x0009b0bc: and al, 4; cmove eax, edx; add eax, 1; ret; 
0x0013dc36: and al, 4; cmp byte ptr [eax + 2], 0; jne 0x13dc48; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00081e21: and al, 4; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x00035c9b: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003614b: and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004c5a7: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035c0a: and al, 4; fscale; fstp st(1); ret; 
0x00035cb6: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0016b388: and al, 4; jmp dword ptr [eax + 0x30]; 
0x00161f81: and al, 4; jmp dword ptr [eax + 4]; 
0x00081cdf: and al, 4; jmp dword ptr [eax]; 
0x000710c4: and al, 4; jmp eax; 
0x0015a1f8: and al, 4; jmp edx; 
0x0008d486: and al, 4; lock dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x0010350c: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x001034f4: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00083cf2: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008cb26: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00090491: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00084006: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c6: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00035c90: and al, 4; mov dword ptr [eax], ecx; ret; 
0x0008cb7f: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008402f: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d62d1: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0004c5de: and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000d61a1: and al, 4; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6025: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d5ec2: and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001214fc: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00121698: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001216fc: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f26c: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001213a8: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001093ac: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001214c8: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012172c: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00116b08: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012179c: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217cc: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x00083b9a: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x83bb0; ret; 
0x001217fc: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00121828: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000d65e8: and al, 4; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d66b1: and al, 4; mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d6560: and al, 4; mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000dc638: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003777c: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fdc: and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010a578: and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c8: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116928: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ddf6c: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00107d98: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00107d98: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00116958: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001092fc: and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x0011612c: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x001148ca: and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0010a45c: and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001216c8: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00116e8c: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ffc: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107dec: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00121d43: and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011ea78: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e58: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121258: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb8: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121668: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0011624c: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dc088: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000360f6: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00121408: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf38: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d8: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012128c: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0011f4b8: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0011f4b8: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00108f5c: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ddfe8: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a1bc: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1ec: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011a218: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f96ec: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f971c: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000f9778: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c8: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f8: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000f9882: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0011eaac: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010a518: and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001212bc: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212ec: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037dac: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001094a8: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ddd0c: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0011ee78: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee98: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011ee98: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001215cc: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00113906: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011cf7c: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf0c: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cddc: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00083ece: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849c7: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00107dbc: and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00121378: and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000deb71: and al, 4; mov eax, 1; test ecx, ecx; js 0xdeb80; ret; 
0x0010a3ec: and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x0014ac76: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f6: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00160ee2: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080376: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0002fe3a: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe5a: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0016e046: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e066: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f6: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e6: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e076: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e36: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f06: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0016e02a: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000f5ec0: and al, 4; mov eax, dword ptr [eax - 0x120]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0002fb50: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fb20: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002faf0: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fa30: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fa90: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002f9a0: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fa60: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fa00: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fc00: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002f9d0: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fac0: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002f970: and al, 4; mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0002f670: and al, 4; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0007a616: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c6: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00093641: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x000936d1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x936e0; ret; 
0x00093681: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x93690; ret; 
0x000d7d96: and al, 4; mov eax, dword ptr [eax]; ret; 
0x0007b3c6: and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007b3e6: and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x00162ff6: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x001221fc: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e7b: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000362b1: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003a8b6: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00036116: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00083886: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000837b6: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00081da0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dc0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081de0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081e00: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00088980: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00088960: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00093620: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x00093600: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000936b0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x000935b0: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x001633d6: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0016e056: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00083ac6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080036: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e006: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de76: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x000d647b: and al, 4; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x001029b6: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00102986: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00139b7e: and al, 4; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00035a7f: and al, 4; ret; 
0x0016e4dc: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x00081bd6: and al, 4; setae al; ret; 
0x0008720a: and al, 4; sete al; movzx eax, al; ret; 
0x0015535d: and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0007e3b6: and al, 4; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0007a5d6: and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007a5f6: and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x0008cea1: and al, 4; test eax, eax; js 0x8ceb0; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x0008b0da: and al, 4; test edx, edx; jne 0x8b0f0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000d6006: and al, 4; test edx, edx; jns 0xd603b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a14f1: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1521: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0006f381: and al, 4; xor eax, eax; cmp edx, 0x85; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00124476: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x124488; ret; 
0x0004c231: and al, 5; adc dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; add eax, ebx; jmp eax; 
0x001600ea: and al, 5; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0013da1a: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x000371bc: and al, 8; call 0x37120; pop ecx; pop edx; ret; 
0x0005846b: and al, 8; call dword ptr gs:[0x10]; 
0x0010885b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x00113867: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146bb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011470b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011839b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183eb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011eddb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0005846b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f07: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x0010353b: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0016b662: and al, 8; call eax; 
0x000dd1d0: and al, 8; call edx; 
0x000b3cf7: and al, 8; cld; pop edi; ret; 
0x00092b02: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x92b50; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00087206: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x000362b5: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035e0b: and al, 8; fld qword ptr [esp + 4]; ret; 
0x000844d8: and al, 8; lea ebx, [ebp + eax*4 + 0x28]; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x000d61aa: and al, 8; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0016e05a: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001638c2: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00083aca: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029ea: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008377d: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0011d023: and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00085b06: and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015a1f4: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00161f7d: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f95: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000d62d5: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012187f: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000926c1: and al, 8; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000dc5c9: and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0012147f: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x001080b2: and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010800f: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54f: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48f: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00105f14: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010932f: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00083cd6: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x0010f8ea: and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00092711: and al, 8; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00038480: and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0011318f: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x001142d0: and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010a4bf: and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114daf: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4f: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121e83: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012152f: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012335c: and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012345b: and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00176947: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012122f: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02f: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131f: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134f: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974f: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159f: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x00038430: and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000dd26f: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109ebf: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8f: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03f: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06f: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5f: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14f: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11f: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00108cee: and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011ce7f: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cedf: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdaf: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0008c6cf: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c5d8: and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b8db: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008375a: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008003a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e00a: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0008afea: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00085a8a: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008afaa: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002de7a: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00121dec: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00035ff9: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00160ede: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0016e026: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0013bcf7: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013bcf7: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x001214f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f268: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121728: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121798: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037778: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf68: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116128: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a458: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e88: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116248: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121288: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f58: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9718: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd08: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf78: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf08: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e8: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00035dd6: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000377b7: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000896ed: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0017da28: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0010f927: and al, 8; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0008cbb7: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00083b96: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x83bb0; ret; 
0x000d6784: and al, 8; mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00123f71: and al, 8; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0008b37a: and al, 8; mov edx, dword ptr [eax]; and edx, 2; je 0x8b390; xor eax, eax; ret; 
0x0011527f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210f: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021df: and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007107d: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x001143cf: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00122bc0: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x0005838f: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x0002fe36: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe56: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00087ddc: and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x00092969: and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b9: and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0003733f: and al, 8; mov esp, ecx; jmp edx; 
0x0010298d: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010dcca: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f56a: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011e3fa: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00087795: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00083cba: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00070fc5: and al, 8; pop ebx; jmp eax; 
0x00162d01: and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d19: and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157979: and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x00157961: and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000759d6: and al, 8; pop ebx; ret; 
0x000b3ccd: and al, 8; pop edi; ret; 
0x000aece4: and al, 8; pop esi; ret; 
0x0012b322: and al, 8; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0007c5f8: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0007043e: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000720f7: and al, 8; push ebx; call dword ptr [eax + 0x1c]; 
0x00072169: and al, 8; push ebx; call dword ptr [ebp + 0x1c]; 
0x0015716d: and al, 8; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00103a3d: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0007c5fc: and al, 8; push esi; call dword ptr [edi + 0x40]; 
0x0002fe9a: and al, 8; ret; 
0x0013da10: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00088a64: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d91c: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015e9c2: and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0006e8b2: and al, 8; sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00155f96: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0015ba30: and al, 8; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00024796: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0011bcda: and al, 8; test eax, eax; je 0x11bce4; test edx, edx; jne 0x11bce8; ret; 
0x0011c4d6: and al, 8; test eax, eax; jne 0x11c510; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00081cd4: and al, 8; test edx, edx; je 0x81ce8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00084928: and al, 8; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000cadd7: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00109367: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000d5db7: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00083c9d: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00086745: and al, 8; xor edx, edx; mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00086a35: and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000827d7: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008278b: and al, 9; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0019bea2: and al, 9; ret 0xe889; 
0x0004ddc3: and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x00035d4c: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003635a: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x001576c4: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001574d8: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0004a4c5: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0007b898: and al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00084350: and al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x001105a9: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000f9ec6: and al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0011498f: and al, byte ptr [ebx + 0x5e5b54c4]; ret; 
0x0017fe7c: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x00182fac: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x00022f96: and al, byte ptr [ebx - 0x17aef314]; and byte ptr [esp + edx + 0x241c8900], al; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000ca9d1: and al, byte ptr [ebx - 0x3776cf3c]; pop ebx; pop esi; pop edi; ret; 
0x000cab44: and al, byte ptr [ebx - 0x3776df3c]; pop ebx; pop esi; pop edi; ret; 
0x00082507: and al, byte ptr [ebx - 0x7a72f314]; jo 0x8258d; stc; call dword ptr [eax - 0x18]; 
0x00139182: and al, byte ptr [ebx]; add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x000d3166: and al, byte ptr [ecx]; ret 0x7c83; 
0x00101b9f: and al, ch; dec ebx; ret 0xffff; 
0x001666b8: and al, ch; ret 0x13; 
0x0009b05e: and al, dl; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x001561b8: and bh, bh; bnd call dword ptr [esi - 0x73]; 
0x0002de40: and bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011a393: and bh, bh; je 0x11a3bb; and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0010a6d5: and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0007b3b9: and bh, cl; ret; 
0x000bd819: and bh, dh; dec dword ptr [ebx - 0x72cfdb84]; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000de2c9: and bl, 0x46; stc; call dword ptr [ebx + 0x50]; 
0x0014a54d: and bl, 0x5f; stc; call dword ptr [eax - 0x18]; 
0x000b9b5a: and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x00035e01: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x00036141: and byte ptr [0x7fffffff], 9; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x0008d41e: and byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x00080479: and byte ptr [eax + 0x19], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00068806: and byte ptr [eax + 0x1fff8c7], 0xe9; jmp ecx; 
0x0009afe7: and byte ptr [eax + 0x31], 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00114432: and byte ptr [eax + 0x36], bh; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0003a726: and byte ptr [eax + 0x50000004], 0xff; je 0x3a753; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x001529b2: and byte ptr [eax + 0x50fff962], 0x6a; push es; call 0x14f970; add esp, 0x1c; ret; 
0x00122170: and byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001169a1: and byte ptr [eax + 0x76], bh; call dword ptr gs:[0x10]; 
0x00116a71: and byte ptr [eax + 0x94], bh; call dword ptr gs:[0x10]; 
0x00038678: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x00037811: and byte ptr [eax + 0xb3], bh; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00171ce7: and byte ptr [eax + 0xc], 0xed; call dword ptr [eax + 0x6a]; 
0x001138d0: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0016e183: and byte ptr [eax + 4], bh; add esp, 0xc; ret; 
0x00109231: and byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0015f9f4: and byte ptr [eax + eax + 0x72e85000], 0xb9; bnd jmp dword ptr [ebp - 0x75]; 
0x00038304: and byte ptr [eax + eax], 0; mov eax, ecx; ret; 
0x000382af: and byte ptr [eax + eax], 0; ret; 
0x00081b4b: and byte ptr [eax - 0x46], 0xe5; call dword ptr [eax - 0x18]; 
0x0011e525: and byte ptr [eax - 0x5f], 0xf9; call dword ptr [eax - 0x73]; 
0x0016b381: and byte ptr [eax - 0x76fffffd], 0x4c; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00080e91: and byte ptr [eax - 0x76fffffd], 0x54; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001201cf: and byte ptr [eax - 0x77000000], 0x44; and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00026e9a: and byte ptr [eax - 7], dh; call dword ptr [eax - 0x18]; 
0x0002eba7: and byte ptr [eax], 0x11; add byte ptr [eax], al; ret; 
0x001737a7: and byte ptr [eax], 0x18; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000b4a4b: and byte ptr [eax], 0x2e; ljmp 0xf02:0x7d41f6ff; inc ebp; ret 0x66c3; 
0x000c7a59: and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000c7b3c: and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0014a525: and byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x0011a6a0: and byte ptr [eax], 0xbb; stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0009a3ee: and byte ptr [eax], 0xc6; call 0x7d4b9af5; add cl, byte ptr [ebp - 0x176f8f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000cdaa8: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15c3df6e], cl; call dword ptr [ecx + 0x52]; 
0x000db7ae: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x5f]; 
0x00195215: and byte ptr [eax], al; add byte ptr [eax], al; add eax, edx; ret; 
0x000de7d0: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0006debe: and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000de708: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x001441c5: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00144182: and byte ptr [eax], al; add byte ptr [ebx - 0x39e7dba4], cl; inc esp; ud0; add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x0002172c: and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x0002174c: and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x0002272c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002274c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00021dcc: and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0002140c: and byte ptr [eax], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000216dd: and byte ptr [eax], al; neg eax; mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x001737a8: and byte ptr [eax], bl; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000411cd: and byte ptr [eax], dh; stc; call dword ptr [eax - 0x18]; 
0x00081d77: and byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; nop; ret; 
0x00124704: and byte ptr [ebp + 0x37], dh; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00191f37: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x191f84; add eax, 0xf; ret; 
0x000d8f9d: and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00191ef7: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x191f64; add eax, 7; ret; 
0x000ff33b: and byte ptr [ebp + 0x7c840fc0], al; add byte ptr [eax], al; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x000eff89: and byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0015e2df: and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0003a362: and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x001456b0: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf0c244c], 0x94; ret 0xa3c; 
0x00145850: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0009bcbf: and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x000dc045: and byte ptr [ebp - 0x14a24f80], cl; call dword ptr [eax - 1]; 
0x000da7d5: and byte ptr [ebp - 0x14bb3f80], cl; call dword ptr [eax - 1]; 
0x0013aefa: and byte ptr [ebp - 0x1a77f040], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x000b796d: and byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 1]; 
0x00113903: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0007d726: and byte ptr [ebp - 0x4e7bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a72f714], al; stc; call dword ptr [eax - 0x75]; 
0x0015f2f0: and byte ptr [ebp - 0x64e8b7f], cl; call dword ptr [eax - 0x73]; 
0x00084b6c: and byte ptr [ebp - 0x6818f80], cl; call dword ptr [eax - 0x18]; 
0x0006ebcf: and byte ptr [ebp - 0x6871f80], cl; call dword ptr [eax - 0x18]; 
0x00121a99: and byte ptr [ebp - 0x6aa317a], cl; call dword ptr [eax - 0x18]; 
0x00121bd1: and byte ptr [ebp - 0x6aa4d7b], cl; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x00081ce2: and byte ptr [ebp - 0x6fffd98c], cl; ret; 
0x000227c2: and byte ptr [ebp - 0x720d8b2e], al; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0013f6c4: and byte ptr [ebp - 0x74dc8640], al; jl 0x13f6f0; sbb byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0014d85d: and byte ptr [ebp - 0x77], ah; add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000ac6a7: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000aafd4: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00143639: and byte ptr [ebp - 0x7cc58740], al; in al, dx; add al, 0x89; ret; 
0x00155a7e: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00155f3a: and byte ptr [ebp - 0xc3f6f80], cl; jmp dword ptr [ebp - 0x75]; 
0x001294f5: and byte ptr [ebp - 0xfcf3f80], cl; call dword ptr [eax - 1]; 
0x00127fc5: and byte ptr [ebp - 0xfe43f80], cl; call dword ptr [eax - 1]; 
0x0012e65b: and byte ptr [ebp - 7], ch; call dword ptr [eax - 0x75]; 
0x0011e79a: and byte ptr [ebp], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x0004837b: and byte ptr [ebx + 0x13c2454], cl; ret; 
0x0013996f: and byte ptr [ebx + 0x237f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000992e6: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x001432cb: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0015dc65: and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x00143aab: and byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0007101e: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005118e: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0007f0b1: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0004864f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0011ffe1: and byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000f8887: and byte ptr [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret; 
0x0007c2d0: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000daba0: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00078236: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0004af74: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000932b2: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00151cb1: and byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000e930a: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00021e55: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011ae71: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x0015e13d: and byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00157c3f: and byte ptr [ebx + 0xb7401f9], al; add esp, 4; pop ebx; pop esi; ret; 
0x000530b7: and byte ptr [ebx + 0xf00887d], al; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x00144482: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x6e8b; 
0x0014d7d5: and byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x0004d1f7: and byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x001407a0: and byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0010cbfc: and byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0013fea3: and byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00098f92: and byte ptr [ebx - 0x17c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8389; 
0x00046cae: and byte ptr [ebx - 0x18], dl; sbb esp, dword ptr [edx - 0x3b7d0000]; adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], cl; ret; 
0x0013ddb7: and byte ptr [ebx - 0x2776df3c], al; pop ebx; pop esi; pop edi; ret 4; 
0x0012a1e5: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x0019cfb7: and byte ptr [ebx - 0x2d7aefb0], cl; je 0x19cfcc; sub esp, 0xc; push eax; call edx; 
0x0009b6ac: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0007dd3a: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00108652: and byte ptr [ebx - 0x47dbdbb4], cl; add al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108592: and byte ptr [ebx - 0x47dbdbb4], cl; add eax, dword ptr [eax]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b952: and byte ptr [ebx - 0x47dbdbb4], cl; arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f1: and byte ptr [ebx - 0x47dbdbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010f702: and byte ptr [ebx - 0x47dbdbb4], cl; test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0008bb39: and byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c33b8: and byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b5557: and byte ptr [ebx - 0x677e], cl; jmp dword ptr [ebp - 0x75]; 
0x0011a6a1: and byte ptr [ebx - 0x6af00007], bh; ret; 
0x000fd41e: and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x00120b85: and byte ptr [ebx - 0x723cf33c], al; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0006ff15: and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0007ded8: and byte ptr [ebx - 0x74dbdb8c], cl; adc esi, esi; ret 0xf08; 
0x00119cd7: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011ed66: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x11ed92; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00109418: and byte ptr [ebx - 0x76dbdbb4], cl; ret 0x8b8; 
0x0013b11d: and byte ptr [ebx - 0x7aefdbac], cl; ror byte ptr [edi], 0x88; mov esi, 0x39000002; ret; 
0x0011b439: and byte ptr [ebx - 0x7afefbb1], al; sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x00119599: and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x0003ae07: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00169896: and byte ptr [ebx], 0x66; stc; call dword ptr [eax - 0x18]; 
0x00106e3c: and byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000fbd01: and byte ptr [ebx], bh; in eax, dx; call dword ptr [edx + 0x6a]; 
0x00129c3e: and byte ptr [ebx], ch; inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x00084908: and byte ptr [ecx + 0x247c8bc1], cl; add al, 0x89; ret 0xe183; 
0x001106fa: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x0005138c: and byte ptr [ecx + 0x434c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00074e4c: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00114468: and byte ptr [ecx + 0x5409], bh; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016277d: and byte ptr [ecx + 0x56], dl; call dword ptr [eax]; 
0x00113446: and byte ptr [ecx + 0x5e5b2850], cl; pop edi; pop ebp; ret; 
0x000cab47: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x000f9955: and byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0013ddba: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x000d5c9d: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00071250: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00057c4c: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0015e87a: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x00109258: and byte ptr [ecx + 0x6b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001169c8: and byte ptr [ecx + 0x76b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e501f: and byte ptr [ecx + 0x8acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00116a98: and byte ptr [ecx + 0x94b8c2], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00079283: and byte ptr [ecx + 0xa486], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00078733: and byte ptr [ecx + 0xa496], cl; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00037838: and byte ptr [ecx + 8], bh; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008405c: and byte ptr [ecx + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x001307fa: and byte ptr [ecx + edx - 0x75], dh; dec ebp; in al, 0x31; fisttp dword ptr [ebx - 0x13377]; jmp dword ptr [ebp - 0x7d]; 
0x000d6138: and byte ptr [ecx - 0x3600f787], al; lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00140964: and byte ptr [ecx - 0x42f43], cl; dec dword ptr [ecx - 0x44373]; jmp dword ptr [ebp - 0x75]; 
0x00141e4b: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000db0cf: and byte ptr [ecx - 0x72611439], cl; je 0xdb0fd; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x00093a48: and byte ptr [ecx - 0x72d7db8c], cl; mov gs, ebx; inc eax; stc; jmp dword ptr [ebp - 0x5f]; 
0x00041498: and byte ptr [ecx - 0x76172c10], cl; ret; 
0x0002afae: and byte ptr [ecx - 0x76ff7422], cl; ret 0xe083; 
0x00026529: and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x000656e7: and byte ptr [ecx - 7], bh; call dword ptr [eax - 0x73]; 
0x00065331: and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0002a558: and byte ptr [ecx - 7], ch; call dword ptr [eax + 0x68]; 
0x0002a3c8: and byte ptr [ecx - 7], ch; call dword ptr [eax - 0x73]; 
0x0016008a: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000dcd42: and byte ptr [ecx], al; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000b2f75: and byte ptr [ecx], al; ret 0x167c; 
0x00109859: and byte ptr [ecx], al; ret; 
0x000f9fa9: and byte ptr [ecx], al; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x000c899d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00159d6c: and byte ptr [ecx], bh; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0002e48f: and byte ptr [ecx], bh; ret 0x4d0f; 
0x00048936: and byte ptr [ecx], bh; ret; 
0x0011a397: and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0011a957: and byte ptr [ecx], bh; sar bh, 1; je 0x11a981; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0007c722: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00068e0c: and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0002eba8: and byte ptr [ecx], dl; add byte ptr [eax], al; ret; 
0x0010aec9: and byte ptr [edi + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x001553ef: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0015a717: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x0012a028: and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000ab377: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a16c7: and byte ptr [edi + 0x5e], bl; ret; 
0x000733de: and byte ptr [edi + 0x6a], dl; call dword ptr [edi + 0x56]; 
0x00183df1: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81fffea6]; ret; 
0x0017cef1: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff15]; ret; 
0x0017a2f1: and byte ptr [edi - 0x18], bl; mov eax, dword ptr [0x81ffff41]; ret; 
0x001567ca: and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00109613: and byte ptr [edi - 0x75], dl; je 0x10963c; xor byte ptr [ebp - 0x6b5977a], cl; call dword ptr [eax - 0x18]; 
0x00126c90: and byte ptr [edi], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x18], -0x10; call dword ptr [eax - 0x18]; 
0x0011a95d: and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000b2ca2: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x00099cd1: and byte ptr [edi], cl; nop; ret 0xc801; 
0x0019220d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x001938b9: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x193970; lea eax, [edx + 7]; ret; 
0x001926d1: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00193491: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x00192724: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x001934f4: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000c89a0: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00102e0a: and byte ptr [edi], cl; test dword ptr [ecx], ebp; add al, 0; add dh, dh; ret 0xf80; 
0x000ac6aa: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00193ceb: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x00193e0b: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001920cc: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000aafd7: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00145682: and byte ptr [edi], cl; xchg esp, eax; ret 0x93c; 
0x0015879b: and byte ptr [edi], cl; xchg esp, eax; ret; 
0x000f6a68: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0015edbb: and byte ptr [edx + 0x50], dl; call edi; 
0x00081ac9: and byte ptr [edx + 0x51], dl; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00136a73: and byte ptr [edx + ebp*8 - 0x17], dh; ret 0xfffc; 
0x000cdb4a: and byte ptr [edx + ebp*8], bh; call dword ptr [eax - 0x73]; 
0x000cdab5: and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; 
0x000cdab5: and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x00026304: and byte ptr [edx - 7], ch; call dword ptr [eax - 0x73]; 
0x00030d26: and byte ptr [edx], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0003899f: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00087d72: and byte ptr [edx], bl; add byte ptr [eax], al; jne 0x87d80; xor eax, eax; pop ebx; ret; 
0x000c3884: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c370a: and byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0011454c: and byte ptr [edx], cl; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0002ec1c: and byte ptr [esi + 0x17], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x000c7aa3: and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x001552a1: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0018e8cc: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000b2f02: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x00193182: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000fe347: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x0009954f: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x9957d; call eax; 
0x000b5087: and byte ptr [esi - 0x18], dl; ret 0xf6b1; 
0x0008e2c5: and byte ptr [esi - 0x1a], bh; call dword ptr [eax - 0x73]; 
0x00041011: and byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x000b4a4c: and byte ptr [esi], ch; ljmp 0xf02:0x7d41f6ff; inc ebp; ret 0x66c3; 
0x00143feb: and byte ptr [esi], cl; add byte ptr [ebx - 0x1380], cl; jmp dword ptr [ebp - 0x75]; 
0x00022f9c: and byte ptr [esp + edx + 0x241c8900], al; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000fa8bf: and byte ptr [esp + esi*4 - 0x7b], dh; ret; 
0x00193e56: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000c8c22: and ch, 0xf; je 0xc8c40; add eax, 2; ret; 
0x000b4fac: and ch, 2; lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x0009af2c: and ch, 2; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b29c: and ch, 2; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b21c: and ch, 2; lea edx, [edx - 0x9a9b0]; cmovne eax, edx; ret; 
0x0009b25c: and ch, 2; lea edx, [edx - 0x9ce90]; cmovne eax, edx; ret; 
0x0009b1dc: and ch, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009a43c: and ch, 2; lea edx, [edx - 0x9e8b0]; cmovne eax, edx; ret; 
0x00099fcc: and ch, 2; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0016f59f: and ch, bl; jmp dword ptr [esi - 0x70]; 
0x00030d27: and ch, byte ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x0019d71a: and ch, byte ptr [edx]; call 0x18de5b20; pop ebx; ret; 
0x000c8c0b: and cl, 0xf; je 0xc8c30; ret; 
0x00073215: and cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x001374cb: and cl, byte ptr [ebp - 0x6a88779]; call dword ptr [ebp - 0x77]; 
0x000fde58: and cl, byte ptr [ebx - 0x143976e9]; mov ebx, 0x9e70838d; stc; call dword ptr [eax - 0x73]; 
0x0011699d: and cl, byte ptr [ebx - 0x47dfdba4]; jbe 0x1169a5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003780d: and cl, byte ptr [ebx - 0x47dfdba4]; mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001093ed: and cl, byte ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0013bca1: and cl, byte ptr [ebx - 0x937b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0009a3ef: and dh, al; call 0x7d4b9af5; add cl, byte ptr [ebp - 0x176f8f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000943ad: and dh, bh; fisttp dword ptr [ecx + 0x21082474]; ret; 
0x0010f9c8: and dh, bh; jmp dword ptr [ebp - 0x75]; 
0x000803cb: and dword ptr [eax + 0x1000019], 0xffffff83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016b13c: and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0016b1dc: and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x28]; 
0x0011d42f: and dword ptr [eax + 0x52], 0xfffffff9; call dword ptr [edx + 0x52]; 
0x0002c201: and dword ptr [eax + 0x71], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00086ab2: and dword ptr [eax + 0x9d], edi; call dword ptr gs:[0x10]; 
0x0019ce63: and dword ptr [eax + 0xc], 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x000376f5: and dword ptr [eax + 0xfffe115], 0x44; ret 0x24e9; 
0x00083be4: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00083a95: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0012835f: and dword ptr [eax + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x2d], -0x10; call dword ptr [eax - 0x18]; 
0x00079732: and dword ptr [eax - 0x19], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00132982: and dword ptr [eax - 0x35], 0xfffffff0; call dword ptr [eax - 0x18]; 
0x0009219c: and dword ptr [eax - 0x41], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x0013ddeb: and dword ptr [eax - 0x73], edx; xchg dword ptr [edi], esi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0011d2f0: and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0008b0e0: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0008b130: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x000c17ab: and dword ptr [eax], 0xffffff98; stc; call dword ptr [eax - 0x73]; 
0x000ccc45: and dword ptr [eax], 0xffffff99; stc; call dword ptr [eax - 0x73]; 
0x0007b3b8: and dword ptr [eax], 0xffffffcf; ret; 
0x00082fae: and dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00108851: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0018bd9e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a15d7: and dword ptr [ebp + 0x748d3a34], ecx; add byte ptr es:[eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000888e1: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008274c: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x00138bb1: and dword ptr [ebp - 7], esp; call dword ptr [esi + 0x6a]; 
0x0011c464: and dword ptr [ebx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0016d1c6: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0013949e: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00078315: and dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0015b482: and dword ptr [ebx + 0x5e5b5cc4], eax; pop edi; pop ebp; ret; 
0x0016d316: and dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0002b7b1: and dword ptr [ebx - 0x17acf314], eax; add eax, 0x890013fc; xor al, 0x24; call ebx; 
0x0005a5da: and dword ptr [ebx - 0x5af43], eax; call dword ptr [eax]; 
0x000e9c10: and dword ptr [ebx - 0x7c72f714], eax; inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0007595f: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00084d39: and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000827d6: and dword ptr [ecx + ecx], 0; add byte ptr [eax], al; pop ebx; ret; 
0x0011d2ef: and dword ptr [ecx], 0x50; stc; call dword ptr [eax + 0x57]; 
0x00138bb0: and dword ptr [ecx], 0x65; stc; call dword ptr [esi + 0x6a]; 
0x00165c2b: and dword ptr [edi + 0x65], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0011c26c: and dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3ae: and dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c458; call eax; 
0x0014cd5b: and dword ptr [edi - 0xa], esi; inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x0007815b: and dword ptr [edi - 5], esi; dec dword ptr [ebp - 0x682e37a]; call dword ptr [eax - 0x73]; 
0x000b5ba7: and dword ptr [edi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x0011771b: and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0003c5cb: and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ea0b7: and dword ptr [edx + 0x48], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x00083c17: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00083c10: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x0016e540: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00037fc8: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x001350a8: and dword ptr [edx + ecx*2], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x6f; bnd call dword ptr [eax - 0x73]; 
0x00139ec9: and dword ptr [edx - 0x12], 0xffffffff; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0011e868: and dword ptr [edx], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00191a1b: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005b51f: and dword ptr [edx], eax; add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x0011d1ab: and dword ptr [esi + 0x4d], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0016581c: and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00124f59: and dword ptr [esi + eax*2], 0xb730000; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0007b341: and dword ptr [esi + edi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00123981: and dword ptr [esi], 0x31570010; call dword ptr [esi + 0x53]; 
0x0007590a: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x00082d69: and dword ptr [esp + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0002fb5f: and eax, 0x1000; ret; 
0x000574eb: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0002fb2f: and eax, 0x100; ret; 
0x00113f0b: and eax, 0x100f; ret; 
0x00113a2a: and eax, 0x10244c8b; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00113aaa: and eax, 0x10244c8b; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x000871ba: and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x00113b2a: and eax, 0x14244c8b; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113baa: and eax, 0x14244c8b; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00192910: and eax, 0x1f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192940: and eax, 0x1ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192970: and eax, 0x1fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002faff: and eax, 0x2000; ret; 
0x0002fa3f: and eax, 0x200; ret; 
0x00086ad4: and eax, 0x20; mov ebx, eax; jne 0x86698; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0007ba12: and eax, 0x2c2474ff; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008d4fa: and eax, 0x38; cmp eax, 8; je 0x8d503; ret; 
0x0002c623: and eax, 0x3ba; add byte ptr [ecx], ch; ret 0xf883; 
0x00192920: and eax, 0x3f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192950: and eax, 0x3ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0003b3ba: and eax, 0x3ff; xor eax, edx; ret; 
0x00192980: and eax, 0x3fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002fa9f: and eax, 0x4000; ret; 
0x0002f9af: and eax, 0x400; ret; 
0x0011d340: and eax, 0x50; stc; call dword ptr [eax + 0x57]; 
0x00083347: and eax, 0x5b000015; mov eax, 0xc; pop esi; pop edi; ret; 
0x0014e542: and eax, 0x5b08c483; ret; 
0x0015e5ad: and eax, 0x63; stc; call dword ptr [ecx + 0x6a]; 
0x0015b6c6: and eax, 0x63; stc; call dword ptr [edx + 0x6a]; 
0x0007a784: and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00192930: and eax, 0x7f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002fc88: and eax, 0x7f; ret; 
0x00192960: and eax, 0x7ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192990: and eax, 0x7fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00035a72: and eax, 0x7fff; or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00036142: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x00035e02: and eax, 0x7fffffff; or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x00036d38: and eax, 0x80000000; ret; 
0x0002fa6f: and eax, 0x8000; ret; 
0x0002fa0f: and eax, 0x800; ret; 
0x0007a5ca: and eax, 0x804; ret; 
0x0007d2ef: and eax, 0x83000001; in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0011d137: and eax, 0x83000005; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0012c447: and eax, 0x83000024; les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000c08cd: and eax, 0x83240401; ret; 
0x0008be56: and eax, 0x83ffffff; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00056898: and eax, 0x950f0100; ret 0x8366; 
0x00199e66: and eax, 0xac898000; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x000dced9: and eax, 0xc; pop ebx; pop esi; ret; 
0x0008b0b6: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00169dc1: and eax, 0xe8ffffff; push esi; jb 0x169dc5; jmp dword ptr [esi - 0x70]; 
0x000a97b7: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a52b7: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00093a0e: and eax, 0xec830019; sbb byte ptr [ebp - 0x66c0b70], cl; call dword ptr [edx - 0x73]; 
0x0006ad13: and eax, 0xf000000; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0008afee: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0019282a: and eax, 0xf; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019d4a4: and eax, 0xfe39ffee; jae 0x19d4b9; lea esi, [esi]; nop; call dword ptr [esi]; 
0x0019285b: and eax, 0xff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192892: and eax, 0xfff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928cb: and eax, 0xffff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00131098: and eax, 0xffff; ror ax, 8; ret; 
0x00113f70: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0011e3de: and eax, 0xfffff000; or eax, edx; ret; 
0x000c17fc: and eax, 0xffffff97; stc; call dword ptr [eax - 0x18]; 
0x00131108: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001310e0: and eax, 0xffffff; ret; 
0x0011e7f8: and eax, 0xffffffa1; stc; call dword ptr [eax - 0x18]; 
0x001171f6: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00093659: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0013cc8b: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00034d3e: and eax, 0xfffffff; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x00156d08: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00156e60: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00084e90: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00084be0: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008471c: and eax, 0xfffffffc; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083b10: and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00085ada: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00085b01: and eax, 0xfffffffe; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00078833: and eax, 1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00098b34: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00194a59: and eax, 1; je 0x1949f4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194b1d: and eax, 1; je 0x194b00; lea eax, [edi - 0x10]; pop edi; ret; 
0x001928e0: and eax, 1; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00081e3f: and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0008375f: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001259e4: and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0012e91b: and eax, 1; pop ebx; ret; 
0x000e8169: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x0002fc0f: and eax, 1; ret; 
0x0002f9df: and eax, 2; ret; 
0x0004acc5: and eax, 2; sub eax, 1; ret; 
0x001928f0: and eax, 3; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0008af91: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011fac3: and eax, 3; ret; 
0x0002facf: and eax, 4; ret; 
0x00192900: and eax, 7; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002f97f: and eax, 8; ret; 
0x001573da: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0016bfba: and eax, dword ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x00157444: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0015744a: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0018bb4e: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005c609: and eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0011864f: and eax, dword ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x0015e740: and eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00081b71: and eax, dword ptr [ebx + 0x5e5b24c4]; ret; 
0x0011436e: and eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x0015b310: and eax, dword ptr [ebx + 0x5e5b6cc4]; pop edi; pop ebp; ret; 
0x00081995: and eax, dword ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x0012238e: and eax, dword ptr [ebx - 0x2776df3c]; pop ebx; pop esi; pop edi; ret; 
0x001214a5: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001214a5: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0003801c: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0002fe98: and eax, dword ptr [esp + 8]; ret; 
0x000942d7: and eax, ebp; arpl word ptr [edi - 0x3b7c0008], di; or al, 0x8d; xor dword ptr [eax - 0x2a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x000359d2: and eax, ecx; ret; 
0x000b286f: and eax, edx; je 0xb2950; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00035d95: and eax, edx; ret; 
0x001935f6: and eax, edx; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x00165c8b: and ebp, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00156deb: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0019dd5e: and ebp, eax; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00075960: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x0009b097: and ebp, esi; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50f3092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00075ff6: and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00086aae: and ebx, 0x40; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00149b42: and ebx, 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0009b059: and ebx, 1; lea edx, [edx - 0xa2fe0]; cmove eax, edx; pop ebx; ret; 
0x0009af79: and ebx, 1; lea edx, [edx - 0xa8370]; cmove eax, edx; pop ebx; ret; 
0x0012f1f9: and ebx, 1; lea edx, [edx - 0xa8390]; cmove eax, edx; pop ebx; ret; 
0x0009b009: and ebx, 1; lea edx, [edx - 0xaa380]; cmove eax, edx; pop ebx; ret; 
0x0012f249: and ebx, 1; lea edx, [edx - 0xaa3a0]; cmove eax, edx; pop ebx; ret; 
0x0009b369: and ebx, 1; lea edx, [edx - 0xac3b0]; cmove eax, edx; pop ebx; ret; 
0x0012f1a9: and ebx, 1; lea edx, [edx - 0xac3d0]; cmove eax, edx; pop ebx; ret; 
0x00125c62: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0014d8a4: and ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x001945ac: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0016f6cf: and ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x0011d47f: and ecx, 0x52; stc; call dword ptr [eax + 0x57]; 
0x0011bf45: and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x00036418: and ecx, 0x7fff0000; mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x000881ae: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000e9496: and ecx, 0x80; cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0008978e: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001310c6: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00131185: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00113fd7: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x0003322a: and ecx, dword ptr [ebx - 0x1cb63]; dec dword ptr [ebp - 0x1f2faf7d]; call dword ptr [eax + 0x6a]; 
0x0014f61c: and ecx, dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x000ff5e4: and ecx, dword ptr [edi]; test byte ptr [ebp - 0x76fffffc], ch; ret 0x44c7; 
0x0008ed1b: and ecx, dword ptr [edx]; add byte ptr [ebp - 0x67d4b7e], cl; call dword ptr [eax - 0x73]; 
0x00022799: and ecx, dword ptr [esp + edx + 0x241c8900]; call esi; 
0x0013d5ee: and ecx, eax; call 0x1fc58f8; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0013cde6: and edi, dword ptr [ecx]; ret 0x4572; 
0x0012197d: and edi, edi; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x0013ec7b: and edi, edi; jmp dword ptr [esi - 0x70]; 
0x000bd6d7: and edi, esi; dec dword ptr [ebx - 0x72cfdb84]; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0014ecbb: and edi, esi; jmp dword ptr [esi - 0x70]; 
0x00084d3a: and edi, esi; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001269a2: and edx, 0x1000; mov eax, edx; ret; 
0x00126040: and edx, 0x100; mov eax, edx; ret; 
0x001268a2: and edx, 0x2000; mov eax, edx; ret; 
0x001266a2: and edx, 0x200; mov eax, edx; ret; 
0x00081c0e: and edx, 0x38; cmp edx, 8; je 0x81c17; ret; 
0x001267a2: and edx, 0x4000; mov eax, edx; ret; 
0x001264a2: and edx, 0x400; mov eax, edx; ret; 
0x0016e216: and edx, 0x60; jne 0x21307; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000360fd: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00126722: and edx, 0x8000; mov eax, edx; ret; 
0x000fa346: and edx, 0xf; mov eax, edx; ret; 
0x0011e3d8: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000787d8: and edx, 0xffffffcf; mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000936e3: and edx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x0012325f: and edx, 0xfffffffc; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x00156d05: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x001262c4: and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x00126522: and edx, 1; mov eax, edx; ret; 
0x0012601d: and edx, 1; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0008b37e: and edx, 2; je 0x8b390; xor eax, eax; ret; 
0x001265a2: and edx, 2; mov eax, edx; ret; 
0x000b368f: and edx, 3; rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00126822: and edx, 4; mov eax, edx; ret; 
0x00126422: and edx, 8; mov eax, edx; ret; 
0x0011dfaf: and edx, dword ptr [eax - 0x73]; add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; 
0x0011dfaf: and edx, dword ptr [eax - 0x73]; add ecx, 0x4b; stc; call dword ptr [eax - 0x18]; ret; 
0x0016e4e1: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0012bc8a: and edx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000b2fb6: and edx, ecx; test edx, edx; je 0xb2f90; bsr ecx, edx; add eax, ecx; ret; 
0x0011d1e1: and esi, 0x4d; stc; call dword ptr [eax + 0x57]; 
0x0013dfe6: and esi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ea0df: and esi, esi; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000cd6b8: and esi, esi; dec dword ptr [ebp - 0x666f37d]; call dword ptr [eax - 0x73]; 
0x000cd6f6: and esi, esi; jmp dword ptr [esi - 0x70]; 
0x00049cd3: and esp, 0x30; stc; call dword ptr [eax - 0x18]; 
0x00108164: and esp, 0xffffff9e; stc; call dword ptr [eax - 0x18]; 
0x00121073: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00151635: and esp, dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00169897: and esp, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x0016af00: arpl bx, bp; jmp dword ptr [esi - 0x70]; 
0x0018feb7: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00156616: arpl cx, di; call dword ptr [eax - 0x18]; 
0x00161d32: arpl cx, di; call dword ptr [eax - 0x73]; 
0x0015e5af: arpl cx, di; call dword ptr [ecx + 0x6a]; 
0x00157710: arpl cx, di; call dword ptr [edx + 0x6a]; 
0x001311f7: arpl dx, si; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0014e308: arpl si, ax; sbb dword ptr [eax - 0x7e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0016acf0: arpl sp, di; jmp dword ptr [esi - 0x70]; 
0x00165c28: arpl word ptr [eax - 0x73], dx; and dword ptr [edi + 0x65], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000794d5: arpl word ptr [eax - 6], di; jmp dword ptr [esi - 0x70]; 
0x001680b6: arpl word ptr [eax], ax; add byte ptr [0xbdf47], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000ba119: arpl word ptr [eax], dx; stc; call dword ptr [ebx - 1]; 
0x000edefe: arpl word ptr [ebx + 0x5e5b4cc4], ax; pop edi; pop ebp; ret; 
0x0015e4bc: arpl word ptr [ebx - 0x137cc3ba], cx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0012598c: arpl word ptr [ebx - 0x6780], cx; jmp dword ptr [ebp - 0x75]; 
0x00075344: arpl word ptr [ebx - 0x7f74f314], ax; mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0003b98c: arpl word ptr [ecx], ax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003b958: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003ba27: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000c89cc: arpl word ptr [edi + 0x5e], bx; ret; 
0x000942d9: arpl word ptr [edi - 0x3b7c0008], di; or al, 0x8d; xor dword ptr [eax - 0x2a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x0011c465: arpl word ptr [esi - 7], dx; call dword ptr [eax + 0x6a]; 
0x0008ce79: arpl word ptr [esi], ax; add byte ptr [eax], al; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000d9aa2: bnd call dword ptr [eax - 0x73]; 
0x0015f6cd: bnd call dword ptr [ebp - 0x73]; 
0x0014b48a: bnd call dword ptr [ebx + 0x50]; 
0x00189188: bnd call dword ptr [ebx - 0x18]; 
0x00155c57: bnd call dword ptr [ecx - 0x73]; 
0x00155a74: bnd call dword ptr [edx + 0x6a]; 
0x001561ba: bnd call dword ptr [esi - 0x73]; 
0x000660ee: bnd jae 0x66db0; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00084259: bnd jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00149b2a: bnd je 0x149b2b; dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x000904e5: bnd je 0x904f3; xor eax, eax; pop ebx; ret; 
0x000a0d3c: bnd je 0xa0d30; pop ebx; pop esi; ret; 
0x000dc0ce: bnd je 0xdc0e0; xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x0006caba: bnd jecxz 0x6cabc; jmp dword ptr [esi - 0x70]; 
0x0015f8e4: bnd jmp dword ptr [ebp - 0x75]; 
0x0014eefc: bnd jmp dword ptr [ebp - 0x77]; 
0x000ffcac: bnd jmp dword ptr [esi - 0x70]; 
0x000aaf4a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x00194073: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x000bb31a: bound eax, qword ptr [ebp - 9]; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x001933aa: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x00147fe4: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x000f6a69: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000ea0b8: bound ecx, qword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000b81b4: bound ecx, qword ptr [ebx]; add byte ptr [ecx + 0x16de49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00083c18: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x00038286: bound edx, qword ptr [ebx]; add byte ptr [0x1edd77], al; mov eax, dword ptr [eax + 0x68]; ret; 
0x001699ba: bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x0014aac4: bound esp, qword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0014aac4: bound esp, qword ptr [eax - 7]; call dword ptr [eax - 0x18]; mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0009b0b9: bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x000b2c50: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000b31da: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000b3340: bsf eax, eax; add eax, edx; ret; 
0x000b2c60: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b2c70: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b2c40: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b3350: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b3360: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b3330: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000b2b8c: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3327: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x0009b0ec: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000b2c80: bsf eax, eax; sub edx, eax; jbe 0xb2cc0; add eax, edi; pop edi; ret; 
0x000b2c93: bsf eax, eax; sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2ca3: bsf eax, eax; sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2cb3: bsf eax, eax; sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0009b100: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000b3195: bsf ecx, ecx; add eax, ecx; ret; 
0x000b29ad: bsf ecx, ecx; sub edx, ecx; jbe 0xb29e0; add eax, ecx; ret; 
0x000a16b3: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000a16c0: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000a16cd: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000a16a9: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x00195205: bsf edx, edx; add eax, edx; ret; 
0x00195211: bsf edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x000b2e74: bsr eax, eax; add eax, ecx; ret; 
0x000b27f5: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000b2943: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000b2f20: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b2f30: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f40: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000b2f80: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x30]; ret; 
0x000b2f70: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f60: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b2f50: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xb2f90; add eax, ecx; ret; 
0x000b2fbc: bsr ecx, edx; add eax, ecx; ret; 
0x000b3014: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000b3051: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000b3060: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0013110f: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00131088: bswap eax; ret; 
0x00157b73: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0004fc50: call 0x1004fc1e; xchg ebp, eax; ret 0xb60f; 
0x00050493: call 0x10050461; xchg edi, eax; ret 0xf039; 
0x000c6b20: call 0x100c6aee; xchg ebp, eax; ret 0xb60f; 
0x000c7381: call 0x100c734f; xchg edi, eax; ret 0xbd39; 
0x0016c0b1: call 0x1015fcb9; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0012fdf2: call 0x102250; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00103411: call 0x102a60; add esp, 0x2c; ret; 
0x00102a21: call 0x1033d0; add esp, 0x2c; ret; 
0x0004931c: call 0x10511b22; add dword ptr [ecx], edi; ret; 
0x00106d1c: call 0x106fa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00106cdf: call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106e3b: call 0x107160; add esp, 0x10; add esp, 0xc; ret; 
0x00106d93: call 0x107160; add esp, 0x1c; ret; 
0x00106c87: call 0x1077f0; add esp, 0x1c; ret; 
0x00120b7e: call 0x107820; add esp, 0x20; add esp, 0xc; ret; 
0x00106cab: call 0x107820; add esp, 0x2c; ret; 
0x00107e26: call 0x107e30; add esp, 0x1c; ret; 
0x00057e3b: call 0x108030; add esp, 0x1c; ret; 
0x00109494: call 0x108170; add esp, 0x1c; ret; 
0x0002170f: call 0x108630; add esp, 0x1c; ret; 
0x0007bfc6: call 0x1087a0; add esp, 0x18; pop ebx; ret; 
0x001747cd: call 0x108c00; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00108e53: call 0x108e60; add esp, 0x1c; ret; 
0x001564aa: call 0x109210; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0019cd40: call 0x10de5144; add esp, 8; pop ebx; ret; 
0x0019cd97: call 0x10de519b; add esp, 8; pop ebx; ret; 
0x0019d39c: call 0x10de57a0; pop ebx; pop esi; pop edi; ret; 
0x0019d6f4: call 0x10de5af8; add esp, 8; pop ebx; ret; 
0x0019da8f: call 0x10de5e93; add esp, 8; pop ebx; ret; 
0x0019dacf: call 0x10de5ed3; add esp, 8; pop ebx; ret; 
0x0019db0f: call 0x10de5f13; add esp, 8; pop ebx; ret; 
0x0019db4f: call 0x10de5f53; add esp, 8; pop ebx; ret; 
0x0019db8f: call 0x10de5f93; add esp, 8; pop ebx; ret; 
0x00035a32: call 0x10ed1b56; or eax, ecx; ret; 
0x001104f3: call 0x110260; add esp, 0x10; add esp, 0xc; ret; 
0x00114d2c: call 0x114c50; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x00114e2e: call 0x114d40; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0011454b: call 0x114f70; add esp, 0x10; add esp, 0xc; ret; 
0x00114405: call 0x114f70; add esp, 0x1c; ret; 
0x00155838: call 0x115fc0; mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x0011771a: call 0x117e40; add esp, 0x10; add esp, 0xc; ret; 
0x00118ef3: call 0x118b80; mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x00119a46: call 0x1193c0; add esp, 0x1c; ret; 
0x0019cd81: call 0x119ff0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011a35f: call 0x11a670; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011a923: call 0x11ac40; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011aeac: call 0x11aec0; add esp, 0x1c; ret; 
0x0011ae18: call 0x11afa0; add esp, 0x1c; ret; 
0x0002c242: call 0x11bcf0; add esp, 0x1c; ret; 
0x0019ccf4: call 0x11bd20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011bfdd: call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011bfad: call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x0011c319: call 0x11c220; add esp, 0x28; pop ebx; ret; 
0x0011c4b1: call 0x11c330; add esp, 0x28; pop ebx; ret; 
0x0011c977: call 0x11c6c0; test eax, eax; je 0x11c988; add esp, 0xc; ret; 
0x0011c991: call 0x11c8f0; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0011edad: call 0x11edc0; add esp, 0x1c; ret; 
0x0011eadd: call 0x1200a0; add esp, 0x1c; ret; 
0x000939d7: call 0x121a30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00123965: call 0x123ea0; add esp, 0x1c; ret; 
0x00124d78: call 0x1244a0; mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012593e: call 0x124de0; pop edx; pop ecx; pop eax; ret; 
0x00124b4c: call 0x124f70; add esp, 0x10; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00124b70: call 0x124f70; add esp, 0x10; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x001252a0: call 0x125170; add esp, 4; ret; 
0x00176a27: call 0x127840; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0012a14e: call 0x129c60; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0012bf7d: call 0x12bd50; add esp, 0x28; pop ebx; ret; 
0x0012e8d2: call 0x12d300; add esp, 0x1c; ret; 
0x0012d4d2: call 0x12d3b0; add esp, 0x18; pop ebx; ret; 
0x0012c446: call 0x12e870; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b317: call 0x12e870; add esp, 0xc; push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00130334: call 0x12f900; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0015505b: call 0x131020; endbr32; ret; 
0x00085a49: call 0x131020; nop; endbr32; xor eax, eax; ret; 
0x0012f157: call 0x131020; nop; nop; endbr32; ret; 
0x00176b7f: call 0x132b60; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176bff: call 0x1335b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176ca7: call 0x1340b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176d97: call 0x1351e0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176dc7: call 0x135810; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00135e5c: call 0x135e70; add esp, 0x1c; ret; 
0x001362ac: call 0x1362c0; add esp, 0x1c; ret; 
0x00137a6d: call 0x136d30; add esp, 0x1c; ret; 
0x00137a53: call 0x136f10; add esp, 0x2c; ret; 
0x00137b89: call 0x137a80; add esp, 0x2c; ret; 
0x001383d1: call 0x137da0; add esp, 0x2c; ret; 
0x00139f28: call 0x139910; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00176e77: call 0x13a0b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0013caf2: call 0x13bdf0; cmp eax, -0xb; je 0x13caf0; add esp, 8; pop ebx; ret; 
0x00141729: call 0x141190; add esp, 0x3c; ret; 
0x0014248f: call 0x1422c0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x00143cdd: call 0x143bb0; add esp, 0x1c; ret; 
0x00145fbf: call 0x145ec0; add esp, 0x18; pop ebx; ret; 
0x0019cde4: call 0x14de51e8; pop ebx; pop esi; ret; 
0x0015012a: call 0x14f970; add esp, 0x1c; ret; 
0x00150149: call 0x14fa30; add esp, 0x1c; ret; 
0x00151a15: call 0x151860; add esp, 0x3c; ret; 
0x00153a3c: call 0x153810; add esp, 0x2c; ret; 
0x0013d5f3: call 0x1565df9; mov eax, 2; ret; 
0x0015501b: call 0x156a30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0015b0c1: call 0x1583b0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00155ca1: call 0x15cc90; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x0015e629: call 0x15e360; add esp, 0x3c; ret; 
0x0015f3da: call 0x15f130; add esp, 0x10; add esp, 0xc; ret; 
0x0015f3bb: call 0x15f230; add esp, 0x10; add esp, 0xc; ret; 
0x0015f7bb: call 0x15f600; add esp, 0x2c; ret; 
0x001638fb: call 0x15fac0; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x001617f5: call 0x161520; add esp, 0x1c; ret; 
0x00156a91: call 0x162670; add esp, 0x1c; ret; 
0x00156a66: call 0x1626a0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00162879: call 0x1626a0; add esp, 0x1c; ret; 
0x00162aa1: call 0x162920; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00080d7e: call 0x16a600; add esp, 0x1c; ret; 
0x0019cbb8: call 0x16b3c0; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x000d8c32: call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000d8d99: call 0x16b3c0; add esp, 0x10; mov eax, edi; call eax; 
0x00139dd4: call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x00139ad0: call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x000236cb: call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x00022798: call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x0002290b: call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f9b: call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x0002b7b6: call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x00139180: call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000818e7: call 0x16b7b0; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x000817f4: call 0x16b870; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0016e1fb: call 0x16e070; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e247: call 0x16e0e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e1e2: call 0x16e0f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00125914: call 0x16e4a1; add eax, 0x1006e7; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00087764: call 0x16e4a1; add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080344: call 0x16e4a1; add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000382a4: call 0x16e4a1; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038284: call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002fee4: call 0x16e4a1; add eax, 0x1f6117; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec4: call 0x16e4a1; add eax, 0x1f6137; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea4: call 0x16e4a1; add eax, 0x1f6157; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b804: call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00022744: call 0x16e4a1; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022724: call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021dc4: call 0x16e4a1; add eax, 0x204237; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021744: call 0x16e4a1; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021724: call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00176874: call 0x16e4a1; add eax, 0xaf787; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174814: call 0x16e4a1; add eax, 0xb17e7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001747e4: call 0x16e4a1; add eax, 0xb1817; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174794: call 0x16e4a1; add eax, 0xb1867; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174764: call 0x16e4a1; add eax, 0xb1897; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174734: call 0x16e4a1; add eax, 0xb18c7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174704: call 0x16e4a1; add eax, 0xb18f7; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001680b4: call 0x16e4a1; add eax, 0xbdf47; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00143fe4: call 0x16e4a1; add eax, 0xe2017; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00131414: call 0x16e4a1; add eax, 0xf4be7; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x0016f0a7: call 0x16e930; add esp, 0x18; pop ebx; ret; 
0x000485c7: call 0x18b50959; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0019d71c: call 0x18de5b20; pop ebx; ret; 
0x0019d74c: call 0x18de5b50; pop ebx; ret; 
0x0019da54: call 0x18de5e58; pop ebx; ret; 
0x00093660: call 0x1c9b969; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0019d296: call 0x1cde569a; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019d44b: call 0x1cde584f; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019d92b: call 0x1cde5d2f; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007b3cb: call 0x1e836d4; ret; 
0x0007b3eb: call 0x1e836f5; ret; 
0x00081e3d: call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0012e919: call 0x1f36c2c; pop ebx; ret; 
0x0013d5f0: call 0x1fc58f8; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000341c3: call 0x20140; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0002bf54: call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011b2fd: call 0x20140; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ebd36: call 0x20140; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0002c6f3: call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007aa83: call 0x20140; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x00103647: call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000832a9: call 0x20140; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0014b3a8: call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00090bb3: call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00093405: call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x00103621: call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00139ec8: call 0x20150; mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x00099685: call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008137b: call 0x20220; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000220af: call 0x22640; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0006956c: call 0x244b1e90; and al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x0015f027: call 0x246a7b2d; or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0019553a: call 0x248dde5c; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00034ef8: call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x0011d5ea: call 0x28585fee; mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x0019cc0d: call 0x2cde5011; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019dd5f: call 0x2cde6163; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ebce: call 0x2ebe0; add esp, 0x1c; ret; 
0x00099fca: call 0x2ef20ce; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0009af2a: call 0x2ef302e; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b1da: call 0x2ef32de; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009b21a: call 0x2ef331e; lea edx, [edx - 0x9a9b0]; cmovne eax, edx; ret; 
0x0009b25a: call 0x2ef335e; lea edx, [edx - 0x9ce90]; cmovne eax, edx; ret; 
0x0009b29a: call 0x2ef339e; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0010361b: call 0x2f0f725; push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00030486: call 0x2ff60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00142192: call 0x304e0; add esp, 0x10; add esp, 0xc; ret; 
0x0015ca46: call 0x304e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000fdd57: call 0x304e0; add esp, 0x18; pop ebx; ret; 
0x00030521: call 0x304e0; add esp, 0x1c; ret; 
0x000304f9: call 0x31140; add esp, 0x2c; ret; 
0x00031949: call 0x31900; add esp, 0x2c; ret; 
0x000966bb: call 0x3204efcc; ret; 
0x000371be: call 0x37120; pop ecx; pop edx; ret; 
0x00038089: call 0x37930; add esp, 0x1c; ret; 
0x00090b91: call 0x37eb0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000385f1: call 0x38570; add esp, 0x1c; ret; 
0x000396a9: call 0x39340; add esp, 0x2c; ret; 
0x00039d4e: call 0x398e0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003a4e4: call 0x3a3f0; add esp, 0x1c; ret; 
0x0016e56d: call 0x3a4c0; add esp, 0x1c; ret; 
0x0003b661: call 0x3b670; add esp, 0x1c; ret; 
0x0003b708: call 0x3b720; add esp, 0x10; add esp, 0xc; ret; 
0x0003b788: call 0x3b7a0; add esp, 0x10; add esp, 0xc; ret; 
0x0003b5dc: call 0x3b7e0; add esp, 0x1c; ret; 
0x0003b60d: call 0x3b810; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0003b63c: call 0x3b860; add esp, 0x1c; ret; 
0x000389ef: call 0x3c560; add esp, 0x1c; ret; 
0x00038a2f: call 0x3c660; add esp, 0x1c; ret; 
0x0003c54a: call 0x3c720; add esp, 0x2c; ret; 
0x0002c50c: call 0x3cc55920; cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0003c5ca: call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c64a: call 0x3d270; add esp, 0x2c; ret; 
0x0003c6ca: call 0x3da60; add esp, 0x2c; ret; 
0x000389cd: call 0x3e2a0; add esp, 0x1c; ret; 
0x0003e236: call 0x3eaf0; add esp, 0x1c; ret; 
0x00084c4b: call 0x400cf52; je 0x84c60; pop ebx; pop esi; pop edi; ret; 
0x0017b5f3: call 0x4095c5eb; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d613: call 0x4095e60b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0017f743: call 0x4096073b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184ac3: call 0x40965abb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0003e296: call 0x41b60; add esp, 0x1c; ret; 
0x00184abe: call 0x42975a29; call 0x40965abb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001773a2: call 0x42ed830d; clc; pop ebx; ret; 
0x00177a02: call 0x42ed896d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177fa2: call 0x42ed8f0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001784e2: call 0x42ed944d; clc; pop ebx; ret; 
0x0002c009: call 0x444490f; add esp, 8; pop ebx; ret; 
0x0003e2f6: call 0x44d50; add esp, 0x1c; ret; 
0x0003563f: call 0x457fc; add byte ptr [ecx], bh; ret 0x430f; 
0x00047cfe: call 0x47840; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0004851d: call 0x484c0; add esp, 0x1c; ret; 
0x000486cc: call 0x485e0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00048710: call 0x48720; add esp, 0x2c; ret; 
0x0004a7ca: call 0x4a7cf; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0004abbe: call 0x4ab70; add eax, ebx; jmp eax; 
0x00145122: call 0x4d8d428; pop ebx; pop esi; ret; 
0x0009365d: call 0x4f1f763; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x001680b5: call 0x516811d; inc edi; fisttp word ptr [ebx]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000546d6: call 0x51e90; add esp, 0x1c; ret; 
0x001311f5: call 0x57550; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011a3a6: call 0x57580; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00057667: call 0x57610; add esp, 0x1c; ret; 
0x00074877: call 0x57630; add esp, 0x1c; ret; 
0x00116fe3: call 0x58070; add esp, 0x10; add esp, 0xc; ret; 
0x00116f21: call 0x58070; add esp, 0x1c; ret; 
0x00057625: call 0x58e80; add esp, 0x1c; ret; 
0x000d711d: call 0x5b0d7122; ret; 
0x000d7249: call 0x5b0d724e; ret; 
0x000de629: call 0x5b0de72b; cmove eax, edx; ret; 
0x001259e3: call 0x5b143a6b; pop esi; pop edi; ret; 
0x00125a83: call 0x5b143b0b; pop esi; pop edi; ret; 
0x00125b23: call 0x5b143bab; pop esi; pop edi; ret; 
0x00125bc3: call 0x5b143c4b; pop esi; pop edi; ret; 
0x00125d03: call 0x5b143d8b; pop esi; pop edi; ret; 
0x00125da3: call 0x5b143e2b; pop esi; pop edi; ret; 
0x00125e43: call 0x5b143ecb; pop esi; pop edi; ret; 
0x00125ee3: call 0x5b143f6b; pop esi; pop edi; ret; 
0x00125f83: call 0x5b14400b; pop esi; pop edi; ret; 
0x001260c3: call 0x5b14414b; pop esi; pop edi; ret; 
0x00083a47: call 0x5b14fecf; pop esi; pop edi; pop ebp; ret; 
0x000990b5: call 0x5b16553d; pop esi; pop edi; pop ebp; ret; 
0x00139567: call 0x5b1859ef; pop esi; ret; 
0x00077efd: call 0x5b244385; pop esi; pop edi; pop ebp; ret; 
0x00033d66: call 0x5b3001ee; pop esi; pop edi; pop ebp; ret; 
0x0014e063: call 0x5b31a4eb; pop esi; pop edi; pop ebp; ret; 
0x0014e679: call 0x5b31ab01; pop esi; pop edi; pop ebp; ret; 
0x00153026: call 0x5b31f4ae; pop esi; pop edi; pop ebp; ret; 
0x000807da: call 0x5b34cc62; pop esi; pop edi; pop ebp; ret; 
0x0008084f: call 0x5b34ccd7; pop esi; pop edi; pop ebp; ret; 
0x0004b22f: call 0x5b5cb9bd; pop esi; pop edi; ret; 
0x00025a95: call 0x5d61b8f5; ret; 
0x00030598: call 0x5d6263f8; ret; 
0x00031a34: call 0x5d627894; ret; 
0x00033c4a: call 0x5d629aaa; ret; 
0x00049ae1: call 0x5d63f941; ret; 
0x00049b37: call 0x5d63f997; ret; 
0x0004d0a6: call 0x5d642f06; ret; 
0x0006a31d: call 0x5d66017d; ret; 
0x0006f729: call 0x5d665589; ret; 
0x0006f81f: call 0x5d66567f; ret; 
0x00079acd: call 0x5d66f92d; ret; 
0x00079b08: call 0x5d66f968; ret; 
0x0007b015: call 0x5d670e75; ret; 
0x0007d069: call 0x5d672ec9; ret; 
0x000839f4: call 0x5d679854; ret; 
0x0008df53: call 0x5d683db3; ret; 
0x0008fbc2: call 0x5d685a22; ret; 
0x0009667c: call 0x5d68c4dc; ret; 
0x00096816: call 0x5d68c676; ret; 
0x00098c32: call 0x5d68ea92; ret 4; 
0x00098fc5: call 0x5d68ee25; ret; 
0x0009a5fe: call 0x5d69045e; ret; 
0x000b65c3: call 0x5d6ac423; ret; 
0x000b6ac3: call 0x5d6ac923; ret; 
0x000c4326: call 0x5d6ba186; ret; 
0x000d16e5: call 0x5d6c7545; ret; 
0x000d6dd0: call 0x5d6ccc30; ret; 
0x000e4877: call 0x5d6da6d7; ret; 
0x000e6347: call 0x5d6dc1a7; ret; 
0x000f60b7: call 0x5d6ebf17; ret; 
0x000f9011: call 0x5d6eee71; ret; 
0x000fdffd: call 0x5d6f3e5d; ret; 
0x001015f6: call 0x5d6f7456; ret; 
0x0010c39d: call 0x5d7021fd; ret; 
0x00112f1d: call 0x5d708d7d; ret; 
0x00117341: call 0x5d70d1a1; ret; 
0x0011b67f: call 0x5d7114df; ret; 
0x0011bda9: call 0x5d711c09; ret; 
0x0011be2b: call 0x5d711c8b; ret; 
0x0011e98c: call 0x5d7147ec; ret; 
0x0012f45f: call 0x5d7252bf; ret; 
0x0013ab20: call 0x5d730980; ret; 
0x0013cc31: call 0x5d732a91; ret; 
0x0014378a: call 0x5d7395ea; ret; 
0x0014e04a: call 0x5d743eaa; ret; 
0x0014e60b: call 0x5d74446b; ret; 
0x0015554a: call 0x5d74b3aa; ret; 
0x00159b98: call 0x5d74f9f8; ret; 
0x00163b8b: call 0x5d7599eb; ret; 
0x0011e9e3: call 0x5e6dc3f9; pop edi; pop ebp; ret; 
0x0004ac7e: call 0x5f6309de; ret; 
0x0004b6cb: call 0x5f63142b; ret; 
0x0004c2fe: call 0x5f63205e; ret; 
0x00057645: call 0x5f980; add esp, 0x1c; ret; 
0x0011e960: call 0x5fdc72c3; pop ebp; ret; 
0x000b2b84: call 0x660b2b89; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x00084f4e: call 0x66c3b; dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00051a65: call 0x67c80; add esp, 0x1c; ret; 
0x0012dda7: call 0x681347ff; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x00057605: call 0x6ced0; add esp, 0x1c; ret; 
0x00023703: call 0x6e86bd95; stc; call dword ptr [eax - 0x73]; 
0x0007d148: call 0x6e936; jmp dword ptr [esi - 0x70]; 
0x000702e6: call 0x701f0; add esp, 0x1c; ret; 
0x0015ccbd: call 0x702d0; add esp, 0x18; pop ebx; ret; 
0x00117cff: call 0x70550; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x000792c7: call 0x70550; add esp, 0x18; pop ebx; ret; 
0x00070f81: call 0x70e80; add esp, 0x1c; ret; 
0x00058355: call 0x71a30; add esp, 0x1c; ret; 
0x00071ecd: call 0x71cf0; add esp, 0x2c; ret; 
0x000794f4: call 0x72e40; add esp, 0x1c; ret; 
0x00079511: call 0x72f80; add esp, 0x1c; ret; 
0x0005759b: call 0x73290; add esp, 0x2c; ret; 
0x00074139: call 0x73f50; add esp, 0x28; pop ebx; ret; 
0x000fa8bc: call 0x7430a344; mov ah, 0x85; ret; 
0x000747bd: call 0x74900; add esp, 0x2c; ret; 
0x000c8c03: call 0x74df100a; pop ss; mov cl, dl; and cl, 0xf; je 0xc8c30; ret; 
0x00073b74: call 0x75530; add esp, 0x1c; ret; 
0x0007866d: call 0x76040; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001637b4: call 0x78dc0; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x000575c6: call 0x79520; add esp, 0x1c; ret; 
0x000575e6: call 0x796f0; add esp, 0x1c; ret; 
0x00079729: call 0x7972e; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x0005756d: call 0x79920; add esp, 0x2c; ret; 
0x00079d65: call 0x79bb0; add esp, 0x1c; ret; 
0x00099f41: call 0x7d4b9645; add cl, byte ptr [ebp - 0x17928f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a041: call 0x7d4b9745; add cl, byte ptr [ebp - 0x1848bf6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a3f1: call 0x7d4b9af5; add cl, byte ptr [ebp - 0x176f8f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b141: call 0x7d4ba845; add cl, byte ptr [ebp - 0x1804ef6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b191: call 0x7d4ba895; add cl, byte ptr [ebp - 0x17ec7f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a07e: call 0x7e4b9782; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009a4fe: call 0x7e4b9c02; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0009a62e: call 0x7e4b9d32; adc byte ptr [edi], cl; inc ebp; ret 0x66c3; 
0x0007b4a4: call 0x7ebb0; add esp, 0x1c; ret; 
0x0007f571: call 0x7f490; add esp, 0x28; pop ebx; ret; 
0x0007fd75: call 0x7f7d0; add esp, 0x18; pop ebx; ret; 
0x00079da3: call 0x7fa50; add esp, 8; pop ebx; ret; 
0x0019d4a2: call 0x7fa50; cmp esi, edi; jae 0x19d4b9; lea esi, [esi]; nop; call dword ptr [esi]; 
0x000809ce: call 0x80910; add esp, 0x18; pop ebx; ret; 
0x00080a0e: call 0x80910; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008776b: call 0x80937789; sub byte ptr [edx], bh; add byte ptr [eax], al; ret; 
0x000de3f1: call 0x810de476; ret; 
0x00080e7f: call 0x810e0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001681ad: call 0x81168214; ret; 
0x001682ad: call 0x81168313; ret; 
0x001169c0: call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a90: call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00109250: call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00170a58: call 0x81be0; mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000dc748: call 0x81be0; mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0008b271: call 0x81c90; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0017b0ad: call 0x8217afe5; ret; 
0x0017c7ad: call 0x8217c6ce; ret; 
0x001833ad: call 0x82183262; ret; 
0x001837ad: call 0x8218365e; ret; 
0x00183ead: call 0x82183d57; ret; 
0x001842ad: call 0x82184153; ret; 
0x0008d61c: call 0x82450; add esp, 0x28; pop ebx; ret; 
0x0008e3dc: call 0x82450; add esp, 0x2c; ret; 
0x000cbf9a: call 0x82700; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001399a6: call 0x82700; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0008044a: call 0x82700; add esp, 0x1c; ret; 
0x00083201: call 0x827f0; add esp, 0x1c; ret; 
0x000871cc: call 0x82b50; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x00078052: call 0x83078057; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008cdd8: call 0x835b0; add esp, 0x1c; ret; 
0x00083740: call 0x83660; add esp, 0x18; pop ebx; ret; 
0x001477ed: call 0x836777ff; in al, dx; adc bh, bh; je 0x14781b; sbb al, 0xe8; ret; 
0x0009a3ae: call 0x838b9ab2; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00083a74: call 0x839a0; add esp, 0x1c; ret; 
0x00126619: call 0x83ed974e; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0016e21b: call 0x8416cd50; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00084f4f: call 0x84d70; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009097f: call 0x861e0; mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000920b1: call 0x87190; xor edx, edx; mov eax, 1; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x000842c7: call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x00087ad5: call 0x87b00; add esp, 0x2c; ret; 
0x00072234: call 0x89072239; ret 0x808b; 
0x000847d5: call 0x893fbbdd; clc; call dword ptr gs:[0x10]; 
0x0008a188: call 0x89820; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008a23d: call 0x89820; add esp, 0x18; pop ebx; ret; 
0x0009ea10: call 0x89f75f16; lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00060933: call 0x8a060932; ret; 
0x000eca24: call 0x8a0ec9dc; ret 0xe883; 
0x0008aeed: call 0x8ad90; add esp, 0x1c; ret; 
0x0014ac62: call 0x8aee0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0008fd59: call 0x8aee0; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00155091: call 0x8b370; add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0002469f: call 0x8b370; add esp, 0x1c; ret; 
0x000829e6: call 0x8bfc20ec; push ecx; adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0005d247: call 0x8c05d220; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0008cc10: call 0x8cbb0; add esp, 0x18; pop ebx; ret; 
0x001026d0: call 0x8d4a9f4; or eax, edx; pop ebx; ret; 
0x0008ce78: call 0x8d4e0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013cbe2: call 0x8d7e3ff3; dec edx; jmp dword ptr [ecx]; 
0x00090dfd: call 0x90640; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000920bd: call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x000924e3: call 0x92430; add esp, 0x18; pop ebx; ret; 
0x00091f51: call 0x92560; add esp, 0x1c; ret; 
0x00092519: call 0x927d0; add esp, 0x2c; ret; 
0x00092549: call 0x92a70; add esp, 0x2c; ret; 
0x000b853e: call 0x941b82cc; ret 0xf883; 
0x000be166: call 0x941bdef4; ret 0xf883; 
0x0009459f: call 0x94360; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009ae00: call 0x9ae10; add esp, 0x1c; ret; 
0x000a125b: call 0x9cb50; add esp, 0x18; pop ebx; ret; 
0x0009a002: call 0x9daf0; add esp, 0x1c; ret; 
0x0009aeb6: call 0x9ea70; add esp, 0x1c; ret; 
0x0009a2ae: call 0xa13a0; add esp, 0x1c; ret; 
0x0003b3b4: call 0xae674c9; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x00033074: call 0xb3440; add esp, 0x1c; ret; 
0x000f9b39: call 0xb3910; add esp, 0x1c; ret; 
0x000b4aeb: call 0xb3c10; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012f395: call 0xb3c10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a112f: call 0xb3c10; add esp, 0x18; pop ebx; ret; 
0x000b5143: call 0xb3d20; add esp, 0x18; pop ebx; ret; 
0x000a14cd: call 0xb3d70; add esp, 0x18; pop ebx; ret; 
0x000938e9: call 0xb3d70; add esp, 0x1c; ret; 
0x0014cd5a: call 0xb4480; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x00130379: call 0xb4c50; add esp, 0x18; pop ebx; ret; 
0x000b509c: call 0xb4fc0; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000c8e4a: call 0xb4fc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130589: call 0xb50b0; add esp, 0x18; pop ebx; ret; 
0x000b549c: call 0xb54b0; add esp, 0x1c; ret; 
0x0003ac1b: call 0xb56c0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000b626a: call 0xb6560; add esp, 0x2c; ret; 
0x000b62ea: call 0xb6a60; add esp, 0x2c; ret; 
0x000b636a: call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63ea: call 0xb7570; add esp, 0x2c; ret; 
0x000b6466: call 0xb83e0; add esp, 0x1c; ret; 
0x000b64c6: call 0xbb330; add esp, 0x1c; ret; 
0x000b6526: call 0xbe010; add esp, 0x1c; ret; 
0x0008d91f: call 0xc039dbad; ret; 
0x000c07b2: call 0xc0920; add esp, 0x1c; ret; 
0x000c07e6: call 0xc1580; add esp, 0x1c; ret; 
0x00099f95: call 0xc24daf99; ret; 
0x0009a4d5: call 0xc24db4d9; ret; 
0x0009aef5: call 0xc24dbef9; ret; 
0x0009cb45: call 0xc24ddb49; ret; 
0x000a12f5: call 0xc24e22f9; ret; 
0x00099f4b: call 0xc24eaf4f; ret; 
0x0009a3fb: call 0xc24eb3ff; ret; 
0x0009b19b: call 0xc24ec19f; ret; 
0x000b58c7: call 0xc35f0; add esp, 0x2c; ret; 
0x00137d79: call 0xc4977d7d; adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x000ca8cd: call 0xc9fb0; add esp, 0x18; pop ebx; ret; 
0x000cdabc: call 0xc9fb0; add esp, 0x1c; ret; 
0x000cbd4f: call 0xcbad0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c9c36: call 0xcbfb0; add esp, 0x1c; ret; 
0x0008f0e9: call 0xccd73f0; ret; 
0x000ce6b8: call 0xce7c0; add esp, 0x2c; ret; 
0x000e9db3: call 0xd17a1; inc dword ptr [ebx - 0x7c72f714]; dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000d158a: call 0xd3530; add esp, 0x2c; ret; 
0x0016cc09: call 0xd3df6; inc dword ptr [ebp - 0x761a8b40]; ret; 
0x000d15ca: call 0xd5bc0; add esp, 0x2c; ret; 
0x000d5d21: call 0xd5e10; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000d5c41: call 0xd5f80; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00170ef7: call 0xd9bc0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00170fa7: call 0xdb630; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dc10f: call 0xdc120; add esp, 0x1c; ret; 
0x000dc155: call 0xdc260; add esp, 0x1c; ret; 
0x000dc135: call 0xdc440; add esp, 0x1c; ret; 
0x0008f783: call 0xdce40; add esp, 0x1c; ret; 
0x000dd3e1: call 0xdd260; add esp, 0x1c; ret; 
0x000ddc15: call 0xdd8f0; add esp, 0x1c; ret; 
0x000dd681: call 0xddc00; add esp, 0x1c; ret; 
0x00087e60: call 0xddc40; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008300d: call 0xddc40; mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00103163: call 0xddc80; or ebx, 0xffffffff; mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000ddfcb: call 0xddf60; add esp, 0x1c; ret; 
0x0004149c: call 0xe087d82a; add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x000b7d9c: call 0xe08f412a; add dword ptr [ecx - 0x74d7dbbc], ecx; inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x000eea92: call 0xe8740; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00143fc9: call 0xe8dc2aed; dec esi; sar dh, 1; jmp dword ptr [esi - 0x70]; 
0x000eeaf2: call 0xe92b0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ebd23: call 0xe9520; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00073f20: call 0xec8a5c9b; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00131183: call 0xf49290; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000f6ab2: call 0xf66e0; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x000740d7: call 0xf8c89f37; add bl, byte ptr [edi + 0x5d]; ret; 
0x000f964f: call 0xf8ec0; add esp, 0x28; pop ebx; ret; 
0x000f9587: call 0xf94d0; add esp, 0x28; pop ebx; ret; 
0x0008e927: call 0xf97f0; mov dword ptr [ebx + 0x124], eax; add esp, 0x18; pop ebx; ret; 
0x00098af1: call 0xfd9c408; inc edi; ret 0xc083; 
0x000f58cd: call 0xfe1ddd4; xchg esp, eax; ret 0xd020; 
0x000ef546: call 0xff9b2a33; inc dword ptr [ebx - 0x7bf00008]; ret; 
0x000862b3: call 0xffc59b9; scasd eax, dword ptr es:[edi]; ret; 
0x000d5dca: call dword ptr [0x10]; cmp eax, -0x26; jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010885e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x0010936c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0011386a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146be: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011470e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011839e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183ee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011c4e6: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011edde: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0012095e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209ae: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x001209fe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x000377bf: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x0005846e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f0a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092b12: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef2: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000caddc: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000de01a: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037784: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107da0: call dword ptr [0x10]; mov ebx, edx; ret; 
0x0010353e: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x001131c0: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000dd277: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008271c: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0013bd01: call dword ptr [0x10]; pop ebx; ret; 
0x0008f1ba: call dword ptr [0x10]; ret; 
0x000e00a4: call dword ptr [eax + 0x10]; 
0x000dfdcf: call dword ptr [eax + 0x14]; 
0x000e00b9: call dword ptr [eax + 0x18]; 
0x00064fc5: call dword ptr [eax + 0x1c]; 
0x000f7635: call dword ptr [eax + 0x20]; 
0x0015bab8: call dword ptr [eax + 0x24]; 
0x0016b1e3: call dword ptr [eax + 0x28]; 
0x00072edd: call dword ptr [eax + 0x2c]; 
0x0007a0f1: call dword ptr [eax + 0x30]; 
0x0007534f: call dword ptr [eax + 0x34]; 
0x0016b3af: call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00076e8b: call dword ptr [eax + 0x40]; 
0x0007c3cd: call dword ptr [eax + 0x48]; 
0x00021693: call dword ptr [eax + 0x50]; 
0x000615fd: call dword ptr [eax + 0x51]; 
0x0005435c: call dword ptr [eax + 0x52]; 
0x00030b75: call dword ptr [eax + 0x53]; 
0x00090c8a: call dword ptr [eax + 0x55]; 
0x0002c35a: call dword ptr [eax + 0x56]; 
0x0003fbd9: call dword ptr [eax + 0x57]; 
0x0006e9ce: call dword ptr [eax + 0x5c2444c7]; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00024caa: call dword ptr [eax + 0x68]; 
0x0006835e: call dword ptr [eax + 0x6a08ec83]; call dword ptr [edi - 0x75]; 
0x00020425: call dword ptr [eax + 0x6a]; 
0x0015ce45: call dword ptr [eax + 0x6a]; add al, ch; xor byte ptr [ecx + esi*8], 0xff; add esp, 0x18; pop ebx; ret; 
0x00154816: call dword ptr [eax + 0x6a]; pop es; call 0x14f970; add esp, 0x1c; ret; 
0x001529b6: call dword ptr [eax + 0x6a]; push es; call 0x14f970; add esp, 0x1c; ret; 
0x0016b65e: call dword ptr [eax + 0x8244c89]; call eax; 
0x00075474: call dword ptr [eax + 0xc]; 
0x000fc028: call dword ptr [eax + 0xf]; 
0x0015528b: call dword ptr [eax + 4]; 
0x001575d0: call dword ptr [eax + 8]; 
0x000f2e4e: call dword ptr [eax - 0x17]; 
0x000218d1: call dword ptr [eax - 0x18]; 
0x00088942: call dword ptr [eax - 0x18]; aaa; outsd dx, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0008a813: call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x000b9b57: call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x0014e17a: call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x000e3e45: call dword ptr [eax - 0x18]; hlt; ret 0xfff3; 
0x00043634: call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x00101337: call dword ptr [eax - 0x18]; inc edx; in eax, 0xf2; jmp dword ptr [esi - 0x70]; 
0x001442fa: call dword ptr [eax - 0x18]; jg 0x1442b4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000e6fba: call dword ptr [eax - 0x18]; jmp dword ptr [esi]; 
0x000df304: call dword ptr [eax - 0x18]; jne 0xdf30e; cmc; jmp dword ptr [esi - 0x70]; 
0x0013dfb4: call dword ptr [eax - 0x18]; lds ebx, ptr [eax]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014d8f1: call dword ptr [eax - 0x18]; mov byte ptr [edi], bl; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014aac7: call dword ptr [eax - 0x18]; mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151dbf: call dword ptr [eax - 0x18]; mov edx, 0xe8ffedda; push ebp; std; jmp dword ptr [esi - 0x70]; 
0x0014b592: call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x0008e718: call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x0013a117: call dword ptr [eax - 0x18]; ret 0x123; 
0x000258b7: call dword ptr [eax - 0x18]; ret 0x9f; 
0x000b61b7: call dword ptr [eax - 0x18]; ret 0xf796; 
0x00058917: call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00117447: call dword ptr [eax - 0x18]; ret 7; 
0x0005c8e6: call dword ptr [eax - 0x18]; ret; 
0x000ffca7: call dword ptr [eax - 0x18]; sar bl, cl; bnd jmp dword ptr [esi - 0x70]; 
0x0008a87c: call dword ptr [eax - 0x18]; std; dec edi; cli; jmp dword ptr [esi - 0x70]; 
0x000895f3: call dword ptr [eax - 0x18]; xchg byte ptr [edx - 6], ah; jmp dword ptr [esi - 0x70]; 
0x0002ee0f: call dword ptr [eax - 0x39]; 
0x001377dc: call dword ptr [eax - 0x42]; 
0x0003e7ee: call dword ptr [eax - 0x45af7c27]; stc; dec dword ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x39]; 
0x0004f5d1: call dword ptr [eax - 0x48]; 
0x00119e1e: call dword ptr [eax - 0x72f3137d]; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00021fa8: call dword ptr [eax - 0x73]; 
0x0015f9f0: call dword ptr [eax - 0x73]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0013a110: call dword ptr [eax - 0x73]; or ebx, 0x5c; stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x00117440: call dword ptr [eax - 0x73]; xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x00033066: call dword ptr [eax - 0x75]; 
0x000659a7: call dword ptr [eax - 0x75]; test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x0016eaee: call dword ptr [eax - 0x76f3137d]; ret; 
0x0003122a: call dword ptr [eax - 0x77]; 
0x00043cee: call dword ptr [eax - 0x7cfb137d]; ret; 
0x0005c668: call dword ptr [eax - 0x7d]; 
0x0002393d: call dword ptr [eax - 1]; 
0x000368ad: call dword ptr [eax]; 
0x00066607: call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x00155bab: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x001561c6: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0012b329: call dword ptr [ebp + 0x14]; 
0x0007216c: call dword ptr [ebp + 0x1c]; 
0x00072d1d: call dword ptr [ebp + 0x24]; 
0x0007fbfa: call dword ptr [ebp + 0x2c]; 
0x0007f1e7: call dword ptr [ebp + 0x30]; 
0x0016f783: call dword ptr [ebp + 0x3c]; 
0x0007ba1a: call dword ptr [ebp + 0x40]; 
0x00170553: call dword ptr [ebp + 0x44]; 
0x0008e41c: call dword ptr [ebp + 0x50]; 
0x00093891: call dword ptr [ebp + 0x51]; 
0x0004807b: call dword ptr [ebp + 0x53]; 
0x000d0819: call dword ptr [ebp + 0x55]; 
0x00057955: call dword ptr [ebp + 0x56]; 
0x00161df9: call dword ptr [ebp + 0x56]; call edi; 
0x000ef42f: call dword ptr [ebp + 0x57]; 
0x00163981: call dword ptr [ebp + 0x6a]; 
0x0007d0cd: call dword ptr [ebp + 0xc]; 
0x0002e3fd: call dword ptr [ebp + 0xe]; 
0x0002ce72: call dword ptr [ebp + 3]; 
0x00118e96: call dword ptr [ebp + 5]; 
0x00079810: call dword ptr [ebp + 8]; 
0x0007633d: call dword ptr [ebp - 0x18]; 
0x00020f4d: call dword ptr [ebp - 0x38]; 
0x000e452f: call dword ptr [ebp - 0x43]; 
0x000f9e0f: call dword ptr [ebp - 0x73]; 
0x00071e97: call dword ptr [ebp - 0x75]; 
0x00084d6f: call dword ptr [ebp - 0x77]; 
0x0012a375: call dword ptr [ebp - 1]; 
0x0002167c: call dword ptr [ebp]; 
0x0012c457: call dword ptr [ebx + 0x14]; 
0x00067dc7: call dword ptr [ebx + 0x1c]; 
0x00158254: call dword ptr [ebx + 0x20]; 
0x0007306a: call dword ptr [ebx + 0x2c]; 
0x00070ac9: call dword ptr [ebx + 0x30]; 
0x00073122: call dword ptr [ebx + 0x34]; 
0x00076639: call dword ptr [ebx + 0x38]; 
0x0005ed89: call dword ptr [ebx + 0x39]; 
0x000774c3: call dword ptr [ebx + 0x40]; 
0x00070442: call dword ptr [ebx + 0x48]; 
0x000589d8: call dword ptr [ebx + 0x50]; 
0x0004fc7d: call dword ptr [ebx + 0x51]; 
0x00060611: call dword ptr [ebx + 0x52]; 
0x000640dc: call dword ptr [ebx + 0x53]; 
0x0002e2bc: call dword ptr [ebx + 0x56]; 
0x0004f9b8: call dword ptr [ebx + 0x57]; 
0x00066a79: call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x000ce000: call dword ptr [ebx + 0x6a]; 
0x00155fa1: call dword ptr [ebx + 0xc]; 
0x0006b316: call dword ptr [ebx + 0xf]; 
0x0007061b: call dword ptr [ebx + 8]; 
0x0005ce79: call dword ptr [ebx - 0x18]; 
0x001195b7: call dword ptr [ebx - 0x18]; ret 0xf4e6; 
0x000809e9: call dword ptr [ebx - 0x18]; test eax, 0x81000eda; ret; 
0x00058275: call dword ptr [ebx - 0x59]; 
0x0005ed7b: call dword ptr [ebx - 0x73]; 
0x0002e976: call dword ptr [ebx - 0x75]; 
0x000c4c3f: call dword ptr [ebx - 0x77]; 
0x000500ee: call dword ptr [ebx - 0x78]; 
0x000659ae: call dword ptr [ebx - 0x7d]; 
0x000659ae: call dword ptr [ebx - 0x7d]; ret; 
0x00102d4d: call dword ptr [ebx - 0x7f]; 
0x000406e1: call dword ptr [ebx - 1]; 
0x0011d4cc: call dword ptr [ebx - 7]; 
0x0002b3f3: call dword ptr [ebx]; 
0x0008b359: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00155643: call dword ptr [ecx + 0x10]; 
0x00156d11: call dword ptr [ecx + 0x18]; 
0x00066100: call dword ptr [ecx + 0x1c]; 
0x000df7c1: call dword ptr [ecx + 0x20]; 
0x0007bc0e: call dword ptr [ecx + 0x40]; 
0x0002f178: call dword ptr [ecx + 0x50]; 
0x0005e53d: call dword ptr [ecx + 0x51]; 
0x0015a764: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0005b7cd: call dword ptr [ecx + 0x52]; 
0x000cdab8: call dword ptr [ecx + 0x52]; push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x00057ff0: call dword ptr [ecx + 0x53]; 
0x000664be: call dword ptr [ecx + 0x6a]; 
0x00154f41: call dword ptr [ecx + 0xc]; 
0x00154f41: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015c060: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0004f555: call dword ptr [ecx + 0xf]; 
0x001553f2: call dword ptr [ecx + 8]; 
0x0004e362: call dword ptr [ecx - 0x18]; 
0x0010b3c0: call dword ptr [ecx - 0x73]; 
0x0003590d: call dword ptr [ecx - 0x75]; 
0x0005e4a2: call dword ptr [ecx - 0x77]; 
0x00064832: call dword ptr [ecx - 1]; 
0x0004eb8a: call dword ptr [ecx]; 
0x0012a719: call dword ptr [edi + 0x14]; 
0x000758ff: call dword ptr [edi + 0x18]; 
0x0006d3df: call dword ptr [edi + 0x1c]; 
0x00170367: call dword ptr [edi + 0x24]; 
0x000fc61a: call dword ptr [edi + 0x29]; 
0x0007ee42: call dword ptr [edi + 0x34]; 
0x0007dd43: call dword ptr [edi + 0x38]; 
0x00077005: call dword ptr [edi + 0x40]; 
0x00170698: call dword ptr [edi + 0x44]; 
0x00076d2d: call dword ptr [edi + 0x48]; 
0x0002efce: call dword ptr [edi + 0x50]; 
0x000333cd: call dword ptr [edi + 0x51]; 
0x00138a39: call dword ptr [edi + 0x52]; 
0x0004e8b2: call dword ptr [edi + 0x53]; 
0x00154add: call dword ptr [edi + 0x55]; 
0x0002ee4d: call dword ptr [edi + 0x56]; 
0x000d07ab: call dword ptr [edi + 0x57]; 
0x000786f2: call dword ptr [edi + 0x68]; 
0x000b974e: call dword ptr [edi + 0x6a]; 
0x0005ad58: call dword ptr [edi - 0x18]; 
0x0008a977: call dword ptr [edi - 0x18]; ret 0x3f; 
0x0013371d: call dword ptr [edi - 0x73]; 
0x000601be: call dword ptr [edi - 0x75]; 
0x0002e36c: call dword ptr [edi - 0x77]; 
0x0006123d: call dword ptr [edi - 0x7d]; 
0x001196c8: call dword ptr [edi - 0x7f]; 
0x0004e710: call dword ptr [edi - 1]; 
0x000ce0a6: call dword ptr [edi]; 
0x001557f0: call dword ptr [edx + 0x10]; 
0x0015e87f: call dword ptr [edx + 0x14]; 
0x00156e65: call dword ptr [edx + 0x18]; 
0x00066899: call dword ptr [edx + 0x1c]; 
0x0005ed82: call dword ptr [edx + 0x2b]; 
0x0016afea: call dword ptr [edx + 0x380]; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0007c6d5: call dword ptr [edx + 0x40]; 
0x00024082: call dword ptr [edx + 0x50]; 
0x0004e3b1: call dword ptr [edx + 0x51]; 
0x000938e5: call dword ptr [edx + 0x51]; push eax; call 0xb3d70; add esp, 0x1c; ret; 
0x0002f83a: call dword ptr [edx + 0x52]; 
0x00053970: call dword ptr [edx + 0x53]; 
0x0005ee94: call dword ptr [edx + 0x56]; 
0x000ce1ab: call dword ptr [edx + 0x57]; 
0x0016aa6b: call dword ptr [edx + 0x68]; 
0x00054652: call dword ptr [edx + 0x6a]; 
0x0015a656: call dword ptr [edx + 0xc]; 
0x001552a4: call dword ptr [edx + 4]; 
0x0015a71a: call dword ptr [edx + 8]; 
0x0012ee18: call dword ptr [edx - 0x17]; 
0x0002e3ba: call dword ptr [edx - 0x18]; 
0x0012ea94: call dword ptr [edx - 0x3f]; 
0x000227cc: call dword ptr [edx - 0x73]; 
0x00035751: call dword ptr [edx - 0x75]; 
0x0005007b: call dword ptr [edx - 0x77]; 
0x0002c23a: call dword ptr [edx - 1]; 
0x00099402: call dword ptr [edx]; 
0x0007516d: call dword ptr [esi + 0x10]; 
0x0012b0df: call dword ptr [esi + 0x14]; 
0x00075997: call dword ptr [esi + 0x18]; 
0x0006d002: call dword ptr [esi + 0x1c]; 
0x0007cba2: call dword ptr [esi + 0x20]; 
0x0010a6dd: call dword ptr [esi + 0x24]; 
0x0007b4f0: call dword ptr [esi + 0x30]; 
0x0002c1e8: call dword ptr [esi + 0x31]; 
0x0007bbab: call dword ptr [esi + 0x3c]; 
0x0007095d: call dword ptr [esi + 0x40]; 
0x0007d2f7: call dword ptr [esi + 0x44]; 
0x0004f864: call dword ptr [esi + 0x50]; 
0x0002e1c5: call dword ptr [esi + 0x51]; 
0x0006c228: call dword ptr [esi + 0x52]; 
0x00021424: call dword ptr [esi + 0x53]; 
0x0004e73c: call dword ptr [esi + 0x56]; 
0x0005bfce: call dword ptr [esi + 0x57]; 
0x0003fba9: call dword ptr [esi + 0x6a]; 
0x0007e897: call dword ptr [esi + 0xc]; 
0x00031855: call dword ptr [esi - 0x18]; 
0x000978dd: call dword ptr [esi - 0x39]; 
0x00155be2: call dword ptr [esi - 0x42]; 
0x0003338a: call dword ptr [esi - 0x73]; 
0x000d53ef: call dword ptr [esi - 0x75]; 
0x00058d25: call dword ptr [esi - 0x77]; 
0x000c5ce0: call dword ptr [esi - 0x78]; 
0x0002dca0: call dword ptr [esi - 1]; 
0x000eea5d: call dword ptr [esi]; 
0x0002154a: call dword ptr gs:[0x10]; 
0x0010885d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x0010936b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x00113869: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146bd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011470d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011839d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183ed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011c4e5: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011eddd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0012095d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209ad: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x001209fd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x000377be: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x0005846d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f09: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092b11: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef1: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000caddb: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000de019: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00037783: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00107d9f: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010353d: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x001131bf: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000dd276: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0008271b: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0013bd00: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0008f1b9: call dword ptr gs:[0x10]; ret; 
0x00021517: call eax; 
0x0016e661: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00027283: call ebx; 
0x000920c5: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0011ed88: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00022916: call ecx; 
0x000c2f3d: call ecx; cmc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000236d3: call edi; 
0x0002cbef: call edx; 
0x0011b227: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012107a: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00022566: call esi; 
0x0011b217: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00066e9f: call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x0002f56c: call ptr [ebx + 0x5e]; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x00073914: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x0002b683: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000584ef: call ptr [ebx + 0x5e]; pop edi; ret; 
0x00037591: call ptr [ebx + 0x5e]; ret; 
0x000de67a: call ptr [ebx + 0x65]; cmp dword ptr [eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x0009b0f3: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x00075763: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x000719c4: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x00058557: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000371c2: call ptr [ecx + 0x5a]; ret; 
0x000a8bf8: call ptr [edi + 0x5b]; ret; 
0x000ab3b2: call ptr [edi + 0x5e]; pop ebx; ret; 
0x00149795: call ptr [edi + ecx]; xchg edi, eax; ret 0xd008; 
0x00192971: call ptr [edi]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0007631d: call ptr [edi]; mov edx, edi; pop edi; pop ebp; ret; 
0x00125942: call ptr [edx + 0x59]; pop eax; ret; 
0x000b3be0: call ptr [esi + 0x5b]; ret; 
0x0003ba5d: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0007185d: call ptr [esi + 0x5f]; ret; 
0x00155b26: cdq; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00168825: cdq; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x0016e663: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0016d860: cdq; cmp ch, bl; dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x0003a8fc: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000d5b38: cdq; loope 0xd5b3a; call dword ptr [ecx + 0x52]; 
0x0006a368: cdq; mov esp, 0xec83001b; or al, 0x8d; nop; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x000b2609: cdq; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000aac13: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00133629: cdq; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00077d89: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00170865: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0011d3ad: cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x000c9c53: cdq; push edx; push eax; call 0xcbfb0; add esp, 0x1c; ret; 
0x0016f7eb: cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007bc0a: cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x000f9c69: cdq; ret; 
0x000d9169: cdq; stc; call dword ptr [eax - 0x18]; 
0x000ccc47: cdq; stc; call dword ptr [eax - 0x73]; 
0x000cc2e2: cdq; stc; call dword ptr [esi + 0x50]; 
0x0016707d: clc; add al, 0x74; ret 0xf883; 
0x0010dcc4: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f564: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00025547: clc; add al, 0x89; ret 0x2374; 
0x00091734: clc; add al, 0xf; inc ebp; ret 0x968b; 
0x0008f0e0: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00083800: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00074029: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000740db: clc; add bl, byte ptr [edi + 0x5d]; ret; 
0x001672da: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x00167789: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, eax; stc; call dword ptr [eax - 0x18]; 
0x000f0c3a: clc; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x0006e021: clc; add ch, byte ptr [ecx]; ret; 
0x000785ca: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000939c3: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x00076f64: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00077d5f: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00162154: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x0014e0a2: clc; add dh, byte ptr [ebp + 0x1a]; mov eax, ecx; ret; 
0x0008cb49: clc; add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0006f294: clc; add dl, byte ptr [eax - 0x77]; ret; 
0x0015b0f4: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0008ce67: clc; add dword ptr [ebp + ecx - 0x7d], esi; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0008fdc8: clc; add dword ptr [ecx], ebx; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008cb79: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084029: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d78a6: clc; add dword ptr [edi + 0x16], edi; pop ebx; pop esi; pop edi; ret; 
0x000d7830: clc; add dword ptr [edi + 0x1c], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0003acd5: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0019d5d4: clc; add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0016d1c3: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0016d313: clc; add dword ptr [edi + 0x21], edi; pop ebx; pop esi; pop edi; ret; 
0x001681d2: clc; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000cbf68: clc; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0014e53f: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0011e8df: clc; add dword ptr [edi + 0x2d], edi; add esp, 8; pop ebx; ret; 
0x0007e117: clc; add dword ptr [edi + 0x35], edi; add esp, 8; pop ebx; ret; 
0x0008295d: clc; add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x00149879: clc; add dword ptr [edi + 0x3b], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00139643: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000723c1: clc; add dword ptr [edi + 0xb], edi; ret; 
0x00058670: clc; add dword ptr [edi + 4], edi; ret; 
0x0014dc8b: clc; add dword ptr [edi], ecx; test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00163827: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00083bcd: clc; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x0013cc8d: clc; add eax, 0xc; ret; 
0x00099443: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x00089c7a: clc; add eax, dword ptr [ecx]; ret 0x8966; 
0x000b26c9: clc; add eax, ecx; pop edi; ret; 
0x000c74f8: clc; add ecx, dword ptr [edi]; pop dword ptr [esi + edi*8 - 1]; call ebx; 
0x00084d2c: clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000ebd0d: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0002bfb2: clc; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00084c4e: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000e7274: clc; and al, 0xf; xchg esp, eax; ret; 
0x0003a361: clc; and byte ptr [ebp + ebp - 0x77], dh; ret 0xc083; 
0x000888e0: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000837a0: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000a16a8: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000f64f8: clc; call dword ptr [eax - 0x73]; 
0x000bcf51: clc; call dword ptr [ebx - 1]; 
0x000f66c2: clc; call dword ptr [ecx + 0x6a]; 
0x0007a8a9: clc; call dword ptr gs:[0x10]; 
0x000d8da2: clc; call eax; 
0x00099613: clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00070cd6: clc; cli; jmp dword ptr [esi - 0x70]; 
0x0012232b: clc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0013caf8: clc; cmc; je 0x13caf0; add esp, 8; pop ebx; ret; 
0x000ca4de: clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0006b073: clc; dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x00066015: clc; dec dword ptr [ebp - 0x418f97c]; jecxz 0x6601d; jmp eax; 
0x000c6ebb: clc; dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x0006b06c: clc; dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x0006600e: clc; dec dword ptr [ebx - 0x3a5f797c]; clc; dec dword ptr [ebp - 0x418f97c]; jecxz 0x6601d; jmp eax; 
0x0012ec54: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x00093408: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000f2b18: clc; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0003844f: clc; dec dword ptr [ecx + 0xf042444]; xchg ebp, eax; ret; 
0x00087dd8: clc; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00048b88: clc; dec dword ptr [edi]; inc esp; ret 0x3c83; 
0x00045225: clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0003ef7c: clc; dec dword ptr [edi]; inc esp; ret 0x489; 
0x0004de97: clc; dec dword ptr [edi]; inc esp; ret 0x8589; 
0x000dc0d4: clc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0002f53a: clc; dec dword ptr [edi]; inc esp; ret; 
0x0006cb0c: clc; dec dword ptr [edi]; test byte ptr [ebx - 0x49f00001], bl; push edi; or al, 0xf6; ret 0xf08; 
0x0006552d: clc; dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x0016e7ea: clc; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0002e7f8: clc; dec dword ptr [edi]; test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x0005d0e2: clc; dec dword ptr [edi]; test dh, ah; ret 0xffff; 
0x000383f7: clc; dec dword ptr [edi]; xchg ebp, eax; ret 0xd321; 
0x0016e623: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00153f09: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x00071908: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000d601f: clc; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d5dd1: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000f9971: clc; fidiv dword ptr [ebp - 0x33]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0011fc71: clc; fidiv dword ptr [ebp - 0x34]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0002fea5: clc; in eax, 0x13; add byte ptr [0x1f6157], al; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0012f398: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012aa1e: clc; inc dword ptr [ebx - 0x3f7cef3c]; sbb al, 0x89; loope 0x12a9b2; ret 0x25; 
0x00094293: clc; inc dword ptr [ebx - 0x7c72f33c]; inc eax; aad 0xe6; call dword ptr [eax + 0x56]; 
0x00094281: clc; inc dword ptr [ebx - 0x7c72f33c]; rcl ch, 0xe6; call dword ptr [eax + 0x56]; 
0x000942ff: clc; inc dword ptr [ebx - 0x7c72f33c]; rcl dh, 0xe6; call dword ptr [eax + 0x56]; 
0x0012f2db: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x000343fd: clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00034669: clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000b48b6: clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00027b84: clc; jl 0x27b87; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x27b8a; call dword ptr [eax - 0x73]; 
0x00075fe4: clc; jl 0x75fe0; call dword ptr [eax - 0x73]; 
0x0008085a: clc; jl 0x80856; call dword ptr [eax - 0x73]; 
0x000933ef: clc; jmp dword ptr [ebp - 1]; 
0x000e97bb: clc; jmp dword ptr [esi + 0xb]; 
0x00170967: clc; jmp dword ptr [esi - 0x70]; 
0x001945aa: clc; jne 0x1945d0; pop edi; pop esi; pop ebx; ret; 
0x000d5deb: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x00026f84: clc; mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x001775a1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f71: clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00185de8: clc; mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000eeae2: clc; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x0012e9fa: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00177a07: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d421: clc; mov eax, edx; pop ebx; ret; 
0x00180b0b: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00181afb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00185deb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00086091: clc; mov esi, edx; call dword ptr gs:[0x10]; 
0x0017b3ec: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d41c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001848cc: clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0008f271: clc; or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0008f433: clc; or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0008f7b9: clc; or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0017674b: clc; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000aabb4: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0011f2e8: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0011f2a7: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00135ec3: clc; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x0012661e: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0011e453: clc; or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x0008925c: clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008852c: clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x000936e7: clc; or edi, dword ptr [eax + 8]; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x00084be8: clc; or edx, 2; call dword ptr gs:[0x10]; 
0x00114d32: clc; pop ds; add esp, 8; pop ebx; ret; 
0x00108729: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000360e0: clc; pop ds; not eax; and eax, edx; ret; 
0x00035d90: clc; pop ds; pop edi; not eax; and eax, edx; ret; 
0x001747d6: clc; pop ds; ret; 
0x000359cc: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000b146a: clc; pop ebx; pop edi; ret; 
0x00119bc1: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002bb6e: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00057c4e: clc; pop ebx; pop esi; pop edi; ret; 
0x001773a7: clc; pop ebx; ret; 
0x000719a9: clc; pop edi; pop ebp; ret; 
0x000a4a52: clc; pop edi; pop ebx; ret; 
0x000ab631: clc; pop edi; pop esi; pop ebx; ret; 
0x000879f8: clc; pop edi; ret; 
0x00149ff8: clc; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000719c7: clc; pop esi; pop edi; pop ebp; ret; 
0x000382a5: clc; popal; adc eax, dword ptr [eax]; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x0008afcf: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015fbe7: clc; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x0007f776: clc; push dword ptr [ebp - 0x40]; add esp, 4; pop ebx; pop esi; ret; 
0x00137449: clc; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x000d8378: clc; push dword ptr [ecx + eax*2 - 0x77]; ret 0xe283; 
0x00070863: clc; push dword ptr [edx + ebp*4 - 0x77]; ret 0xe283; 
0x00121984: clc; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x000936d6: clc; push eax; jbe 0x936e0; ret; 
0x000e7a00: clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x00168f56: clc; stc; call dword ptr [ecx - 0x77]; 
0x00168925: clc; stc; call dword ptr [edx - 0x77]; 
0x00138414: clc; sub al, 0xf; xchg esp, eax; ret; 
0x0005ffab: clc; sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000b2947: clc; sub eax, 0x10; pop edi; ret; 
0x000b3055: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x00083d52: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0012e9ed: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0002b7b8: cld; adc eax, dword ptr [eax]; mov dword ptr [esp], esi; call ebx; 
0x000fafbc: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000de692: cld; add byte ptr [eax], al; pop ebx; ret; 
0x00194914: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001920e0: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000de704: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000c7956: cld; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x30; stc; call dword ptr [eax - 0x18]; 
0x00041073: cld; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0005d202: cld; add eax, dword ptr [eax]; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x00093646: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00123261: cld; add edx, eax; cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x00156d07: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00054683: cld; call dword ptr [eax - 0x77]; 
0x0016a13e: cld; call dword ptr [ebp + 0x57]; 
0x00166d4e: cld; call dword ptr [ebp - 0x77]; 
0x000f64f7: cld; clc; call dword ptr [eax - 0x73]; 
0x00190346: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x190590; pop ebx; ret; 
0x0018eb9f: cld; cmp ecx, ebx; mov eax, 0; jne 0x18f320; pop ebx; ret; 
0x00191a11: cld; cmp ecx, ebx; mov eax, 0; jne 0x191c40; pop ebx; ret; 
0x00139242: cld; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0016ef5a: cld; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00167773: cld; dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x64c4379]; call dword ptr [eax - 0x73]; 
0x000f3904: cld; inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x00119796: cld; inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x00099d99: cld; inc esi; or eax, 0x63c38100; ret 0x18; 
0x000563b1: cld; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x0010ac93: cld; jmp dword ptr [ebp - 0x77]; 
0x000563d6: cld; jmp dword ptr [esi - 0x70]; 
0x001945c5: cld; jne 0x1945d0; pop edi; pop esi; pop ebx; ret; 
0x001946b7: cld; jne 0x1946c0; pop ebx; ret; 
0x0002e3f7: cld; jno 0x2e3f3; call dword ptr [eax - 0x18]; 
0x0002e7e4: cld; jno 0x2e7e0; call dword ptr [eax - 0x18]; 
0x00156d0a: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0014b316: cld; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0002ccee: cld; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x00178df9: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0017b3b4: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e4: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00184894: cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017b405: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d435: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001848e5: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00190349: cld; mov eax, 0; jne 0x190590; pop ebx; ret; 
0x001775a4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017945d: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00178dfd: cld; mov eax, edx; pop ebx; ret; 
0x00130f1d: cld; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00163098: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00026ebd: cld; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00176f74: cld; pop ebx; ret; 
0x000b3651: cld; pop edi; ret; 
0x0010b124: cld; pop es; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00156e62: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00156ded: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00087080: cld; xchg edx, edi; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8710a; stc; call dword ptr [eax - 0x73]; 
0x001946b2: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1946c0; pop ebx; ret; 
0x00058b6f: cld; xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x00084e92: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00084be2: cld; xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008471e: cld; xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0003af6f: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x0014860d: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x00033ab0: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000de666: cli; add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; inc esp; ret 0x90c3; 
0x0014dc8f: cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x000de72d: cli; add byte ptr [ecx], al; sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x00075a84: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000d442d: cli; add ch, byte ptr [ecx]; ret 0x348d; 
0x000d290d: cli; add ch, byte ptr [ecx]; ret 0x3c8d; 
0x000ce787: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x00084cc7: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x001034ee: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00084706: cli; add dh, byte ptr [edx + edx - 0x77]; ret 0xe283; 
0x00083ba2: cli; add dh, byte ptr [esi + 0xa]; ret; 
0x00084bc6: cli; add dh, byte ptr [esi + edx - 0x77]; ret 0xe283; 
0x00133c49: cli; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x0008b121: cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00070277: cli; add dword ptr [edi + 0x1d], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001682dc: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x00087383: cli; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0004a4c2: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00139971: cli; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00168250: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00083a8d: cli; add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009d22f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x0008bbee: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], edx; ret 0xf283; 
0x0008bdfe: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000bf976: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xd020; 
0x0004387a: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xd120; 
0x00198784: cli; add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x000c37a8: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xc085; 
0x000c37e4: cli; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000fa8be: cli; and byte ptr [esp + esi*4 - 0x7b], dh; ret; 
0x0007a783: cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0008172c: cli; call dword ptr [eax + 0x6a]; 
0x00104abd: cli; call dword ptr [edi - 1]; 
0x0003836e: cli; call dword ptr gs:[0x10]; 
0x000f2b17: cli; clc; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x001597a9: cli; cli; jmp dword ptr [ebp - 0x77]; 
0x000de838: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x001291f1: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0009d7eb: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000f6c87: cli; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008ed38: cli; dec dword ptr [ebp - 0x67d4b7e]; call dword ptr [eax - 0x73]; 
0x0008a862: cli; dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax - 0x73]; 
0x00088909: cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x00089300: cli; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x000885d0: cli; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x00085d4d: cli; dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x000d64e3: cli; dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00086fc4: cli; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8704c; stc; call dword ptr [eax - 0x73]; 
0x00086fe6: cli; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8706e; stc; call dword ptr [eax - 0x73]; 
0x00087082: cli; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8710a; stc; call dword ptr [eax - 0x73]; 
0x000dc74b: cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00159826: cli; dec dword ptr [ecx + 0x24448bc7]; sbb byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x0014eab9: cli; dec dword ptr [edi]; test bl, dl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x00145d19: cli; dec dword ptr [edi]; test byte ptr [edi], ah; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x001627e2: cli; fsub st(4), st(0); call dword ptr [eax - 0x73]; 
0x000de5d7: cli; inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x000dc76d: cli; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0007aa86: cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x000d9afd: cli; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00070f49: cli; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x001649be: cli; inc dword ptr [ebx - 0x7cef3c]; push dword ptr [edi + edx - 0x75]; jnp 0x41a1ea24; or byte ptr [ecx], bh; ret 0x2c75; 
0x00072861: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a14f6: cli; inc eax; ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1526: cli; inc eax; ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0011f952: cli; je 0x11f9a4; pop ebx; pop esi; ret; 
0x00085e10: cli; jmp dword ptr [ebp - 0x5f]; 
0x001597aa: cli; jmp dword ptr [ebp - 0x77]; 
0x00136f94: cli; jmp dword ptr [esi - 0x3f]; 
0x000707c8: cli; jmp dword ptr [esi - 0x70]; 
0x00085ea3: cli; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001849b4: cli; mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000d64ea: cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001081ff: cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003847d: cli; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003842d: cli; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00108ceb: cli; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00122cdc: cli; mov edi, ebp; call dword ptr gs:[0x10]; 
0x001775e4: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fb4: cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b4e7: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d507: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001849b7: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000f3902: cli; or al, 0xfc; inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x000bca31: cli; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x000fb74a: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x0003fe04: cli; or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0009a0d1: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00125c76: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x0013efcb: cli; pcmpeqd mm7, qword ptr [ecx - 0x75]; add dword ptr [ecx], edi; ret 0x7372; 
0x0010fa8f: cli; pop ds; call dword ptr gs:[0x10]; 
0x000762d6: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007cd7f: cli; pop edi; pop ebp; mov eax, edx; ret; 
0x00076320: cli; pop edi; pop ebp; ret; 
0x001927a2: cli; pop edi; ret; 
0x0016f904: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x001512ff: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00170472: cli; push dword ptr [edx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000d7452: cli; ret; 
0x000e79fd: cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x00144467: cli; sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x0002c2c8: cli; sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x0006f386: cli; test dword ptr [eax], eax; add byte ptr [eax], al; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000a8fc7: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b2e47: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c8c21: cmc; and ch, 0xf; je 0xc8c40; add eax, 2; ret; 
0x0011ed87: cmc; call ebx; 
0x0011ed87: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00161ab4: cmc; call ecx; 
0x000e4a31: cmc; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000de703: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x001226a6: cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000a0d3a: cmc; cmp edx, esi; je 0xa0d30; pop ebx; pop esi; ret; 
0x000df2ed: cmc; dec dword ptr [ebp - 0x665a77b]; call dword ptr [eax - 0x73]; 
0x00122277: cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012232c: cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0009af5a: cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0011d8f6: cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0011bf3e: cmc; dec dword ptr [ebx - 0x72ebdbb4]; and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x0011c269: cmc; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3ab: cmc; dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c458; call eax; 
0x0009afc5: cmc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009af80: cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x001575c3: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x00156e0b: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x000c2f3f: cmc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00117d02: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0009b007: cmc; inc dword ptr [ebx - 0x6d72fe1d]; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0012f1a7: cmc; inc dword ptr [ebx - 0x6d72fe1d]; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x0012777d: cmc; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013caf9: cmc; je 0x13caf0; add esp, 8; pop ebx; ret; 
0x000de20d: cmc; jge 0xde224; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x00122e7f: cmc; jmp dword ptr [ebp - 0x75]; 
0x000c48ac: cmc; jmp dword ptr [esi - 0x70]; 
0x000de839: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00128307: cmc; mov dword ptr [0xc483fff5], eax; adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x00176fd1: cmc; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0009c432: cmc; mov eax, ecx; ret; 
0x0007ca37: cmc; mov ebx, 0xc4830008; adc byte ptr [ebp + 0x292678c0], al; ret; 
0x00177ab7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177437: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000b311a: cmc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a0d0a: cmc; pop ebx; ret; 
0x00137fcd: cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00192762: cmc; pop edi; ret; 
0x0009b098: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50f3092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f288: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5153092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009afb8: cmc; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5155092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00119d0d: cmc; ret 0x10; 
0x0012f90c: cmc; sldt word ptr [ebx - 0x7f72e714]; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x00191767: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000936ee: cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x0008cbdf: cmova eax, edx; ret; 
0x000d7bc4: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011727d: cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d7a23: cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b43b5: cmovb eax, ecx; ret; 
0x00080a30: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00076153: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0012326b: cmovb eax, edx; ret; 
0x0018e1ba: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000b33bf: cmovbe eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x00087298: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000f9a2a: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00081bcf: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0008d4b8: cmove eax, ecx; ret; 
0x0009b109: cmove eax, edx; add eax, 0x21; ret; 
0x0009b0be: cmove eax, edx; add eax, 1; ret; 
0x0011c99d: cmove eax, edx; add esp, 0xc; ret; 
0x0003e353: cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0015342d: cmove eax, edx; pop ebx; pop esi; ret; 
0x0009af82: cmove eax, edx; pop ebx; ret; 
0x00083bd9: cmove eax, edx; ret; 
0x00092b34: cmove ecx, eax; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x0002f56f: cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x00037640: cmove edx, eax; mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0002eb9d: cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x000dc2b7: cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0003ad6c: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x0003ada7: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0011fdb3: cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00093147: cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00074e27: cmovg eax, ecx; test edx, edx; jne 0x74e20; ret; 
0x0007e5f7: cmovg eax, ecx; test edx, edx; jne 0x7e5f0; ret; 
0x000b4c42: cmovg eax, edx; pop edi; ret; 
0x000b4c23: cmovg eax, edx; ret; 
0x00098b37: cmovne eax, ecx; pop ebx; ret; 
0x00078357: cmovne eax, ecx; ret; 
0x000b6207: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009dadb: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00074ed5: cmovne eax, edx; mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0007edc1: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000e949c: cmovne eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0012a978: cmovne eax, edx; pop ebx; ret; 
0x000832e1: cmovne eax, edx; ret; 
0x0005333f: cmovne ebx, dword ptr [ebp - 0xa4]; sub esp, 4; push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x000da7f3: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x001211e0: cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0007a6ed: cmovne edx, esi; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x00114d75: cmovns eax, edx; ret; 
0x0003a8eb: cmovs eax, ecx; pop ebx; ret; 
0x0003a9ee: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00129f3e: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x000247a2: cmovs eax, edx; ret; 
0x0003a8e8: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x0002e7e3: cmp ah, 0x71; stc; call dword ptr [eax - 0x18]; 
0x00139241: cmp ah, 0xa6; stc; call dword ptr [eax - 0x73]; 
0x000f868a: cmp ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x00093666: cmp ah, 1; add byte ptr [eax], al; ret; 
0x0016d7a7: cmp ah, bh; jmp dword ptr [esi - 0x70]; 
0x0018feb6: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00107d9b: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107d9b: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000c3e52: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x000c3f08: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x000b58b1: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x001223cd: cmp al, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0004994e: cmp al, 0x24; add dword ptr [edi], ecx; xchg esp, eax; ret; 
0x00090bb9: cmp al, 0x24; call esi; 
0x0016e4ae: cmp al, 0x24; ret; 
0x000ecbb6: cmp al, 0x29; ret 0x448b; 
0x000e436b: cmp al, 0x2a; je 0xe4373; cmp al, 0x3f; jne 0xe4389; mov eax, 1; ret; 
0x0011c1a6: cmp al, 0x2f; stc; call dword ptr [eax + 0x6a]; 
0x000f8e54: cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x000844fe: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0011fc0d: cmp al, 0x31; ror byte ptr [ebx - 0x74afdba4], 0x54; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0013b866: cmp al, 0x31; shr al, 0xb2; jb 0x13b86b; inc dword ptr [ebp - 0x76a98740]; ret; 
0x000c8a22: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000e436f: cmp al, 0x3f; jne 0xe4389; mov eax, 1; ret; 
0x000cc1de: cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x000817d2: cmp al, 0x51; call eax; 
0x00081660: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000781fc: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000782db: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0011d416: cmp al, 0x52; stc; call dword ptr [ecx + 0x51]; 
0x0015dc94: cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0015dc2f: cmp al, 0x53; call dword ptr [eax + 0x14]; 
0x0015ea3f: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x0015a51b: cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0007cba0: cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x00036d23: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x000241a8: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000e814e: cmp al, 0x5b; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x0015ff57: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160037: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x0016009a: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600fa: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160167: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x0010a3bc: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x0015fee7: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x000c9bc5: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x00024c97: cmp al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x000258b4: cmp al, 0x6f; stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x00030173: cmp al, 0x73; stc; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000c8a25: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000876cb: cmp al, 0x77; add al, 0x39; ret 0x5072; 
0x0007f3c2: cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7f3c0; ret; 
0x000883de: cmp al, 0x80; stc; call dword ptr [eax - 0x18]; 
0x001161fa: cmp al, 0x81; les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x0008e64f: cmp al, 0x81; les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00088338: cmp al, 0x81; stc; call dword ptr [eax - 0x73]; 
0x0005793a: cmp al, 0x83; in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x0015e4bf: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0008425b: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x84266; call dword ptr [ebx]; 
0x0009d57b: cmp al, 0x83; in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x00074eda: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001500c2: cmp al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00075383: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00120a95: cmp al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0002be96: cmp al, 0x83; ret; 
0x000be294: cmp al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0011a47a: cmp al, 0x89; add dword ptr [ebp - 0x547bf040], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b65c1: cmp al, 0x89; call 0x5d6ac423; ret; 
0x0003ced5: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00113de4: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0012229b: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dc5c6: cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00087bb4: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x001518bb: cmp al, 0x89; ret; 
0x0006ff19: cmp al, 0x8b; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0002fe5e: cmp al, 0x8b; add al, 0x90; ret; 
0x0007535f: cmp al, 0x8b; dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000eaa60: cmp al, 0x8b; inc ebx; sbb al, 0x89; ret 0xc085; 
0x0004a7c5: cmp al, 0x8b; jg 0x4a801; ret; 
0x00024ca4: cmp al, 0x8d; add dword ptr [eax], 0x6b; stc; call dword ptr [eax + 0x68]; 
0x00024bbe: cmp al, 0x8d; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x000933ea: cmp al, 0x8d; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x00025f3a: cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025e26: cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00026301: cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00025f5d: cmp al, 0x8d; xchg byte ptr [ecx + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x00026e61: cmp al, 0x8d; xchg eax, esi; jo 0x26e60; call dword ptr [eax - 0x73]; 
0x00026e84: cmp al, 0x8d; xchg eax, esi; jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026ea7: cmp al, 0x8d; xchg eax, esi; jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f10: cmp al, 0x8d; xchg eax, esi; jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00026f68: cmp al, 0x8d; xchg eax, esi; jo 0x26f67; call dword ptr [eax - 0x73]; 
0x00026f8b: cmp al, 0x8d; xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x0015dc3e: cmp al, 0x8d; xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x000f5d4b: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x000c17bf: cmp al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x001379ae: cmp al, 0xa6; stc; dec dword ptr [ebp - 0x68d4b57]; call dword ptr [eax + 0x55]; 
0x0019ce69: cmp al, 0xa8; test edx, edx; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x00158168: cmp al, 0xb0; stc; call dword ptr [eax - 0x73]; 
0x0011f536: cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f6d6: cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f606: cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001087d3: cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00057e33: cmp al, 0xc; ret 0xff50; 
0x00049f25: cmp al, 0xe2; call dword ptr [eax - 0x73]; 
0x00107bc6: cmp al, 0xe4; adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000eff44: cmp al, 0xe8; inc esi; ret; 
0x0010ac8f: cmp al, 0xe8; mov ecx, eax; cld; jmp dword ptr [ebp - 0x77]; 
0x00086e98: cmp al, 0xe8; ret 0xffb8; 
0x0009d9e7: cmp al, 0xe8; ret; 
0x000ca960: cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000ca8c5: cmp al, 0xea; call dword ptr [eax - 1]; 
0x000cdab6: cmp al, 0xea; call dword ptr [ecx + 0x52]; 
0x000cdab6: cmp al, 0xea; call dword ptr [ecx + 0x52]; push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x0018f897: cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0009b36f: cmp al, 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0003c9a9: cmp al, 0xf7; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000d12cf: cmp al, 0xf; mov esi, 0x83d3890a; ret 0x8901; 
0x000ca4df: cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x0009d9e3: cmp al, 0xff; je 0x9da0b; cmp al, 0xe8; ret; 
0x0015dc28: cmp al, 0xff; jne 0x15dc7c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0011f6d8: cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f699: cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000d7c3e: cmp al, 1; add byte ptr [eax], al; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00114c94: cmp al, 1; ret 0x1389; 
0x000421c6: cmp al, 1; ret; 
0x0002318c: cmp al, 3; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x0016e16c: cmp al, 4; jne 0x21302; mov eax, 8; add esp, 0xc; ret; 
0x00194102: cmp al, byte ptr [0xb48d0000]; add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000fbe6a: cmp al, byte ptr [eax + eax]; add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0003a9af: cmp al, byte ptr [eax]; jne 0x3a9c0; add esp, 4; pop ebx; pop esi; ret; 
0x0013e3a9: cmp al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00057a3d: cmp al, byte ptr [ebx - 0x7972f714]; jnp 0x57a76; stc; call dword ptr [eax + 0x53]; 
0x00054795: cmp al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000d5c42: cmp al, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000b3a2d: cmp al, byte ptr [edx - 1]; jne 0xb3bdc; pop esi; xor eax, eax; pop ebx; ret; 
0x0018eb21: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191c2b: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0007bfc5: cmp al, ch; aad 0xc7; or byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00133dba: cmp al, ch; nop; ret; 
0x00075e78: cmp al, ch; ret 0xfaa2; 
0x00122c03: cmp al, ch; xlatb; out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000b2c45: cmp al, dh; pop edi; ret; 
0x00076b36: cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00035a4a: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0002007a: cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000826e7: cmp bh, 0xff; lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x0008e426: cmp bh, bh; dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0002c6f5: cmp bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00160a72: cmp bh, byte ptr [ecx - 1]; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000e11c5: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000e1504: cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x000e09ad: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000e07c0: cmp bl, 0xff; call dword ptr [esi - 0x77]; 
0x000e1dd6: cmp bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x00073906: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00113f6f: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x001151ae: cmp byte ptr [eax + 0x14d], bh; call dword ptr gs:[0x10]; 
0x0011535e: cmp byte ptr [eax + 0x14e], bh; call dword ptr gs:[0x10]; 
0x00117271: cmp byte ptr [eax + 0x1a], bh; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012ee14: cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00123317: cmp byte ptr [eax + 0x75], bh; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00102114: cmp byte ptr [eax + 0xb4], bh; call dword ptr gs:[0x10]; 
0x001021e4: cmp byte ptr [eax + 0xb5], bh; call dword ptr gs:[0x10]; 
0x000e82ba: cmp byte ptr [eax + 1], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013dc38: cmp byte ptr [eax + 2], 0; jne 0x13dc48; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x00193e7f: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000b48b3: cmp byte ptr [eax - 0x1d], 0xf8; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0012ee56: cmp byte ptr [eax - 0x5b], 0xf9; call dword ptr [eax - 0x18]; 
0x00049bc7: cmp byte ptr [eax - 1], 0x2f; jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x0015342a: cmp byte ptr [eax], 0; cmove eax, edx; pop ebx; pop esi; ret; 
0x00115cc7: cmp byte ptr [eax], 0; je 0x115cf8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d67: cmp byte ptr [eax], 0; je 0x115d98; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00115e13: cmp byte ptr [eax], 0; je 0x115e48; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee3: cmp byte ptr [eax], 0; je 0x115f18; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000d9397: cmp byte ptr [eax], 0; je 0xd93c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ddd53: cmp byte ptr [eax], 0; je 0xddd88; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf3: cmp byte ptr [eax], 0; je 0xdde28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000de0bc: cmp byte ptr [eax], 0; je 0xde0f0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de16c: cmp byte ptr [eax], 0; je 0xde1a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00030471: cmp byte ptr [eax], 0; jne 0x30480; mov eax, edx; add esp, 0xc; ret; 
0x000304b1: cmp byte ptr [eax], 0; jne 0x304c0; mov eax, edx; add esp, 0xc; ret; 
0x0014f745: cmp byte ptr [eax], 0xae; stc; call dword ptr [eax - 0x73]; 
0x000a9362: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a8bf3: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b2c75: cmp byte ptr [eax], ah; pop edi; ret; 
0x000f04b1: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015342b: cmp byte ptr [eax], al; cmove eax, edx; pop ebx; pop esi; ret; 
0x00115cc8: cmp byte ptr [eax], al; je 0x115cf8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d68: cmp byte ptr [eax], al; je 0x115d98; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00115e14: cmp byte ptr [eax], al; je 0x115e48; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee4: cmp byte ptr [eax], al; je 0x115f18; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000d9398: cmp byte ptr [eax], al; je 0xd93c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ddd54: cmp byte ptr [eax], al; je 0xddd88; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf4: cmp byte ptr [eax], al; je 0xdde28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000de0bd: cmp byte ptr [eax], al; je 0xde0f0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de16d: cmp byte ptr [eax], al; je 0xde1a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0016cf75: cmp byte ptr [eax], al; jne 0x16cf80; add esp, 4; pop ebx; pop esi; ret; 
0x00030472: cmp byte ptr [eax], al; jne 0x30480; mov eax, edx; add esp, 0xc; ret; 
0x000304b2: cmp byte ptr [eax], al; jne 0x304c0; mov eax, edx; add esp, 0xc; ret; 
0x0018fe6e: cmp byte ptr [eax], al; ret 0xf66; 
0x0002d785: cmp byte ptr [eax], dl; add byte ptr [ebp - 0x68e7379], cl; call dword ptr [eax - 0x73]; 
0x000b2c65: cmp byte ptr [eax], dl; pop edi; ret; 
0x000c8a1a: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00049bb2: cmp byte ptr [ebp + 0x2c6ff42], cl; add byte ptr [ecx], bh; ret; 
0x0008140b: cmp byte ptr [ebp + 0x3e], 0xf9; call dword ptr [eax + 0x6a]; 
0x000c7ae1: cmp byte ptr [ebp + 0x68fff930], 0x4d; add eax, 0x8d500000; sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x000c7a97: cmp byte ptr [ebp + 0x68fff930], 0x50; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000c7b30: cmp byte ptr [ebp + 0x68fff930], 0x5f; add eax, 0x8d500000; and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00096f53: cmp byte ptr [ebp + 0x7c09b], cl; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x00087765: cmp byte ptr [ebp + 0xe], ch; add byte ptr [0x19e897], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x000b8d41: cmp byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000bca2c: cmp byte ptr [ebp - 0x57c2fa9], cl; or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x000b9782: cmp byte ptr [ebp - 0x6464b80], cl; call dword ptr [eax + 0x53]; 
0x000b9755: cmp byte ptr [ebp - 0x646ab80], cl; call dword ptr [eax + 0x56]; 
0x000b8f85: cmp byte ptr [ebp - 0x646bb80], cl; call dword ptr [eax + 0x56]; 
0x001646d6: cmp byte ptr [ebp - 0x64c777a], cl; call dword ptr [eax - 0x73]; 
0x000279bd: cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x00174765: cmp byte ptr [ebp - 0x68fa0001], bl; sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00027ae3: cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x000275ee: cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x0002a555: cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a3c5: cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a4ec: cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x00154044: cmp byte ptr [ebp - 0x69d2380], cl; jmp dword ptr [ebp - 0x75]; 
0x001522e4: cmp byte ptr [ebp - 0x69d7880], cl; jmp dword ptr [ebp - 0x75]; 
0x00151704: cmp byte ptr [ebp - 0x69dbe80], cl; jmp dword ptr [ebp - 0x75]; 
0x000c34d4: cmp byte ptr [ebp - 0x6d4e848], cl; jmp dword ptr [ebp - 0x75]; 
0x00123f6e: cmp byte ptr [ebp - 0x74f7db8c], cl; jl 0x123f9a; xor al, 0xb8; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000421c2: cmp byte ptr [ebx + 0x13c2474], cl; ret; 
0x0008d4fc: cmp byte ptr [ebx + 0x17408f8], al; ret; 
0x00081c10: cmp byte ptr [ebx + 0x17408fa], al; ret; 
0x0015dc60: cmp byte ptr [ebx + 0x20508b00], cl; push ebx; push eax; call dword ptr [edx + 4]; 
0x0005d1ff: cmp byte ptr [ebx + 0x3fcba], al; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x001763cd: cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000b2111: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0008f4ee: cmp byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000752c5: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00035b90: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x00035bc2: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00143043: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005f95c: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016624b: cmp byte ptr [ebx + 1], 0; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x0010ada9: cmp byte ptr [ebx - 0x13367], cl; jmp dword ptr [ebp - 0x75]; 
0x0011f532: cmp byte ptr [ebx - 0x47c3db8c], cl; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f6d2: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f602: cmp byte ptr [ebx - 0x47c3db8c], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00063180: cmp byte ptr [ebx - 0x50f7b], cl; dec dword ptr [ecx + 0x29008bf2]; ret 0xd189; 
0x000dc5c2: cmp byte ptr [ebx - 0x76c3db8c], cl; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x00054d2b: cmp byte ptr [ebx - 0x7bf00008], al; ret; 
0x00097f0a: cmp byte ptr [ebx - 0x8efdbbc], cl; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [edi + 2], 0; add dh, dh; ret; 
0x0013f429: cmp byte ptr [ebx], 0x2e; je 0x13f438; add esp, 8; pop ebx; ret; 
0x00092b04: cmp byte ptr [ebx], 0x2f; jne 0x92b50; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x001087c9: cmp byte ptr [ecx + 0x245c8be6], cl; xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00113de1: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x00066a69: cmp byte ptr [ecx + ebx], 0; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x0007b38b: cmp byte ptr [ecx + ebx], 0; cmp eax, 1; jg 0x7b3a0; ret; 
0x0011c7b1: cmp byte ptr [ecx + ecx*4], ch; ret; 
0x00122293: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ec5b4: cmp byte ptr [ecx - 0x74f3dbbc], cl; inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x0015d8bc: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0013913d: cmp byte ptr [ecx - 0x77], bl; ret; 
0x0012447d: cmp byte ptr [ecx], 0; je 0x124488; ret; 
0x0006de42: cmp byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx], al; adc al, 0x86; jmp edx; 
0x00081e24: cmp byte ptr [ecx], al; je 0x81e30; ret; 
0x0003f113: cmp byte ptr [ecx], al; ret; 
0x000a9363: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000a8bf4: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000c8a17: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x00072582: cmp byte ptr [ecx], bh; ret; 
0x00161aad: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x4a; sub esi, ebp; call ecx; 
0x00161b8d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x6a; sub dh, ch; call ecx; 
0x00058d82: cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x00194597: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001415eb: cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x000f8e53: cmp byte ptr [edi + ebp], 0xf9; call dword ptr [eax - 1]; 
0x00069b21: cmp byte ptr [edi + ecx], ah; test dword ptr [edx - 0x16000003], ebp; dec edi; jecxz 0x69b2c; jmp dword ptr [esi - 0x70]; 
0x000bd7b0: cmp byte ptr [edi], al; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000f429f: cmp byte ptr [edi], cl; mov dh, 0x1c; add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x000f394c: cmp byte ptr [edi], cl; mov dh, 0xc; add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x00197095: cmp byte ptr [edi], cl; test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x000448a1: cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000ba474: cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x0018e8e8: cmp byte ptr [edi], dl; ret 0x2c73; 
0x0018f2a9: cmp byte ptr [edi], dl; ret 0x3273; 
0x0018e8d3: cmp byte ptr [edi], dl; ret 0x3e73; 
0x0018f28f: cmp byte ptr [edi], dl; ret 0x4c73; 
0x0018e8be: cmp byte ptr [edi], dl; ret 0x5073; 
0x0018e8a9: cmp byte ptr [edi], dl; ret 0x6273; 
0x0018f275: cmp byte ptr [edi], dl; ret 0x6673; 
0x0018e228: cmp byte ptr [edi], dl; ret 0x830f; 
0x000cf795: cmp byte ptr [edx + 0x45], 0xf9; call dword ptr [eax + 0x56]; 
0x001372ec: cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0019403c: cmp byte ptr [edx + 0xb], 0; je 0x1940c2; mov eax, 0xc; pop edi; ret; 
0x00194074: cmp byte ptr [edx + 0xf], 0; je 0x1940d6; mov eax, 0x10; pop edi; ret; 
0x00189124: cmp byte ptr [edx + 0xf], cl; jne 0x188f80; pop ebp; xor eax, eax; ret; 
0x00151a0e: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0003a9ae: cmp byte ptr [edx], 0; jne 0x3a9c0; add esp, 4; pop ebx; pop esi; ret; 
0x00030b71: cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x0015d8b5: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0007f2e9: cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x000e94da: cmp byte ptr [edx], cl; je 0xe9442; pop ebx; pop esi; pop edi; ret; 
0x00139251: cmp byte ptr [esi + 0x5c], 0xf9; call dword ptr [eax - 0x18]; 
0x0002feef: cmp byte ptr [esi + edi*8 + 0x365ffff], 5; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00031646: cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0014ef25: cmp byte ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000de7cd: cmp byte ptr [esi], ah; mov eax, 0x20; cmovne eax, edx; ret; 
0x000de67e: cmp byte ptr [esi], ah; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000de8a8: cmp byte ptr [esi], ah; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00143c94: cmp byte ptr [esi], ch; add byte ptr [ebx - 0x1365], cl; jmp dword ptr [ebp - 0x75]; 
0x000fb180: cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x00109ca9: cmp ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x0018ea74: cmp ch, bh; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191b8a: cmp ch, bh; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0016d861: cmp ch, bl; dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x00030b72: cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x0014581c: cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x56]; 
0x000fadb0: cmp ch, ch; call dword ptr [eax + 0x6a]; 
0x0006e9c9: cmp ch, cl; mov ecx, 0x90ffffe9; mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x000b46b4: cmp cl, 0; je 0xb46ba; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0013b10e: cmp cl, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x00030168: cmp cl, byte ptr [eax]; add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x68cc37b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00083d4d: cmp cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001291f2: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0002c511: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0018e9d8: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191ace: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x001905e4: cmp cl, byte ptr [edx]; je 0x190600; mov eax, 1; ja 0x1905f1; neg eax; ret; 
0x000b3929: cmp cl, byte ptr [edx]; jne 0xb3931; xor eax, eax; pop ebx; ret; 
0x0009cca8: cmp cl, dl; je 0x9ccad; inc eax; pop edi; ret; 
0x000fa2ab: cmp cx, 2; je 0xfa2c0; mov eax, edx; pop ebx; pop esi; ret; 
0x0018f333: cmp cx, bx; pop ebx; mov eax, 1; ja 0x18f340; neg eax; ret; 
0x0004c810: cmp dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000622ff: cmp dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x000b42f3: cmp dh, cl; jne 0xb42fa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x001916e7: cmp dh, dh; ret 0x7504; 
0x00117e2b: cmp dl, 0x2c; jne 0x117dee; pop ebx; pop esi; pop edi; ret; 
0x0002eb9a: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x000c3de2: cmp dl, dl; push es; add byte ptr [ebp - 0x6675b7b], cl; call dword ptr [eax - 0x73]; 
0x0002c0d9: cmp dword ptr [eax + 0x2c], -7; call dword ptr [eax - 1]; 
0x000cbbc1: cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x00133478: cmp dword ptr [eax + 0x49], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x00139f81: cmp dword ptr [eax + 0x4b], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x5000004b], -0x73; add dword ptr [eax], 0x73; bnd call dword ptr [eax - 0x73]; 
0x0012bdc2: cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x001378bd: cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0002f7bc: cmp dword ptr [eax + 0x57], -7; call dword ptr [esi - 1]; 
0x0011c6ab: cmp dword ptr [eax + 0x686afff9], 0x93818d50; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x0008b1f6: cmp dword ptr [eax + 0xf0], edi; call dword ptr gs:[0x10]; 
0x0012e897: cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x0014af37: cmp dword ptr [eax + 8], edx; jne 0x14af30; ret; 
0x000b4f55: cmp dword ptr [eax + 8], edx; jne 0xb4f30; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x00158167: cmp dword ptr [eax + esi*4], -7; call dword ptr [eax - 0x73]; 
0x0015fa71: cmp dword ptr [eax - 0x7c000001], -0x3c; add al, 0x5b; pop esi; ret; 
0x001627e8: cmp dword ptr [eax], -0x4d; stc; call dword ptr [eax - 0x73]; 
0x0016cf74: cmp dword ptr [eax], 0; jne 0x16cf80; add esp, 4; pop ebx; pop esi; ret; 
0x000de7cc: cmp dword ptr [eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x000de67d: cmp dword ptr [eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000de8a7: cmp dword ptr [eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00081e23: cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x000ddf6f: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00146ec6: cmp dword ptr [eax], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0012447e: cmp dword ptr [eax], eax; je 0x124488; ret; 
0x0015fca4: cmp dword ptr [eax], ebx; je 0x15fcb0; pop ebx; pop esi; pop edi; ret; 
0x0007c3bf: cmp dword ptr [ebp + eax - 0x137d0000], 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00020f41: cmp dword ptr [ebp - 0x30], 0; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000c33f7: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0002ec1a: cmp dword ptr [ebx + 0x20], eax; jbe 0x2ec36; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00119fb0: cmp dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x000d839f: cmp dword ptr [ebx + 0x5e5b70c4], eax; pop edi; ret; 
0x00097ed1: cmp dword ptr [ebx - 0x15f7b], ecx; jmp dword ptr [ebp - 0x75]; 
0x0005b233: cmp dword ptr [ebx - 0x5db43], ecx; dec dword ptr [ecx + 0x29078bca]; ret 0x953b; 
0x0013e7ab: cmp dword ptr [ebx - 0x68f0f001], eax; ret 0xf839; 
0x000e524e: cmp dword ptr [ebx - 0x7ae7dbbc], ecx; ror byte ptr [edi], 0x95; ret 0xb48d; 
0x00084de6: cmp dword ptr [ebx - 0x7cf7dbac], ecx; ret 0x8b04; 
0x000660f0: cmp dword ptr [ebx - 0x7cfffff4], -0x14; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00029d43: cmp dword ptr [ebx], ebx; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x000f9ae4: cmp dword ptr [ecx + 0x10], edx; jb 0xf9af1; setne al; movzx eax, al; neg eax; ret; 
0x0013f015: cmp dword ptr [ecx + 0x12], 0x950f0308; ret; 
0x001277df: cmp dword ptr [ecx + 0x56], -7; call dword ptr [eax - 0x18]; 
0x000213ed: cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x00147969: cmp dword ptr [ecx + 2], esi; je 0x147978; pop ebx; pop esi; ret; 
0x000f9b14: cmp dword ptr [ecx + 4], edx; ja 0xf9b1f; setne al; movzx eax, al; ret; 
0x000d6139: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd61d0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x001252e8: cmp dword ptr [ecx + 8], edx; jb 0x1252f5; seta al; movzx eax, al; neg eax; ret; 
0x0016b9b4: cmp dword ptr [ecx + 8], edx; jb 0x16b9c1; seta al; movzx eax, al; neg eax; ret; 
0x0010c6d9: cmp dword ptr [ecx - 0x3fceebba], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00051be1: cmp dword ptr [ecx], 0x31; stc; call dword ptr [eax - 0x18]; 
0x0006a213: cmp dword ptr [ecx], 0x31; stc; call dword ptr [eax - 0x77]; 
0x0008fee1: cmp dword ptr [ecx], 2; je 0x8fea2; pop ebx; pop esi; ret; 
0x000b2c86: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0005a1f6: cmp dword ptr [ecx], edi; ret 0x840f; 
0x00051be2: cmp dword ptr [ecx], esi; stc; call dword ptr [eax - 0x18]; 
0x0006a214: cmp dword ptr [ecx], esi; stc; call dword ptr [eax - 0x77]; 
0x000c893e: cmp dword ptr [edi + 0x10], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8953: cmp dword ptr [edi + 0x14], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8968: cmp dword ptr [edi + 0x18], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8983: cmp dword ptr [edi + 0x1c], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c899e: cmp dword ptr [edi + 0x20], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c89b3: cmp dword ptr [edi + 0x24], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c89c8: cmp dword ptr [edi + 0x28], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c89d3: cmp dword ptr [edi + 0x2c], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c89ee: cmp dword ptr [edi + 0x30], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8a03: cmp dword ptr [edi + 0x34], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8a18: cmp dword ptr [edi + 0x38], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8a23: cmp dword ptr [edi + 0x3c], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c88bb: cmp dword ptr [edi + 0xc], ecx; jne 0xc8a30; xor eax, eax; pop edi; pop esi; ret; 
0x000c8908: cmp dword ptr [edi + 8], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x00024c96: cmp dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x0011c1a5: cmp dword ptr [edi + ebp], -7; call dword ptr [eax + 0x6a]; 
0x000db508: cmp dword ptr [edi + edi], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x71; bnd call dword ptr [eax - 0x73]; 
0x0015fd07: cmp dword ptr [edi], ebx; jg 0x15fcf0; pop ebx; pop esi; pop edi; ret; 
0x000c88dd: cmp dword ptr [edi], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x0008de00: cmp dword ptr [edx + 0x10], ecx; je 0x8de10; ret; 
0x00078354: cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000c8d06: cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x0011d415: cmp dword ptr [edx + edx*2], -7; call dword ptr [ecx + 0x51]; 
0x0008fee2: cmp dword ptr [edx], eax; je 0x8fea2; pop ebx; pop esi; ret; 
0x000904e2: cmp dword ptr [edx], ecx; jl 0x904d8; je 0x904f3; xor eax, eax; pop ebx; ret; 
0x0009052a: cmp dword ptr [edx], ecx; jl 0x90520; mov edx, 0; cmovne eax, edx; ret; 
0x00165c0b: cmp dword ptr [esi + 0x65], -7; call dword ptr [eax - 0x18]; 
0x00193846: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x00123db0: cmp dword ptr [esi + 4], ebp; je 0x123e08; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000824d4: cmp dword ptr [esi + 4], edx; je 0x82570; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7e3a: cmp dword ptr [esi + ecx*4], ebx; je 0xe7e50; pop ebx; pop esi; ret; 
0x0010b4c3: cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000e9f2e: cmp dword ptr [esi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x001379ad: cmp dword ptr [esi], 0xa98dfff9; mov ah, 0x72; stc; call dword ptr [eax + 0x55]; 
0x0004d626: cmp dword ptr [esi], ecx; add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x00084058: cmp dword ptr [esp + 0x10], 0x20; je 0x84068; add esp, 8; pop ebx; ret; 
0x000d5c29: cmp dword ptr [esp + 0x14], 1; je 0xd5c38; add esp, 0xc; ret; 
0x000d5d09: cmp dword ptr [esp + 0x14], 1; je 0xd5d18; add esp, 0xc; ret; 
0x000382e4: cmp dword ptr [esp + 4], 0; je 0x38300; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x00081c44: cmp dword ptr [esp + 4], 1; je 0x81c58; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00087208: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0013da18: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x000de7cb: cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x000de67c: cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000de8a6: cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x000d5dea: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0011fc70: cmp eax, -0x26; jne 0x11fc41; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d5dd0: cmp eax, -0x26; jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d601e: cmp eax, -0x26; jne 0xd6060; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000f9970: cmp eax, -0x26; jne 0xf9942; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0013caf7: cmp eax, -0xb; je 0x13caf0; add esp, 8; pop ebx; ret; 
0x000dc0d3: cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000a5189: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00094e26: cmp eax, -1; je 0x94e30; add esp, 0xc; ret; 
0x0007f775: cmp eax, -1; jne 0x7f73a; add esp, 4; pop ebx; pop esi; ret; 
0x0016e622: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00118b68: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x0017ec64: cmp eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x00076b2c: cmp eax, 0x2068fff9; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x000888df: cmp eax, 0x21; jne 0x888e8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000f443a: cmp eax, 0x3904c083; ret 0xf375; 
0x0008b1f2: cmp eax, 0x397401a8; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000d6263: cmp eax, 0x3b9ac9ff; ja 0xd6300; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00093645: cmp eax, 0x3fc; jbe 0x93650; ret; 
0x00130f3b: cmp eax, 0x3ff; ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x000d6022: cmp eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0007da9e: cmp eax, 0x4268fff9; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x000936d5: cmp eax, 0x50; jbe 0x936e0; ret; 
0x00021cf8: cmp eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000c073d: cmp eax, 0x5b20c483; pop esi; pop edi; ret; 
0x0012faf1: cmp eax, 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x000a4f20: cmp eax, 0x5bffffff; ret; 
0x00075fe3: cmp eax, 0x7c; stc; call dword ptr [eax - 0x73]; 
0x0009222b: cmp eax, 0x80c70019; add al, 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000809cf: cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x00047cff: cmp eax, 0x85fffffb; ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00165e3f: cmp eax, 0x8b000001; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x000cdb44: cmp eax, 0x8d500000; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000ca959: cmp eax, 0x8d500000; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000cdab0: cmp eax, 0x928d0000; and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; 
0x000cbbc3: cmp eax, 0x950f0000; ret 0xb38b; 
0x000cda7d: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000936e6: cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x0009d7ec: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000b3322: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000cbd21: cmp eax, 0xc4830000; adc byte ptr [ebp - 0x7fd38a2e], al; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0008f270: cmp eax, 0xc; jne 0x8f29f; mov eax, 3; add esp, 0xc; ret; 
0x0008f432: cmp eax, 0xc; jne 0x8f45f; mov eax, 3; add esp, 0xc; ret; 
0x0008f5c2: cmp eax, 0xc; jne 0x8f5ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f7b8: cmp eax, 0xc; jne 0x8f7ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f932: cmp eax, 0xc; jne 0x8f95f; mov eax, 3; add esp, 0xc; ret; 
0x0008f9b2: cmp eax, 0xc; jne 0x8f9df; mov eax, 3; add esp, 0xc; ret; 
0x00080862: cmp eax, 0xde68fff9; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x00075fec: cmp eax, 0xe168fff9; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x000cd0e4: cmp eax, 0xe8500000; ret; 
0x000cbf64: cmp eax, 0xf8830000; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x00093685: cmp eax, 0xffff; jbe 0x93690; ret; 
0x00106b47: cmp eax, 0xfffff000; ja 0x106b58; pop ebx; pop esi; ret; 
0x00107856: cmp eax, 0xfffff000; ja 0x107868; pop ebx; pop esi; pop edi; ret; 
0x00107b8a: cmp eax, 0xfffff000; ja 0x107b98; pop ebx; pop esi; ret; 
0x00107bda: cmp eax, 0xfffff000; ja 0x107be8; pop ebx; pop esi; ret; 
0x00108864: cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x0010923e: cmp eax, 0xfffff000; ja 0x109290; add esp, 0x14; pop ebx; pop esi; ret; 
0x00109372: cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x00109402: cmp eax, 0xfffff000; ja 0x109450; add esp, 0x14; pop ebx; pop esi; ret; 
0x00113870: cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x00113a40: cmp eax, 0xfffff000; ja 0x113a60; pop ebx; pop esi; pop edi; ret; 
0x00113ac3: cmp eax, 0xfffff000; ja 0x113ae0; pop ebx; pop esi; pop edi; ret; 
0x00113b3f: cmp eax, 0xfffff000; ja 0x113b60; pop ebx; pop esi; pop edi; ret; 
0x00113bc2: cmp eax, 0xfffff000; ja 0x113be0; pop ebx; pop esi; pop edi; ret; 
0x00113c29: cmp eax, 0xfffff000; ja 0x113c38; pop ebx; pop esi; ret; 
0x00113cd9: cmp eax, 0xfffff000; ja 0x113ce8; pop ebx; pop esi; ret; 
0x001146c4: cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x00114714: cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011482a: cmp eax, 0xfffff000; ja 0x114838; pop ebx; pop esi; pop edi; ret; 
0x0011487a: cmp eax, 0xfffff000; ja 0x114888; pop ebx; pop esi; pop edi; ret; 
0x00114f99: cmp eax, 0xfffff000; ja 0x114fa8; pop ebx; pop esi; ret; 
0x001169ae: cmp eax, 0xfffff000; ja 0x116a00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116a7e: cmp eax, 0xfffff000; ja 0x116ad0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116b5b: cmp eax, 0xfffff000; ja 0x116b68; pop ebx; pop esi; ret; 
0x001183a4: cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183f4: cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x00118449: cmp eax, 0xfffff000; ja 0x118458; pop ebx; pop esi; ret; 
0x00118499: cmp eax, 0xfffff000; ja 0x1184a8; pop ebx; pop esi; ret; 
0x0011c4ec: cmp eax, 0xfffff000; ja 0x11c4f8; pop ebx; ret; 
0x0011ede4: cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0011ee3e: cmp eax, 0xfffff000; ja 0x11ee50; pop ebx; pop esi; pop edi; ret; 
0x0011f22f: cmp eax, 0xfffff000; ja 0x11f240; pop ebx; pop esi; pop edi; ret; 
0x0011f47e: cmp eax, 0xfffff000; ja 0x11f490; pop ebx; pop esi; pop edi; ret; 
0x0011f9f3: cmp eax, 0xfffff000; ja 0x11fa18; pop ebx; pop esi; pop edi; ret; 
0x00120964: cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209b4: cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x00120a04: cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x00120b15: cmp eax, 0xfffff000; ja 0x120b20; pop ebx; pop esi; pop edi; ret; 
0x0017467a: cmp eax, 0xfffff000; ja 0x174688; pop ebx; pop esi; ret; 
0x000377c5: cmp eax, 0xfffff000; ja 0x377d0; pop ebx; ret; 
0x00037823: cmp eax, 0xfffff000; ja 0x37870; add esp, 0x14; pop ebx; pop esi; ret; 
0x00058474: cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x000584ce: cmp eax, 0xfffff000; ja 0x584e0; pop ebx; pop esi; pop edi; ret; 
0x00082c11: cmp eax, 0xfffff000; ja 0x82c20; pop ebx; pop esi; pop edi; ret; 
0x0008b314: cmp eax, 0xfffff000; ja 0x8b320; pop ebx; pop esi; pop edi; ret; 
0x00091f10: cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x00092467: cmp eax, 0xfffff000; ja 0x92488; pop ebx; pop esi; pop edi; ret; 
0x00092589: cmp eax, 0xfffff000; ja 0x92598; pop ebx; pop esi; ret; 
0x00092b18: cmp eax, 0xfffff000; ja 0x92b28; pop ebx; ret; 
0x00092ef8: cmp eax, 0xfffff000; ja 0x92f08; pop ebx; ret; 
0x000cade2: cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x000d7bd3: cmp eax, 0xfffff000; ja 0xd7be0; pop ebx; pop esi; ret; 
0x000dc739: cmp eax, 0xfffff000; ja 0xdc780; add esp, 0x18; pop ebx; ret; 
0x000dce09: cmp eax, 0xfffff000; ja 0xdce30; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f9aa9: cmp eax, 0xfffff000; ja 0xf9ab8; pop ebx; pop esi; ret; 
0x0008cbd5: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0010fa9e: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003778c: cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004a5c4: cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x00084028: cmp eax, 1; ja 0x84040; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008cb78: cmp eax, 1; ja 0x8cb90; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00161f62: cmp eax, 1; je 0x161f90; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00162052: cmp eax, 1; je 0x162080; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00162632: cmp eax, 1; je 0x162660; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00081d47: cmp eax, 1; je 0x81d50; ret; 
0x000825eb: cmp eax, 1; je 0x825f8; ret; 
0x0008ce66: cmp eax, 1; je 0x8ce78; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0011e8de: cmp eax, 1; jg 0x11e910; add esp, 8; pop ebx; ret; 
0x00139642: cmp eax, 1; jg 0x1396a0; add esp, 4; pop ebx; pop esi; ret; 
0x00149878: cmp eax, 1; jg 0x1498b8; add esp, 4; pop ebx; pop esi; ret; 
0x0014e53e: cmp eax, 1; jg 0x14e568; add esp, 8; pop ebx; ret; 
0x0014f950: cmp eax, 1; jg 0x14f960; ret; 
0x001681d1: cmp eax, 1; jg 0x1681f8; add esp, 8; pop ebx; ret; 
0x00168351: cmp eax, 1; jg 0x168378; add esp, 8; pop ebx; ret; 
0x0016d1c2: cmp eax, 1; jg 0x16d1e8; add esp, 4; pop ebx; pop esi; ret; 
0x0016d262: cmp eax, 1; jg 0x16d288; add esp, 4; pop ebx; pop esi; ret; 
0x0016d312: cmp eax, 1; jg 0x16d338; pop ebx; pop esi; pop edi; ret; 
0x0019d5d3: cmp eax, 1; jg 0x19d5f8; add esp, 4; pop ebx; pop esi; ret; 
0x0003acd4: cmp eax, 1; jg 0x3acf8; add esp, 4; pop ebx; pop esi; ret; 
0x0005866f: cmp eax, 1; jg 0x58678; ret; 
0x000723c0: cmp eax, 1; jg 0x723d0; ret; 
0x0007b390: cmp eax, 1; jg 0x7b3a0; ret; 
0x0007e116: cmp eax, 1; jg 0x7e150; add esp, 8; pop ebx; ret; 
0x00080430: cmp eax, 1; jg 0x80440; ret; 
0x0008295c: cmp eax, 1; jg 0x82998; pop ebx; pop esi; pop edi; ret; 
0x000cbf67: cmp eax, 1; jg 0xcbf90; add esp, 8; pop ebx; ret; 
0x000d782f: cmp eax, 1; jg 0xd7850; add esp, 4; pop ebx; pop esi; ret; 
0x000d78a5: cmp eax, 1; jg 0xd78c0; pop ebx; pop esi; pop edi; ret; 
0x0015b0f3: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00083bcc: cmp eax, 1; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x000583d9: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0008fdc7: cmp eax, 1; sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00163826: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0008cb48: cmp eax, 2; ja 0x8cb60; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014e0a1: cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x00161f67: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0002bfb1: cmp eax, 3; je 0x2bfc0; add esp, 8; pop ebx; ret; 
0x00084c4d: cmp eax, 3; je 0x84c60; pop ebx; pop esi; pop edi; ret; 
0x00084d2b: cmp eax, 3; je 0x84d38; pop ebx; pop esi; pop edi; ret; 
0x000ebd0c: cmp eax, 3; je 0xebd30; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010dcc3: cmp eax, 4; ja 0x10dcd8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f563: cmp eax, 4; ja 0x10f578; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00111fa3: cmp eax, 4; ja 0x111fb8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0008f0df: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0008d4fd: cmp eax, 8; je 0x8d503; ret; 
0x0011f2a6: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0011f2e7: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00097943: cmp eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b487d: cmp eax, dword ptr [eax]; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000b548b: cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0009862a: cmp eax, dword ptr [eax]; add dh, dh; ret 0x7402; 
0x001512b1: cmp eax, dword ptr [ebp - 0x7c868b01]; ret; 
0x0014987c: cmp eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00119eee: cmp eax, dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00023be1: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0015232b: cmp eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00124f58: cmp eax, dword ptr [ecx + 0x4624]; jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0011f608: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f5c9: cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00190351: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x00194584: cmp eax, dword ptr [esi - 0x10]; jne 0x1945d0; pop edi; pop esi; pop ebx; ret; 
0x00054715: cmp eax, ebx; ja 0x54700; mov eax, ecx; pop ebx; pop esi; ret; 
0x00114e88: cmp eax, ebx; jb 0x114e90; xor eax, eax; pop ebx; ret; 
0x001591a0: cmp eax, ebx; jne 0x159190; pop ebx; ret; 
0x000a0c3b: cmp eax, ebx; jne 0xa0c30; mov eax, edx; pop ebx; ret; 
0x000a0c7f: cmp eax, ebx; jne 0xa0c70; mov eax, edx; pop ebx; pop esi; ret; 
0x00080a2e: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00076151: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00074e25: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x74e20; ret; 
0x0007e5f5: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7e5f0; ret; 
0x000b2760: cmp eax, ecx; ja 0xb2770; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00170547: cmp eax, ecx; jbe 0x170620; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00170690: cmp eax, ecx; jbe 0x1706a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075165: cmp eax, ecx; jbe 0x751a0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000758f6: cmp eax, ecx; jbe 0x75928; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00079806: cmp eax, ecx; jbe 0x79860; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x0007b4e8: cmp eax, ecx; jbe 0x7b510; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007d2eb: cmp eax, ecx; jbe 0x7d418; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007d491: cmp eax, ecx; jbe 0x7d4d0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007eee5: cmp eax, ecx; jbe 0x7ef10; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007f1db: cmp eax, ecx; jbe 0x7f288; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x000a0ddf: cmp eax, ecx; jne 0xa0dd0; mov eax, edx; pop ebx; ret; 
0x000b39ba: cmp eax, ecx; jne 0xb3bc8; pop esi; xor eax, eax; pop ebx; ret; 
0x000b3aad: cmp eax, ecx; jne 0xb3bdc; pop esi; xor eax, eax; pop ebx; ret; 
0x000b3bda: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x00035dbd: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000b26c0: cmp eax, edx; ja 0xb2770; add eax, edi; add eax, ecx; pop edi; ret; 
0x000b3405: cmp eax, edx; ja 0xb33d8; sub eax, esi; pop ebx; pop esi; ret; 
0x0012e893: cmp eax, edx; jae 0x12e8a0; cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x00129c42: cmp eax, edx; jb 0x129c50; mov eax, 1; ret; 
0x0007f6d4: cmp eax, edx; jbe 0x7f700; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x0015f937: cmp eax, edx; je 0x15f948; add esp, 4; pop ebx; pop esi; ret; 
0x0009c42f: cmp eax, edx; jne 0x9c428; mov eax, ecx; ret; 
0x00092b05: cmp ebp, dword ptr [edi]; jne 0x92b50; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0013f42a: cmp ebp, dword ptr [esi]; je 0x13f438; add esp, 8; pop ebx; ret; 
0x000fae9c: cmp ebp, ebp; call dword ptr [eax + 0x6a]; 
0x000fbd02: cmp ebp, ebp; call dword ptr [edx + 0x6a]; 
0x000d9458: cmp ebp, ebx; call dword ptr [eax - 0x18]; 
0x0004cbc0: cmp ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00083f02: cmp ebp, edx; jbe 0x83f3f; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000e9365: cmp ebx, 0xa; je 0xe9399; add esp, 4; pop ebx; pop esi; ret; 
0x000b5055: cmp ebx, 3; je 0xb5060; mov eax, esi; pop ebx; pop esi; ret; 
0x0005f90e: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a072: cmp ebx, esi; jae 0x3a089; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x000cda66: cmp ecx, 0x28f5c28; jbe 0xcda78; mov eax, edx; ret; 
0x001310cc: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00156bdf: cmp ecx, 1; je 0x156c00; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00157c40: cmp ecx, 1; je 0x157c50; add esp, 4; pop ebx; pop esi; ret; 
0x000fa2ac: cmp ecx, 2; je 0xfa2c0; mov eax, edx; pop ebx; pop esi; ret; 
0x001570e1: cmp ecx, 3; jbe 0x1570f0; mov eax, 2; pop ebx; pop esi; ret; 
0x001138c8: cmp ecx, 9; je 0x113900; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00113978: cmp ecx, 9; je 0x1139b0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0004a6a7: cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4a6b2; push ecx; ret; 
0x0004a94d: cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4a958; push ecx; ret; 
0x000daf1f: cmp ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000716e4: cmp ecx, dword ptr [ebx + 0x558be045]; in al, 0x89; ret; 
0x0008bd48: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000d6267: cmp ecx, dword ptr [edi]; xchg dword ptr [edx - 0x73000000], edx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008bfcb: cmp ecx, dword ptr [edi]; xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008b3d5: cmp ecx, dword ptr [edi]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00157aa1: cmp ecx, dword ptr [edx + 0x14]; ja 0x157a90; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x001946b5: cmp ecx, dword ptr [edx - 4]; jne 0x1946c0; pop ebx; ret; 
0x00190347: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x190590; pop ebx; ret; 
0x000ac1a1: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008d469: cmp ecx, dword ptr [edx]; add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x00190262: cmp ecx, dword ptr [edx]; je 0x190280; mov eax, 1; jg 0x190270; neg eax; ret; 
0x0013ce26: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0018eba0: cmp ecx, ebx; mov eax, 0; jne 0x18f320; pop ebx; ret; 
0x00191a12: cmp ecx, ebx; mov eax, 0; jne 0x191c40; pop ebx; ret; 
0x0018f334: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x18f340; neg eax; ret; 
0x000b4c3e: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000b4c20: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0011d0aa: cmp ecx, edx; jne 0x11d0a0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00123264: cmp ecx, edx; mov edx, 0; cmovb eax, edx; ret; 
0x0016ebbf: cmp ecx, esi; jmp dword ptr [ebp - 0x75]; 
0x00155977: cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000eac42: cmp edi, 0x8bffffff; push ebx; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000f11d7: cmp edi, 0xf01a8ff; test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x00120736: cmp edi, 1; je 0x120770; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b6: cmp edi, 1; je 0x1208f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0011727a: cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00061386: cmp edi, dword ptr [ecx]; ret 0x840f; 
0x000c7a41: cmp edi, dword ptr [esi - 0xa]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x00078155: cmp edi, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0009cfc8: cmp edi, eax; jbe 0x9cfe1; pop ebx; pop esi; pop edi; ret; 
0x00087293: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010ac8b: cmp edi, edi; je 0x10acb3; cmp al, 0xe8; mov ecx, eax; cld; jmp dword ptr [ebp - 0x77]; 
0x00083e52: cmp edi, edx; jae 0x83e20; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0017fdb8: cmp edi, esi; ret 3; 
0x000de86c: cmp edx, 0x1badface; setne al; ret; 
0x000de887: cmp edx, 0x1cd1; setne al; ret; 
0x0011f951: cmp edx, 0x26; je 0x11f9a4; pop ebx; pop esi; ret; 
0x00083cdd: cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x000a14f5: cmp edx, 0x40; ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1525: cmp edx, 0x40; ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000de72c: cmp edx, 0x54190100; jne 0xde740; lea esi, [esi]; mov eax, 0x40; ret; 
0x0006f385: cmp edx, 0x85; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000de837: cmp edx, 0xadf5; setne al; ret; 
0x0009d22e: cmp edx, 1; ja 0x9d210; pop ebx; pop esi; pop edi; ret; 
0x0008b0f0: cmp edx, 1; je 0x8b100; mov eax, 0x16; ret; 
0x001282d2: cmp edx, 1; jg 0x1282f8; add esp, 0x18; pop ebx; ret; 
0x00139970: cmp edx, 1; jg 0x139998; add esp, 0x18; pop ebx; ret; 
0x0016824f: cmp edx, 1; jg 0x168278; add esp, 0x18; pop ebx; ret; 
0x001682db: cmp edx, 1; jg 0x168300; add esp, 0x18; pop ebx; ret; 
0x00168501: cmp edx, 1; jg 0x168528; add esp, 0x14; pop ebx; pop esi; ret; 
0x001685b3: cmp edx, 1; jg 0x1685d8; add esp, 0x18; pop ebx; ret; 
0x0004a4c1: cmp edx, 1; jg 0x4a4e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00070276: cmp edx, 1; jg 0x70298; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087382: cmp edx, 1; jg 0x873a8; add esp, 0x18; pop ebx; ret; 
0x000d763e: cmp edx, 1; jg 0xd7660; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b120: cmp edx, 1; jne 0x8b140; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x001034ed: cmp edx, 2; ja 0x1034fe; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00083ba1: cmp edx, 2; jbe 0x83bb0; ret; 
0x00084cc6: cmp edx, 2; je 0x84cd0; pop ebx; pop esi; pop edi; ret; 
0x00081c11: cmp edx, 8; je 0x81c17; ret; 
0x00073a21: cmp edx, dword ptr [eax + 4]; jae 0x73a30; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00073b5f: cmp edx, dword ptr [eax + 4]; jae 0x73b70; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007b44b: cmp edx, dword ptr [eax + 8]; jae 0x7b460; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007b489: cmp edx, dword ptr [eax + 8]; jae 0x7b4a0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000e7dd8: cmp edx, dword ptr [ebx + 4]; je 0xe7df6; pop ebx; pop esi; pop edi; ret; 
0x001598ab: cmp edx, dword ptr [esi - 0x18]; pop esi; stc; cli; jmp dword ptr [ebp - 0x77]; 
0x00081bd4: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000d7bc2: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000b33bd: cmp edx, eax; cmovbe eax, edx; sub eax, esi; pop ebx; pop esi; ret; 
0x0008b1ef: cmp edx, eax; jne 0x8b230; test al, 1; je 0x8b230; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a0d07: cmp edx, ebx; je 0xa0d00; pop ebx; ret; 
0x000759d0: cmp edx, ecx; ja 0x759c8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007f7b0: cmp edx, ecx; ja 0x7f7a8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000804be: cmp edx, ecx; jae 0x804e0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0007060d: cmp edx, ecx; jbe 0x70780; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00070ac1: cmp edx, ecx; jbe 0x70b18; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007311a: cmp edx, ecx; jbe 0x73161; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00078b8e: cmp edx, ecx; jbe 0x78d60; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee3a: cmp edx, ecx; jbe 0x7ee90; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000b622e: cmp edx, ecx; je 0xb6236; test edx, edx; jne 0xb6228; ret; 
0x0014f7b0: cmp edx, ecx; jne 0x14f7a0; add esp, 8; pop ebx; ret; 
0x000c8dd9: cmp edx, ecx; jne 0xc8dd0; ret; 
0x00084258: cmp edx, esi; jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a0d3b: cmp edx, esi; je 0xa0d30; pop ebx; pop esi; ret; 
0x0016eaeb: cmp esi, -1; call dword ptr [eax - 0x76f3137d]; ret; 
0x0011f9e2: cmp esi, -1; je 0x11fa00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000f9a28: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0019d4a7: cmp esi, edi; jae 0x19d4b9; lea esi, [esi]; nop; call dword ptr [esi]; 
0x0019d500: cmp esi, edi; jne 0x19d4f0; pop ebx; pop esi; pop edi; ret; 
0x0010b123: cmp esp, 7; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x000938c7: cmp esp, dword ptr [edi]; sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x00139181: cmp esp, dword ptr [edx]; add eax, dword ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000b3304: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x00147968: cmp word ptr [ecx + 2], si; je 0x147978; pop ebx; pop esi; ret; 
0x001920b6: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000cd6d6: cmpsb byte ptr [esi], byte ptr es:[edi]; and esi, esi; dec dword ptr [ebp - 0x666f37d]; call dword ptr [eax - 0x73]; 
0x00170fa9: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv bh; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000e5856: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv edi; dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x000717d7: cmpsb byte ptr [esi], byte ptr es:[edi]; out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x00129d5c: cmpsb byte ptr [esi], byte ptr es:[edi]; ret 0xf; 
0x0013791f: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x001374a8: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x001379af: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; dec dword ptr [ebp - 0x68d4b57]; call dword ptr [eax + 0x55]; 
0x001769a4: cmpsb byte ptr [esi], byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x000bb103: cmpsb byte ptr [esi], byte ptr es:[edi]; xor ecx, dword ptr [ebx]; add byte ptr [ecx + 0x16aef9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0008950a: cmpsd dword ptr [esi], dword ptr es:[edi]; aas; stc; call dword ptr [eax - 0x73]; 
0x0005e2fa: cmpsd dword ptr [esi], dword ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0016216b: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x00193e05: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x0003805a: cmpsd dword ptr [esi], dword ptr es:[edi]; fistp word ptr [esi]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0002ec5a: cmpsd dword ptr [esi], dword ptr es:[edi]; jae 0x2ec7c; add byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x0013086d: cmpsd dword ptr [esi], dword ptr es:[edi]; or edi, ebp; jmp dword ptr [esi - 0x70]; 
0x0002f842: cmpsd dword ptr [esi], dword ptr es:[edi]; push cs; add byte ptr [ebx + 0x51e910c4], al; or bh, bh; call dword ptr [eax - 0x73]; 
0x0013cab3: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0013caa0: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x001568e4: cmpsd dword ptr [esi], dword ptr es:[edi]; std; jmp dword ptr [esi - 0x70]; 
0x00176866: cmpsd dword ptr [esi], dword ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x0002ee06: cmpsd dword ptr [esi], dword ptr es:[edi]; sub al, 0xf9; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x000df735: cmpsd dword ptr [esi], dword ptr es:[edi]; test al, 0xfb; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008e83d: cmpxchg dword ptr [ebx], edx; jne 0x8e850; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008d7c6: cmpxchg dword ptr [ebx], esi; jne 0x8d7d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008211f: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0008e880: cmpxchg dword ptr [edx], ecx; jne 0x8e876; xor eax, eax; pop ebx; ret; 
0x0008e8ce: cmpxchg dword ptr [edx], ecx; jne 0x8e8e0; xor eax, eax; pop ebx; ret; 
0x0008d4b0: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00087aed: cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002e9ac: cvtps2pi mm7, xmm1; call dword ptr [eax - 0x18]; 
0x000a4bc4: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0019da4d: cwde; add byte ptr [eax], al; add al, ch; ljmp 0x18c4:0x83ffe826; pop ebx; ret; 
0x00107f3a: cwde; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00108b4b: cwde; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x00070fbf: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00081e38: cwde; add byte ptr [eax], al; add cl, al; call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00040129: cwde; add byte ptr [eax], al; add cl, ch; sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x00194974: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x00157449: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00167772: cwde; cld; dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x64c4379]; call dword ptr [eax - 0x73]; 
0x0002d784: cwde; cmp byte ptr [eax], dl; add byte ptr [ebp - 0x68e7379], cl; call dword ptr [eax - 0x73]; 
0x000de2c3: cwde; dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0014ee58: cwde; inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x00115fb9: cwde; int1; jmp dword ptr [esi - 0x70]; 
0x0004fa78: cwde; jbe 0x4fa74; call dword ptr [eax - 0x73]; 
0x00050aa8: cwde; jbe 0x50aa4; call dword ptr [eax - 0x73]; 
0x00050acd: cwde; jbe 0x50ac9; call dword ptr [eax - 0x73]; 
0x00050af2: cwde; jbe 0x50aee; call dword ptr [eax - 0x73]; 
0x00050b17: cwde; jbe 0x50b13; call dword ptr [eax - 0x73]; 
0x00050b61: cwde; jbe 0x50b5d; call dword ptr [eax - 0x73]; 
0x00050bbf: cwde; jbe 0x50bbb; call dword ptr [eax - 0x73]; 
0x00050be4: cwde; jbe 0x50be0; call dword ptr [eax - 0x73]; 
0x00050c09: cwde; jbe 0x50c05; call dword ptr [eax - 0x73]; 
0x00050c2e: cwde; jbe 0x50c2a; call dword ptr [eax - 0x73]; 
0x00050c53: cwde; jbe 0x50c4f; call dword ptr [eax - 0x73]; 
0x00050c78: cwde; jbe 0x50c74; call dword ptr [eax - 0x73]; 
0x00050ca2: cwde; jbe 0x50c9e; call dword ptr [eax - 0x73]; 
0x00050cc7: cwde; jbe 0x50cc3; call dword ptr [eax - 0x73]; 
0x00050cec: cwde; jbe 0x50ce8; call dword ptr [eax - 0x73]; 
0x00065f93: cwde; js 0x65f8f; call dword ptr [eax - 0x18]; 
0x0006b03b: cwde; js 0x6b037; call dword ptr [eax - 0x18]; 
0x00165bf9: cwde; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00086fe4: cwde; mov dl, bh; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8706e; stc; call dword ptr [eax - 0x73]; 
0x00060156: cwde; mov eax, 0x3efff8c1; jmp eax; 
0x0005d149: cwde; mov edi, 0x7ee9ffff; ret 0xffff; 
0x000b50a6: cwde; pop ebx; pop esi; ret; 
0x000586e4: cwde; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fa9b1: cwde; popfd; stc; call dword ptr [eax - 0x18]; 
0x000c9d6a: cwde; ret 0x15; 
0x00100b47: cwde; sahf; stc; call dword ptr [eax - 0x73]; 
0x000c34b1: cwde; stc; call dword ptr [eax - 0x18]; 
0x000c17ad: cwde; stc; call dword ptr [eax - 0x73]; 
0x0002b805: cwde; sub al, 0x14; add byte ptr [0x1fa7f7], al; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00126fa4: cwde; xchg ecx, eax; out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x0006d3d5: daa; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x0011385c: daa; adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0014a51f: daa; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0xac; stc; call dword ptr [eax - 0x18]; 
0x00113a30: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00108071: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b5: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; mov edx, edi; call dword ptr gs:[0x10]; 
0x000a8f95: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00116de7: daa; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f7846: daa; cli; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00145d1d: daa; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00050b55: daa; in eax, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x000b5ba8: daa; inc esp; stc; call dword ptr [eax - 0x18]; 
0x00132a60: daa; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000b4382: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000b4748: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x001020d8: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021a8: daa; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000d8c34: daa; or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x001311ed: daa; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x0012bd39: daa; push edi; stc; call dword ptr [eax - 0x18]; 
0x000938c8: daa; sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x001039b5: daa; stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007eee8: daa; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0015cf15: daa; xor ch, ah; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e0db8: das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000ac6ad: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x00033ad8: das; add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x0016815c: das; add esp, 0x18; pop ebx; ret; 
0x0008d874: das; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e9369: das; add esp, 4; pop ebx; pop esi; ret; 
0x0018bd9d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019db0d: das; call 0x10de5f13; add esp, 8; pop ebx; ret; 
0x00169a5d: das; jbe 0x1699e5; in al, dx; add al, 0x83; ret; 
0x000512df: das; jbe 0x5126d; ret 0x40c7; 
0x0014e305: das; je 0x14e36c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000de882: das; je 0xde89a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x00049bca: das; jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x00092b06: das; jne 0x92b50; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00094572: das; lahf; or eax, 0x8ac68100; sbb bl, byte ptr [ecx]; add byte ptr [ebx - 0x77], dl; ret; 
0x000d600b: das; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000de0c0: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de170: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00030b73: das; stc; call dword ptr [eax + 0x53]; 
0x0014581d: das; stc; call dword ptr [eax + 0x56]; 
0x0011c1a7: das; stc; call dword ptr [eax + 0x6a]; 
0x00030d28: das; stc; call dword ptr [eax - 0x18]; 
0x00033bfd: das; stc; call dword ptr [eax - 1]; 
0x000d5fb8: das; sub esp, 8; push edi; push ebx; call eax; 
0x00058cc2: das; xor bh, cl; call dword ptr [eax + 0x56]; 
0x0011d1ac: dec bp; stc; call dword ptr [eax + 0x57]; 
0x000343f4: dec byte ptr [0x948b6877]; mov bl, 0; je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x001886fb: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x0018ceab: dec byte ptr [ebp - 0x7af00587]; ret; 
0x00186e6b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x0018a5ab: dec byte ptr [ebp - 0x7af00687]; ret; 
0x00187bfb: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0018666b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x001896ab: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x001775e8: dec byte ptr [ebx + 0x5b082444]; ret; 
0x0005af8f: dec byte ptr [ebx - 0x59f43]; dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x60763]; jmp dword ptr [ebp - 0x75]; 
0x000fcf94: dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x0002ddc8: dec byte ptr [ebx - 0x9b6b]; jmp dword ptr [esi - 0x77]; 
0x00085b03: dec byte ptr [ebx]; inc esp; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00153f78: dec byte ptr [ecx - 0x7ce7dbac]; in al, dx; or al, 0xff; je 0x153fa7; adc byte ptr [ebx - 0x17d3dba4], cl; ret; 
0x000fd6f6: dec byte ptr [edi]; test dword ptr [ebx], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x70373], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008afef: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000b2572: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0017b45b: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000b1932: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x0017d47b: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0011e1f8: dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x00066d4f: dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0008d489: dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x00086ade: dec dword ptr [ebp + 0x22c8d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00130338: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00068df8: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; jmp eax; 
0x00162688: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x00039f86: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00149c60: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000df738: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0004abb6: dec dword ptr [ebp + 0x2c084]; add byte ptr [eax], al; call 0x4ab70; add eax, ebx; jmp eax; 
0x000b58ad: dec dword ptr [ebp + 0x3c0492]; add byte ptr [edi], cl; inc esp; ret 0xff65; 
0x0013c3a4: dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x0013eb33: dec dword ptr [ebp + 0x48d4004]; ret; 
0x0006b074: dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x0006ff0f: dec dword ptr [ebp + 0x5689ff50]; and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x0004dac3: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x0002ed7c: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000b3062: dec dword ptr [ebp + 0x5f103844]; ret; 
0x0010af78: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x10afa6; xor bh, bh; jne 0x10af92; call dword ptr [ebp + 0x24]; 
0x0010bfa8: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x10bfd6; xor bh, bh; jne 0x10bfc2; call dword ptr [ebp + 0x24]; 
0x00112b28: dec dword ptr [ebp + 0x6a501445]; add bh, bh; je 0x112b56; xor bh, bh; jne 0x112b42; call dword ptr [ebp + 0x24]; 
0x00170951: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00198611: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00056fe1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000ce149: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000826e9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00145bd9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x00048129: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x000eb429: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x0004f841: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x00117579: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000623c1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x0005c5b9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00165811: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x00065f71: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x00037701: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x8f3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00114239: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x8f3dbbc], cl; fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0013eb21: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0005c061: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx - 0x5bb4b], cl; dec dword ptr [ecx - 0x76287608]; ret 0x7de9; 
0x0019ce61: dec dword ptr [ebp + 0xc6083]; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x000802dc: dec dword ptr [ebp + 0xff30076]; push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00125549: dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x001754d5: dec dword ptr [ebp - 0x11ff0f80]; call dword ptr [eax + 0x6a]; 
0x00105045: dec dword ptr [ebp - 0x12266f80]; call dword ptr [eax + 0x6a]; 
0x000dffcb: dec dword ptr [ebp - 0x12343]; dec dword ptr [ecx - 0x1937b]; call dword ptr [esi - 0x18]; 
0x0010423b: dec dword ptr [ebp - 0x12343]; dec dword ptr [ecx - 0x1a37b]; call dword ptr [esi - 0x18]; 
0x000fc4dd: dec dword ptr [ebp - 0x12bc8f80]; call dword ptr [eax + 0x6a]; 
0x000fbcfe: dec dword ptr [ebp - 0x12c4df6a]; call dword ptr [edx + 0x6a]; 
0x001737a5: dec dword ptr [ebp - 0x12e7df80]; call dword ptr [eax + 0x6a]; 
0x00171ce5: dec dword ptr [ebp - 0x12f39f80]; call dword ptr [eax + 0x6a]; 
0x00168662: dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x00058cd4: dec dword ptr [ebp - 0x137cff8a]; add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x00155d5c: dec dword ptr [ebp - 0x137cff8a]; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000e3465: dec dword ptr [ebp - 0x14424f80]; call dword ptr [eax + 0x6a]; 
0x000e0de5: dec dword ptr [ebp - 0x1468ef80]; call dword ptr [eax + 0x6a]; 
0x000b4a49: dec dword ptr [ebp - 0x15d1df80]; push esi; inc ecx; jge 0xb4a56; cmovne eax, edx; ret; 
0x0009a4f9: dec dword ptr [ebp - 0x171b7f80]; push esi; inc ecx; jle 0x9a514; cmovne eax, edx; ret; 
0x0009a079: dec dword ptr [ebp - 0x171c3f80]; push esi; inc ecx; jle 0x9a094; cmovne eax, edx; ret; 
0x00033230: dec dword ptr [ebp - 0x1f2faf7d]; call dword ptr [eax + 0x6a]; 
0x0002e4ea: dec dword ptr [ebp - 0x1f818f79]; call dword ptr [eax - 0x73]; 
0x0019a40c: dec dword ptr [ebp - 0x27cff8a]; add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x0004f6c8: dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x73]; 
0x000c63ee: dec dword ptr [ebp - 0x35e373]; call dword ptr [eax - 0x75]; 
0x00050075: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000c7242: dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x000503c2: dec dword ptr [ebp - 0x35f37b]; dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0003fba3: dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0004ed55: dec dword ptr [ebp - 0x35f79]; call dword ptr [eax - 0x73]; 
0x000c521a: dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x75]; 
0x000501f2: dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x00050490: dec dword ptr [ebp - 0x361773]; dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x0004fc4d: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000c737e: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x00066016: dec dword ptr [ebp - 0x418f97c]; jecxz 0x6601d; jmp eax; 
0x00141eed: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x0005fa58: dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x000634ed: dec dword ptr [ebp - 0x4cb7b]; call dword ptr [eax + 0x52]; 
0x00058f92: dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005dcd6: dec dword ptr [ebp - 0x5776b]; call dword ptr [edx + 0x50]; 
0x0016b755: dec dword ptr [ebp - 0x64bfb79]; call dword ptr [eax + 0x6a]; 
0x0016777a: dec dword ptr [ebp - 0x64c4379]; call dword ptr [eax - 0x73]; 
0x0015161f: dec dword ptr [ebp - 0x650ef7b]; call dword ptr [eax - 0x73]; 
0x0014d8db: dec dword ptr [ebp - 0x651fb7a]; call dword ptr [eax - 0x73]; 
0x0014b300: dec dword ptr [ebp - 0x652af7b]; call dword ptr [eax - 0x73]; 
0x0014aeeb: dec dword ptr [ebp - 0x652bf7d]; call dword ptr [eax - 0x73]; 
0x0014b31f: dec dword ptr [ebp - 0x652db6b]; call dword ptr [edx - 0x73]; 
0x0014a655: dec dword ptr [ebp - 0x653137f]; call dword ptr [eax - 0x73]; 
0x0014a7e5: dec dword ptr [ebp - 0x6531f7f]; call dword ptr [eax - 0x73]; 
0x0014aaae: dec dword ptr [ebp - 0x653377a]; call dword ptr [eax - 0x73]; 
0x00149b2d: dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x00144ca7: dec dword ptr [ebp - 0x655437d]; call dword ptr [eax - 0x73]; 
0x0013dddc: dec dword ptr [ebp - 0x6579f79]; call dword ptr [eax - 0x73]; 
0x00125822: dec dword ptr [ebp - 0x65c8f79]; call dword ptr [eax - 0x73]; 
0x0011e7e6: dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x0011dfa0: dec dword ptr [ebp - 0x65eb77d]; call dword ptr [eax - 0x73]; 
0x0010afba: dec dword ptr [ebp - 0x65fdb7f]; call dword ptr [eax - 0x73]; 
0x00176235: dec dword ptr [ebp - 0x6612b79]; call dword ptr [eax - 0x73]; 
0x00106adf: dec dword ptr [ebp - 0x6613f79]; call dword ptr [eax + 0x68]; 
0x00105da5: dec dword ptr [ebp - 0x6614f79]; call dword ptr [eax - 0x73]; 
0x000fd22d: dec dword ptr [ebp - 0x661bb7a]; call dword ptr [eax - 0x73]; 
0x000fdad3: dec dword ptr [ebp - 0x661e37a]; call dword ptr [eax - 0x73]; 
0x00174505: dec dword ptr [ebp - 0x664d779]; call dword ptr [eax - 0x73]; 
0x00172a45: dec dword ptr [ebp - 0x664eb79]; call dword ptr [eax - 0x73]; 
0x000e67a0: dec dword ptr [ebp - 0x6652f7d]; call dword ptr [eax - 0x73]; 
0x000e4ca0: dec dword ptr [ebp - 0x6653b7d]; call dword ptr [eax - 0x73]; 
0x000e41c5: dec dword ptr [ebp - 0x6656f79]; call dword ptr [eax - 0x73]; 
0x000e1b3e: dec dword ptr [ebp - 0x665777e]; call dword ptr [eax - 0x73]; 
0x000e00ff: dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000defb8: dec dword ptr [ebp - 0x665937b]; call dword ptr [eax - 0x73]; 
0x000df2ee: dec dword ptr [ebp - 0x665a77b]; call dword ptr [eax - 0x73]; 
0x000dccf6: dec dword ptr [ebp - 0x6666379]; call dword ptr [eax - 0x73]; 
0x000ccc43: dec dword ptr [ebp - 0x666df7d]; call dword ptr [eax - 0x73]; 
0x000cd69b: dec dword ptr [ebp - 0x666f37d]; call dword ptr [eax - 0x73]; 
0x000c663e: dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000c7947: dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7922: dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000c3e01: dec dword ptr [ebp - 0x6675b7b]; call dword ptr [eax - 0x73]; 
0x000c17c8: dec dword ptr [ebp - 0x667df7d]; call dword ptr [eax - 0x73]; 
0x000c14fa: dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x000b5855: dec dword ptr [ebp - 0x6698379]; call dword ptr [eax - 0x73]; 
0x000b569e: dec dword ptr [ebp - 0x6698f7e]; call dword ptr [eax - 0x73]; 
0x0009ec62: dec dword ptr [ebp - 0x66a3b70]; call dword ptr [edx - 0x73]; 
0x0009e97f: dec dword ptr [ebp - 0x66acf70]; call dword ptr [edx - 0x73]; 
0x000fccd7: dec dword ptr [ebp - 0x67343]; dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6d77b]; jmp dword ptr [ebp - 0x5f]; 
0x00090593: dec dword ptr [ebp - 0x67c6f79]; call dword ptr [eax - 0x73]; 
0x00090422: dec dword ptr [ebp - 0x67c837d]; call dword ptr [eax + 0x68]; 
0x0008ed39: dec dword ptr [ebp - 0x67d4b7e]; call dword ptr [eax - 0x73]; 
0x0008aebd: dec dword ptr [ebp - 0x67e137a]; call dword ptr [eax - 0x73]; 
0x0008a844: dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax - 0x73]; 
0x000894fb: dec dword ptr [ebp - 0x67e6b79]; call dword ptr [eax + 0x68]; 
0x00089524: dec dword ptr [ebp - 0x67e6b79]; call dword ptr [eax + 0x6a]; 
0x000895da: dec dword ptr [ebp - 0x67e6b79]; call dword ptr [eax - 0x73]; 
0x00088792: dec dword ptr [ebp - 0x67ea379]; call dword ptr [eax + 0x68]; 
0x000887ca: dec dword ptr [ebp - 0x67ea379]; call dword ptr [eax + 0x6a]; 
0x00088888: dec dword ptr [ebp - 0x67ea379]; call dword ptr [eax - 0x73]; 
0x0007da93: dec dword ptr [ebp - 0x681a37b]; call dword ptr [eax - 0x73]; 
0x00079d0e: dec dword ptr [ebp - 0x6820f7d]; call dword ptr [eax - 0x73]; 
0x0007815e: dec dword ptr [ebp - 0x682e37a]; call dword ptr [eax - 0x73]; 
0x00065f7d: dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x00064966: dec dword ptr [ebp - 0x6879f7a]; call dword ptr [eax + 0x68]; 
0x0005b651: dec dword ptr [ebp - 0x687b37a]; call dword ptr [eax - 0x73]; 
0x0004fa75: dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00050b39: dec dword ptr [ebp - 0x689bb79]; call dword ptr [eax - 0x73]; 
0x000c7a00: dec dword ptr [ebp - 0x689bb7f]; call dword ptr [eax - 0x73]; 
0x001379b1: dec dword ptr [ebp - 0x68d4b57]; call dword ptr [eax + 0x55]; 
0x0002e949: dec dword ptr [ebp - 0x68e237e]; call dword ptr [eax - 0x73]; 
0x0002c1ff: dec dword ptr [ebp - 0x68e9f7d]; call dword ptr [eax - 0x73]; 
0x00023ad1: dec dword ptr [ebp - 0x691637d]; call dword ptr [eax - 0x73]; 
0x00089dd2: dec dword ptr [ebp - 0x6937f7b]; call dword ptr [eax - 0x73]; 
0x0008890a: dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x00138bae: dec dword ptr [ebp - 0x69ade7d]; call dword ptr [esi + 0x6a]; 
0x0015b6c4: dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x00157911: dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x0015770c: dec dword ptr [ebp - 0x69c687d]; call dword ptr [edx + 0x6a]; 
0x00142098: dec dword ptr [ebp - 0x6a25079]; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x00141539: dec dword ptr [ebp - 0x6a26980]; call dword ptr [eax - 0x73]; 
0x0013e041: dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0012a36f: dec dword ptr [ebp - 0x6a91879]; call dword ptr [ebp - 1]; 
0x00121bd7: dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x000fd1a2: dec dword ptr [ebp - 0x6af7b]; call dword ptr [eax - 0x77]; 
0x000fcce3: dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6d77b]; jmp dword ptr [ebp - 0x5f]; 
0x0011974a: dec dword ptr [ebp - 0x6b48f7a]; call dword ptr [edi + 0x50]; 
0x000f2bb8: dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000debd6: dec dword ptr [ebp - 0x6b8e579]; call dword ptr [eax - 0x18]; 
0x000de2c7: dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x000de28c: dec dword ptr [ebp - 0x6b94180]; call dword ptr [eax + 0x6a]; 
0x000fc718: dec dword ptr [ebp - 0x6bb7b]; call dword ptr [eax - 0x73]; 
0x00098a64: dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00096de6: dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000f2e48: dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000ea1ca: dec dword ptr [ebp - 0x6cd967d]; call dword ptr [edx + 0x52]; 
0x0003fb9d: dec dword ptr [ebp - 0x6cffe79]; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0002ea15: dec dword ptr [ebp - 0x6d17850]; jmp dword ptr [ebp - 0x75]; 
0x0009d83a: dec dword ptr [ebp - 0x6fffd98c]; add esp, 4; pop ebx; pop esi; ret; 
0x00076032: dec dword ptr [ebp - 0x6fffd98c]; mov eax, 0xffffffff; ret; 
0x000f66bd: dec dword ptr [ebp - 0x702a87d]; call dword ptr [ecx + 0x6a]; 
0x00129a9b: dec dword ptr [ebp - 0x74ffd98c]; inc edi; sbb byte ptr [ecx], ch; ret 0x5250; 
0x000ff95d: dec dword ptr [ebp - 0x76afdba4]; ret 0x4c89; 
0x00122278: dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012232d: dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x000619d3: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x000875ab: dec dword ptr [ebp - 0x7cffd98c]; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000bb1e3: dec dword ptr [ebp - 0x7cffd98c]; ret 0x8304; 
0x001194ca: dec dword ptr [ebp - 0x837b]; call dword ptr [eax - 0x73]; 
0x0013c39e: dec dword ptr [ebp - 0x9b72]; dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x00125777: dec dword ptr [ebp - 0xa77b]; call dword ptr [eax + 0x6a]; 
0x0016866e: dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x0009af55: dec dword ptr [ebp - 0xacb6f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012f1d5: dec dword ptr [ebp - 0xacb8f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009afe5: dec dword ptr [ebp - 0xace9f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012f225: dec dword ptr [ebp - 0xacebf7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009b345: dec dword ptr [ebp - 0xad1cf7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012f185: dec dword ptr [ebp - 0xad1ef7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009b035: dec dword ptr [ebp - 0xad98f7e]; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0002ee41: dec dword ptr [ebp - 0xcb4b]; dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x0015f6c8: dec dword ptr [ebp - 0xd023f4a]; call dword ptr [ebp - 0x73]; 
0x000ce01c: dec dword ptr [ebp - 0xdf7b]; call dword ptr [eax - 0x73]; 
0x0009af5b: dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00066a67: dec dword ptr [ebx + 0x193c80]; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00166521: dec dword ptr [ebx + 0x291c244c]; ret; 
0x0016ef5b: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00080ed7: dec dword ptr [ebx + 0x34485]; add byte ptr [ebp + 0x52840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009a8aa: dec dword ptr [ebx + 0x3904244c]; ret; 
0x00061382: dec dword ptr [ebx + 0x393bdb19]; ret 0x840f; 
0x0014596e: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00058ba2: dec dword ptr [ebx + 0x39c8290f]; ret; 
0x00094a93: dec dword ptr [ebx + 0x4489b]; add cl, ch; ret 0xfffd; 
0x000f5f27: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f5f3c: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00100676: dec dword ptr [ebx + 0x4ec8384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00077bae: dec dword ptr [ebx + 0x508b5843]; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00161e8f: dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x001647fa: dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011d533: dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x001775c7: dec dword ptr [ebx + 0x5b082444]; ret; 
0x0011ea33: dec dword ptr [ebx + 0x5b108916]; pop esi; pop edi; ret; 
0x000660cb: dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x0004954c: dec dword ptr [ebx + 0x5f8d243c]; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x00142493: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x00144226: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x000e74a2: dec dword ptr [ebx + 0x728d044a]; add al, 0x81; ret 0x2000; 
0x0004b431: dec dword ptr [ebx + 0x7503b855]; rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0011d8f7: dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x000dc2ad: dec dword ptr [ebx + 0x882494]; add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00081e35: dec dword ptr [ebx + 0x9880]; add cl, al; call 0x1e8a14d; mov dword ptr [edx + 0x19f0], eax; ret; 
0x001647ee: dec dword ptr [ebx + 0xa5808f]; add byte ptr [ecx - 0xa37b], cl; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013bb28: dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x000fccdd: dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6d77b]; jmp dword ptr [ebp - 0x5f]; 
0x0014159b: dec dword ptr [ebx - 0x1137d]; jmp dword ptr [ebp - 0x75]; 
0x000fdb5c: dec dword ptr [ebx - 0x1137f]; jmp dword ptr [ebp - 0x39]; 
0x0013b298: dec dword ptr [ebx - 0x11380]; jmp dword ptr [ebp - 0x39]; 
0x0013f588: dec dword ptr [ebx - 0x11380]; jmp dword ptr [ebp - 0x75]; 
0x0013afd6: dec dword ptr [ebx - 0x11380]; jmp dword ptr [ebp - 0x77]; 
0x000fdbe3: dec dword ptr [ebx - 0x11380]; jmp dword ptr [ebp - 0x7d]; 
0x0005cfbf: dec dword ptr [ebx - 0x13348]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00103193: dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x00044965: dec dword ptr [ebx - 0x1334b]; jmp dword ptr [ebp - 0x39]; 
0x00126ff4: dec dword ptr [ebx - 0x1334d]; jmp dword ptr [ebp - 0x75]; 
0x0013c24d: dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x00086cdc: dec dword ptr [ebx - 0x13365]; jmp dword ptr [ebp - 0x7d]; 
0x000dfe30: dec dword ptr [ebx - 0x13368]; jmp dword ptr [ebp - 0x75]; 
0x0008d768: dec dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00138a1a: dec dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x7d]; 
0x00047ed6: dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x0003e7f5: dec dword ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x39]; 
0x0003b195: dec dword ptr [ebx - 0x13379]; jmp dword ptr [ebp - 0x39]; 
0x001103fb: dec dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x39]; 
0x0010e334: dec dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x75]; 
0x00077326: dec dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x00037014: dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0008761e: dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x75]; 
0x0007096d: dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x7d]; 
0x000b55e5: dec dword ptr [ebx - 0x1337e]; jmp dword ptr [ebp - 0x39]; 
0x000fdb69: dec dword ptr [ebx - 0x1337f]; jmp dword ptr [ebp - 0x39]; 
0x001686cf: dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x75]; 
0x00060d75: dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0003513b: dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00070c77: dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x75]; 
0x0005939b: dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x000dfef6: dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x0012cea9: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x0012c65c: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa468808d; stc; call dword ptr [eax - 0x75]; 
0x0012d28e: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa4a0808d; stc; call dword ptr [eax + 0x6a]; 
0x0002ff14: dec dword ptr [ebx - 0x13b68]; jmp dword ptr [ebp - 0x75]; 
0x0010337b: dec dword ptr [ebx - 0x13f43]; push edi; fmul dword ptr [ebx - 0x13341]; jmp dword ptr [ebp - 0x77]; 
0x000de3cb: dec dword ptr [ebx - 0x15537b]; inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x00097d2b: dec dword ptr [ebx - 0x15b6d]; jmp dword ptr [ebp - 0x75]; 
0x0016870a: dec dword ptr [ebx - 0x15b73]; jmp dword ptr [ebp - 0x77]; 
0x0009823f: dec dword ptr [ebx - 0x15b7b]; jmp dword ptr [ebp - 0x80]; 
0x0002e847: dec dword ptr [ebx - 0x1637b]; push dword ptr [ebx]; sub esp, 0x89000010; ret 0x858b; 
0x0002e825: dec dword ptr [ebx - 0x1877b]; push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x00106ad9: dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6613f79]; call dword ptr [eax + 0x68]; 
0x000e00f9: dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000e0033: dec dword ptr [ebx - 0x18f7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x75]; 
0x00104369: dec dword ptr [ebx - 0x19f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x001042a3: dec dword ptr [ebx - 0x19f7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x75]; 
0x0002e4e4: dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1f818f79]; call dword ptr [eax - 0x73]; 
0x0002e4de: dec dword ptr [ebx - 0x1cf43]; dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1f818f79]; call dword ptr [eax - 0x73]; 
0x0002e943: dec dword ptr [ebx - 0x1cf6b]; dec dword ptr [ebp - 0x68e237e]; call dword ptr [eax - 0x73]; 
0x0002e81f: dec dword ptr [ebx - 0x1cf73]; dec dword ptr [ebx - 0x1877b]; push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x00033571: dec dword ptr [ebx - 0x1f363]; inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x0004f600: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004fc47: dec dword ptr [ebx - 0x35ff73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0004f9e0: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004f811: dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x000c54c0: dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x000c5220: dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x75]; 
0x0004fcf6: dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x000c6ea8: dec dword ptr [ebx - 0x36337b]; call dword ptr [esi - 1]; 
0x000c6b54: dec dword ptr [ebx - 0x36376b]; inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0004fce2: dec dword ptr [ebx - 0x36377b]; call dword ptr [esi - 1]; 
0x000c5fb4: dec dword ptr [ebx - 0x363b73]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c6638: dec dword ptr [ebx - 0x363f43]; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000c70de: dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0004e350: dec dword ptr [ebx - 0x363f6b]; call dword ptr [eax - 0x73]; 
0x000c7941: dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c791c: dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000c79fa: dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x689bb7f]; call dword ptr [eax - 0x73]; 
0x000c6317: dec dword ptr [ebx - 0x363f7b]; call dword ptr [edi + 0x6a]; 
0x0004e9fd: dec dword ptr [ebx - 0x363f7b]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c5108: dec dword ptr [ebx - 0x36476b]; call dword ptr [eax - 0x73]; 
0x000c63df: dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x000c6e28: dec dword ptr [ebx - 0x364b7b]; inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x0004fa6f: dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00050b33: dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689bb79]; call dword ptr [eax - 0x73]; 
0x000501ec: dec dword ptr [ebx - 0x365363]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0006b06d: dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x0004ff98: dec dword ptr [ebx - 0x365f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000c5fae: dec dword ptr [ebx - 0x36736b]; dec dword ptr [ebx - 0x363b73]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c5770: dec dword ptr [ebx - 0x387cfb89]; add al, 0x83; ret; 
0x0014c869: dec dword ptr [ebx - 0x38dbdbbc]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x75]; 
0x0006600f: dec dword ptr [ebx - 0x3a5f797c]; clc; dec dword ptr [ebp - 0x418f97c]; jecxz 0x6601d; jmp eax; 
0x000dd955: dec dword ptr [ebx - 0x3b7c2bbb]; adc byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0012ec55: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0012bdb6: dec dword ptr [ebx - 0x3b7cd7ba]; adc byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x57]; 
0x0012c647: dec dword ptr [ebx - 0x3b7cf783]; adc byte ptr [ecx], cl; ret; 
0x0008e428: dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0011cd58: dec dword ptr [ebx - 0x3f7adbc0]; cmove eax, edx; ret; 
0x00115f94: dec dword ptr [ebx - 0x3f7aefc0]; je 0x115f9d; ret; 
0x000eac46: dec dword ptr [ebx - 0x3f7ce3ad]; add dword ptr [ecx], edi; ret 0xef7f; 
0x00140ac1: dec dword ptr [ebx - 0x4236b]; call dword ptr [ebx - 0x18]; 
0x00140bb5: dec dword ptr [ebx - 0x42b63]; jmp dword ptr [ebp - 0x75]; 
0x00141595: dec dword ptr [ebx - 0x43343]; dec dword ptr [ebx - 0x1137d]; jmp dword ptr [ebp - 0x75]; 
0x0014212a: dec dword ptr [ebx - 0x44343]; jmp dword ptr [ebp - 0x75]; 
0x0005b348: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0005e303: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0005d2d9: dec dword ptr [ebx - 0x4477b]; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00142124: dec dword ptr [ebx - 0x44f7b]; dec dword ptr [ebx - 0x44343]; jmp dword ptr [ebp - 0x75]; 
0x001415ac: dec dword ptr [ebx - 0x45343]; jmp dword ptr [ebp - 0x77]; 
0x0014200d: dec dword ptr [ebx - 0x45373]; jmp dword ptr [ebp - 0x75]; 
0x000644e3: dec dword ptr [ebx - 0x4576b]; jmp dword ptr [ebp - 0x75]; 
0x0005ad1a: dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74878a37]; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005ed75: dec dword ptr [ebx - 0x4577b]; call dword ptr [ebx - 0x73]; 
0x0005d1fc: dec dword ptr [ebx - 0x457cc7aa]; cld; add eax, dword ptr [eax]; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x000ff2a0: dec dword ptr [ebx - 0x4636b]; call dword ptr [eax + 0x53]; 
0x000ff221: dec dword ptr [ebx - 0x4636b]; call dword ptr [eax - 0x77]; 
0x000e0465: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x77]; 
0x000e1b38: dec dword ptr [ebx - 0x46f6b]; dec dword ptr [ebp - 0x665777e]; call dword ptr [eax - 0x73]; 
0x000e1635: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000e0dd9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1468ef80]; call dword ptr [eax + 0x6a]; 
0x0017622f: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6612b79]; call dword ptr [eax - 0x73]; 
0x00105d9f: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6614f79]; call dword ptr [eax - 0x73]; 
0x001744ff: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x664d779]; call dword ptr [eax - 0x73]; 
0x00172a3f: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x664eb79]; call dword ptr [eax - 0x73]; 
0x000e41bf: dec dword ptr [ebx - 0x47343]; dec dword ptr [ebp - 0x6656f79]; call dword ptr [eax - 0x73]; 
0x000e3ca5: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x001754c9: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x11ff0f80]; call dword ptr [eax + 0x6a]; 
0x00105039: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12266f80]; call dword ptr [eax + 0x6a]; 
0x00173799: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12e7df80]; call dword ptr [eax + 0x6a]; 
0x00171cd9: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12f39f80]; call dword ptr [eax + 0x6a]; 
0x000e3459: dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14424f80]; call dword ptr [eax + 0x6a]; 
0x000ff067: dec dword ptr [ebx - 0x4777b]; inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000e09aa: dec dword ptr [ebx - 0x47f6b]; call dword ptr [edi - 1]; 
0x000eaf67: dec dword ptr [ebx - 0x47fbdbac]; push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x001754cf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x11ff0f80]; call dword ptr [eax + 0x6a]; 
0x0010503f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12266f80]; call dword ptr [eax + 0x6a]; 
0x0017379f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12e7df80]; call dword ptr [eax + 0x6a]; 
0x00171cdf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12f39f80]; call dword ptr [eax + 0x6a]; 
0x000e345f: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14424f80]; call dword ptr [eax + 0x6a]; 
0x000e0ddf: dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1468ef80]; call dword ptr [eax + 0x6a]; 
0x00052246: dec dword ptr [ebx - 0x49f07fbb]; push eax; or al, 0xf6; ret 0xf40; 
0x0005fa4c: dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00064960: dec dword ptr [ebx - 0x4f34b]; dec dword ptr [ebp - 0x6879f7a]; call dword ptr [eax + 0x68]; 
0x000615f7: dec dword ptr [ebx - 0x4f363]; call dword ptr [eax + 0x51]; 
0x000613b4: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x13380]; dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x00062729: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00060e68: dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00060d81: dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x00124761: dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000601b8: dec dword ptr [ebx - 0x4ff4b]; call dword ptr [edi - 0x75]; 
0x00124929: dec dword ptr [ebx - 0x5034b]; dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x00064599: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 0x77]; 
0x00060059: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00061bdf: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x00061c60: dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x75]; 
0x00061afa: dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x0005ff25: dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00060d87: dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0006459f: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 0x77]; 
0x000623cd: dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x00060114: dec dword ptr [ebx - 0x51763]; jmp dword ptr [ebp - 0x77]; 
0x000649c7: dec dword ptr [ebx - 0x5177b]; call dword ptr [ebx + 0x53]; 
0x000640d6: dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x00063981: dec dword ptr [ebx - 0x52f63]; call ecx; 
0x0005d0ba: dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x0005b64b: dec dword ptr [ebx - 0x59b4b]; dec dword ptr [ebp - 0x687b37a]; call dword ptr [eax - 0x73]; 
0x0005eb34: dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0005cfb9: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13348]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0005c577: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00059509: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00058f7a: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005f3c8: dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ecx - 0x5bf43]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005abe5: dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x0005c20e: dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x5bb4b]; jmp dword ptr [ebp - 0x77]; 
0x0005d95e: dec dword ptr [ebx - 0x5a343]; jmp dword ptr [ebp - 0x77]; 
0x00059395: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0005f1f9: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x59f63]; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x77]; 
0x0005cc66: dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5b763]; dec dword ptr [ecx - 0x59f73]; jmp dword ptr [ebp - 0x77]; 
0x0005f459: dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x0005a210: dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0005d0b4: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x0005c208: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a343]; dec dword ptr [ebx - 0x5bb4b]; jmp dword ptr [ebp - 0x77]; 
0x0005d958: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a343]; jmp dword ptr [ebp - 0x77]; 
0x0005f1f3: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x59f63]; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x77]; 
0x0005cc60: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ecx - 0x5b763]; dec dword ptr [ecx - 0x59f73]; jmp dword ptr [ebp - 0x77]; 
0x0005f453: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x0005ae29: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x75]; 
0x0005cf9f: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5b34b]; jmp dword ptr [ebp - 0x75]; 
0x0005c272: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5bb4b]; jmp dword ptr [ebp - 0x75]; 
0x0005b570: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x000597ea: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5ab7b]; jmp dword ptr [ebp - 0x75]; 
0x0005cd4c: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5b763]; jmp dword ptr [ebp - 0x75]; 
0x0005f1d9: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x75]; 
0x0005af9b: dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x60763]; jmp dword ptr [ebp - 0x75]; 
0x000598f4: dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0005af52: dec dword ptr [ebx - 0x5a77b]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x0005a20a: dec dword ptr [ebx - 0x5ab43]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0005ae2f: dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x75]; 
0x0005abeb: dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x77]; 
0x0005cfa5: dec dword ptr [ebx - 0x5b34b]; jmp dword ptr [ebp - 0x75]; 
0x0005c278: dec dword ptr [ebx - 0x5bb4b]; jmp dword ptr [ebp - 0x75]; 
0x0005c214: dec dword ptr [ebx - 0x5bb4b]; jmp dword ptr [ebp - 0x77]; 
0x0005b576: dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x0005bae1: dec dword ptr [ebx - 0x5c77b]; dec dword ptr [ecx - 0x59f7b]; jmp dword ptr [esi - 0x70]; 
0x0005d1f6: dec dword ptr [ebx - 0x5cb4b]; dec dword ptr [ebx - 0x457cc7aa]; cld; add eax, dword ptr [eax]; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x0005d04a: dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0005e6a3: dec dword ptr [ebx - 0x5ef73]; dec dword ptr [ecx - 0x59f6b]; call dword ptr [edx - 0x75]; 
0x000c0888: dec dword ptr [ebx - 0x677e]; push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x00065f35: dec dword ptr [ebx - 0x6780]; jmp dword ptr [ebp - 0x75]; 
0x000e0cf8: dec dword ptr [ebx - 0x6a74f3b3]; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0018dcf1: dec dword ptr [ebx - 0x6b7f7c7c]; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4e4: dec dword ptr [ebx - 0x6b7f7c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000fd89f: dec dword ptr [ebx - 0x6e34b]; dec dword ptr [ebp - 0x661bb7a]; call dword ptr [eax - 0x73]; 
0x000fdacd: dec dword ptr [ebx - 0x6e34b]; dec dword ptr [ebp - 0x661e37a]; call dword ptr [eax - 0x73]; 
0x000fccd1: dec dword ptr [ebx - 0x6e37b]; dec dword ptr [ebp - 0x67343]; dec dword ptr [ebx - 0x11368]; dec dword ptr [ebp - 0x6af7b]; dec dword ptr [ecx - 0x6d77b]; jmp dword ptr [ebp - 0x5f]; 
0x000fdbdd: dec dword ptr [ebx - 0x6e37b]; dec dword ptr [ebx - 0x11380]; jmp dword ptr [ebp - 0x7d]; 
0x000fdc8e: dec dword ptr [ebx - 0x6e37b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x0002141e: dec dword ptr [ebx - 0x6f70]; call dword ptr [esi + 0x53]; 
0x000fd68a: dec dword ptr [ebx - 0x6fb43]; jmp dword ptr [ebp + 3]; 
0x000fd677: dec dword ptr [ebx - 0x7037b]; jmp dword ptr [ebp + 3]; 
0x000fd05a: dec dword ptr [ebx - 0x7037b]; jmp dword ptr [ebp - 0x39]; 
0x00148075: dec dword ptr [ebx - 0x72b3db84]; xchg dword ptr [ebx + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000252f0: dec dword ptr [ebx - 0x72b3db84]; xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x0002b036: dec dword ptr [ebx - 0x72bbdb8c]; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00029c2e: dec dword ptr [ebx - 0x72bbdb8c]; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x00026e5d: dec dword ptr [ebx - 0x72c3db84]; xchg eax, esi; jo 0x26e60; call dword ptr [eax - 0x73]; 
0x00025eb7: dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00024c4b: dec dword ptr [ebx - 0x72c3dba4]; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00027b0c: dec dword ptr [ebx - 0x72c7db84]; xchg esp, edx; jo 0x27b0f; call dword ptr [eax - 0x73]; 
0x00151d58: dec dword ptr [ebx - 0x72cbdb84]; xchg esp, esi; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000ba983: dec dword ptr [ebx - 0x72cfdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000b9b3a: dec dword ptr [ebx - 0x72cfdb84]; xchg esp, ebx; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000bd693: dec dword ptr [ebx - 0x72cfdb84]; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00040478: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000656e0: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax], esp; jns 0x656e3; call dword ptr [eax - 0x73]; 
0x0006a728: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax], esp; jns 0x6a72b; call dword ptr [eax - 0x73]; 
0x00041119: dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x00043617: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00149f98: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x000bf5de: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00044375: dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000441ca: dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00109ace: dec dword ptr [ebx - 0x72dbdba4]; sbb dword ptr [eax], -0x60; stc; call dword ptr [eax - 0x73]; 
0x000b61bd: dec dword ptr [ebx - 0x72e3db8c]; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000d140b: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [ecx + ebx*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0003ead5: dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0011bf3f: dec dword ptr [ebx - 0x72ebdbb4]; and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x00100d6b: dec dword ptr [ebx - 0x72efdb84]; xchg dword ptr [eax - 0x62], esi; stc; call dword ptr [eax - 0x73]; 
0x0013923b: dec dword ptr [ebx - 0x72efdbac]; cmp ah, 0xa6; stc; call dword ptr [eax - 0x73]; 
0x001493f8: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x000563aa: dec dword ptr [ebx - 0x72f3db8c]; xchg ah, bh; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x00089070: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00088331: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0014a534: dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014a3e0: dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x00085d4e: dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x001512ab: dec dword ptr [ebx - 0x74a7dba4]; cmp eax, dword ptr [ebp - 0x7c868b01]; ret; 
0x00109414: dec dword ptr [ebx - 0x74dfdba4]; dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00147344: dec dword ptr [ebx - 0x74e7dbbc]; pop eax; or dh, dh; ret; 
0x00122df4: dec dword ptr [ebx - 0x74f3dbb4]; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00148ca0: dec dword ptr [ebx - 0x74f3dbbc]; xchg esp, eax; and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x000bb0b7: dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x000d64e4: dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001081f9: dec dword ptr [ebx - 0x76cfdbb4]; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0013779b: dec dword ptr [ebx - 0x76d3dbbc]; adc byte ptr [ebp - 0x1ff7d], cl; jmp dword ptr [esi + 0x3d]; 
0x00057336: dec dword ptr [ebx - 0x76dbdb8c]; ret 0xfa29; 
0x000eff49: dec dword ptr [ebx - 0x76dfdb84]; ret; 
0x00109254: dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x001169c4: dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00116a94: dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00093409: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000305eb: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x0005fa40: dec dword ptr [ebx - 0x777f]; dec dword ptr [ecx - 0x54343]; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00058f86: dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x00102082: dec dword ptr [ebx - 0x7872dbc4]; cwde; sahf; stc; call dword ptr [eax - 0x73]; 
0x00101e34: dec dword ptr [ebx - 0x7872dbc4]; jl 0x101dda; stc; call dword ptr [eax - 0x73]; 
0x00102060: dec dword ptr [ebx - 0x7872dbc4]; jl 0x102006; stc; call dword ptr [eax - 0x73]; 
0x00086d9e: dec dword ptr [ebx - 0x7872dbc4]; jl 0x86e25; stc; call dword ptr [eax + 0x68]; 
0x00086fc5: dec dword ptr [ebx - 0x7872dbc4]; jl 0x8704c; stc; call dword ptr [eax - 0x73]; 
0x00086fe7: dec dword ptr [ebx - 0x7872dbc4]; jl 0x8706e; stc; call dword ptr [eax - 0x73]; 
0x0008703f: dec dword ptr [ebx - 0x7872dbc4]; jl 0x870c6; stc; call dword ptr [eax - 0x73]; 
0x00087083: dec dword ptr [ebx - 0x7872dbc4]; jl 0x8710a; stc; call dword ptr [eax - 0x73]; 
0x000fa910: dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0008618b: dec dword ptr [ebx - 0x79724f8b]; pop eax; jg 0x8618d; call dword ptr [eax - 0x73]; 
0x00166439: dec dword ptr [ebx - 0x79726b8b]; lodsb al, byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00091956: dec dword ptr [ebx - 0x7972778b]; dec eax; test cl, bh; call dword ptr [eax + 0x68]; 
0x00091990: dec dword ptr [ebx - 0x7972778b]; dec eax; test cl, bh; call dword ptr [eax - 0x73]; 
0x00141e3f: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c0191: dec dword ptr [ebx - 0x7ab3dbbc]; ror byte ptr [edi], 0x84; ret 0xffea; 
0x00025d67: dec dword ptr [ebx - 0x7ae3dbbc]; ror byte ptr [edi], 0x85; ret; 
0x0016d863: dec dword ptr [ebx - 0x7bfc3bbb]; nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x0002f165: dec dword ptr [ebx - 0x7c034eb4]; jns 0x2f185; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x000fa998: dec dword ptr [ebx - 0x7c72dbe4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0005637c: dec dword ptr [ebx - 0x7cb7dba4]; ret; 
0x00029c1b: dec dword ptr [ebx - 0x7ccbdbbc]; ret 0x8904; 
0x00034aee: dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x000f93fa: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x0012ee41: dec dword ptr [ebx - 0x7d7243ab]; mov ah, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x00076b1e: dec dword ptr [ebx - 0x7d7257ab]; or byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x00164b14: dec dword ptr [ebx - 0x877b]; jmp dword ptr [ebp - 0x39]; 
0x0006c192: dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x0006c320: dec dword ptr [ebx - 0x8977b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00066eb1: dec dword ptr [ebx - 0x8b74b]; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00066706: dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x00067443: dec dword ptr [ebx - 0x8d34b]; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0006b86f: dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x0013bb22: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx + 0xff1390b]; xchg esi, eax; ret 0xf983; 
0x000dc3ef: dec dword ptr [ebx - 0x8f7dbb4]; fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x0012cdac: dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0012d057: dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x000541a3: dec dword ptr [ebx - 0xa34b]; call dword ptr [edx - 0x77]; 
0x0013eb2d: dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00057805: dec dword ptr [ebx - 0xb755]; jmp dword ptr [ebp - 0x75]; 
0x0012581c: dec dword ptr [ebx - 0xbb43]; dec dword ptr [ebp - 0x65c8f79]; call dword ptr [eax - 0x73]; 
0x001258e9: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x000577ff: dec dword ptr [ebx - 0xd34d]; dec dword ptr [ebx - 0xb755]; jmp dword ptr [ebp - 0x75]; 
0x0011c26a: dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3ac: dec dword ptr [ebx - 0xdb7d]; inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c458; call eax; 
0x00167774: dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x64c4379]; call dword ptr [eax - 0x73]; 
0x00084f53: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000dc74c: dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00159827: dec dword ptr [ecx + 0x24448bc7]; sbb byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x000c010c: dec dword ptr [ecx + 0x244c89fe]; adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x00129ad0: dec dword ptr [ecx + 0x24748bd3]; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x00124d7c: dec dword ptr [ecx + 0x260b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00063186: dec dword ptr [ecx + 0x29008bf2]; ret 0xd189; 
0x0005afd6: dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x0005b7b3: dec dword ptr [ecx + 0x29008bfa]; ret 0xd189; 
0x0005b239: dec dword ptr [ecx + 0x29078bca]; ret 0x953b; 
0x000f2b19: dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x000666fe: dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x00086aab: dec dword ptr [ecx + 0x40e383c3]; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0016ca5c: dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 - 0x5f7d72e8], al; pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x000cbb4a: dec dword ptr [ecx + 0x4708910]; pop ebx; pop esi; pop edi; ret; 
0x0016323d: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0011d5eb: dec dword ptr [ecx + 0x4b82846]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000ce67d: dec dword ptr [ecx + 0x4c48310]; xor eax, eax; pop ebx; pop esi; ret; 
0x000411b5: dec dword ptr [ecx + 0x50808dc7]; jbe 0x411b6; call dword ptr [eax - 0x73]; 
0x001638bc: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x001570fa: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x0002f629: dec dword ptr [ecx + 0x5b108931]; pop esi; pop edi; ret; 
0x00073ef0: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00051b8d: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000eea96: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x00157ad2: dec dword ptr [ecx + 0x65e82434]; xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0006a816: dec dword ptr [ecx + 0x6c85c7ce]; idiv edi; call dword ptr [ebx]; 
0x0014f435: dec dword ptr [ecx + 0x74808dc6]; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00038450: dec dword ptr [ecx + 0xf042444]; xchg ebp, eax; ret; 
0x00022898: dec dword ptr [ecx + 0xfd28510]; test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x0014de06: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x0014dae8: dec dword ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x00102d5d: dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0016862e: dec dword ptr [ecx - 0x15b43]; jmp dword ptr [ebp - 0x5f]; 
0x001686d5: dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x75]; 
0x0005f73a: dec dword ptr [ecx - 0x1629760d]; popfd; aam 0xff; call dword ptr [eax - 0x75]; 
0x00132912: dec dword ptr [ecx - 0x16e7dbbc]; mov ebp, 0xe8fffffe; jmp esi; 
0x00068def: dec dword ptr [ecx - 0x16efdba4]; mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006ef7f: dec dword ptr [ecx - 0x17f7dbb4]; aaa; ret; 
0x000dfaef: dec dword ptr [ecx - 0x1937b]; call dword ptr [edi - 0x18]; 
0x000dffd1: dec dword ptr [ecx - 0x1937b]; call dword ptr [esi - 0x18]; 
0x00103d6f: dec dword ptr [ecx - 0x1a37b]; call dword ptr [edi - 0x18]; 
0x00104241: dec dword ptr [ecx - 0x1a37b]; call dword ptr [esi - 0x18]; 
0x00129b53: dec dword ptr [ecx - 0x1b17dbcc]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e9853: dec dword ptr [ecx - 0x1b17dbcc]; push 0xc483fff3; adc al, 0x5b; pop esi; ret; 
0x0002e4d8: dec dword ptr [ecx - 0x1c343]; dec dword ptr [ebx - 0x1cf43]; dec dword ptr [ebx - 0x1bb63]; dec dword ptr [ebp - 0x1f818f79]; call dword ptr [eax - 0x73]; 
0x0002e03f: dec dword ptr [ecx - 0x1c373]; call dword ptr [eax - 1]; 
0x00099ea1: dec dword ptr [ecx - 0x2917dbe4]; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x000e9565: dec dword ptr [ecx - 0x2d17dbcc]; imul esi, ebx, -1; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004e0a0: dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0004e09a: dec dword ptr [ecx - 0x35ff73]; dec dword ptr [ecx - 0x35fb63]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0004f80b: dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0004e66c: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000c7248: dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x000503c8: dec dword ptr [ecx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x000c76ce: dec dword ptr [ecx - 0x36277b]; dec dword ptr [edi]; test byte ptr [ebx + edi*8 - 1], dh; call dword ptr [eax + 0x6a]; 
0x0004fa61: dec dword ptr [ecx - 0x364f7b]; inc dword ptr [ebp - 0x3e70f040]; out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x000e79f7: dec dword ptr [ecx - 0x3e0f7626]; cli; sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000fcb20: dec dword ptr [ecx - 0x3f7f723a]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x000fbc43: dec dword ptr [ecx - 0x3f7f723f]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x00024189: dec dword ptr [ecx - 0x4117dbc4]; ret; 
0x00087dd9: dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00141435: dec dword ptr [ecx - 0x43b6b]; call dword ptr [eax - 0x18]; 
0x0014096a: dec dword ptr [ecx - 0x44373]; jmp dword ptr [ebp - 0x75]; 
0x0013ff65: dec dword ptr [ecx - 0x457bf03d]; add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffcabc], cl; in al, dx; add al, 1; ret 0x4489; 
0x0010316a: dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001032a1: dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e016e: dec dword ptr [ecx - 0x4777b]; jmp dword ptr [ebp - 0x5f]; 
0x00138a33: dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00024447: dec dword ptr [ecx - 0x48f0f7bd]; xchg esp, edx; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x000e17cf: dec dword ptr [ecx - 0x4976b]; call dword ptr [eax - 0x18]; 
0x000e3e3f: dec dword ptr [ecx - 0x4976b]; call dword ptr [eax - 0x18]; hlt; ret 0xfff3; 
0x000e185e: dec dword ptr [ecx - 0x4977b]; inc dword ptr [ecx]; ret; 
0x0012492f: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x0005fa52: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00060053: dec dword ptr [ecx - 0x4cf7b]; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00061a3c: dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x0005f9af: dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x00060d7b: dec dword ptr [ecx - 0x4f77b]; dec dword ptr [ebx - 0x4f77b]; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0006005f: dec dword ptr [ecx - 0x4f77b]; jmp dword ptr [ebp - 0x75]; 
0x00061be5: dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x00061e7c: dec dword ptr [ecx - 0x4ff4b]; jmp dword ptr [ebp - 0x75]; 
0x00061c66: dec dword ptr [ecx - 0x52f4b]; jmp dword ptr [ebp - 0x75]; 
0x00061beb: dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x0005fa28: dec dword ptr [ecx - 0x53b7b]; jmp dword ptr [ebp - 0x75]; 
0x0005f9a9: dec dword ptr [ecx - 0x53f73]; dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x0005fa46: dec dword ptr [ecx - 0x54343]; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x00058f80: dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x00058f8c: dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005f1ff: dec dword ptr [ecx - 0x59f63]; dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x77]; 
0x0005e6a9: dec dword ptr [ecx - 0x59f6b]; call dword ptr [edx - 0x75]; 
0x0005cc72: dec dword ptr [ecx - 0x59f73]; jmp dword ptr [ebp - 0x77]; 
0x0005cf99: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5b34b]; jmp dword ptr [ebp - 0x75]; 
0x0005b56a: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x0005cd46: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x5b763]; jmp dword ptr [ebp - 0x75]; 
0x0005af95: dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x60763]; jmp dword ptr [ebp - 0x75]; 
0x0005bae7: dec dword ptr [ecx - 0x59f7b]; jmp dword ptr [esi - 0x70]; 
0x0005b250: dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x0005bc1f: dec dword ptr [ecx - 0x5ab73]; call dword ptr [esi - 0x18]; 
0x000597f0: dec dword ptr [ecx - 0x5ab7b]; jmp dword ptr [ebp - 0x75]; 
0x0005eb2e: dec dword ptr [ecx - 0x5b36b]; dec dword ptr [ebx - 0x59b63]; call dword ptr [edx + 0x52]; 
0x0005cc6c: dec dword ptr [ecx - 0x5b763]; dec dword ptr [ecx - 0x59f73]; jmp dword ptr [ebp - 0x77]; 
0x0005cd52: dec dword ptr [ecx - 0x5b763]; jmp dword ptr [ebp - 0x75]; 
0x0005bbf0: dec dword ptr [ecx - 0x5bb4b]; dec dword ptr [ebx - 0x5c34b]; jmp dword ptr [ebp - 0x75]; 
0x0005f3ce: dec dword ptr [ecx - 0x5bf43]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005f1df: dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x75]; 
0x0005f205: dec dword ptr [ecx - 0x5bf43]; jmp dword ptr [ebp - 0x77]; 
0x00058ea9: dec dword ptr [ecx - 0x5bf73]; dec dword ptr [ecx - 0x6036b]; jmp dword ptr [ebp - 0x5f]; 
0x00058eaf: dec dword ptr [ecx - 0x6036b]; jmp dword ptr [ebp - 0x5f]; 
0x0005afa1: dec dword ptr [ecx - 0x60763]; jmp dword ptr [ebp - 0x75]; 
0x00070e5a: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00055b7d: dec dword ptr [ecx - 0x6bf0ef88]; ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x000fc614: dec dword ptr [ecx - 0x6d37b]; call dword ptr [edi + 0x29]; 
0x000fcce9: dec dword ptr [ecx - 0x6d77b]; jmp dword ptr [ebp - 0x5f]; 
0x0014da94: dec dword ptr [ecx - 0x6f7c723e]; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x0009a32f: dec dword ptr [ecx - 0x72afdbe4]; test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x00052897: dec dword ptr [ecx - 0x72e71410]; je 0x528c5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x000376ef: dec dword ptr [ecx - 0x72e7dbbc]; and dword ptr [eax + 0xfffe115], 0x44; ret 0x24e9; 
0x00056ea5: dec dword ptr [ecx - 0x72f7db8c]; mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0005c06d: dec dword ptr [ecx - 0x76287608]; ret 0x7de9; 
0x00161ac1: dec dword ptr [ecx - 0x763e7606]; ret; 
0x000c14e7: dec dword ptr [ecx - 0x769bdbac]; ret 0x59e9; 
0x00101ba4: dec dword ptr [ecx - 0x769bdbbc]; ret; 
0x000c14dc: dec dword ptr [ecx - 0x76a3dbac]; ret 0x92e9; 
0x00137fff: dec dword ptr [ecx - 0x76c7dbbc]; ret; 
0x00069dc7: dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x00030176: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0010147d: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0012f94b: dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x00053a8a: dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x0015cb6a: dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x00055303: dec dword ptr [ecx - 0x7c8fdbbc]; les edx, ptr [ecx + ecx*4]; ret; 
0x001018b7: dec dword ptr [ecx - 0x7cb7dba4]; ret; 
0x00032919: dec dword ptr [ecx - 0x7ce3db8c]; ret 0x8b04; 
0x000c4e76: dec dword ptr [ecx - 0x7e377626]; ret 0; 
0x00066459: dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x0006bb09: dec dword ptr [ecx - 0x88b6b]; call dword ptr [ecx + 0x6a]; 
0x0006bd48: dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx + 0x6a]; 
0x0006c4c8: dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006bbfa: dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065759: dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006575f: dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006a7a6: dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006a7a0: dec dword ptr [ecx - 0x8e77b]; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0013e42b: dec dword ptr [ecx - 0x9773]; jmp dword ptr [ebp - 0x5f]; 
0x000debc7: dec dword ptr [ecx - 0x977b]; jmp dword ptr [ebp - 0x75]; 
0x00056eaf: dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x000543d4: dec dword ptr [ecx - 0xa34b]; call dword ptr [eax - 1]; 
0x00053ee5: dec dword ptr [ecx - 0xa763]; inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x00168668: dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x001193ef: dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x00166d6e: dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x000d3c64: dec dword ptr [ecx - 0xbb73]; call dword ptr [eax - 0x18]; 
0x0012dbc4: dec dword ptr [ecx - 0xcb6b]; call dword ptr [eax - 0x77]; 
0x0002ee09: dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0002ee47: dec dword ptr [ecx - 0xdb6b]; call dword ptr [edi + 0x56]; 
0x0002efc8: dec dword ptr [ecx - 0xdf73]; call dword ptr [edi + 0x50]; 
0x0016731c: dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00167709: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [eax + 0x6a]; 
0x000ce016: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xdf7b]; call dword ptr [eax - 0x73]; 
0x00167316: dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000ce1b3: dec dword ptr [ecx - 0xff6b]; call dword ptr [edi - 0x18]; 
0x000e17ea: dec dword ptr [ecx]; ret 0x840f; 
0x00113f74: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0011e3da: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x00192893: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000c917c: dec dword ptr [edi]; add byte ptr [ecx], al; ret; 
0x00047746: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x9f74; 
0x000c05ce: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0xa074; 
0x00166249: dec dword ptr [edi]; cmp byte ptr [ebx + 1], 0; add byte ptr [ebx + 0x45038045], cl; adc al, 0x39; ret 0x870f; 
0x000247a1: dec dword ptr [edi]; dec eax; ret 0x8dc3; 
0x000d3ae6: dec dword ptr [edi]; dec ebp; ret; 
0x00034ef5: dec dword ptr [edi]; inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x00099f4c: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0011f332: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x0016cba0: dec dword ptr [edi]; inc ebp; ret 0xe0c1; 
0x000fb98b: dec dword ptr [edi]; inc ebp; ret; 
0x00087e84: dec dword ptr [edi]; inc esi; ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0018e1b9: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x0009a1c2: dec dword ptr [edi]; inc esi; ret 0xc3eb; 
0x000376f9: dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x00048b89: dec dword ptr [edi]; inc esp; ret 0x3c83; 
0x00045226: dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0003ef7d: dec dword ptr [edi]; inc esp; ret 0x489; 
0x0007c1b6: dec dword ptr [edi]; inc esp; ret 0x568b; 
0x00097fc3: dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00099f96: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0004de98: dec dword ptr [edi]; inc esp; ret 0x8589; 
0x000d995f: dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x0009af81: dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00093e12: dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985c0: dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000d98a7: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0002f53b: dec dword ptr [edi]; inc esp; ret; 
0x00097c83: dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000fcf8f: dec dword ptr [edi]; mov bh, 0x4c; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x0006ddf7: dec dword ptr [edi]; mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x000e5859: dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x0006cb13: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0002d5a5: dec dword ptr [edi]; mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0009b0b8: dec dword ptr [edi]; mov esp, 0xf042444; inc esp; ret 0xc083; 
0x0004f9e6: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00048b7e: dec dword ptr [edi]; test bl, bl; add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x0014eaba: dec dword ptr [edi]; test bl, dl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x000fe696: dec dword ptr [edi]; test byte ptr [eax + eax - 0x7b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f2179: dec dword ptr [edi]; test byte ptr [eax - 0x7cfffffe], al; rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0016c0b4: dec dword ptr [edi]; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000c76d4: dec dword ptr [edi]; test byte ptr [ebx + edi*8 - 1], dh; call dword ptr [eax + 0x6a]; 
0x0006cb0d: dec dword ptr [edi]; test byte ptr [ebx - 0x49f00001], bl; push edi; or al, 0xf6; ret 0xf08; 
0x0006552e: dec dword ptr [edi]; test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x0016e7eb: dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00145d1a: dec dword ptr [edi]; test byte ptr [edi], ah; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x0016bf84: dec dword ptr [edi]; test byte ptr [edx - 0x77000000], dh; ret 0xe283; 
0x0005d188: dec dword ptr [edi]; test byte ptr [edx], dh; ret 0xffff; 
0x0002e7f9: dec dword ptr [edi]; test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000b3dcf: dec dword ptr [edi]; test byte ptr [esi - 0x8ffffff], cl; ret 3; 
0x0004ddbf: dec dword ptr [edi]; test ch, dl; and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x0005d0e3: dec dword ptr [edi]; test dh, ah; ret 0xffff; 
0x000b3b3a: dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x0005cab7: dec dword ptr [edi]; test dword ptr [edi - 0x39fffff0], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0009960e: dec dword ptr [edi]; test dword ptr [edx + 0x79], ebx; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000b3a2f: dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000dc3c2: dec dword ptr [edi]; xchg ebp, eax; ret 0x3d; 
0x000667b5: dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x0004fc53: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000383f8: dec dword ptr [edi]; xchg ebp, eax; ret 0xd321; 
0x0011a6a4: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x000c7384: dec dword ptr [edi]; xchg edi, eax; ret 0xbd39; 
0x00050496: dec dword ptr [edi]; xchg edi, eax; ret 0xf039; 
0x0016e624: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x000fb727: dec dword ptr [edi]; xchg esp, eax; ret 0x9588; 
0x0007806d: dec dword ptr [edi]; xchg esp, eax; ret 0x9e3b; 
0x0007066e: dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0007064d: dec dword ptr [edi]; xchg esp, eax; ret 0xd009; 
0x00153f0a: dec dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x00071909: dec dword ptr [edi]; xchg esp, eax; ret; 
0x00034d41: dec dword ptr [edi]; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x00058a23: dec dword ptr [edx - 7]; call dword ptr [eax + 0x56]; 
0x0006bff7: dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00041088: dec dword ptr [esi]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0006ad0f: dec eax; adc bh, al; add ah, byte ptr [0xf000000]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0006c0d8: dec eax; adc bh, al; add ah, byte ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 0xfff9; 
0x000b2382: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aeeec: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000b2321: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aee8e: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00093f8d: dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00077abb: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00077bb9: dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x00094a96: dec eax; add al, 0; add cl, ch; ret 0xfffd; 
0x00155640: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00156beb: dec eax; add al, 0x5b; ret; 
0x000ef6b2: dec eax; add al, 0x75; fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0012e898: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x00085c9f: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0007517e: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x00074e4e: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0007b454: dec eax; add al, 0xf; mov dh, 2; ret; 
0x0019cca4: dec eax; add al, byte ptr [eax]; add al, ch; ret; 
0x0014e312: dec eax; add byte ptr [eax], 0; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00166ba5: dec eax; add ch, cl; ret 0xfffd; 
0x000c8d0c: dec eax; add dword ptr [ebp - 0x28], esi; mov eax, ecx; ret; 
0x0014eace: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x000b6a97: dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x00188eeb: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001876e2: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000aee00: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000b2283: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00144233: dec eax; add esp, 0x1c; ret; 
0x0007e845: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0002172b: dec eax; and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x0002174b: dec eax; and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x001553ee: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0015c4d9: dec eax; call dword ptr [eax + 0x10]; 
0x0015c377: dec eax; call dword ptr [eax + 0x14]; 
0x000249e9: dec eax; call eax; 
0x0012f397: dec eax; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017b3b3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00184893: dec eax; cld; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0007f3c1: dec eax; cmp al, 0x80; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7acbc0], cl; jne 0x7f3c0; ret; 
0x0002c6f4: dec eax; cmp bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0017b45a: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0017d47a: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0011743d: dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000de2c4: dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0006575c: dec eax; idiv edi; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x00066eb4: dec eax; idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0015b879: dec eax; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00159824: dec eax; in eax, dx; cli; dec dword ptr [ecx + 0x24448bc7]; sbb byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x00161794: dec eax; in eax, dx; in al, dx; call dword ptr [eax - 0x73]; 
0x000a0ef6: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0004a5ec: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0006472e: dec eax; jecxz 0x64730; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x000b233f: dec eax; jnp 0x5b17478a; pop esi; ret; 
0x000aeeac: dec eax; jnp 0x5e1312f7; ret; 
0x0014fbd1: dec eax; jo 0x14fb61; mov dl, al; ret 0xfff2; 
0x00026e77: dec eax; jo 0x26e73; call dword ptr [eax - 0x18]; 
0x00027b7e: dec eax; jo 0x27b7a; call dword ptr [eax - 0x18]; 
0x00029c48: dec eax; jo 0x29c44; call dword ptr [eax - 0x18]; 
0x0002b050: dec eax; jo 0x2b04c; call dword ptr [eax - 0x18]; 
0x00061bdc: dec eax; loope 0x61bde; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x00092918: dec eax; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092678: dec eax; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000928a4: dec eax; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092608: dec eax; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00082627: dec eax; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000926bc: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009270c: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00092964: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b4: dec eax; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00123408: dec eax; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00168f13: dec eax; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x001688e6: dec eax; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x00083cbd: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0010b3b9: dec eax; or byte ptr [ebp - 0x11ba5f75], cl; call dword ptr [ecx - 0x73]; 
0x00074e7f: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00074e51: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00083aa1: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x00099c47: dec eax; or eax, 0xb6c58100; ret; 
0x00070e64: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000c9bd1: dec eax; pop ebx; ret; 
0x000b22c3: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee40: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00188e2f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00187682: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000b2469: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb6: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000fa96d: dec eax; popfd; stc; call dword ptr [eax - 0x18]; 
0x00072d17: dec eax; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0015d15d: dec eax; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x00113285: dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x0011d30b: dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x000b22a3: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee20: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00188f0b: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001876f2: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00069577: dec eax; ret 0x4489; 
0x0012a655: dec eax; ret 0x4639; 
0x000ca213: dec eax; ret 0x548b; 
0x000247a3: dec eax; ret 0x8dc3; 
0x00067283: dec eax; ret 0xb589; 
0x000cb28e: dec eax; ret 0xb70f; 
0x0002c149: dec eax; ret 0xc083; 
0x0003a9ef: dec eax; ret 0xc483; 
0x0012a1ac: dec eax; ret 0xc629; 
0x0003a8bd: dec eax; ret 0xf3c3; 
0x0018f0f3: dec eax; ret 0xff3; 
0x000809c3: dec eax; ret 0xff50; 
0x0018f053: dec eax; ret; 
0x000f5cd1: dec eax; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x00075361: dec eax; sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000b243b: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aef98: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x001583ec: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e9c17: dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fb182: dec eax; stc; call dword ptr [eax + 0x56]; 
0x000e4527: dec eax; stc; call dword ptr [eax - 0x18]; 
0x000e6fb8: dec eax; stc; call dword ptr [eax - 0x18]; jmp dword ptr [esi]; 
0x000f9382: dec eax; stc; call dword ptr [eax - 0x73]; 
0x000f2bbc: dec eax; stc; call dword ptr [eax - 0x77]; 
0x000f4e97: dec eax; stc; call dword ptr [eax - 1]; 
0x000f2bb6: dec eax; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x0015c782: dec eax; std; jmp dword ptr [esi - 0x70]; 
0x0013de2c: dec eax; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009193a: dec eax; test cl, bh; call dword ptr [eax + 0x68]; 
0x00091996: dec eax; test cl, bh; call dword ptr [eax - 0x73]; 
0x0009f1ab: dec ebp; aam 0x29; ret 0x1a8b; 
0x0009f284: dec ebp; aam 0x29; ret 0xb48d; 
0x0009f1c8: dec ebp; aam 0x31; fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x000f8dc7: dec ebp; aam 0x6a; add eax, 0x9bcc868d; stc; call dword ptr [eax - 0x73]; 
0x000669a2: dec ebp; adc byte ptr [ecx], ch; ret; 
0x0019d348: dec ebp; adc ebp, edi; inc dword ptr [ecx + 0x88cb4c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00164299: dec ebp; add byte ptr [ebx - 0x74bbdbac], cl; inc ecx; or byte ptr [ecx], bh; ret 0x4a75; 
0x0009d02a: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000e939d: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000c7ae7: dec ebp; add eax, 0x8d500000; sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x000442fc: dec ebp; add eax, 0x8d500000; xchg al, bl; jne 0x442ff; call dword ptr [eax - 0x18]; 
0x00041172: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x41175; call dword ptr [eax - 0x18]; 
0x0004739f: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c15: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000ba9ff: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6a6: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c048d: dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x00178aad: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000c058d: dec ebp; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000de0e4: dec ebp; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120762: dec ebp; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001579b2: dec ebp; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00140963: dec ebp; and byte ptr [ecx - 0x42f43], cl; dec dword ptr [ecx - 0x44373]; jmp dword ptr [ebp - 0x75]; 
0x00156615: dec ebp; arpl cx, di; call dword ptr [eax - 0x18]; 
0x000d798f: dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000fa92f: dec ebp; dec edi; dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00101d92: dec ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x001307fe: dec ebp; in al, 0x31; fisttp dword ptr [ebx - 0x13377]; jmp dword ptr [ebp - 0x7d]; 
0x0015c4cf: dec ebp; in al, dx; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x000563cf: dec ebp; lodsb al, byte ptr [esi]; or eax, 0xa105e900; cld; jmp dword ptr [esi - 0x70]; 
0x000e0cfa: dec ebp; or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x0014aaac: dec ebp; out dx, al; dec dword ptr [ebp - 0x653377a]; call dword ptr [eax - 0x73]; 
0x0014aacb: dec ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000d277a: dec ebp; ret 0x4489; 
0x0002e493: dec ebp; ret 0x518b; 
0x00099452: dec ebp; ret 0xc689; 
0x0002e44c: dec ebp; ret 0xec83; 
0x0004ea52: dec ebp; ret; 
0x0004ea4f: dec ebp; ror dword ptr [edi], 1; dec ebp; ret; 
0x000c1aa7: dec ebp; shr bl, 1; or al, 0x8d; je 0xc1ad4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x0011d192: dec ebp; stc; call dword ptr [eax + 0x57]; 
0x0010cf2a: dec ebp; sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0011ed7f: dec ebp; sub eax, esi; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0008e10e: dec ebx; adc al, 0xf6; ret 0xf02; 
0x000c7a53: dec ebx; add al, 0; add byte ptr [eax - 0x73], dl; and byte ptr [eax], 0x30; stc; call dword ptr [eax - 0x18]; 
0x000411c6: dec ebx; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004dce7: dec ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x36377b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0003d3d1: dec ebx; add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0013966d: dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x00109361: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000c88e1: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000f8994: dec ebx; add dword ptr [ebp - 0x7c398a01], eax; ret; 
0x0008706d: dec ebx; add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c1317a], cl; call dword ptr [eax - 0x73]; 
0x00105f06: dec ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016236f: dec ebx; add esp, 0x18; pop ebx; ret; 
0x0002140b: dec ebx; and byte ptr [eax], al; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x000541a2: dec ebx; dec dword ptr [ebx - 0xa34b]; call dword ptr [edx - 0x77]; 
0x000a5171: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0009b668: dec ebx; in al, 0x83; ret 0x8301; 
0x000cd6b1: dec ebx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000db5d0: dec ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000e92b7: dec ebx; int 0x13; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00193ef4: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x00193584: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x00192eb4: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x00116a91: dec ebx; mov cl, 0xf6; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00083d4f: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0013dead: dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0013b562: dec ebx; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001357b0: dec ebx; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00101ba1: dec ebx; ret 0xffff; 
0x00122256: dec ebx; ret 4; 
0x0011a3a1: dec ebx; stc; call dword ptr [eax + 0x53]; 
0x0011d10b: dec ebx; stc; call dword ptr [eax + 0x57]; 
0x001189cd: dec ebx; stc; call dword ptr [eax - 0x18]; 
0x0011dfb4: dec ebx; stc; call dword ptr [eax - 0x18]; ret; 
0x00118bd1: dec ebx; stc; call dword ptr [eax - 0x39]; 
0x00118f44: dec ebx; stc; call dword ptr [eax - 0x73]; 
0x001194f4: dec ebx; stc; call dword ptr [eax - 0x75]; 
0x0011979f: dec ebx; stc; call dword ptr [eax - 1]; 
0x0011974e: dec ebx; stc; call dword ptr [edi + 0x50]; 
0x00034ef3: dec ebx; stc; dec dword ptr [edi]; inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x00034e12: dec ebx; stc; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011c829: dec ebx; stc; jmp dword ptr [ebp - 0x75]; 
0x0013141b: dec ebx; str word ptr [ebx - 0x11380]; jmp dword ptr [ebp + 3]; 
0x0002c028: dec ebx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00192a59: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00192a71: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000a71b7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7317: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f27: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b2f01: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b81b9: dec ecx; ficom word ptr [esi]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000a20d7: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000a3adb: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000a2207: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000a3c3b: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x000fbc49: dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x00090431: dec ecx; inc eax; stc; call dword ptr [eax - 0x73]; 
0x000418b9: dec ecx; inc edi; push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0004a83d: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000b47dc: dec ecx; jne 0xb47d8; pop esi; ret; 
0x000d613c: dec ecx; lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008b3d2: dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bfc8: dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bd45: dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000a7357: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f67: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000c48b9: dec ecx; pop ss; push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000de7ab: dec ecx; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000a7337: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f47: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000d3de8: dec ecx; ret 0x1c8d; 
0x000d24a4: dec ecx; ret 0x708d; 
0x00114d76: dec ecx; ret 0x8dc3; 
0x000d1cea: dec ecx; ret 0xc483; 
0x000d3c8a: dec ecx; ret 0xd801; 
0x000254ad: dec ecx; ret 0xec83; 
0x00196ad8: dec ecx; ret 0xf8c1; 
0x001961a0: dec ecx; ret 0xff31; 
0x00025688: dec ecx; ret; 
0x00089c77: dec ecx; rol ecx, 0xf8; add eax, dword ptr [ecx]; ret 0x8966; 
0x000fac95: dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000fd244: dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00101335: dec ecx; stc; call dword ptr [eax - 0x18]; inc edx; in eax, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000ffca5: dec ecx; stc; call dword ptr [eax - 0x18]; sar bl, cl; bnd jmp dword ptr [esi - 0x70]; 
0x000ffc9e: dec ecx; stc; call dword ptr [eax - 0x73]; 
0x000de2c5: dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x00138bd3: dec ecx; test bh, bh; jmp dword ptr [esi - 0x70]; 
0x000c8954: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000ab1ef: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x00084f55: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ac87c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000ac89e: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000ac8dc: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000ab16c: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c893f: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b2c2c: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x0018cb7d: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0019210d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000ac810: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x0011d16d: dec edi; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x000c89b4: dec edi; and al, 0x75; js 0xc8a18; pop esi; ret; 
0x000f8886: dec edi; and byte ptr [ebx + 0x5e5b18c4], al; pop edi; pop ebp; ret; 
0x000ab376: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c899f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x0008a880: dec edi; cli; jmp dword ptr [esi - 0x70]; 
0x000c8a24: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000c8a19: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x000fa90e: dec edi; dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00069b2a: dec edi; jecxz 0x69b2c; jmp dword ptr [esi - 0x70]; 
0x000ac8bc: dec edi; jge 0x5e69dc0a; pop ebx; ret; 
0x000ab1ac: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000383d0: dec edi; mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0012ba3d: dec edi; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x000c8909: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0008b0b9: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000ab140: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x000ab2b6: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00087e66: dec edi; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ab120: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000bf5ce: dec edi; ret 0x403; 
0x00144f25: dec edi; ret 0x4189; 
0x000bc91d: dec edi; ret 0x4403; 
0x000eadd3: dec edi; ret 0x538b; 
0x00144f9b: dec edi; ret 0x548b; 
0x0004fa5a: dec edi; ret 0x8503; 
0x0015a012: dec edi; ret 0x8966; 
0x0011a39b: dec edi; ret 0x8d50; 
0x000b4c24: dec edi; ret 0x8dc3; 
0x000b4c43: dec edi; ret 0xc35f; 
0x00043608: dec edi; ret 0xe801; 
0x00040469: dec edi; ret 0xf001; 
0x00102256: dec edi; ret 6; 
0x000511bf: dec edi; ret; 
0x000f4f00: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000d6a2f: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000c8984: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000ac986: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000ac9a8: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ac9f6: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x00149ede: dec edi; sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x000d6a25: dec edi; sbb byte ptr [ecx - 0x76ebdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000ab276: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c8969: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x0013102d: dec edi; sldt word ptr [ebx - 0x7f72e714]; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0011d26a: dec edi; stc; call dword ptr [eax + 0x57]; 
0x0015c022: dec edi; std; jmp dword ptr [esi - 0x70]; 
0x000c89d4: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x00023ae7: dec edi; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000c89c9: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00191f20: dec edi; test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x000c8a04: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00058cdd: dec edi; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000c89ef: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000b2b7a: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0016305c: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000a48ce: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000a8ccf: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0015e9c8: dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x0012447b: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x124488; ret; 
0x00124700: dec edx; add al, 0x83; jmp dword ptr [eax]; 
0x000e578e: dec edx; add al, 0x83; ret 0x8301; 
0x0012d504: dec edx; add al, 0x83; ret 0x8518; 
0x000f2536: dec edx; add al, 0x83; ret; 
0x00077ab8: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x00077bb6: dec edx; add al, 0x89; dec eax; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x000755e1: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00184fb6: dec edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x000a4f1c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x0015fc14: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x0018503e: dec edx; add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x00184f36: dec edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000a4b1a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000a4b80: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a71c0: dec edx; add eax, 0x5f0c428d; ret; 
0x00079b82: dec edx; add ebx, ebp; mov esp, 0x7e0c828d; stc; call dword ptr [eax - 0x73]; 
0x000a4b62: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00084865: dec edx; and al, 2; xor eax, eax; pop ebx; pop edi; ret; 
0x00185dea: dec edx; clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001946b6: dec edx; cld; jne 0x1946c0; pop ebx; ret; 
0x00190348: dec edx; cld; mov eax, 0; jne 0x190590; pop ebx; ret; 
0x0017b3b6: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e6: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x00163097: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00184896: dec edx; cld; pop ebx; ret; 
0x001849b6: dec edx; cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b4ee: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b45d: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000c010b: dec edx; dec dword ptr [ecx + 0x244c89fe]; adc byte ptr [ecx + 0x39eed3d1], cl; ret; 
0x000e9d9b: dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x00118f43: dec edx; dec ebx; stc; call dword ptr [eax - 0x73]; 
0x0010155d: dec edx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000ceace: dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00198991: dec edx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000de865: dec edx; inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0013cbe7: dec edx; jmp dword ptr [ecx]; 
0x000ceac8: dec edx; mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00092275: dec edx; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000b4bc9: dec edx; or al, 0x83; ret 0x8310; 
0x000a4894: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000b188f: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x00083ca2: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000a8efb: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0011b9f9: dec edx; or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x000888dd: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000a4be4: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000a4c58: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a5044: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000a4bc0: dec edx; pop es; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fc0: dec edx; pop es; jne 0xa4e61; pop ebx; ret; 
0x000a7200: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a7360: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000a2e10: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000a59e3: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000a2f70: dec edx; pop es; mov eax, edx; ret; 
0x000a4c88: dec edx; push cs; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50b8: dec edx; push cs; jne 0xa4e61; pop ebx; ret; 
0x000a4ba2: dec edx; push es; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fa2: dec edx; push es; jne 0xa4e61; pop ebx; ret; 
0x000a71e0: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a7340: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000a2df0: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000a2f50: dec edx; push es; mov eax, edx; ret; 
0x001173b0: dec edx; stc; call dword ptr [eax + 0x50]; 
0x001763cf: dec edx; stc; call dword ptr [eax + 0x53]; 
0x00058a24: dec edx; stc; call dword ptr [eax + 0x56]; 
0x0012d42f: dec edx; stc; call dword ptr [eax + 0x57]; 
0x00100c0f: dec edx; stc; call dword ptr [eax + 0x6a]; 
0x00100ed7: dec edx; stc; call dword ptr [eax - 0x18]; 
0x00117445: dec edx; stc; call dword ptr [eax - 0x18]; ret 7; 
0x001179e1: dec edx; stc; call dword ptr [edx + 0x50]; 
0x00117356: dec edx; stc; call dword ptr [edx - 0x77]; 
0x0015cae7: dec edx; stc; call dword ptr [esi + 0x57]; 
0x0011cc7e: dec edx; stc; call ptr [ebx + 0x5e]; ret; 
0x0017655a: dec edx; stc; jmp dword ptr [esi - 0x70]; 
0x0017b582: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d5a2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00184a52: dec edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b407: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d437: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001848e7: dec edx; sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184926: dec edx; sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00061d92: dec edx; sub al, byte ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x00161ab2: dec edx; sub esi, ebp; call ecx; 
0x00157a88: dec edx; xor al, 0x5b; ret; 
0x000b3319: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0008fe4d: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x0004b43c: dec esi; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0011cc64: dec esi; add bh, byte ptr [ecx]; ret 0xf089; 
0x000b64c8: dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000aedf7: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00191f25: dec esi; add eax, 0xb; ret; 
0x0010a6d4: dec esi; and bh, bh; xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00068e0b: dec esi; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0005c608: dec esi; and eax, dword ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x000c8a21: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000fa996: dec esi; dec dword ptr [ebx - 0x7c72dbe4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0015b6d8: dec esi; in eax, dx; call dword ptr [eax - 0x73]; 
0x0010f4c3: dec esi; inc eax; add ch, bl; ret; 
0x000b5eeb: dec esi; inc esp; stc; call dword ptr [eax - 0x18]; 
0x000ca204: dec esi; lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x0011b2ff: dec esi; lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000773b2: dec esi; or al, 0x89; ret 0x48d; 
0x00038e6d: dec esi; or byte ptr [ecx], bh; ret 0x8e0f; 
0x00082fab: dec esi; or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011f955: dec esi; pop ebx; pop esi; ret; 
0x000de856: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x000d91d6: dec esi; ret 0x4489; 
0x00022c2a: dec esi; ret 0x4589; 
0x000eaf74: dec esi; ret 0x548d; 
0x0009061a: dec esi; ret 0x578b; 
0x00090633: dec esi; ret 0x8389; 
0x0015a0c8: dec esi; ret 0x8966; 
0x0004f356: dec esi; ret 0x9d8d; 
0x0011ab2b: dec esi; ret 0xa4e9; 
0x0011a564: dec esi; ret 0xaae9; 
0x000f0f07: dec esi; ret 0xc085; 
0x00089c43: dec esi; ret 0xc931; 
0x00100a8c: dec esi; ret 0xe883; 
0x00052712: dec esi; ret 0xec83; 
0x0004b64f: dec esi; ret; 
0x00143fce: dec esi; sar dh, 1; jmp dword ptr [esi - 0x70]; 
0x000e88c1: dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x000c8981: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d6a32: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d6a2c: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000ce7b5: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0011d141: dec esi; stc; call dword ptr [eax + 0x57]; 
0x0007b881: dec esi; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x000c8a01: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0003c965: dec esp; adc eax, 0x83167500; ret 0x3901; 
0x00041cd0: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000749eb: dec esp; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00114701: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0006ddb5: dec esp; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9f3: dec esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00074ae8: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015dc42: dec esp; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x000de202: dec esp; add eax, 0xa2e80000; add cl, byte ptr [ecx]; add byte ptr [ecx + 0x147df5c7], al; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x0016ac3a: dec esp; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x00179461: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00113a2c: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012105a: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0011c4dd: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00106b39: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a4ef: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100ff: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceaf: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012f: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213df: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00082743: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092577: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011486a: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0011481c: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00113aac: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0015e935: dec esp; and al, 0x10; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071067: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00161ff7: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00080d97: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x001234ed: dec esp; and al, 0x14; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011a184: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b2c: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef4: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a424: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121764: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121564: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121444: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121604: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb4: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf44: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce14: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f21d: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00113bac: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010783f: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000584b8: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001768c0: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123990: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0003a5c2: dec esp; and al, 0x14; sub esp, 8; push 0; push edx; call edi; 
0x00090960: dec esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x00157a07: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001579c7: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0011fc19: dec esp; and al, 0x1c; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00119cd9: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0015e878: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016277b: dec esp; and al, 0x20; push ecx; push esi; call dword ptr [eax]; 
0x0011f874: dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b954: dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a074: dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fe4: dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150a4: dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f704: dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108594: dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108654: dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f3: dec esp; and al, 0x24; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011f8a2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b982: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115012: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f732: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c2: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108682: dec esp; and al, 0x24; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0010941a: dec esp; and al, 0x24; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0009095a: dec esp; and al, 0x24; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016bb3b: dec esp; and al, 0x28; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015e865: dec esp; and al, 0x28; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00039281: dec esp; and al, 0x28; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016ba3b: dec esp; and al, 0x2c; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0010806d: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b1: dec esp; and al, 0x30; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001080ab: dec esp; and al, 0x30; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001081fb: dec esp; and al, 0x30; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c9da7: dec esp; and al, 0x34; call ecx; 
0x001151a4: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115354: dec esp; and al, 0x34; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0011527a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210a: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021da: dec esp; and al, 0x34; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0011f4f5: dec esp; and al, 0x34; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc586: dec esp; and al, 0x34; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00108301: dec esp; and al, 0x34; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108457: dec esp; and al, 0x34; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011f5c5: dec esp; and al, 0x34; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f695: dec esp; and al, 0x34; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115171: dec esp; and al, 0x34; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011524d: dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115321: dec esp; and al, 0x34; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153fd: dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001230a5: dec esp; and al, 0x34; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001020de: dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021ae: dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00090985: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0010833a: dec esp; and al, 0x34; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010849a: dec esp; and al, 0x34; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010f883: dec esp; and al, 0x54; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fd2a: dec esp; and al, 0x54; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010f80f: dec esp; and al, 0x54; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010f8e3: dec esp; and al, 0x54; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x000c3c90: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00093140: dec esp; and al, 0x64; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000930c8: dec esp; and al, 0x64; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011f379: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d63b1: dec esp; and al, 0x74; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6427: dec esp; and al, 0x74; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d64e6: dec esp; and al, 0x74; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000dd1c8: dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x00108735: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00157a81: dec esp; and al, 0xc; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x000dd218: dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x00092f99: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0011fb61: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d626f: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f991a: dec esp; and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000cd729: dec esp; and al, 0xc; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0012073c: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208bc: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001207fc: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00103531: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00058466: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012187a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012147a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0010800a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010932a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011318a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4ba: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114daa: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012152a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012122a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd26a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eba: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce7a: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ceda: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdaa: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00070fba: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00122df6: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db0: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d44: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008cbba: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00080e43: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00021da9: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x000d61ad: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x0016b387: dec esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000d62d0: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d6024: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00083b99: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x83bb0; ret; 
0x001148c9: dec esp; and al, 4; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000f9881: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000deb70: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xdeb80; ret; 
0x0016b661: dec esp; and al, 8; call eax; 
0x000d61a9: dec esp; and al, 8; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0011d022: dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0015a1f3: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00161f7c: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f94: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008c6ce: dec esp; and al, 8; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001214f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f267: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121727: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121797: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037777: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf67: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116127: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a457: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e87: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116247: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121287: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f57: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9717: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd07: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf77: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf07: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e7: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00087e28: dec esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x000cadd6: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00086a34: dec esp; and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012529f: dec esp; call 0x125170; add esp, 4; ret; 
0x000928af: dec esp; call dword ptr gs:[0x10]; 
0x00027185: dec esp; call eax; 
0x00112842: dec esp; cld; jmp dword ptr [ebp - 0x77]; 
0x0006b079: dec esp; in al, 0xff; jmp eax; 
0x00050b30: dec esp; in eax, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689bb79]; call dword ptr [eax - 0x73]; 
0x0014da4c: dec esp; inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0002c015: dec esp; jno 0x2c011; call dword ptr [eax - 0x73]; 
0x0005b654: dec esp; js 0x5b650; call dword ptr [eax - 0x73]; 
0x0015ad7e: dec esp; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00117d00: dec esp; mov ch, dh; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00044230: dec esp; mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0015ceac: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0009296e: dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929be: dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0008d31b: dec esp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000e7c47: dec esp; or byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0013cddd: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x000cf674: dec esp; out 0xf8, al; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0003657b: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000392fd: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035246: dec esp; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0002b3ff: dec esp; push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0011d377: dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0015ceff: dec esp; push edx; call eax; 
0x000fcf92: dec esp; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000eea34: dec esp; ret 0x5650; 
0x0004e101: dec esp; ret 0x8589; 
0x0014a30b: dec esp; ret 0x8904; 
0x000f0c3f: dec esp; ret 0xc183; 
0x0003fe75: dec esp; ret; 
0x00102462: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0011d126: dec esp; stc; call dword ptr [eax + 0x57]; 
0x00117375: dec esp; stc; call dword ptr [edx - 0x77]; 
0x0014807c: dec esp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0009757c: dec esp; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00124d65: div byte ptr [eax + edx - 0x77]; mov bl, 0x60; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000cd8a5: div byte ptr [eax + esi*2 - 0x75]; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0011740d: div byte ptr [ebp + 0x10]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00082549: div byte ptr [ebp + 0x3c]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0019d3f0: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0019d32d: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x0019cc7e: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x000fdcfc: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x00022791: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x00092450: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00168106: div byte ptr [edi - 4]; jmp dword ptr [esi - 0x70]; 
0x000e0049: div byte ptr [esi + ecx - 0x7d]; in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x00122556: div ch; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0008d69d: div dword ptr [eax + esi*4 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00082c25: div dword ptr [eax + esi*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00084c84: div dword ptr [ebx + ecx*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0008b325: div dword ptr [ebx + esi*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000bc071: div dword ptr [ecx]; ret; 
0x00084d5e: div dword ptr [edi + ecx*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0014b587: div dword ptr [esi + eax*4 - 0x7d]; in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x001709f5: div dword ptr [esi + ebp*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00084cf2: div dword ptr [esi + edx*8 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0008c479: div dword ptr [esp + edi*4 - 0x7d]; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00174618: div ebx; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00054725: div ebx; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x00130150: div ebx; pop ebx; pop esi; pop edi; ret; 
0x000e011c: div esp; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x00087760: endbr32; call 0x16e4a1; add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080340: endbr32; call 0x16e4a1; add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000382a0: endbr32; call 0x16e4a1; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038280: endbr32; call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b800: endbr32; call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00022740: endbr32; call 0x16e4a1; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022720: endbr32; call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021740: endbr32; call 0x16e4a1; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021720: endbr32; call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00020160: endbr32; jmp dword ptr [ebx + 0xc]; 
0x001214a0: endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000ddc40: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ddc40: endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00116a30: endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ddc60: endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc60: endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000ddf90: endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf90: endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de010: endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a240: endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1b0: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1b0: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000ddc80: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc80: endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcc0: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcc0: endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddca0: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddca0: endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ddce0: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddce0: endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00121850: endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00121850: endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0007f680: endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007eea0: endbr32; mov eax, 0xffffffff; ret; 
0x00154f70: endbr32; mov eax, 1; ret; 
0x001572e0: endbr32; mov eax, 2; ret; 
0x00081c80: endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036d30: endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00176f10: endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x001633b0: endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007b3b0: endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc80: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00131090: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00131080: endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00084000: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c0: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014ac70: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080370: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016e040: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e060: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e070: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e30: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f00: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007a610: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d7d90: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0016e050: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00080380: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0007e3b0: endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0008cba0: endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00087ae0: endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00162ff0: endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00121690: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001213a0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001214c0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00116b00: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00121820: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc630: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010a570: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116920: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00107d90: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00116950: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001216c0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011ea70: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e50: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121250: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121660: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dc080: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121400: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf30: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0011f4b0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ddfe0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a210: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f9770: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010a510: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001094a0: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0011ee70: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee90: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121370: endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dcda0: endbr32; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dc0b0: endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00021490: endbr32; ret; 
0x0007f5d0: endbr32; xor eax, eax; ret; 
0x000443d0: fadd dword ptr [0x8d500000]; xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000410cc: fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0011ee9b: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ee9b: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0016ac3d: fadd dword ptr [eax]; add byte ptr [eax], al; mov eax, ebx; pop ebx; ret; 
0x0010b5de: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010a5dc: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x00097fbc: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e0b: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985b9: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000ce66a: fadd dword ptr [ebp - 0x7cf68a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00057cda: fadd dword ptr [ebp - 0x7cf68a2e]; les ecx, ptr [eax]; pop ebx; ret; 
0x000d9966: fadd dword ptr [ebp - 7]; call dword ptr [ecx + 0x50]; 
0x0018dec8: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000b4cec: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0007d5a0: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00033770: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0004dec4: fadd dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0007de3d: fadd dword ptr [ebx - 0x95f714]; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00137e23: fadd dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x0013adf2: fadd dword ptr [ebx - 7]; call dword ptr [eax - 1]; 
0x000b48c8: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x000ecc31: fadd dword ptr [ecx]; ret 0x9aeb; 
0x000a4b84: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0013fe96: fadd qword ptr [0x5e5b0000]; pop edi; pop ebp; ret; 
0x0013e5fe: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x000d7bc8: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7a1f: fadd qword ptr [eax]; add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012c1a6: fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x00035d08: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036313: fadd st(0); add esp, 8; pop ebx; ret; 
0x00035c9d: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00021dc5: fadd st(6); adc al, 0; add eax, 0x204237; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x0016d93b: fadd st(7), st(0); inc esp; ret; 
0x0017724d: fbld tbyte ptr [esi + 0xf]; jg 0x177294; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017838d: fbld tbyte ptr [esi + 0xf]; jg 0x1783d4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0015816f: fcom dword ptr [edi - 7]; call dword ptr [eax + 0x6a]; 
0x00163820: fcomi st(0); inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0017fe24: fcomi st(7); ret 1; 
0x0015734b: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x00024f62: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013ddbc: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x0002f6bb: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a467: fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c2d72: fcomp dword ptr [ebx + 0x5e]; sub eax, edx; pop edi; ret; 
0x00021c2f: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x0015eb0a: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x15eb27; add esp, 0x1c; ret; 
0x0018f6b8: fcomp dword ptr [edi + 0x5b]; ret; 
0x0018fc18: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x001945d8: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c8a38: fcomp dword ptr [edi + 0x5e]; ret; 
0x00075ccf: fcomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x000872b0: fcomp dword ptr [esi + 0x5f]; ret; 
0x00163870: fcompi st(0); inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000637cc: fcos; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x0005c7fa: fcos; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0007866f: fcos; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000a0c80: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x001591a1: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000a0c3c: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x0004a9bc: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00041179: fdiv dword ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x00054419: fdiv dword ptr [ecx]; fstp xword ptr [ecx]; ret 0xbb7d; 
0x00054716: fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x00114e89: fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x0019cb4d: fdiv dword ptr [edx - 0x62764]; fstp st(0); add esp, 0x20; ret; 
0x0007b87f: fdiv dword ptr [esi + 0x4e]; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x00092e81: fdiv dword ptr [esp + ebp - 0x77]; ret 0x408b; 
0x000fdd39: fdiv dword ptr [esp + ebp - 0x7d]; ret 0x8301; 
0x0002e94c: fdiv qword ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x001633a3: fdiv st(4), st(0); jmp dword ptr [esi - 0x70]; 
0x00133379: fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x000b5189: fdiv st(7); ret; 
0x000a1546: fdivp st(4); jmp dword ptr [esi - 0x70]; 
0x00069dc5: fdivp st(7); dec dword ptr [ecx - 0x76d7db8c]; ret; 
0x00061f80: fdivp st(7); jmp dword ptr [ebp - 0x77]; 
0x00099efe: fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0009bd70: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000b4c3d: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x00114f43: fdivr dword ptr [ecx]; ret; 
0x00097f10: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; xor byte ptr [edi + 2], 0; add dh, dh; ret; 
0x000b4c1f: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x0008b08c: fdivr dword ptr [esi - 0x35]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0010067f: fdivr dword ptr [esi]; jmp eax; 
0x00176b80: fdivr qword ptr [edi - 0x27080005]; sbb eax, eax; add esp, 0x2c; ret; 
0x0008fe2e: fdivr qword ptr [edx]; add byte ptr [eax], al; ret; 
0x001024e2: fdivr st(1), st(0); inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x00072860: fdivr st(2); inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00072f79: fdivr st(2); jmp dword ptr [esi - 0x70]; 
0x0015b0fc: fdivr st(7); add esp, 0xc; ret; 
0x00062e7a: fdivr st(7); dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0005d769: fdivr st(7); inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x000b1931: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a9366: fdivr st(7); pop ebx; ret; 
0x000a8bf7: fdivr st(7); pop edi; pop ebx; ret; 
0x000b3bdf: fdivr st(7); pop esi; pop ebx; ret; 
0x000d0287: fiadd dword ptr [eax + 0x440f2df9]; ret 0x4789; 
0x0011a152: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097c7c: fiadd dword ptr [ebp + 0xb9c9]; lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0008fc34: fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x000d5de9: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0013f244: fiadd dword ptr [ebx - 0x17a9f314]; ret 0xfc9f; 
0x0003a8e2: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000a4294: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000a3d14: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000a3794: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x0006de02: fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x001916d3: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000b4465: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00197098: fiadd word ptr [eax + eax]; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0007c4dc: fiadd word ptr [eax + eax]; add byte ptr [edx], ch; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0002393a: fiadd word ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x000920b2: ficom dword ptr [eax - 1]; push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x000b81ba: ficom word ptr [esi]; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000363fd: ficomp dword ptr [ebx + 0x5e]; mov eax, edx; shr eax, 0x1f; ret; 
0x0011e9e5: ficomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003d51a: ficomp dword ptr [esi + 0x5f]; pop ebp; ret; 
0x00169b1e: ficomp word ptr [ebp - 4]; jmp dword ptr [esi - 0x70]; 
0x0016efcd: fidiv dword ptr [eax]; stc; call dword ptr [eax - 0x73]; 
0x000d6020: fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d5dd2: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000a0d38: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xa0d30; pop ebx; pop esi; ret; 
0x000a0d08: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000a0a78: fidiv dword ptr [ebp + esi*8 - 0x7c]; sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000f9972: fidiv dword ptr [ebp - 0x33]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0011fc72: fidiv dword ptr [ebp - 0x34]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00080861: fidivr dword ptr [0xde68fff9]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0008cbd4: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x0010fa9d: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0010316e: fidivr dword ptr [eax + 0xd0]; call dword ptr gs:[0x10]; 
0x00054714: fidivr dword ptr [ecx]; fdiv dword ptr [edi - 0x19]; mov eax, ecx; pop ebx; pop esi; ret; 
0x0009438e: fidivr dword ptr [ecx]; ret 0xa72; 
0x0005417d: fidivr dword ptr [ecx]; ret 0xee7f; 
0x00034400: fidivr dword ptr [esi]; jmp edx; 
0x0016ebbe: fidivr word ptr [ecx]; int1; jmp dword ptr [ebp - 0x75]; 
0x0014701c: fild dword ptr [eax + 0xf2eff78]; xchg esp, eax; ret; 
0x0016ef61: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00048b81: fild dword ptr [eax + eax]; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x0007a78c: fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0011a122: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00103535: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b4f39: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x0008ce65: fild dword ptr [ebx + 0xd7401f8]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00125c74: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012661c: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x0011c81f: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6b46180], cl; jmp dword ptr [ebp - 0x75]; 
0x00035c04: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0007d141: fild word ptr [ebp + 0xffd89db]; inc esp; call 0x6e936; jmp dword ptr [esi - 0x70]; 
0x0019d060: fild word ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000e727f: fild word ptr [ebx - 0x6bf0bf05]; ret; 
0x000ac4fd: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aabd2: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0002c516: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x0003f10f: fimul dword ptr [ebx + 0x138245c]; ret; 
0x000ca6fd: fimul dword ptr [ebx + 0x160245c]; ret; 
0x000d6b83: fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x000ef6b5: fimul dword ptr [ebx + 0x408b0c50]; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x000831d0: fimul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00107d95: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00107d95: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011ee95: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ee95: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00121375: fimul dword ptr [ebx - 0x47fbdba4]; inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116eb5: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x116ebd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121665: fimul dword ptr [ebx - 0x47fbdba4]; je 0x12166d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121825: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x12182e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121255: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x12125d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dc085: fimul dword ptr [ebx - 0x47fbdba4]; jp 0xdc08d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4b5: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4b5: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001094a5: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a515: fimul dword ptr [ebx - 0x47fbdba4]; or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dc635: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a575: fimul dword ptr [ebx - 0x47fbdba4]; sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001092c5: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddf35: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001094d5: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116925: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000421be: fimul dword ptr [ebx - 0x74c7dba4]; je 0x421ea; cmp al, 1; ret; 
0x001214f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f265: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121725: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121795: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037775: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf65: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116125: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a455: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e85: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116245: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121285: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f55: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9715: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd05: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf75: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf05: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e5: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x0013fcf1: fimul dword ptr [ebx - 0x7ce7dba4]; ret 0x8320; 
0x00109855: fimul dword ptr [ecx + 0x120245c]; ret; 
0x000be2d2: fimul dword ptr [ecx + 0x7c8d2404]; xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x001032a3: fimul dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b86aa: fimul dword ptr [ecx - 0x72f7dbbc]; jl 0xb8639; add al, 0x81; ret 0; 
0x00070c1e: fimul dword ptr [ecx - 0x7c3ede2f]; stc; push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x000ac202: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0004f4b9: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00091078: fimul word ptr [ebp - 0x67c1779]; call dword ptr [eax - 0x73]; 
0x00063fdb: fimul word ptr [ebx - 0x50763]; jmp dword ptr [ebp - 0x77]; 
0x00051489: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000dd1c6: fimul word ptr [ecx - 0x7cf3dbb4]; ret; 
0x0004955d: fimul word ptr [edi]; xchg esp, eax; ret; 
0x0012e51c: fist word ptr [edi - 7]; call dword ptr [eax - 0x75]; 
0x0005845c: fistp dword ptr [eax + eax]; push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00087e61: fistp dword ptr [ebp + 5]; add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003ba48: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00144850: fistp dword ptr [esi - 7]; call dword ptr [esi - 0x18]; 
0x0002318b: fistp qword ptr [ebx + eax]; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x00085d45: fistp qword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00058e12: fistp word ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00134119: fistp word ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0003805b: fistp word ptr [esi]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00085ff6: fisttp dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00025683: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000ebb14: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x000fb985: fisttp dword ptr [ebp - 0x6736b]; dec dword ptr [edi]; inc ebp; ret; 
0x000c8d81: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00092ee9: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00092f4d: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000fcb14: fisttp dword ptr [ebx + 0x4308b0]; add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x3f7f723a]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x0013b561: fisttp dword ptr [ebx - 0x12]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000db7b4: fisttp dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x5f]; 
0x00130801: fisttp dword ptr [ebx - 0x13377]; jmp dword ptr [ebp - 0x7d]; 
0x0010876e: fisttp dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x0003cee5: fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0012b6c8: fisttp dword ptr [ebx - 0x13b80]; jmp dword ptr [ebp - 0x75]; 
0x000ed181: fisttp dword ptr [ebx - 0x72e3dbb4]; push ebx; add al, 0x83; ret; 
0x00114868: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0013f00d: fisttp dword ptr [ebx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x00102bbb: fisttp dword ptr [ecx + 0x1242484]; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000943af: fisttp dword ptr [ecx + 0x21082474]; ret; 
0x00039794: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0017048d: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00130eca: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000267b8: fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x0009f1cb: fisttp dword ptr [ecx - 0x7cf4143a]; ret; 
0x00052891: fisttp dword ptr [ecx - 0x974b]; dec dword ptr [ecx - 0x72e71410]; je 0x528c5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x000ebdf0: fisttp dword ptr [ecx]; ret; 
0x0004d2e9: fisttp dword ptr [edi]; dec ecx; ret; 
0x000d27a7: fisttp dword ptr [edi]; dec edi; ret; 
0x0002709d: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x0013e399: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x00199256: fisttp dword ptr [edi]; inc ebp; ret; 
0x00053edc: fisttp dword ptr [edi]; lahf; ret 0xfa80; 
0x00066c38: fisttp dword ptr [edi]; mov dword ptr [ebp - 0x1600000c], ecx; ret; 
0x00034c2f: fisttp dword ptr [edi]; test byte ptr [edx - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x0018fea1: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; ret 0x6610; 
0x0005e5ba: fisttp dword ptr [edi]; test dword ptr [ebp - 1], esp; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0004183e: fisttp dword ptr [edi]; xchg ebp, eax; ret 0x5409; 
0x00196a63: fisttp dword ptr [edi]; xchg ebp, eax; ret 0x6c89; 
0x00170f38: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x00179c75: fisttp qword ptr [eax + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x00096f5b: fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x00157b9e: fisttp qword ptr [ebx + 0x508d1043]; add al, 0x89; push ebx; adc bl, ch; ret; 
0x00114245: fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0013d8ca: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x001035e2: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000ceacf: fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x0007813f: fisttp qword ptr [esi - 0x7972fff5]; sbb al, 0x7d; stc; call dword ptr [eax - 0x73]; 
0x0009044f: fisttp word ptr [ebp - 0x67c837d]; call dword ptr [eax - 0x73]; 
0x00116565: fisttp word ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x001680bb: fisttp word ptr [ebx]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000b3480: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x000ec6ac: fisttp word ptr [ecx]; ret 0x5388; 
0x00198ad7: fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x0002a251: fisttp word ptr [edi]; xchg edi, eax; ret 0xd184; 
0x0014ec0b: fisub dword ptr [ecx]; ret 0x448b; 
0x00085fa8: fisub dword ptr [ecx]; sar byte ptr [ecx], 1; ret; 
0x0018fe6b: fisub dword ptr [esi + 0xf]; cmp byte ptr [eax], al; ret 0xf66; 
0x0017798d: fisub dword ptr [esi + 0xf]; jg 0x1779d4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177f2d: fisub dword ptr [esi + 0xf]; jg 0x177f74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0018ec5c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00146401: fisub dword ptr [esi - 0x3f]; ret 0x8108; 
0x000ef50e: fisub dword ptr [esi - 0x7f]; loope 0xef512; add esi, esi; ret; 
0x0017727d: fisub word ptr [esi + 0xf]; jg 0x1772c4; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001783bd: fisub word ptr [esi + 0xf]; jg 0x178404; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0018ea1c: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00144486: fisubr dword ptr [ecx]; ret 0x6e8b; 
0x000b2873: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x001215cf: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003623f: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x00035f7f: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x0004fc99: fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0009d022: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000db0b4: fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x00094ca6: fld dword ptr [ecx]; ret; 
0x000362b7: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003614d: fld dword ptr [esp + 4]; ret; 
0x00036246: fld dword ptr [esp]; add esp, 4; ret; 
0x000361a9: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000ee11a: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x00108cf1: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00113909: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00108eb9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108c59: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003a350: fld qword ptr [ebp - 0x769a8b40]; ret; 
0x001930df: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0005823c: fld qword ptr [edi]; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x00035fff: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035e0d: fld qword ptr [esp + 4]; ret; 
0x0004c5a9: fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035f86: fld qword ptr [esp]; add esp, 8; ret; 
0x00035c99: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c08: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035c8e: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035a7d: fld xword ptr [esp + 4]; ret; 
0x0004c5e3: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0019cb4b: fld1; fdiv dword ptr [edx - 0x62764]; fstp st(0); add esp, 0x20; ret; 
0x0009af29: fld1; inc dword ptr [eax - 0x6d72fd1b]; mov al, 0xa5; idiv bh; cmovne eax, edx; ret; 
0x0014367e: fld1; pushfd; fsin; jmp dword ptr [esi - 0x70]; 
0x00114c43: fld1; xlatb; ret; 
0x000c1907: fldcw word ptr [ecx]; ret 0x28b; 
0x000c254d: fldcw word ptr [ecx]; ret 0x3a8b; 
0x0007132d: fldcw word ptr [ecx]; ret 0xc129; 
0x00070abe: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x70b18; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073117: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x73161; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00078b8b: fldcw word ptr [ecx]; sar dword ptr [ecx], 0xca; jbe 0x78d60; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000b2b76: fldenv [esi + 0xf]; je 0xb2bca; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b3315: fldenv [esi + 0xf]; je 0xb3364; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0018ecec: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b2a7a: fldenv [esi + 0xf]; xlatb; ret; 
0x001949a9: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x00141aae: fldenv [esi - 0x3f]; ret 0xf08; 
0x000821aa: fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x00105049: fldln2; call dword ptr [eax + 0x6a]; 
0x000fc3ee: fmul dword ptr [ebp + 0x428dc114]; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x000a19a0: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x000bf5a8: fmul dword ptr [ebx + 0x2918245c]; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0012c1a0: fmul dword ptr [ebx + 0x45c7a445]; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x00103383: fmul dword ptr [ebx - 0x13341]; jmp dword ptr [ebp - 0x77]; 
0x00109b35: fmul dword ptr [ebx - 0x13355]; jmp dword ptr [ebp - 0x77]; 
0x0003770d: fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x000384bd: fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x00092693: fmul dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x77]; 
0x000216e0: fmul dword ptr [ebx - 0x1336e]; jmp dword ptr [ebp - 0x77]; 
0x00092c45: fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x0011a657: fmul dword ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x000717aa: fmul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0003d662: fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x0006010e: fmul dword ptr [ebx - 0x54b4b]; dec dword ptr [ebx - 0x51763]; jmp dword ptr [ebp - 0x77]; 
0x0008b077: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x000b4d77: fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0016305f: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x00198cd2: fmul dword ptr [ecx - 0x76dfdbac]; ret 0xe8c1; 
0x00026876: fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008904d: fmul dword ptr [ecx]; ret 0xf089; 
0x00069575: fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x00067281: fmul dword ptr [edi]; dec eax; ret 0xb589; 
0x0003a8bb: fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0004e0ff: fmul dword ptr [edi]; dec esp; ret 0x8589; 
0x0009dada: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x000b3412: fmul dword ptr [edi]; inc edi; ret; 
0x0003347b: fmul dword ptr [edi]; inc edx; ret; 
0x001026cb: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x0012ea77: fmul dword ptr [edi]; sahf; ret 0xd108; 
0x0002686e: fmul dword ptr [edi]; test byte ptr [esi + 0x29000003], dh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x0008cf73: fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x0004b1a1: fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x00023eb1: fmul qword ptr [ebp - 0x20394f7d]; call dword ptr [eax - 0x73]; 
0x00108b43: fmul qword ptr [ebp - 0x74ffd98c]; xchg esp, eax; and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e8673: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0002ffcb: fmul qword ptr [ebx - 0x76f7db84]; ret; 
0x0016a774: fmul qword ptr [ebx - 0x7cefdba4]; ret; 
0x0013c242: fmul qword ptr [ecx + 0x458ba845]; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x00048572: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0005d0ae: fmul qword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x57b63]; jmp dword ptr [ebp - 0x75]; 
0x000245cb: fmul qword ptr [ecx - 0x7c2dce28]; ret; 
0x00075feb: fnstcw word ptr [0xe168fff9]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; and ebx, 0x3d; stc; call dword ptr [eax - 0x18]; 
0x0018eba1: fnstcw word ptr [eax]; jne 0x18f320; pop ebx; ret; 
0x00191a13: fnstcw word ptr [eax]; jne 0x191c40; pop ebx; ret; 
0x0009a9ec: fnstcw word ptr [ecx]; ret 0x3376; 
0x00035d03: fnstcw word ptr [edx + 0xa]; jne 0x35d10; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036062: fnstcw word ptr [edx + 0xb]; jne 0x36070; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003630e: fnstcw word ptr [edx + 0xf]; jne 0x36320; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003466c: fnstcw word ptr [esi]; jmp ecx; 
0x0013dc6c: fnstenv [esi + 9]; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00035cba: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0018eabc: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00035c0c: fscale; fstp st(1); ret; 
0x00143681: fsin; jmp dword ptr [esi - 0x70]; 
0x00072e2e: fsqrt; jmp dword ptr [esi - 0x70]; 
0x000b4c3f: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0018f335: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x18f340; neg eax; ret; 
0x00137897: fstp dword ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x00036243: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x000361e8: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00035ea9: fstp qword ptr [eax]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003b6d5: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000b77bf: fstp qword ptr [ebx + 0x5e]; mov edx, ebp; pop edi; pop ebp; ret; 
0x0009d232: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000a0e42: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000991cb: fstp qword ptr [edx - 0x48]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c9bf1: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035f83: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0019cb53: fstp st(0); add esp, 0x20; ret; 
0x00035cbc: fstp st(0); and eax, 0x200; ret; 
0x00035c0e: fstp st(1); ret; 
0x0003623e: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00035f7e: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x000dd2dc: fstp xword ptr [eax + 0x51]; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00035bc1: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00092ee5: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00092f49: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0005441b: fstp xword ptr [ecx]; ret 0xbb7d; 
0x00035cbd: fsub dword ptr [0x200]; ret; 
0x000584e7: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; pop edi; ret; 
0x0009259f: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x000377d7: fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0017739d: fsub dword ptr [esi + 0xf]; jg 0x1773e4; call 0x42ed830d; clc; pop ebx; ret; 
0x001784dd: fsub dword ptr [esi + 0xf]; jg 0x178524; call 0x42ed944d; clc; pop ebx; ret; 
0x0018ed8c: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000aa1dc: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x00153ff3: fsub qword ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x0015410b: fsub qword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00154047: fsub qword ptr [edx - 7]; jmp dword ptr [ebp - 0x75]; 
0x001772dd: fsub qword ptr [esi + 0xf]; jg 0x177324; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017841d: fsub qword ptr [esi + 0xf]; jg 0x178464; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00169948: fsub st(0), st(0); sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x0018bb57: fsub st(1), st(0); ret; 
0x001627e3: fsub st(4), st(0); call dword ptr [eax - 0x73]; 
0x0002fec5: fsub st(5); adc eax, dword ptr [eax]; add eax, 0x1f6137; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x00035b67: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000c9bef: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035b97: fsubp st(1); ret; 
0x0004eb47: fsubr dword ptr [ebx]; test dword ptr [eax - 0x76000037], edi; ret 0xe283; 
0x000c2e50: fsubr dword ptr [ecx]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0002471c: fsubr dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x000a1130: fsubr qword ptr [edx]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0007841a: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x000ba95b: fsubr st(0); mov edi, 0x8b000766; jl 0xba988; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x00155f16: fucomi st(0); add al, 0xb1; std; jmp dword ptr [esi - 0x70]; 
0x00024cd5: fucomi st(0); inc ebp; ret; 
0x0006472c: fucomi st(1); dec eax; jecxz 0x64730; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x000db927: fucomi st(1); ret; 
0x0013e0cf: fucomi st(3); ret 0xb48d; 
0x00158916: fucomp st(0); add al, 0x87; std; jmp dword ptr [esi - 0x70]; 
0x0013b8e8: fucompi st(0); xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x000f25cf: fucompi st(1); ret; 
0x0002891b: fucompp; mov ebx, 0x89fffffb; ret 0xe283; 
0x00035cb8: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x00116b47: hlt; adc byte ptr [eax], al; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00106b34: hlt; adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009997f: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x00151306: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00025025: hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x00094d77: hlt; add dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000759d3: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013cafb: hlt; add esp, 8; pop ebx; ret; 
0x00093a0d: hlt; and eax, 0xec830019; sbb byte ptr [ebp - 0x66c0b70], cl; call dword ptr [edx - 0x73]; 
0x0016d778: hlt; call dword ptr [eax - 0x18]; 
0x0016b6b0: hlt; call dword ptr [eax - 0x73]; 
0x000e452e: hlt; call dword ptr [ebp - 0x43]; 
0x0017175d: hlt; call dword ptr [edi - 1]; 
0x00139e7e: hlt; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00168661: hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x000e011d: hlt; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x0016ca5b: hlt; dec dword ptr [ecx + 0x45f6240c]; adc byte ptr [esi*2 - 0x5f7d72e8], al; pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x001399a9: hlt; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0014ac65: hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000d708f: hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00132a95: hlt; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000218ce: hlt; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x000c7988: hlt; jle 0xc7981; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000d82ba: hlt; jmp dword ptr [esi - 0x70]; 
0x0016ca6a: hlt; jmp dword ptr [esi - 9]; 
0x00194595: hlt; jne 0x1945d0; pop edi; pop esi; pop ebx; ret; 
0x00121da5: hlt; mov byte ptr [eax + eax], 0x81; ret 0x4257; 
0x00085d28: hlt; mov dl, 0xa; add byte ptr [ebx - 0x72fbdb84], cl; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x00177af7: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177477: hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017759e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f6e: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0012e89b: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000dce10: hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x0017b3b1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00184891: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x000d5b42: hlt; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0004dac6: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00022293: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001926da: hlt; pop edi; ret; 
0x0013aeec: hlt; pop esp; stc; call dword ptr [eax + 0x53]; 
0x0015b828: hlt; push edi; std; jmp dword ptr [esi - 0x70]; 
0x0014dad1: hlt; pushal; stc; call dword ptr [eax - 0x73]; 
0x000e3e48: hlt; ret 0xfff3; 
0x0008001b: hlt; ret; 
0x00103648: hlt; retf 0xfff1; add esp, 0x18; pop ebx; ret; 
0x00082d94: hlt; sbb dword ptr [eax], eax; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00151d5f: hlt; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0009043f: hlt; stc; dec dword ptr [ebp - 0x67c837d]; call dword ptr [eax + 0x68]; 
0x000d5ae0: hlt; std; inc dword ptr [ebx - 0x3616ef3c]; jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x00191757: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00093e90: hlt; xchg cl, bh; call dword ptr [eax - 1]; 
0x00093a16: hlt; xchg ebx, eax; stc; call dword ptr [edx - 0x73]; 
0x000bc935: hlt; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b43a7: hlt; xor eax, eax; ret; 
0x000e6501: idiv al; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x001174ce: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0014cd5d: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x0004324d: idiv bh; call dword ptr [eax + 0x6a]; 
0x0009d9db: idiv bh; call dword ptr [ebx + 0x56]; 
0x00099fd3: idiv bh; cmovne eax, edx; ret; 
0x0011df9e: idiv bh; dec dword ptr [ebp - 0x65eb77d]; call dword ptr [eax - 0x73]; 
0x000c14f8: idiv bh; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x00145d1e: idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x0004954a: idiv bh; dec dword ptr [ebx + 0x5f8d243c]; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x00145d3d: idiv bh; dec dword ptr [ebx - 0x13379]; jmp dword ptr [ebp - 0x39]; 
0x00041190: idiv bh; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00029c19: idiv bh; dec dword ptr [ebx - 0x7ccbdbbc]; ret 0x8904; 
0x000a5a1c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a59c6: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0016cc0c: idiv bh; inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0004f1ff: idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x000a5172: idiv bh; jmp dword ptr [esi + 0xf]; 
0x00130262: idiv bh; jmp dword ptr [esi - 0x70]; 
0x000b4a48: idiv bh; lea eax, [eax - 0x15d1e0]; test byte ptr [ecx + 0x7d], 2; cmovne eax, edx; ret; 
0x0009a4f8: idiv bh; lea eax, [eax - 0x171b80]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009a078: idiv bh; lea eax, [eax - 0x171c40]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x001169c3: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a93: idiv bh; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00170efa: idiv bh; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00083070: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00124132: idiv byte ptr [ebx + 0x18]; or dh, 1; call dword ptr gs:[0x10]; 
0x001235e2: idiv byte ptr [ebx + 0xe]; or dh, 1; call dword ptr gs:[0x10]; 
0x00083ed6: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849cf: idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00058ba0: idiv ch; dec dword ptr [ebx + 0x39c8290f]; ret; 
0x00093149: idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x000c7a85: idiv dword ptr [ebp - 0xa]; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x0004d625: idiv dword ptr [ecx]; push cs; add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000bc0b5: idiv dword ptr [ecx]; ret; 
0x0003a8fd: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0019ccf7: idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0006607d: idiv edi; call dword ptr [eax + 0x57]; 
0x0004012f: idiv edi; call dword ptr [eax + 0x6a]; 
0x00065e69: idiv edi; call dword ptr [eax - 0x18]; 
0x000659a5: idiv edi; call dword ptr [eax - 0x75]; 
0x000659a5: idiv edi; call dword ptr [eax - 0x75]; test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x00066605: idiv edi; call dword ptr [eax]; 
0x00066605: idiv edi; call dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x0006645d: idiv edi; call dword ptr [ebx + 0x52]; 
0x00066a77: idiv edi; call dword ptr [ebx + 0x57]; 
0x00066a77: idiv edi; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006b314: idiv edi; call dword ptr [ebx + 0xf]; 
0x0006b873: idiv edi; call dword ptr [ebx - 0x18]; 
0x0006c546: idiv edi; call dword ptr [ebx - 0x75]; 
0x000659ac: idiv edi; call dword ptr [ebx - 0x7d]; 
0x000659ac: idiv edi; call dword ptr [ebx - 0x7d]; ret; 
0x0006a81c: idiv edi; call dword ptr [ebx]; 
0x000d34ba: idiv edi; call dword ptr [ecx + 0x50]; 
0x000664bc: idiv edi; call dword ptr [ecx + 0x6a]; 
0x0006a9e4: idiv edi; call dword ptr [edx + 0x50]; 
0x0006bb91: idiv edi; call dword ptr [edx + 0x56]; 
0x0006bd4c: idiv edi; call dword ptr [edx + 0x6a]; 
0x000672e3: idiv edi; call dword ptr [edx - 0x18]; 
0x000663d1: idiv edi; call dword ptr [edx - 0x77]; 
0x0006c226: idiv edi; call dword ptr [esi + 0x52]; 
0x0006735e: idiv edi; call dword ptr [esi + 0x6a]; 
0x0006670a: idiv edi; call dword ptr [esi - 0x18]; 
0x0006ba1f: idiv edi; call dword ptr [esi - 1]; 
0x00066e9d: idiv edi; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x00066d4d: idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00162686: idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x00039f84: idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x00065f7b: idiv edi; dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x0009d838: idiv edi; dec dword ptr [ebp - 0x6fffd98c]; add esp, 4; pop ebx; pop esi; ret; 
0x00066a65: idiv edi; dec dword ptr [ebx + 0x193c80]; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000660c9: idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x000664f7: idiv edi; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000c6b52: idiv edi; dec dword ptr [ebx - 0x36376b]; inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x000e0dd7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1468ef80]; call dword ptr [eax + 0x6a]; 
0x001754c7: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x11ff0f80]; call dword ptr [eax + 0x6a]; 
0x00105037: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12266f80]; call dword ptr [eax + 0x6a]; 
0x00173797: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12e7df80]; call dword ptr [eax + 0x6a]; 
0x00171cd7: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x12f39f80]; call dword ptr [eax + 0x6a]; 
0x000e3457: idiv edi; dec dword ptr [ebx - 0x4737b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x14424f80]; call dword ptr [eax + 0x6a]; 
0x00063366: idiv edi; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0005ae27: idiv edi; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x75]; 
0x00065f33: idiv edi; dec dword ptr [ebx - 0x6780]; jmp dword ptr [ebp - 0x75]; 
0x00034bae: idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0006c190: idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x00066704: idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x0006b86d: idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x00124d7a: idiv edi; dec dword ptr [ecx + 0x260b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000666fc: idiv edi; dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x000c14da: idiv edi; dec dword ptr [ecx - 0x76a3dbac]; ret 0x92e9; 
0x00066457: idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x0006bb07: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [ecx + 0x6a]; 
0x0006bd46: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx + 0x6a]; 
0x0006c4c6: idiv edi; dec dword ptr [ecx - 0x88b6b]; call dword ptr [edx - 0x18]; 
0x0006bbf8: idiv edi; dec dword ptr [ecx - 0x88b73]; call dword ptr [esi + 0x6a]; 
0x00065757: idiv edi; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006575d: idiv edi; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0006a7a4: idiv edi; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x0006a79e: idiv edi; dec dword ptr [ecx - 0x8e77b]; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x000e5857: idiv edi; dec dword ptr [edi]; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x000667b3: idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x0006bff5: idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00066eb5: idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00067447: idiv edi; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00066611: idiv edi; jmp dword ptr [eax]; 
0x00065763: idiv edi; jmp dword ptr [ebp - 0x5f]; 
0x00066ec4: idiv edi; jmp dword ptr [edx]; 
0x000a527d: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0002e9f3: idiv edi; jmp dword ptr [esi - 0x70]; 
0x0018dcf0: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4e3: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00109413: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00109253: idiv edi; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x00066e95: idiv edi; push dword ptr [ecx]; rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x0018dcf7: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4ea: idiv edi; sub eax, ecx; pop ebx; ret; 
0x0018f689: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0015edb3: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00070e29: idiv edx; jmp dword ptr [esi - 0x70]; 
0x00160e6b: imul ah; call dword ptr [eax - 0x73]; 
0x00025f73: imul byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x00191777: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a20d8: imul byte ptr [ecx]; ret 0x280f; 
0x000a3adc: imul byte ptr [ecx]; ret 0xc301; 
0x00191708: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a2208: imul dword ptr [ecx]; ret 0x280f; 
0x000a3c3c: imul dword ptr [ecx]; ret 0xc301; 
0x0017bece: imul eax, dword ptr [eax + eax], 0x3e8b1c03; jmp ebx; 
0x00080f16: imul eax, dword ptr [ebx + 0x56a04ec], 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x0007ff1b: imul eax, dword ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x0014b3a3: imul eax, dword ptr [ebx + edx*2], -0x77; sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x0015f1b3: imul eax, dword ptr [ecx + 0x110c4], 0; pop ebx; pop esi; pop edi; ret; 
0x00070611: imul eax, dword ptr [ecx], 0; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0014daab: imul eax, dword ptr [ecx], 0xec830000; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x0002598a: imul eax, dword ptr [edi + ecx], 0x44; ret; 
0x0011cf61: imul eax, dword ptr [edi - 0x10], -1; ret; 
0x000aad43: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x000d6c5a: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x0014ed41: imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x000992eb: imul ebx, dword ptr [eax], -0x77; jae 0x99310; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0019788e: imul ecx, dword ptr [eax], -0x7f; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0008d64d: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x0005abc3: imul ecx; ret; 
0x00080f44: imul edi, dword ptr [esi], -7; call dword ptr [ecx + 0x52]; 
0x0003a731: imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x000fd54a: imul edi, ecx, 0x8301ffff; ret; 
0x00025eb4: imul edi, edi, -1; dec dword ptr [ebx - 0x72c3db8c]; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x000d61fb: imul edi, edi, -1; jmp dword ptr [ebp - 0x39]; 
0x000ec9aa: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000507f1: imul edi, edx, 0x478dffff; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00101dda: imul edi, esp, -1; jmp dword ptr [esi - 0x70]; 
0x000e956b: imul esi, ebx, -1; add esp, 0x14; pop ebx; pop esi; ret; 
0x001449e1: imul esi, esp, 0x1cc483ff; ret; 
0x0011ce1c: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00109df7: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00107b77: in al, 0x11; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00049cd4: in al, 0x30; stc; call dword ptr [eax - 0x18]; 
0x001307ff: in al, 0x31; fisttp dword ptr [ebx - 0x13377]; jmp dword ptr [ebp - 0x7d]; 
0x0011ae13: in al, 0x44; add byte ptr [eax], al; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x000e1b54: in al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00117355: in al, 0x4a; stc; call dword ptr [edx - 0x77]; 
0x00155018: in al, 0x50; push esi; call 0x156a30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00129b58: in al, 0x65; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e9858: in al, 0x68; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00071385: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00072078: in al, 0x7c; stc; jmp dword ptr [ebp - 0x75]; 
0x00086055: in al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0019d32f: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009b669: in al, 0x83; ret 0x8301; 
0x0008cf6b: in al, 0x85; sar byte ptr [eax + 0x60], 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x000716ea: in al, 0x89; ret; 
0x0008d273: in al, 0x8b; mov esp, 0x1a20c3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00108165: in al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x001699b8: in al, 0xe8; bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x0009a4fd: in al, 0xe8; push esi; inc ecx; jle 0x9a514; cmovne eax, edx; ret; 
0x00124589: in al, 0xef; call dword ptr [eax - 0x18]; 
0x00121074: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x001930b9: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x001931e4: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x00142bbb: in al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00062727: in al, 0xff; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000c037a: in al, 0xff; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0006b07a: in al, 0xff; jmp eax; 
0x00072925: in al, 0xff; jne 0x72931; push edx; call dword ptr [ebx + 0x1c]; 
0x00073e5a: in al, 0xff; jne 0x73e66; push esi; call dword ptr [eax + 0x1c]; 
0x00093560: in al, 1; add byte ptr [eax], al; ret; 
0x000ddfc5: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0xddf60; add esp, 0x1c; ret; 
0x001698bf: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x699dc80]; call dword ptr [eax - 0x18]; 
0x0015011f: in al, dx; adc al, 0x8d; adc cl, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x001516af: in al, dx; adc al, 0x8d; add byte ptr [ecx + 0x62], 0xf9; call dword ptr [eax + 0x6a]; 
0x0015078f: in al, dx; adc al, 0x8d; and al, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00153fef: in al, dx; adc al, 0x8d; sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00152ebf: in al, dx; adc al, 0x8d; sub byte ptr [edx + 0x6a50fff9], 1; call 0x14f970; add esp, 0x1c; ret; 
0x001542af: in al, dx; adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0015480f: in al, dx; adc al, 0x8d; xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0016988f: in al, dx; adc al, 0xff; je 0x1698b8; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x001477f2: in al, dx; adc bh, bh; je 0x14781b; sbb al, 0xe8; ret; 
0x000216ff: in al, dx; adc byte ptr [eax - 0x45], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6995f80], cl; call dword ptr [eax + 0x6a]; 
0x0009370e: in al, dx; adc byte ptr [eax - 0x73], dl; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0003305f: in al, dx; adc byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 0x75]; 
0x0019ce01: in al, dx; adc byte ptr [ebp - 0x8924f7d], cl; call dword ptr [eax - 1]; 
0x00155081: in al, dx; adc byte ptr [ebp - 0xd106f7d], cl; call dword ptr [eax - 0x73]; 
0x00139ef1: in al, dx; adc byte ptr [ebp - 0xec14f7d], cl; call dword ptr [eax - 0x73]; 
0x00099fef: in al, dx; adc byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x0007dd3c: in al, dx; add al, 0x29; ret 0x5052; 
0x0013881a: in al, dx; add al, 0x29; ret 0x5752; 
0x00077b8f: in al, dx; add al, 0x29; ret 0xfac1; 
0x00058bcc: in al, dx; add al, 0x29; ret; 
0x000a135c: in al, dx; add al, 0x39; ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x0007cc90: in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077176: in al, dx; add al, 0x50; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007c726: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x0011b221: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0016f77b: in al, dx; add al, 0x51; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0006b6f2: in al, dx; add al, 0x51; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0006688a: in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x000654b1: in al, dx; add al, 0x53; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00071006: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006cffa: in al, dx; add al, 0x53; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000660f6: in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068202: in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00072ed8: in al, dx; add al, 0x53; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066211: in al, dx; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006b159: in al, dx; add al, 0x53; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3da: in al, dx; add al, 0x53; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x00038edd: in al, dx; add al, 0x55; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007cb9a: in al, dx; add al, 0x55; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069053: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f68: in al, dx; add al, 0x55; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00069e57: in al, dx; add al, 0x55; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038bd5: in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x00074253: in al, dx; add al, 0x55; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038bb1: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038b84: in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0007b701: in al, dx; add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dbf: in al, dx; add al, 0x56; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00073f24: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007b883: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0011b1ea: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x0011b1fe: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x0011b211: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x00071337: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072164: in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053347: in al, dx; add al, 0x57; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006e237: in al, dx; add al, 0x57; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x000741e1: in al, dx; add al, 0x6a; adc byte ptr [edi + 0x53], dl; call dword ptr [eax + 0x1c]; 
0x0007fbf3: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x0012c9d0: in al, dx; add al, 0x6a; add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x0012ceae: in al, dx; add al, 0x6a; add eax, 0x5794808d; stc; call dword ptr [eax - 1]; 
0x000f64ef: in al, dx; add al, 0x6a; add eax, 0x6003848d; cld; clc; call dword ptr [eax - 0x73]; 
0x0012e655: in al, dx; add al, 0x6a; add eax, 0x6d20878d; stc; call dword ptr [eax - 0x75]; 
0x000f8bdf: in al, dx; add al, 0x6a; add eax, 0x9bac868d; stc; call dword ptr [eax - 0x73]; 
0x0012c661: in al, dx; add al, 0x6a; add eax, 0xa468808d; stc; call dword ptr [eax - 0x75]; 
0x0012d293: in al, dx; add al, 0x6a; add eax, 0xa4a0808d; stc; call dword ptr [eax + 0x6a]; 
0x000fdd4b: in al, dx; add al, 0x6a; add eax, 0xb4818d50; jb 0xfdd4e; call dword ptr [eax - 0x18]; 
0x0005793c: in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x00080f18: in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x0009a53a: in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x0005890d: in al, dx; add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; 
0x0005890d: in al, dx; add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00161df6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00161df6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x001639d2: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00033bf2: in al, dx; add al, 0x6a; or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x0013cb77: in al, dx; add al, 0x83; ret 0x8802; 
0x0013fbde: in al, dx; add al, 0x83; ret 0xf0c; 
0x00040c37: in al, dx; add al, 0x83; ret; 
0x00101ca7: in al, dx; add al, 0x83; sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00067359: in al, dx; add al, 0x88; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x00066a72: in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00066a72: in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006c901: in al, dx; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x000fc3e2: in al, dx; add al, 0x89; ret; 
0x0002e2b5: in al, dx; add al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x00081b87: in al, dx; add al, 0x8b; adc dl, byte ptr [ebx + 0x50]; push ecx; call edx; 
0x0006bbf3: in al, dx; add al, 0x8b; popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x000c77af: in al, dx; add al, 0x8b; popfd; ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x001745ec: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0013e03a: in al, dx; add al, 0x8d; mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0016530c: in al, dx; add al, 0x8d; or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0015ca34: in al, dx; add al, 0x8d; sub dword ptr [ecx], 0x6afff964; add eax, 0xb4818d50; jb 0x15ca3d; call dword ptr [eax - 0x18]; 
0x00136539: in al, dx; add al, 0x8d; test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xb4858d50; jb 0x136542; call dword ptr [eax - 0x18]; 
0x0009a319: in al, dx; add al, 0x8d; test dword ptr [ebx + 0x6afff943], esi; add eax, 0xb4858d50; jb 0x9a322; call dword ptr [eax - 0x18]; 
0x00058adb: in al, dx; add al, 0x8d; test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x00058cd9: in al, dx; add al, 0x8d; test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x0013647b: in al, dx; add al, 0x8d; test dword ptr [edx + 0x6afff95a], edi; add eax, 0xb4858d50; jb 0x136484; call dword ptr [eax - 0x18]; 
0x00137c20: in al, dx; add al, 0x8d; test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x000ca954: in al, dx; add al, 0x8d; xchg byte ptr [edi - 0x72b00000], cl; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0006f291: in al, dx; add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x00036241: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0010067a: in al, dx; add al, 0xf9; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0012a58c: in al, dx; add al, 0xff; je 0x12a5b5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x00021671: in al, dx; add al, 0xff; je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00039041: in al, dx; add al, 0xff; je 0x3906a; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000391a3: in al, dx; add al, 0xff; je 0x391cc; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039214: in al, dx; add al, 0xff; je 0x3923d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00071060: in al, dx; add al, 0xff; je 0x71089; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007bba3: in al, dx; add al, 0xff; je 0x7bbcc; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00072921: in al, dx; add al, 0xff; jne 0x7290a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073061: in al, dx; add al, 0xff; jne 0x7307a; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00073e56: in al, dx; add al, 0xff; jne 0x73e3f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0006ba1a: in al, dx; add al, 0xff; mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x0011c2c7: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011c45f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x0013ff73: in al, dx; add al, 1; ret 0x4489; 
0x00157d46: in al, dx; add al, 1; ret 0xc129; 
0x000cd6e8: in al, dx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x000ca531: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00031ecc: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00029c64: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x29c67; call dword ptr [eax - 0x18]; 
0x0002b06c: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], ah; jo 0x2b06f; call dword ptr [eax - 0x18]; 
0x00026e93: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x26e96; call dword ptr [eax - 0x18]; 
0x00027b9a: in al, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; jo 0x27b9d; call dword ptr [eax - 0x18]; 
0x0012d547: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x0014f7b3: in al, dx; add esp, 8; pop ebx; ret; 
0x00130333: in al, dx; call 0x12f900; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00160934: in al, dx; call dword ptr [eax - 0x73]; 
0x00071a29: in al, dx; cli; jmp dword ptr [esi - 0x70]; 
0x00154043: in al, dx; cmp byte ptr [ebp - 0x69d2380], cl; jmp dword ptr [ebp - 0x75]; 
0x001522e3: in al, dx; cmp byte ptr [ebp - 0x69d7880], cl; jmp dword ptr [ebp - 0x75]; 
0x00151703: in al, dx; cmp byte ptr [ebp - 0x69dbe80], cl; jmp dword ptr [ebp - 0x75]; 
0x000c34d3: in al, dx; cmp byte ptr [ebp - 0x6d4e848], cl; jmp dword ptr [ebp - 0x75]; 
0x000b548a: in al, dx; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00157ad1: in al, dx; dec dword ptr [ecx + 0x65e82434]; xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016183c: in al, dx; in al, dx; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0015a25d: in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00157ad9: in al, dx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001557ff: in al, dx; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001611d0: in al, dx; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0015c4d0: in al, dx; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015c5a5: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014da74: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016e5a3: in al, dx; jmp dword ptr [esi - 0x70]; 
0x00109ae5: in al, dx; lahf; stc; call dword ptr [eax - 0x18]; 
0x0014a639: in al, dx; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00177932: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001772e2: in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017b913: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d8e3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00184d73: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00184d6e: in al, dx; movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00070f39: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00130ec7: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008b455: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00139acd: in al, dx; or al, 0x50; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00082aa5: in al, dx; or al, 0x50; call edx; 
0x00022908: in al, dx; or al, 0x51; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f98: in al, dx; or al, 0x51; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00139dd1: in al, dx; or al, 0x53; call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x0002b7b3: in al, dx; or al, 0x53; call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x00156054: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0007d496: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007516a: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x0007b4ed: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x0007d2f4: in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0015d6b9: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x001575df: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x0015d6d0: in al, dx; or al, 0x55; call eax; 
0x0015c4d3: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0019cbb5: in al, dx; or al, 0x56; call 0x16b3c0; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00139c2d: in al, dx; or al, 0x56; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00022795: in al, dx; or al, 0x56; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x001554f3: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0007a0ee: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0007f1e4: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00170550: in al, dx; or al, 0x56; call dword ptr [ebp + 0x44]; 
0x00070ac6: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007311f: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007ee3f: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x00170695: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x0002de00: in al, dx; or al, 0x56; call eax; 
0x00121077: in al, dx; or al, 0x56; call edx; 
0x00121077: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0015c191: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001564f9: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0014058a: in al, dx; or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x001564a7: in al, dx; or al, 0x57; call 0x109210; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000d8d96: in al, dx; or al, 0x57; call 0x16b3c0; add esp, 0x10; mov eax, edi; call eax; 
0x000236c8: in al, dx; or al, 0x57; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x001567e8: in al, dx; or al, 0x57; call eax; 
0x00168481: in al, dx; or al, 0x68; add byte ptr [ecx], 0; add al, ch; ret; 
0x000831fd: in al, dx; or al, 0x6a; add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x00099261: in al, dx; or al, 0x6a; add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0009d0a1: in al, dx; or al, 0x83; mov dword ptr [esi + edx*2], 0x17554e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0015b0e5: in al, dx; or al, 0x83; ret 0x5208; 
0x00033ae1: in al, dx; or al, 0x83; ret; 
0x0005b1f3: in al, dx; or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0005bd15: in al, dx; or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0008ef2e: in al, dx; or al, 0x89; push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000ee9a1: in al, dx; or al, 0x89; ret 0xe989; 
0x0005b328: in al, dx; or al, 0x89; ret; 
0x0002e96f: in al, dx; or al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x000e1500: in al, dx; or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x0006744b: in al, dx; or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x001498f4: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0015563d: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0015e9c5: in al, dx; or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x0015dc90: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00160fda: in al, dx; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00155a84: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015f6fe: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00155d4c: in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000d8583: in al, dx; or al, 0x8b; jge 0xd855c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d87a3: in al, dx; or al, 0x8b; jge 0xd877c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x001557ea: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0005fa21: in al, dx; or al, 0x8b; sbb dword ptr [eax - 0x76000001], 0xfffac485; jmp dword ptr [ebp - 0x75]; 
0x0014de40: in al, dx; or al, 0x8b; sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00104320: in al, dx; or al, 0x8b; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x000e00b0: in al, dx; or al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x0015347a: in al, dx; or al, 0x8d; add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x00086051: in al, dx; or al, 0x8d; and ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00067c52: in al, dx; or al, 0x8d; and al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x00165819: in al, dx; or al, 0x8d; and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0007b33e: in al, dx; or al, 0x8d; and dword ptr [esi + edi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00108161: in al, dx; or al, 0x8d; and esp, 0xffffff9e; stc; call dword ptr [eax - 0x18]; 
0x00031643: in al, dx; or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0010b4c0: in al, dx; or al, 0x8d; cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x00155974: in al, dx; or al, 0x8d; cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0014d9f1: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x00144820: in al, dx; or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0014484c: in al, dx; or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00144878: in al, dx; or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0006532d: in al, dx; or al, 0x8d; nop; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x00156611: in al, dx; or al, 0x8d; or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000e49c1: in al, dx; or al, 0x8d; or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x000ce151: in al, dx; or al, 0x8d; pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x0015cefb: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x001082b1: in al, dx; or al, 0x8d; sbb dword ptr [edi + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x000cc2c5: in al, dx; or al, 0x8d; sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000c34ac: in al, dx; or al, 0x8d; sub dword ptr [eax + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x00082509: in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000fcf12: in al, dx; or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fc4cf: in al, dx; or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000219be: in al, dx; or al, 0x8d; test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0014489c: in al, dx; or al, 0x8d; wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000218ca: in al, dx; or al, 0x8d; xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00138383: in al, dx; or al, 0x8d; xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00113163: in al, dx; or al, 0x8d; xchg byte ptr [eax], ch; stc; call dword ptr [eax - 0x18]; 
0x00138362: in al, dx; or al, 0x8d; xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x001083fb: in al, dx; or al, 0x8d; xchg byte ptr [edi + ebx*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00138294: in al, dx; or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00119e21: in al, dx; or al, 0x8d; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00137fc9: in al, dx; or al, 0x8d; xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0008265a: in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0015f1c1: in al, dx; or al, 0x8d; xchg dword ptr [ecx + esi*4 - 7], esi; call dword ptr [ebx - 1]; 
0x00165075: in al, dx; or al, 0x8d; xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x000860b9: in al, dx; or al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x000e1037: in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001739ef: in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; ret; 
0x0003a811: in al, dx; or al, 0x8d; xor dword ptr [esp + esi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0008425d: in al, dx; or al, 0xff; jae 0x84266; call dword ptr [ebx]; 
0x0008b354: in al, dx; or al, 0xff; jae 0x8b35d; call dword ptr [ebx]; 
0x001159d7: in al, dx; or al, 0xff; je 0x115a00; and al, 0xe8; pop esi; ret 0xfff6; 
0x0013386f: in al, dx; or al, 0xff; je 0x133898; sub byte ptr [ebx - 0x17cfdba4], cl; ret 0xeec8; 
0x0013777c: in al, dx; or al, 0xff; je 0x1377a5; or al, 0x89; ret; 
0x00153f7e: in al, dx; or al, 0xff; je 0x153fa7; adc byte ptr [ebx - 0x17d3dba4], cl; ret; 
0x0003a423: in al, dx; or al, 0xff; je 0x3a44c; sub al, ch; ret 0xfffe; 
0x00086e93: in al, dx; or al, 0xff; je 0x86ebc; cmp al, 0xe8; ret 0xffb8; 
0x00020f48: in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0019dd71: in al, dx; or al, 0xff; mov ch, 4; add al, byte ptr [eax]; add al, ch; ret 0xe823; 
0x00023901: in al, dx; or al, 1; ret 0xe852; 
0x001668d9: in al, dx; or al, 1; ret; 
0x00143c91: in al, dx; or al, ch; cmp byte ptr [esi], ch; add byte ptr [ebx - 0x1365], cl; jmp dword ptr [ebp - 0x75]; 
0x0019cca1: in al, dx; or al, ch; dec eax; add al, byte ptr [eax]; add al, ch; ret; 
0x001608b0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aec0: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x00122f81: in al, dx; or bh, bh; je 0x122f3b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x001552b3: in al, dx; or bh, bh; je 0x1552dc; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015a516: in al, dx; or bh, bh; je 0x15a53f; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015d1ab: in al, dx; or bh, bh; je 0x15d1d4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015dc77: in al, dx; or bh, bh; je 0x15dca0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0006c18b: in al, dx; or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x000663cc: in al, dx; or bh, bh; mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x000e004d: in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x0011c1f1: in al, dx; or byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x000995d1: in al, dx; or byte ptr [eax - 1], dl; jae 0x995fb; call edx; 
0x0007043a: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0007c085: in al, dx; or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007bd1c: in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00076d22: in al, dx; or byte ptr [ebp + 0x50402444], cl; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00103a39: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000d5ff3: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000df7b9: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0015edb6: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0007c3c5: in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007efad: in al, dx; or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000d5e91: in al, dx; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x000de22c: in al, dx; or byte ptr [ebp - 0x14c76b], cl; call dword ptr [edx + 0x50]; 
0x000de401: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax + 0x52]; 
0x000de38d: in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x000dfed7: in al, dx; or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax + 0x56]; 
0x000e00d5: in al, dx; or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x00104147: in al, dx; or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax + 0x56]; 
0x00104345: in al, dx; or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax - 0x75]; 
0x000922c1: in al, dx; or byte ptr [ebp - 0x193f2f79], cl; call dword ptr [eax - 0x73]; 
0x0002e801: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000c5684: in al, dx; or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000c5213: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x75]; 
0x000c63d8: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x0005006e: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0016966c: in al, dx; or byte ptr [ebp - 0x64c3345], cl; call dword ptr [edi + 0x56]; 
0x001219d1: in al, dx; or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001219ec: in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x00121a0a: in al, dx; or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x000fb8ad: in al, dx; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000fd2eb: in al, dx; or byte ptr [ebp - 0x6737b], cl; call dword ptr [eax - 0x73]; 
0x0003016f: in al, dx; or byte ptr [ebp - 0x68cc37b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0002c7ee: in al, dx; or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x00168906: in al, dx; or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x00169ceb: in al, dx; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x00168f18: in al, dx; or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x55]; 
0x001688eb: in al, dx; or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x56]; 
0x00169796: in al, dx; or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x00168921: in al, dx; or byte ptr [ebp - 0x69a076d], cl; call dword ptr [edx - 0x77]; 
0x00168f52: in al, dx; or byte ptr [ebp - 0x69a0775], cl; call dword ptr [ecx - 0x77]; 
0x00168f75: in al, dx; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x00168944: in al, dx; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x56]; 
0x001697b5: in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x00159532: in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00151e27: in al, dx; or byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x56]; 
0x0014dab0: in al, dx; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x001396ef: in al, dx; or byte ptr [ebp - 0x6a36d6d], cl; call dword ptr [edx + 0x50]; 
0x00139211: in al, dx; or byte ptr [ebp - 0x6a3a969], cl; call dword ptr [edx + 0x50]; 
0x00139571: in al, dx; or byte ptr [ebp - 0x6a3a96d], cl; call dword ptr [edx + 0x50]; 
0x00138a2c: in al, dx; or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0011e59a: in al, dx; or byte ptr [ebp - 0x6ab107d], cl; call dword ptr [eax + 0x56]; 
0x0011d157: in al, dx; or byte ptr [ebp - 0x6ad557d], cl; call dword ptr [eax + 0x57]; 
0x0011d3fa: in al, dx; or byte ptr [ebp - 0x6ade67d], cl; call dword ptr [eax + 0x57]; 
0x0011d3df: in al, dx; or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x0011d3c4: in al, dx; or byte ptr [ebp - 0x6ae2d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d3a9: in al, dx; or byte ptr [ebp - 0x6ae667d], cl; call dword ptr [eax + 0x57]; 
0x0011d38e: in al, dx; or byte ptr [ebp - 0x6ae8d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d373: in al, dx; or byte ptr [ebp - 0x6aeb37d], cl; call dword ptr [eax + 0x57]; 
0x0011d358: in al, dx; or byte ptr [ebp - 0x6aee97d], cl; call dword ptr [eax + 0x57]; 
0x0011d33d: in al, dx; or byte ptr [ebp - 0x6af1f7d], cl; call dword ptr [eax + 0x57]; 
0x0011d322: in al, dx; or byte ptr [ebp - 0x6af6f7d], cl; call dword ptr [eax + 0x57]; 
0x0011d307: in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0011d2ec: in al, dx; or byte ptr [ebp - 0x6afde7d], cl; call dword ptr [eax + 0x57]; 
0x0011d2d1: in al, dx; or byte ptr [ebp - 0x6b0107d], cl; call dword ptr [eax + 0x57]; 
0x0011d2b6: in al, dx; or byte ptr [ebp - 0x6b0447d], cl; call dword ptr [eax + 0x57]; 
0x0011d29b: in al, dx; or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x0011d280: in al, dx; or byte ptr [ebp - 0x6b0ab7d], cl; call dword ptr [eax + 0x57]; 
0x0011d265: in al, dx; or byte ptr [ebp - 0x6b0f77d], cl; call dword ptr [eax + 0x57]; 
0x0011d24a: in al, dx; or byte ptr [ebp - 0x6b13b7d], cl; call dword ptr [eax + 0x57]; 
0x0011d22f: in al, dx; or byte ptr [ebp - 0x6b16d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d214: in al, dx; or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x0011d13c: in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011d1f9: in al, dx; or byte ptr [ebp - 0x6b1e47d], cl; call dword ptr [eax + 0x57]; 
0x0011d1de: in al, dx; or byte ptr [ebp - 0x6b2197d], cl; call dword ptr [eax + 0x57]; 
0x0011d1c3: in al, dx; or byte ptr [ebp - 0x6b2607d], cl; call dword ptr [eax + 0x57]; 
0x0011d1a8: in al, dx; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011d18d: in al, dx; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011d172: in al, dx; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x00117370: in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x0011d121: in al, dx; or byte ptr [ebp - 0x6b3e37d], cl; call dword ptr [eax + 0x57]; 
0x0011d106: in al, dx; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0011738f: in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x00117351: in al, dx; or byte ptr [ebp - 0x6b51b6a], cl; call dword ptr [edx - 0x77]; 
0x000de2c0: in al, dx; or byte ptr [ebp - 0x6b6b768], cl; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x00117439: in al, dx; or byte ptr [ebp - 0x6b6b77d], cl; call dword ptr [eax - 0x73]; 
0x000e9f84: in al, dx; or byte ptr [ebp - 0x6b7907d], cl; call dword ptr [eax + 0x55]; 
0x000ea141: in al, dx; or byte ptr [ebp - 0x6b7977d], cl; call dword ptr [eax + 0x55]; 
0x000ea0b4: in al, dx; or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x000e9ffe: in al, dx; or byte ptr [ebp - 0x6b7a37d], cl; call dword ptr [eax + 0x55]; 
0x000e9c87: in al, dx; or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x000e9d97: in al, dx; or byte ptr [ebp - 0x6b7b57d], cl; call dword ptr [eax + 0x55]; 
0x000e9c12: in al, dx; or byte ptr [ebp - 0x6b7bb7d], cl; call dword ptr [eax + 0x55]; 
0x000e9f2b: in al, dx; or byte ptr [ebp - 0x6b7c17d], cl; call dword ptr [eax + 0x55]; 
0x000de376: in al, dx; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000de3d3: in al, dx; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000cc1da: in al, dx; or byte ptr [ebp - 0x6bac37d], cl; call dword ptr [eax + 0x56]; 
0x000cbd35: in al, dx; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x000991aa: in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0014cd50: in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x000faca7: in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000e9dd5: in al, dx; or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x0007d730: in al, dx; or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x00057fe9: in al, dx; or byte ptr [ebp - 0x6ce8061], cl; call dword ptr [ecx + 0x53]; 
0x00057a3f: in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x00034c37: in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x00119142: in al, dx; or byte ptr [ebp - 0x6d0c37a], cl; call dword ptr [eax - 1]; 
0x0011c1a2: in al, dx; or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x00145818: in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0002c0d6: in al, dx; or byte ptr [ebp - 0x6d3877d], cl; call dword ptr [eax - 1]; 
0x0002c0b8: in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x00145182: in al, dx; or byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax - 0x73]; 
0x001364c9: in al, dx; or byte ptr [ebp - 0x6d5a47b], cl; call dword ptr [eax + 0x53]; 
0x000cc264: in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000875b1: in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000cddbe: in al, dx; or byte ptr [ebp - 0x6d5a47f], cl; call dword ptr [eax + 0x53]; 
0x001553e7: in al, dx; or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000cdd71: in al, dx; or byte ptr [ebp - 0x877b], cl; call dword ptr [eax + 0x53]; 
0x0019ccea: in al, dx; or byte ptr [ebp - 0x8949f6d], cl; call dword ptr [edx + 0x50]; 
0x0012e110: in al, dx; or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0015c7d1: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0015c831: in al, dx; or byte ptr [ebp - 0x8b7b], cl; call dword ptr [eax + 0x56]; 
0x0011946a: in al, dx; or byte ptr [ebp - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x0015c988: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00166f0b: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x001676b4: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x000cdff9: in al, dx; or byte ptr [ebp - 0xb363], cl; call dword ptr [ebx + 0x6a]; 
0x0015512a: in al, dx; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x0015f8d1: in al, dx; or byte ptr [ebp - 0xc682f7d], cl; call dword ptr [eax - 0x73]; 
0x0015f9e9: in al, dx; or byte ptr [ebp - 0xc682f7d], cl; call dword ptr [eax - 0x73]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0015d6d9: in al, dx; or byte ptr [ebp - 0xc8bff7d], cl; call dword ptr [eax - 0x73]; 
0x0015ac2b: in al, dx; or byte ptr [ebp - 0xcb74f7d], cl; call dword ptr [eax - 0x73]; 
0x00084056: in al, dx; or byte ptr [ebx + 0x2010247c], al; je 0x84068; add esp, 8; pop ebx; ret; 
0x0015a4fe: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00156d6a: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016b139: in al, dx; or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016b1d9: in al, dx; or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x0015bb51: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0015f6ed: in al, dx; or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0015529d: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00155407: in al, dx; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0015bab1: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x00162715: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x000758fb: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0012e9b9: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00157a29: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001579d9: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00160281: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00160470: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00155281: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0015ba33: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x00156e11: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00155821: in al, dx; or byte ptr [ebx + 0xa34083], cl; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00132957: in al, dx; or byte ptr [ebx - 0x1137d], cl; jmp dword ptr [ebp + 3]; 
0x0008e05d: in al, dx; or byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x00145f80: in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x00156de6: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00156e5b: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0006319b: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00061dfd: in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x00061a35: in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x00060db6: in al, dx; or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x00060b83: in al, dx; or byte ptr [ebx - 0x50b4b], cl; call dword ptr [edi - 1]; 
0x0005b5db: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005afe6: in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0005b249: in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x0015d172: in al, dx; or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00150b35: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x001763c6: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000fac8c: in al, dx; or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000faecc: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000fb179: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x000fb015: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0014fdcb: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503ed: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x000f4e8e: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x00092c61: in al, dx; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [eax - 0x2c], -0x1a; call dword ptr [eax - 0x73]; 
0x001372e5: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x001604b9: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000de517: in al, dx; or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000f8e4d: in al, dx; or byte ptr [ebx - 0x7f723383], cl; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0012cda5: in al, dx; or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x0012d050: in al, dx; or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x000809b6: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x809e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0012d97d: in al, dx; or byte ptr [ebx - 1], dl; jae 0x12d9b3; call eax; 
0x000c9f00: in al, dx; or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00155f99: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x0002e1be: in al, dx; or byte ptr [ecx - 0x1bb6b], cl; call dword ptr [esi + 0x51]; 
0x000334f2: in al, dx; or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x000d8c12: in al, dx; or byte ptr [ecx - 0x567a7239], cl; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x0015eb5a: in al, dx; or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0007b1bd: in al, dx; or byte ptr [ecx - 0x7c72f7bb], cl; add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x00030b6b: in al, dx; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x0012cee4: in al, dx; or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x0002dad3: in al, dx; or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0012c309: in al, dx; or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0002f171: in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x00099553: in al, dx; or byte ptr [ecx - 1], dl; jae 0x9957d; call eax; 
0x0009d57d: in al, dx; or byte ptr [ecx], al; ret 0x5489; 
0x0003564b: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x0010a9f1: in al, dx; or byte ptr [ecx], al; ret; 
0x00061ab1: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0007bf69: in al, dx; or byte ptr [ecx], ch; ret 0x352; 
0x00144d3b: in al, dx; or byte ptr [ecx], ch; ret; 
0x00121cd6: in al, dx; or byte ptr [ecx], dh; call dword ptr [edi + 0x56]; 
0x000d5fba: in al, dx; or byte ptr [edi + 0x53], dl; call eax; 
0x0007de3f: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00076a94: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0015744e: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003a5c6: in al, dx; or byte ptr [edx], ch; push edx; call edi; 
0x0007980b: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x00070616: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x00099464: in al, dx; or byte ptr [esi - 1], dl; jae 0x9948e; call eax; 
0x00035f81: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x0008a971: in al, dx; or cl, al; call dword ptr [ebx]; 
0x00129b50: in al, dx; out dx, eax; dec dword ptr [ecx - 0x1b17dbcc]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0019d503: in al, dx; pop ebx; pop esi; pop edi; ret; 
0x001591a3: in al, dx; pop ebx; ret; 
0x00109ff3: in al, dx; pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x75]; 
0x000e9850: in al, dx; push 0x3489fff3; and al, 0xe8; in al, 0x68; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000373a9: in al, dx; push ds; add byte ptr [ebx - 0x77], dl; ret; 
0x000378b3: in al, dx; pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x000721a9: in al, dx; ret 0xf; 
0x00166d64: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x001262e4: in al, dx; sbb al, 0x8b; jl 0x12630d; xor byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00093a12: in al, dx; sbb byte ptr [ebp - 0x66c0b70], cl; call dword ptr [edx - 0x73]; 
0x0008f011: in al, dx; sbb byte ptr [ebp - 0x67d2b80], cl; call dword ptr [eax - 0x18]; 
0x00131031: in al, dx; sbb byte ptr [ebp - 0x6a70880], cl; call dword ptr [eax - 0x18]; 
0x0012f911: in al, dx; sbb byte ptr [ebp - 0x6a74a80], cl; call dword ptr [eax - 0x18]; 
0x0007c0d9: in al, dx; sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00176b5f: in al, dx; sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x0003c52f: in al, dx; sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x0004a557: in al, dx; sbb byte ptr [ecx + 0x3001bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00073b71: in al, dx; sbb byte ptr [ecx - 0x18], dl; mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00153245: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00152ee5: in al, dx; sbb byte ptr [edx + 1], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00152655: in al, dx; sbb byte ptr [edx + 2], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001516d5: in al, dx; sbb byte ptr [edx + 3], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001522b5: in al, dx; sbb byte ptr [edx + 4], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00150145: in al, dx; sbb byte ptr [edx + 5], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001529d5: in al, dx; sbb byte ptr [edx + 6], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00154835: in al, dx; sbb byte ptr [edx + 7], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001507b5: in al, dx; sbb byte ptr [edx + 8], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001542d5: in al, dx; sbb byte ptr [edx + 9], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00154015: in al, dx; sbb byte ptr [edx], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00038085: in al, dx; sbb byte ptr [edx], ch; call 0x37930; add esp, 0x1c; ret; 
0x00022730: in al, dx; sldt word ptr [eax]; ret; 
0x00050bd9: in al, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0018f857: in al, dx; std; inc dword ptr [ecx + 0x967a6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0002da36: in al, dx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x000a13b4: in al, dx; sub byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x000933e5: in al, dx; sub byte ptr [ebx - 0x72c3db94], cl; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x0011ce57: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00193e57: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0002fee6: in eax, 0x13; add byte ptr [0x1f6117], al; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec6: in eax, 0x13; add byte ptr [0x1f6137], al; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea6: in eax, 0x13; add byte ptr [0x1f6157], al; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x00100e88: in eax, 0x49; stc; call dword ptr [eax - 0x18]; 
0x000a0d9a: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0015fd0a: in eax, 0x5b; pop esi; pop edi; ret; 
0x00165c8c: in eax, 0x61; stc; call dword ptr [eax + 0x6a]; 
0x00079418: in eax, 0x78; cli; jmp dword ptr [esi - 0x70]; 
0x000b6527: in eax, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019d3f2: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00160792: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00094029: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000a4ea6: in eax, 0x83; ret; 
0x000b4cea: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000b4a9a: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0016cc12: in eax, 0x89; ret; 
0x00165c37: in eax, 0xb3; cld; jmp dword ptr [esi - 0x70]; 
0x0009a62d: in eax, 0xe8; push esi; inc ecx; jle 0x9a644; cmovne eax, edx; ret; 
0x00161b9f: in eax, 0xeb; dec dword ptr [ecx - 0x763e7606]; ret; 
0x0010133b: in eax, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000c8c23: in eax, 0xf; je 0xc8c40; add eax, 2; ret; 
0x00156dec: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000eb9c6: in eax, 0xff; add esi, dword ptr [ecx + esi - 0xa]; ret 0x7404; 
0x00040906: in eax, 0xff; call dword ptr [eax + 0x6a]; 
0x000c716d: in eax, 0xff; dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0005e5be: in eax, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005f612: in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5a34b]; jmp dword ptr [ebp - 0x77]; 
0x0005f5fe: in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000c018f: in eax, 0xff; dec dword ptr [ebx - 0x7ab3dbbc]; ror byte ptr [edi], 0x84; ret 0xffea; 
0x0005e21b: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x000213c6: in eax, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000b4fad: in eax, 2; lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x0009af2d: in eax, 2; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b29d: in eax, 2; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b21d: in eax, 2; lea edx, [edx - 0x9a9b0]; cmovne eax, edx; ret; 
0x0009b25d: in eax, 2; lea edx, [edx - 0x9ce90]; cmovne eax, edx; ret; 
0x0009b1dd: in eax, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009a43d: in eax, 2; lea edx, [edx - 0x9e8b0]; cmovne eax, edx; ret; 
0x00099fcd: in eax, 2; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0018f976: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x0018e4cf: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x00029c41: in eax, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + 0x70], cl; stc; call dword ptr [eax - 0x18]; 
0x00026e70: in eax, dx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x70], ecx; stc; call dword ptr [eax - 0x18]; 
0x000ee044: in eax, dx; add dword ptr [ebx - 0x7603e7bc], ecx; ret; 
0x000b3057: in eax, dx; add eax, ecx; pop edi; ret; 
0x00121072: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x000fadb1: in eax, dx; call dword ptr [eax + 0x6a]; 
0x000fbc4a: in eax, dx; call dword ptr [eax - 0x73]; 
0x000fbd03: in eax, dx; call dword ptr [edx + 0x6a]; 
0x0008172b: in eax, dx; cli; call dword ptr [eax + 0x6a]; 
0x00159825: in eax, dx; cli; dec dword ptr [ecx + 0x24448bc7]; sbb byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x00122e7e: in eax, dx; cmc; jmp dword ptr [ebp - 0x75]; 
0x0015163d: in eax, dx; dec dword ptr [ebp - 0x650ef7b]; call dword ptr [eax - 0x73]; 
0x001173af: in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x00161795: in eax, dx; in al, dx; call dword ptr [eax - 0x73]; 
0x0015c559: in eax, dx; inc dword ptr [ebx - 0x72afef3c]; xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0014aa80: in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x00099524: in eax, dx; jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0016830f: in eax, dx; mov dword ptr [0xc483fff1], eax; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x000a0c82: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0de2: in eax, dx; mov eax, edx; pop ebx; ret; 
0x0009ea13: in eax, dx; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0012f352: in eax, dx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00177902: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001772b2: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00096701: in eax, dx; or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x0011d389: in eax, dx; or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11d3e5; stc; call dword ptr [eax + 0x57]; 
0x0018e5cb: in eax, dx; or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000e7dfa: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00050ac2: in eax, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00050b31: in eax, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689bb79]; call dword ptr [eax - 0x73]; 
0x0015227b: in eax, dx; std; jmp dword ptr [esi - 0x70]; 
0x001092df: in eax, dx; xor ecx, 0xffffffff; ret; 
0x000825c2: inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d1a: inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x80], eax; ret; 
0x00081c53: inc byte ptr [eax + eax]; add byte ptr [eax], al; ret; 
0x00081d43: inc byte ptr [eax + eax]; add byte ptr [ebx + 0x47401f8], al; ret; 
0x000825e7: inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0012137b: inc byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00049552: inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x0011bbc3: inc byte ptr [ebx - 0x7401fba0]; inc ecx; add al, 0x89; ret 0xe083; 
0x0003b60e: inc byte ptr [ecx]; add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0008a149: inc byte ptr [ecx]; ret; 
0x0006a03c: inc byte ptr [edx]; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x001463d8: inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x00176878: inc dword ptr [0xaf787]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00176748: inc dword ptr [0xaf8b7]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174818: inc dword ptr [0xb17e7]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001747e8: inc dword ptr [0xb1817]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174798: inc dword ptr [0xb1867]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174768: inc dword ptr [0xb1897]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174738: inc dword ptr [0xb18c7]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00174708: inc dword ptr [0xb18f7]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000e9a1f: inc dword ptr [bp + di + 0x2cc4]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115cc6: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d66: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d9396: inc dword ptr [eax + 0x2c740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000de0bb: inc dword ptr [eax + 0x2f740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de16b: inc dword ptr [eax + 0x2f740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ddd52: inc dword ptr [eax + 0x30740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf2: inc dword ptr [eax + 0x30740038]; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00115e12: inc dword ptr [eax + 0x30740038]; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee2: inc dword ptr [eax + 0x30740038]; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000a5a1e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a59c8: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0009b29b: inc dword ptr [eax - 0x6d72fd1b]; adc byte ptr [esi - 0xa], 0xff; cmovne eax, edx; ret; 
0x0009b1db: inc dword ptr [eax - 0x6d72fd1b]; inc eax; xor esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009b25b: inc dword ptr [eax - 0x6d72fd1b]; jo 0x9b294; idiv bh; cmovne eax, edx; ret; 
0x0009af2b: inc dword ptr [eax - 0x6d72fd1b]; mov al, 0xa5; idiv bh; cmovne eax, edx; ret; 
0x0009a43b: inc dword ptr [eax - 0x6d72fd1b]; push eax; pop ss; idiv bh; cmovne eax, edx; ret; 
0x0009b21b: inc dword ptr [eax - 0x6d72fd1b]; push eax; push esi; idiv bh; cmovne eax, edx; ret; 
0x0005cea3: inc dword ptr [eax - 0x7af0ffc1]; ret; 
0x0005422e: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi + 0x75]; 
0x00053eeb: inc dword ptr [eax - 0xcf43]; jmp dword ptr [edi - 0x75]; 
0x000fb7c8: inc dword ptr [eax]; add al, 0; add byte ptr [ecx], cl; ret 0x840f; 
0x00066e75: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x0005c824: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000fd6e6: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x6fb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000501ce: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c4c6e: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x8589; 
0x000e066b: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x0005015b: inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret; 
0x001213e7: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019285c: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00035a2c: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed1b56; or eax, ecx; ret; 
0x000de5d8: inc dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xc35b; 
0x0018cdbc: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x001887b8: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00093687: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x000e97b9: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x000b375f: inc dword ptr [eax]; je 0xb3764; inc eax; pop edi; ret; 
0x000b3903: inc dword ptr [eax]; je 0xb3908; inc eax; pop edi; pop esi; ret; 
0x000a0aa2: inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0013110b: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001310e3: inc dword ptr [eax]; ret; 
0x0005edf6: inc dword ptr [ebp + 0x20850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000a518c: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a516c: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000cddd7: inc dword ptr [ebp + 0x50840fc0]; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x000c71f3: inc dword ptr [ebp + 0x7f8e0fc0]; add al, 0; add byte ptr [ebx - 0x362343], al; call dword ptr [ecx + 0xf]; 
0x000a51ac: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ec9a4: inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x001179b3: inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0005d03c: inc dword ptr [ebp - 0x227bf040]; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x00027f67: inc dword ptr [ebp - 0x327af00a]; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x000512d8: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x00056e41: inc dword ptr [ebp - 0x3c7af00a]; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x0004fa67: inc dword ptr [ebp - 0x3e70f040]; out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00162aa5: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x000f6ab6: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x00047d02: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x0015c8c6: inc dword ptr [ebp - 0x5e7af040]; add byte ptr [eax], al; add byte ptr [ebx - 0xaf7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0010d95e: inc dword ptr [ebp - 0x6d7bf040]; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x00050373: inc dword ptr [ebp - 0x7071f040]; add al, 0; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00157b9a: inc dword ptr [ebp - 0x74228b40]; inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0014be72: inc dword ptr [ebp - 0x74768b40]; push ebp; mov word ptr [ebp - 0x652637e], cs; call dword ptr [eax - 0x73]; 
0x0005ad20: inc dword ptr [ebp - 0x74878a37]; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0016cc0e: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0013b86d: inc dword ptr [ebp - 0x76a98740]; ret; 
0x0007a9eb: inc dword ptr [ebp - 0x76cf8b40]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0002cbe6: inc dword ptr [ebp - 0x76f58b2e]; inc esp; and al, 0xc; call edx; 
0x0004fe5d: inc dword ptr [ebp - 0x7ad18a40]; test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x00058907: inc dword ptr [ebp - 0x7cbb8b40]; in al, dx; add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; 
0x00057936: inc dword ptr [ebp - 0x7cc38b40]; in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x0005e7a7: inc dword ptr [ebp - 0x7f7bf040]; mov eax, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0014da4e: inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00118a25: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0004de95: inc dword ptr [ebx + 0x440ffff8]; ret 0x8589; 
0x000c5764: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000d766c: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873ba: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x001606ce: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0013c2d9: inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x001575c4: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x0012cca2: inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x000c7878: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x00050a13: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0013d85d: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x000b50a0: inc dword ptr [ebx + 0x48d14c4]; cwde; pop ebx; pop esi; ret; 
0x001145a1: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00053345: inc dword ptr [ebx + 0x535704ec]; push dword ptr [ebp - 0x88]; call eax; 
0x00130c5a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cca: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d7b: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x00085973: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b623: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba83: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf7f: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3cf: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x001171c4: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x00170bae: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x000c9b13: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d3567: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bf7: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x0015edb4: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x000ee84d: inc dword ptr [ebx + 0x5d3b01c3]; add al, 0x7c; ret 0xb48d; 
0x0015f94d: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000a0ec5: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x000fdde4: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00142f7d: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; pop ebp; ret; 
0x00078671: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0002c6f7: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001628ed: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00077db9: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012fdf6: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000e9a21: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00143040: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x000d68f4: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000d2518: inc dword ptr [ebx + 0x5fb82dfb]; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x00119c1e: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x000ddc39: inc dword ptr [ebx + 0x66c31cc4]; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000d5aa8: inc dword ptr [ebx + 0x6a5004ec]; xor byte ptr [ecx - 0x17], dl; ret 0xffe5; 
0x000d34e9: inc dword ptr [ebx + 0x73e910c4]; idiv edi; call dword ptr [ecx + 0x50]; 
0x0011c270: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3b2: inc dword ptr [ebx + 0x8b10c4]; test eax, eax; je 0x11c458; call eax; 
0x000f3905: inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x0004994c: inc dword ptr [ebx + 0xf01243c]; xchg esp, eax; ret; 
0x0014481b: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00144847: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00144873: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0013828f: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00169ce6: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x00156e0c: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00099ef7: inc dword ptr [ebx - 0x16a4e73c]; pmaxub mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0002cde7: inc dword ptr [ebx - 0x17aaf314]; call ebx; 
0x00139dcf: inc dword ptr [ebx - 0x17acf314]; out 0x15, eax; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x000c14f2: inc dword ptr [ebx - 0x19160031]; idiv bh; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x0009737d: inc dword ptr [ebx - 0x1b46f314]; adc al, byte ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], ch; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0008acfc: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffe3084; inc dword ptr [ebx - 0x7a72f314]; jo 0x8ad8e; stc; call dword ptr [eax - 0x18]; 
0x0008b511: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffef284; inc dword ptr [ebx - 0x7872f314]; jo 0x8b5a3; stc; call dword ptr [eax - 0x18]; 
0x00082e6a: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xfffef584; inc dword ptr [ebx - 0x7872f314]; jo 0x82efc; stc; call dword ptr [eax - 0x18]; 
0x0008bc3d: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff2084; inc dword ptr [ebx - 0x7872f314]; jo 0x8bccf; stc; call dword ptr [eax - 0x18]; 
0x0008be4d: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff2584; inc dword ptr [ebx - 0x7872f314]; jo 0x8bedf; stc; call dword ptr [eax - 0x18]; 
0x00090dc6: inc dword ptr [ebx - 0x1f7ce940]; test dword ptr [edi], 0xffff6d84; inc dword ptr [ebx - 0x7a72f314]; jo 0x90e58; stc; call dword ptr [eax - 0x18]; 
0x0009d22d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0016e60e: inc dword ptr [ebx - 0x247aef3c]; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x00021c2a: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x0011a3aa: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0014ac66: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00117428: inc dword ptr [ebx - 0x2776ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000c97b9: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x0004f5eb: inc dword ptr [ebx - 0x2d7c0040]; call dword ptr [edx - 0x75]; 
0x000c5fba: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001637b8: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000f996f: inc dword ptr [ebx - 0x328a2508]; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0011fc6f: inc dword ptr [ebx - 0x338a2508]; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d5ae2: inc dword ptr [ebx - 0x3616ef3c]; jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x000c6b5a: inc dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x000c68f5: inc dword ptr [ebx - 0x36237b]; jmp dword ptr [eax]; 
0x0004f817: inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0004f606: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x0004dc89: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c767a: inc dword ptr [ebx - 0x36477b]; jmp eax; 
0x0005080a: inc dword ptr [ebx - 0x364f7b]; jmp eax; 
0x0007f739: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000945a3: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x000341c7: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00117d03: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00080a12: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x000f8c28: inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x00103167: inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0012ff3f: inc dword ptr [ebx - 0x3f7aef3c]; je 0x12ff50; add esp, 8; pop ebx; ret; 
0x000dc7d3: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xdc7e0; add esp, 8; pop ebx; ret; 
0x00122b40: inc dword ptr [ebx - 0x3f7aef3c]; js 0x122b50; add esp, 8; pop ebx; ret; 
0x0014cd5e: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x0012aa1f: inc dword ptr [ebx - 0x3f7cef3c]; sbb al, 0x89; loope 0x12a9b2; ret 0x25; 
0x000832ad: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0007aa87: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x000871d0: inc dword ptr [ebx - 0x3fceef3c]; add esp, 0xc; ret; 
0x0003502e: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000ebd3a: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x000f9a51: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000ebd27: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x00090e01: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x0004f201: inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00066eb7: inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0012bf1e: inc dword ptr [ebx - 0x4b00f314]; and al, 0x10; add dword ptr [eax], eax; add al, ch; ret 0xf0e2; 
0x000b959c: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x0006bbf1: inc dword ptr [ebx - 0x6274fb14]; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x000c77ad: inc dword ptr [ebx - 0x6274fb14]; ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x0014489a: inc dword ptr [ebx - 0x6472f314]; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000de2be: inc dword ptr [ebx - 0x6772f714]; dec eax; dec ecx; stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0008df22: inc dword ptr [ebx - 0x69f00208]; ret; 
0x00067449: inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00067357: inc dword ptr [ebx - 0x6a77fb14]; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x0011f2e6: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0011f2a5: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000602b1: inc dword ptr [ebx - 0x6bf0d808]; ret 0xf883; 
0x00138a2a: inc dword ptr [ebx - 0x6c72f714]; js 0x138a89; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0009b058: inc dword ptr [ebx - 0x6d72fe1d]; and al, dl; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0012f1f8: inc dword ptr [ebx - 0x6d72fe1d]; jo 0x12f27c; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009af78: inc dword ptr [ebx - 0x6d72fe1d]; nop; jl 0x9af76; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b368: inc dword ptr [ebx - 0x6d72fe1d]; push eax; cmp al, 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009b008: inc dword ptr [ebx - 0x6d72fe1d]; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0012f1a8: inc dword ptr [ebx - 0x6d72fe1d]; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x000664b5: inc dword ptr [ebx - 0x7276fb14]; xchg esp, eax; idiv edi; call dword ptr [ecx + 0x6a]; 
0x000de515: inc dword ptr [ebx - 0x72acf714]; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0012e6c8: inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x0015c55a: inc dword ptr [ebx - 0x72afef3c]; xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0015ccaf: inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00099277: inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0005891d: inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x001375ab: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00124add: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [ecx], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0012bef0: inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0011c121: inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00119797: inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x00127449: inc dword ptr [ebx - 0x72affb14]; xchg dword ptr [edi + 0x56], esp; stc; call dword ptr [eax + 0x53]; 
0x001747d1: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0015979a: inc dword ptr [ebx - 0x749aeb3c]; xor edi, edi; je 0x1597c8; adc byte ptr [ecx - 0x59b1739], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x00140588: inc dword ptr [ebx - 0x74a9f314]; push esp; and al, 0x20; call edx; 
0x0015c4d1: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0012ee08: inc dword ptr [ebx - 0x74aff314]; inc ebp; mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00078c1c: inc dword ptr [ebx - 0x7620c39a]; ret; 
0x000d9afe: inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00070f4a: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0015b0ef: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00163822: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0016e7e5: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00153f04: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x00137444: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x0012197f: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x00082e76: inc dword ptr [ebx - 0x7872f314]; jo 0x82efc; stc; call dword ptr [eax - 0x18]; 
0x0008a80a: inc dword ptr [ebx - 0x7872f314]; jo 0x8a890; stc; call dword ptr [eax - 0x18]; 
0x0008b51d: inc dword ptr [ebx - 0x7872f314]; jo 0x8b5a3; stc; call dword ptr [eax - 0x18]; 
0x0008bc49: inc dword ptr [ebx - 0x7872f314]; jo 0x8bccf; stc; call dword ptr [eax - 0x18]; 
0x0008be59: inc dword ptr [ebx - 0x7872f314]; jo 0x8bedf; stc; call dword ptr [eax - 0x18]; 
0x00165073: inc dword ptr [ebx - 0x7872f314]; pop di; stc; call dword ptr [eax - 0x18]; 
0x00057f56: inc dword ptr [ebx - 0x7872f314]; test byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x00145180: inc dword ptr [ebx - 0x7872f714]; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x000c59e2: inc dword ptr [ebx - 0x78f0f608]; movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00138381: inc dword ptr [ebx - 0x7972f314]; out 0x5b, eax; stc; call dword ptr [eax - 0x18]; 
0x001083f9: inc dword ptr [ebx - 0x7972f314]; push esp; lahf; stc; call dword ptr [eax - 0x18]; 
0x00119140: inc dword ptr [ebx - 0x7972f714]; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x00070ed7: inc dword ptr [ebx - 0x7976eb3c]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi - 0x18], dl; stc; ret 0; 
0x0008a018: inc dword ptr [ebx - 0x7a72f314]; jo 0x8a09e; stc; call dword ptr [eax - 0x18]; 
0x0008ad08: inc dword ptr [ebx - 0x7a72f314]; jo 0x8ad8e; stc; call dword ptr [eax - 0x18]; 
0x00090dd2: inc dword ptr [ebx - 0x7a72f314]; jo 0x90e58; stc; call dword ptr [eax - 0x18]; 
0x00058ad9: inc dword ptr [ebx - 0x7a72fb14]; inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x00066fcc: inc dword ptr [ebx - 0x7a72fb14]; pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x0005e1a1: inc dword ptr [ebx - 0x7af00008]; scasd eax, dword ptr es:[edi]; or al, byte ptr [eax]; add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0016e215: inc dword ptr [ebx - 0x7af09f1e]; call 0x8416cd50; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0005f5f7: inc dword ptr [ebx - 0x7af0fe40]; out dx, eax; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x00061eb4: inc dword ptr [ebx - 0x7bf00001]; ret 0xffdf; 
0x000ef54b: inc dword ptr [ebx - 0x7bf00008]; ret; 
0x0010815f: inc dword ptr [ebx - 0x7c72f314]; in al, 0x9e; stc; call dword ptr [eax - 0x18]; 
0x0010b4be: inc dword ptr [ebx - 0x7c72f314]; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00034e14: inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x001082af: inc dword ptr [ebx - 0x7c72f314]; sbb al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x000c34aa: inc dword ptr [ebx - 0x7c72f314]; sub al, 0x98; stc; call dword ptr [eax - 0x18]; 
0x00094294: inc dword ptr [ebx - 0x7c72f33c]; inc eax; aad 0xe6; call dword ptr [eax + 0x56]; 
0x00094282: inc dword ptr [ebx - 0x7c72f33c]; rcl ch, 0xe6; call dword ptr [eax + 0x56]; 
0x00094300: inc dword ptr [ebx - 0x7c72f33c]; rcl dh, 0xe6; call dword ptr [eax + 0x56]; 
0x000ea0b2: inc dword ptr [ebx - 0x7c72f714]; bound ecx, qword ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000cc6d5: inc dword ptr [ebx - 0x7c72f714]; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x000e9f29: inc dword ptr [ebx - 0x7c72f714]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000e9d95: inc dword ptr [ebx - 0x7c72f714]; dec edx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000ea052: inc dword ptr [ebx - 0x7c72f714]; inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000e9f82: inc dword ptr [ebx - 0x7c72f714]; outsd dx, dword ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000e9ffc: inc dword ptr [ebx - 0x7c72f714]; pop esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x001649bf: inc dword ptr [ebx - 0x7cef3c]; push dword ptr [edi + edx - 0x75]; jnp 0x41a1ea24; or byte ptr [ecx], bh; ret 0x2c75; 
0x000cddbc: inc dword ptr [ebx - 0x7e72f714]; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x000e1035: inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x001739ed: inc dword ptr [ebx - 0x7f72f314]; int1; inc edi; stc; call dword ptr [eax - 0x18]; ret; 
0x000de374: inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax + 0x53]; 
0x000de3d1: inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x00084e8f: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00084bdf: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0013caf6: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x0007124d: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x0008fd5d: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x00072862: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0012f2dc: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x00130f3c: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x00192951: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0003b3bb: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, edx; ret; 
0x0011727b: inc dword ptr [ebx]; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00136e34: inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0019d619: inc dword ptr [ecx + 0x889e6c3]; add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x85000042]; sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x0019d34b: inc dword ptr [ecx + 0x88cb4c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0018f859: inc dword ptr [ecx + 0x967a6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018f359: inc dword ptr [ecx + 0x96ca6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018b659: inc dword ptr [ecx + 0x9a9a6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00189149: inc dword ptr [ecx + 0x9ceb6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0016f737: inc dword ptr [ecx + 0xb68c8c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0006c374: inc dword ptr [ecx]; add byte ptr [eax], al; add bh, al; test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x0003b5dd: inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00192941: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000b3016: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000b3053: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0010067d: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000343fe: inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0009a9ea: inc dword ptr [ecx]; fnstcw word ptr [ecx]; ret 0x3376; 
0x0003466a: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000f4b51: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00120737: inc dword ptr [ecx]; je 0x120770; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b7: inc dword ptr [ecx]; je 0x1208f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00164bb7: inc dword ptr [ecx]; ret 0x858b; 
0x00033ab7: inc dword ptr [ecx]; ret 0xd089; 
0x0002e17f: inc dword ptr [ecx]; ret 0xd139; 
0x0005b34e: inc dword ptr [ecx]; ret 0xd801; 
0x0005adf8: inc dword ptr [ecx]; ret 0xf001; 
0x0005b4e4: inc dword ptr [ecx]; ret; 
0x000b48b7: inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00033577: inc dword ptr [ecx]; sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x00192961: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00195624: inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x0009429a: inc eax; aad 0xe6; call dword ptr [eax + 0x56]; 
0x00093f8a: inc eax; adc al, 0x89; dec eax; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001633b9: inc eax; adc al, 4; mov eax, 1; ret; 
0x0007f41d: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00193dac: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000776b4: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x00081050: inc eax; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000fc5ca: inc eax; add al, 0x3c; jg 0xfc5de; inc esp; ret 0x8589; 
0x0011d0af: inc eax; add al, 0x5b; ret; 
0x00193eba: inc eax; add al, 0x5f; ret; 
0x00162031: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00023391: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x0014af31: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0016a665: inc eax; add al, 0x89; ret; 
0x0008fe65: inc eax; add al, 0xe8; sub eax, 0x81000de6; ret; 
0x000ddc65: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000de776: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000de70d: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x001267a5: inc eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x0002faa1: inc eax; add byte ptr [eax], al; ret; 
0x0010f4c4: inc eax; add ch, bl; ret; 
0x0006db32: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006ea63: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00103ec9: inc eax; add dword ptr [ecx + 0x7de82404], ecx; ret 0xfff1; 
0x0019561e: inc eax; add eax, 0xff250000; inc dword ptr [edi]; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x000b2f55: inc eax; add edx, eax; jl 0xb2f90; add eax, ecx; ret; 
0x000b4468: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x0013dd03: inc eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00143da3: inc eax; add esp, 0x118; pop ebx; ret; 
0x000dc73f: inc eax; add esp, 0x18; pop ebx; ret; 
0x00075501: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00081d3f: inc eax; and al, 0x65; mov byte ptr [0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x0011cd5a: inc eax; and al, 0x85; ror byte ptr [edi], 0x44; ret 0x66c3; 
0x000cdaa7: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3dd08a], cl; add byte ptr [ebp - 0x15c3df6e], cl; call dword ptr [ecx + 0x52]; 
0x0002167b: inc eax; call dword ptr [ebp]; 
0x0007efb7: inc eax; call dword ptr [esi + 0xc]; 
0x00021618: inc eax; call eax; 
0x0017b3eb: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d41b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001848cb: inc eax; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001848e4: inc eax; cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0012a977: inc eax; cmovne eax, edx; pop ebx; ret; 
0x0002fe5d: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000b46b3: inc eax; cmp cl, 0; je 0xb46ba; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0013966c: inc eax; dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x0012529e: inc eax; dec esp; call 0x125170; add esp, 4; ret; 
0x0016e049: inc eax; dec esp; ret; 
0x00066ea8: inc eax; idiv edi; call dword ptr [eax - 0x18]; 
0x00066703: inc eax; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x000a52dc: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0015c0d1: inc eax; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0007f738: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000b4467: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000b4466: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000ccde8: inc eax; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0011d039: inc eax; inc esp; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011d0d1: inc eax; inc esp; pop ebx; ret; 
0x000888ee: inc eax; insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x0013a1d8: inc eax; int1; call dword ptr [eax - 0x18]; 
0x000a14f7: inc eax; ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1527: inc eax; ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0011d535: inc eax; jl 0x11d4c1; push esi; add al, 0x89; ret 0xe8c1; 
0x0011d6d9: inc eax; jl 0x11d665; push esi; add al, 0x89; ret 0xe8c1; 
0x0011d899: inc eax; jl 0x11d825; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dae5: inc eax; jl 0x11da71; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dc04: inc eax; jl 0x11db90; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dd0b: inc eax; jl 0x11dc97; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dd6b: inc eax; jl 0x11dcf7; push esi; add al, 0x89; ret 0xe8c1; 
0x0011e1dd: inc eax; jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x0014f722: inc eax; jl 0x14f725; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x001298f1: inc eax; jmp dword ptr [eax]; 
0x0017b57e: inc eax; jmp dword ptr [esi - 0x77]; 
0x0018767d: inc eax; jne 0x1876f0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00191efc: inc eax; jne 0x191f64; add eax, 7; ret; 
0x00191f3c: inc eax; jne 0x191f84; add eax, 0xf; ret; 
0x00192215: inc eax; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x00192268: inc eax; jne 0x192350; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192189: inc eax; jne 0x192360; lea eax, [edi + 0xf]; pop edi; ret; 
0x001920e6: inc eax; jne 0x192360; lea eax, [edi + 7]; pop edi; ret; 
0x00192bd1: inc eax; jne 0x192d00; lea eax, [edi + 7]; pop edi; ret; 
0x00192c24: inc eax; jne 0x192d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x00193259: inc eax; jne 0x193300; test al, 0x20; jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x001938c1: inc eax; jne 0x193970; lea eax, [edx + 7]; ret; 
0x00193914: inc eax; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x00193cf4: inc eax; jne 0x1940a9; add eax, 7; pop edi; ret; 
0x00193d44: inc eax; jne 0x1940d1; add eax, 0xf; pop edi; ret; 
0x00086ab0: inc eax; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00092455: inc eax; jne 0x92478; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001142cd: inc eax; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014aeee: inc eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0009a049: inc eax; mov bh, 0xe7; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00155825: inc eax; mov dword ptr [0xc0850000], eax; je 0x155838; add esp, 8; pop ebx; ret; 
0x000da7f9: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x0012235c: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d3: inc eax; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00083125: inc eax; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000b2575: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001553ec: inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x001081af: inc eax; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015ef7b: inc eax; mov edi, 0x6afff3; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00092914: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092674: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000928a0: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092604: inc eax; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000926b8: inc eax; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00092708: inc eax; mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0010777d: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012c90e: inc eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x0012e98e: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00193f16: inc eax; or al, 0x5f; ret; 
0x00077b8c: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000937c4: inc eax; or al, 0x83; ret; 
0x000904f8: inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0012ce70: inc eax; or al, 0x89; ret; 
0x000818ba: inc eax; or bh, bh; je 0x818e3; xor byte ptr [edx + 0x51], dl; call eax; 
0x00113f09: inc eax; or byte ptr [0x100f], ah; ret; 
0x000512ed: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x000825e3: inc eax; or byte ptr [ebp - 0x5e], ah; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0008375d: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000ef6ba: inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0012e9d4: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0014a62e: inc eax; or byte ptr [ecx], al; je 0x14a656; add esp, 0xc; ret; 
0x000837fd: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000aab6c: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0011d3bf: inc eax; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x00074b43: inc eax; out 0xff, al; call dword ptr [eax - 0x73]; 
0x0002ec6a: inc eax; pop eax; ret; 
0x000b4100: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x00035b93: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x001134fc: inc eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035b21: inc eax; pop ebx; pop esi; pop edi; ret; 
0x000accc3: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000b3907: inc eax; pop edi; pop esi; ret; 
0x0009ccac: inc eax; pop edi; ret; 
0x00193e25: inc eax; pop es; pop edi; ret; 
0x00102e8d: inc eax; pop es; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0016e079: inc eax; pop esp; ret; 
0x00193f36: inc eax; push cs; pop edi; ret; 
0x000c3c97: inc eax; push dword ptr [eax]; call esi; 
0x0012a024: inc eax; push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000b5291: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x00076d27: inc eax; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x0016e069: inc eax; push eax; ret; 
0x000b5b22: inc eax; push edi; call esi; 
0x000f1914: inc eax; push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x00193ed6: inc eax; push es; pop edi; ret; 
0x0016e0f9: inc eax; push esp; ret; 
0x0002f67e: inc eax; ret; 
0x00081c85: inc eax; sbb al, 0x65; mov dword ptr [0x80], eax; ret; 
0x0012e9bc: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x000814b8: inc eax; sbb al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000fbc11: inc eax; sbb al, 0x83; ret 0x8501; 
0x0015d6c9: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00155038: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001568be: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x00030b83: inc eax; sbb al, 0x89; ret 0x25; 
0x00126c97: inc eax; sbb al, dh; call dword ptr [eax - 0x18]; 
0x00144d9d: inc eax; sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x0012b993: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0012c9ca: inc eax; sbb byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x00035a4d: inc eax; shr eax, 0x1f; ret; 
0x000facac: inc eax; stc; call dword ptr [eax + 0x53]; 
0x00090439: inc eax; stc; call dword ptr [eax - 0x18]; 
0x00090432: inc eax; stc; call dword ptr [eax - 0x73]; 
0x00093a50: inc eax; stc; jmp dword ptr [ebp - 0x5f]; 
0x0015add5: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x0002fc6e: inc eax; sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x000b46b9: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x0004a555: inc eax; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0002dc9d: inc eax; test bh, dh; call dword ptr [esi - 1]; 
0x000b375a: inc eax; test ecx, 0xff0000; je 0xb3764; inc eax; pop edi; ret; 
0x0003aa29: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0002fe1d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fdfd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fddd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fd5d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fd9d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002fcfd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fd7d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fd3d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fcbd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fd1d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fdbd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fcdd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0002fc3e: inc eax; xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00160ee5: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000e92c5: inc eax; xor byte ptr [ecx], bh; ret; 
0x00083bb3: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0008b12a: inc eax; xor eax, eax; ret; 
0x0012f228: inc eax; xor ebp, esi; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009b1e1: inc eax; xor esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00146803: inc ebp; aam 0x85; ror byte ptr [edi], 0x84; ret; 
0x0007a75a: inc ebp; aam 0x89; ret 0xf889; 
0x00166254: inc ebp; adc al, 0x39; ret 0x870f; 
0x0010ac31: inc ebp; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af7a: inc ebp; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af09: inc ebp; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000b5564: inc ebp; adc al, 0x85; ror byte ptr [edi], 0x84; ret 0; 
0x001647fc: inc ebp; adc al, 0x89; push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0013ed4a: inc ebp; adc al, 0x89; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x001193e8: inc ebp; adc byte ptr [ebx - 0x13362], cl; dec dword ptr [ecx - 0xab7b]; jmp dword ptr [ebp - 0x5f]; 
0x0013862e: inc ebp; adc byte ptr [ecx - 0x4977b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0016730f: inc ebp; adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0016ca61: inc ebp; adc byte ptr [esi*2 - 0x5f7d72e8], al; pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x0011e837: inc ebp; adc cl, dh; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x000ec5ba: inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x000d15cc: inc ebp; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0015529a: inc ebp; add byte ptr [ebx + 0x508b08ec], al; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00039081: inc ebp; add byte ptr [ebx - 0x3a7cfe11], al; add al, 0x89; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x000cfa76: inc ebp; add byte ptr [ebx - 0x76f3db8c], cl; ret 0x44f6; 
0x00166251: inc ebp; add byte ptr [ebx], 0x45; adc al, 0x39; ret 0x870f; 
0x00155401: inc ebp; add byte ptr [ecx - 0x137cdbec], cl; or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x000414a7: inc ebp; add byte ptr [ecx - 0x76dbdbbc], cl; ret 0xe283; 
0x00114197: inc ebp; add byte ptr [ecx - 0x76f3dbbc], cl; clc; call dword ptr gs:[0x10]; 
0x0012b1d1: inc ebp; add byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x000f8304: inc ebp; add dh, dh; ret; 
0x00191f3e: inc ebp; add eax, 0xf; ret; 
0x0007c2cf: inc ebp; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x000f4d0f: inc ebp; and byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00084907: inc ebp; and byte ptr [ecx + 0x247c8bc1], cl; add al, 0x89; ret 0xe183; 
0x00141e4a: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00034ef7: inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x0015dc93: inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x0015dc27: inc ebp; cmp al, 0xff; jne 0x15dc7c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0007de3c: inc ebp; fadd dword ptr [ebx - 0x95f714]; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0013e5fd: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0xab7b], cl; call dword ptr [eax + 0x6a]; 
0x0012c1a5: inc ebp; fadd qword ptr [ecx]; add byte ptr [eax], al; add byte ptr [ecx + 0x428be045], cl; or al, 0x89; ret; 
0x0016d93a: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x0005d768: inc ebp; fdivr st(7); inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x000717a9: inc ebp; fmul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000e81cb: inc ebp; fmul dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x00023eb0: inc ebp; fmul qword ptr [ebp - 0x20394f7d]; call dword ptr [eax - 0x73]; 
0x0013c241: inc ebp; fmul qword ptr [ecx + 0x458ba845]; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0016dc1e: inc ebp; les eax, ptr [ebx - 0x7f72f314]; je 0x16dc8d; stc; call dword ptr [eax - 0x18]; 
0x000309a0: inc ebp; les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00023936: inc ebp; les ecx, ptr [ebp - 0x6ba217d]; call dword ptr [eax - 1]; 
0x000a0656: inc ebp; les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0013c28b: inc ebp; les esp, ptr [ebp - 0x77]; push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00022f13: inc ebp; mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x0012e086: inc ebp; mov ah, 0x83; ret; 
0x00091237: inc ebp; mov ah, 0x89; ret 0x458b; 
0x0012e84a: inc ebp; mov ah, 0x89; ret; 
0x0013b9e6: inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x000860b6: inc ebp; mov al, 0x83; in al, dx; or al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x00091969: inc ebp; mov byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00165e44: inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x000cb1ba: inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x0012e56c: inc ebp; mov esp, 0; push 0x1000002; call edx; 
0x00076632: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x0002228f: inc ebp; mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x0012ee0e: inc ebp; mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x0013c2de: inc ebp; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0013c247: inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0014be53: inc ebp; mov word ptr [ebx - 0x13380], cs; jmp dword ptr [ebp - 0x39]; 
0x0016ae77: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x00160fdd: inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0014a25c: inc ebp; or al, 0x81; ret; 
0x0008b6a1: inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x00160fb4: inc ebp; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0007b1c0: inc ebp; or byte ptr [ebp - 0x1ab0ff7d], cl; call dword ptr [eax - 0x73]; 
0x0010de31: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x001484f2: inc ebp; or byte ptr [ecx - 0x76efdbac], cl; ret 0xeac1; 
0x0016133c: inc ebp; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0005312f: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x00052248: inc ebp; or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0010ab19: inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0010b3be: inc ebp; out dx, al; call dword ptr [ecx - 0x73]; 
0x0014b31d: inc ebp; out dx, al; dec dword ptr [ebp - 0x652db6b]; call dword ptr [edx - 0x73]; 
0x0014b349: inc ebp; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0018f2da: inc ebp; pop ebx; ret; 
0x001392cc: inc ebp; ret 0x4389; 
0x0009a851: inc ebp; ret 0x4401; 
0x0002709f: inc ebp; ret 0x4489; 
0x00074ed6: inc ebp; ret 0x4689; 
0x00049b12: inc ebp; ret 0x548b; 
0x000e949d: inc ebp; ret 0x5e5b; 
0x000832e2: inc ebp; ret 0x66c3; 
0x0007edc2: inc ebp; ret 0x689; 
0x000d5df3: inc ebp; ret 0x8dc3; 
0x00091737: inc ebp; ret 0x968b; 
0x0003e399: inc ebp; ret 0xb9eb; 
0x0011a5c4: inc ebp; ret 0xc084; 
0x000a06a3: inc ebp; ret 0xc289; 
0x0012a979: inc ebp; ret 0xc35b; 
0x00090534: inc ebp; ret 0xc3c3; 
0x0009dadc: inc ebp; ret 0xc483; 
0x0011f334: inc ebp; ret 0xd231; 
0x0016cba2: inc ebp; ret 0xe0c1; 
0x0007180c: inc ebp; ret 0xec83; 
0x0002607f: inc ebp; ret 0xf289; 
0x00043637: inc ebp; ret 0xfffe; 
0x00024cd7: inc ebp; ret; 
0x0009f276: inc ebp; rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x00151e24: inc ebp; rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00076a91: inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x0004b39d: inc ebp; rol byte ptr [ecx], 1; ret 0x458b; 
0x0012ea6e: inc ebp; ror byte ptr [edi], 1; xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x0007a6ee: inc ebp; salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000f628b: inc ebp; sbb al, 0x89; ret 0xeac0; 
0x00141e41: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00085c99: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d7799: inc ebp; sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00164805: inc ebp; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d8bfa: inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000cbd3a: inc ebp; stc; call dword ptr [eax + 0x56]; 
0x000cc2ca: inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000d9c1e: inc ebp; stc; call dword ptr [eax - 0x73]; 
0x0002393b: inc ebp; stc; call dword ptr [eax - 1]; 
0x000d98b5: inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x00047ed4: inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x000f5f2c: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010cb97: inc ebp; sub byte ptr [ebx - 0x6bf0fc07], al; ret; 
0x000f3e38: inc ebp; sub byte ptr [ecx - 0x170f7616], cl; sub eax, 0x89ffff40; ret 0xb60f; 
0x00065752: inc ebp; sub byte ptr [ecx - 0x8d36b], cl; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x0013c244: inc ebp; test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x00076741: inc ebp; test al, 0x8b; push ebp; les ecx, ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005454b: inc ebp; test byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0005464b: inc ebp; test byte ptr [ebx - 0xa343], cl; call dword ptr [edx + 0x6a]; 
0x0013c3a9: inc ebp; test byte ptr [ecx], al; ret 0x3883; 
0x0013f075: inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x000f5f41: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00086db7: inc ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x00079136: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x00129f38: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00156a24: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0007a666: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008a763: inc ebx; adc al, 0x83; ret; 
0x00149ee4: inc ebx; adc al, 0x89; ret 0xc985; 
0x00139296: inc ebx; adc al, 3; inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x00155284: inc ebx; adc bh, bh; je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x00157ba0: inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x00157b2a: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00139299: inc ebx; adc byte ptr [ecx], bh; ret 0x6273; 
0x0015537f: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0016bfbe: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00102673: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0014d9f4: inc ebx; add al, 0x50; call edi; 
0x00155a87: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015bab4: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00156087: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0009962a: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00156051: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00030782: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00155bae: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0002d6da: inc ebx; add al, 0x83; ret; 
0x000f47d9: inc ebx; add al, 0x89; ret 0xe283; 
0x0014b484: inc ebx; add al, 0x8d; xchg dword ptr [eax + 0x53], edx; bnd call dword ptr [ebx + 0x50]; 
0x001579dc: inc ebx; add al, 0xff; je 0x157a05; sbb al, 0x53; call dword ptr [eax]; 
0x00157a2c: inc ebx; add al, 0xff; je 0x157a55; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0013da82: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000e4754: inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00117528: inc ebx; add byte ptr [eax], al; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0019d716: inc ebx; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00025685: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x000dc860: inc ebx; add esp, 0x34; pop ebx; pop esi; ret; 
0x0002ec1b: inc ebx; and byte ptr [esi + 0x17], dh; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0009954e: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0x9957d; call eax; 
0x001900c0: inc ebx; bnd jmp dword ptr [esi - 0x70]; 
0x000eaa5f: inc ebx; cmp al, 0x8b; inc ebx; sbb al, 0x89; ret 0xc085; 
0x0012165e: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x001213fe: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x0010a50e: inc ebx; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x00109854: inc ebx; fimul dword ptr [ecx + 0x120245c]; ret; 
0x0006b465: inc ebx; idiv edi; jmp dword ptr [eax]; 
0x000fc4e1: inc ebx; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000d7a24: inc ebx; int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00048934: inc ebx; jmp dword ptr [eax]; 
0x00155378: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0012e044: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0012def6: inc ebx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0016aff1: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x000817fa: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00156aff: inc ebx; or al, 0x83; ret; 
0x0008fc31: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x0008862b: inc ebx; or al, 0x89; ret 0xe281; 
0x00160284: inc ebx; or bh, bh; je 0x1602ad; adc al, 0x53; call dword ptr [eax]; 
0x00160473: inc ebx; or bh, bh; je 0x16049c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00142247: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0008b34d: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x8b35d; call dword ptr [ebx]; 
0x00081349: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0007a660: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000816fd: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000e462c: inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00081361: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x001030a4: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0015a00d: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00024449: inc ebx; or byte ptr [edi], cl; mov bh, 0x87; aam 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x00041139: inc ebx; out 0xfe, eax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x001701d4: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0015d175: inc ebx; push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015d159: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0003b616: inc ebx; push es; pop ebx; ret; 
0x00079dbf: inc ebx; ret 0x1a; 
0x00035648: inc ebx; ret 0xec83; 
0x0016b921: inc ebx; ret 0xfa83; 
0x00049cbf: inc ebx; ret; 
0x000cc3ee: inc ebx; ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x000eaa80: inc ebx; sbb al, 0x83; ret 0x3901; 
0x0009b3f8: inc ebx; sbb al, 0x83; ret; 
0x000eaa62: inc ebx; sbb al, 0x89; ret 0xc085; 
0x001392ff: inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x00037135: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0007e8c3: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0014cd55: inc ebx; stc; call dword ptr [eax + 0x52]; 
0x0009a337: inc ebx; stc; call dword ptr [eax + 0x57]; 
0x00137e24: inc ebx; stc; call dword ptr [eax + 0x6a]; 
0x000b5696: inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000b61b5: inc ebx; stc; call dword ptr [eax - 0x18]; ret 0xf796; 
0x00099268: inc ebx; stc; call dword ptr [eax - 0x73]; 
0x0013adf3: inc ebx; stc; call dword ptr [eax - 1]; 
0x000991af: inc ebx; stc; call dword ptr [ebx + 0x50]; 
0x000a1470: inc ebx; stc; call dword ptr [ecx + 0x50]; 
0x0015cb70: inc ebx; stc; call dword ptr [esi + 0x57]; 
0x000995f7: inc ebx; sub byte ptr [ecx], al; jne 0x995d0; sub esp, 0xc; push eax; call edx; 
0x0007311d: inc ebx; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0011b1fc: inc ebx; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0013ddd9: inc ebx; xor bh, bh; dec dword ptr [ebp - 0x6579f79]; call dword ptr [eax - 0x73]; 
0x00075a1f: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0012106f: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00082dc2: inc ecx; adc al, 0x39; ret 0x1074; 
0x0008fec6: inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x0008fe4a: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x00162e1f: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 0x24]; 
0x001623af: inc ecx; add al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x000a7126: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7266: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000a2d46: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a2e76: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0002c00c: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0011bb01: inc ecx; add al, 0x89; ret 0xe083; 
0x000ef7c9: inc ecx; add al, 0x89; ret; 
0x000de866: inc ecx; add byte ptr [eax + esi + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00058d7e: inc ecx; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000ddf95: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000a2e47: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000b14fa: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000a2d27: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x00141aa5: inc ecx; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x00085d38: inc ecx; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c13179], cl; call dword ptr [eax - 0x73]; 
0x000e7e51: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000aba8b: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000b161e: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000a7145: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000a7275: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000a2e85: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000b1568: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000a2d55: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x0002e48e: inc ecx; and byte ptr [ecx], bh; ret 0x4d0f; 
0x0018f397: inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x00114d30: inc ecx; clc; pop ds; add esp, 8; pop ebx; ret; 
0x0005c7f9: inc ecx; fcos; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005823b: inc ecx; fld qword ptr [edi]; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x0008e016: inc ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00136e33: inc ecx; inc dword ptr [ecx + 0x200f9]; add byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0009be68: inc ecx; inc dword ptr [ecx]; ret; 
0x000defcb: inc ecx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000b43a2: inc ecx; inc edx; test al, al; jne 0xb439c; xor eax, eax; ret; 
0x00144f28: inc ecx; je 0x144f16; or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x000892db: inc ecx; jge 0x892e8; add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00099f44: inc ecx; jge 0x99f49; lea edx, [edx - 0x179290]; cmovne eax, edx; ret; 
0x0009a044: inc ecx; jge 0x9a049; lea edx, [edx - 0x1848c0]; cmovne eax, edx; ret; 
0x0009a3f4: inc ecx; jge 0x9a3f9; lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x0009a484: inc ecx; jge 0x9a489; lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x0009b144: inc ecx; jge 0x9b149; lea edx, [edx - 0x1804f0]; cmovne eax, edx; ret; 
0x0009b194: inc ecx; jge 0x9b199; lea edx, [edx - 0x17ec80]; cmovne eax, edx; ret; 
0x000b4a51: inc ecx; jge 0xb4a56; cmovne eax, edx; ret; 
0x0009a081: inc ecx; jle 0x9a094; cmovne eax, edx; ret; 
0x0009a501: inc ecx; jle 0x9a514; cmovne eax, edx; ret; 
0x0009a631: inc ecx; jle 0x9a644; cmovne eax, edx; ret; 
0x000944ce: inc ecx; jmp dword ptr [ecx]; 
0x000a24d9: inc ecx; jmp dword ptr [esi + 0xf]; 
0x0007a5a9: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0012e607: inc ecx; or al, 0x56; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x000aa50b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b159c: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000aa3ab: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000f35cb: inc ecx; or byte ptr [ebp + 0x390474c0], al; ret 0xd375; 
0x000c33fd: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0011ba32: inc ecx; or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x000aa56b: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b15fc: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000aa40b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x001649ce: inc ecx; or byte ptr [ecx], bh; ret 0x2c75; 
0x001642a0: inc ecx; or byte ptr [ecx], bh; ret 0x4a75; 
0x00165e6e: inc ecx; or byte ptr [ecx], bh; ret 0x4c75; 
0x000c3403: inc ecx; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x000ab95a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000aa31a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000aa5eb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000a7295: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a72f5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f05: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a72b6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2ec6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x001356ee: inc ecx; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00135872: inc ecx; pop edx; stc; call dword ptr [eax - 0x73]; 
0x000aba4b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000abbab: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aa3eb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000aa54b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000abacb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa46b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5cb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a72d5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a4dc7: inc ecx; pop es; pop ebx; ret; 
0x00193311: inc ecx; pop es; ret; 
0x00193361: inc ecx; push cs; ret; 
0x000abaab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa44b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a4db7: inc ecx; push es; pop ebx; ret; 
0x00193301: inc ecx; push es; ret; 
0x0014a7f8: inc ecx; pushal; stc; call dword ptr [eax - 0x18]; 
0x00129c40: inc ecx; sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x00081e1c: inc ecx; sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x00091efc: inc ecx; sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00093dcc: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x001579d7: inc ecx; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00058adf: inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x0008306e: inc ecx; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00129ad8: inc edi; adc al, 0x29; ret; 
0x00083148: inc edi; adc al, 0x39; ret 0x1074; 
0x000755ba: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000ac8df: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0003524d: inc edi; adc al, 0x89; ret; 
0x000660cd: inc edi; adc al, 0x8b; pop edi; sbb byte ptr [ecx], ch; ret; 
0x000ac8a1: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000ac869: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007571a: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0016c0ad: inc edi; adc byte ptr [esi - 0x3f], ah; call 0x1015fcb9; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000ac87f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ac8bf: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00093bdf: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0015f6f3: inc edi; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0015f701: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000ac705: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x001922c1: inc edi; add al, 0x5f; ret; 
0x00156de9: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0011ba35: inc edi; add al, 0x8b; inc ecx; add al, 0x89; ret; 
0x00090c83: inc edi; add al, 0x8d; adc dword ptr [eax - 0x55], -0x1a; call dword ptr [eax + 0x55]; 
0x0016dcc5: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00035284: inc edi; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x000ac6d7: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001638ff: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00047f58: inc edi; add dword ptr [ecx], edi; ret 0x860f; 
0x000ac6c5: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00119d08: inc edi; add eax, 0xf5c68100; ret 0x10; 
0x00168f4d: inc edi; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; clc; stc; call dword ptr [ecx - 0x77]; 
0x00092b08: inc edi; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000ac6ed: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0015359d: inc edi; add ecx, dword ptr [edi]; dec esi; ret 0xec83; 
0x00143f03: inc edi; add esp, 0x118; pop ebx; ret; 
0x00109408: inc edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e8deb: inc edi; and al, 0x39; ret; 
0x00026528: inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x000aca73: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ab3f3: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000b3122: inc edi; call ptr [esi + 0x5f]; pop ebp; ret; 
0x00192703: inc edi; clc; pop edi; ret; 
0x0019272c: inc edi; cld; pop edi; ret; 
0x001927a1: inc edi; cli; pop edi; ret; 
0x00192761: inc edi; cmc; pop edi; ret; 
0x001680ba: inc edi; fisttp word ptr [ebx]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x001926d9: inc edi; hlt; pop edi; ret; 
0x000507f6: inc edi; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000accc2: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x000f659a: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0013e9eb: inc edi; inc esp; ret; 
0x00192731: inc edi; int1; pop edi; ret; 
0x000c1535: inc edi; jecxz 0xc152e; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x000ac853: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00130da5: inc edi; mov esp, esi; jmp dword ptr [esi - 0x70]; 
0x000ac7ef: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x00192331: inc edi; or al, 0x5f; ret; 
0x000fd41b: inc edi; or al, 0x6a; and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x00108d60: inc edi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00089ac1: inc edi; or al, 0x89; ret; 
0x000fa051: inc edi; or al, 0xeb; ret 0x768d; 
0x000771a4: inc edi; or al, 1; ret 0xc101; 
0x000ac7b1: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001575c9: inc edi; or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x0015760c: inc edi; or byte ptr [ebp - 1], dl; jbe 0x15761e; push edi; call dword ptr [eax + 0x10]; 
0x0011b157: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000e0d40: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x00102427: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ac779: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac78f: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00099d2a: inc edi; or eax, 0xd3c38100; ret 0x18; 
0x000ac7cf: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000b6495: inc edi; pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000aca53: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x00194588: inc edi; pop edi; pop esi; pop ebx; ret; 
0x00192741: inc edi; pop edi; ret; 
0x000ac75b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x001920ee: inc edi; pop es; pop edi; ret; 
0x000ac943: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000ac833: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00192351: inc edi; push cs; pop edi; ret; 
0x000418ba: inc edi; push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000aca33: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x0015d6b6: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000ab467: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x001922e1: inc edi; push es; pop edi; ret; 
0x000ac923: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x00087754: inc edi; ret 0x4589; 
0x000a1365: inc edi; ret 0x5350; 
0x00096325: inc edi; ret 0x548b; 
0x0009670a: inc edi; ret 0x5c89; 
0x0010faaa: inc edi; ret 0x66c3; 
0x000936ef: inc edi; ret 0x8189; 
0x0008cbe0: inc edi; ret 0x8dc3; 
0x0008d345: inc edi; ret 0x948b; 
0x000cb335: inc edi; ret 0x960f; 
0x00098af6: inc edi; ret 0xc083; 
0x000b3433: inc edi; ret 0xf029; 
0x00135ec6: inc edi; ret 0xf983; 
0x000b3414: inc edi; ret; 
0x000d7bc5: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000ac9f9: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000771a1: inc edi; sbb al, 0x89; inc edi; or al, 1; ret 0xc101; 
0x0012cca7: inc edi; sbb al, 0x89; ret 0x572b; 
0x000ac9ab: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000f5869: inc edi; sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x00129aa1: inc edi; sbb byte ptr [ecx], ch; ret 0x5250; 
0x000ac963: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac989: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ac9d9: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000de37b: inc edi; stc; call dword ptr [eax + 0x53]; 
0x00079d44: inc edi; stc; call dword ptr [eax - 0x18]; 
0x000df302: inc edi; stc; call dword ptr [eax - 0x18]; jne 0xdf30e; cmc; jmp dword ptr [esi - 0x70]; 
0x001739f4: inc edi; stc; call dword ptr [eax - 0x18]; ret; 
0x000e010f: inc edi; stc; call dword ptr [eax - 0x73]; 
0x000de3d8: inc edi; stc; call dword ptr [eax - 1]; 
0x00192791: inc edi; stc; pop edi; ret; 
0x001927c1: inc edi; std; pop edi; ret; 
0x000b3142: inc edi; std; pop esi; pop edi; pop ebp; ret; 
0x001927b1: inc edi; sti; pop edi; ret; 
0x000f4b53: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00124971: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000e0665: inc edi; test dword ptr [ebx + edi*8 - 1], esi; inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x00191703: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00163026: inc edx; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008fec9: inc edx; adc byte ptr [ebx + 0x5e], bl; ret; 
0x000a8efe: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x0011070f: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00096649: inc edx; add al, 0x39; ret; 
0x00155d4f: inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x000a10d3: inc edx; add al, 0x5b; pop esi; ret; 
0x000a8e52: inc edx; add al, 0x5f; pop ebx; ret; 
0x000a711b: inc edx; add al, 0x5f; ret; 
0x000abb88: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aa528: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0006d15a: inc edx; add al, 0x75; ret; 
0x0014f94e: inc edx; add al, 0x83; clc; add dword ptr [edi + 0xb], edi; ret; 
0x000bc119: inc edx; add al, 0x83; ret 0x8304; 
0x000b4d61: inc edx; add al, 0x83; ret 0x8504; 
0x000e645a: inc edx; add al, 0x83; ret 0xeb04; 
0x00118562: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00155cab: inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x000b152b: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000a2d38: inc edx; add al, 0x89; clc; pop edi; ret; 
0x00161f79: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f91: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000a0fcb: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000aa508: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000aa3a8: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000aa568: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000aa408: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00093c09: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a7118: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000ab909: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000abb58: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x000888e5: inc edx; add al, 1; add esp, 0xc; ret; 
0x000585d7: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058631: inc edx; add al, 1; xor eax, eax; pop ebx; pop esi; ret; 
0x000a0fe6: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000a4f3a: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xa4e61; pop ebx; ret; 
0x00184ff0: inc edx; add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0013d5f6: inc edx; add dword ptr [eax + 2], edi; ret; 
0x0007daa2: inc edx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x000a109c: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000e438b: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe4361; xor eax, eax; ret; 
0x00184f70: inc edx; add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x000ea0e2: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000aba90: inc edx; add eax, 0x5f0c428d; ret; 
0x000b1623: inc edx; add eax, 0x5f5bf889; ret; 
0x000a10bf: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000a4fb8: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x000254aa: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x000d93bf: inc edx; add esp, 0x28; pop ebx; ret; 
0x00142270: inc edx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00037a93: inc edx; add esp, 0x94; pop ebx; pop edi; ret; 
0x00021dcb: inc edx; and byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x000f9fa8: inc edx; and byte ptr [ecx], al; rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x001269a1: inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x0012603f: inc edx; and edx, 0x100; mov eax, edx; ret; 
0x001268a1: inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x001266a1: inc edx; and edx, 0x200; mov eax, edx; ret; 
0x001267a1: inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x001264a1: inc edx; and edx, 0x400; mov eax, edx; ret; 
0x00126721: inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x00126521: inc edx; and edx, 1; mov eax, edx; ret; 
0x001265a1: inc edx; and edx, 2; mov eax, edx; ret; 
0x00126821: inc edx; and edx, 4; mov eax, edx; ret; 
0x00126421: inc edx; and edx, 8; mov eax, edx; ret; 
0x00184ac2: inc edx; call 0x40965abb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001773a1: inc edx; call 0x42ed830d; clc; pop ebx; ret; 
0x00177a01: inc edx; call 0x42ed896d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177fa1: inc edx; call 0x42ed8f0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001784e1: inc edx; call 0x42ed944d; clc; pop ebx; ret; 
0x0012ac65: inc edx; call dword ptr [esi + 0x53]; 
0x000c6eba: inc edx; clc; dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x001775a0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f70: inc edx; clc; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00177a06: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d420: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x001773a6: inc edx; clc; pop ebx; ret; 
0x001775a3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d43a: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x00176f73: inc edx; cld; pop ebx; ret; 
0x001775e3: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fb3: inc edx; cli; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0011bf3d: inc edx; cmc; dec dword ptr [ebx - 0x72ebdbb4]; and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x00177436: inc edx; cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001775e7: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001775c6: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b3b39: inc edx; dec dword ptr [edi]; test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000b3a2e: inc edx; dec dword ptr [edi]; test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0017798c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x1779d4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177f2c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x177f74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177af6: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177476: inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00176f6d: inc edx; hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184890: inc edx; hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x00177931: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001772e1: inc edx; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184d72: inc edx; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0010133a: inc edx; in eax, 0xf2; jmp dword ptr [esi - 0x70]; 
0x001772b1: inc edx; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000a0aa1: inc edx; inc dword ptr [eax]; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0008e17d: inc edx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0010f56e: inc edx; inc edx; xor eax, eax; ret; 
0x0002145a: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1aad3f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x000db517: inc edx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000db68d: inc edx; inc esi; stc; call dword ptr [eax - 0x73]; 
0x001540da: inc edx; iretd; std; jmp dword ptr [esi - 0x70]; 
0x00094dd7: inc edx; jmp dword ptr [ecx]; 
0x00177112: inc edx; jo 0x177096; ret 0x80; 
0x00177179: inc edx; jo 0x1770fd; ret 0x80; 
0x001771cb: inc edx; jo 0x17714f; ret 0x80; 
0x00177762: inc edx; jo 0x1776e6; ret 0x80; 
0x001777c9: inc edx; jo 0x17774d; ret 0x80; 
0x0017781b: inc edx; jo 0x17779f; ret 0x80; 
0x00194a7d: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x00177991: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00176fad: inc edx; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00177b36: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001774a6: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177b76: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001774d6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00176f8d: inc edx; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0010783d: inc edx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0017b3e6: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d416: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001848c6: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00177a76: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000a8ebf: inc edx; or al, 0x5f; pop ebx; ret; 
0x000a71c3: inc edx; or al, 0x5f; ret; 
0x00050eb6: inc edx; or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x00032938: inc edx; or al, 0x83; ret 0x8908; 
0x0012c1af: inc edx; or al, 0x89; ret; 
0x00184ee6: inc edx; or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00113f31: inc edx; or byte ptr [0x100f], ah; ret; 
0x00058667: inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58678; ret; 
0x000a8ebc: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000825bd: inc edx; or byte ptr [ebp - 0x3a], ah; add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x000c5dc0: inc edx; or byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00080a29: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a4ffc: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xa4e61; pop ebx; ret; 
0x000a501e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xa4e61; pop ebx; ret; 
0x000a505c: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xa4e61; pop ebx; ret; 
0x000fc3f3: inc edx; or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x001679e5: inc edx; or byte ptr [ecx], al; ret; 
0x000a8e84: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x001778d1: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177281: inc edx; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00184c52: inc edx; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001778a1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177251: inc edx; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00184ba2: inc edx; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000a9f9e: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a719c: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72dc: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000abad0: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc30: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000b15df: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2dac: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000a2eec: inc edx; pop es; mov eax, edx; ret; 
0x000a108e: inc edx; pop es; pop ebx; pop esi; ret; 
0x000a7049: inc edx; pop es; pop edi; ret; 
0x000a7289: inc edx; pop es; ret; 
0x00188e33: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x00187686: inc edx; pop es; sub eax, ecx; ret; 
0x000a9ec6: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7203: inc edx; push cs; pop edi; ret; 
0x000a7363: inc edx; push cs; ret; 
0x000a1029: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a10f9: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000abab0: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc10: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000b1643: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa450: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000aa5b0: inc edx; push es; mov eax, edx; ret; 
0x000a10ff: inc edx; push es; pop ebx; pop esi; ret; 
0x000a714b: inc edx; push es; pop edi; ret; 
0x000a727b: inc edx; push es; ret; 
0x00188f0f: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x001876f6: inc edx; push es; sub eax, ecx; ret; 
0x0015189b: inc edx; ret 0x4489; 
0x0013da21: inc edx; ret 0x8dc3; 
0x0012326c: inc edx; ret 0x90c3; 
0x001432d0: inc edx; ret 0xb60f; 
0x00032a1b: inc edx; ret 0xc189; 
0x000b339e: inc edx; ret 0xf289; 
0x001774c7: inc edx; ret 0xf66; 
0x0003347d: inc edx; ret; 
0x00135ebd: inc edx; rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000e92cd: inc edx; sbb al, 0x39; ret; 
0x00081d9b: inc edx; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dbb: inc edx; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081ddb: inc edx; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081dfb: inc edx; sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008bb0b: inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00176fd3: inc edx; stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177607: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fd7: inc edx; std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001775c3: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f93: inc edx; sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0016b328: inc edx; sub al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00023b11: inc edx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x001106ff: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000b43a3: inc edx; test al, al; jne 0xb439c; xor eax, eax; ret; 
0x001775e0: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b4a0: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x00113de6: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0002ff45: inc edx; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0010dcce: inc edx; xor eax, eax; ret; 
0x000f659c: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0011e1f1: inc esi; adc al, 0x8d; adc edx, 0x52; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0002ddf9: inc esi; adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0007c244: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0006496f: inc esi; add al, 0; add byte ptr [ebp - 0x6cd907a], cl; call dword ptr [eax - 0x73]; 
0x000800c6: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00161e74: inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161eac: inc esi; add al, 0x52; push ebp; push esi; call dword ptr [eax + 8]; 
0x00161e91: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00161ec9: inc esi; add al, 0x53; push edx; push esi; call dword ptr [eax + 8]; 
0x00162718: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x000ec941: inc esi; add al, 0x83; ret; 
0x0007c022: inc esi; add al, 0x89; inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0011b443: inc esi; add al, 0x89; ret 0xe083; 
0x000f4b57: inc esi; add al, 0x89; ret 0xe283; 
0x0007cc10: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0011e519: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00124f63: inc esi; add byte ptr [eax], al; add word ptr [edx + eax*2], 1; ret; 
0x00124f5b: inc esi; add byte ptr [eax], al; jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00058ec9: inc esi; add byte ptr [ecx - 0x57b4b], cl; jmp dword ptr [ebp - 0x75]; 
0x000b519f: inc esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x000b42f8: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x00037829: inc esi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ddd7b: inc esi; add esp, 0x28; pop ebx; ret; 
0x0007f0b0: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0012959d: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0007c721: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0011c279: inc esi; call eax; 
0x0015e4be: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00074ed9: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00072581: inc esi; cmp byte ptr [ecx], bh; ret; 
0x0008df21: inc esi; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000f9a2b: inc esi; into; call dword ptr gs:[0x10]; 
0x00087299: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000491f4: inc esi; jmp dword ptr [eax]; 
0x000980d3: inc esi; jmp dword ptr [ecx]; 
0x00087e86: inc esi; ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0002145b: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1aad3f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012df5c: inc esi; or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x00157c64: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000800c3: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016d7a1: inc esi; or bl, ch; xchg eax, ebp; jbe 0x16d7e0; cld; jmp dword ptr [esi - 0x70]; 
0x0011df3d: inc esi; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x0007bab0: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0003a973: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000800d5: inc esi; or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x0014e6f1: inc esi; or byte ptr [ecx], bh; ret 0x1074; 
0x0003a804: inc esi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00099d9a: inc esi; or eax, 0x63c38100; ret 0x18; 
0x0008ed36: inc esi; or edi, edx; dec dword ptr [ebp - 0x67d4b7e]; call dword ptr [eax - 0x73]; 
0x000de744: inc esi; pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000de858: inc esi; push ebx; setne al; ret; 
0x0011d49a: inc esi; push ebx; stc; call dword ptr [eax + 0x57]; 
0x0018e1bb: inc esi; ret 0x5d5e; 
0x00098f9a: inc esi; ret 0x8389; 
0x0009a1c4: inc esi; ret 0xc3eb; 
0x0013d3be: inc esi; ret 0xec83; 
0x000b33c0: inc esi; ret 0xf029; 
0x000eff46: inc esi; ret; 
0x00081bd0: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x000eeab8: inc esi; sbb al, 0x39; ret; 
0x0012cad4: inc esi; sbb al, 0x89; ret 0x562b; 
0x00153804: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0009537c: inc esi; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000daf04: inc esi; stc; call dword ptr [eax + 0x56]; 
0x000de290: inc esi; stc; call dword ptr [eax + 0x6a]; 
0x000db518: inc esi; stc; call dword ptr [eax - 0x18]; 
0x000db68e: inc esi; stc; call dword ptr [eax - 0x73]; 
0x000de2cb: inc esi; stc; call dword ptr [ebx + 0x50]; 
0x000db056: inc esi; stc; call dword ptr [ecx - 1]; 
0x000db0bc: inc esi; stc; call dword ptr [edi - 1]; 
0x0015c9f3: inc esi; std; jmp dword ptr [esi - 0x70]; 
0x0011d5ed: inc esi; sub byte ptr [eax + 4], bh; pop ebx; pop esi; pop edi; ret; 
0x00080170: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007e92a: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00191f39: inc esi; test dh, 0x40; jne 0x191f84; add eax, 0xf; ret; 
0x0005d76b: inc esi; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x00024786: inc esi; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000e876b: inc esi; xor byte ptr [ecx], bh; ret 0x4e0f; 
0x00133bd8: inc esp; aam 0xff; jmp dword ptr [esi - 0x70]; 
0x000b3334: inc esp; adc al, dh; ret; 
0x000b3364: inc esp; adc byte ptr [eax], ah; ret; 
0x00156d0c: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000b3354: inc esp; adc byte ptr [eax], dl; ret; 
0x00092365: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014a541: inc esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x6a02a7e], cl; call dword ptr [eax - 0x73]; 
0x0008de7a: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000de8b1: inc esp; add bh, bh; ret; 
0x00118e69: inc esp; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00118efb: inc esp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0002015d: inc esp; add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0011ae14: inc esp; add byte ptr [eax], al; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x0008f21d: inc esp; add byte ptr [edx], al; ret; 
0x0013dc75: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000b332b: inc esp; add dh, byte ptr [eax]; ret; 
0x0006ea56: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006de77: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0015c5a6: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014da75: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000b2f6b: inc esp; add dword ptr [eax], edx; ret; 
0x000b2f8b: inc esp; add dword ptr [eax], esi; ret; 
0x000b2f7b: inc esp; add dword ptr [eax], esp; ret; 
0x00080eda: inc esp; add eax, dword ptr [eax]; add byte ptr [ebp + 0x52840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0015eda2: inc esp; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00109f88: inc esp; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x001303f9: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00036d35: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x00074259: inc esp; and al, 0x10; call dword ptr [eax + 0x1c]; 
0x0016fd92: inc esp; and al, 0x10; call dword ptr [eax + 0x40]; 
0x0016cb09: inc esp; and al, 0x10; call eax; 
0x00035c96: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c05: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00035c8b: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00176f15: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012529a: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x00122c25: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122356: inc esp; and al, 0x10; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000872fa: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009cfda: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000294b2: inc esp; and al, 0x10; push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x0013f462: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0012a710: inc esp; and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00119ce1: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00021514: inc esp; and al, 0x14; call eax; 
0x000d62cc: inc esp; and al, 0x14; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x001220d8: inc esp; and al, 0x14; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012235e: inc esp; and al, 0x14; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122295: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d5: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000748f1: inc esp; and al, 0x14; pop ebx; pop esi; pop edi; ret; 
0x00088c25: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015c195: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x0006a042: inc esp; and al, 0x18; call dword ptr [eax + 0x1c]; 
0x0015dc7f: inc esp; and al, 0x18; call eax; 
0x00155021: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00122dfe: inc esp; and al, 0x18; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db8: inc esp; and al, 0x18; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012229d: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122026: inc esp; and al, 0x18; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122786: inc esp; and al, 0x18; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00123a98: inc esp; and al, 0x18; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0007c088: inc esp; and al, 0x18; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000d8c2f: inc esp; and al, 0x1c; call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00064fc2: inc esp; and al, 0x1c; call dword ptr [eax + 0x1c]; 
0x0009340b: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012202e: inc esp; and al, 0x1c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d411: inc esp; and al, 0x1c; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003306f: inc esp; and al, 0x1c; push dword ptr [eax]; call 0xb3440; add esp, 0x1c; ret; 
0x00161f1c: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0006d4c3: inc esp; and al, 0x20; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006d473: inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0012a48d: inc esp; and al, 0x20; call dword ptr [eax + 0x14]; 
0x0003904a: inc esp; and al, 0x20; call eax; 
0x0008d41c: inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012216e: inc esp; and al, 0x20; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00038676: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000682f3: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006829b: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x001600e8: inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x00081594: inc esp; and al, 0x24; call eax; 
0x001220d4: inc esp; and al, 0x24; lea eax, [esp + 0x14]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121d3e: inc esp; and al, 0x24; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001221ff: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00157171: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00076e88: inc esp; and al, 0x28; call dword ptr [eax + 0x40]; 
0x0012a02c: inc esp; and al, 0x28; call eax; 
0x00093144: inc esp; and al, 0x28; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00121e7e: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001220dc: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009098b: inc esp; and al, 0x28; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00108d63: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0007bd1f: inc esp; and al, 0x28; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0013917d: inc esp; and al, 0x2c; call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00139189: inc esp; and al, 0x2c; call eax; 
0x000582d4: inc esp; and al, 0x30; call eax; 
0x00092d34: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006ea71: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000c9f09: inc esp; and al, 0x34; call eax; 
0x00078203: inc esp; and al, 0x34; push eax; call ebx; 
0x000b5774: inc esp; and al, 0x34; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000b53d6: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x0011415e: inc esp; and al, 0x37; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0006de40: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006eaa1: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00121def: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122409: inc esp; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000d8f9f: inc esp; and al, 0x38; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0006debb: inc esp; and al, 0x3c; and byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0015a76d: inc esp; and al, 0x3c; call eax; 
0x00122299: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015ff55: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160035: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160098: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f8: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160165: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x0006db30: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006ea61: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x0015a51e: inc esp; and al, 0x40; call eax; 
0x0012235a: inc esp; and al, 0x40; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c3c95: inc esp; and al, 0x40; push dword ptr [eax]; call esi; 
0x000b528f: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00076d25: inc esp; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00092363: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006ea54: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006de75: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00025afd: inc esp; and al, 0x44; call eax; 
0x001226d9: inc esp; and al, 0x44; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015c4d7: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0015c375: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000249e7: inc esp; and al, 0x48; call eax; 
0x0006ddb3: inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9f1: inc esp; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x00027183: inc esp; and al, 0x4c; call eax; 
0x00068e09: inc esp; and al, 0x4e; and byte ptr [ecx], dh; rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x00049518: inc esp; and al, 0x50; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x0012202a: inc esp; and al, 0x54; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000faa18: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x001201cb: inc esp; and al, 0x58; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0006dbc7: inc esp; and al, 0x5c; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0006e9d1: inc esp; and al, 0x5c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ca537: inc esp; and al, 0x5c; call eax; 
0x001201d5: inc esp; and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001140d7: inc esp; and al, 0x5c; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012278a: inc esp; and al, 0x60; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0006dd68: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9e1: inc esp; and al, 0x64; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000b59be: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000b6012: inc esp; and al, 0x64; push eax; push esi; call ebx; 
0x00068a57: inc esp; and al, 0x68; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00028bd4: inc esp; and al, 0x68; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x0002617b: inc esp; and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00037864: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873bf: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000993ff: inc esp; and al, 0xc; call dword ptr [edx]; 
0x000d8c3b: inc esp; and al, 0xc; call eax; 
0x0002cbec: inc esp; and al, 0xc; call edx; 
0x00035ffc: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035a7a: inc esp; and al, 0xc; fld xword ptr [esp + 4]; ret; 
0x00083877: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000d64ec: inc esp; and al, 0xc; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00121df3: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010872c: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00099341: inc esp; and al, 0xc; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0011419a: inc esp; and al, 0xc; mov eax, edi; call dword ptr gs:[0x10]; 
0x00124489: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x001151a8: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115358: inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00035a45: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000b2113: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x00193db3: inc esp; and al, 0xc; pop edi; ret; 
0x00026751: inc esp; and al, 0xc; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x0014df56: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x001606d3: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071b: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x0003b408: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45b: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x001633b5: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cc85: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00083be1: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007b3b5: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc85: inc esp; and al, 4; and eax, 0x7f; ret; 
0x00131095: inc esp; and al, 4; and eax, 0xffff; ror ax, 8; ret; 
0x00131085: inc esp; and al, 4; bswap eax; ret; 
0x0009b0bb: inc esp; and al, 4; cmove eax, edx; add eax, 1; ret; 
0x00081e20: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x0003614a: inc esp; and al, 4; fld dword ptr [esp + 4]; ret; 
0x0004c5a6: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0015a1f7: inc esp; and al, 4; jmp edx; 
0x0008d485: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x0010350b: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x001034f3: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00083cf1: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008cb25: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084005: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c5: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00036000: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000d61a0: inc esp; and al, 4; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00121d42: inc esp; and al, 4; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0014ac75: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00160ee1: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080375: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016e045: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e065: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e075: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e35: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f05: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0016e029: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007a615: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c5: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x00093640: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x000936d0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x936e0; ret; 
0x00093680: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x93690; ret; 
0x000d7d95: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x0007b3c5: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007b3e5: inc esp; and al, 4; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x001221fb: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e7a: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001633d5: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0016e055: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00083ac5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080035: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e005: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de75: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001029b5: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00035e0e: inc esp; and al, 4; ret; 
0x00087209: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0007e3b5: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0007a5d5: inc esp; and al, 4; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007a5f5: inc esp; and al, 4; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000dd1cf: inc esp; and al, 8; call edx; 
0x000b3cf6: inc esp; and al, 8; cld; pop edi; ret; 
0x00087205: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x000362b4: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035e0a: inc esp; and al, 8; fld qword ptr [esp + 4]; ret; 
0x0008377c: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00085b05: inc esp; and al, 8; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d62d4: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000926c0: inc esp; and al, 8; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000dc5c8: inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x001080b1: inc esp; and al, 8; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010f8e9: inc esp; and al, 8; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00092710: inc esp; and al, 8; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0003847f: inc esp; and al, 8; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00121e82: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012335b: inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012345a: inc esp; and al, 8; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0003842f: inc esp; and al, 8; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00108ced: inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121deb: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013bcf6: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017da27: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0011527e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210e: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021de: inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0007107c: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0002fe35: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe55: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00092968: inc esp; and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b8: inc esp; and al, 8; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0003733e: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0010298c: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x000759d5: inc esp; and al, 8; pop ebx; ret; 
0x000b3ccc: inc esp; and al, 8; pop edi; ret; 
0x000aece3: inc esp; and al, 8; pop esi; ret; 
0x0007043d: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0002fe99: inc esp; and al, 8; ret; 
0x0015e9c1: inc esp; and al, 8; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0018ff87: inc esp; bnd jmp dword ptr [esi - 0x70]; 
0x0007d147: inc esp; call 0x6e936; jmp dword ptr [esi - 0x70]; 
0x00025aff: inc esp; call eax; 
0x000d1412: inc esp; cdq; stc; call dword ptr [eax - 0x73]; 
0x00119795: inc esp; cld; inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x000b2c44: inc esp; cmp al, dh; pop edi; ret; 
0x000b2c74: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000b2c64: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0013cab2: inc esp; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000e9c16: inc esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000db0b3: inc esp; fld dword ptr [ebx - 0x72affb14]; xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x00093148: inc esp; idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x000ebd38: inc esp; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0003eab9: inc esp; jbe 0x3eab5; call dword ptr [eax + 0x68]; 
0x0003eadc: inc esp; jbe 0x3ead8; call dword ptr [eax + 0x68]; 
0x00041120: inc esp; jbe 0x4111c; call dword ptr [eax - 0x73]; 
0x00041b29: inc esp; jbe 0x41b25; call dword ptr [eax + 0x68]; 
0x00041b4c: inc esp; jbe 0x41b48; call dword ptr [eax + 0x68]; 
0x0004437c: inc esp; jbe 0x44378; call dword ptr [eax - 0x73]; 
0x00044d19: inc esp; jbe 0x44d15; call dword ptr [eax + 0x68]; 
0x00044d3c: inc esp; jbe 0x44d38; call dword ptr [eax + 0x68]; 
0x00047567: inc esp; jbe 0x47563; call dword ptr [eax - 0x73]; 
0x0004d8a9: inc esp; jbe 0x4d8a5; call dword ptr [eax + 0x68]; 
0x0004d8cc: inc esp; jbe 0x4d8c8; call dword ptr [eax + 0x68]; 
0x00050b3c: inc esp; jbe 0x50b38; call dword ptr [eax - 0x73]; 
0x000b83a9: inc esp; jbe 0xb83a5; call dword ptr [eax + 0x68]; 
0x000b83cc: inc esp; jbe 0xb83c8; call dword ptr [eax + 0x68]; 
0x000ba98a: inc esp; jbe 0xba986; call dword ptr [eax - 0x73]; 
0x000bb301: inc esp; jbe 0xbb2fd; call dword ptr [eax + 0x68]; 
0x000bb324: inc esp; jbe 0xbb320; call dword ptr [eax + 0x68]; 
0x000bd749: inc esp; jbe 0xbd745; call dword ptr [eax - 0x73]; 
0x000bdfd9: inc esp; jbe 0xbdfd5; call dword ptr [eax + 0x68]; 
0x000bdffc: inc esp; jbe 0xbdff8; call dword ptr [eax + 0x68]; 
0x000c02eb: inc esp; jbe 0xc02e7; call dword ptr [eax - 0x73]; 
0x000c4ab1: inc esp; jbe 0xc4aad; call dword ptr [eax + 0x68]; 
0x000c4ad4: inc esp; jbe 0xc4ad0; call dword ptr [eax + 0x68]; 
0x000c7a03: inc esp; jbe 0xc79ff; call dword ptr [eax - 0x73]; 
0x0011fdb4: inc esp; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00176dc8: inc esp; ljmp 0xc019:0xd8f7fffb; add esp, 0x1c; ret; 
0x0014a4f0: inc esp; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x001632da: inc esp; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001226db: inc esp; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016b326: inc esp; mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0011fc54: inc esp; mov eax, ecx; pop ebx; pop esi; ret; 
0x00109f8b: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x00085ce7: inc esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x001142c9: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011d03a: inc esp; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0019c12f: inc esp; mov word ptr [eax - 0x7d], ss; ret 0x8920; 
0x0002f67c: inc esp; nop; inc eax; ret; 
0x00068501: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00068801: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00068a9a: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689fa: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x0006844a: inc esp; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000b2f34: inc esp; or byte ptr [eax], ah; ret; 
0x000b2f44: inc esp; or byte ptr [eax], dh; ret; 
0x000b2f24: inc esp; or byte ptr [eax], dl; ret; 
0x0006ddfa: inc esp; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0011d0d2: inc esp; pop ebx; ret; 
0x001837a8: inc esp; pop es; add ebx, dword ptr [edi - 0x18]; call 0x8218365e; ret; 
0x00184828: inc esp; pop es; maxps xmm5, xmm0; push 0x81fffe9c; ret; 
0x001842a8: inc esp; pop es; or ebx, dword ptr [edi - 0x18]; call 0x82184153; ret; 
0x0014ee59: inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x0004bd83: inc esp; popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0012a974: inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00069059: inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x00068f6e: inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x0015a76a: inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0012e67f: inc esp; rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x000c3e56: inc esp; ret 0x108b; 
0x0008b16e: inc esp; ret 0x118b; 
0x000376fb: inc esp; ret 0x24e9; 
0x000df604: inc esp; ret 0x31c3; 
0x00048b8b: inc esp; ret 0x3c83; 
0x00045228: inc esp; ret 0x4489; 
0x0010ab1c: inc esp; ret 0x4589; 
0x000d028c: inc esp; ret 0x4789; 
0x0003ef7f: inc esp; ret 0x489; 
0x0007c1b8: inc esp; ret 0x568b; 
0x00097fc5: inc esp; ret 0x568d; 
0x0015342e: inc esp; ret 0x5e5b; 
0x00099f98: inc esp; ret 0x66c3; 
0x00129924: inc esp; ret 0x7789; 
0x000ec211: inc esp; ret 0x804; 
0x0004de9a: inc esp; ret 0x8589; 
0x0010d47f: inc esp; ret 0x8966; 
0x000d9961: inc esp; ret 0x8d50; 
0x00083bda: inc esp; ret 0x8dc3; 
0x000de66c: inc esp; ret 0x90c3; 
0x000de60d: inc esp; ret 0xb8c3; 
0x0009b0bf: inc esp; ret 0xc083; 
0x0009af83: inc esp; ret 0xc35b; 
0x0003e354: inc esp; ret 0xc483; 
0x00093e14: inc esp; ret 0xd231; 
0x000985c2: inc esp; ret 0xe821; 
0x000939c6: inc esp; ret 0xec83; 
0x000b548f: inc esp; ret 0xff50; 
0x000b58b5: inc esp; ret 0xff65; 
0x0014ead5: inc esp; ret 4; 
0x00023396: inc esp; ret; 
0x000fd230: inc esp; sahf; stc; call dword ptr [eax - 0x73]; 
0x00037641: inc esp; sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0019d354: inc esp; sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0006ad45: inc esp; sbb eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x00097c85: inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000cb5fa: inc esp; stc; call dword ptr [eax + 0x53]; 
0x000cb996: inc esp; stc; call dword ptr [eax + 0x55]; 
0x000b5ba9: inc esp; stc; call dword ptr [eax - 0x18]; 
0x001747cf: inc esp; stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x001493ff: inc esp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0009a9d0: inc esp; test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x0014418a: inc esp; ud0; add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x0008441a: inc esp; xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0014da0f: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x00099985: inc esp; xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x000baab5: inc sp; stc; call dword ptr [eax - 0x18]; 
0x001473cc: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0006f2e3: insb byte ptr es:[edi], dx; add dword ptr [eax], 0x5f5e5b00; pop ebp; ret; 
0x0014ee3f: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013f937: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x000fe46d: insb byte ptr es:[edi], dx; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001488d1: insb byte ptr es:[edi], dx; and al, 0x24; add dword ptr [ecx], ebp; ret 0x828d; 
0x000933e8: insb byte ptr es:[edi], dx; and al, 0x3c; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000c9da2: insb byte ptr es:[edi], dx; and al, 0x6c; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000d5e94: insb byte ptr es:[edi], dx; and al, 0xc; push ebp; push ebx; call eax; 
0x00035c9a: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c09: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x00035c8f: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000d5ec1: insb byte ptr es:[edi], dx; and al, 4; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00035a7e: insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00027e49: insb byte ptr es:[edi], dx; call esi; 
0x00136f93: insb byte ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x3f]; 
0x0006a81b: insb byte ptr es:[edi], dx; idiv edi; call dword ptr [ebx]; 
0x0015c0d0: insb byte ptr es:[edi], dx; inc eax; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00099d29: insb byte ptr es:[edi], dx; inc edi; or eax, 0xd3c38100; ret 0x18; 
0x00085d32: insb byte ptr es:[edi], dx; jg 0x85d2e; call dword ptr [eax + 0x68]; 
0x00085d55: insb byte ptr es:[edi], dx; jg 0x85d51; call dword ptr [eax + 0x68]; 
0x000411ac: insb byte ptr es:[edi], dx; jne 0x411a8; call dword ptr [eax - 0x18]; 
0x0004422a: insb byte ptr es:[edi], dx; jne 0x44226; call dword ptr [eax - 0x18]; 
0x00047557: insb byte ptr es:[edi], dx; jne 0x47553; call dword ptr [eax - 0x18]; 
0x00050cff: insb byte ptr es:[edi], dx; jne 0x50cfb; call dword ptr [eax - 0x18]; 
0x000baa29: insb byte ptr es:[edi], dx; jne 0xbaa25; call dword ptr [eax - 0x18]; 
0x000bd835: insb byte ptr es:[edi], dx; jne 0xbd831; call dword ptr [eax - 0x18]; 
0x000c0321: insb byte ptr es:[edi], dx; jne 0xc031d; call dword ptr [eax - 0x18]; 
0x000c7a3b: insb byte ptr es:[edi], dx; jne 0xc7a37; call dword ptr [eax - 0x18]; 
0x0004a83b: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004a5ed: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0007b630: insb byte ptr es:[edi], dx; pop eax; cli; jmp dword ptr [esi - 0x70]; 
0x00025216: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000853f2: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027e45: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x0002617d: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000c9da4: insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000c9f05: insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x001273af: insb byte ptr es:[edi], dx; push esi; stc; call dword ptr [eax + 0x53]; 
0x0014e6e1: insb byte ptr es:[edi], dx; ret 0x8304; 
0x000888ef: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x000315fa: insb byte ptr es:[edi], dx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x00103a23: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106183: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x001232cf: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00057de7: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x000df7a3: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e43: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf3: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b3: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x0009738c: insb byte ptr es:[edi], dx; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0004a5af: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00099f4a: insd dword ptr es:[edi], dx; call 0xc24eaf4f; ret; 
0x0007a058: insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x000b29d2: insd dword ptr es:[edi], dx; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x00087766: insd dword ptr es:[edi], dx; push cs; add byte ptr [0x19e897], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x000c9979: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x000218cf: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0012e65c: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x75]; 
0x00157acf: insd dword ptr es:[edi], dx; xchg ah, ch; dec dword ptr [ecx + 0x65e82434]; xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000ddd0f: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fe3d4: int 0; pop es; add byte ptr [ecx + 0x127c28c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000e92b8: int 0x13; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00021746: int 0x14; add byte ptr [0x2048b7], al; lea eax, [eax - 0x6921c]; ret; 
0x00021726: int 0x14; add byte ptr [0x2048d7], al; lea eax, [eax - 0x69214]; ret; 
0x000216d6: int 0x14; add byte ptr [ecx + 0x204927c2], al; add bh, dh; fmul dword ptr [ebx - 0x1336e]; jmp dword ptr [ebp - 0x77]; 
0x0007daaf: int 0x1d; sti; dec dword ptr [ebp - 0x681a37b]; call dword ptr [eax - 0x73]; 
0x000d79bf: int 0x26; cld; jmp dword ptr [esi - 0x70]; 
0x000f91ae: int 0x48; stc; call dword ptr [eax - 0x77]; 
0x00137d66: int 0x48; stc; call dword ptr [eax - 1]; 
0x000b67ea: int 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x000375a5: int 0x80; 
0x000f9974: int 0x8d; jbe 0xf9978; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000c9405: int 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x000442a1: int 0xe; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00102c27: int 0xed; call dword ptr [eax - 0x73]; 
0x0006b06b: int 0xf8; dec dword ptr [ebx - 0x365f797c]; clc; dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x00093407: int 0xf8; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x00073cc9: int 0xfa; jmp dword ptr [esi - 0x70]; 
0x0014427e: int 0xfe; jmp dword ptr [esi - 0x70]; 
0x00116e2b: int1; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009d7ee: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00084417: int1; add edi, 0x89544; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0008274b: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013a1d9: int1; call dword ptr [eax - 0x18]; 
0x00139ef7: int1; call dword ptr [eax - 0x73]; 
0x000938e4: int1; call dword ptr [edx + 0x51]; 
0x000938e4: int1; call dword ptr [edx + 0x51]; push eax; call 0xb3d70; add esp, 0x1c; ret; 
0x000d5e3e: int1; call dword ptr gs:[0x10]; 
0x00104abc: int1; cli; call dword ptr [edi - 1]; 
0x000713d9: int1; cli; jmp dword ptr [esi - 0x70]; 
0x00041057: int1; das; stc; call dword ptr [eax - 0x18]; 
0x00170950: int1; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0011e801: int1; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x00168289: int1; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x001637b7: int1; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x001024e3: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000d15cb: int1; inc ebp; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000e103b: int1; inc edi; stc; call dword ptr [eax - 0x18]; 
0x001739f3: int1; inc edi; stc; call dword ptr [eax - 0x18]; ret; 
0x0016ebc0: int1; jmp dword ptr [ebp - 0x75]; 
0x0010d767: int1; jmp dword ptr [ebp - 0x77]; 
0x00115fba: int1; jmp dword ptr [esi - 0x70]; 
0x0010438b: int1; mov ah, 0xf2; dec dword ptr [ebx - 0x19f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x00177517: int1; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0003ba25: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000a0c3e: int1; mov eax, edx; pop ebx; ret; 
0x0008d31d: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087ea8: int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000d7a25: int1; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fa2e6: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00108ebe: int1; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108ef2: int1; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00108c5e: int1; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108ce9: int1; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00170a5e: int1; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00176edb: int1; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0017321b: int1; or esp, esi; call dword ptr [edi - 1]; 
0x000a0d3e: int1; pop ebx; pop esi; ret; 
0x0004a9be: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00192732: int1; pop edi; ret; 
0x0018f357: int1; std; inc dword ptr [ecx + 0x96ca6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x00191727: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0008ad23: int1; xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008e884: int1; xor eax, eax; pop ebx; ret; 
0x00099596: int1; xor eax, eax; ret; 
0x000fb8a0: into; adc eax, dword ptr [eax]; add byte ptr [eax + 0x30840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x00086fb5: into; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + edi*2], edx; stc; call dword ptr [eax - 0x18]; 
0x0008bfce: into; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00123a9c: into; add byte ptr [ecx], al; add byte ptr [eax], al; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00037c95: into; add edi, esi; ret 0; 
0x000943ac: into; and dh, bh; fisttp dword ptr [ecx + 0x21082474]; ret; 
0x000882c4: into; call dword ptr gs:[0x10]; 
0x00073b39: into; cli; jmp dword ptr [esi - 0x70]; 
0x00156e0a: into; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x000f9a29: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00064259: into; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0007866e: into; fcos; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000b42f4: into; jne 0xb42fa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000389ce: into; pop eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00144824: into; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00152c51: into; popal; stc; call dword ptr [eax + 0x53]; 
0x0014fdd3: into; popal; stc; call dword ptr [eax + 0x56]; 
0x001503f5: into; popal; stc; call dword ptr [eax + 0x57]; 
0x00150b3d: into; popal; stc; call dword ptr [eax - 1]; 
0x00121a9c: into; push ebp; stc; call dword ptr [eax - 0x18]; 
0x0012e6cf: into; push edi; stc; call dword ptr [ebx + 0x50]; 
0x00169c34: into; ret; 
0x00085d3e: into; stc; call dword ptr [eax - 0x73]; 
0x000832ab: into; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0009ef29: iretd; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x000a90ed: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00073a01: iretd; cli; jmp dword ptr [esi - 0x70]; 
0x000f9381: iretd; dec eax; stc; call dword ptr [eax - 0x73]; 
0x0012beed: iretd; jecxz 0x12bee6; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00078fb8: iretd; jl 0x78fb5; jmp dword ptr [esi - 0x70]; 
0x000c79ad: iretd; jle 0xc79a6; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000d86e0: iretd; mov ah, dh; jmp dword ptr [esi - 0x70]; 
0x00155bd6: iretd; mov byte ptr [ecx], al; add byte ptr [ecx + 0xd0426c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000787da: iretd; mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00122cd3: iretd; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x0008729a: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00087294: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008b0ba: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0009a48a: iretd; out 0xff, eax; cmovne eax, edx; ret; 
0x0019d1c0: iretd; pop ebx; pop esi; pop edi; ret; 
0x0007b3ba: iretd; ret; 
0x001540db: iretd; std; jmp dword ptr [esi - 0x70]; 
0x000b3408: iretd; sub eax, esi; pop ebx; pop esi; ret; 
0x001034f0: ja 0x1034fe; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x001037d8: ja 0x1037e0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00106b4c: ja 0x106b58; pop ebx; pop esi; ret; 
0x0010785b: ja 0x107868; pop ebx; pop esi; pop edi; ret; 
0x00107b8f: ja 0x107b98; pop ebx; pop esi; ret; 
0x00107bdf: ja 0x107be8; pop ebx; pop esi; ret; 
0x001085ac: ja 0x108600; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010866c: ja 0x1086c0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00108869: ja 0x108870; pop ebx; ret; 
0x00109243: ja 0x109290; add esp, 0x14; pop ebx; pop esi; ret; 
0x00109377: ja 0x109380; pop ebx; ret; 
0x00109407: ja 0x109450; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010dcc6: ja 0x10dcd8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f566: ja 0x10f578; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0010f71c: ja 0x10f770; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00111fa6: ja 0x111fb8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00113875: ja 0x113880; pop ebx; ret; 
0x00113a45: ja 0x113a60; pop ebx; pop esi; pop edi; ret; 
0x00113ac8: ja 0x113ae0; pop ebx; pop esi; pop edi; ret; 
0x00113b44: ja 0x113b60; pop ebx; pop esi; pop edi; ret; 
0x00113bc7: ja 0x113be0; pop ebx; pop esi; pop edi; ret; 
0x00113c2e: ja 0x113c38; pop ebx; pop esi; ret; 
0x00113c88: ja 0x113c90; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00113cde: ja 0x113ce8; pop ebx; pop esi; ret; 
0x0011444e: ja 0x1144a8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001144f5: ja 0x114501; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001146c9: ja 0x1146d0; pop ebx; ret; 
0x00114719: ja 0x114720; pop ebx; ret; 
0x0011482f: ja 0x114838; pop ebx; pop esi; pop edi; ret; 
0x0011487f: ja 0x114888; pop ebx; pop esi; pop edi; ret; 
0x00114f9e: ja 0x114fa8; pop ebx; pop esi; ret; 
0x00114ffc: ja 0x115050; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001150bc: ja 0x115110; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001169b3: ja 0x116a00; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116a83: ja 0x116ad0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00116b60: ja 0x116b68; pop ebx; pop esi; ret; 
0x001183a9: ja 0x1183b0; pop ebx; ret; 
0x001183f9: ja 0x118400; pop ebx; ret; 
0x0011844e: ja 0x118458; pop ebx; pop esi; ret; 
0x0011849e: ja 0x1184a8; pop ebx; pop esi; ret; 
0x0011a08c: ja 0x11a0e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c4f1: ja 0x11c4f8; pop ebx; ret; 
0x0011ede9: ja 0x11edf0; pop ebx; ret; 
0x0011ee43: ja 0x11ee50; pop ebx; pop esi; pop edi; ret; 
0x0011f234: ja 0x11f240; pop ebx; pop esi; pop edi; ret; 
0x0011f483: ja 0x11f490; pop ebx; pop esi; pop edi; ret; 
0x0011f88c: ja 0x11f8e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011f9f8: ja 0x11fa18; pop ebx; pop esi; pop edi; ret; 
0x0011ff58: ja 0x11ff60; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00120969: ja 0x120970; pop ebx; ret; 
0x001209b9: ja 0x1209c0; pop ebx; ret; 
0x00120a09: ja 0x120a10; pop ebx; ret; 
0x00120b1a: ja 0x120b20; pop ebx; pop esi; pop edi; ret; 
0x001211f1: ja 0x121200; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00123505: ja 0x123510; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001239a7: ja 0x1239b0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00123ff3: ja 0x124000; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00124057: ja 0x124060; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00130f40: ja 0x130f49; sar eax, 5; add esp, 0xc; ret; 
0x00144338: ja 0x144367; stc; call dword ptr [eax + 0x51]; 
0x0014cd5c: ja 0x14cd54; inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x00157aa4: ja 0x157a90; mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00162150: ja 0x162183; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00162240: ja 0x162273; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00168107: ja 0x168105; jmp dword ptr [esi - 0x70]; 
0x001684a5: ja 0x168432; cld; jmp dword ptr [esi - 0x70]; 
0x0016d7cc: ja 0x16d7dd; mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x001709e4: ja 0x1709f0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0017467f: ja 0x174688; pop ebx; pop esi; ret; 
0x001766a5: ja 0x176650; sti; jmp dword ptr [esi - 0x70]; 
0x001768d7: ja 0x1768e0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001769e7: ja 0x1769f0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00187745: ja 0x187749; neg eax; ret; 
0x00188f85: ja 0x188f89; neg eax; pop ebp; ret; 
0x0018b635: ja 0x18b639; neg eax; add esp, 4; pop ebx; ret; 
0x0018dec5: ja 0x18dec9; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0018e385: ja 0x18e389; neg eax; ret; 
0x0018e685: ja 0x18e689; neg eax; pop ebp; ret; 
0x0018e855: ja 0x18e859; neg eax; ret; 
0x0018f33c: ja 0x18f340; neg eax; ret; 
0x0018f6b5: ja 0x18f6b9; neg eax; pop edi; pop ebx; ret; 
0x0018fc15: ja 0x18fc19; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001905ed: ja 0x1905f1; neg eax; ret; 
0x00191c66: ja 0x191c6a; neg eax; ret; 
0x00033bfc: ja 0x33c2d; stc; call dword ptr [eax - 1]; 
0x000375aa: ja 0x375ac; add byte ptr [eax], al; int 0x80; 
0x000377ca: ja 0x377d0; pop ebx; ret; 
0x00037828: ja 0x37870; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b96c: ja 0x3b9c0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003e84a: ja 0x3e86a; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0004a7c4: ja 0x4a802; mov edi, dword ptr [edi + 0x38]; ret; 
0x00054717: ja 0x54700; mov eax, ecx; pop ebx; pop esi; ret; 
0x00058479: ja 0x58480; pop ebx; ret; 
0x000584d3: ja 0x584e0; pop ebx; pop esi; pop edi; ret; 
0x0006f38b: ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x0007365d: ja 0x73631; cli; jmp dword ptr [esi - 0x70]; 
0x000759d2: ja 0x759c8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00076a8f: ja 0x76a1c; inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x0007815c: ja 0x78159; dec dword ptr [ebp - 0x682e37a]; call dword ptr [eax - 0x73]; 
0x0007f7b2: ja 0x7f7a8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00082c16: ja 0x82c20; pop ebx; pop esi; pop edi; ret; 
0x00083ce3: ja 0x83cf0; ret; 
0x0008402b: ja 0x84040; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008b319: ja 0x8b320; pop ebx; pop esi; pop edi; ret; 
0x0008cb4b: ja 0x8cb60; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008cb7b: ja 0x8cb90; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008d6e0: ja 0x8d6c8; call dword ptr [ebx + 0x50]; 
0x00091f15: ja 0x91f20; pop ebx; ret; 
0x0009246c: ja 0x92488; pop ebx; pop esi; pop edi; ret; 
0x0009258e: ja 0x92598; pop ebx; pop esi; ret; 
0x00092b1d: ja 0x92b28; pop ebx; ret; 
0x00092efd: ja 0x92f08; pop ebx; ret; 
0x0009d231: ja 0x9d210; pop ebx; pop esi; pop edi; ret; 
0x000a14f8: ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1528: ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000b26c2: ja 0xb2770; add eax, edi; add eax, ecx; pop edi; ret; 
0x000b2762: ja 0xb2770; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000b3407: ja 0xb33d8; sub eax, esi; pop ebx; pop esi; ret; 
0x000cade7: ja 0xcadf0; pop ebx; ret; 
0x000d6140: ja 0xd61d0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d6268: ja 0xd6300; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d7bd8: ja 0xd7be0; pop ebx; pop esi; ret; 
0x000dc73e: ja 0xdc780; add esp, 0x18; pop ebx; ret; 
0x000dce0e: ja 0xdce30; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000f4e96: ja 0xf4ee0; stc; call dword ptr [eax - 1]; 
0x000f9aae: ja 0xf9ab8; pop ebx; pop esi; ret; 
0x000f9b17: ja 0xf9b1f; setne al; movzx eax, al; ret; 
0x00116ebb: jae 0x116ebd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124f5e: jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x00128c21: jae 0x128c15; call dword ptr [eax - 0x73]; 
0x00128cda: jae 0x128cce; call dword ptr [eax - 0x73]; 
0x00128d97: jae 0x128d8b; call dword ptr [eax - 0x73]; 
0x0012a1e9: jae 0x12a1c0; add esp, 4; pop ebx; pop esi; ret; 
0x0012d981: jae 0x12d9b3; call eax; 
0x0012e895: jae 0x12e8a0; cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x00139f91: jae 0x139f85; call dword ptr [eax - 0x73]; 
0x0013a04a: jae 0x13a03e; call dword ptr [eax - 0x73]; 
0x0013a107: jae 0x13a0fb; call dword ptr [eax - 0x73]; 
0x0013cead: jae 0x13cec2; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00155f9e: jae 0x155fa8; push esi; call dword ptr [ebx + 0xc]; 
0x0015b8c4: jae 0x15b849; les ebx, ptr [eax]; pop ebx; ret; 
0x0015d15c: jae 0x15d1a6; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0016a9c8: jae 0x16a9b0; mov eax, 1; pop ebx; ret; 
0x0016ee29: jae 0x16ee62; int1; jmp dword ptr [ebp - 0x75]; 
0x0018eba9: jae 0x18ebb2; add byte ptr [eax], al; pop ebx; ret; 
0x001920e9: jae 0x1920ed; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0019d4a9: jae 0x19d4b9; lea esi, [esi]; nop; call dword ptr [esi]; 
0x0017a243: jae 0x1c1aa24d; mov edi, dword ptr [esi]; jmp ebx; 
0x00037791: jae 0x216d0; ret; 
0x0004a5c9: jae 0x216d0; xor eax, eax; ret; 
0x00022564: jae 0x2256a; call esi; 
0x000225be: jae 0x225c4; call esi; 
0x0002ec5b: jae 0x2ec7c; add byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x00030174: jae 0x3016f; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00033117: jae 0x33112; jmp dword ptr [esi - 0x77]; 
0x0003a074: jae 0x3a089; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x0003a886: jae 0x3a88c; call eax; 
0x0003ba22: jae 0x3ba49; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0004b278: jae 0x4b270; mov eax, edx; pop ebx; pop esi; ret; 
0x000217c8: jae 0x5e5d9492; pop edi; pop ebp; ret; 
0x0004aa18: jae 0x5e5fb6e2; pop edi; pop ebp; ret; 
0x0004ab18: jae 0x5e5fb7e2; pop edi; pop ebp; ret; 
0x0007ee00: jae 0x5e62faca; pop edi; pop ebp; ret; 
0x000dd0b0: jae 0x5e68ed7a; pop edi; pop ebp; ret; 
0x000ed76d: jae 0x5e6a1437; pop edi; pop ebp; ret; 
0x001210d0: jae 0x5e6d1d9a; pop edi; pop ebp; ret; 
0x0011cd1e: jae 0x5e6d39e8; pop edi; pop ebp; ret; 
0x0013dc0d: jae 0x5e6f28d7; pop edi; pop ebp; ret; 
0x00149908: jae 0x5e6fa5d2; pop edi; pop ebp; ret; 
0x0015f8c0: jae 0x5e70fd8a; ret; 
0x000660ef: jae 0x66db0; sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00073a24: jae 0x73a30; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00073b62: jae 0x73b70; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00075a24: jae 0x75a56; add esp, 4; pop ebx; pop esi; ret; 
0x00079910: jae 0x79926; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x00079913: jae 0x7992d; pop ebx; pop esi; pop edi; ret; 
0x00079ced: jae 0x79cfa; add byte ptr [ebp - 0x6820f7d], cl; call dword ptr [eax - 0x73]; 
0x0007a78a: jae 0x7a801; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x0007b3ac: jae 0x7b3ae; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0007b44e: jae 0x7b460; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007b48c: jae 0x7b4a0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007c5ef: jae 0x7c940; push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x0007c3be: jae 0x7c980; sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0007cf7c: jae 0x7cf88; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0007fc68: jae 0x7fd18; sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x0007ffbf: jae 0x7fff1; add esp, 4; pop ebx; pop esi; ret; 
0x000804c0: jae 0x804e0; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00083e54: jae 0x83e20; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00084260: jae 0x84266; call dword ptr [ebx]; 
0x0008b357: jae 0x8b35d; call dword ptr [ebx]; 
0x000992ee: jae 0x99310; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00099468: jae 0x9948e; call eax; 
0x00099557: jae 0x9957d; call eax; 
0x0009958e: jae 0x995a0; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x99588; xor eax, eax; ret; 
0x000995d5: jae 0x995fb; call edx; 
0x0002bfb0: jae 0xa76c3ae; add esp, 8; pop ebx; ret; 
0x000ac469: jae 0xac472; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b3623: jae 0xb3627; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b3d3c: jae 0xb3d40; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000de7aa: jae 0xde7f5; push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000fa171: jae 0xfa177; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00100e1b: jb 0x100e16; call dword ptr [eax - 0x18]; 
0x001081cd: jb 0x108152; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001106f9: jb 0x11071b; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00114e8a: jb 0x114e90; xor eax, eax; pop ebx; ret; 
0x0011d392: jb 0x11d3e5; stc; call dword ptr [eax + 0x57]; 
0x001252eb: jb 0x1252f5; seta al; movzx eax, al; neg eax; ret; 
0x00127721: jb 0x127715; call dword ptr [eax - 0x73]; 
0x001277da: jb 0x1277ce; call dword ptr [eax - 0x73]; 
0x00127897: jb 0x12788b; call dword ptr [eax - 0x73]; 
0x00129c44: jb 0x129c50; mov eax, 1; ret; 
0x00136489: jb 0x136484; call dword ptr [eax - 0x18]; 
0x00136547: jb 0x136542; call dword ptr [eax - 0x18]; 
0x0013656f: jb 0x13656a; call dword ptr [eax - 0x18]; 
0x0013659f: jb 0x13659a; call dword ptr [eax - 0x18]; 
0x001374af: jb 0x1374aa; call dword ptr [eax - 0x18]; 
0x001375a3: jb 0x13759e; call dword ptr [eax - 0x18]; 
0x00137826: jb 0x137821; call dword ptr [eax - 0x18]; 
0x00137991: jb 0x13798c; call dword ptr [eax - 0x18]; 
0x001379b5: jb 0x1379b0; call dword ptr [eax + 0x55]; 
0x00137a06: jb 0x137a01; call dword ptr [eax - 0x18]; 
0x00138907: jb 0x138902; call dword ptr [eax - 0x18]; 
0x00138bbc: jb 0x138bb7; call dword ptr [eax - 0x18]; 
0x0013b86b: jb 0x13b86b; inc dword ptr [ebp - 0x76a98740]; ret; 
0x0013e044: jb 0x13e0a3; stc; call dword ptr [ecx - 0x77]; 
0x0014218e: jb 0x142189; call dword ptr [eax - 0x18]; 
0x001421b1: jb 0x1421ac; call dword ptr [eax - 0x18]; 
0x001443b7: jb 0x1443b2; call dword ptr [eax - 0x18]; 
0x00144557: jb 0x144552; call dword ptr [eax - 0x18]; 
0x001445cc: jb 0x1445c7; call dword ptr [eax - 0x18]; 
0x001447bb: jb 0x1447b6; call dword ptr [eax - 0x18]; 
0x0014f7fd: jb 0x14f782; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0015555f: jb 0x15555a; call dword ptr [eax - 0x18]; 
0x00155aaf: jb 0x155aaa; call dword ptr [eax - 0x18]; 
0x00155c8c: jb 0x155c87; call dword ptr [eax - 0x18]; 
0x00155d88: jb 0x155d83; call dword ptr [eax - 0x18]; 
0x00155faa: jb 0x155f5c; std; jmp dword ptr [esi - 0x70]; 
0x0015762f: jb 0x15762a; call dword ptr [eax - 0x18]; 
0x0015767a: jb 0x1576a7; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001576fb: jb 0x1576f6; call dword ptr [eax - 0x18]; 
0x00157827: jb 0x157822; call dword ptr [eax - 0x18]; 
0x001578b2: jb 0x1578ad; call dword ptr [eax - 0x18]; 
0x001578df: jb 0x1578da; call dword ptr [eax - 0x18]; 
0x0015815c: jb 0x158157; call dword ptr [eax - 0x18]; 
0x0015ad72: jb 0x15ad6d; call dword ptr [eax - 0x18]; 
0x0015af3d: jb 0x15af38; call dword ptr [eax - 0x18]; 
0x0015b607: jb 0x15b602; call dword ptr [eax - 0x18]; 
0x0015b685: jb 0x15b680; call dword ptr [eax - 0x18]; 
0x0015b6d2: jb 0x15b6cd; call dword ptr [eax - 0x18]; 
0x0015c14b: jb 0x15c146; call dword ptr [eax - 0x18]; 
0x0015c552: jb 0x15c54d; call dword ptr [eax - 0x18]; 
0x0015ca42: jb 0x15ca3d; call dword ptr [eax - 0x18]; 
0x0015cbb2: jb 0x15cbad; call dword ptr [eax - 0x18]; 
0x0015d833: jb 0x15d82e; call dword ptr [eax - 0x18]; 
0x0015e5b9: jb 0x15e5b4; call dword ptr [eax - 0x18]; 
0x0015f9fa: jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0016092d: jb 0x160928; call dword ptr [eax - 0x18]; 
0x00160daf: jb 0x160daa; call dword ptr [eax - 0x18]; 
0x00160e01: jb 0x160dfc; call dword ptr [eax - 0x18]; 
0x00160e65: jb 0x160e60; call dword ptr [eax - 0x18]; 
0x00160e6a: jb 0x160e62; in al, dx; call dword ptr [eax - 0x73]; 
0x001611c9: jb 0x1611c4; call dword ptr [eax - 0x18]; 
0x00161709: jb 0x161704; call dword ptr [eax - 0x18]; 
0x00161751: jb 0x16174c; call dword ptr [eax - 0x18]; 
0x0016178f: jb 0x16178a; call dword ptr [eax - 0x18]; 
0x00161836: jb 0x161831; call dword ptr [eax - 0x18]; 
0x00161d39: jb 0x161d34; call dword ptr [eax - 0x18]; 
0x001627dd: jb 0x1627d8; call dword ptr [eax - 0x18]; 
0x00162a5d: jb 0x162a58; call dword ptr [eax - 0x18]; 
0x001632ce: jb 0x1632c9; call dword ptr [eax - 0x18]; 
0x00163a19: jb 0x163a14; call dword ptr [eax - 0x18]; 
0x00169dc7: jb 0x169dc5; jmp dword ptr [esi - 0x70]; 
0x0016b9b7: jb 0x16b9c1; seta al; movzx eax, al; neg eax; ret; 
0x0016ef65: jb 0x16ef76; xchg esp, eax; ret; 
0x0018e870: jb 0x18e880; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00192ec3: jb 0x192f00; lea eax, [edi + 0xa]; pop edi; ret; 
0x00192e05: jb 0x192f00; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192ed3: jb 0x192f00; lea eax, [edi + 0xc]; pop edi; ret; 
0x00192ee3: jb 0x192f00; lea eax, [edi + 0xd]; pop edi; ret; 
0x00192ef3: jb 0x192f00; lea eax, [edi + 0xe]; pop edi; ret; 
0x00192e2e: jb 0x192f00; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192e53: jb 0x192f00; lea eax, [edi + 1]; pop edi; ret; 
0x00192e63: jb 0x192f00; lea eax, [edi + 2]; pop edi; ret; 
0x00192d9a: jb 0x192f00; lea eax, [edi + 3]; pop edi; ret; 
0x00192e73: jb 0x192f00; lea eax, [edi + 4]; pop edi; ret; 
0x00192e83: jb 0x192f00; lea eax, [edi + 5]; pop edi; ret; 
0x00192e93: jb 0x192f00; lea eax, [edi + 6]; pop edi; ret; 
0x00192dcb: jb 0x192f00; lea eax, [edi + 7]; pop edi; ret; 
0x00192ea3: jb 0x192f00; lea eax, [edi + 8]; pop edi; ret; 
0x00192eb3: jb 0x192f00; lea eax, [edi + 9]; pop edi; ret; 
0x00193f03: jb 0x193f40; lea eax, [eax + 0xa]; pop edi; ret; 
0x00193e55: jb 0x193f40; lea eax, [eax + 0xb]; pop edi; ret; 
0x00193f13: jb 0x193f40; lea eax, [eax + 0xc]; pop edi; ret; 
0x00193f23: jb 0x193f40; lea eax, [eax + 0xd]; pop edi; ret; 
0x00193f33: jb 0x193f40; lea eax, [eax + 0xe]; pop edi; ret; 
0x00193e7e: jb 0x193f40; lea eax, [eax + 0xf]; pop edi; ret; 
0x00193e93: jb 0x193f40; lea eax, [eax + 1]; pop edi; ret; 
0x00193ea3: jb 0x193f40; lea eax, [eax + 2]; pop edi; ret; 
0x00193deb: jb 0x193f40; lea eax, [eax + 3]; pop edi; ret; 
0x00193eb3: jb 0x193f40; lea eax, [eax + 4]; pop edi; ret; 
0x00193ec3: jb 0x193f40; lea eax, [eax + 5]; pop edi; ret; 
0x00193ed3: jb 0x193f40; lea eax, [eax + 6]; pop edi; ret; 
0x00193e1e: jb 0x193f40; lea eax, [eax + 7]; pop edi; ret; 
0x00193ee3: jb 0x193f40; lea eax, [eax + 8]; pop edi; ret; 
0x00193ef3: jb 0x193f40; lea eax, [eax + 9]; pop edi; ret; 
0x00029d5b: jb 0x29d6d; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x0002c0bc: jb 0x2c0ea; stc; call dword ptr [edx + 0x50]; 
0x0002c7f3: jb 0x2c7ee; call dword ptr [eax + 0x56]; 
0x0002cf90: jb 0x2cf8b; call dword ptr [eax + 0x56]; 
0x0002f91d: jb 0x2f918; call dword ptr [eax - 0x18]; 
0x0004fa56: jb 0x4fa91; ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x00057944: jb 0x5793f; call dword ptr [eax - 0x18]; 
0x000585d4: jb 0x585de; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00058915: jb 0x58910; call dword ptr [eax - 0x18]; 
0x00058915: jb 0x58910; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x0005896f: jb 0x5896a; call dword ptr [eax - 0x18]; 
0x0007474e: jb 0x74764; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00080f20: jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x00080f92: jb 0x80f8d; call dword ptr [eax - 0x18]; 
0x00080fb2: jb 0x80ff2; stc; call dword ptr [ecx + 0x52]; 
0x00081725: jb 0x81720; call dword ptr [eax - 0x18]; 
0x000885cf: jb 0x885cb; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0009926f: jb 0x9926a; call dword ptr [eax - 0x18]; 
0x00099275: jb 0x99270; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0009a327: jb 0x9a322; call dword ptr [eax - 0x18]; 
0x0009a542: jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x0009a5a3: jb 0x9a59e; call dword ptr [eax - 0x18]; 
0x000a144e: jb 0xa1449; call dword ptr [eax - 0x18]; 
0x000ab586: jb 0xaaa68; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000c661f: jb 0xc665a; ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x000c9765: jb 0xc96f2; test byte ptr [eax + edx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000dc2bb: jb 0xdc2bd; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dc3b6: jb 0xdc3b8; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000de830: jb 0xde832; add byte ptr [ebp + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000f64fe: jb 0xf64f9; call dword ptr [eax - 0x18]; 
0x000f6672: jb 0xf666d; call dword ptr [eax - 0x18]; 
0x000f8b9d: jb 0xf8b98; call dword ptr [eax - 0x18]; 
0x000f8bed: jb 0xf8be8; call dword ptr [eax - 0x18]; 
0x000f8d34: jb 0xf8d2f; call dword ptr [eax - 0x18]; 
0x000f8dd5: jb 0xf8dd0; call dword ptr [eax - 0x18]; 
0x000f8e81: jb 0xf8e7c; call dword ptr [eax - 0x18]; 
0x000f9389: jb 0xf9384; call dword ptr [eax - 0x18]; 
0x000f9460: jb 0xf945b; call dword ptr [eax - 0x18]; 
0x000f94a3: jb 0xf949e; call dword ptr [eax - 0x18]; 
0x000f9ae7: jb 0xf9af1; setne al; movzx eax, al; neg eax; ret; 
0x000fdd53: jb 0xfdd4e; call dword ptr [eax - 0x18]; 
0x00105f0e: jbe 0x105f10; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010679e: jbe 0x1067a0; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x0010a6db: jbe 0x10a6e9; call dword ptr [esi + 0x24]; 
0x0010b6de: jbe 0x10b6ec; call dword ptr [esi + 0x24]; 
0x0011226e: jbe 0x11227c; call dword ptr [esi + 0x24]; 
0x0011328e: jbe 0x113290; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x001169a3: jbe 0x1169a5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001169cc: jbe 0x1169ce; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011bd36: jbe 0x11bd38; ret; 
0x0011c128: jbe 0x11c181; stc; call dword ptr [eax + 0x6a]; 
0x0011d02e: jbe 0x11d030; xor eax, eax; ret; 
0x0011d0d6: jbe 0x11d0d8; mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x0011fc76: jbe 0x11fc78; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x00124897: jbe 0x124860; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012a97e: jbe 0x12a980; xor eax, eax; pop ebx; ret; 
0x0012be00: jbe 0x12be59; stc; call dword ptr [eax + 0x57]; 
0x0012bef7: jbe 0x12bf50; stc; call dword ptr [eax + 0x57]; 
0x0012e94e: jbe 0x12e950; xor eax, eax; ret; 
0x0012f396: jbe 0x12f3e0; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00130ec4: jbe 0x130f18; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001310de: jbe 0x1310e0; and eax, 0xffffff; ret; 
0x0013d60e: jbe 0x13d610; mov eax, 0xffffffff; ret; 
0x0013d8a6: jbe 0x13d8a8; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0013dc46: jbe 0x13dc48; mov eax, 0xffffffff; ret; 
0x0013dc6d: jbe 0x13dc78; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0014641e: jbe 0x146420; mov eax, 0xffffffff; pop ebx; ret; 
0x00149606: jbe 0x149608; xor eax, eax; ret; 
0x00154f5e: jbe 0x154f60; endbr32; ret; 
0x00155d5e: jbe 0x155d60; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0015605f: jbe 0x156071; push ebx; call dword ptr [esi + 0x14]; 
0x001570e4: jbe 0x1570f0; mov eax, 2; pop ebx; pop esi; ret; 
0x0015739e: jbe 0x1573a0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00157416: jbe 0x157418; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001575cd: jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x00157610: jbe 0x15761e; push edi; call dword ptr [eax + 0x10]; 
0x0015fa6e: jbe 0x15fa70; mov eax, dword ptr [ebx - 0x48]; add esp, 4; pop ebx; pop esi; ret; 
0x0015fafe: jbe 0x15fb00; mov eax, dword ptr [ebx - 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016027e: jbe 0x160280; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00161f8e: jbe 0x161f90; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016207e: jbe 0x162080; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016265e: jbe 0x162660; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016349a: jbe 0x1634a8; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0016994b: jbe 0x169949; jmp dword ptr [esi - 0x70]; 
0x001699bb: jbe 0x1699b9; jmp dword ptr [esi - 0x70]; 
0x00169a60: jbe 0x1699e5; in al, dx; add al, 0x83; ret; 
0x0016a026: jbe 0x16a028; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0016b1d6: jbe 0x16b1d8; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0016cb05: jbe 0x16cb0b; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016d7a6: jbe 0x16d7e0; cld; jmp dword ptr [esi - 0x70]; 
0x0016e03e: jbe 0x16e040; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e17e: jbe 0x16e180; test al, al; jne 0x16e1a4; mov eax, 4; add esp, 0xc; ret; 
0x0016e9f2: jbe 0x16eb10; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0016f0f2: jbe 0x16f125; stc; call dword ptr [eax + 0x6a]; 
0x00170549: jbe 0x170620; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00170692: jbe 0x1706a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00188f7e: jbe 0x188f80; mov eax, 1; ja 0x188f89; neg eax; pop ebp; ret; 
0x00188ea3: jbe 0x188f93; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x00188ec3: jbe 0x188f93; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0018e67e: jbe 0x18e680; mov eax, 1; ja 0x18e689; neg eax; pop ebp; ret; 
0x00191c5e: jbe 0x191c60; pop ebx; mov eax, 1; ja 0x191c6a; neg eax; ret; 
0x001928ee: jbe 0x1928f0; and eax, 3; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928fe: jbe 0x192900; and eax, 7; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019290e: jbe 0x192910; and eax, 0x1f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019291e: jbe 0x192920; and eax, 0x3f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019292e: jbe 0x192930; and eax, 0x7f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019293e: jbe 0x192940; and eax, 0x1ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019351e: jbe 0x193520; add edx, 2; jl 0x1935d0; lea eax, [ecx + 2]; ret; 
0x0019352e: jbe 0x193530; add edx, 3; jl 0x1935d0; lea eax, [ecx + 3]; ret; 
0x0019353e: jbe 0x193540; add edx, 5; jl 0x1935d0; lea eax, [ecx + 5]; ret; 
0x0019354e: jbe 0x193550; add edx, 6; jl 0x1935d0; lea eax, [ecx + 6]; ret; 
0x0019410e: jbe 0x194110; xor eax, eax; ret; 
0x001945de: jbe 0x1945e0; pop edi; pop esi; pop ebx; ret; 
0x0002271e: jbe 0x22720; endbr32; call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002c6f1: jbe 0x2c6f7; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002ec1d: jbe 0x2ec36; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x00034d4e: jbe 0x34d50; xor eax, eax; ret; 
0x0003802e: jbe 0x38030; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000382f6: jbe 0x382f8; mov eax, 0xffffffff; ret; 
0x0003a07e: jbe 0x3a080; call dword ptr [ebx]; 
0x0003eaba: jbe 0x3eab5; call dword ptr [eax + 0x68]; 
0x0003eadd: jbe 0x3ead8; call dword ptr [eax + 0x68]; 
0x00040480: jbe 0x4047b; call dword ptr [eax - 0x73]; 
0x00040fdc: jbe 0x40fd7; call dword ptr [eax - 0x73]; 
0x00040fff: jbe 0x40ffa; call dword ptr [eax - 0x73]; 
0x00041012: jbe 0x4100d; call dword ptr [eax - 0x18]; 
0x00041022: jbe 0x4101d; call dword ptr [eax - 0x73]; 
0x00041045: jbe 0x41040; call dword ptr [eax - 0x73]; 
0x00041068: jbe 0x41063; call dword ptr [eax - 0x73]; 
0x00041092: jbe 0x4108d; call dword ptr [eax - 0x73]; 
0x000410c1: jbe 0x410bc; call dword ptr [eax - 0x73]; 
0x00041121: jbe 0x4111c; call dword ptr [eax - 0x73]; 
0x00041144: jbe 0x4113f; call dword ptr [eax - 0x73]; 
0x00041167: jbe 0x41162; call dword ptr [eax - 0x73]; 
0x0004119a: jbe 0x41195; call dword ptr [eax - 0x73]; 
0x000411bb: jbe 0x411b6; call dword ptr [eax - 0x73]; 
0x000411de: jbe 0x411d9; call dword ptr [eax - 0x73]; 
0x00041201: jbe 0x411fc; call dword ptr [eax - 0x73]; 
0x00041b2a: jbe 0x41b25; call dword ptr [eax + 0x68]; 
0x00041b4d: jbe 0x41b48; call dword ptr [eax + 0x68]; 
0x0004361f: jbe 0x4361a; call dword ptr [eax - 0x73]; 
0x000441d2: jbe 0x441cd; call dword ptr [eax - 0x73]; 
0x000441f5: jbe 0x441f0; call dword ptr [eax - 0x73]; 
0x00044218: jbe 0x44213; call dword ptr [eax - 0x73]; 
0x0004423b: jbe 0x44236; call dword ptr [eax - 0x73]; 
0x0004425e: jbe 0x44259; call dword ptr [eax - 0x73]; 
0x00044281: jbe 0x4427c; call dword ptr [eax - 0x73]; 
0x000442ab: jbe 0x442a6; call dword ptr [eax - 0x73]; 
0x000442ce: jbe 0x442c9; call dword ptr [eax - 0x73]; 
0x000442f1: jbe 0x442ec; call dword ptr [eax - 0x73]; 
0x00044314: jbe 0x4430f; call dword ptr [eax - 0x73]; 
0x00044337: jbe 0x44332; call dword ptr [eax - 0x73]; 
0x0004435a: jbe 0x44355; call dword ptr [eax - 0x73]; 
0x0004437d: jbe 0x44378; call dword ptr [eax - 0x73]; 
0x000443c5: jbe 0x443c0; call dword ptr [eax - 0x73]; 
0x000443e8: jbe 0x443e3; call dword ptr [eax - 0x73]; 
0x0004440b: jbe 0x44406; call dword ptr [eax - 0x73]; 
0x0004441e: jbe 0x44419; call dword ptr [eax - 0x18]; 
0x00044d1a: jbe 0x44d15; call dword ptr [eax + 0x68]; 
0x00044d3d: jbe 0x44d38; call dword ptr [eax + 0x68]; 
0x0004674e: jbe 0x46749; call dword ptr [eax - 0x73]; 
0x00047371: jbe 0x4736c; call dword ptr [eax - 0x73]; 
0x00047394: jbe 0x4738f; call dword ptr [eax - 0x73]; 
0x000473b7: jbe 0x473b2; call dword ptr [eax - 0x73]; 
0x000473da: jbe 0x473d5; call dword ptr [eax - 0x73]; 
0x0004742d: jbe 0x47428; call dword ptr [eax - 0x73]; 
0x00047450: jbe 0x4744b; call dword ptr [eax - 0x73]; 
0x00047473: jbe 0x4746e; call dword ptr [eax - 0x73]; 
0x00047496: jbe 0x47491; call dword ptr [eax - 0x73]; 
0x000474a9: jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x000474b9: jbe 0x474b4; call dword ptr [eax - 0x73]; 
0x000474dc: jbe 0x474d7; call dword ptr [eax - 0x73]; 
0x000474ff: jbe 0x474fa; call dword ptr [eax - 0x73]; 
0x00047522: jbe 0x4751d; call dword ptr [eax - 0x73]; 
0x00047545: jbe 0x47540; call dword ptr [eax - 0x73]; 
0x00047568: jbe 0x47563; call dword ptr [eax - 0x73]; 
0x00047592: jbe 0x4758d; call dword ptr [eax - 0x73]; 
0x0004d8aa: jbe 0x4d8a5; call dword ptr [eax + 0x68]; 
0x0004d8cd: jbe 0x4d8c8; call dword ptr [eax + 0x68]; 
0x0004fa79: jbe 0x4fa74; call dword ptr [eax - 0x73]; 
0x00050aa9: jbe 0x50aa4; call dword ptr [eax - 0x73]; 
0x00050ace: jbe 0x50ac9; call dword ptr [eax - 0x73]; 
0x00050af3: jbe 0x50aee; call dword ptr [eax - 0x73]; 
0x00050b18: jbe 0x50b13; call dword ptr [eax - 0x73]; 
0x00050b3d: jbe 0x50b38; call dword ptr [eax - 0x73]; 
0x00050b62: jbe 0x50b5d; call dword ptr [eax - 0x73]; 
0x00050bc0: jbe 0x50bbb; call dword ptr [eax - 0x73]; 
0x00050be5: jbe 0x50be0; call dword ptr [eax - 0x73]; 
0x00050bf8: jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x00050c0a: jbe 0x50c05; call dword ptr [eax - 0x73]; 
0x00050c2f: jbe 0x50c2a; call dword ptr [eax - 0x73]; 
0x00050c54: jbe 0x50c4f; call dword ptr [eax - 0x73]; 
0x00050c79: jbe 0x50c74; call dword ptr [eax - 0x73]; 
0x00050ca3: jbe 0x50c9e; call dword ptr [eax - 0x73]; 
0x00050cc8: jbe 0x50cc3; call dword ptr [eax - 0x73]; 
0x00050ced: jbe 0x50ce8; call dword ptr [eax - 0x73]; 
0x000512e2: jbe 0x5126d; ret 0x40c7; 
0x000563b2: jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x000563c5: jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x0005f90b: jbe 0x5f8df; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00066bb5: jbe 0x6777a; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006762c: jbe 0x67b48; sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000681fb: jbe 0x692c0; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00069845: jbe 0x69beb; sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00069fbb: jbe 0x69f8f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0006d3d3: jbe 0x6e500; sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0006cff3: jbe 0x6e838; sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x0006fa4b: jbe 0x6fa1f; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x0007060f: jbe 0x70780; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00070ac3: jbe 0x70b18; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00071334: jbe 0x713a0; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000718f3: jbe 0x719f0; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072161: jbe 0x7218f; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007311c: jbe 0x73161; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00073f21: jbe 0x73f40; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000741de: jbe 0x741e0; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x00075167: jbe 0x751a0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007575e: jbe 0x756d6; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x000758f8: jbe 0x75928; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00076a8e: jbe 0x76b07; mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x000774b3: jbe 0x7763b; push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x000776be: jbe 0x776c0; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00078b90: jbe 0x78d60; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000791c9: jbe 0x791cb; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00079808: jbe 0x79860; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x0007a0e6: jbe 0x7a0e9; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007a0e4: jbe 0x7a260; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007a5b6: jbe 0x7a5b8; mov edx, 1; mov eax, edx; ret; 
0x0007b4ea: jbe 0x7b510; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007b6fe: jbe 0x7b760; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0007b880: jbe 0x7b8d0; sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007ba11: jbe 0x7ba38; push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007bd15: jbe 0x7bf30; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007cb97: jbe 0x7cbb1; sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x0007cc89: jbe 0x7cd88; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0007d2ed: jbe 0x7d418; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007d493: jbe 0x7d4d0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007d57d: jbe 0x7d5f8; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007ee3c: jbe 0x7ee90; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0007eee7: jbe 0x7ef10; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007f1dd: jbe 0x7f288; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007f6d6: jbe 0x7f700; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000802de: jbe 0x802e0; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00082bae: jbe 0x82bb0; add esp, 4; pop ebx; pop esi; ret; 
0x00083b0e: jbe 0x83b10; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00083ba4: jbe 0x83bb0; ret; 
0x00083bde: jbe 0x83be0; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00083cee: jbe 0x83cf0; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00083f04: jbe 0x83f3f; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008403e: jbe 0x84040; mov eax, 0x16; ret; 
0x0008425a: jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00085b0e: jbe 0x85b10; mov eax, 0x16; ret; 
0x000872ac: jbe 0x872b8; pop ebx; neg eax; pop esi; pop edi; ret; 
0x00087315: jbe 0x87320; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x000877a6: jbe 0x877a8; mov eax, 3; ret; 
0x0008a196: jbe 0x8a198; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0008cb5e: jbe 0x8cb60; mov eax, 0x16; ret; 
0x0008de0e: jbe 0x8de10; mov dword ptr [eax + 4], edx; ret; 
0x0009364a: jbe 0x93650; ret; 
0x0009368e: jbe 0x93690; mov dword ptr [edx + 0x204], eax; ret; 
0x0009368a: jbe 0x93690; ret; 
0x000936d8: jbe 0x936e0; ret; 
0x00094e3e: jbe 0x94e40; xor eax, eax; ret; 
0x0009794e: jbe 0x97950; ret; 
0x0009cfca: jbe 0x9cfe1; pop ebx; pop esi; pop edi; ret; 
0x000a2e1e: jbe 0xa2e20; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a2e8e: jbe 0xa2e90; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a4d5e: jbe 0xa4d60; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a70ce: jbe 0xa70d0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a736e: jbe 0xa7370; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a91be: jbe 0xa91c0; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000aa47e: jbe 0xaa480; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000ab39e: jbe 0xab3a0; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab46e: jbe 0xab470; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab62e: jbe 0xab630; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000ab96e: jbe 0xab970; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000acabe: jbe 0xacac0; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000acb8e: jbe 0xacb90; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000acd5e: jbe 0xacd60; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000b214a: jbe 0xb214e; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b260e: jbe 0xb2610; pop ebx; pop esi; ret; 
0x000b294e: jbe 0xb2950; xor eax, eax; pop edi; ret; 
0x000b29b2: jbe 0xb29e0; add eax, ecx; ret; 
0x000b2c85: jbe 0xb2cc0; add eax, edi; pop edi; ret; 
0x000b2c98: jbe 0xb2cc0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2ca8: jbe 0xb2cc0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2cb8: jbe 0xb2cc0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b2f1e: jbe 0xb2f20; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b334e: jbe 0xb3350; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b48be: jbe 0xb48c0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000b48ce: jbe 0xb48d0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b48de: jbe 0xb48e0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b48ee: jbe 0xb48f0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b48fe: jbe 0xb4900; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b490e: jbe 0xb4910; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b491e: jbe 0xb4920; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b492e: jbe 0xb4930; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b493e: jbe 0xb4940; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b494e: jbe 0xb4950; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b495e: jbe 0xb4960; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b496e: jbe 0xb4970; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b497e: jbe 0xb4980; mov eax, 0xffffffff; ret; 
0x000b53db: jbe 0xb53e5; call ebx; 
0x000b83aa: jbe 0xb83a5; call dword ptr [eax + 0x68]; 
0x000b83cd: jbe 0xb83c8; call dword ptr [eax + 0x68]; 
0x000ba92e: jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000ba98b: jbe 0xba986; call dword ptr [eax - 0x73]; 
0x000bb302: jbe 0xbb2fd; call dword ptr [eax + 0x68]; 
0x000bb325: jbe 0xbb320; call dword ptr [eax + 0x68]; 
0x000bd74a: jbe 0xbd745; call dword ptr [eax - 0x73]; 
0x000bd7cd: jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000bdfda: jbe 0xbdfd5; call dword ptr [eax + 0x68]; 
0x000bdffd: jbe 0xbdff8; call dword ptr [eax + 0x68]; 
0x000c02ec: jbe 0xc02e7; call dword ptr [eax - 0x73]; 
0x000c0423: jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x000c4ab2: jbe 0xc4aad; call dword ptr [eax + 0x68]; 
0x000c4ad5: jbe 0xc4ad0; call dword ptr [eax + 0x68]; 
0x000c7a04: jbe 0xc79ff; call dword ptr [eax - 0x73]; 
0x000c7b3e: jbe 0xc7b39; call dword ptr [eax - 0x18]; 
0x000c8c6e: jbe 0xc8c70; mov eax, 2; ret; 
0x000c8c7e: jbe 0xc8c80; mov eax, 3; ret; 
0x000c8c8e: jbe 0xc8c90; mov eax, 4; ret; 
0x000c8c9e: jbe 0xc8ca0; mov eax, 5; ret; 
0x000c8cae: jbe 0xc8cb0; mov eax, 6; ret; 
0x000c8cbe: jbe 0xc8cc0; mov eax, 7; ret; 
0x000cda6c: jbe 0xcda78; mov eax, edx; ret; 
0x000d5dfe: jbe 0xd5e00; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000d5ebe: jbe 0xd5ec0; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d74ae: jbe 0xd74b0; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000dcdfe: jbe 0xdce00; mov eax, edx; call dword ptr gs:[0x10]; 
0x000dfdbe: jbe 0xdfdc0; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000e7e4e: jbe 0xe7e50; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x000e7e5e: jbe 0xe7e60; xor eax, eax; pop ebx; pop esi; ret; 
0x000f730e: jbe 0xf7310; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000f821c: jbe 0xf8211; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000f9976: jbe 0xf9978; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0010267c: je 0x1026a4; add byte ptr [eax + 0x9b85b], dl; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00102a4e: je 0x102a74; sub al, 0xe8; jp 0x102a5d; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0010309c: je 0x1030c4; add byte ptr [eax - 0x74fbac75], dl; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x0010352e: je 0x103546; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001042ba: je 0x1042ca; sub esp, 8; push eax; push edi; call esi; 
0x00106a2a: je 0x106a3a; sub esp, 8; push eax; push edi; call esi; 
0x00106ca8: je 0x106cce; sub al, 0xe8; jo 0x106cb9; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00106cda: je 0x106d00; sbb byte ptr [edx - 0x64], ch; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d6d: je 0x106d93; sbb byte ptr [edx - 0x64], ch; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d8e: je 0x106db4; sbb byte ptr [edx - 0x64], ch; call 0x107160; add esp, 0x1c; ret; 
0x00106de6: je 0x106e43; pop esi; ret; 
0x00106ecf: je 0x106f2c; pop esi; ret; 
0x00106f21: je 0x106f47; sbb byte ptr [edx - 0x64], ch; call 0x107160; add esp, 0x1c; ret; 
0x00106f79: je 0x106fd6; pop esi; ret; 
0x00107500: je 0x10755d; pop esi; ret; 
0x00107804: je 0x10782a; sub byte ptr [edx - 0x64], ch; call 0x107820; add esp, 0x2c; ret; 
0x00107e21: je 0x107e47; sbb byte ptr [edx - 0x64], ch; call 0x107e30; add esp, 0x1c; ret; 
0x00108b45: je 0x108b6d; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00108e50: je 0x108e76; sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010924c: je 0x109274; add byte ptr [eax - 0x8767418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x00109616: je 0x10963c; xor byte ptr [ebp - 0x6b5977a], cl; call dword ptr [eax - 0x18]; 
0x00109fbd: je 0x109fe5; add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x77]; 
0x0010ac37: je 0x10ac5d; xor bh, bh; jne 0x10ac49; call dword ptr [ebp + 0x24]; 
0x0010ac8d: je 0x10acb3; cmp al, 0xe8; mov ecx, eax; cld; jmp dword ptr [ebp - 0x77]; 
0x0010af0f: je 0x10af35; xor bh, bh; jne 0x10af21; call dword ptr [ebp + 0x24]; 
0x0010af80: je 0x10afa6; xor bh, bh; jne 0x10af92; call dword ptr [ebp + 0x24]; 
0x0010bc67: je 0x10bc8d; xor bh, bh; jne 0x10bc79; call dword ptr [ebp + 0x24]; 
0x0010bf3f: je 0x10bf65; xor bh, bh; jne 0x10bf51; call dword ptr [ebp + 0x24]; 
0x0010bfb0: je 0x10bfd6; xor bh, bh; jne 0x10bfc2; call dword ptr [ebp + 0x24]; 
0x0010f8a1: je 0x10f8c7; add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x0010f999: je 0x10f9bf; add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x0010fa85: je 0x10faab; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x001102af: je 0x1102d5; pop esp; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102a8: je 0x110300; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00110354: je 0x11037a; pop esp; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001106a2: je 0x1106b8; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00110837: je 0x110894; pop esi; ret; 
0x001127e7: je 0x11280d; xor bh, bh; jne 0x1127f9; call dword ptr [ebp + 0x24]; 
0x00112abf: je 0x112ae5; xor bh, bh; jne 0x112ad1; call dword ptr [ebp + 0x24]; 
0x00112b30: je 0x112b56; xor bh, bh; jne 0x112b42; call dword ptr [ebp + 0x24]; 
0x0011339d: je 0x1133c5; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x001138cb: je 0x113900; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011397b: je 0x1139b0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00113a29: je 0x113a50; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00113aa9: je 0x113ad0; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00113b29: je 0x113b50; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113ba9: je 0x113bd0; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001142c7: je 0x1142ed; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001144f1: je 0x114517; sbb al, 0xe8; ja 0x114501; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00114c91: je 0x114cb7; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x001159da: je 0x115a00; and al, 0xe8; pop esi; ret 0xfff6; 
0x00115cca: je 0x115cf8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d6a: je 0x115d98; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00115e16: je 0x115e48; mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee6: je 0x115f18; mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115f9a: je 0x115f9d; ret; 
0x001169bc: je 0x1169e4; add byte ptr [eax - 0x94de418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x00116a8c: je 0x116ab4; add byte ptr [eax - 0x94eb418], dl; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x00116f8a: je 0x116fb0; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x00117033: je 0x117059; sbb al, 0xe8; xor eax, 0x83fff410; les edx, ptr [eax]; add esp, 0xc; ret; 
0x001170e5: je 0x11710d; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00117435: je 0x11745d; add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x00117505: je 0x11752d; add byte ptr [ebx - 0x7c72f714], al; dec eax; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x00117d4c: je 0x117d60; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00118538: je 0x11853d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0011855f: je 0x118564; mov dword ptr [edx + 4], eax; test eax, eax; je 0x11856a; mov dword ptr [eax], edx; ret; 
0x00118566: je 0x11856a; mov dword ptr [eax], edx; ret; 
0x0011a395: je 0x11a3bb; and byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0011a95b: je 0x11a981; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x0011ac63: je 0x11ac89; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0011aee4: je 0x11aef0; pop ebx; pop esi; pop edi; ret; 
0x0011b1e7: je 0x11b220; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011b267: je 0x11b2a0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011b668: je 0x11b688; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0011bcde: je 0x11bce4; test edx, edx; jne 0x11bce8; ret; 
0x0011bd02: je 0x11bd08; test edx, edx; jne 0x11bd10; ret; 
0x0011c00e: je 0x11c034; sbb al, 0xe8; mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x0011c0c2: je 0x11c0e8; sbb al, 0xff; je 0x11c0ec; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011c0c6: je 0x11c0ec; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011c278: je 0x11c2c0; call eax; 
0x0011c3ba: je 0x11c458; call eax; 
0x0011c78b: je 0x11c7be; add dword ptr [ebx + 0x39142454], ecx; ret 0x1a77; 
0x0011c97e: je 0x11c988; add esp, 0xc; ret; 
0x0011d0a8: je 0x11d0b8; cmp ecx, edx; jne 0x11d0a0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011d0fc: je 0x11d122; adc al, 0xf; xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x0011e795: je 0x11e7bd; add byte ptr [edi + 0x452083], al; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x0011e831: je 0x11e7d4; stc; call dword ptr [eax - 0x18]; 
0x0011ead8: je 0x11eafe; sbb byte ptr [edx], ch; call 0x1200a0; add esp, 0x1c; ret; 
0x0011ed83: je 0x11ed86; ret; 
0x0011f534: je 0x11f55a; cmp al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f604: je 0x11f62a; cmp al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f6d4: je 0x11f6fa; cmp al, 0xb8; cmp al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f92b: je 0x11f960; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0011f954: je 0x11f9a4; pop ebx; pop esi; ret; 
0x0011f9e5: je 0x11fa00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0011fd23: je 0x11fd80; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00120739: je 0x120770; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208b9: je 0x1208f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x00121066: je 0x121071; pop esi; pop ebx; jl 0x216d0; ret; 
0x00121054: je 0x12107a; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012166b: je 0x12166d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121a97: je 0x121abd; and byte ptr [ebp - 0x6aa317a], cl; call dword ptr [eax - 0x18]; 
0x00121b3c: je 0x121b64; add byte ptr [eax - 0x7c76f373], dl; ret 0x8d01; 
0x001223fa: je 0x122420; add al, 0x89; loope 0x122389; ret 0x448b; 
0x00122b09: je 0x122b66; pop esi; ret; 
0x00122f84: je 0x122f3b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x001231dd: je 0x123205; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0012340a: je 0x123430; push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00123db3: je 0x123e08; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00123f70: je 0x123f96; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124480: je 0x124488; ret; 
0x00124484: je 0x1244ac; add byte ptr [eax + 0xc24448b], dl; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00124752: je 0x12476f; lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x001248d4: je 0x1248fc; add byte ptr [eax + 0x92b8], dl; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x00124d66: je 0x124d78; mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00124dd0: je 0x124dd4; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00125c6c: je 0x125c94; add byte ptr [eax + 0x3130ea83], dl; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012767d: je 0x1276a5; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x00127f8f: je 0x127fa6; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00129ad4: je 0x129afa; add al, 0x89; inc edi; adc al, 0x29; ret; 
0x0012a026: je 0x12a04c; and byte ptr [edi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012a10b: je 0x12a0f8; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0012a484: je 0x12a4aa; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012a58f: je 0x12a5b5; sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x0012a8fe: je 0x12a908; xor eax, eax; pop ebx; ret; 
0x0012d961: je 0x12d970; add esp, 8; pop ebx; ret; 
0x0012d97a: je 0x12d9a0; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0012e943: je 0x12e958; ret; 
0x0012e9f5: je 0x12ea1d; add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0012f282: je 0x12f29a; lea eax, [edx - 0xae430]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x0012f392: je 0x12f3b8; sbb al, 0xe8; jbe 0x12f3e0; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0012f607: je 0x12f62d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0012ff45: je 0x12ff50; add esp, 8; pop ebx; ret; 
0x0012ff4d: je 0x12ff75; add byte ptr [ebx - 0x1336d], cl; jmp dword ptr [ebp - 0x7d]; 
0x00130249: je 0x13026f; sbb al, 0xe8; mov edi, 0x83fff839; les ebx, ptr [eax]; pop ebx; ret; 
0x00130384: je 0x1303ac; add byte ptr [eax - 0xa8c18], dl; jmp dword ptr [esi - 0x70]; 
0x001303f5: je 0x13041d; add byte ptr [ebx - 0x7cefdbbc], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00130594: je 0x1305bc; add byte ptr [eax - 0xc9c18], dl; jmp dword ptr [esi - 0x70]; 
0x001305c7: je 0x1305ed; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x0013063c: je 0x130664; add byte ptr [eax - 0xd4418], dl; jmp dword ptr [esi - 0x70]; 
0x00133872: je 0x133898; sub byte ptr [ebx - 0x17cfdba4], cl; ret 0xeec8; 
0x001356e8: je 0x1356dc; call dword ptr [eax - 0x73]; 
0x001357aa: je 0x13579e; call dword ptr [eax - 0x73]; 
0x0013586c: je 0x135860; call dword ptr [eax - 0x73]; 
0x0013777f: je 0x1377a5; or al, 0x89; ret; 
0x00137fc5: je 0x137fed; add byte ptr [ebx - 0x7972f314], al; cmc; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00139225: je 0x139230; sub esp, 0xc; push esi; call eax; 
0x00139585: je 0x139590; sub esp, 0xc; push esi; call eax; 
0x00139741: je 0x139767; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00139745: je 0x13976b; pop eax; push esi; call edi; 
0x00139aca: je 0x139add; sub esp, 0xc; push eax; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00139dca: je 0x139c45; sub esp, 0xc; push ebx; call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x0013a835: je 0x13a85d; add byte ptr [ebp - 0x4374b], cl; jmp dword ptr [esi - 0x70]; 
0x0013b74a: je 0x13b6cf; ret 0x8303; 
0x0013cafa: je 0x13caf0; add esp, 8; pop ebx; ret; 
0x0013d9a5: je 0x13d9cb; sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x0013f42c: je 0x13f438; add esp, 8; pop ebx; ret; 
0x0013f434: je 0x13f45c; add byte ptr [eax - 0x7cfffc3a], dl; les ecx, ptr [eax]; pop ebx; ret; 
0x0013ffa2: je 0x13ffc8; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x001402a9: je 0x1402cf; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x00140bdd: je 0x140c05; add byte ptr [ebx - 0x1137a], cl; jmp dword ptr [ebp - 0x39]; 
0x00144063: je 0x144089; adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x001442c8: je 0x1442d8; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001445bf: je 0x1445e5; or al, 0x8d; xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00144f29: je 0x144f16; or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x001462bf: je 0x1462e5; xor al, 0x89; ret; 
0x00146664: je 0x14668c; add byte ptr [eax - 0x48], dl; call ptr [ebx + 0x5e]; pop edi; ret; 
0x00146ffd: je 0x147025; add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x001477f5: je 0x14781b; sbb al, 0xe8; ret; 
0x0014796c: je 0x147978; pop ebx; pop esi; ret; 
0x00149558: je 0x149560; add esp, 8; pop ebx; ret; 
0x001495fc: je 0x149630; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x00149b2b: je 0x149b2b; dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x0014a62b: je 0x14a637; add dword ptr [eax + 8], 1; je 0x14a656; add esp, 0xc; ret; 
0x0014a631: je 0x14a656; add esp, 0xc; ret; 
0x0014af35: je 0x14af3c; cmp dword ptr [eax + 8], edx; jne 0x14af30; ret; 
0x0014b348: je 0x14b38f; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014c16d: je 0x14c193; sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014c173: je 0x14c199; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0014c4c5: je 0x14c4ed; add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x0014cdb9: je 0x14cda0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0014e09d: je 0x14e0b0; xor ecx, ecx; cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x0014e307: je 0x14e36c; mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0014eef6: je 0x14ef1c; and al, 0xe8; push edx; push ss; bnd jmp dword ptr [ebp - 0x77]; 
0x0014efaa: je 0x14efd0; adc byte ptr [ebp - 0x6d5a47a], cl; call dword ptr [eax + 0x53]; 
0x0014f43a: je 0x14f3ea; stc; call dword ptr [eax - 0x73]; 
0x0014f3f6: je 0x14f41c; and al, 0xe8; push edx; adc edx, esi; jmp dword ptr [ebp - 0x77]; 
0x0014f458: je 0x14f47e; or byte ptr [ebp - 0x6516f7a], cl; call dword ptr [eax - 0x73]; 
0x0015119c: je 0x1511c2; sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1511cc; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x001511a4: je 0x1511cc; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x00151775: je 0x15179b; and al, 0xe8; ret; 
0x001518b9: je 0x1518df; cmp al, 0x89; ret; 
0x00151a0c: je 0x151a32; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x00153f81: je 0x153fa7; adc byte ptr [ebx - 0x17d3dba4], cl; ret; 
0x00154b48: je 0x154b6e; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0015503c: je 0x155047; sub esp, 0xc; push esi; call eax; 
0x0015527d: je 0x1552a5; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x00155287: je 0x1552ad; adc al, 0x56; call dword ptr [eax + 4]; 
0x001552b6: je 0x1552dc; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001552c5: je 0x1553ad; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0015550a: je 0x155515; sub esp, 0xc; push esi; call eax; 
0x001554ed: je 0x155550; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0015563a: je 0x15564f; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x001556f0: je 0x155716; adc al, 0xff; je 0x15571a; je 0x155748; call dword ptr [ecx]; 
0x001556f4: je 0x15571a; je 0x155748; call dword ptr [ecx]; 
0x001556f6: je 0x155748; call dword ptr [ecx]; 
0x001557e7: je 0x1557f6; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0015582b: je 0x155838; add esp, 8; pop ebx; ret; 
0x001558a8: je 0x155861; std; jmp dword ptr [esi - 0x70]; 
0x00155f38: je 0x155f5e; and byte ptr [ebp - 0xc3f6f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0015604e: je 0x155fdd; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0015606a: je 0x155fdd; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001561be: je 0x1561e4; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001564f6: je 0x1564a1; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00156519: je 0x156524; sub esp, 0xc; push esi; call eax; 
0x001567e1: je 0x15666a; sub esp, 0xc; push edi; call eax; 
0x001567c8: je 0x1567ee; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00156875: je 0x15689b; and al, 0x8b; inc esp; and al, 0x34; call eax; 
0x001568c2: je 0x1568cd; sub esp, 0xc; push edi; call eax; 
0x001568a9: je 0x1568cf; and byte ptr [edi - 0x75], dl; inc esp; and al, 0x2c; call eax; 
0x00156918: je 0x156928; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00156b43: je 0x156b50; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00156be2: je 0x156c00; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00156c0a: je 0x156c20; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156c75: je 0x156c9d; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0015716c: je 0x157192; or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x001571a4: je 0x1571af; sub esp, 0xc; push edi; call eax; 
0x001573f8: je 0x157418; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x001575d8: je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015793d: je 0x157970; mov eax, ecx; pop ebx; ret; 
0x001579b1: je 0x157a00; add esp, 8; mov eax, edx; pop ebx; ret; 
0x001579df: je 0x157a05; sbb al, 0x53; call dword ptr [eax]; 
0x001579d6: je 0x157a19; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00157a2f: je 0x157a55; sbb al, 0x53; call dword ptr [eax + 4]; 
0x00157c43: je 0x157c50; add esp, 4; pop ebx; pop esi; ret; 
0x001585e8: je 0x1585f8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00159308: je 0x159310; add esp, 4; pop ebx; pop esi; ret; 
0x001593d8: je 0x1593e0; add esp, 4; pop ebx; pop esi; ret; 
0x00159498: je 0x1594a0; add esp, 4; pop ebx; pop esi; ret; 
0x001597a2: je 0x1597c8; adc byte ptr [ecx - 0x59b1739], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x0015a23b: je 0x15a24c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015a4c7: je 0x15a4ed; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0015a519: je 0x15a53f; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015a768: je 0x15a78e; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015a8dd: je 0x15a905; add byte ptr [ecx], ch; ret; 
0x0015ac1f: je 0x15ac2a; sub esp, 0xc; push esi; call eax; 
0x0015abf8: je 0x15ad30; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0015ae4c: je 0x15ae5a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0015c168: je 0x15c173; sub esp, 0xc; push esi; call eax; 
0x0015c324: je 0x15c32f; sub esp, 0xc; push edi; call eax; 
0x0015cca8: je 0x15ccce; sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0015d15f: je 0x15d185; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0015d1ae: je 0x15d1d4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015d3d0: je 0x15d3f6; inc esp; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015d6de: je 0x15d6d3; call dword ptr [eax - 0x73]; 
0x0015d6cd: je 0x15d6d8; sub esp, 0xc; push ebp; call eax; 
0x0015d6e5: je 0x15d6da; call dword ptr [eax + 0x57]; 
0x0015d6af: je 0x15d7b8; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0015da98: je 0x15daa6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0015dc7a: je 0x15dca0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0015dc89: je 0x15e27f; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0015e4bb: je 0x15e520; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0015ea3d: je 0x15ea63; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x0015eb98: je 0x15ebf5; pop edi; ret; 
0x0015f0fd: je 0x15f10e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0015f1c5: je 0x15f178; stc; call dword ptr [ebx - 1]; 
0x0015f2f3: je 0x15f2a6; stc; call dword ptr [eax - 0x73]; 
0x0015f8bf: je 0x15f8d0; add esp, 4; pop ebx; pop esi; ret; 
0x0015f939: je 0x15f948; add esp, 4; pop ebx; pop esi; ret; 
0x0015f9c9: je 0x15f9d8; add esp, 4; sub eax, -0x80; pop ebx; pop esi; ret; 
0x0015f9d5: je 0x15f9fd; add byte ptr [ebx - 0xcb7d], cl; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0015f9e5: je 0x15fa0d; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [edi - 0x72af000d]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0015fa59: je 0x15fa70; add esp, 4; add eax, 0x90; pop ebx; pop esi; ret; 
0x0015fae9: je 0x15fb00; add esp, 4; add eax, 0x94; pop ebx; pop esi; ret; 
0x0015fca6: je 0x15fcb0; pop ebx; pop esi; pop edi; ret; 
0x00160287: je 0x1602ad; adc al, 0x53; call dword ptr [eax]; 
0x001603b2: je 0x1603d8; sbb al, 0x53; call eax; 
0x00160476: je 0x16049c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00160718: je 0x160730; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x0016083c: je 0x16084a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00160f55: je 0x160f63; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00160fd7: je 0x161010; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00161d2c: je 0x161d52; adc byte ptr [ebp - 0x69c1f7a], cl; call dword ptr [eax - 0x73]; 
0x00161df3: je 0x161e10; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00161e8c: je 0x161eb6; stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00161f65: je 0x161f90; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00162055: je 0x162080; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00162635: je 0x162660; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00162cdd: je 0x162d10; mov eax, ecx; pop ebx; ret; 
0x00162d4d: je 0x162d80; mov eax, ecx; pop ebx; ret; 
0x0016326b: je 0x163291; xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001639ce: je 0x1639f4; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x001640d7: je 0x1640fd; xor byte ptr [ecx], ch; ret 0x5356; 
0x001646d4: je 0x1646fa; cmp byte ptr [ebp - 0x64c777a], cl; call dword ptr [eax - 0x73]; 
0x00164797: je 0x1647bd; xor byte ptr [ecx], ch; ret 0x5356; 
0x001666b2: je 0x1666d8; sbb bh, bh; je 0x1666dc; and al, ch; ret 0x13; 
0x001666b6: je 0x1666dc; and al, ch; ret 0x13; 
0x0016722d: je 0x167255; add byte ptr [ebx + 0x2901106d], al; ret; 
0x0016797c: je 0x1679a4; add byte ptr [eax - 0x76efbd75], dl; ret 0xf839; 
0x0016887d: je 0x1688a5; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00169892: je 0x1698b8; sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x0016abf6: je 0x16ac1c; and al, 0x8b; push esp; and al, 0x24; call edx; 
0x0016ac53: je 0x16ac79; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0016b134: je 0x16b15c; add byte ptr [eax - 0x74f7137d], dl; and dword ptr [eax + 0x51000003], 0x52; call dword ptr [eax + 0x24]; 
0x0016bebd: je 0x16bee5; add byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x0016cced: je 0x16cd15; add dh, dh; ret; 
0x0016ce10: je 0x16ce36; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x0016dc25: je 0x16dc8d; stc; call dword ptr [eax - 0x18]; 
0x0016e16a: je 0x16e184; cmp al, 4; jne 0x21302; mov eax, 8; add esp, 0xc; ret; 
0x0016e61c: je 0x16e644; add byte ptr [eax - 0x77c2dcf], dl; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x0016e651: je 0x16e66b; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0016e6b5: je 0x16e6c3; lea edx, [ebx - 0x1ba0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0016e732: je 0x16e740; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0016f052: je 0x16f060; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0016f77f: je 0x16f7a5; or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x001701d1: je 0x1701e0; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00170257: je 0x170270; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x001703dd: je 0x170405; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x7d]; 
0x00170474: je 0x170480; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017047d: je 0x1704a5; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x7d]; 
0x0017094f: je 0x170942; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00170fa4: je 0x170fca; sbb al, 0xe8; test byte ptr [esi - 0x2708000a], ah; sbb eax, eax; add esp, 0x1c; ret; 
0x00176b7c: je 0x176ba2; sub al, 0xe8; fdivr qword ptr [edi - 0x27080005]; sbb eax, eax; add esp, 0x2c; ret; 
0x00176bae: je 0x176bd4; sub al, 0xff; je 0x176bd8; sub al, 0xe8; push esi; ret 0xfffb; 
0x00176bb2: je 0x176bd8; sub al, 0xe8; push esi; ret 0xfffb; 
0x00176dc4: je 0x176dea; sbb al, 0xe8; inc esp; ljmp 0xc019:0xd8f7fffb; add esp, 0x1c; ret; 
0x00177ddc: je 0x177de0; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017832c: je 0x178330; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x0018768c: je 0x1876b4; add byte ptr [eax + 0xf08b60f], dl; mov dh, 2; sub eax, ecx; ret; 
0x001876ac: je 0x1876d4; add byte ptr [eax + 0x248b60f], dl; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001876bc: je 0x1876e4; add byte ptr [eax + 0x348b60f], dl; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001876cc: je 0x1876f4; add byte ptr [eax + 0x448b60f], dl; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001876dc: je 0x187704; add byte ptr [eax + 0x548b60f], dl; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001876ec: je 0x187714; add byte ptr [eax + 0x648b60f], dl; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x001876fc: je 0x187724; add byte ptr [eax - 0x7cf73f7d], dl; ret 0xf608; 
0x0018773c: je 0x187764; add byte ptr [eax + 0x1b8], dl; add byte ptr [edi + 2], dh; neg eax; ret; 
0x0018de4c: je 0x18de74; add byte ptr [eax - 0x7cf73f7d], dl; ret 0x8308; 
0x0018e84d: je 0x18e860; pop ebx; mov eax, 1; ja 0x18e859; neg eax; ret; 
0x0018e86c: je 0x18e894; add byte ptr [eax - 0x49f0f18e], dl; add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x0018f04c: je 0x18f074; add byte ptr [eax + 0x486f0ff3], dl; ret; 
0x001901ad: je 0x1901d5; add byte ptr [ebx + 0x31], bl; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00190264: je 0x190280; mov eax, 1; jg 0x190270; neg eax; ret; 
0x001905e6: je 0x190600; mov eax, 1; ja 0x1905f1; neg eax; ret; 
0x0019228c: je 0x1922b4; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00192cbc: je 0x192ce4; add byte ptr [eax + 0x5f01478d], dl; ret; 
0x00193142: je 0x19314d; pmovmskb eax, xmm1; test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x00193652: je 0x1936b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00193f97: je 0x19409a; mov eax, 4; pop edi; ret; 
0x00193ff0: je 0x1940ae; mov eax, 8; pop edi; ret; 
0x00194040: je 0x1940c2; mov eax, 0xc; pop edi; ret; 
0x00194072: je 0x1940d6; cmp byte ptr [edx + 0xf], 0; je 0x1940d6; mov eax, 0x10; pop edi; ret; 
0x00194078: je 0x1940d6; mov eax, 0x10; pop edi; ret; 
0x00194872: je 0x194880; test al, 1; jne 0x194890; lea eax, [ecx + 4]; ret; 
0x0019487d: je 0x1948a5; add dh, dh; les eax, ptr [ecx]; jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x00194a5c: je 0x1949f4; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194b20: je 0x194b00; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194b33: je 0x194b00; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194b1b: je 0x194b30; and eax, 1; je 0x194b00; lea eax, [edi - 0x10]; pop edi; ret; 
0x001951fe: je 0x195210; mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x0019520c: je 0x195234; add byte ptr [eax - 0x2d43f00d], dl; mov eax, 0x20; add eax, edx; ret; 
0x0019553d: je 0x195563; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00195543: je 0x195569; or al, 9; ret; 
0x00198a94: je 0x198aba; or al, 0xf; xchg ebp, eax; ret 0xc208; 
0x00198d36: je 0x198d5c; or al, 0xb; je 0x198d60; add al, 0xf; xchg esp, eax; ret; 
0x00198d3a: je 0x198d60; add al, 0xf; xchg esp, eax; ret; 
0x0019a72a: je 0x19a750; adc byte ptr [ecx], cl; ret; 
0x0019bea0: je 0x19bec6; and al, 9; ret 0xe889; 
0x0019cb49: je 0x19cb55; fld1; fdiv dword ptr [edx - 0x62764]; fstp st(0); add esp, 0x20; ret; 
0x0019ce6d: je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x0019cfbd: je 0x19cfcc; sub esp, 0xc; push eax; call edx; 
0x00020f45: je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000213c0: je 0x213d9; lea edx, [eax - 0x1aad40]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00021416: je 0x21419; ret; 
0x00021510: je 0x21536; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00021616: je 0x2163c; inc eax; call eax; 
0x00021674: je 0x2169a; or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021679: je 0x2169f; inc eax; call dword ptr [ebp]; 
0x00021fa0: je 0x21fc6; add al, 0x8d; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x0002255b: je 0x22581; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00022560: je 0x22586; xor bh, bh; jae 0x2256a; call esi; 
0x00022792: je 0x227a7; sub esp, 0xc; push esi; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x000236c5: je 0x236da; sub esp, 0xc; push edi; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x000249db: je 0x24a01; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000249df: je 0x24a05; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000249e3: je 0x24a09; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00024eeb: je 0x24f11; jo 0x24eee; aad 0x89; ret 0xc483; 
0x0002501d: je 0x25045; add byte ptr [ebx - 0x7bf0fb07], al; hlt; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0002552e: je 0x25554; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025532: je 0x25558; pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025536: je 0x2555c; mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x00025af1: je 0x25b17; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025af5: je 0x25b1b; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025af9: je 0x25b1f; pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00025e24: je 0x25e4a; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025eb9: je 0x25edf; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025f15: je 0x25f3b; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00025f38: je 0x25f5e; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025f5b: je 0x25f81; cmp al, 0x8d; xchg byte ptr [ecx + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x00025f7e: je 0x25fa4; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00026180: je 0x261a6; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x00026184: je 0x261aa; pop esp; call edi; 
0x000262ff: je 0x26325; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026419: je 0x2643f; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026473: je 0x26499; cmp al, 0x8d; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x00026672: je 0x26698; push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026676: je 0x2669c; push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000267b0: je 0x267d6; xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x00026f7e: je 0x26fef; stc; call dword ptr [eax - 0x18]; 
0x0002717b: je 0x271a1; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002717f: je 0x271a5; pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000279fb: je 0x27a6c; stc; call dword ptr [eax - 0x18]; 
0x00027e43: je 0x27e69; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x6c]; call esi; 
0x00027e47: je 0x27e6d; insb byte ptr es:[edi], dx; call esi; 
0x00027f71: je 0x27f97; sbb al, 0x89; ret 0xb60f; 
0x00028bd9: je 0x28bff; pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x00028bdd: je 0x28c03; pop esp; call esi; 
0x000291e4: je 0x29255; stc; call dword ptr [eax - 0x18]; 
0x000293d3: je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x00029d77: je 0x29de8; stc; call dword ptr [eax - 0x18]; 
0x00029f87: je 0x29fad; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00029f8b: je 0x29fb1; pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002a5cf: je 0x2a640; stc; call dword ptr [eax - 0x18]; 
0x0002a7cb: je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002b168: je 0x2b1d9; stc; call dword ptr [eax - 0x18]; 
0x0002b402: je 0x2b428; pop eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0002b406: je 0x2b42c; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b40a: je 0x2b430; push eax; call esi; 
0x0002b52e: je 0x2b554; push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b532: je 0x2b558; push eax; call esi; 
0x0002b7b0: je 0x2b7d3; sub esp, 0xc; push ebx; call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x0002bfb4: je 0x2bfc0; add esp, 8; pop ebx; ret; 
0x0002bfaf: je 0x2bfc0; cmp eax, 3; je 0x2bfc0; add esp, 8; pop ebx; ret; 
0x0002cbe9: je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002ccfb: je 0x2ccff; call edx; 
0x0002d965: je 0x2d98d; add dh, dh; ret 0x7503; 
0x0002ddfd: je 0x2de08; sub esp, 0xc; push esi; call eax; 
0x0003046f: je 0x30476; cmp byte ptr [eax], 0; jne 0x30480; mov eax, edx; add esp, 0xc; ret; 
0x000304af: je 0x304b6; cmp byte ptr [eax], 0; jne 0x304c0; mov eax, edx; add esp, 0xc; ret; 
0x0003053a: je 0x30560; sbb byte ptr [edx], ch; call 0x304e0; add esp, 0x1c; ret; 
0x00031972: je 0x31998; sub byte ptr [edx], ch; call 0x31900; add esp, 0x2c; ret; 
0x0003291b: je 0x32941; sbb al, 0x83; ret 0x8b04; 
0x0003394a: je 0x33970; jo 0x33936; scasb al, byte ptr es:[edi]; or al, 8; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x00033bf7: je 0x33c1d; adc al, 0x8d; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x000343fc: je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00034668: je 0x34662; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00034af0: je 0x34b16; sub al, 0x83; ret 0xc702; 
0x00034b8f: je 0x34bb5; sub al, 0x83; ret 0xc702; 
0x00034bb2: je 0x34bd8; sub al, 0x83; ret 0xc702; 
0x00034bd5: je 0x34bfb; sub al, 0x83; ret 0xc702; 
0x00037214: je 0x3721d; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x00037ec5: je 0x37ed7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000382e9: je 0x38300; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x000384b9: je 0x384df; add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x00038a2c: je 0x38a52; sbb al, 0xe8; sub al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00039044: je 0x3906a; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000390a6: je 0x390cc; adc bh, bh; jne 0x390ac; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000391a6: je 0x391cc; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039217: je 0x3923d; adc byte ptr [ebp + 0x56], dl; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039d5d: je 0x39d85; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x0003a2c9: je 0x3a2c4; call dword ptr [eax - 0x73]; 
0x0003a3d5: je 0x3a3d0; call dword ptr [eax - 0x73]; 
0x0003a426: je 0x3a44c; sub al, ch; ret 0xfffe; 
0x0003a4a1: je 0x3a49c; call dword ptr [edx - 0x73]; 
0x0003a72d: je 0x3a753; sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x0003a759: je 0x3a77f; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0003a816: je 0x3a811; call dword ptr [eax - 0x18]; 
0x0003a80d: je 0x3a835; add byte ptr [ebx - 0x7c72f314], al; xor al, 0x74; stc; call dword ptr [eax - 0x18]; 
0x0003aae9: je 0x3aaf1; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0003b5d9: je 0x3b5ff; sbb al, 0xe8; inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003b65c: je 0x3b682; sbb byte ptr [eax + 0x50], dl; call 0x3b670; add esp, 0x1c; ret; 
0x0003c547: je 0x3c56d; sub al, 0xe8; rol dword ptr [ecx], 1; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c5c7: je 0x3c5ed; sub al, 0xe8; and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c605: je 0x3c62b; sub al, 0xe8; jecxz 0x3c611; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c685: je 0x3c6ab; sub al, 0xe8; jecxz 0x3c696; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003d494: je 0x3d4bc; add byte ptr [eax + 0x244cb60f], dl; sbb byte ptr [ecx], bh; ret; 
0x0003dc84: je 0x3dcac; add byte ptr [eax + 0x244cb60f], dl; and al, 0x39; ret; 
0x0003e233: je 0x3e259; sbb al, 0xe8; mov ch, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e261: je 0x3e287; sbb al, 0xe8; xchg dword ptr [eax], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e293: je 0x3e2b9; sbb al, 0xe8; lds edi, ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003ea0d: je 0x3ea35; add byte ptr [ebx + 0x1182474], cl; ret; 
0x0003ea11: je 0x3ea37; sbb byte ptr [ecx], al; ret; 
0x00040fef: je 0x40fea; call dword ptr [eax - 0x18]; 
0x000411f1: je 0x411ec; call dword ptr [eax - 0x18]; 
0x00041214: je 0x4120f; call dword ptr [eax - 0x18]; 
0x00041694: je 0x416bc; add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x00041a7d: je 0x41aa5; add byte ptr [ebx + 0x1182474], cl; ret; 
0x00041a81: je 0x41aa7; sbb byte ptr [ecx], al; ret; 
0x000421c4: je 0x421ea; cmp al, 1; ret; 
0x000441cc: je 0x441f2; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00044208: je 0x44203; call dword ptr [eax - 0x18]; 
0x00044212: je 0x44238; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000442e1: je 0x442dc; call dword ptr [eax - 0x18]; 
0x000442c8: je 0x442ee; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000442eb: je 0x44311; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x0004430e: je 0x44334; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x0004434a: je 0x44345; call dword ptr [eax - 0x18]; 
0x00044331: je 0x44357; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000443bf: je 0x443e5; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00044405: je 0x4442b; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000445aa: je 0x445d0; sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x00044c6d: je 0x44c95; add byte ptr [ebx + 0x1182474], cl; ret; 
0x00044c71: je 0x44c97; sbb byte ptr [ecx], al; ret; 
0x00047384: je 0x4737f; call dword ptr [eax - 0x18]; 
0x000473ed: je 0x473e8; call dword ptr [eax - 0x18]; 
0x00047486: je 0x47481; call dword ptr [eax - 0x18]; 
0x00047bd7: je 0x47bfd; sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0004869e: je 0x486b0; add esp, 4; pop ebx; pop esi; ret; 
0x000486fc: je 0x48722; sub byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x0004870d: je 0x48733; sub al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00048e4c: je 0x48e74; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x00049bc5: je 0x49bcd; cmp byte ptr [eax - 1], 0x2f; jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x0004d7fd: je 0x4d825; add byte ptr [ebx + 0x1182474], cl; ret; 
0x0004d801: je 0x4d827; sbb byte ptr [ecx], al; ret; 
0x00050b2b: je 0x50b26; call dword ptr [eax - 0x18]; 
0x00050b75: je 0x50b70; call dword ptr [eax - 0x18]; 
0x00050c8c: je 0x50c87; call dword ptr [eax - 0x18]; 
0x000512e9: je 0x5135f; jns 0x512b3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x000512ea: je 0x51365; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x0005289d: je 0x528c5; add byte ptr [ebx - 0x3e7cfbaf], cl; add al, 0x83; ret; 
0x000546c2: je 0x546e8; sbb bh, bh; je 0x546ec; sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x000546c6: je 0x546ec; sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x00055ad5: je 0x55afd; add dh, dh; ret; 
0x000563ac: je 0x563d2; or al, 0x8d; xchg ah, bh; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x00056cbd: je 0x56ce5; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x00056ea7: je 0x56ecd; or byte ptr [ebp - 0x6cffe4d], cl; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00056eb1: je 0x56ed7; adc al, 0xf6; ret 0xf50; 
0x00057338: je 0x5735e; and al, 0x89; ret 0xfa29; 
0x00057513: je 0x57539; sbb al, 0xe8; pop es; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00057592: je 0x575b8; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00057642: je 0x57668; sbb al, 0xe8; add dword ptr ss:[eax], 0; add esp, 0x1c; ret; 
0x00057ce5: je 0x57d0d; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00058242: je 0x581cd; ret; 
0x00058529: je 0x58560; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00058703: je 0x58729; sbb al, 0xe8; jne 0x58710; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00058d3c: je 0x58d64; add byte ptr [eax + 0x3224858d], dl; stc; call dword ptr [esi - 0x77]; 
0x00064fbb: je 0x64fe1; or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000654ac: je 0x654d4; add byte ptr [eax + 0x5304ec83], dl; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x000654b5: je 0x654db; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x000656fa: je 0x65774; stc; call dword ptr [eax - 0x18]; 
0x00066e0d: je 0x66e35; add byte ptr [eax - 0x89843], al; jmp dword ptr [eax]; 
0x00068f6c: je 0x68f92; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x00069057: je 0x6907d; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x0006a4f5: je 0x6a51b; adc al, 0x55; call dword ptr [eax + 0x1c]; 
0x0006a742: je 0x6a7bc; stc; call dword ptr [eax - 0x18]; 
0x0006b45d: je 0x6b485; add byte ptr [ebx - 0x7a39fe20], al; inc ebx; idiv edi; jmp dword ptr [eax]; 
0x0006bcf5: je 0x6bd1d; add byte ptr [eax - 0x8bc43], al; jmp dword ptr [eax]; 
0x0006cffe: je 0x6d024; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0006ddfe: je 0x6de24; jo 0x6dd8b; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0006e00d: je 0x6e035; add byte ptr [ebx + 0x3908245c], cl; ret; 
0x00071003: je 0x7101c; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00071063: je 0x71089; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00071079: je 0x71090; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x000710ba: je 0x710d0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x000719cd: je 0x719f5; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00072073: je 0x72099; or byte ptr [ebp - 0x6831b6a], cl; jmp dword ptr [ebp - 0x75]; 
0x00072845: je 0x72850; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00073b6d: je 0x73b95; add byte ptr [ebx - 0x17aee714], al; mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00073c45: je 0x73c6d; add dh, dh; ret 0x7420; 
0x0007519c: je 0x751c4; add byte ptr [eax + 0x611be8], dl; add bl, ch; ret 0xb48d; 
0x000755b5: je 0x755db; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x00075715: je 0x7573b; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00075908: je 0x7590d; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0007595d: je 0x75962; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x000759ce: je 0x759e0; cmp edx, ecx; ja 0x759c8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00076ff9: je 0x7701f; sbb bh, bh; je 0x77023; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00076ffd: je 0x77023; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0007710e: je 0x77134; sub bh, bh; je 0x77138; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x00077112: je 0x77138; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000776b0: je 0x776d6; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x00077a1a: je 0x77a40; xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x000789a9: je 0x789b8; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x789b8; ret; 
0x0007a47c: je 0x7a4a4; add byte ptr [eax - 0x76b7b175], dl; ret; 
0x0007a9ee: je 0x7aa20; mov eax, edx; pop ebx; pop esi; ret; 
0x0007ae92: je 0x7aec8; mov eax, edx; pop ebx; ret; 
0x0007ba14: je 0x7ba3a; sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0007bb06: je 0x7bb10; add esp, 4; pop ebx; pop esi; ret; 
0x0007bba6: je 0x7bbcc; or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x0007bfd8: je 0x7bffe; adc al, ch; mov ecx, 0x81000f24; ret; 
0x0007cb9e: je 0x7cbc4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x0007deda: je 0x7df00; and al, 0x8b; adc esi, esi; ret 0xf08; 
0x0007e9bc: je 0x7e9e4; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0007e9e8: je 0x7ea0e; adc al, ch; test eax, 0x81000efa; ret; 
0x0007ea89: je 0x7eaaf; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0007ec59: je 0x7ec7f; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0007f2e7: je 0x7f30d; cmp byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007f46c: je 0x7f482; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0007f67c: je 0x7f6a4; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007f6e6: je 0x7f6eb; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x0007f7ae: je 0x7f7c0; cmp edx, ecx; ja 0x7f7a8; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080012: je 0x80020; mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x80010; ret; 
0x000809bd: je 0x809e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x000809cb: je 0x809f1; sbb al, 0xe8; cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x0008165a: je 0x81680; sub al, 0xff; je 0x81684; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008165e: je 0x81684; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000817cc: je 0x817f2; xor bh, bh; je 0x817f6; cmp al, 0x51; call eax; 
0x000817d0: je 0x817f6; cmp al, 0x51; call eax; 
0x000818bd: je 0x818e3; xor byte ptr [edx + 0x51], dl; call eax; 
0x000819aa: je 0x819d0; sub al, 0x52; push ecx; push esi; call eax; 
0x00081ac7: je 0x81aed; and byte ptr [edx + 0x51], dl; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00081c14: je 0x81c17; ret; 
0x00081c49: je 0x81c58; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00081cd8: je 0x81ce8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00081d4a: je 0x81d50; ret; 
0x00081d6d: je 0x81d80; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00081e26: je 0x81e30; ret; 
0x000824d7: je 0x82570; mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000825ee: je 0x825f8; ret; 
0x00082626: je 0x82670; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00082aa2: je 0x82a80; sub esp, 0xc; push eax; call edx; 
0x00082d6a: je 0x82d78; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008306d: je 0x830b0; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000832d6: je 0x832e4; mov eax, dword ptr [edx]; mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x0008361d: je 0x83630; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00083a8f: je 0x83aa0; test edx, edx; jne 0x83ab0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00083afb: je 0x83b10; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00083bca: je 0x83be0; cmp eax, 1; mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x00083c67: je 0x83c59; mov byte ptr [edx + 0x88], 0; add esp, 4; pop esi; pop edi; ret; 
0x00083d4c: je 0x83d88; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00083ded: je 0x83e15; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008405d: je 0x84068; add esp, 8; pop ebx; ret; 
0x00084255: je 0x8427d; add byte ptr [ecx], bh; bnd jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00084556: je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000847d7: je 0x84810; mov eax, edi; call dword ptr gs:[0x10]; 
0x00084a56: je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00084c50: je 0x84c60; pop ebx; pop esi; pop edi; ret; 
0x00084cc9: je 0x84cd0; pop ebx; pop esi; pop edi; ret; 
0x00084d2e: je 0x84d38; pop ebx; pop esi; pop edi; ret; 
0x00085ce6: je 0x85d2c; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00086aa6: je 0x86698; mov ebx, eax; and ebx, 0x40; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00086e96: je 0x86ebc; cmp al, 0xe8; ret 0xffb8; 
0x000875ad: je 0x875d5; add byte ptr [ebx - 0x7c72f714], al; pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x00087d7d: je 0x87da5; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00088333: je 0x88359; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000883c6: je 0x883ec; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000885b0: je 0x885d6; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000885d3: je 0x885f9; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x00089072: je 0x89098; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00089102: je 0x89128; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00089255: je 0x8927d; add byte ptr [ebx - 0x77cf440], al; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x000892e0: je 0x89306; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00089303: je 0x89329; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x0008a43a: je 0x8a845; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008b0f3: je 0x8b100; mov eax, 0x16; ret; 
0x0008b11e: je 0x8b130; cmp edx, 1; jne 0x8b140; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0008b1f5: je 0x8b230; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b351: je 0x8b365; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0008b381: je 0x8b390; xor eax, eax; ret; 
0x0008bd8c: je 0x8bdb4; add byte ptr [eax - 0x76ffba75], dl; ret 0xe283; 
0x0008c4f2: je 0x8c4f8; test al, 1; jne 0x8c4ca; mov eax, 0x10; pop ebx; ret; 
0x0008c4de: je 0x8c500; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0008c6cb: je 0x8c659; mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008ce69: je 0x8ce78; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0008d1cd: je 0x8d1f5; add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x75]; 
0x0008d3e0: je 0x8d406; or al, 0x89; ret; 
0x0008d500: je 0x8d503; ret; 
0x0008d5ec: je 0x8d612; sub al, 0x52; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x0008d5fd: je 0x8d625; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x0008d67b: je 0x8d650; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d649: je 0x8d658; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008d8d1: je 0x8d8e0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008db9d: je 0x8dbc5; add byte ptr [ebx + 0x31042444], cl; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0008ddd5: je 0x8ddfd; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0008de03: je 0x8de10; ret; 
0x0008e38b: je 0x8e360; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e359: je 0x8e368; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008e420: je 0x8e446; sbb byte ptr [esi - 0x18], dl; cmp bh, bh; dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0008e6eb: je 0x8e6c0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e6b9: je 0x8e6c8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0008f26e: je 0x8f27a; cmp eax, 0xc; jne 0x8f29f; mov eax, 3; add esp, 0xc; ret; 
0x0008f430: je 0x8f43c; cmp eax, 0xc; jne 0x8f45f; mov eax, 3; add esp, 0xc; ret; 
0x0008f5c0: je 0x8f5cc; cmp eax, 0xc; jne 0x8f5ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f7b6: je 0x8f7c2; cmp eax, 0xc; jne 0x8f7ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f86a: je 0x8f890; sbb al, 0xe8; scasb al, byte ptr es:[edi]; jns 0x8f870; jmp dword ptr [esi - 0x70]; 
0x0008f930: je 0x8f93c; cmp eax, 0xc; jne 0x8f95f; mov eax, 3; add esp, 0xc; ret; 
0x0008f9b0: je 0x8f9bc; cmp eax, 0xc; jne 0x8f9df; mov eax, 3; add esp, 0xc; ret; 
0x0008fee4: je 0x8fea2; pop ebx; pop esi; ret; 
0x000904f5: je 0x904ea; mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x904f0; pop ebx; ret; 
0x000904e6: je 0x904f3; xor eax, eax; pop ebx; ret; 
0x0009128c: je 0x912b4; add byte ptr [eax - 0x7c00bc73], dl; ljmp 0x8956:0x7edb8510; ret; 
0x00091f4e: je 0x91f74; sbb al, 0xe8; or al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00092274: je 0x922c0; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092516: je 0x9253c; sub al, 0xe8; mov dl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000928ad: je 0x928d3; dec esp; call dword ptr gs:[0x10]; 
0x00092921: je 0x92947; dec esp; call dword ptr gs:[0x10]; 
0x00092933: je 0x92959; add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x0009296c: je 0x92992; dec esp; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929bc: je 0x929e2; dec esp; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00092a41: je 0x92a67; add al, 0xf7; fmul dword ptr [ebx - 0x1336a]; jmp dword ptr [ebp - 0x77]; 
0x000937de: je 0x93804; adc byte ptr [ebx + 0x11c246c], cl; pop eax; add al, 0x89; ret; 
0x00093a4a: je 0x93a70; sub byte ptr [ebp - 0x6bf1472], cl; jmp dword ptr [ebp - 0x5f]; 
0x00093dc2: je 0x93de8; sub byte ptr [ebx - 0x72cbdbbc], cl; add byte ptr [ebx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000943b1: je 0x943d7; or byte ptr [ecx], ah; ret; 
0x00094c7c: je 0x94ca2; or byte ptr [ebx + 0x418d1048], cl; jmp dword ptr [ecx]; 
0x00094e29: je 0x94e30; add esp, 0xc; ret; 
0x0009670f: je 0x96694; sal dword ptr [ecx], 0x83; ret; 
0x00096dde: je 0x96e04; sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00096e3b: je 0x96e61; sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00096fd3: je 0x96ff9; sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00096ff7: je 0x9701d; sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0009701b: je 0x97041; sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097387: je 0x973ad; sbb byte ptr [ebp - 0x66c937a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000973ab: je 0x973d1; sbb byte ptr [ebp - 0x66c937a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097577: je 0x9759d; sbb byte ptr [ebp - 0x66cb37a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0009945d: je 0x99518; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00099550: je 0x99560; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000996e2: je 0x99712; pop ebx; pop esi; pop edi; ret; 
0x0009adfd: je 0x9ae23; sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009aeb3: je 0x9aed9; sbb al, 0xe8; mov ch, 0x3b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009afb2: je 0x9afca; lea eax, [edx - 0xae410]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0009b092: je 0x9b0aa; lea eax, [edx - 0xade90]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x0009cca6: je 0x9ccad; cmp cl, dl; je 0x9ccad; inc eax; pop edi; ret; 
0x0009ccaa: je 0x9ccad; inc eax; pop edi; ret; 
0x0009d83c: je 0x9d864; add byte ptr [eax + 0x5b04c483], dl; pop esi; ret; 
0x0009d9e1: je 0x9da07; cmp al, 0xff; je 0x9da0b; cmp al, 0xe8; ret; 
0x0009d9e5: je 0x9da0b; cmp al, 0xe8; ret; 
0x000a0a9c: je 0xa0ac4; add byte ptr [eax + 0xff42c6], dl; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a0ab5: je 0xa0add; add byte ptr [ecx - 0x763fce3e], cl; push ss; pop ebx; pop esi; ret; 
0x000a0c39: je 0xa0c3f; cmp eax, ebx; jne 0xa0c30; mov eax, edx; pop ebx; ret; 
0x000a0d09: je 0xa0d00; pop ebx; ret; 
0x000a0d39: je 0xa0d30; cmp edx, esi; je 0xa0d30; pop ebx; pop esi; ret; 
0x000a0d3d: je 0xa0d30; pop ebx; pop esi; ret; 
0x000a0ddd: je 0xa0df0; cmp eax, ecx; jne 0xa0dd0; mov eax, edx; pop ebx; ret; 
0x000a1094: je 0xa10bc; add byte ptr [eax - 0x72cd769a], dl; inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000a15dc: je 0xa1604; add byte ptr [eax - 0x7cfe49f1], dl; rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000a2cec: je 0xa2d14; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a2cfd: je 0xa2d25; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000a2f7d: je 0xa2fa5; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a4be8: je 0xa4bec; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a4cec: je 0xa4d14; add byte ptr [eax + 0x5b118966], dl; ret; 
0x000a4d1c: je 0xa4d44; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000a4dac: je 0xa4dd4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dbc: je 0xa4de4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dcc: je 0xa4df4; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a5afa: je 0xa4f30; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a5a9f: je 0xa4fb0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a70bc: je 0xa70e4; add byte ptr [eax + 0x16f0ff3], dl; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a914c: je 0xa9174; add byte ptr [eax + 0x5b118966], dl; ret; 
0x000a917c: je 0xa91a4; add byte ptr [eax + 0x51881189], dl; add al, 0x5b; ret; 
0x000a920c: je 0xa9234; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a921c: je 0xa9244; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a922c: je 0xa9254; add byte ptr [eax + 0x1130f66], dl; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000aa32d: je 0xaa355; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000aac38: je 0xaac42; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ab37d: je 0xab3a5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ab38c: je 0xab3b4; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000aca9d: je 0xacac5; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000acaac: je 0xacad4; add byte ptr [eax + 0x5e5f1788], dl; pop ebx; ret; 
0x000ae61d: je 0xae645; add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b0bcd: je 0xb0bf5; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000b27ef: je 0xb2950; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000b29ab: je 0xb29c0; bsf ecx, ecx; sub edx, ecx; jbe 0xb29e0; add eax, ecx; ret; 
0x000b2b79: je 0xb2bca; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2c2b: je 0xb2c7c; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b2ed2: je 0xb2edd; pmovmskb eax, xmm1; test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x000b2f00: je 0xb2f4b; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b2fba: je 0xb2f90; bsr ecx, edx; add eax, ecx; ret; 
0x000b3012: je 0xb3070; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000b3193: je 0xb31a0; bsf ecx, ecx; add eax, ecx; ret; 
0x000b31d8: je 0xb31f0; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000b3318: je 0xb3364; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b33d5: je 0xb33fd; add byte ptr [ecx - 0x7cf5742d], cl; ret 0x8104; 
0x000b347f: je 0xb3460; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b34ef: je 0xb34d0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000b3633: je 0xb3643; call ecx; 
0x000b3761: je 0xb3764; inc eax; pop edi; ret; 
0x000b3905: je 0xb3908; inc eax; pop edi; pop esi; ret; 
0x000b3cd7: je 0xb3ce7; call ecx; 
0x000b3f5e: je 0xb3f64; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b46b7: je 0xb46ba; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000b47d6: je 0xb47df; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb47d8; pop esi; ret; 
0x000b4878: je 0xb4881; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x000b4a99: je 0xb4a80; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000b4ce9: je 0xb4cd0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000b4f35: je 0xb4f5d; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000b5058: je 0xb5060; mov eax, esi; pop ebx; pop esi; ret; 
0x000b5085: je 0xb50ab; and byte ptr [esi - 0x18], dl; ret 0xf6b1; 
0x000b545f: je 0xb546a; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000b5497: je 0xb54bd; sbb byte ptr [edx], ch; call 0xb54b0; add esp, 0x1c; ret; 
0x000b58c4: je 0xb58ea; sub al, 0xe8; and al, 0xdd; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b5b1c: je 0xb5b42; xor al, 0xff; je 0xb5b46; inc eax; push edi; call esi; 
0x000b5b20: je 0xb5b46; inc eax; push edi; call esi; 
0x000b600d: je 0xb6033; sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x000b6069: je 0xb608f; sbb al, 0x8d; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b619f: je 0xb61c5; sbb al, 0x8d; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b61bf: je 0xb61e5; sbb al, 0x8d; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000b6230: je 0xb6236; test edx, edx; jne 0xb6228; ret; 
0x000b62a5: je 0xb62cb; sub al, 0xe8; mov bl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b62e7: je 0xb630d; sub al, 0xe8; jno 0xb62f4; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b6325: je 0xb634b; sub al, 0xe8; xor eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b6463: je 0xb6489; sbb al, 0xe8; jne 0xb6488; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b64c3: je 0xb64e9; sbb al, 0xe8; dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b6523: je 0xb6549; sbb al, 0xe8; in eax, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b6551: je 0xb6577; sbb al, 0xe8; mov bh, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b7f94: je 0xb7fbc; add byte ptr [eax + 0xa9d231], dl; add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x000b83c3: je 0xb83bc; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000ba8c5: je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000ba97b: je 0xba976; call dword ptr [eax - 0x18]; 
0x000ba9c1: je 0xba9bc; call dword ptr [eax - 0x18]; 
0x000bac0a: je 0xbac30; sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x000bc114: je 0xbc13c; add byte ptr [eax - 0x7cfbbd75], dl; ret 0x8304; 
0x000bd6d1: je 0xbd6cc; call dword ptr [eax - 0x18]; 
0x000bd813: je 0xbd80e; call dword ptr [eax - 0x18]; 
0x000bd89f: je 0xbd89a; call dword ptr [eax - 0x18]; 
0x000c03ba: je 0xc03b5; call dword ptr [eax - 0x18]; 
0x000c0400: je 0xc03fb; call dword ptr [eax - 0x18]; 
0x000c04e2: je 0xc04dd; call dword ptr [eax - 0x18]; 
0x000c0850: je 0xc0858; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c0d57: je 0xc0ce2; ret 0x860f; 
0x000c1a64: je 0xc1a8c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c1aac: je 0xc1ad4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c33b6: je 0xc33dc; and byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000c356c: je 0xc34f1; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000c37dd: je 0xc3805; add byte ptr [ebp - 0x57c03b0], cl; add ecx, dword ptr [edi]; xchg esi, eax; ret 0xd284; 
0x000c3e4a: je 0xc3e70; adc byte ptr [ebp + 0x2c928dc0], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x108b; 
0x000c5984: je 0xc59ac; add byte ptr [eax + 0x7565f883], dl; sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c7983: je 0xc797e; call dword ptr [eax - 0x18]; 
0x000c79cd: je 0xc79c8; call dword ptr [eax - 0x18]; 
0x000c7aca: je 0xc7ac5; call dword ptr [eax - 0x18]; 
0x000c8a3d: je 0xc8a65; add byte ptr [edi + 0x5e], bl; ret; 
0x000c8a5d: je 0xc8a85; add byte ptr [eax + 1], bh; jg 0xc8a69; neg eax; ret; 
0x000c8c07: je 0xc8c20; mov cl, dl; and cl, 0xf; je 0xc8c30; ret; 
0x000c8c0e: je 0xc8c30; ret; 
0x000c8c25: je 0xc8c40; add eax, 2; ret; 
0x000c8d04: je 0xc8d18; cmp dword ptr [edx + eax*4 + 4], 0; lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x000c8d14: je 0xc8d3c; add byte ptr [eax - 0x37763e77], dl; ret; 
0x000c8dd5: je 0xc8de0; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xc8dd0; ret; 
0x000c9134: je 0xc915a; or al, 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x000c945a: je 0xc9480; or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x000ca52b: je 0xca551; pop eax; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ca793: je 0xca7b9; pop eax; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000cd8a6: je 0xcd918; mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000ce6b5: je 0xce6db; sub al, 0xe8; add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cfa79: je 0xcfa9f; or al, 0x89; ret 0x44f6; 
0x000cfaf9: je 0xcfb1f; or al, 0x89; ret 0x44f6; 
0x000d1ce6: je 0xd1d0c; sbb byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x000d5c2e: je 0xd5c38; add esp, 0xc; ret; 
0x000d5d0e: je 0xd5d18; add esp, 0xc; ret; 
0x000d5e36: je 0xd5e5c; xor al, 0x8b; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000d5e8e: je 0xd5ec0; sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000d601c: je 0xd5fcb; cmp eax, -0x26; jne 0xd6060; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d5fb7: je 0xd5fe8; sub esp, 8; push edi; push ebx; call eax; 
0x000d5ff0: je 0xd600c; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000d6429: je 0xd63b4; cli; call dword ptr gs:[0x10]; 
0x000d64e8: je 0xd6473; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d65e1: je 0xd656c; ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d6616: je 0xd65a1; ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d6c58: je 0xd6c70; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x000d72e8: je 0xd730e; adc al, ch; test eax, 0x81000971; ret; 
0x000d8139: je 0xd8150; sub esp, 0xc; push esi; call eax; 
0x000d8580: je 0xd859f; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d87a0: je 0xd87bf; sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d8cb1: je 0xd8cd7; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000d8cb5: je 0xd8cdb; pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x000d8f9b: je 0xd8fc1; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x000d939a: je 0xd93c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000db0d5: je 0xdb0fd; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x000dc0cf: je 0xdc0e0; xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000dc10a: je 0xdc130; sbb byte ptr [edx - 1], ch; call 0xdc120; add esp, 0x1c; ret; 
0x000dc150: je 0xdc176; sbb byte ptr [edx - 1], ch; call 0xdc260; add esp, 0x1c; ret; 
0x000dc5c4: je 0xdc5ea; cmp al, 0x89; inc esp; and al, 8; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000dcdc0: je 0xdcdc9; test eax, eax; jne 0xdcdc9; pop ecx; jmp ecx; 
0x000dd15f: je 0xdd163; call eax; 
0x000dd1c5: je 0xdd1a5; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000dd215: je 0xdd1a5; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x000dd67e: je 0xdd6a4; sbb al, 0xe8; jp 0xdd689; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ddd56: je 0xddd88; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf6: je 0xdde28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000de0bf: je 0xde0f0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de16f: je 0xde1a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000de735: je 0xde75d; add byte ptr [eax + 0x40], bh; ret; 
0x000de868: je 0xde89a; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000de883: je 0xde89a; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000de833: je 0xde89a; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000deced: je 0xded15; add bh, al; test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x000e004a: je 0xe005a; sub esp, 8; push eax; push edi; call esi; 
0x000e26da: je 0xe26ea; sub esp, 8; push eax; push edi; call esi; 
0x000e436d: je 0xe4373; cmp al, 0x3f; jne 0xe4389; mov eax, 1; ret; 
0x000e7ddb: je 0xe7df6; pop ebx; pop esi; pop edi; ret; 
0x000e7e3d: je 0xe7e50; pop ebx; pop esi; ret; 
0x000e9368: je 0xe9399; add esp, 4; pop ebx; pop esi; ret; 
0x000e94dc: je 0xe9442; pop ebx; pop esi; pop edi; ret; 
0x000ea5f6: je 0xea61c; and al, 0xe8; ret 0xfcb0; 
0x000ebb3c: je 0xebb64; add byte ptr [eax - 0x3f7cef09], dl; add al, 0x39; ret 0xf775; 
0x000ebd0f: je 0xebd30; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000ecbb4: je 0xecbda; cmp al, 0x29; ret 0x448b; 
0x000ef6bd: je 0xef6e3; sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x000ef9e6: je 0xefa0c; xor al, ch; ret 0xfff1; 
0x000eff3d: je 0xeff63; adc byte ptr [esi - 1], dl; je 0xeff68; cmp al, 0xe8; inc esi; ret; 
0x000eff42: je 0xeff68; cmp al, 0xe8; inc esi; ret; 
0x000f759a: je 0xf75aa; sub esp, 8; push eax; push edi; call esi; 
0x000f814a: je 0xf815a; sub esp, 8; push eax; push edi; call esi; 
0x000f9458: je 0xf93f6; stc; call dword ptr [eax - 0x73]; 
0x000f949b: je 0xf9439; stc; call dword ptr [eax - 0x73]; 
0x000f9916: je 0xf993c; xor al, 0x8d; dec esp; and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000fa2af: je 0xfa2c0; mov eax, edx; pop ebx; pop esi; ret; 
0x000fa34d: je 0xfa375; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000fc17d: je 0xfc1a5; add byte ptr [eax + 0x74000978], al; sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x00107879: jecxz 0x107808; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0011b7bc: jecxz 0x11b7e7; ret; 
0x0011b8b0: jecxz 0x11b8db; ret; 
0x0011cf4c: jecxz 0x11cf4e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00125c63: jecxz 0x125c66; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012660d: jecxz 0x126610; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012beee: jecxz 0x12bee6; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0012f1aa: jecxz 0x12f1ad; lea edx, [edx - 0xac3d0]; cmove eax, edx; pop ebx; ret; 
0x0012f1fa: jecxz 0x12f1fd; lea edx, [edx - 0xa8390]; cmove eax, edx; pop ebx; ret; 
0x0012f24a: jecxz 0x12f24d; lea edx, [edx - 0xaa3a0]; cmove eax, edx; pop ebx; ret; 
0x0013744c: jecxz 0x1373d7; ret 0xb70f; 
0x00149b43: jecxz 0x149ba4; stc; call dword ptr [eax - 0x18]; 
0x00149c37: jecxz 0x149c98; stc; call dword ptr [eax - 0x18]; 
0x0014a54e: jecxz 0x14a5af; stc; call dword ptr [eax - 0x18]; 
0x00161e04: jecxz 0x161d89; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001639cc: jecxz 0x163959; je 0x1639f4; add al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0018ed4f: jecxz 0x18ed56; add byte ptr [eax], al; pop ebx; ret; 
0x00193429: jecxz 0x19342b; add byte ptr [eax], al; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x0019382e: jecxz 0x1937b3; ret 0x6640; 
0x0019cc80: jecxz 0x19cc05; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c609: jecxz 0x3c611; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c689: jecxz 0x3c696; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004b1d0: jecxz 0x4b15b; pop ds; pop ebx; pop esi; pop edi; ret; 
0x000502e6: jecxz 0x502e7; dec dword ptr [ebx - 0x365363]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x0006472f: jecxz 0x64730; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x0006601c: jecxz 0x6601d; jmp eax; 
0x00069b2b: jecxz 0x69b2c; jmp dword ptr [esi - 0x70]; 
0x0006cabb: jecxz 0x6cabc; jmp dword ptr [esi - 0x70]; 
0x0006cb11: jecxz 0x6cb12; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x00075ff7: jecxz 0x76036; stc; call dword ptr [eax - 0x18]; 
0x0008086d: jecxz 0x808ac; stc; call dword ptr [eax - 0x18]; 
0x00082c87: jecxz 0x82c0c; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00086aaf: jecxz 0x86af1; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0009a07d: jecxz 0x9a067; push esi; inc ecx; jle 0x9a094; cmovne eax, edx; ret; 
0x0009af7a: jecxz 0x9af7d; lea edx, [edx - 0xa8370]; cmove eax, edx; pop ebx; ret; 
0x0009b00a: jecxz 0x9b00d; lea edx, [edx - 0xaa380]; cmove eax, edx; pop ebx; ret; 
0x0009b05a: jecxz 0x9b05d; lea edx, [edx - 0xa2fe0]; cmove eax, edx; pop ebx; ret; 
0x0009b36a: jecxz 0x9b36d; lea edx, [edx - 0xac3b0]; cmove eax, edx; pop ebx; ret; 
0x000aadc9: jecxz 0xaadd1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b3bb0: jecxz 0xb3b35; ret 0x8304; 
0x000b48b5: jecxz 0xb48af; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000c1517: jecxz 0xc150f; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x000c1536: jecxz 0xc152e; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x000c1555: jecxz 0xc154d; dec dword ptr [ebp - 0x6686f70]; call dword ptr [edx - 0x73]; 
0x000c1574: jecxz 0xc156c; jmp dword ptr [esi - 0x70]; 
0x000c70dc: jecxz 0xc70dd; dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x000c7583: jecxz 0xc7584; dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x000c917a: jecxz 0xc917b; dec dword ptr [edi]; add byte ptr [ecx], al; ret; 
0x000d5ae8: jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x000de2ca: jecxz 0xde312; stc; call dword ptr [ebx + 0x50]; 
0x000ffe7d: jecxz 0xffe0a; jl 0xffea5; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax + 0x68]; 
0x00106d1d: jg 0x106d21; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001071b7: jg 0x1071ba; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001131bd: jg 0x1131c3; call dword ptr gs:[0x10]; 
0x001131bd: jg 0x1131c3; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0011459f: jg 0x1145a0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00119bbd: jg 0x119c10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00119c82: jg 0x119ca8; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0011a964: jg 0x11a9b1; stc; call dword ptr [eax + 0x53]; 
0x0011e8e1: jg 0x11e910; add esp, 8; pop ebx; ret; 
0x00121322: jg 0x121324; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00127748: jg 0x127770; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00127801: jg 0x127810; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001282d5: jg 0x1282f8; add esp, 0x18; pop ebx; ret; 
0x00128c48: jg 0x128c70; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00128d01: jg 0x128d10; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00132a5f: jg 0x132a88; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00132b21: jg 0x132b30; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001334af: jg 0x1334d8; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00133571: jg 0x133580; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00133faf: jg 0x133fd8; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00134071: jg 0x134080; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001350df: jg 0x135108; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001351a1: jg 0x1351b0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0013570f: jg 0x135738; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x001357d1: jg 0x1357e0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00139645: jg 0x1396a0; add esp, 4; pop ebx; pop esi; ret; 
0x00139973: jg 0x139998; add esp, 0x18; pop ebx; ret; 
0x00139fb8: jg 0x139fe0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0013a071: jg 0x13a080; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x0013df87: jg 0x13dfe4; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0013e1cc: jg 0x13e1bf; call dword ptr [eax - 0x73]; 
0x0013e29c: jg 0x13e28f; call dword ptr [eax - 0x73]; 
0x001442fd: jg 0x1442b4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014987b: jg 0x1498b8; add esp, 4; pop ebx; pop esi; ret; 
0x0014d9e5: jg 0x14da40; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0014e541: jg 0x14e568; add esp, 8; pop ebx; ret; 
0x0014f61b: jg 0x14f640; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0014f953: jg 0x14f960; ret; 
0x00159198: jg 0x1591a9; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x159190; pop ebx; ret; 
0x0015a0be: jg 0x15a0c0; add byte ptr [ebx + 0x3910244c], cl; ret 0x4e0f; 
0x0015fd09: jg 0x15fcf0; pop ebx; pop esi; pop edi; ret; 
0x001681d4: jg 0x1681f8; add esp, 8; pop ebx; ret; 
0x00168252: jg 0x168278; add esp, 0x18; pop ebx; ret; 
0x001682de: jg 0x168300; add esp, 0x18; pop ebx; ret; 
0x00168354: jg 0x168378; add esp, 8; pop ebx; ret; 
0x00168504: jg 0x168528; add esp, 0x14; pop ebx; pop esi; ret; 
0x001685b6: jg 0x1685d8; add esp, 0x18; pop ebx; ret; 
0x00169e7e: jg 0x169e90; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0016d1c5: jg 0x16d1e8; add esp, 4; pop ebx; pop esi; ret; 
0x0016d265: jg 0x16d288; add esp, 4; pop ebx; pop esi; ret; 
0x0016d315: jg 0x16d338; pop ebx; pop esi; pop edi; ret; 
0x00177178: jg 0x1771bc; jo 0x1770fd; ret 0x80; 
0x00177250: jg 0x177294; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177280: jg 0x1772c4; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001772b0: jg 0x1772f4; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001772e0: jg 0x177324; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001773a0: jg 0x1773e4; call 0x42ed830d; clc; pop ebx; ret; 
0x00177496: jg 0x1774da; ret; 
0x001774c6: jg 0x17750a; ret 0xf66; 
0x001777c8: jg 0x17780c; jo 0x17774d; ret 0x80; 
0x001778a0: jg 0x1778e4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001778d0: jg 0x177914; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177930: jg 0x177974; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017798b: jg 0x1779cf; fisub dword ptr [esi + 0xf]; jg 0x1779d4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177990: jg 0x1779d4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177a00: jg 0x177a44; call 0x42ed896d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177b26: jg 0x177b6a; ret; 
0x00177b66: jg 0x177baa; ret 0xf66; 
0x00177e40: jg 0x177e84; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177e70: jg 0x177eb4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177ed0: jg 0x177f14; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177f2b: jg 0x177f6f; fisub dword ptr [esi + 0xf]; jg 0x177f74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177f30: jg 0x177f74; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00177fa0: jg 0x177fe4; call 0x42ed8f0d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001780c6: jg 0x17810a; ret; 
0x00178106: jg 0x17814a; ret 0xf66; 
0x00178390: jg 0x1783d4; out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001783c0: jg 0x178404; out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001783f0: jg 0x178434; in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00178420: jg 0x178464; in al, dx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001784e0: jg 0x178524; call 0x42ed944d; clc; pop ebx; ret; 
0x001785d6: jg 0x17861a; ret; 
0x00178606: jg 0x17864a; ret 0xf66; 
0x00184ac1: jg 0x184b05; call 0x40965abb; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184ba1: jg 0x184be5; out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00184c51: jg 0x184c95; out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00184d71: jg 0x184db5; in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0019026b: jg 0x190270; neg eax; ret; 
0x00190596: jg 0x1905a0; neg eax; ret; 
0x001945d5: jg 0x1945e0; neg eax; pop edi; pop esi; pop ebx; ret; 
0x001946c6: jg 0x1946d0; neg eax; ret; 
0x0019515b: jg 0x19515f; mov eax, edi; pop edi; ret; 
0x001951e6: jg 0x1951ea; mov eax, edx; ret; 
0x0019a6f4: jg 0x19a6f6; add byte ptr [ecx - 0x76f3dbac], cl; ret 0xb70f; 
0x0019d5d6: jg 0x19d5f8; add esp, 4; pop ebx; pop esi; ret; 
0x00035a74: jg 0x35a76; add byte ptr [ecx], cl; ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00035db1: jg 0x35d3c; ret; 
0x00035e06: jg 0x35e11; ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0003611b: jg 0x3611c; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00036146: jg 0x36151; ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000363f5: jg 0x36380; ret; 
0x00039efa: jg 0x39f20; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0003a28c: jg 0x3a2b8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a461: jg 0x3a490; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003acd7: jg 0x3acf8; add esp, 4; pop ebx; pop esi; ret; 
0x0003ae06: jg 0x3ae28; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0003d549: jg 0x3d5a6; pop esi; pop edi; pop ebp; ret; 
0x0004a4c4: jg 0x4a4e8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0004a7c7: jg 0x4a801; ret; 
0x00050bfd: jg 0x50beb; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00054794: jg 0x547d0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000567a7: jg 0x567e0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00057fed: jg 0x58020; stc; call dword ptr [ecx + 0x53]; 
0x00058672: jg 0x58678; ret; 
0x00058d83: jg 0x58db6; stc; call dword ptr [eax - 0x18]; 
0x0005cba0: jg 0x5cbb1; dec edi; ret; 
0x0006b078: jg 0x6b0c6; in al, 0xff; jmp eax; 
0x00070279: jg 0x70298; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007038a: jg 0x703a8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00070cd5: jg 0x70ccf; cli; jmp dword ptr [esi - 0x70]; 
0x000723c3: jg 0x723d0; ret; 
0x0007b393: jg 0x7b3a0; ret; 
0x0007e119: jg 0x7e150; add esp, 8; pop ebx; ret; 
0x00080433: jg 0x80440; ret; 
0x0008295f: jg 0x82998; pop ebx; pop esi; pop edi; ret; 
0x00083c16: jg 0x83b9b; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x00085d33: jg 0x85d2e; call dword ptr [eax + 0x68]; 
0x00085d56: jg 0x85d51; call dword ptr [eax + 0x68]; 
0x00086192: jg 0x8618d; call dword ptr [eax - 0x73]; 
0x00086da5: jg 0x86da0; call dword ptr [eax + 0x68]; 
0x00086faa: jg 0x86fa5; call dword ptr [eax - 0x73]; 
0x00086fbd: jg 0x86fb8; call dword ptr [eax - 0x18]; 
0x00086fcc: jg 0x86fc7; call dword ptr [eax - 0x73]; 
0x00086fee: jg 0x86fe9; call dword ptr [eax - 0x73]; 
0x00087046: jg 0x87041; call dword ptr [eax - 0x73]; 
0x00087068: jg 0x87063; call dword ptr [eax + 0x68]; 
0x0008708a: jg 0x87085; call dword ptr [eax - 0x73]; 
0x000870ac: jg 0x870a7; call dword ptr [eax - 0x73]; 
0x000870ce: jg 0x870c9; call dword ptr [eax + 0x68]; 
0x000870df: jg 0x870da; call dword ptr [eax + 0x68]; 
0x00087265: jg 0x87260; call dword ptr [eax - 0x18]; 
0x00087385: jg 0x873a8; add esp, 0x18; pop ebx; ret; 
0x00087958: jg 0x87a18; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0008834c: jg 0x88347; call dword ptr [eax - 0x18]; 
0x0008908b: jg 0x89086; call dword ptr [eax - 0x18]; 
0x0008978b: jg 0x897be; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089f7b: jg 0x89f76; call dword ptr [eax - 0x18]; 
0x0008b4f6: jg 0x8b507; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bc22: jg 0x8bc33; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008be32: jg 0x8be43; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c45c: jg 0x8c46d; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e8e4: jg 0x8e8ca; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0008edb6: jg 0x8ee68; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a2cf6: jg 0xa2cfa; mov eax, edi; pop edi; ret; 
0x000a2f86: jg 0xa2f8a; mov eax, edx; ret; 
0x000a70c6: jg 0xa70ca; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7376: jg 0xa737a; lea eax, [edx + 0xf]; ret; 
0x000aab06: jg 0xaab09; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aab8b: jg 0xaab92; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aabb0: jg 0xaabb8; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aabce: jg 0xaabd7; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aabec: jg 0xaabf6; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aac0f: jg 0xaac1a; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aac34: jg 0xaac40; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aac72: jg 0xaac80; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aac96: jg 0xaaca5; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aacf6: jg 0xaad07; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aad1c: jg 0xaad2e; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aadf6: jg 0xaae0e; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aae26: jg 0xaae3f; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaebe: jg 0xaaeda; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaeec: jg 0xaaf09; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaf1c: jg 0xaaf3a; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaf46: jg 0xaaf65; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaf76: jg 0xaaf96; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aafa6: jg 0xaafc7; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aafd6: jg 0xaaff8; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ab156: jg 0xab15f; pop edi; pop esi; pop ebx; ret; 
0x000ab169: jg 0xab172; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab18a: jg 0xab193; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab1a9: jg 0xab1b2; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab1c9: jg 0xab1d2; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab20b: jg 0xab214; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab22b: jg 0xab234; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab24b: jg 0xab254; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab2eb: jg 0xab2f4; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30b: jg 0xab314; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab32b: jg 0xab334; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab34b: jg 0xab354; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30f: jg 0xab368; push cs; pop edi; pop esi; pop ebx; ret; 
0x000ab32f: jg 0xab388; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ab34f: jg 0xab3a8; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ab372: jg 0xab3cb; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000ab482: jg 0xab48b; pop edi; pop esi; pop ebx; ret; 
0x000ab472: jg 0xab4bb; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000ab58f: jg 0xab5c1; pop edi; pop esi; pop ebx; ret; 
0x000ab58e: jg 0xab60f; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac19d: jg 0xac1a1; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac1c0: jg 0xac1c5; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac1db: jg 0xac1e1; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac1fe: jg 0xac205; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac223: jg 0xac22b; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac241: jg 0xac24a; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac2a7: jg 0xac2b3; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac2d5: jg 0xac2e2; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac305: jg 0xac313; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac339: jg 0xac348; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac369: jg 0xac379; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac399: jg 0xac3aa; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac3bf: jg 0xac3d1; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac435: jg 0xac44a; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac55c: jg 0xac577; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac5ef: jg 0xac60d; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac619: jg 0xac638; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac649: jg 0xac669; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac679: jg 0xac69a; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac6a9: jg 0xac6cb; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac866: jg 0xac86f; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000aca0f: jg 0xaca68; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000aca4f: jg 0xacaa8; jge 0x5e69e99e; pop ebx; ret; 
0x000aca6f: jg 0xacac8; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000aca92: jg 0xacaeb; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000acba2: jg 0xacbab; pop edi; pop esi; pop ebx; ret; 
0x000acb92: jg 0xacbdb; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000accbf: jg 0xaccf1; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000accbe: jg 0xacd3f; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000aee56: jg 0xaee58; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee66: jg 0xaee68; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee8a: jg 0xaee8c; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeea9: jg 0xaeeab; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeec9: jg 0xaeecb; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeee9: jg 0xaeeeb; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef0b: jg 0xaef0d; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef2b: jg 0xaef2d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef4b: jg 0xaef4d; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef6b: jg 0xaef6d; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef8f: jg 0xaef91; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefae: jg 0xaefb0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefce: jg 0xaefd0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefeb: jg 0xaefed; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af00b: jg 0xaf00d; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af02b: jg 0xaf02d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefef: jg 0xaf041; or eax, 0x824448b; pop esi; ret; 
0x000af04b: jg 0xaf04d; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af00f: jg 0xaf061; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af02f: jg 0xaf081; jnp 0x5e13147b; ret; 
0x000af04f: jg 0xaf0a1; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000b22d9: jg 0xb22db; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b22fc: jg 0xb22fe; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b231d: jg 0xb231f; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b233c: jg 0xb233e; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b235c: jg 0xb235e; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b239e: jg 0xb23a0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b23be: jg 0xb23c0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b23de: jg 0xb23e0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b24be: jg 0xb24c0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b24de: jg 0xb24e0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b24fe: jg 0xb2500; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b24c2: jg 0xb2514; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000b251e: jg 0xb2520; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b24e2: jg 0xb2534; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b2502: jg 0xb2554; jnp 0x5b17494e; pop esi; ret; 
0x000b2522: jg 0xb2574; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000b7050: jg 0xb6fd5; ret; 
0x000b76d0: jg 0xb7655; ret; 
0x000c793f: jg 0xc7937; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7964: jg 0xc795c; dec dword ptr [ebx - 0x363f43]; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000c8a35: jg 0xc8a40; neg eax; pop edi; pop esi; ret; 
0x000c8a65: jg 0xc8a69; neg eax; ret; 
0x000cbf6a: jg 0xcbf90; add esp, 8; pop ebx; ret; 
0x000d7641: jg 0xd7660; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d7832: jg 0xd7850; add esp, 4; pop ebx; pop esi; ret; 
0x000d78a8: jg 0xd78c0; pop ebx; pop esi; pop edi; ret; 
0x000d78f6: jg 0xd7910; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000d9ac8: jg 0xd9af0; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000d9b81: jg 0xd9b90; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000db538: jg 0xdb560; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000db5f1: jg 0xdb600; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000dd43c: jg 0xdd44d; test byte ptr [ebx - 0x7d000000], ch; ret 0x8904; 
0x000de5d2: jg 0xde5d4; add byte ptr [eax], al; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x000de602: jg 0xde604; add byte ptr [eax], al; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000de624: jg 0xde626; add byte ptr [eax], al; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000de63f: jg 0xde641; add byte ptr [eax], al; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000de661: jg 0xde663; add byte ptr [eax], al; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de60a: jg 0xde667; cmove eax, edx; ret; 
0x000de681: jg 0xde683; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000fc5cd: jg 0xfc5de; inc esp; ret 0x8589; 
0x0011a032: jge 0x11a034; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011e7ff: jge 0x11e811; int1; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x001217ff: jge 0x121802; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00141e62: jge 0x141e70; add cl, byte ptr [ecx - 0x44f7b]; jmp dword ptr [ebp - 0x75]; 
0x0016ef63: jge 0x16ef65; jb 0x16ef76; xchg esp, eax; ret; 
0x00176746: jge 0x176747; inc dword ptr [0xaf8b7]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001926af: jge 0x1926b1; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019323f: jge 0x193241; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00020f42: jge 0x20f14; add byte ptr [ebp + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x000530b9: jge 0x53043; add byte ptr [edi], cl; test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x000ac8bd: jge 0x5e69dc0a; pop ebx; ret; 
0x000ac941: jge 0x5e69e08e; pop ebx; ret; 
0x000aca51: jge 0x5e69e99e; pop ebx; ret; 
0x00076b25: jge 0x76b20; call dword ptr [eax - 0x73]; 
0x00078146: jge 0x78141; call dword ptr [eax - 0x73]; 
0x00078162: jge 0x7815d; call dword ptr [eax - 0x73]; 
0x00078e91: jge 0x78e8d; jmp dword ptr [esi - 0x70]; 
0x00079cf3: jge 0x79cee; call dword ptr [eax - 0x73]; 
0x00079d06: jge 0x79d01; call dword ptr [eax - 0x18]; 
0x00079d12: jge 0x79d0d; call dword ptr [eax - 0x73]; 
0x00079d25: jge 0x79d20; call dword ptr [eax - 0x18]; 
0x00079d31: jge 0x79d2c; call dword ptr [eax - 0x73]; 
0x0008140c: jge 0x8144c; stc; call dword ptr [eax + 0x6a]; 
0x0009f303: jge 0x830a197d; ret; 
0x000a4cb6: jge 0x85195c06; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000ac397: jge 0x8519d31c; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008725c: jge 0x8725e; add byte ptr [ebx - 0x7c72f314], al; movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87260; call dword ptr [eax - 0x18]; 
0x000892dc: jge 0x892e8; add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x0008b45a: jge 0x8b475; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008b56c: jge 0x8b587; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008bbba: jge 0x8bbd5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008bcc7: jge 0x8bce2; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008bdca: jge 0x8bde5; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008bee2: jge 0x8befd; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008e271: jge 0x8e259; call dword ptr [eax - 1]; 
0x0008fe25: jge 0x8fe40; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x00099f45: jge 0x99f49; lea edx, [edx - 0x179290]; cmovne eax, edx; ret; 
0x0009a045: jge 0x9a049; lea edx, [edx - 0x1848c0]; cmovne eax, edx; ret; 
0x0009a3f5: jge 0x9a3f9; lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x0009a485: jge 0x9a489; lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x0009b145: jge 0x9b149; lea edx, [edx - 0x1804f0]; cmovne eax, edx; ret; 
0x0009b195: jge 0x9b199; lea edx, [edx - 0x17ec80]; cmovne eax, edx; ret; 
0x000b4a52: jge 0xb4a56; cmovne eax, edx; ret; 
0x000b5182: jge 0xb5107; sti; push dword ptr [eax + edi*2 - 0x77]; fdiv st(7); ret; 
0x000c7a86: jge 0xc7a7e; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7aab: jge 0xc7aa3; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000c7ad0: jge 0xc7ac8; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7af5: jge 0xc7aed; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000d830f: jge 0xd832e; cld; jmp dword ptr [esi - 0x70]; 
0x000d8586: jge 0xd855c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d87a6: jge 0xd877c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000de20e: jge 0xde224; add byte ptr [ecx - 0x155343], cl; jmp dword ptr [ebp - 0x75]; 
0x000de645: jge 0xde647; add byte ptr [ebx + 0xf], bl; inc esp; ret 0xb8c3; 
0x00100b42: jl 0x100b68; adc byte ptr [ebp - 0x6616779], cl; call dword ptr [eax - 0x73]; 
0x00100d6d: jl 0x100d93; adc byte ptr [ebp - 0x6618f79], cl; call dword ptr [eax - 0x73]; 
0x00100e70: jl 0x100e96; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax - 0x73]; 
0x00100ebe: jl 0x100ee4; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax - 0x73]; 
0x00101053: jl 0x1010b0; pop esi; pop edi; pop ebp; ret; 
0x00101e3a: jl 0x101dda; stc; call dword ptr [eax - 0x73]; 
0x00102066: jl 0x102006; stc; call dword ptr [eax - 0x73]; 
0x00104372: jl 0x10430e; stc; call dword ptr [eax + 0x68]; 
0x00104397: jl 0x104333; stc; call dword ptr [eax + 0x68]; 
0x0010777b: jl 0x1077a1; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00107907: jl 0x107964; pop esi; pop edi; pop ebp; ret; 
0x00107a67: jl 0x107ac4; pop esi; pop edi; pop ebp; ret; 
0x001087d1: jl 0x1087f7; cmp al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108b33: jl 0x108b90; pop esi; pop edi; pop ebp; ret; 
0x00109611: jl 0x109637; and byte ptr [edi - 0x75], dl; je 0x10963c; xor byte ptr [ebp - 0x6b5977a], cl; call dword ptr [eax - 0x18]; 
0x0010c9fb: jl 0x10ca58; pop esi; pop edi; pop ebp; ret; 
0x0010fa8b: jl 0x10fab1; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x00114261: jl 0x114287; or al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0011d0e8: jl 0x11d10e; adc al, ch; test eax, 0x81000513; ret; 
0x0011d536: jl 0x11d4c1; push esi; add al, 0x89; ret 0xe8c1; 
0x0011d6da: jl 0x11d665; push esi; add al, 0x89; ret 0xe8c1; 
0x0011d89a: jl 0x11d825; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dae6: jl 0x11da71; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dc05: jl 0x11db90; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dd0c: jl 0x11dc97; push esi; add al, 0x89; ret 0xe8c1; 
0x0011dd6c: jl 0x11dcf7; push esi; add al, 0x89; ret 0xe8c1; 
0x0011e1de: jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x0011ed6c: jl 0x11ed92; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0011f9e8: jl 0x11f9eb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120a98: jl 0x120af5; pop esi; pop edi; pop ebp; ret; 
0x00122149: jl 0x12216f; and al, 0xb8; sbb eax, 0xf000000; inc ebp; ret; 
0x00122326: jl 0x12234c; xor al, 0xe8; mov dl, 0xf8; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00123357: jl 0x12337d; xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001235bb: jl 0x123618; pop esi; pop edi; pop ebp; ret; 
0x00123bc1: jl 0x123be7; or al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00123f74: jl 0x123f9a; xor al, 0xb8; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012410e: jl 0x12416b; pop esi; pop edi; pop ebp; ret; 
0x001262e7: jl 0x12630d; xor byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0012bd16: jl 0x12bcbb; stc; call dword ptr [eax - 0x18]; 
0x0012f1ff: jl 0x12f1f6; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x001364ba: jl 0x136445; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001374a2: jl 0x1374c8; adc byte ptr [ebp - 0x6599f79], cl; call dword ptr [eax - 0x73]; 
0x00137596: jl 0x1375bc; adc byte ptr [ebp - 0x65a3779], cl; call dword ptr [eax - 0x73]; 
0x00137819: jl 0x13783f; adc byte ptr [ebp - 0x65a1779], cl; call dword ptr [eax - 0x73]; 
0x001379f9: jl 0x137a1f; adc byte ptr [ebp - 0x6a4a379], cl; call dword ptr [eax - 0x73]; 
0x00139e79: jl 0x139e9f; sub byte ptr [ebp - 0x6590b79], cl; call dword ptr [eax - 0x73]; 
0x0013d9a9: jl 0x13d9cf; sub al, 0x83; ret 0x8902; 
0x0013da19: jl 0x13da3f; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x8dc3; 
0x0013f6ca: jl 0x13f6f0; sbb byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0013f82f: jl 0x13f855; sub byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x00141933: jl 0x141959; sbb byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x0014454a: jl 0x144570; or al, 0x8d; xchg dword ptr [eax], eax; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x001493fa: jl 0x149420; or al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x00149f9a: jl 0x149fc0; and al, 0x8d; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x00149fbd: jl 0x149fe3; and al, 0x8d; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x00149fe0: jl 0x14a006; and al, 0x8d; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x0014f723: jl 0x14f725; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00151d5a: jl 0x151d80; xor al, 0x8d; xchg esp, esi; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00153b9c: jl 0x153bc2; add al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001553ea: jl 0x155410; inc eax; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00158799: jl 0x1587bf; and byte ptr [edi], cl; xchg esp, eax; ret; 
0x00163d77: jl 0x163d02; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x001655c3: jl 0x1655e9; sbb byte ptr [ebp + 0x39183844], cl; ret 0x860f; 
0x0016b03f: jl 0x16b044; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0016b091: jl 0x16b096; add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0016b448: jl 0x16b44d; add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0016ee24: jl 0x16ee4a; xor byte ptr [edi - 0x18], dl; jae 0x16ee62; int1; jmp dword ptr [ebp - 0x75]; 
0x00176876: jl 0x176877; inc dword ptr [0xaf787]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00176946: jl 0x17696c; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00193583: jl 0x1935d0; lea eax, [ecx + 0xa]; ret; 
0x00193593: jl 0x1935d0; lea eax, [ecx + 0xb]; ret; 
0x001934fe: jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x001935a3: jl 0x1935d0; lea eax, [ecx + 0xd]; ret; 
0x001935b3: jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x001935c3: jl 0x1935d0; lea eax, [ecx + 0xf]; ret; 
0x00193513: jl 0x1935d0; lea eax, [ecx + 1]; ret; 
0x00193523: jl 0x1935d0; lea eax, [ecx + 2]; ret; 
0x00193533: jl 0x1935d0; lea eax, [ecx + 3]; ret; 
0x0019349b: jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x00193543: jl 0x1935d0; lea eax, [ecx + 5]; ret; 
0x00193553: jl 0x1935d0; lea eax, [ecx + 6]; ret; 
0x00193563: jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x001934d4: jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x00193573: jl 0x1935d0; lea eax, [ecx + 9]; ret; 
0x001933b1: jl 0x1935d0; mov eax, ecx; ret; 
0x00194042: jl 0x194044; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x0019562a: jl 0x1955b5; ret 0xd285; 
0x001963ee: jl 0x196373; add al, 0x83; ret; 
0x00196411: jl 0x196437; adc byte ptr [ecx], ch; ret; 
0x00196c25: jl 0x196ba9; add al, 0x83; ret 0xd304; 
0x0019701d: jl 0x197043; adc byte ptr [ebx - 0x76cfdb8c], cl; ret 0x448b; 
0x00197c37: jl 0x197c72; ret 0x860f; 
0x00198adb: jl 0x198b01; sbb al, 0xf; xchg ebp, eax; ret 0xd789; 
0x0019a936: jl 0x19a8c1; ret 0xd285; 
0x0019b5b0: jl 0x19b535; add al, 0x83; ret; 
0x0019b5d3: jl 0x19b5f9; adc al, 0x29; ret; 
0x0011ed7d: jl 0x216d0; je 0x11ed86; ret; 
0x0012106a: jl 0x216d0; ret; 
0x000217cb: jl 0x21828; pop esi; pop edi; pop ebp; ret; 
0x00022607: jl 0x22677; stc; call dword ptr [eax - 0x73]; 
0x00022623: jl 0x22693; stc; call dword ptr [eax - 0x73]; 
0x000257a9: jl 0x257cf; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x0002583f: jl 0x25865; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x00025867: jl 0x2588d; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0002588a: jl 0x258b0; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x0002589c: jl 0x258c2; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x000266fb: jl 0x26758; pop esi; pop edi; pop ebp; ret; 
0x00026b29: jl 0x26b86; pop esi; pop edi; pop ebp; jmp eax; 
0x00026e5f: jl 0x26e85; cmp al, 0x8d; xchg eax, esi; jo 0x26e60; call dword ptr [eax - 0x73]; 
0x00026e82: jl 0x26ea8; cmp al, 0x8d; xchg eax, esi; jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026ea5: jl 0x26ecb; cmp al, 0x8d; xchg eax, esi; jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f0e: jl 0x26f34; cmp al, 0x8d; xchg eax, esi; jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00026f66: jl 0x26f8c; cmp al, 0x8d; xchg eax, esi; jo 0x26f67; call dword ptr [eax - 0x73]; 
0x00026f89: jl 0x26faf; cmp al, 0x8d; xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x00027203: jl 0x27260; pop esi; pop edi; pop ebp; ret; 
0x000275ec: jl 0x27612; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x000275c6: jl 0x27623; pop esi; pop edi; pop ebp; jmp eax; 
0x00027998: jl 0x279be; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x000279bb: jl 0x279e1; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x000279e3: jl 0x27a09; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x00027ae1: jl 0x27b07; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x00027b0e: jl 0x27b34; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x00027b31: jl 0x27b57; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax - 0x73]; 
0x00027b54: jl 0x27b7a; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x00027b85: jl 0x27b87; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x27b8a; call dword ptr [eax - 0x73]; 
0x00027b66: jl 0x27b8c; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x00027ba8: jl 0x27baa; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x27bad; call dword ptr [eax - 0x73]; 
0x00027b89: jl 0x27baf; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x00027bac: jl 0x27bd2; cmp byte ptr [ebp - 0x68f2b79], cl; call dword ptr [eax - 0x73]; 
0x0002945b: jl 0x294b8; pop esi; pop edi; pop ebp; ret; 
0x000298c2: jl 0x2991f; pop esi; pop edi; pop ebp; jmp eax; 
0x0002a3c3: jl 0x2a3e9; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a4ea: jl 0x2a510; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a50d: jl 0x2a533; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a530: jl 0x2a556; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax - 0x73]; 
0x0002a553: jl 0x2a579; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a576: jl 0x2a59c; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a5a0: jl 0x2a5c6; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0002a5b7: jl 0x2a5dd; cmp byte ptr [ebp - 0x6971f79], cl; call dword ptr [eax - 0x73]; 
0x0002a85b: jl 0x2a8b8; pop esi; pop edi; pop ebp; ret; 
0x0002acf5: jl 0x2ad52; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b368: jl 0x2b3c5; pop esi; pop edi; pop ebp; ret; 
0x0002b627: jl 0x2b64d; add al, 0x83; ret 0x8d01; 
0x0002d95e: jl 0x2d8e5; add byte ptr [0x748dd375], al; add dh, dh; ret 0x7503; 
0x0003527d: jl 0x352a3; sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x00037709: jl 0x3772f; or al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x000382e5: jl 0x3830b; add al, 0; je 0x38300; lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x0003a8fe: jl 0x3a924; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003a91e: jl 0x3a944; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0003eab4: jl 0x3eada; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0003ead7: jl 0x3eafd; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0004047a: jl 0x404a0; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00040fd6: jl 0x40ffc; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00040ff9: jl 0x4101f; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0004101c: jl 0x41042; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0004103f: jl 0x41065; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00041034: jl 0x41066; stc; call dword ptr [eax - 0x18]; 
0x00041062: jl 0x41088; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0004108c: jl 0x410b2; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000410bb: jl 0x410e1; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0004111b: jl 0x41141; sub al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x0004113e: jl 0x41164; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00041161: jl 0x41187; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00041194: jl 0x411ba; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000411d8: jl 0x411fe; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000411fb: jl 0x41221; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000411f0: jl 0x41266; stc; call dword ptr [eax - 0x18]; 
0x00041b24: jl 0x41b4a; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00041b47: jl 0x41b6d; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00043619: jl 0x4363f; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000441ef: jl 0x44215; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000441e4: jl 0x44216; stc; call dword ptr [eax - 0x18]; 
0x00044235: jl 0x4425b; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000442a0: jl 0x4426f; push cs; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00044207: jl 0x4427d; stc; call dword ptr [eax - 0x18]; 
0x00044258: jl 0x4427e; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004427b: jl 0x442a1; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000442a5: jl 0x442cb; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00044354: jl 0x4437a; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00044377: jl 0x4439d; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000443e2: jl 0x44408; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004489f: jl 0x448c5; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x00044d14: jl 0x44d3a; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00044d37: jl 0x44d5d; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000473ec: jl 0x47462; stc; call dword ptr [eax - 0x18]; 
0x000474ee: jl 0x47520; stc; call dword ptr [eax - 0x18]; 
0x00047562: jl 0x47588; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x0004d8a4: jl 0x4d8ca; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0004d8c7: jl 0x4d8ed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00050abb: jl 0x50aed; stc; call dword ptr [eax - 0x18]; 
0x00050b74: jl 0x50bea; stc; call dword ptr [eax - 0x18]; 
0x00054d25: jl 0x54d4b; xor al, 0x2b; jl 0x54d4f; cmp byte ptr [ebx - 0x7bf00008], al; ret; 
0x00054d29: jl 0x54d4f; cmp byte ptr [ebx - 0x7bf00008], al; ret; 
0x00054e61: jl 0x54e87; adc byte ptr [edi], cl; mov dh, 0x5f; or al, 0xf6; ret; 
0x00055df9: jl 0x55e1f; sbb byte ptr [ebx - 0x16b7dba4], cl; ret; 
0x0005612f: jl 0x56155; or al, 0xf; mov esi, 0x8b572444; xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x00057b84: jl 0x57baa; sub byte ptr [edi - 0x18], dl; ret; 
0x00058309: jl 0x58366; pop esi; pop edi; pop ebp; ret; 
0x000656e2: jl 0x65708; sub al, 0x8d; xchg dword ptr [eax], esp; jns 0x656e3; call dword ptr [eax - 0x73]; 
0x0006a72a: jl 0x6a750; sub al, 0x8d; xchg dword ptr [eax], esp; jns 0x6a72b; call dword ptr [eax - 0x73]; 
0x0006e110: jl 0x6e136; push eax; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x000704ad: jl 0x7050a; pop esi; pop edi; pop ebp; ret; 
0x000717e8: jl 0x7180e; adc al, ch; test eax, 0x81000fcc; ret; 
0x00072079: jl 0x72074; jmp dword ptr [ebp - 0x75]; 
0x00075fe5: jl 0x75fe0; call dword ptr [eax - 0x73]; 
0x00078fb9: jl 0x78fb5; jmp dword ptr [esi - 0x70]; 
0x0007b38c: jl 0x7b3a7; add byte ptr [eax], al; cmp eax, 1; jg 0x7b3a0; ret; 
0x0008085b: jl 0x80856; call dword ptr [eax - 0x73]; 
0x00081c45: jl 0x81c6b; add al, 1; je 0x81c58; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00081c71: jl 0x81c73; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00081ca8: jl 0x81caa; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00081cb1: jl 0x81cb3; add byte ptr [eax], al; ret; 
0x000825ca: jl 0x825cc; add byte ptr [eax], al; ret; 
0x00084059: jl 0x8407f; adc byte ptr [eax], ah; je 0x84068; add esp, 8; pop ebx; ret; 
0x0008490c: jl 0x84932; add al, 0x89; ret 0xe183; 
0x000849a9: jl 0x849cf; add al, 0x89; ret 0xe183; 
0x000850e6: jl 0x85143; pop esi; pop edi; pop ebp; ret; 
0x00085732: jl 0x8578f; pop esi; pop edi; pop ebp; ret; 
0x00085d2d: jl 0x85d53; add al, 0x8d; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x00085d50: jl 0x85d76; add al, 0x8d; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x00085ea6: jl 0x85eac; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00086da4: jl 0x86e25; stc; call dword ptr [eax + 0x68]; 
0x00086fcb: jl 0x8704c; stc; call dword ptr [eax - 0x73]; 
0x00086fed: jl 0x8706e; stc; call dword ptr [eax - 0x73]; 
0x00087045: jl 0x870c6; stc; call dword ptr [eax - 0x73]; 
0x00087089: jl 0x8710a; stc; call dword ptr [eax - 0x73]; 
0x000870de: jl 0x8715f; stc; call dword ptr [eax + 0x68]; 
0x00090425: jl 0x903aa; stc; call dword ptr [eax + 0x68]; 
0x00090444: jl 0x903c9; stc; call dword ptr [eax + 0x68]; 
0x00090452: jl 0x903d7; stc; call dword ptr [eax - 0x73]; 
0x000904e4: jl 0x904d8; je 0x904f3; xor eax, eax; pop ebx; ret; 
0x0009052c: jl 0x90520; mov edx, 0; cmovne eax, edx; ret; 
0x00095f2c: jl 0x95f52; adc al, 0x29; ret 0x4f8d; 
0x00098a5c: jl 0x98a82; sub al, 0x8d; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00098a80: jl 0x98aa6; sub al, 0x8d; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x0009af7f: jl 0x9af76; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009bcbd: jl 0x9bce3; and byte ptr [ebp - 0x107c00bf], cl; add dword ptr [ecx], eax; ret; 
0x0009c176: jl 0x9c19c; sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000a0d61: jl 0xa0d87; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000ac560: jl 0xac568; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b2f58: jl 0xb2f90; add eax, ecx; ret; 
0x000b2f68: jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b2f78: jl 0xb2f90; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f88: jl 0xb2f90; lea eax, [ecx + eax + 0x30]; ret; 
0x000b5858: jl 0xb57f0; stc; call dword ptr [eax - 0x73]; 
0x000b6595: jl 0xb65bb; pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b6a95: jl 0xb6abb; dec eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x000b83a4: jl 0xb83ca; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000b83c7: jl 0xb83ed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000b86b0: jl 0xb8639; add al, 0x81; ret 0; 
0x000b9b3c: jl 0xb9b62; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000b9c3e: jl 0xb9c64; xor byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x000ba314: jl 0xba33a; xor byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x000ba472: jl 0xba498; cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x000ba889: jl 0xba8af; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba8ac: jl 0xba8d2; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba8cf: jl 0xba8f5; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba8f2: jl 0xba918; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba915: jl 0xba93b; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba938: jl 0xba95e; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba962: jl 0xba988; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba985: jl 0xba9ab; xor byte ptr [ebp - 0x689bb79], cl; call dword ptr [eax - 0x73]; 
0x000ba9a8: jl 0xba9ce; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba9cb: jl 0xba9f1; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba9ee: jl 0xbaa14; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba9c0: jl 0xbaa36; stc; call dword ptr [eax - 0x18]; 
0x000baa11: jl 0xbaa37; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000baa34: jl 0xbaa5a; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000baa57: jl 0xbaa7d; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000baa7a: jl 0xbaaa0; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000baa6f: jl 0xbaaa1; stc; call dword ptr [eax - 0x18]; 
0x000baa9d: jl 0xbaac3; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000baeff: jl 0xbaf25; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000bb2fc: jl 0xbb322; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000bb31f: jl 0xbb345; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000bd147: jl 0xbd16d; xor byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x000bd25a: jl 0xbd280; cmp byte ptr [edi], cl; xchg edi, eax; ret; 
0x000bd695: jl 0xbd6bb; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bd6db: jl 0xbd701; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bd6f3: jl 0xbd725; stc; call dword ptr [eax - 0x18]; 
0x000bd6d0: jl 0xbd746; stc; call dword ptr [eax - 0x18]; 
0x000bd767: jl 0xbd78d; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bd7b4: jl 0xbd7da; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bd81d: jl 0xbd843; xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bdfd4: jl 0xbdffa; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000bdff7: jl 0xbe01d; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000be2d7: jl 0xbe260; add al, 0x81; ret 0; 
0x000beba2: jl 0xbebc8; sub al, 0x8d; xchg dword ptr [ecx + edi*4 - 7], eax; call dword ptr [eax + 0x56]; 
0x000bf5e0: jl 0xbf606; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c02e6: jl 0xc030c; and al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000c0309: jl 0xc032f; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c032c: jl 0xc0352; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c034f: jl 0xc0375; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c037e: jl 0xc03a4; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c03a1: jl 0xc03c7; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c0396: jl 0xc03c8; stc; call dword ptr [eax - 0x18]; 
0x000c03c4: jl 0xc03ea; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c03e7: jl 0xc040d; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c03b9: jl 0xc042f; stc; call dword ptr [eax - 0x18]; 
0x000c040a: jl 0xc0430; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c042d: jl 0xc0453; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c0459: jl 0xc047f; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c047c: jl 0xc04a2; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c049f: jl 0xc04c5; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c04c9: jl 0xc04ef; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c181c: jl 0xc17b3; stc; call dword ptr [eax - 0x18]; 
0x000c4aac: jl 0xc4ad2; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000c4acf: jl 0xc4af5; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000c79a7: jl 0xc79d9; stc; call dword ptr [eax - 0x18]; 
0x000c79cc: jl 0xc7a42; stc; call dword ptr [eax - 0x18]; 
0x000c8ab0: jl 0xc8abc; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000c8d07: jl 0xc8c8b; add al, 0; lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x000c9d9d: jl 0xc9dc3; push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000c9ddf: jl 0xc9e3c; pop esi; pop edi; pop ebp; ret; 
0x000c9f03: jl 0xc9f29; insb byte ptr es:[edi], dx; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000d140d: jl 0xd1433; sbb byte ptr [ebp - 0x666bb79], cl; call dword ptr [eax - 0x73]; 
0x000d5c2a: jl 0xd5c50; adc al, 1; je 0xd5c38; add esp, 0xc; ret; 
0x000d5d0a: jl 0xd5d30; adc al, 1; je 0xd5d18; add esp, 0xc; ret; 
0x000d7b69: jl 0xd7b8f; sub al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x000d9178: jl 0xd919e; or byte ptr [ebp - 0x6667b79], cl; call dword ptr [eax - 0x73]; 
0x000e0102: jl 0xe009e; stc; call dword ptr [eax + 0x68]; 
0x000e0127: jl 0xe00c3; stc; call dword ptr [eax + 0x68]; 
0x000e2792: jl 0xe272e; stc; call dword ptr [eax + 0x68]; 
0x000e27b7: jl 0xe2753; stc; call dword ptr [eax + 0x68]; 
0x000ee313: jl 0xee370; pop esi; pop edi; pop ebp; ret; 
0x000ef84c: jl 0xef8a9; pop esi; pop edi; pop ebp; ret; 
0x000f2bb0: jl 0xf2bd6; xor byte ptr [ebp - 0x6b78a79], cl; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000f2e40: jl 0xf2e66; xor byte ptr [ebp - 0x6d17879], cl; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000f5b88: jl 0xf5bae; xor byte ptr [edi - 0x18], dl; jmp dword ptr [esi - 1]; 
0x000f7652: jl 0xf75ee; stc; call dword ptr [eax + 0x68]; 
0x000f7677: jl 0xf7613; stc; call dword ptr [eax + 0x68]; 
0x000f8202: jl 0xf819e; stc; call dword ptr [eax + 0x68]; 
0x000f8227: jl 0xf81c3; stc; call dword ptr [eax + 0x68]; 
0x000f937c: jl 0xf93a2; adc al, 0x8d; xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x000f9453: jl 0xf9479; adc al, 0x8d; xchg dword ptr [esp + ebx*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000f9496: jl 0xf94bc; adc al, 0x8d; xchg dword ptr [esp + ebx*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000fac8f: jl 0xfacb5; adc al, 0x8d; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000fe3db: jl 0xfe3ef; add byte ptr [ebx - 0x77], dl; ret; 
0x000ffa4b: jl 0xffa71; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax - 0x73]; 
0x000ffc8c: jl 0xffcb2; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax + 0x68]; 
0x000ffe7f: jl 0xffea5; adc byte ptr [ebp - 0x6617379], cl; call dword ptr [eax + 0x68]; 
0x0011916f: jle 0x119161; jmp dword ptr [esi - 0x70]; 
0x0012182b: jle 0x12182e; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139252: jle 0x1392b0; stc; call dword ptr [eax - 0x18]; 
0x0013f427: jle 0x13f42e; cmp byte ptr [ebx], 0x2e; je 0x13f438; add esp, 8; pop ebx; ret; 
0x00146801: jle 0x14678e; inc ebp; aam 0x85; ror byte ptr [edi], 0x84; ret; 
0x0014b590: jle 0x14b58b; call dword ptr [eax - 0x18]; 
0x0014b590: jle 0x14b58b; call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x00159167: jle 0x159166; jmp dword ptr [esi - 0x70]; 
0x0015b7a8: jle 0x15b72d; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0015f50d: jle 0x15f520; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016349d: jle 0x1634b3; pop ebx; pop esi; pop edi; ret; 
0x00165c0c: jle 0x165c73; stc; call dword ptr [eax - 0x18]; 
0x001709fe: jle 0x1709f9; call dword ptr [eax - 0x18]; 
0x0017b3ea: jle 0x17b42c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017b5f6: jle 0x17b638; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017ba8a: jle 0x17ba8c; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d41a: jle 0x17d45c; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0017d616: jle 0x17d658; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0017f53a: jle 0x17f57c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017f746: jle 0x17f788; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017fbda: jle 0x17fbdc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001848ca: jle 0x18490c; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184ac6: jle 0x184b08; clc; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184eea: jle 0x184eec; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0018b697: jle 0x18b68b; call dword ptr [ebx - 0x18]; 
0x0019014b: jle 0x1901e8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00193c2e: jle 0x193bb9; ret 0xe283; 
0x000279b7: jle 0x279b9; add byte ptr [ebx - 0x72c7db84], cl; xchg esp, edx; jo 0x279bc; call dword ptr [eax - 0x73]; 
0x0002e4ee: jle 0x2e4d0; call dword ptr [eax - 0x73]; 
0x0004a5b8: jle 0x4a5ba; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a5f4: jle 0x4a5f6; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a845: jle 0x4a847; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00051b88: jle 0x51ab5; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0007101a: jle 0x7101f; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00078dbb: jle 0x78db7; jmp dword ptr [esi - 0x70]; 
0x00079b89: jle 0x79b84; call dword ptr [eax - 0x73]; 
0x0007a56d: jle 0x7a580; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0007a69d: jle 0x7a6b0; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007b343: jle 0x7b33e; call dword ptr [eax - 0x18]; 
0x0007da97: jle 0x7da92; call dword ptr [eax - 0x73]; 
0x0007dab6: jle 0x7dab1; call dword ptr [eax - 0x73]; 
0x0008226e: jle 0x82269; call dword ptr [eax - 0x18]; 
0x0008250e: jle 0x82509; call dword ptr [eax - 0x18]; 
0x0008265f: jle 0x8265a; call dword ptr [eax - 0x18]; 
0x000826e1: jle 0x826dc; call dword ptr [eax - 0x18]; 
0x00082c2e: jle 0x82c29; call dword ptr [eax - 0x18]; 
0x00082cf4: jle 0x82cef; call dword ptr [eax - 0x18]; 
0x00082e7d: jle 0x82e78; call dword ptr [eax - 0x18]; 
0x000830a0: jle 0x8309b; call dword ptr [eax - 0x18]; 
0x00083d7c: jle 0x83d77; call dword ptr [eax - 0x18]; 
0x00083e8b: jle 0x83e86; call dword ptr [eax - 0x18]; 
0x00084212: jle 0x8420d; call dword ptr [eax - 0x18]; 
0x00084698: jle 0x84693; call dword ptr [eax - 0x18]; 
0x00084801: jle 0x847fc; call dword ptr [eax - 0x18]; 
0x00084b70: jle 0x84b6b; call dword ptr [eax - 0x18]; 
0x00084c8d: jle 0x84c88; call dword ptr [eax - 0x18]; 
0x00084cfb: jle 0x84cf6; call dword ptr [eax - 0x18]; 
0x00084d67: jle 0x84d62; call dword ptr [eax - 0x18]; 
0x00084ed4: jle 0x84ecf; call dword ptr [eax - 0x18]; 
0x00084faa: jle 0x84fa5; call dword ptr [eax - 0x18]; 
0x000852b6: jle 0x852b1; call dword ptr [eax - 0x18]; 
0x000855c6: jle 0x855c1; call dword ptr [eax - 0x18]; 
0x00085916: jle 0x85911; call dword ptr [eax - 0x18]; 
0x00086056: jle 0x86051; call dword ptr [eax - 0x18]; 
0x000860be: jle 0x860b9; call dword ptr [eax - 0x18]; 
0x000881de: jle 0x881d9; call dword ptr [eax - 0x18]; 
0x00088c78: jle 0x88c73; call dword ptr [eax - 0x18]; 
0x00088f16: jle 0x88f11; call dword ptr [eax - 0x18]; 
0x000892fe: jle 0x89365; cli; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00089728: jle 0x89723; call dword ptr [eax - 0x18]; 
0x0008a01f: jle 0x8a01a; call dword ptr [eax - 0x18]; 
0x0008a811: jle 0x8a80c; call dword ptr [eax - 0x18]; 
0x0008a811: jle 0x8a80c; call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x0008ad0f: jle 0x8ad0a; call dword ptr [eax - 0x18]; 
0x0008b08d: jle 0x8b05a; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008b222: jle 0x8b21d; call dword ptr [eax - 0x18]; 
0x0008b32e: jle 0x8b329; call dword ptr [eax - 0x18]; 
0x0008b524: jle 0x8b51f; call dword ptr [eax - 0x18]; 
0x0008b9c6: jle 0x8b9c1; call dword ptr [eax - 0x18]; 
0x0008bc50: jle 0x8bc4b; call dword ptr [eax - 0x18]; 
0x0008be60: jle 0x8be5b; call dword ptr [eax - 0x18]; 
0x0008bfc6: jle 0x8bfd0; dec ecx; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008c308: jle 0x8c303; call dword ptr [eax - 0x18]; 
0x0008c482: jle 0x8c47d; call dword ptr [eax - 0x18]; 
0x0008c706: jle 0x8c701; call dword ptr [eax - 0x18]; 
0x0008ca48: jle 0x8ca43; call dword ptr [eax - 0x18]; 
0x0008d6a6: jle 0x8d6a1; call dword ptr [eax - 0x18]; 
0x0008ddcb: jle 0x8ddc6; call dword ptr [eax - 0x18]; 
0x0008e2c6: jle 0x8e2ae; call dword ptr [eax - 0x73]; 
0x0008e3b6: jle 0x8e3b1; call dword ptr [eax - 0x18]; 
0x0008e716: jle 0x8e711; call dword ptr [eax - 0x18]; 
0x0008e716: jle 0x8e711; call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x00090dd9: jle 0x90dd4; call dword ptr [eax - 0x18]; 
0x0009a082: jle 0x9a094; cmovne eax, edx; ret; 
0x0009a502: jle 0x9a514; cmovne eax, edx; ret; 
0x0009a632: jle 0x9a644; cmovne eax, edx; ret; 
0x000aab2e: jle 0xaab39; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c7989: jle 0xc7981; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c79ae: jle 0xc79a6; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000c79d3: jle 0xc79cb; dec dword ptr [ebx - 0x363f43]; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000c79f8: jle 0xc79f0; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x689bb7f]; call dword ptr [eax - 0x73]; 
0x000c7a1d: jle 0xc7a15; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7a42: jle 0xc7a3a; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c7a61: jle 0xc7a59; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000ce6f3: jle 0xce705; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000de6a1: jle 0xde6a3; add byte ptr [eax], al; pop ebx; ret; 
0x000e939c: jle 0xe93eb; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0016b38a: jmp dword ptr [eax + 0x30]; 
0x00161f83: jmp dword ptr [eax + 4]; 
0x0006e5ad: jmp dword ptr [eax - 2]; 
0x0003e3a3: jmp dword ptr [eax]; 
0x0005d771: jmp dword ptr [ebp + 0x31]; 
0x000213c7: jmp dword ptr [ebp + 0x33]; 
0x000841a1: jmp dword ptr [ebp + 0x39]; 
0x0004ddcb: jmp dword ptr [ebp + 0xf]; 
0x00021dd3: jmp dword ptr [ebp + 3]; 
0x000c43f1: jmp dword ptr [ebp - 0x39]; 
0x0008f04b: jmp dword ptr [ebp - 0x5d]; 
0x0002ec96: jmp dword ptr [ebp - 0x5f]; 
0x0002dada: jmp dword ptr [ebp - 0x75]; 
0x000216e6: jmp dword ptr [ebp - 0x77]; 
0x000217dd: jmp dword ptr [ebp - 0x7d]; 
0x00097a95: jmp dword ptr [ebp - 0x80]; 
0x0002ebc6: jmp dword ptr [ebp - 1]; 
0x00062a6a: jmp dword ptr [ebp]; 
0x00020164: jmp dword ptr [ebx + 0xc]; 
0x00020006: jmp dword ptr [ebx + 8]; 
0x001580a3: jmp dword ptr [ebx - 0x41]; 
0x0002e14d: jmp dword ptr [ebx]; 
0x00149396: jmp dword ptr [ecx]; 
0x00124532: jmp dword ptr [edi + 0x6d]; 
0x00054234: jmp dword ptr [edi + 0x75]; 
0x00053ef1: jmp dword ptr [edi - 0x75]; 
0x000e176d: jmp dword ptr [edi]; 
0x0002e2fd: jmp dword ptr [edx + 8]; 
0x00155978: jmp dword ptr [edx - 7]; 
0x00066ec6: jmp dword ptr [edx]; 
0x00055e73: jmp dword ptr [esi + 0x3d]; 
0x000e97bc: jmp dword ptr [esi + 0xb]; 
0x00020149: jmp dword ptr [esi + 0xf]; 
0x000506cd: jmp dword ptr [esi + 6]; 
0x0013cabb: jmp dword ptr [esi - 0x39]; 
0x00136f95: jmp dword ptr [esi - 0x3f]; 
0x0002001d: jmp dword ptr [esi - 0x70]; 
0x00024451: jmp dword ptr [esi - 0x77]; 
0x00198c4c: jmp dword ptr [esi - 0x7b]; 
0x000cba76: jmp dword ptr [esi - 0x7d]; 
0x0013f013: jmp dword ptr [esi - 0x7f]; 
0x000f5b8d: jmp dword ptr [esi - 1]; 
0x0016ca6b: jmp dword ptr [esi - 9]; 
0x000dd307: jmp dword ptr [esi]; 
0x000218c7: jmp eax; 
0x0005928e: jmp ebx; 
0x0003466e: jmp ecx; 
0x00021f35: jmp edi; 
0x00034402: jmp edx; 
0x00065a32: jmp esi; 
0x001020d7: jne 0x102100; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021a7: jne 0x1021d0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00102276: jne 0x1022a0; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00102346: jne 0x102370; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001029b2: jne 0x1029bd; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00103585: jne 0x103597; add esp, 0x1c; ret; 
0x001035e1: jne 0x1035c0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010385d: jne 0x10383e; xor eax, eax; pop ebx; ret; 
0x00103a2b: jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00105f05: jne 0x105f52; add esp, 0x14; pop ebx; pop esi; ret; 
0x00105fbd: jne 0x105f9e; xor eax, eax; pop ebx; ret; 
0x0010618b: jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd9: jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c59: jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x00106de2: jne 0x106dfe; add esp, 0x74; pop ebx; pop esi; ret; 
0x00106ecb: jne 0x106f04; add esp, 0x74; pop ebx; pop esi; ret; 
0x00106f75: jne 0x106f8e; add esp, 0x74; pop ebx; pop esi; ret; 
0x001074fc: jne 0x107516; add esp, 0x74; pop ebx; pop esi; ret; 
0x0010783c: jne 0x107880; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00107c48: jne 0x107c57; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107ca8: jne 0x107cb7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00107d08: jne 0x107d17; add esp, 0x64; pop ebx; pop esi; ret; 
0x00107d74: jne 0x107d87; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x001081ae: jne 0x1081f0; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108450: jne 0x108490; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0010858d: jne 0x1085b8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010864d: jne 0x108678; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108ffe: jne 0x1090b0; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010914e: jne 0x109200; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010922c: jne 0x109250; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001093ec: jne 0x109410; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00109df3: jne 0x109e4b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00109f87: jne 0x109fcd; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x0010a3c4: jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x0010ac3b: jne 0x10ac49; call dword ptr [ebp + 0x24]; 
0x0010af13: jne 0x10af21; call dword ptr [ebp + 0x24]; 
0x0010af84: jne 0x10af92; call dword ptr [ebp + 0x24]; 
0x0010bc6b: jne 0x10bc79; call dword ptr [ebp + 0x24]; 
0x0010bf43: jne 0x10bf51; call dword ptr [ebp + 0x24]; 
0x0010bfb4: jne 0x10bfc2; call dword ptr [ebp + 0x24]; 
0x0010f6fd: jne 0x10f728; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010fa60: jne 0x10fa68; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010fb0e: jne 0x10fb16; add esp, 0x14; pop esi; pop edi; ret; 
0x001104ac: jne 0x1104c9; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001105a8: jne 0x1105cc; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011078c: jne 0x1107cc; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00110833: jne 0x11086c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001127eb: jne 0x1127f9; call dword ptr [ebp + 0x24]; 
0x00112ac3: jne 0x112ad1; call dword ptr [ebp + 0x24]; 
0x00112b34: jne 0x112b42; call dword ptr [ebp + 0x24]; 
0x00113140: jne 0x113150; add esp, 4; pop ebx; pop esi; ret; 
0x001138ef: jne 0x113942; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011399f: jne 0x1139f2; add esp, 0x14; pop ebx; pop esi; ret; 
0x00113ff7: jne 0x113fce; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x0011436d: jne 0x114392; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001143dc: jne 0x1143e9; add esp, 0x1c; ret; 
0x0011442d: jne 0x114460; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x001147bf: jne 0x1147f2; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011498e: jne 0x1149b2; add esp, 0x54; pop ebx; pop esi; ret; 
0x00114a92: jne 0x114ab2; add esp, 0x54; pop ebx; pop esi; ret; 
0x00114b10: jne 0x114bb4; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00114c28: jne 0x114c44; add esp, 0x14; pop ebx; pop esi; ret; 
0x00114cea: jne 0x114cf9; add esp, 0x54; pop ebx; pop esi; ret; 
0x00114fdd: jne 0x115008; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011509d: jne 0x1150c8; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115246: jne 0x115270; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153f6: jne 0x115420; mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115cee: jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d8e: jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115e3d: jne 0x115ea6; add esp, 0x24; pop ebx; pop esi; ret; 
0x00115f0d: jne 0x115f76; add esp, 0x24; pop ebx; pop esi; ret; 
0x00115ff9: jne 0x115fff; add esp, 0x1c; ret; 
0x001161f9: jne 0x116237; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0011699c: jne 0x1169c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a6c: jne 0x116a90; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00116de6: jne 0x116e0f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00117162: jne 0x117177; add esp, 0x3c; ret; 
0x001171d3: jne 0x1171d9; add esp, 0x1c; ret; 
0x0011740e: jne 0x117420; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x001175d7: jne 0x1175b0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00117638: jne 0x117610; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00117751: jne 0x11770c; add esp, 0xc; ret; 
0x001177a0: jne 0x11777b; mov eax, esi; pop ebx; pop esi; ret; 
0x00117e2e: jne 0x117dee; pop ebx; pop esi; pop edi; ret; 
0x00117f80: jne 0x117f88; add esp, 0x34; pop ebx; pop esi; ret; 
0x00118005: jne 0x11800d; add esp, 0x34; pop ebx; pop esi; ret; 
0x001180a3: jne 0x1180ab; add esp, 0x34; pop ebx; pop esi; ret; 
0x00118125: jne 0x11812d; add esp, 0x34; pop ebx; pop esi; ret; 
0x001181be: jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x00118243: jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x001182d2: jne 0x1182da; add esp, 0x34; pop ebx; pop esi; ret; 
0x00118363: jne 0x11836c; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00119eed: jne 0x119f2a; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00119faf: jne 0x119fea; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011a06d: jne 0x11a098; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a3a0: jne 0x11a3ed; stc; call dword ptr [eax + 0x53]; 
0x0011ae7d: jne 0x11ae83; add esp, 0x1c; ret; 
0x0011b20e: jne 0x11b230; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0011b1fb: jne 0x11b240; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011b28e: jne 0x11b2b0; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0011b27b: jne 0x11b2c0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011b2ef: jne 0x11b31c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0011b73b: jne 0x11b705; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0011bce2: jne 0x11bce8; ret; 
0x0011bd06: jne 0x11bd10; ret; 
0x0011c145: jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0011c2ae: jne 0x11c2de; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011c4da: jne 0x11c510; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0011c946: jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x0011cb24: jne 0x11cb2e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011cbb4: jne 0x11cbbe; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0011d0ac: jne 0x11d0a0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0011e493: jne 0x11e49b; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011ed0a: jne 0x11ed16; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0011f86d: jne 0x11f898; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011fb4c: jne 0x11fbdf; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011fc73: jne 0x11fc41; lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0011fc4c: jne 0x11fce7; add esp, 0x44; mov eax, ecx; pop ebx; pop esi; ret; 
0x0011ffe0: jne 0x120002; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00120070: jne 0x120092; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00120591: jne 0x12059d; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x00120761: jne 0x1207b0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00120821: jne 0x120870; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001208e1: jne 0x120930; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00121180: jne 0x1211a2; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121929: jne 0x12193c; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121d71: jne 0x121d92; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00121e14: jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121eb1: jne 0x121ed2; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00121f39: jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb9: jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x00122224: jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x001222cc: jne 0x1222f2; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122501: jne 0x122522; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001225ac: jne 0x1225d2; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122651: jne 0x122672; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012270c: jne 0x122732; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122964: jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e9: jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a74: jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122b05: jne 0x122b0d; add esp, 0x74; pop ebx; pop esi; ret; 
0x00122bcd: jne 0x122bd3; add esp, 0x1c; ret; 
0x00122c5c: jne 0x122c82; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0012319a: jne 0x1231d0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001232d7: jne 0x1232e4; add esp, 0x7c; ret; 
0x00123319: jne 0x12331b; add byte ptr [eax], al; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0012335f: jne 0x123361; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012345e: jne 0x123460; add byte ptr [eax], al; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001235dd: jne 0x1235df; add byte ptr [eax], al; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x001238a7: jne 0x12393e; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x00123aa2: jne 0x123aa4; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123f19: jne 0x123f3a; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00123f78: jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012412d: jne 0x12412f; add byte ptr [eax], al; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x00124705: jne 0x12473e; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00126143: jne 0x126150; mov eax, edx; pop ebx; pop esi; ret; 
0x001261ae: jne 0x1261b8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126399: jne 0x1263a0; mov eax, edx; pop ebx; pop esi; ret; 
0x001269ee: jne 0x1269f8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126a4e: jne 0x126a58; mov eax, edx; pop ebx; pop esi; ret; 
0x00126c39: jne 0x126c40; mov eax, edx; pop ebx; pop esi; ret; 
0x0012a9d3: jne 0x12a9bf; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012c450: jne 0x12c406; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012d35e: jne 0x12d390; pop ebx; pop esi; pop edi; ret; 
0x0012d546: jne 0x12d534; add esp, 4; pop ebx; pop esi; ret; 
0x0012e89a: jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x0012e95d: jne 0x12e945; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0012e93d: jne 0x12e950; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x12e958; ret; 
0x0012f351: jne 0x12f340; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00130120: jne 0x130130; pop ebx; pop esi; pop edi; ret; 
0x00130332: jne 0x130320; call 0x12f900; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x001304ac: jne 0x130466; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x00130c69: jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd9: jne 0x130ce5; add esp, 0x2c; ret; 
0x00137cf4: jne 0x137cfd; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00137d8a: jne 0x137d90; add esp, 0x2c; ret; 
0x00139566: jne 0x139550; add esp, 4; pop ebx; pop esi; ret; 
0x0013b46d: jne 0x13b50e; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013bdb0: jne 0x13bddc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0013c288: jne 0x13c24a; mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0013cd2a: jne 0x13cd60; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013d5ed: jne 0x13d610; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0013d7b3: jne 0x13d7d0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013dc3c: jne 0x13dc48; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0013dd02: jne 0x13dd44; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013e26e: jne 0x13e2d8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013eca7: jne 0x13ecb0; pop ebx; pop esi; pop edi; ret; 
0x0014226f: jne 0x1422b3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00142443: jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x0014249f: jne 0x1424a5; add esp, 0x1c; ret; 
0x001424eb: jne 0x1424f1; add esp, 0x1c; ret; 
0x001438cb: jne 0x1438d7; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00143b9a: jne 0x143ba6; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x00143d2e: jne 0x143cf8; mov eax, 1; pop ebx; ret; 
0x00143da2: jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e42: jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143f02: jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143fa2: jne 0x143fcd; add esp, 0x11c; ret; 
0x00144232: jne 0x14427c; add esp, 0x1c; ret; 
0x00144da1: jne 0x144db0; pop ebx; pop esi; pop edi; ret; 
0x00144de7: jne 0x144dd0; pop ebx; pop esi; pop edi; ret; 
0x0014793c: jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014a5a0: jne 0x14a5b0; add esp, 4; pop ebx; pop esi; ret; 
0x0014af3a: jne 0x14af30; ret; 
0x0014b563: jne 0x14b510; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0014ba7d: jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x0014d5b3: jne 0x14d540; pop ebx; pop esi; ret; 
0x0014d8a3: jne 0x14d8c8; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0014df60: jne 0x14df66; add esp, 0x1c; ret; 
0x0014e0a4: jne 0x14e0c0; mov eax, ecx; ret; 
0x0014f7b2: jne 0x14f7a0; add esp, 8; pop ebx; ret; 
0x001501b6: jne 0x1501ee; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00150826: jne 0x15085e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001526c6: jne 0x1526fe; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00152a46: jne 0x152a7e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00152f56: jne 0x152f8e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001532b6: jne 0x1532ee; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00154346: jne 0x15437e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001548a6: jne 0x1548de; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00155052: jne 0x15505b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001550d9: jne 0x1550e8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001558a0: jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x00155a81: jne 0x155aa0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00155b24: jne 0x155bc3; add esp, 0x34; pop ebx; pop esi; ret; 
0x00155d49: jne 0x155d77; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00155ddd: jne 0x155df0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00155f74: jne 0x155fa9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015698d: jne 0x1569a0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00156a4d: jne 0x156a58; add esp, 4; pop ebx; pop esi; ret; 
0x00156ac9: jne 0x156ad8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00156bf5: jne 0x156c48; mov dword ptr [eax], 0; pop ebx; ret; 
0x00156d63: jne 0x156e90; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00157a17: jne 0x157a28; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00157ed6: jne 0x157f06; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00157f61: jne 0x157f96; add esp, 0x14; pop ebx; pop esi; ret; 
0x001588ff: jne 0x158917; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001591a2: jne 0x159190; pop ebx; ret; 
0x001592b6: jne 0x1592c0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00159359: jne 0x159368; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0015ada7: jne 0x15ae0b; std; jmp dword ptr [esi - 0x70]; 
0x0015b8c3: jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015dc2a: jne 0x15dc7c; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0015eb18: jne 0x15eb27; add esp, 0x1c; ret; 
0x0015eb94: jne 0x15ebac; add esp, 0x74; pop ebx; pop edi; ret; 
0x0015ec42: jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ece2: jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015eda1: jne 0x15ede7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0015ee91: jne 0x15eed7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0015efaf: jne 0x15efbf; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0015f034: jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0ab: jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015f1b2: jne 0x15f21f; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0015f5c2: jne 0x15f5ef; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015fbea: jne 0x15fb6f; ret 0x3901; 
0x0015feef: jne 0x15fef5; add esp, 0x4c; ret; 
0x0015ff5f: jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffcf: jne 0x15ffd5; add esp, 0x4c; ret; 
0x0016003f: jne 0x160045; add esp, 0x4c; ret; 
0x001600a2: jne 0x1600a8; add esp, 0x4c; ret; 
0x00160102: jne 0x160108; add esp, 0x4c; ret; 
0x0016016f: jne 0x160175; add esp, 0x4c; ret; 
0x001601ef: jne 0x1601f5; add esp, 0x4c; ret; 
0x001605e1: jne 0x1605ec; add esp, 0x94; pop ebx; pop edi; ret; 
0x001606dd: jne 0x1606e3; add esp, 0x1c; ret; 
0x00160725: jne 0x160754; add esp, 0x1c; ret; 
0x00160791: jne 0x160778; add esp, 8; pop ebx; ret; 
0x00160af3: jne 0x160b00; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x00161f26: jne 0x161f2c; add esp, 0x2c; ret; 
0x00161fd7: jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c7: jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162169: jne 0x162216; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00162259: jne 0x162306; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0016236e: jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623fe: jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624bd: jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x00162522: jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625be: jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162afd: jne 0x162ba6; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00162bfd: jne 0x162ca6; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00162dde: jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e6e: jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162efe: jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f8e: jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x0016337f: jne 0x1633a1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001635d4: jne 0x1635dc; add esp, 0x54; pop ebx; pop esi; ret; 
0x00163646: jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x001636a6: jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x0016370f: jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x0016376f: jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00163802: jne 0x163810; add esp, 0xc; ret; 
0x00163852: jne 0x163860; add esp, 0xc; ret; 
0x001640f1: jne 0x1640fa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001647b1: jne 0x1647ba; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00167bfe: jne 0x167c1d; add esp, 0x514; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016815b: jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x001683e1: jne 0x168414; add esp, 0x14; pop ebx; pop esi; ret; 
0x00168471: jne 0x1684a4; add esp, 0x14; pop ebx; pop esi; ret; 
0x00169930: jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a8: jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016a4de: jne 0x16a53b; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016ac39: jne 0x16ac87; add esp, 0xd8; mov eax, ebx; pop ebx; ret; 
0x0016ace5: jne 0x16acee; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016ae7a: jne 0x16ae1c; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0016ae7f: jne 0x16ae31; call eax; 
0x0016af6b: jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b12c: jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1ce: jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b2fc: jne 0x16b33c; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016b863: jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016bc27: jne 0x16bcd0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016c01c: jne 0x16c078; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016cf77: jne 0x16cf80; add esp, 4; pop ebx; pop esi; ret; 
0x0016d020: jne 0x16d030; add esp, 4; pop ebx; pop esi; ret; 
0x0016d0ca: jne 0x16d0d0; pop ebx; pop esi; pop edi; ret; 
0x0016d4bb: jne 0x16d4c8; add esp, 8; pop ebx; ret; 
0x0016e0c6: jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x0016e182: jne 0x16e1a4; mov eax, 4; add esp, 0xc; ret; 
0x0016e614: jne 0x16e620; add esp, 8; pop ebx; ret; 
0x001704b0: jne 0x1704c0; add esp, 8; pop ebx; ret; 
0x00170bbd: jne 0x170bc3; add esp, 0x1c; ret; 
0x001765ee: jne 0x1765f6; add esp, 0x14; pop esi; pop edi; ret; 
0x00176719: jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x001767e2: jne 0x1767ea; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017685c: jne 0x176864; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017694a: jne 0x17694c; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0018767e: jne 0x1876f0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00189127: jne 0x188f80; pop ebp; xor eax, eax; ret; 
0x0018e19c: jne 0x18e1b0; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0018eba7: jne 0x18f320; pop ebx; ret; 
0x0018e9e0: jne 0x18f336; pop ebx; ret; 
0x0019034f: jne 0x190590; pop ebx; ret; 
0x00191a19: jne 0x191c40; pop ebx; ret; 
0x00191ad6: jne 0x191c60; pop ebx; ret; 
0x00191eda: jne 0x191ed2; ret 0x7504; 
0x00191ed9: jne 0x191f50; test dl, 4; jne 0x191f54; add eax, 3; ret; 
0x00191ede: jne 0x191f54; add eax, 3; ret; 
0x00191ef8: jne 0x191f60; test dl, 0x40; jne 0x191f64; add eax, 7; ret; 
0x00191efd: jne 0x191f64; add eax, 7; ret; 
0x00191f1f: jne 0x191f70; test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x00191f24: jne 0x191f74; add eax, 0xb; ret; 
0x00191f38: jne 0x191f80; test dh, 0x40; jne 0x191f84; add eax, 0xf; ret; 
0x00191f3d: jne 0x191f84; add eax, 0xf; ret; 
0x0019220e: jne 0x1922d0; test al, 0x40; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x00192216: jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x001920de: jne 0x1922e0; test dl, 0x40; jne 0x192360; lea eax, [edi + 7]; pop edi; ret; 
0x00192269: jne 0x192350; lea eax, [edi + 0xf]; pop edi; ret; 
0x001921d0: jne 0x192360; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019218a: jne 0x192360; lea eax, [edi + 0xf]; pop edi; ret; 
0x0019212d: jne 0x192360; lea eax, [edi + 3]; pop edi; ret; 
0x001920e7: jne 0x192360; lea eax, [edi + 7]; pop edi; ret; 
0x0019282d: jne 0x192690; xor eax, eax; pop edi; ret; 
0x001926ad: jne 0x192730; lea eax, [edi - 0x10]; pop edi; ret; 
0x001926d2: jne 0x192760; lea eax, [edi - 0xc]; pop edi; ret; 
0x001926fc: jne 0x192790; lea eax, [edi - 8]; pop edi; ret; 
0x00192725: jne 0x1927c0; lea eax, [edi - 4]; pop edi; ret; 
0x00192824: jne 0x192900; and eax, 0xf; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00192baf: jne 0x192cd0; lea eax, [edi + 3]; pop edi; ret; 
0x00192bd2: jne 0x192d00; lea eax, [edi + 7]; pop edi; ret; 
0x00192bf3: jne 0x192d20; test ah, 4; jne 0x192d30; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192bfc: jne 0x192d30; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192c1c: jne 0x192d50; test ah, 0x40; jne 0x192d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192c25: jne 0x192d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192ca2: jne 0x192d70; xor eax, eax; pop edi; ret; 
0x00192d91: jne 0x192e60; sub edx, 4; jb 0x192f00; lea eax, [edi + 3]; pop edi; ret; 
0x00192dc2: jne 0x192e90; sub edx, 8; jb 0x192f00; lea eax, [edi + 7]; pop edi; ret; 
0x00192dfc: jne 0x192ec0; sub edx, 0xc; jb 0x192f00; lea eax, [edi + 0xb]; pop edi; ret; 
0x001935fa: jne 0x193220; xor eax, eax; ret; 
0x001930dd: jne 0x1932c0; mov eax, ecx; ret; 
0x001930d5: jne 0x1932d0; test al, 2; jne 0x1932c0; mov eax, ecx; ret; 
0x00193262: jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x0019325a: jne 0x193300; test al, 0x20; jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x0019328c: jne 0x193320; lea eax, [ecx + 8]; ret; 
0x001932b5: jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x0019314a: jne 0x193380; xor eax, eax; ret; 
0x00193189: jne 0x193400; xor eax, eax; ret; 
0x001933a8: jne 0x193510; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x00193492: jne 0x193540; add edx, 4; jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x001934cb: jne 0x193570; add edx, 8; jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x001934f5: jne 0x1935a0; add edx, 0xc; jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x00193897: jne 0x193930; test al, 4; jne 0x193940; lea eax, [edx + 3]; ret; 
0x0019389f: jne 0x193940; lea eax, [edx + 3]; ret; 
0x001938ba: jne 0x193960; test al, 0x40; jne 0x193970; lea eax, [edx + 7]; ret; 
0x001938c2: jne 0x193970; lea eax, [edx + 7]; ret; 
0x001938e3: jne 0x193990; test ah, 4; jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x001938ec: jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x0019390c: jne 0x1939c0; test ah, 0x40; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x00193915: jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x00193db0: jne 0x193dc0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00193de2: jne 0x193ea0; sub edi, 4; jb 0x193f40; lea eax, [eax + 3]; pop edi; ret; 
0x00193ccf: jne 0x194095; add eax, 3; pop edi; ret; 
0x00193cf5: jne 0x1940a9; add eax, 7; pop edi; ret; 
0x00193d13: jne 0x1940b8; test dh, 4; jne 0x1940bd; add eax, 0xb; pop edi; ret; 
0x00193d1c: jne 0x1940bd; add eax, 0xb; pop edi; ret; 
0x00193d45: jne 0x1940d1; add eax, 0xf; pop edi; ret; 
0x00194587: jne 0x1945d0; pop edi; pop esi; pop ebx; ret; 
0x001946b8: jne 0x1946c0; pop ebx; ret; 
0x0019476c: jne 0x194830; test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x00194847: jne 0x194860; test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x00194876: jne 0x194890; lea eax, [ecx + 4]; ret; 
0x00194883: jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x0019484c: jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x00194775: jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x00194a07: jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001949ff: jne 0x194ad0; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194aa3: jne 0x194ae0; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x00194ad3: jne 0x194af0; lea eax, [edi - 8]; pop edi; ret; 
0x0019513b: jne 0x195170; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00195153: jne 0x195180; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0019cc7f: jne 0x19cc64; add esp, 4; pop ebx; pop esi; ret; 
0x0019d1bf: jne 0x19d190; pop ebx; pop esi; pop edi; ret; 
0x0019d32e: jne 0x19d314; add esp, 4; pop ebx; pop esi; ret; 
0x0019d3f1: jne 0x19d3d8; add esp, 4; pop ebx; pop esi; ret; 
0x0019d502: jne 0x19d4f0; pop ebx; pop esi; pop edi; ret; 
0x0019d7c8: jne 0x19d7d0; add esp, 4; pop ebx; pop esi; ret; 
0x00020f4b: jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0009960f: jne 0x20f6f; pop ebx; pop esi; pop edi; ret; 
0x0016e16e: jne 0x21302; mov eax, 8; add esp, 0xc; ret; 
0x0016e219: jne 0x21307; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000213e5: jne 0x213c2; mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x000213f3: jne 0x213c2; ret; 
0x00021539: jne 0x21553; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00021db3: jne 0x21db9; add esp, 0x1c; ret; 
0x00021e51: jne 0x21e7f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0002ba92: jne 0x2bac2; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002f6b8: jne 0x2f6c0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00030474: jne 0x30480; mov eax, edx; add esp, 0xc; ret; 
0x000304b4: jne 0x304c0; mov eax, edx; add esp, 0xc; ret; 
0x00034d4a: jne 0x34d29; ret; 
0x00035d41: jne 0x35d0a; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x00035d06: jne 0x35d10; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x000360a3: jne 0x36069; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x00036065: jne 0x36070; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003634f: jne 0x36315; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x00036311: jne 0x36320; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003647c: jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370c2: jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x00037132: jne 0x37140; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00037436: jne 0x37441; add esp, 0x124; pop ebx; pop esi; ret; 
0x000374ca: jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037759: jne 0x37760; add esp, 8; pop ebx; ret; 
0x0003780c: jne 0x37830; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00037996: jne 0x379a8; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037a16: jne 0x37a28; add esp, 0x114; pop ebx; pop edi; ret; 
0x00037a92: jne 0x37ad6; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037b31: jne 0x37b3c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00037bb0: jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d56: jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038108: jne 0x38111; add esp, 0x12c; ret; 
0x0003818c: jne 0x38190; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x000383cf: jne 0x38420; mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000385cf: jne 0x385d7; add esp, 0x24; pop ebx; pop esi; ret; 
0x00038728: jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a8: jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x00038830: jne 0x38839; add esp, 0x9c; ret; 
0x0003899b: jne 0x389b7; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x000390aa: jne 0x390ac; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0003a8a7: jne 0x3a870; pop ebx; pop esi; pop edi; ret; 
0x0003a9b1: jne 0x3a9c0; add esp, 4; pop ebx; pop esi; ret; 
0x0003aab0: jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abe0: jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aeb1: jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b412: jne 0x3b418; add esp, 0x1c; ret; 
0x0003b465: jne 0x3b46b; add esp, 0x1c; ret; 
0x0003b4c2: jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b515: jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b562: jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5b5: jne 0x3b5bb; add esp, 0x1c; ret; 
0x0003b94d: jne 0x3b978; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003e386: jne 0x3e39d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0004117a: jne 0x41175; call dword ptr [eax - 0x18]; 
0x000411ad: jne 0x411a8; call dword ptr [eax - 0x18]; 
0x00041296: jne 0x412ad; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0004422b: jne 0x44226; call dword ptr [eax - 0x18]; 
0x00044304: jne 0x442ff; call dword ptr [eax - 0x18]; 
0x000444d6: jne 0x444ed; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000473a7: jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00047558: jne 0x47553; call dword ptr [eax - 0x18]; 
0x00047c65: jne 0x47cc4; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000484fc: jne 0x48505; add esp, 0x42c; ret; 
0x00048571: jne 0x4854f; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000485c6: jne 0x485b0; lea eax, [ebx + 0x18b0]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00049bcb: jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x0004a6ae: jne 0x4a6b2; push ecx; ret; 
0x0004a884: jne 0x4a8ae; sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004a954: jne 0x4a958; push ecx; ret; 
0x0004a9bd: jne 0x4a9b0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0004a9dd: jne 0x4a9c8; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0004aabd: jne 0x4aab0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0004aadd: jne 0x4aac8; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0004ad2e: jne 0x4ad20; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0004cc3a: jne 0x4cc45; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004ccb8: jne 0x4ccc3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0004cd26: jne 0x4cd3d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00050c1d: jne 0x50c18; call dword ptr [eax - 0x18]; 
0x00050d00: jne 0x50cfb; call dword ptr [eax - 0x18]; 
0x00050d68: jne 0x50d73; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005138b: jne 0x513ad; add esp, 0x434; pop ebx; pop esi; ret; 
0x00057cdd: jne 0x57ce8; add esp, 8; pop ebx; ret; 
0x00057d70: jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057def: jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x0005839c: jne 0x583af; add esp, 0x1c; ret; 
0x00058664: jne 0x58674; mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x00058707: jne 0x58710; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007133b: jne 0x71345; push esi; call dword ptr [ebx + 0x1c]; 
0x000718fe: jne 0x71908; push esi; call dword ptr [ebx + 0x1c]; 
0x00072924: jne 0x7290a; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00072927: jne 0x72931; push edx; call dword ptr [ebx + 0x1c]; 
0x00073067: jne 0x73075; push esi; call dword ptr [ebx + 0x2c]; 
0x00073064: jne 0x7307a; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00073e59: jne 0x73e3f; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00073e5c: jne 0x73e66; push esi; call dword ptr [eax + 0x1c]; 
0x00074e2c: jne 0x74e20; ret; 
0x00075343: jne 0x753a8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000755cf: jne 0x7555f; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0007572f: jne 0x756bf; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00078050: jne 0x7813e; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0007834f: jne 0x78360; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0007841e: jne 0x783f4; push edx; push ebx; push esi; call eax; 
0x0007b336: jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x0007b656: jne 0x7b660; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0007c0d2: jne 0x7c1f7; sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x0007dba0: jne 0x7dbb0; add esp, 8; pop ebx; ret; 
0x0007e3bb: jne 0x7e3c0; ret; 
0x0007e5fc: jne 0x7e5f0; ret; 
0x0007f3cc: jne 0x7f3c0; ret; 
0x0007f63a: jne 0x7f668; add esp, 4; pop ebx; pop esi; ret; 
0x0007f778: jne 0x7f73a; add esp, 4; pop ebx; pop esi; ret; 
0x0008001a: jne 0x80010; ret; 
0x00080068: jne 0x80078; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008148a: jne 0x814c1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081649: jne 0x8166d; add esp, 0x2c; ret; 
0x000817b1: jne 0x817db; add esp, 0x2c; ret; 
0x0008189d: jne 0x818cb; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00081994: jne 0x819b9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00081b70: jne 0x81b95; add esp, 0x24; pop ebx; pop esi; ret; 
0x00081c0c: jne 0x81c16; and edx, 0x38; cmp edx, 8; je 0x81c17; ret; 
0x00081ee8: jne 0x81ef0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081f6b: jne 0x81fab; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00082048: jne 0x82081; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008217f: jne 0x82190; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008254a: jne 0x82588; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00082cbf: jne 0x82c61; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00083a90: jne 0x8323b068; pushal; or dh, bh; xor eax, eax; ret; 
0x00083a93: jne 0x83ab0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00084112: jne 0x84207; add esp, 0x94; pop ebx; pop esi; ret; 
0x0008434f: jne 0x84373; add esp, 0x24; pop ebx; pop esi; ret; 
0x00085982: jne 0x85988; add esp, 0x2c; ret; 
0x00085a40: jne 0x85a49; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00086ad9: jne 0x86698; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00086ab1: jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000871bd: jne 0x871c8; add esp, 0xc; ret; 
0x000871b2: jne 0x871e9; mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x00087a78: jne 0x87aa8; mov eax, edx; pop ebx; pop esi; ret; 
0x00087d76: jne 0x87d80; xor eax, eax; pop ebx; ret; 
0x000888e2: jne 0x888e8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00088907: jne 0x88978; cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x000889e3: jne 0x889eb; add esp, 0x14; pop ebx; pop esi; ret; 
0x00088a0c: jne 0x88a1a; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008a20e: jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2ac: jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b0de: jne 0x8b0f0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0008b123: jne 0x8b140; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0008b1f1: jne 0x8b230; test al, 1; je 0x8b230; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008b632: jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba92: jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf8e: jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3de: jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008c436: jne 0x8c440; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008c4f6: jne 0x8c4ca; mov eax, 0x10; pop ebx; ret; 
0x0008d31a: jne 0x8d368; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008d355: jne 0x8d387; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0008d48b: jne 0x8d490; xor eax, eax; ret; 
0x0008d4f8: jne 0x8d502; and eax, 0x38; cmp eax, 8; je 0x8d503; ret; 
0x0008d5b3: jne 0x8d5c9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008d7c9: jne 0x8d7d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008d873: jne 0x8d8a4; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008dd92: jne 0x8dda0; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008e4f8: jne 0x8e508; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e5ac: jne 0x8e5dc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e64e: jne 0x8e68c; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008e840: jne 0x8e850; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008e883: jne 0x8e876; xor eax, eax; pop ebx; ret; 
0x0008e8d1: jne 0x8e8e0; xor eax, eax; pop ebx; ret; 
0x0008f167: jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f201: jne 0x8f22f; mov eax, 3; add esp, 0xc; ret; 
0x0008f273: jne 0x8f29f; mov eax, 3; add esp, 0xc; ret; 
0x0008f2d1: jne 0x8f2ff; mov eax, 3; add esp, 0xc; ret; 
0x0008f339: jne 0x8f367; mov eax, 3; add esp, 0xc; ret; 
0x0008f3d7: jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f435: jne 0x8f45f; mov eax, 3; add esp, 0xc; ret; 
0x0008f4ed: jne 0x8f527; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f561: jne 0x8f58f; mov eax, 3; add esp, 0xc; ret; 
0x0008f5c5: jne 0x8f5ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f663: jne 0x8f687; add esp, 0x2c; ret; 
0x0008f6c1: jne 0x8f6ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f721: jne 0x8f74f; mov eax, 3; add esp, 0xc; ret; 
0x0008f7bb: jne 0x8f7ef; mov eax, 3; add esp, 0xc; ret; 
0x0008f821: jne 0x8f84f; mov eax, 3; add esp, 0xc; ret; 
0x0008f8d3: jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x0008f935: jne 0x8f95f; mov eax, 3; add esp, 0xc; ret; 
0x0008f9b5: jne 0x8f9df; mov eax, 3; add esp, 0xc; ret; 
0x0008fa63: jne 0x8fa98; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008fafe: jne 0x8fb3c; add esp, 0x124; pop ebx; pop esi; ret; 
0x0008fe47: jne 0x8fe38; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0008fec3: jne 0x8feb8; mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x000904fc: jne 0x904f0; pop ebx; ret; 
0x00090bae: jne 0x90bb0; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00090da4: jne 0x90d40; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000914fd: jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092062: jne 0x9206e; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x00092456: jne 0x92478; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009266f: jne 0x926b0; mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092837: jne 0x9283f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00092ad5: jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x00092b07: jne 0x92b50; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00092f86: jne 0x9301f; add esp, 0x24; pop ebx; pop esi; ret; 
0x00093083: jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000934ea: jne 0x93507; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000938d3: jne 0x938e0; ret; 
0x00094344: jne 0x9434c; add esp, 0x24; pop ebx; pop esi; ret; 
0x00094b64: jne 0x94b90; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00098cf8: jne 0x98d03; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x00099525: jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00099595: jne 0x99588; xor eax, eax; ret; 
0x000995fa: jne 0x995d0; sub esp, 0xc; push eax; call edx; 
0x00099653: jne 0x99648; mov eax, ecx; ret; 
0x00099e46: jne 0x99e52; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x00099fc4: jne 0x99fd8; lea eax, [edx - 0x171c70]; and ch, 2; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0009af24: jne 0x9af38; lea eax, [edx - 0x1726f0]; and ch, 2; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b1d4: jne 0x9b1e8; lea eax, [edx - 0x172b60]; and ch, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009b294: jne 0x9b2a8; lea eax, [edx - 0x172af0]; and ch, 2; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b407: jne 0x9b3c0; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0009b6b0: jne 0x9b678; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0009c2e5: jne 0x9c2d0; pop ebx; pop esi; pop edi; ret; 
0x0009c431: jne 0x9c428; mov eax, ecx; ret; 
0x0009cdd0: jne 0x9cdb8; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0009d0a9: jne 0x9d0ac; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x0009d205: jne 0x9d217; pop ebx; pop esi; pop edi; ret; 
0x0009d7ed: jne 0x9d7e0; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009ea12: jne 0x9ea01; mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x000a0a94: jne 0xa0a88; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a0c3d: jne 0xa0c30; mov eax, edx; pop ebx; ret; 
0x000a0c81: jne 0xa0c70; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0de1: jne 0xa0dd0; mov eax, edx; pop ebx; ret; 
0x000a47fc: jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4efc: jne 0xa4e61; pop ebx; ret; 
0x000a8cd1: jne 0xa92c0; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000a935c: jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a9481: jne 0xa92c1; pop ebx; ret; 
0x000aab08: jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac17a: jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000acfda: jne 0xacfd2; ret 0x7504; 
0x000af2da: jne 0xaf2d2; ret 0x7504; 
0x000b2b82: jne 0xb2c70; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b2c34: jne 0xb2c90; xor eax, eax; pop edi; ret; 
0x000b2bfa: jne 0xb2cb0; xor eax, eax; pop edi; ret; 
0x000b2e6a: jne 0xb2f20; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000b2eda: jne 0xb2f50; xor eax, eax; ret; 
0x000b2f09: jne 0xb2f70; xor eax, eax; ret; 
0x000b3119: jne 0xb3110; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b3321: jne 0xb3360; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b392b: jne 0xb3931; xor eax, eax; pop ebx; ret; 
0x000b39bc: jne 0xb3bc8; pop esi; xor eax, eax; pop ebx; ret; 
0x000b3a30: jne 0xb3bdc; pop esi; xor eax, eax; pop ebx; ret; 
0x000b42f5: jne 0xb42fa; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000b43a6: jne 0xb439c; xor eax, eax; ret; 
0x000b4531: jne 0xb4535; xor eax, eax; ret; 
0x000b47dd: jne 0xb47d8; pop esi; ret; 
0x000b4c05: jne 0xb4bf0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b4f58: jne 0xb4f30; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000b4fa4: jne 0xb4fb8; lea eax, [edx - 0x15d2d0]; and ch, 2; lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x000b5330: jne 0xb5445; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000b5779: jne 0xb5783; call ebx; 
0x000b57e7: jne 0xb57f1; call ebx; 
0x000b6234: jne 0xb6228; ret; 
0x000b6467: jne 0xb6488; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b7b96: jne 0xb7bad; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000baa07: jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000baa2a: jne 0xbaa25; call dword ptr [eax - 0x18]; 
0x000bab36: jne 0xbab4d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000bd6ae: jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000bd836: jne 0xbd831; call dword ptr [eax - 0x18]; 
0x000bd926: jne 0xbd93d; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c0322: jne 0xc031d; call dword ptr [eax - 0x18]; 
0x000c0495: jne 0xc0490; call dword ptr [eax - 0x18]; 
0x000c058c: jne 0xc05db; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c065c: jne 0xc06bd; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c073c: jne 0xc077b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c2fa2: jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c342e: jne 0xc34ab; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c3fa6: jne 0xc3fbd; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c7a3c: jne 0xc7a37; call dword ptr [eax - 0x18]; 
0x000c7aef: jne 0xc7aea; call dword ptr [eax - 0x18]; 
0x000c7ba8: jne 0xc7bb3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c7c2a: jne 0xc7c35; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c7ca8: jne 0xc7cb3; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000c88df: jne 0xc8a30; pop edi; pop esi; ret; 
0x000c88be: jne 0xc8a30; xor eax, eax; pop edi; pop esi; ret; 
0x000c8aa7: jne 0xc8a98; mov eax, ecx; pop ebx; pop esi; ret; 
0x000c8d0e: jne 0xc8ce8; mov eax, ecx; ret; 
0x000c8ddb: jne 0xc8dd0; ret; 
0x000c8e0c: jne 0xc8e00; mov eax, ecx; pop ebx; ret; 
0x000c9aa2: jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b22: jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b6d: jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bcd: jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000c9c37: jne 0xc9c5c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000caa43: jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x000caaa4: jne 0xcaac4; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cac99: jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cad52: jne 0xcadac; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cb05d: jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000cd784: jne 0xcd7a2; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cd81c: jne 0xcd83a; add esp, 0x24; pop ebx; pop esi; ret; 
0x000cda0c: jne 0xcda2d; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x000cdc4f: jne 0xcdc58; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000ce66d: jne 0xce678; add esp, 4; pop ebx; pop esi; ret; 
0x000d3576: jne 0xd357c; add esp, 0x1c; ret; 
0x000d5c06: jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d6a: jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5dd3: jne 0xd5de1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d5f69: jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d6021: jne 0xd6060; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000d5fd8: jne 0xd6075; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d617a: jne 0xd6210; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d62a6: jne 0xd6340; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000d641b: jne 0xd64e0; mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d686e: jne 0xd68a3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000d6c86: jne 0xd6c5a; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000d7119: jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d719e: jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d7245: jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72ce: jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d7430: jne 0xd7464; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000d839e: jne 0xd83d9; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000d93be: jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a9: jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000dc48d: jne 0xdc553; add esp, 0x64; pop ebx; pop esi; ret; 
0x000dc72b: jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000dc7d9: jne 0xdc7e0; add esp, 8; pop ebx; ret; 
0x000dc85f: jne 0xdc8a4; add esp, 0x34; pop ebx; pop esi; ret; 
0x000dcdc4: jne 0xdcdc9; pop ecx; jmp ecx; 
0x000ddd7a: jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde1a: jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000de0e3: jne 0xde132; add esp, 0x24; pop ebx; pop esi; ret; 
0x000de193: jne 0xde1e2; add esp, 0x24; pop ebx; pop esi; ret; 
0x000de732: jne 0xde740; lea esi, [esi]; mov eax, 0x40; ret; 
0x000df307: jne 0xdf30e; cmc; jmp dword ptr [esi - 0x70]; 
0x000df5dd: jne 0xdf5be; xor eax, eax; pop ebx; ret; 
0x000df7ab: jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1c7d: jne 0xe1c5e; xor eax, eax; pop ebx; ret; 
0x000e1e4b: jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000e4392: jne 0xe4361; xor eax, eax; ret; 
0x000e4371: jne 0xe4389; mov eax, 1; ret; 
0x000f2bb5: jne 0xf2bff; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000f6b2d: jne 0xf6b0e; xor eax, eax; pop ebx; ret; 
0x000f6cfb: jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f76ed: jne 0xf76ce; xor eax, eax; pop ebx; ret; 
0x000f78bb: jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x000f9878: jne 0xf98e4; add esp, 0x14; pop ebx; pop esi; ret; 
0x000f9973: jne 0xf9942; lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000fa2e5: jne 0xfa2d8; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000fdcfd: jne 0xfdce0; pop ebx; pop esi; pop edi; ret; 
0x001172eb: jno 0x1172f2; add byte ptr [ecx + 0x10ed12c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0012125b: jno 0x12125d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f951: jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x00130f21: jno 0x130f27; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0014796a: jno 0x14796e; je 0x147978; pop ebx; pop esi; ret; 
0x00163286: jno 0x16320b; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0019318b: jno 0x19318f; add byte ptr [eax], al; xor eax, eax; ret; 
0x0019d06c: jno 0x19d067; call dword ptr [eax - 0x73]; 
0x00025f61: jno 0x25f5c; call dword ptr [eax - 0x73]; 
0x0002c016: jno 0x2c011; call dword ptr [eax - 0x73]; 
0x0002c203: jno 0x2c1fe; call dword ptr [eax - 0x73]; 
0x0002d78b: jno 0x2d786; call dword ptr [eax - 0x73]; 
0x0002da24: jno 0x2da1f; call dword ptr [eax - 0x73]; 
0x0002e3f8: jno 0x2e3f3; call dword ptr [eax - 0x18]; 
0x0002e7e5: jno 0x2e7e0; call dword ptr [eax - 0x18]; 
0x0002e94d: jno 0x2e948; call dword ptr [eax - 0x73]; 
0x0002e99a: jno 0x2e995; call dword ptr [eax - 0x73]; 
0x0002e9bf: jno 0x2e9ba; call dword ptr [eax - 0x73]; 
0x00050b0b: jno 0x50afa; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00079d0b: jno 0x79d68; sti; dec dword ptr [ebp - 0x6820f7d]; call dword ptr [eax - 0x73]; 
0x000875bc: jno 0x875fd; stc; call dword ptr [eax - 0x18]; 
0x000b62eb: jno 0xb62f4; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cf8be: jno 0xcf905; stc; call dword ptr [eax + 0x56]; 
0x000db511: jno 0xdb505; call dword ptr [eax - 0x73]; 
0x000db56c: jno 0xdb568; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000db5ca: jno 0xdb5be; call dword ptr [eax - 0x73]; 
0x000db687: jno 0xdb67b; call dword ptr [eax - 0x73]; 
0x00117278: jnp 0x117279; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00121232: jnp 0x121234; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00136301: jnp 0x136315; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000ec5c9: jnp 0x149bce14; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x00158161: jnp 0x1580e6; in eax, dx; call dword ptr [eax - 0x73]; 
0x001763ce: jnp 0x17641a; stc; call dword ptr [eax + 0x53]; 
0x00193554: jnp 0x1934e3; inc ecx; push es; ret; 
0x001649c9: jnp 0x41a1ea24; or byte ptr [ecx], bh; ret 0x2c75; 
0x0004c384: jnp 0x4c38a; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00057a43: jnp 0x57a76; stc; call dword ptr [eax + 0x53]; 
0x00057b36: jnp 0x57b69; stc; call dword ptr [eax + 0x53]; 
0x0005891b: jnp 0x5891a; inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x000b2340: jnp 0x5b17478a; pop esi; ret; 
0x000b23c4: jnp 0x5b17480e; pop esi; ret; 
0x000b2504: jnp 0x5b17494e; pop esi; ret; 
0x000aeead: jnp 0x5e1312f7; ret; 
0x000aef31: jnp 0x5e13137b; ret; 
0x000af031: jnp 0x5e13147b; ret; 
0x00079101: jnp 0x790fd; jmp dword ptr [esi - 0x70]; 
0x0008b3d0: jnp 0x8b3da; dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bd43: jnp 0x8bd4d; dec ecx; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000c342f: jnp 0xc33b4; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0011624f: jns 0x116251; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116efd: jns 0x116f02; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0011b9fe: jns 0x11b98b; pop ecx; add al, 0xf6; ret; 
0x001277e0: jns 0x127838; stc; call dword ptr [eax - 0x18]; 
0x00130f24: jns 0x130f2e; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0013b746: jns 0x13b74a; add esi, dword ptr [esp + esi*2 - 0x7d]; ret 0x8303; 
0x0013efce: jns 0x13ef5b; add dword ptr [ecx], edi; ret 0x7372; 
0x0014ac63: jns 0x14ac67; hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0014eb53: jns 0x14ebb6; stc; call dword ptr [eax + 0x53]; 
0x001512b5: jns 0x15123a; ret; 
0x00159665: jns 0x159664; jmp dword ptr [esi - 0x70]; 
0x00160a73: jns 0x160a74; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x001769a3: jns 0x17694b; sti; jmp dword ptr [esi - 0x70]; 
0x0002f16b: jns 0x2f185; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x000ac756: jns 0x4797cab3; pop es; pop edi; pop esi; pop ebx; ret; 
0x000512eb: jns 0x512b3; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x00058ec8: jns 0x58f10; add byte ptr [ecx - 0x57b4b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ab056: jns 0x5e69b3b3; pop ebx; ret; 
0x00065332: jns 0x6532d; call dword ptr [edx - 0x73]; 
0x000656e8: jns 0x656e3; call dword ptr [eax - 0x73]; 
0x00065f81: jns 0x65f7c; call dword ptr [eax - 0x73]; 
0x0006a372: jns 0x6a36d; call dword ptr [edx - 0x73]; 
0x0006a730: jns 0x6a72b; call dword ptr [eax - 0x73]; 
0x0006b029: jns 0x6b024; call dword ptr [eax - 0x73]; 
0x000fa348: jns 0x749d671e; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0007d57e: jns 0x7d5ea; add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007efb0: jns 0x7efb3; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00088fe4: jns 0x891d0; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008f86f: jns 0x8f870; jmp dword ptr [esi - 0x70]; 
0x00092dfe: jns 0x92e05; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00092ee6: jns 0x92eec; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00092f4a: jns 0x92f50; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00099612: jns 0x9960c; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000a59ca: jns 0xa59d9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a5a20: jns 0xa5a2c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a9eaa: jns 0xa9eb9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ac263: jns 0xac26e; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d600a: jns 0xd603b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d613a: jns 0xd6144; dec ecx; lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000e7df9: jns 0xe7de8; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000f199d: jns 0xf199e; call dword ptr [eax - 1]; 
0x00100d72: jo 0x100d12; stc; call dword ptr [eax - 0x73]; 
0x00106cac: jo 0x106cb9; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00110790: jo 0x1107ed; pop esi; pop edi; ret; 
0x0011974d: jo 0x11979a; stc; call dword ptr [edi + 0x50]; 
0x00119d7b: jo 0x119d06; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00120765: jo 0x1207c2; pop esi; pop edi; ret; 
0x00120825: jo 0x120882; pop esi; pop edi; ret; 
0x001208e5: jo 0x120942; pop esi; pop edi; ret; 
0x00124588: jo 0x12456e; out dx, eax; call dword ptr [eax - 0x18]; 
0x00125825: jo 0x1257ca; stc; call dword ptr [eax - 0x73]; 
0x00127727: jo 0x12777f; stc; call dword ptr [eax - 0x18]; 
0x0012789d: jo 0x1278f5; stc; call dword ptr [eax - 0x73]; 
0x0012f1d8: jo 0x12f20e; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012f1fe: jo 0x12f27c; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00133488: jo 0x13347c; call dword ptr [eax - 0x73]; 
0x0013354a: jo 0x13353e; call dword ptr [eax - 0x73]; 
0x0013361c: jo 0x133610; call dword ptr [eax - 0x73]; 
0x0014529e: jo 0x1452d9; ret 0x840f; 
0x00145972: jo 0x1459ad; ret 0x840f; 
0x001459a5: jo 0x1459e0; ret 0x840f; 
0x00145d24: jo 0x145d5f; ret 0x840f; 
0x00149f9f: jo 0x149f4d; stc; call dword ptr [eax - 0x73]; 
0x00149fc2: jo 0x149f70; stc; call dword ptr [eax - 0x73]; 
0x00149fe5: jo 0x149f93; stc; call dword ptr [eax - 0x73]; 
0x0014b58f: jo 0x14b60f; stc; call dword ptr [eax - 0x18]; 
0x0014b58f: jo 0x14b60f; stc; call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x0014fbd2: jo 0x14fb61; mov dl, al; ret 0xfff2; 
0x00154f3d: jo 0x154f53; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015d53c: jo 0x15d4c1; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00169feb: jo 0x169fe9; jmp dword ptr [esi - 0x70]; 
0x0016eee6: jo 0x16ee6b; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x001709fd: jo 0x170a7d; stc; call dword ptr [eax - 0x18]; 
0x00177113: jo 0x177096; ret 0x80; 
0x0017717a: jo 0x1770fd; ret 0x80; 
0x001771cc: jo 0x17714f; ret 0x80; 
0x00177626: jo 0x1775e8; add bh, dh; ret 0xf; 
0x00177763: jo 0x1776e6; ret 0x80; 
0x001777ca: jo 0x17774d; ret 0x80; 
0x0017781c: jo 0x17779f; ret 0x80; 
0x00177cc6: jo 0x177c88; add bh, dh; ret 0xf; 
0x0018767f: jo 0x187690; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001959d9: jo 0x1959d2; ret 0; 
0x0019b815: jo 0x19b7a0; ret 0xf889; 
0x00024eed: jo 0x24eee; aad 0x89; ret 0xc483; 
0x00026e65: jo 0x26e60; call dword ptr [eax - 0x73]; 
0x00026e78: jo 0x26e73; call dword ptr [eax - 0x18]; 
0x00026e88: jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026e9b: jo 0x26e96; call dword ptr [eax - 0x18]; 
0x00026eab: jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f14: jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00026f6c: jo 0x26f67; call dword ptr [eax - 0x73]; 
0x00026f8f: jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x000279c1: jo 0x279bc; call dword ptr [eax - 0x73]; 
0x000279e9: jo 0x279e4; call dword ptr [eax - 0x73]; 
0x00027b14: jo 0x27b0f; call dword ptr [eax - 0x73]; 
0x00027b6c: jo 0x27b67; call dword ptr [eax - 0x73]; 
0x00027b7f: jo 0x27b7a; call dword ptr [eax - 0x18]; 
0x00027b8f: jo 0x27b8a; call dword ptr [eax - 0x73]; 
0x00027ba2: jo 0x27b9d; call dword ptr [eax - 0x18]; 
0x00027bb2: jo 0x27bad; call dword ptr [eax - 0x73]; 
0x000286b7: jo 0x286b2; call dword ptr [eax - 0x73]; 
0x000286f8: jo 0x286f3; call dword ptr [eax - 0x73]; 
0x00028744: jo 0x2873f; call dword ptr [eax - 0x73]; 
0x00029100: jo 0x290fb; call dword ptr [eax - 0x73]; 
0x00029146: jo 0x29141; call dword ptr [eax - 0x73]; 
0x000291d2: jo 0x291cd; call dword ptr [eax - 0x73]; 
0x00029c36: jo 0x29c31; call dword ptr [eax - 0x73]; 
0x00029c49: jo 0x29c44; call dword ptr [eax - 0x18]; 
0x00029c59: jo 0x29c54; call dword ptr [eax - 0x73]; 
0x00029c6c: jo 0x29c67; call dword ptr [eax - 0x18]; 
0x00029c7c: jo 0x29c77; call dword ptr [eax - 0x73]; 
0x00029c9f: jo 0x29c9a; call dword ptr [eax - 0x73]; 
0x00029cc2: jo 0x29cbd; call dword ptr [eax - 0x73]; 
0x00029d65: jo 0x29d60; call dword ptr [eax - 0x73]; 
0x0002b051: jo 0x2b04c; call dword ptr [eax - 0x18]; 
0x0002b074: jo 0x2b06f; call dword ptr [eax - 0x18]; 
0x0003394c: jo 0x33936; scasb al, byte ptr es:[edi]; or al, 8; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x00037335: jo 0x3733b; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00037385: jo 0x3738b; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000373a3: jo 0x373b8; add byte ptr [ecx + 0x1eec5ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0004a6bc: jo 0x4a6e6; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004a965: jo 0x4a98f; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00054c3f: jo 0x54bca; ret 0xc483; 
0x00055307: jo 0x5528c; les edx, ptr [ecx + ecx*4]; ret; 
0x00068635: jo 0x68646; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x00069267: jo 0x69251; ret; 
0x0006de00: jo 0x6dd8b; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0007b41d: jo 0x7b433; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0007b53d: jo 0x7b553; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0007bfc4: jo 0x7bffe; call 0x1087a0; add esp, 0x18; pop ebx; ret; 
0x0008226d: jo 0x822ed; stc; call dword ptr [eax - 0x18]; 
0x0008250d: jo 0x8258d; stc; call dword ptr [eax - 0x18]; 
0x0008265e: jo 0x826de; stc; call dword ptr [eax - 0x18]; 
0x000826e0: jo 0x82760; stc; call dword ptr [eax - 0x18]; 
0x00082c2d: jo 0x82cad; stc; call dword ptr [eax - 0x18]; 
0x00082cf3: jo 0x82d73; stc; call dword ptr [eax - 0x18]; 
0x00082e7c: jo 0x82efc; stc; call dword ptr [eax - 0x18]; 
0x0008309f: jo 0x8311f; stc; call dword ptr [eax - 0x18]; 
0x00083d7b: jo 0x83dfb; stc; call dword ptr [eax - 0x18]; 
0x00083e8a: jo 0x83f0a; stc; call dword ptr [eax - 0x18]; 
0x00084697: jo 0x84717; stc; call dword ptr [eax - 0x18]; 
0x00084800: jo 0x84880; stc; call dword ptr [eax - 0x18]; 
0x00084b6f: jo 0x84bef; stc; call dword ptr [eax - 0x18]; 
0x00084c8c: jo 0x84d0c; stc; call dword ptr [eax - 0x18]; 
0x00084cfa: jo 0x84d7a; stc; call dword ptr [eax - 0x18]; 
0x00084d66: jo 0x84de6; stc; call dword ptr [eax - 0x18]; 
0x00084ed3: jo 0x84f53; stc; call dword ptr [eax - 0x18]; 
0x00084fa9: jo 0x85029; stc; call dword ptr [eax - 0x18]; 
0x000852b5: jo 0x85335; stc; call dword ptr [eax - 0x18]; 
0x000855c5: jo 0x85645; stc; call dword ptr [eax - 0x18]; 
0x00085915: jo 0x85995; stc; call dword ptr [eax - 0x18]; 
0x000860bd: jo 0x8613d; stc; call dword ptr [eax - 0x18]; 
0x000881dd: jo 0x8825d; stc; call dword ptr [eax - 0x18]; 
0x00088c77: jo 0x88cf7; stc; call dword ptr [eax - 0x18]; 
0x00088f15: jo 0x88f95; stc; call dword ptr [eax - 0x18]; 
0x00089727: jo 0x897a7; stc; call dword ptr [eax - 0x18]; 
0x0008a01e: jo 0x8a09e; stc; call dword ptr [eax - 0x18]; 
0x0008a810: jo 0x8a890; stc; call dword ptr [eax - 0x18]; 
0x0008a810: jo 0x8a890; stc; call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x0008ad0e: jo 0x8ad8e; stc; call dword ptr [eax - 0x18]; 
0x0008b221: jo 0x8b2a1; stc; call dword ptr [eax - 0x18]; 
0x0008b32d: jo 0x8b3ad; stc; call dword ptr [eax - 0x18]; 
0x0008b523: jo 0x8b5a3; stc; call dword ptr [eax - 0x18]; 
0x0008b69f: jo 0x8b62a; inc ebp; or al, 0x89; sal dh, 1; ret 0x7501; 
0x0008b9c5: jo 0x8ba45; stc; call dword ptr [eax - 0x18]; 
0x0008bc4f: jo 0x8bccf; stc; call dword ptr [eax - 0x18]; 
0x0008be5f: jo 0x8bedf; stc; call dword ptr [eax - 0x18]; 
0x0008c307: jo 0x8c387; stc; call dword ptr [eax - 0x18]; 
0x0008c481: jo 0x8c501; stc; call dword ptr [eax - 0x18]; 
0x0008c705: jo 0x8c785; stc; call dword ptr [eax - 0x18]; 
0x0008ca47: jo 0x8cac7; stc; call dword ptr [eax - 0x18]; 
0x0008d6a5: jo 0x8d725; stc; call dword ptr [eax - 0x18]; 
0x0008ddca: jo 0x8de4a; stc; call dword ptr [eax - 0x18]; 
0x0008e3b5: jo 0x8e435; stc; call dword ptr [eax - 0x18]; 
0x0008e715: jo 0x8e795; stc; call dword ptr [eax - 0x18]; 
0x0008e715: jo 0x8e795; stc; call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x0008ef35: jo 0x8ef3b; call dword ptr [eax]; 
0x00090dd8: jo 0x90e58; stc; call dword ptr [eax - 0x18]; 
0x00099f93: jo 0x99f5b; call 0xc24daf99; ret; 
0x00099f49: jo 0x99fb8; call 0xc24eaf4f; ret; 
0x0009a3f9: jo 0x9a38b; call 0xc24eb3ff; ret; 
0x0009aef3: jo 0x9aebe; call 0xc24dbef9; ret; 
0x0009b038: jo 0x9b060; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0009b261: jo 0x9b294; idiv bh; cmovne eax, edx; ret; 
0x0009b6b3: jo 0x9b6d1; pop ebx; pop esi; ret; 
0x0009c42c: jo 0x9c42d; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000aed07: jo 0xaed0b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aed23: jo 0xaed29; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aed75: jo 0xaed7f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee69: jo 0xaee7b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeeef: jo 0xaef05; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef73: jo 0xaef8d; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b214d: jo 0xb2151; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b2179: jo 0xb217f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b21fb: jo 0xb2205; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b22ff: jo 0xb2311; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b2385: jo 0xb239b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b2409: jo 0xb2423; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b5685: jo 0xb561d; stc; call dword ptr [eax - 0x73]; 
0x000b56a1: jo 0xb5639; stc; call dword ptr [eax - 0x73]; 
0x000ba297: jo 0xba299; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000bfea5: jo 0xbfea7; add byte ptr [eax], al; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c9c32: jo 0xc9c38; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9c7f: jo 0xc9c85; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9cd2: jo 0xc9cd8; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9d1f: jo 0xc9d25; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000cbb4e: jo 0xcbb54; pop ebx; pop esi; pop edi; ret; 
0x000cd8a7: jo 0xcd834; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d7434: jo 0xd7491; pop esi; pop edi; ret; 
0x000d83a2: jo 0xd83ff; pop esi; pop edi; ret; 
0x000d9aa1: jo 0xd9a95; call dword ptr [eax - 0x73]; 
0x000d9b5a: jo 0xd9b4e; call dword ptr [eax - 0x73]; 
0x000d9c17: jo 0xd9c0b; call dword ptr [eax - 0x73]; 
0x000e6500: jo 0xe64f8; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000fa94b: jo 0xfa8ea; stc; call dword ptr [eax - 0x18]; 
0x000fc4e0: jo 0xfc525; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000fcf1d: jo 0xfcf62; in eax, dx; call dword ptr [eax + 0x6a]; 
0x000fde61: jo 0xfde01; stc; call dword ptr [eax - 0x73]; 
0x00102a52: jp 0x102a5d; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x001106fc: jp 0x110722; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00113de3: jp 0x113e21; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0011a428: jp 0x11a475; stc; call dword ptr [eax - 1]; 
0x001372ed: jp 0x13734a; stc; call dword ptr [eax + 0x6a]; 
0x00144068: jp 0x1440c8; stc; call dword ptr [eax - 0x18]; 
0x00162a62: jp 0x162a3e; in al, dx; call dword ptr [eax - 0x73]; 
0x001633a2: jp 0x163380; cld; jmp dword ptr [esi - 0x70]; 
0x00169618: jp 0x169616; jmp dword ptr [esi - 0x70]; 
0x00193fda: jp 0x193fe2; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0019403d: jp 0x19404a; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00194075: jp 0x194086; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00035d04: jp 0x35d10; jne 0x35d10; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00036063: jp 0x36070; jne 0x36070; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003630f: jp 0x36320; jne 0x36320; fadd st(0); add esp, 8; pop ebx; ret; 
0x00099ef5: jp 0x99ef5; inc dword ptr [ebx - 0x16a4e73c]; pmaxub mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x000ae621: jp 0xae624; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ae631: jp 0xae635; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000ae661: jp 0xae667; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000ae6d1: jp 0xae6db; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1835: jp 0xb183f; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1892: jp 0xb18a4; mov eax, edi; pop ebx; pop edi; ret; 
0x000cf796: jp 0xcf7dd; stc; call dword ptr [eax + 0x56]; 
0x000dc08b: jp 0xdc08d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dd682: jp 0xdd689; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00103a2f: js 0x103a8c; ret; 
0x0010618f: js 0x1061ec; ret; 
0x00113f2e: js 0x113f38; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0011cc09: js 0x11cc0c; add byte ptr [edx - 0x77], dh; ret 0xdeb; 
0x0011ed70: js 0x11ed72; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0011f932: js 0x11f935; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00122b46: js 0x122b50; add esp, 8; pop ebx; ret; 
0x0012bdc3: js 0x12be1c; stc; call dword ptr [eax + 0x57]; 
0x0012ee57: js 0x12edfe; stc; call dword ptr [eax - 0x18]; 
0x0012ee15: js 0x12ee6f; stc; call dword ptr [edx - 0x17]; 
0x001374ce: js 0x137527; stc; call dword ptr [ebp - 0x77]; 
0x001375b2: js 0x13760b; stc; call dword ptr [eax + 0x6a]; 
0x001378be: js 0x137917; stc; call dword ptr [eax + 0x6a]; 
0x0013794a: js 0x1379a3; stc; call dword ptr [eax + 0x6a]; 
0x00138a30: js 0x138a89; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0013dc39: js 0x13dc3d; add byte ptr [ebp + 0xa], dh; movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x0013f45f: js 0x13f46c; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00140583: js 0x140096; sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0014d646: js 0x14d650; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015765c: js 0x1576b5; stc; call dword ptr [eax + 0x6a]; 
0x00157860: js 0x1578b9; stc; call dword ptr [eax + 0x6a]; 
0x0015ccb6: js 0x15cd0f; stc; call dword ptr [eax + 0x6a]; 
0x0015ccf2: js 0x15cd4b; stc; call dword ptr [eax + 0x6a]; 
0x0015ce42: js 0x15ce9b; stc; call dword ptr [eax + 0x6a]; 
0x0015fbe6: js 0x15fbe0; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x00160a9d: js 0x160a9e; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0016808d: js 0x168098; add esp, 4; pop ebx; pop esi; ret; 
0x0016b3b1: js 0x16b3b6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016b3f1: js 0x16b3f6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00170985: js 0x170990; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001962b3: js 0x19623e; ret 0x4489; 
0x001965e5: js 0x196570; ret 0xb60f; 
0x0019af73: js 0x19aefe; ret 0x4489; 
0x000213d4: js 0x213ef; add byte ptr [eax], al; ret; 
0x00021474: js 0x2148f; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00021725: js 0x216f4; adc al, 0; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00022725: js 0x226e4; adc al, 0; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00029c35: js 0x29ca7; stc; call dword ptr [eax - 0x73]; 
0x00029c58: js 0x29cca; stc; call dword ptr [eax - 0x73]; 
0x00029c7b: js 0x29ced; stc; call dword ptr [eax - 0x73]; 
0x00029c9e: js 0x29d10; stc; call dword ptr [eax - 0x73]; 
0x00029cc1: js 0x29d33; stc; call dword ptr [eax - 0x73]; 
0x00029d64: js 0x29dd6; stc; call dword ptr [eax - 0x73]; 
0x0002c0da: js 0x2c108; stc; call dword ptr [eax - 1]; 
0x0002f7bd: js 0x2f816; stc; call dword ptr [esi - 1]; 
0x00037338: js 0x37342; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00037388: js 0x37392; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00038b7d: js 0x38f22; sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x000ac6e8: js 0x4797c945; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00049bc8: js 0x49bc9; das; jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x0004a6b9: js 0x4a6df; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0004a962: js 0x4a988; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00057df3: js 0x57e50; ret; 
0x0005ad24: js 0x5acb1; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005b655: js 0x5b650; call dword ptr [eax - 0x73]; 
0x000ab018: js 0x5e69b275; pop ebx; ret; 
0x000ab036: js 0x5e69b493; pop ebx; ret; 
0x0006496a: js 0x64965; call dword ptr [eax + 0x68]; 
0x00064ba4: js 0x64b9f; call dword ptr [eax + 0x68]; 
0x000656fb: js 0x656f6; call dword ptr [eax - 0x18]; 
0x00065eca: js 0x65ec5; call dword ptr [eax - 0x18]; 
0x00065f94: js 0x65f8f; call dword ptr [eax - 0x18]; 
0x00067c57: js 0x67c52; call dword ptr [eax - 0x18]; 
0x0006979e: js 0x69799; call dword ptr [eax - 0x18]; 
0x0006a743: js 0x6a73e; call dword ptr [eax - 0x18]; 
0x0006af7a: js 0x6af75; call dword ptr [eax - 0x18]; 
0x0006b03c: js 0x6b037; call dword ptr [eax - 0x18]; 
0x0006cebc: js 0x6ceb7; call dword ptr [eax - 0x18]; 
0x0006ebd3: js 0x6ebce; call dword ptr [eax - 0x18]; 
0x000789b0: js 0x789b8; ret; 
0x00079419: js 0x79415; jmp dword ptr [esi - 0x70]; 
0x000794d6: js 0x794d2; jmp dword ptr [esi - 0x70]; 
0x0007a788: js 0x7a78b; jae 0x7a801; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00082907: js 0x82892; ret 0xca83; 
0x00089077: js 0x88ffa; stc; call dword ptr [eax - 0x73]; 
0x00089107: js 0x8908a; stc; call dword ptr [eax - 0x73]; 
0x000892e5: js 0x89268; stc; call dword ptr [eax - 0x73]; 
0x00089308: js 0x8928b; stc; call dword ptr [eax - 0x73]; 
0x0008cea5: js 0x8ceb0; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x00096323: js 0x96334; inc edi; ret 0x548b; 
0x000b2574: js 0xb25b6; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b48b4: js 0xb4899; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000b5187: js 0xb5112; fdiv st(7); ret; 
0x000f4f33: js 0xc0925545; add dword ptr [ecx], edi; ret 0xda75; 
0x000c89b7: js 0xc8a18; pop esi; ret; 
0x000dcd48: js 0xdcd4a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dcd45: js 0xdcdaf; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x000dd2dd: js 0xdd330; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000deb7a: js 0xdeb80; ret; 
0x000df7af: js 0xdf80c; ret; 
0x000e1e4f: js 0xe1eac; ret; 
0x000f4efc: js 0xf4f37; ret 0x4f0f; 
0x000f6cff: js 0xf6d5c; ret; 
0x000f78bf: js 0xf791c; ret; 
0x000887a1: lahf; aas; stc; call dword ptr [eax - 0x73]; 
0x0018c92d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a911d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00038b7f: lahf; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0011d1c7: lahf; dec ebp; stc; call dword ptr [eax + 0x57]; 
0x0009a4f7: lahf; idiv bh; lea eax, [eax - 0x171b80]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0014427d: lahf; int 0xfe; jmp dword ptr [esi - 0x70]; 
0x00057fec: lahf; jg 0x58020; stc; call dword ptr [ecx + 0x53]; 
0x000443dd: lahf; mov ah, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000ac33d: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00094573: lahf; or eax, 0x8ac68100; sbb bl, byte ptr [ecx]; add byte ptr [ebx - 0x77], dl; ret; 
0x0011c2cd: lahf; pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x0011be86: lahf; pop ebx; stc; call dword ptr [eax - 1]; 
0x000589d5: lahf; pop ebx; stc; call dword ptr [ebx + 0x50]; 
0x0011bf21: lahf; pop ebx; stc; call dword ptr [ecx + 0x50]; 
0x001487fa: lahf; ret 0xd009; 
0x0005c75c: lahf; ret 0xd629; 
0x001026cd: lahf; ret 0xe8c1; 
0x00053ede: lahf; ret 0xfa80; 
0x00023eed: lahf; ret 0xffff; 
0x000c8d7d: lahf; ret; 
0x001082b6: lahf; stc; call dword ptr [eax - 0x18]; 
0x0002c3ad: lahf; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x000d613e: lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008b3d4: lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bfca: lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00044aa4: lcall 0x1559, 0xc7810012; push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0006ef7c: lcall 0x244c, 0x89ffffe9; or al, ch; aaa; ret; 
0x0011fb0f: lcall 0x2454, 0x8b000001; xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000c03e2: lcall 0x247c, 0x8bfff6f4; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002a59b: lcall 0x247c, 0x8bfffffa; cmp byte ptr [ebp - 0x696df79], cl; call dword ptr [eax + 0x68]; 
0x0013df9b: lcall 0x3485, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00128c7c: lcall 0x6510, 0xc483fff5; mov dword ptr [esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00090da5: lcall 0xb800, 0x1ba; lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00119d07: lcall 0xf5c6, 0x81000547; ret 0x10; 
0x0008bd47: lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000e14fb: lds eax, ptr [eax + eax]; add byte ptr [ebx - 0x6a76f314], al; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x00096de9: lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x000cf6d8: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000d19af: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448d; 
0x000d4932: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000d1917: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x548d; 
0x000d3a99: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x858b; 
0x000d0098: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000cb27f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xc889; 
0x000ce407: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000d39fa: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x00120800: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001209a1: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a534: lds eax, ptr [ebp - 0x7cd88b40]; in al, dx; add al, 0x6a; add eax, 0xb4838d50; jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x000b8df3: lds eax, ptr [ebx + eax*4]; ret; 
0x0009951f: lds eax, ptr [ebx - 0x127aef3c]; jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00039087: lds eax, ptr [ecx + ecx*4]; add ecx, dword ptr [ebx - 0x7cfbdbbc]; ret; 
0x001903c7: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x000cb525: lds ebp, ptr [ecx]; int 0x80; 
0x00094d33: lds ebp, ptr [ecx]; ret 0x4589; 
0x0015605b: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0013dfb7: lds ebx, ptr [eax]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00029cb7: lds ebx, ptr [ebx]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x0015c4ce: lds ecx, ptr [ebp - 0x14]; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0009219a: lds ecx, ptr [ebp - 0x19409f7d]; call dword ptr [eax + 0x56]; 
0x0003a49d: lds ecx, ptr [ebp - 0x68bdf70]; call dword ptr [edx - 0x73]; 
0x0015e5ab: lds ecx, ptr [ebp - 0x69c1f7d]; call dword ptr [ecx + 0x6a]; 
0x00142d59: lds ecx, ptr [ebx - 0x1337b]; jmp dword ptr [ebp - 0x39]; 
0x000ca205: lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x000ca202: lds ecx, ptr [edi]; dec esi; lds ecx, ptr [ecx + 0x31442454]; ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x0012975c: lds ecx, ptr [edi]; xchg dword ptr [0x89000002], ebx; ret; 
0x000a0d68: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x0003e297: lds edi, ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00093c0f: lds edi, ptr [ecx]; ret; 
0x000ca4da: lds esi, ptr [edx + ebp*2 - 0x7d]; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x000e7814: lds esi, ptr [edx + ebx + 0x39]; ret; 
0x001223cb: lds esi, ptr [esi]; cmp al, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00168537: lds esp, ptr [ecx - 0x3b7c000f]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x00155bdb: lds esp, ptr [esi]; add al, 0xd; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00193dab: lea eax, [eax + 0x10]; test edx, edx; jne 0x193dc0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0002eba6: lea eax, [eax + 0x1120]; ret; 
0x0008cdd1: lea eax, [eax + 0x3a60]; push eax; call 0x835b0; add esp, 0x1c; ret; 
0x0011ae11: lea eax, [eax + 0x44e4]; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x0015f7e4: lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x00193f05: lea eax, [eax + 0xa]; pop edi; ret; 
0x00193e5b: lea eax, [eax + 0xb]; pop edi; ret; 
0x00193f15: lea eax, [eax + 0xc]; pop edi; ret; 
0x00193f25: lea eax, [eax + 0xd]; pop edi; ret; 
0x00193f35: lea eax, [eax + 0xe]; pop edi; ret; 
0x00193e84: lea eax, [eax + 0xf]; pop edi; ret; 
0x00193e99: lea eax, [eax + 1]; pop edi; ret; 
0x00193ea9: lea eax, [eax + 2]; pop edi; ret; 
0x00193df1: lea eax, [eax + 3]; pop edi; ret; 
0x00193eb9: lea eax, [eax + 4]; pop edi; ret; 
0x00193ec5: lea eax, [eax + 5]; pop edi; ret; 
0x00193ed5: lea eax, [eax + 6]; pop edi; ret; 
0x00193e24: lea eax, [eax + 7]; pop edi; ret; 
0x00193ee5: lea eax, [eax + 8]; pop edi; ret; 
0x00193ef5: lea eax, [eax + 9]; pop edi; ret; 
0x0008f21c: lea eax, [eax + eax + 2]; ret; 
0x0008de79: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000de8b0: lea eax, [eax + eax - 1]; ret; 
0x0004abb7: lea eax, [eax + eax*8 + 2]; call 0x4ab70; add eax, ebx; jmp eax; 
0x000b50a4: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000b2f23: lea eax, [eax + ecx + 0x10]; ret; 
0x000b2f33: lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f43: lea eax, [eax + ecx + 0x30]; ret; 
0x000b2c63: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b2c73: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000b2c43: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b3353: lea eax, [eax + edx + 0x10]; ret; 
0x000b3363: lea eax, [eax + edx + 0x20]; ret; 
0x00156d0b: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000829f1: lea eax, [eax + edx + 0x4000]; ret; 
0x0016d7d9: lea eax, [eax + edx + 0x64]; ret; 
0x000b3333: lea eax, [eax + edx - 0x10]; ret; 
0x000b4a4a: lea eax, [eax - 0x15d1e0]; test byte ptr [ecx + 0x7d], 2; cmovne eax, edx; ret; 
0x0009a4fa: lea eax, [eax - 0x171b80]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0009a07a: lea eax, [eax - 0x171c40]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0002172e: lea eax, [eax - 0x69214]; ret; 
0x0002174e: lea eax, [eax - 0x6921c]; ret; 
0x00021706: lea eax, [eax - 0x69960]; push eax; push 1; call 0x108630; add esp, 0x1c; ret; 
0x00169895: lea eax, [eax - 0x699dd]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x001542b1: lea eax, [eax - 0x69d17]; push eax; push 9; call 0x14f970; add esp, 0x1c; ret; 
0x00153ff1: lea eax, [eax - 0x69d24]; push eax; push 0; call 0x14f970; add esp, 0x1c; ret; 
0x00153221: lea eax, [eax - 0x69d48]; push eax; push 0xa; call 0x14f970; add esp, 0x1c; ret; 
0x00152ec1: lea eax, [eax - 0x69d54]; push eax; push 1; call 0x14f970; add esp, 0x1c; ret; 
0x001529b1: lea eax, [eax - 0x69d60]; push eax; push 6; call 0x14f970; add esp, 0x1c; ret; 
0x00152631: lea eax, [eax - 0x69d6b]; push eax; push 2; call 0x14f970; add esp, 0x1c; ret; 
0x00152291: lea eax, [eax - 0x69d79]; push eax; push 4; call 0x14f970; add esp, 0x1c; ret; 
0x001516b1: lea eax, [eax - 0x69dbf]; push eax; push 3; call 0x14f970; add esp, 0x1c; ret; 
0x00150791: lea eax, [eax - 0x69e20]; push eax; push 8; call 0x14f970; add esp, 0x1c; ret; 
0x00150121: lea eax, [eax - 0x69e2f]; push eax; push 5; call 0x14f970; add esp, 0x1c; ret; 
0x00087799: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00061ab7: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x0011fb4e: lea eax, [eax]; add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010ac30: lea eax, [ebp + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af79: lea eax, [ebp + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0010af08: lea eax, [ebp + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000fd84c: lea eax, [ebp - 0x11c]; push 0x100; push eax; push edx; call ebx; 
0x000d1425: lea eax, [ebp - 7]; call dword ptr [eax - 0x18]; 
0x000485c8: lea eax, [ebx + 0x18b0]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00155099: lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0019ce62: lea eax, [ebx + 0xc60]; mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x000e4753: lea eax, [ebx + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014d9f3: lea eax, [ebx + 4]; push eax; call edi; 
0x0003b615: lea eax, [ebx + 6]; pop ebx; ret; 
0x000e462b: lea eax, [ebx + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000930c2: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011cc7b: lea eax, [ebx - 0x6b598]; pop ebx; pop esi; ret; 
0x000759e5: lea eax, [ebx - 1]; pop ebx; ret; 
0x00193330: lea eax, [ecx + 0xa]; ret; 
0x00193340: lea eax, [ecx + 0xb]; ret; 
0x001932bb: lea eax, [ecx + 0xc]; ret; 
0x00193350: lea eax, [ecx + 0xd]; ret; 
0x00193360: lea eax, [ecx + 0xe]; ret; 
0x00193370: lea eax, [ecx + 0xf]; ret; 
0x000e7e50: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001932c0: lea eax, [ecx + 1]; ret; 
0x001932d0: lea eax, [ecx + 2]; ret; 
0x001932e0: lea eax, [ecx + 3]; ret; 
0x00193268: lea eax, [ecx + 4]; ret; 
0x001932f0: lea eax, [ecx + 5]; ret; 
0x00193300: lea eax, [ecx + 6]; ret; 
0x00193310: lea eax, [ecx + 7]; ret; 
0x00193292: lea eax, [ecx + 8]; ret; 
0x00193320: lea eax, [ecx + 9]; ret; 
0x000b2f6a: lea eax, [ecx + eax + 0x10]; ret; 
0x000b2f7a: lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f8a: lea eax, [ecx + eax + 0x30]; ret; 
0x000fdd50: lea eax, [ecx - 0x68d4c]; push eax; call 0x304e0; add esp, 0x18; pop ebx; ret; 
0x00038300: lea eax, [ecx - 1]; mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x000ac868: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ac87e: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000ac8a0: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ac8be: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000ac8de: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000ac904: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000ac922: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000ac942: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ac962: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ac988: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000ac9aa: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ac9d8: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000ac9f8: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000aca12: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000aca32: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000aca52: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000aca72: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000accc1: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ac7b0: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x00192310: lea eax, [edi + 0xa]; pop edi; ret; 
0x000ac7ce: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x001921d6: lea eax, [edi + 0xb]; pop edi; ret; 
0x000ac7ee: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x00192330: lea eax, [edi + 0xc]; pop edi; ret; 
0x000ac812: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x00192340: lea eax, [edi + 0xd]; pop edi; ret; 
0x000ac832: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x00192350: lea eax, [edi + 0xe]; pop edi; ret; 
0x000ac852: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x00192190: lea eax, [edi + 0xf]; pop edi; ret; 
0x000ac6c4: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x00192290: lea eax, [edi + 1]; pop edi; ret; 
0x000ac6d6: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x001922a0: lea eax, [edi + 2]; pop edi; ret; 
0x000ac6ec: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x00192133: lea eax, [edi + 3]; pop edi; ret; 
0x000ac704: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001922c0: lea eax, [edi + 4]; pop edi; ret; 
0x000ac71a: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x001922d0: lea eax, [edi + 5]; pop edi; ret; 
0x000ac73c: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x001922e0: lea eax, [edi + 6]; pop edi; ret; 
0x000ac75a: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x001920ed: lea eax, [edi + 7]; pop edi; ret; 
0x000ac778: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001922f0: lea eax, [edi + 8]; pop edi; ret; 
0x000ac78e: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x00192300: lea eax, [edi + 9]; pop edi; ret; 
0x000b2c9a: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2caa: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2b8f: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000d3c66: lea eax, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x001926b3: lea eax, [edi - 0x10]; pop edi; ret; 
0x000dd2e5: lea eax, [edi - 0x400006d2]; add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00192770: lea eax, [edi - 0xa]; pop edi; ret; 
0x00192760: lea eax, [edi - 0xb]; pop edi; ret; 
0x001926d8: lea eax, [edi - 0xc]; pop edi; ret; 
0x00192750: lea eax, [edi - 0xd]; pop edi; ret; 
0x00192740: lea eax, [edi - 0xe]; pop edi; ret; 
0x00192730: lea eax, [edi - 0xf]; pop edi; ret; 
0x001927e0: lea eax, [edi - 1]; pop edi; ret; 
0x000b3121: lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x001927d0: lea eax, [edi - 2]; pop edi; ret; 
0x000b3131: lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x001927c0: lea eax, [edi - 3]; pop edi; ret; 
0x000b3141: lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x0019272b: lea eax, [edi - 4]; pop edi; ret; 
0x001927b0: lea eax, [edi - 5]; pop edi; ret; 
0x001927a0: lea eax, [edi - 6]; pop edi; ret; 
0x00192790: lea eax, [edi - 7]; pop edi; ret; 
0x00192702: lea eax, [edi - 8]; pop edi; ret; 
0x00192780: lea eax, [edi - 9]; pop edi; ret; 
0x00192280: lea eax, [edi]; pop edi; ret; 
0x000a8efd: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000a719e: lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72de: lea eax, [edx + 0xa]; ret; 
0x000a9f17: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a708e: lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72fe: lea eax, [edx + 0xb]; ret; 
0x000a8ebe: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a71c2: lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7322: lea eax, [edx + 0xc]; ret; 
0x000a71e2: lea eax, [edx + 0xd]; pop edi; ret; 
0x000a7342: lea eax, [edx + 0xd]; ret; 
0x000a9ec5: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7202: lea eax, [edx + 0xe]; pop edi; ret; 
0x000a7362: lea eax, [edx + 0xe]; ret; 
0x000a70c8: lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7378: lea eax, [edx + 0xf]; ret; 
0x000a109b: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a70e6: lea eax, [edx + 1]; pop edi; ret; 
0x000a7226: lea eax, [edx + 1]; ret; 
0x000a70fc: lea eax, [edx + 2]; pop edi; ret; 
0x000a723c: lea eax, [edx + 2]; ret; 
0x000a9ff4: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a10be: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a7014: lea eax, [edx + 3]; pop edi; ret; 
0x000a7244: lea eax, [edx + 3]; ret; 
0x000a10d2: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a8e51: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a711a: lea eax, [edx + 4]; pop edi; ret; 
0x000a725a: lea eax, [edx + 4]; ret; 
0x000a10ea: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a712c: lea eax, [edx + 5]; pop edi; ret; 
0x000a726c: lea eax, [edx + 5]; ret; 
0x000a10fe: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a714a: lea eax, [edx + 6]; pop edi; ret; 
0x000a727a: lea eax, [edx + 6]; ret; 
0x000a9f9d: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a108d: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000a7048: lea eax, [edx + 7]; pop edi; ret; 
0x000a7288: lea eax, [edx + 7]; ret; 
0x000a8e83: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000a715e: lea eax, [edx + 8]; pop edi; ret; 
0x000a729e: lea eax, [edx + 8]; ret; 
0x000a7180: lea eax, [edx + 9]; pop edi; ret; 
0x000a72c0: lea eax, [edx + 9]; ret; 
0x000b332a: lea eax, [edx + eax + 0x30]; ret; 
0x0013dc74: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00092e00: lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000b4fa6: lea eax, [edx - 0x15d2d0]; and ch, 2; lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x00099fc6: lea eax, [edx - 0x171c70]; and ch, 2; lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0009af26: lea eax, [edx - 0x1726f0]; and ch, 2; lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b296: lea eax, [edx - 0x172af0]; and ch, 2; lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b1d6: lea eax, [edx - 0x172b60]; and ch, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009a3ed: lea eax, [edx - 0x1739e0]; test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x0014218b: lea eax, [edx - 0x68d4c]; push eax; call 0x304e0; add esp, 0x10; add esp, 0xc; ret; 
0x00058d81: lea eax, [edx - 0x6ce81]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x0009b053: lea eax, [edx - 0xa0e20]; and ebx, 1; lea edx, [edx - 0xa2fe0]; cmove eax, edx; pop ebx; ret; 
0x0009af73: lea eax, [edx - 0xa4100]; and ebx, 1; lea edx, [edx - 0xa8370]; cmove eax, edx; pop ebx; ret; 
0x0012f1f3: lea eax, [edx - 0xa4120]; and ebx, 1; lea edx, [edx - 0xa8390]; cmove eax, edx; pop ebx; ret; 
0x0009b003: lea eax, [edx - 0xa5100]; and ebx, 1; lea edx, [edx - 0xaa380]; cmove eax, edx; pop ebx; ret; 
0x0012f243: lea eax, [edx - 0xa5120]; and ebx, 1; lea edx, [edx - 0xaa3a0]; cmove eax, edx; pop ebx; ret; 
0x0009b363: lea eax, [edx - 0xa60f0]; and ebx, 1; lea edx, [edx - 0xac3b0]; cmove eax, edx; pop ebx; ret; 
0x0012f1a3: lea eax, [edx - 0xa6110]; and ebx, 1; lea edx, [edx - 0xac3d0]; cmove eax, edx; pop ebx; ret; 
0x0009b094: lea eax, [edx - 0xade90]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x0009afb4: lea eax, [edx - 0xae410]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f284: lea eax, [edx - 0xae430]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x000a70d4: lea eax, [edx]; pop edi; ret; 
0x000a7214: lea eax, [edx]; ret; 
0x000b42f7: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0006b075: lea eax, [esi + eax - 0x1bb381]; jmp eax; 
0x00066017: lea eax, [esi + eax - 0x1c0419]; jmp eax; 
0x00074088: lea eax, [esi + ebx]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013d861: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x001220d7: lea eax, [esp + 0x14]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c087: lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007bd1e: lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000b5773: lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000b53d5: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000d8f9e: lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x000b528e: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00076d24: lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x000b59bd: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x000b6011: lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00028bd3: lea eax, [esp + 0x68]; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x0002617a: lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000293ca: lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x000ca796: lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ca52e: lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0007043c: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000b2f69: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000b2c99: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000806b6: lea ebp, [0x89000001]; ret 0x468b; 
0x0013a70e: lea ebp, [eax - 0x76000005]; ret 0xbd8d; 
0x0002c385: lea ebp, [ecx + edi*8]; call dword ptr [eax + 0x56]; 
0x00086ae0: lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000c9da1: lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000d5e93: lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x000d5ec0: lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0016b720: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008601a: lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000dcd6b: lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00085e40: lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000b4f70: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000b4f68: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000b4f5a: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0004abb0: lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x4ab70; add eax, ebx; jmp eax; 
0x000844da: lea ebx, [ebp + eax*4 + 0x28]; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x000c8d82: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000d5dc2: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0011779d: lea ebx, [edx + 1]; jne 0x11777b; mov eax, esi; pop ebx; pop esi; ret; 
0x0007447c: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0015e2e0: lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00105f12: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00085ea4: lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00114168: lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0004a5eb: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000c8d0b: lea ecx, [eax + 1]; jne 0xc8ce8; mov eax, ecx; ret; 
0x000382eb: lea ecx, [eax + 1]; mov dword ptr [edx + 0x68], ecx; ret; 
0x0008e87c: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x8e876; xor eax, eax; pop ebx; ret; 
0x00086adf: lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000dd2e4: lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x001248d2: lea ecx, [ebp - 0x6fffd98c]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0011fabd: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0015604f: lea ecx, [ebx - 0x137cfbbd]; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0004a83c: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00163238: lea ecx, [ecx - 0x4e0]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000866cd: lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000933eb: lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x000a48cd: lea ecx, [edx + 0x10]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a510d: lea ecx, [edx + 0x10]; jne 0xa4e61; pop ebx; ret; 
0x000a95ee: lea ecx, [edx + 0x10]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5025: lea ecx, [edx + 0xa]; jne 0xa4e61; pop ebx; ret; 
0x000a94d6: lea ecx, [edx + 0xa]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5043: lea ecx, [edx + 0xb]; jne 0xa4e61; pop ebx; ret; 
0x000a9504: lea ecx, [edx + 0xb]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4893: lea ecx, [edx + 0xc]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5063: lea ecx, [edx + 0xc]; jne 0xa4e61; pop ebx; ret; 
0x000a9534: lea ecx, [edx + 0xc]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4c57: lea ecx, [edx + 0xd]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5087: lea ecx, [edx + 0xd]; jne 0xa4e61; pop ebx; ret; 
0x000a9568: lea ecx, [edx + 0xd]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4c87: lea ecx, [edx + 0xe]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50b7: lea ecx, [edx + 0xe]; jne 0xa4e61; pop ebx; ret; 
0x000a4cb7: lea ecx, [edx + 0xf]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50e7: lea ecx, [edx + 0xf]; jne 0xa4e61; pop ebx; ret; 
0x000a95c8: lea ecx, [edx + 0xf]; jne 0xa92c1; pop ebx; ret; 
0x000a4b19: lea ecx, [edx + 1]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4ef9: lea ecx, [edx + 1]; jne 0xa4e61; pop ebx; ret; 
0x000a9359: lea ecx, [edx + 1]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0007b450: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000a4f1b: lea ecx, [edx + 2]; jne 0xa4e61; pop ebx; ret; 
0x000a937c: lea ecx, [edx + 2]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4b61: lea ecx, [edx + 3]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4f41: lea ecx, [edx + 3]; jne 0xa4e61; pop ebx; ret; 
0x000a93a2: lea ecx, [edx + 3]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4f59: lea ecx, [edx + 4]; jne 0xa4e61; pop ebx; ret; 
0x000a93ca: lea ecx, [edx + 4]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00073a26: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000a4b7f: lea ecx, [edx + 5]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4f7f: lea ecx, [edx + 5]; jne 0xa4e61; pop ebx; ret; 
0x000a93f0: lea ecx, [edx + 5]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a4ba1: lea ecx, [edx + 6]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fa1: lea ecx, [edx + 6]; jne 0xa4e61; pop ebx; ret; 
0x000a4bbf: lea ecx, [edx + 7]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fbf: lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x000a4fdd: lea ecx, [edx + 8]; jne 0xa4e61; pop ebx; ret; 
0x000a947e: lea ecx, [edx + 8]; jne 0xa92c1; pop ebx; ret; 
0x000a4be3: lea ecx, [edx + 9]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5003: lea ecx, [edx + 9]; jne 0xa4e61; pop ebx; ret; 
0x000a94a4: lea ecx, [edx + 9]; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0005b1f6: lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0006fdee: lea ecx, [esi + 0x28]; push ecx; push 1; push esi; call eax; 
0x00087dd4: lea ecx, [esi - 0x72580]; mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0015e934: lea ecx, [esp + 0x10]; push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x00071066: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00161ff6: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x0011fc18: lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0015e877: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016277a: lea ecx, [esp + 0x20]; push ecx; push esi; call dword ptr [eax]; 
0x0015e864: lea ecx, [esp + 0x28]; push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x000c3c8f: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00092f98: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0011fb60: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000d626e: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000f9919: lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000cd728: lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0012073b: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208bb: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001207fb: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000d61ac: lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d62cf: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d6023: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x001148c8: lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000f9880: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000dcd44: lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0005cc92: lea edi, [eax - 0x76000005]; ret 0xb589; 
0x0004fc93: lea edi, [eax - 0x76000037]; fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x00117277: lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0007efaf: lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000aad1b: lea edi, [edi + 0x10]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac3be: lea edi, [edi + 0x10]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac434: lea edi, [edi + 0x13]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aadf5: lea edi, [edi + 0x16]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aae25: lea edi, [edi + 0x17]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac55b: lea edi, [edi + 0x19]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aaebd: lea edi, [edi + 0x1a]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaeeb: lea edi, [edi + 0x1b]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aaf1b: lea edi, [edi + 0x1c]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac5ee: lea edi, [edi + 0x1c]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aaf45: lea edi, [edi + 0x1d]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac618: lea edi, [edi + 0x1d]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aaf75: lea edi, [edi + 0x1e]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac648: lea edi, [edi + 0x1e]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aafa5: lea edi, [edi + 0x1f]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac678: lea edi, [edi + 0x1f]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aafd5: lea edi, [edi + 0x20]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac6a8: lea edi, [edi + 0x20]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aac33: lea edi, [edi + 0xa]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac2a6: lea edi, [edi + 0xa]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac2d4: lea edi, [edi + 0xb]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aac71: lea edi, [edi + 0xc]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac304: lea edi, [edi + 0xc]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aac95: lea edi, [edi + 0xd]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac338: lea edi, [edi + 0xd]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac368: lea edi, [edi + 0xe]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aacf5: lea edi, [edi + 0xf]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac398: lea edi, [edi + 0xf]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aab05: lea edi, [edi + 1]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac19c: lea edi, [edi + 2]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac1bf: lea edi, [edi + 3]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac1da: lea edi, [edi + 4]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aab8a: lea edi, [edi + 5]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac1fd: lea edi, [edi + 5]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aabaf: lea edi, [edi + 6]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac222: lea edi, [edi + 6]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aabcd: lea edi, [edi + 7]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac240: lea edi, [edi + 7]; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000aabeb: lea edi, [edi + 8]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000aac0e: lea edi, [edi + 9]; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x001553e9: lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00176945: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0004a839: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004a5ad: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009dad6: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x001442de: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x000213c2: lea edx, [eax - 0x1aad40]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0002c235: lea edx, [eax - 0x1fa070]; push edx; push dword ptr [eax + 0x1018]; call 0x11bcf0; add esp, 0x1c; ret; 
0x0015da9d: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0013966a: lea edx, [ebx + 0x4b40]; push edx; call eax; 
0x0015cefd: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0015a240: lea edx, [ebx + 0xac]; push edx; call eax; 
0x0016e6b7: lea edx, [ebx - 0x1ba0]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0012ea8f: lea edx, [ebx - 0xf7690]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00157a0a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001579ca: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x0002ec30: lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x0015ae51: lea edx, [edi + 8]; push edx; call eax; 
0x00124754: lea edx, [edi + edi]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00066a75: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x00066a75: lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x00161e8a: lea edx, [edi - 0x6d78c]; mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x0005bd18: lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x0005b252: lea edx, [edx + edi*8 - 1]; call dword ptr [edx + 0x50]; 
0x0005bfca: lea edx, [edx + edi*8 - 1]; call dword ptr [esi + 0x57]; 
0x0005bc21: lea edx, [edx + edi*8 - 1]; call dword ptr [esi - 0x18]; 
0x0009cb41: lea edx, [edx - 0x172ea0]; cmove eax, edx; ret; 
0x000a12f1: lea edx, [edx - 0x173330]; cmove eax, edx; ret; 
0x0009aef1: lea edx, [edx - 0x173690]; cmove eax, edx; ret; 
0x0009a4d1: lea edx, [edx - 0x173880]; cmove eax, edx; ret; 
0x00099f91: lea edx, [edx - 0x173990]; cmove eax, edx; ret; 
0x0009a3f7: lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x00099f47: lea edx, [edx - 0x179290]; cmovne eax, edx; ret; 
0x0009b197: lea edx, [edx - 0x17ec80]; cmovne eax, edx; ret; 
0x0009b147: lea edx, [edx - 0x1804f0]; cmovne eax, edx; ret; 
0x0009a487: lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x0009a047: lea edx, [edx - 0x1848c0]; cmovne eax, edx; ret; 
0x0009a381: lea edx, [edx - 0x1849f0]; cmove eax, edx; ret; 
0x001638b7: lea edx, [edx - 0x4a0]; mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x000b4faf: lea edx, [edx - 0x91f20]; cmovne eax, edx; ret; 
0x0009af2f: lea edx, [edx - 0x95a50]; cmovne eax, edx; ret; 
0x0009b29f: lea edx, [edx - 0x9a980]; cmovne eax, edx; ret; 
0x0009b21f: lea edx, [edx - 0x9a9b0]; cmovne eax, edx; ret; 
0x0009b25f: lea edx, [edx - 0x9ce90]; cmovne eax, edx; ret; 
0x0009b1df: lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x0009a43f: lea edx, [edx - 0x9e8b0]; cmovne eax, edx; ret; 
0x00099fcf: lea edx, [edx - 0x9fd20]; cmovne eax, edx; ret; 
0x0009b05c: lea edx, [edx - 0xa2fe0]; cmove eax, edx; pop ebx; ret; 
0x0009af7c: lea edx, [edx - 0xa8370]; cmove eax, edx; pop ebx; ret; 
0x0012f1fc: lea edx, [edx - 0xa8390]; cmove eax, edx; pop ebx; ret; 
0x0009b00c: lea edx, [edx - 0xaa380]; cmove eax, edx; pop ebx; ret; 
0x0012f24c: lea edx, [edx - 0xaa3a0]; cmove eax, edx; pop ebx; ret; 
0x0009b36c: lea edx, [edx - 0xac3b0]; cmove eax, edx; pop ebx; ret; 
0x0012f1ac: lea edx, [edx - 0xac3d0]; cmove eax, edx; pop ebx; ret; 
0x0009afc1: lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f291: lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x0009b0a1: lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x00085cf1: lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000781fe: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0006f8d5: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x000782dd: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00103a87: lea edx, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x00155a70: lea edx, [esi - 0xd0240]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00155ba1: lea edx, [esi - 0xd0240]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00162e1a: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623aa: lea edx, [esp + 0x10]; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00162b2c: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015bac8: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621fe: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016219b: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x00162dee: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00162496: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0016237e: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0013e17e: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e24a: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000df7bb: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015dc3f: lea edx, [esp + 0x14c]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00092bc8: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001078d5: lea edx, [esp + 0x18]; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00107a35: lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x000cd8ac: lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0015edb8: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0007c3c7: lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00107398: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001604bc: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0015a4e2: lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x001147a2: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011c918: lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0011fdb6: lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00162b16: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00162b6b: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621db: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00162186: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000d5ff5: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x00162536: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x00113904: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x001142ce: lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00103a3b: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0003a06c: lea esi, [eax - 0x1c60]; cmp ebx, esi; jae 0x3a089; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x00038b72: lea esi, [ecx + eax]; push esi; call edi; 
0x0006c904: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0006bbfc: lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x00191f4a: lea esi, [esi]; add eax, 1; ret; 
0x0019351d: lea esi, [esi]; add edx, 2; jl 0x1935d0; lea eax, [ecx + 2]; ret; 
0x0019352d: lea esi, [esi]; add edx, 3; jl 0x1935d0; lea eax, [ecx + 3]; ret; 
0x0019353d: lea esi, [esi]; add edx, 5; jl 0x1935d0; lea eax, [ecx + 5]; ret; 
0x0019354d: lea esi, [esi]; add edx, 6; jl 0x1935d0; lea eax, [ecx + 6]; ret; 
0x000776bd: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00082bad: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0015739d: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008a195: lea esi, [esi]; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x00130339: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00057ce4: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0019290d: lea esi, [esi]; and eax, 0x1f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019293d: lea esi, [esi]; and eax, 0x1ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019291d: lea esi, [esi]; and eax, 0x3f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019292d: lea esi, [esi]; and eax, 0x7f; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001310dd: lea esi, [esi]; and eax, 0xffffff; ret; 
0x00083b0d: lea esi, [esi]; and eax, 0xfffffffd; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x001928ed: lea esi, [esi]; and eax, 3; jne 0x192690; xor eax, eax; pop edi; ret; 
0x001928fd: lea esi, [esi]; and eax, 7; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000b2c3a: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000b334d: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000b2f1d: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000b305c: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x0003a07d: lea esi, [esi]; call dword ptr [ebx]; 
0x00084254: lea esi, [esi]; cmp edx, esi; jbe 0x84298; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0008033c: lea esi, [esi]; endbr32; call 0x16e4a1; add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x0003829c: lea esi, [esi]; endbr32; call 0x16e4a1; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x0002273c: lea esi, [esi]; endbr32; call 0x16e4a1; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x0002271d: lea esi, [esi]; endbr32; call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002173c: lea esi, [esi]; endbr32; call 0x16e4a1; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x000802dd: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x000802fa: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x00154f6c: lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x001633ec: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0016e03d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e0ec: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e06c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0016e04c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008037c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x00162fec: lea esi, [esi]; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0008032a: lea esi, [esi]; endbr32; ret; 
0x0008030a: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x00068df9: lea esi, [esi]; jmp eax; 
0x000e7e4d: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00194859: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x0019230c: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x0019231c: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x0019232c: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x0019233c: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x0019234c: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x0019229c: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001922ac: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001922bc: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001922cc: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001922dc: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001922ec: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001922fc: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x0019276c: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x0019275c: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x0019274c: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x0019273c: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001927dc: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001927cc: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001927bc: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x00194aec: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001927ac: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x0019279c: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x0019278c: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x00194ada: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x0019277c: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x0019392a: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000d5ebd: lea esi, [esi]; lea ebp, [esp + 4]; mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092f92: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0011fc75: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000f9975: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00191f43: lea esi, [esi]; lea esi, [esi]; add eax, 1; ret; 
0x001310d6: lea esi, [esi]; lea esi, [esi]; and eax, 0xffffff; ret; 
0x0003a076: lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x000821b5: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x00194852: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00193923: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008de06: lea esi, [esi]; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084036: lea esi, [esi]; lea esi, [esi]; mov eax, 0x16; ret; 
0x0013d606: lea esi, [esi]; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c8c53: lea esi, [esi]; lea esi, [esi]; mov eax, 1; ret; 
0x000c8c66: lea esi, [esi]; lea esi, [esi]; mov eax, 2; ret; 
0x000c8c76: lea esi, [esi]; lea esi, [esi]; mov eax, 3; ret; 
0x000c8c86: lea esi, [esi]; lea esi, [esi]; mov eax, 4; ret; 
0x000c8c96: lea esi, [esi]; lea esi, [esi]; mov eax, 5; ret; 
0x000c8ca6: lea esi, [esi]; lea esi, [esi]; mov eax, 6; ret; 
0x000c8cb6: lea esi, [esi]; lea esi, [esi]; mov eax, 7; ret; 
0x00194825: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000dcdf6: lea esi, [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a4cc3: lea esi, [esi]; lea esi, [esi]; pop ebx; ret; 
0x00094e36: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x000a70cd: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a2cfc: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a2e1d: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000aecda: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4cd9: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008de0d: lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00156c74: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0009368d: lea esi, [esi]; mov dword ptr [edx + 0x204], eax; ret; 
0x0008d5fc: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x00083dec: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x0008403d: lea esi, [esi]; mov eax, 0x16; ret; 
0x000de734: lea esi, [esi]; mov eax, 0x40; ret; 
0x0012076a: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001208ea: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00087e8a: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000de689: lea esi, [esi]; mov eax, 0xfc17; pop ebx; ret; 
0x0014641d: lea esi, [esi]; mov eax, 0xffffffff; pop ebx; ret; 
0x000382f5: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x00188f7d: lea esi, [esi]; mov eax, 1; ja 0x188f89; neg eax; pop ebp; ret; 
0x0018e37a: lea esi, [esi]; mov eax, 1; ja 0x18e389; neg eax; ret; 
0x0018e67d: lea esi, [esi]; mov eax, 1; ja 0x18e689; neg eax; pop ebp; ret; 
0x000c8a5c: lea esi, [esi]; mov eax, 1; jg 0xc8a69; neg eax; ret; 
0x0009959a: lea esi, [esi]; mov eax, 1; ret; 
0x000c8c6d: lea esi, [esi]; mov eax, 2; ret; 
0x000871da: lea esi, [esi]; mov eax, 3; add esp, 0xc; ret; 
0x000877a5: lea esi, [esi]; mov eax, 3; ret; 
0x000c8c8d: lea esi, [esi]; mov eax, 4; ret; 
0x000c8c9d: lea esi, [esi]; mov eax, 5; ret; 
0x000c8cad: lea esi, [esi]; mov eax, 6; ret; 
0x000c8cbd: lea esi, [esi]; mov eax, 7; ret; 
0x0011d0d5: lea esi, [esi]; mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x00080e8c: lea esi, [esi]; mov eax, dword ptr [eax + 0x3a0]; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0011d0c9: lea esi, [esi]; mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x0003802d: lea esi, [esi]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0015fafd: lea esi, [esi]; mov eax, dword ptr [ebx - 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0015fa6d: lea esi, [esi]; mov eax, dword ptr [ebx - 0x48]; add esp, 4; pop ebx; pop esi; ret; 
0x0015f9d4: lea esi, [esi]; mov eax, dword ptr [ebx - 0xcc]; add esp, 4; pop ebx; pop esi; ret; 
0x0003751a: lea esi, [esi]; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x000d74ad: lea esi, [esi]; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0007a6ac: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0007a57c: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00161f8d: lea esi, [esi]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000b48cd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b48dd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b48ed: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b48fd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b490d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b491d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b492d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b493d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b494d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b495d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b496d: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b48bd: lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x001303f4: lea esi, [esi]; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0009933c: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00193f3a: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00083bdd: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00083ced: lea esi, [esi]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0019482c: lea esi, [esi]; mov eax, ecx; ret; 
0x0007a8a2: lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000ab62d: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x00192cac: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x00021542: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000cd912: lea esi, [esi]; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0011f959: lea esi, [esi]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0014e0a9: lea esi, [esi]; mov ecx, 1; mov eax, ecx; ret; 
0x0007a5b5: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000993f4: lea esi, [esi]; mov edx, dword ptr [edi - 0x148]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00108b44: lea esi, [esi]; mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000d5dfd: lea esi, [esi]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000a4cfc: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000ab39d: lea esi, [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000a736d: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2f7c: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ab46d: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a4d5d: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a2e8d: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000c8c2b: lea esi, [esi]; nop; add eax, 1; ret; 
0x000c8c3b: lea esi, [esi]; nop; add eax, 3; ret; 
0x0009d83b: lea esi, [esi]; nop; add esp, 4; pop ebx; pop esi; ret; 
0x001189eb: lea esi, [esi]; nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0019d4ab: lea esi, [esi]; nop; call dword ptr [esi]; 
0x0007f67b: lea esi, [esi]; nop; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00155187: lea esi, [esi]; nop; endbr32; ret; 
0x0019332b: lea esi, [esi]; nop; lea eax, [ecx + 0xa]; ret; 
0x0019333b: lea esi, [esi]; nop; lea eax, [ecx + 0xb]; ret; 
0x0019334b: lea esi, [esi]; nop; lea eax, [ecx + 0xd]; ret; 
0x0019335b: lea esi, [esi]; nop; lea eax, [ecx + 0xe]; ret; 
0x0019336b: lea esi, [esi]; nop; lea eax, [ecx + 0xf]; ret; 
0x001932cb: lea esi, [esi]; nop; lea eax, [ecx + 2]; ret; 
0x001932db: lea esi, [esi]; nop; lea eax, [ecx + 3]; ret; 
0x001932eb: lea esi, [esi]; nop; lea eax, [ecx + 5]; ret; 
0x001932fb: lea esi, [esi]; nop; lea eax, [ecx + 6]; ret; 
0x0019330b: lea esi, [esi]; nop; lea eax, [ecx + 7]; ret; 
0x0019331b: lea esi, [esi]; nop; lea eax, [ecx + 9]; ret; 
0x0019228b: lea esi, [esi]; nop; lea eax, [edi + 1]; pop edi; ret; 
0x0019227b: lea esi, [esi]; nop; lea eax, [edi]; pop edi; ret; 
0x0019399b: lea esi, [esi]; nop; lea eax, [edx + 0xa]; ret; 
0x001939ab: lea esi, [esi]; nop; lea eax, [edx + 0xc]; ret; 
0x001939bb: lea esi, [esi]; nop; lea eax, [edx + 0xd]; ret; 
0x001939cb: lea esi, [esi]; nop; lea eax, [edx + 0xe]; ret; 
0x0019393b: lea esi, [esi]; nop; lea eax, [edx + 2]; ret; 
0x0019394b: lea esi, [esi]; nop; lea eax, [edx + 4]; ret; 
0x0019395b: lea esi, [esi]; nop; lea eax, [edx + 5]; ret; 
0x0019396b: lea esi, [esi]; nop; lea eax, [edx + 6]; ret; 
0x0019397b: lea esi, [esi]; nop; lea eax, [edx + 8]; ret; 
0x0019398b: lea esi, [esi]; nop; lea eax, [edx + 9]; ret; 
0x0013f433: lea esi, [esi]; nop; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a4d1b: lea esi, [esi]; nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000de7d8: lea esi, [esi]; nop; mov eax, 0x100; ret; 
0x00083aa7: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x001248d3: lea esi, [esi]; nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00076033: lea esi, [esi]; nop; mov eax, 0xffffffff; ret; 
0x0018773b: lea esi, [esi]; nop; mov eax, 1; ja 0x187749; neg eax; ret; 
0x000df743: lea esi, [esi]; nop; mov eax, 1; ret; 
0x0010dcd3: lea esi, [esi]; nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x000789b3: lea esi, [esi]; nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00085ff7: lea esi, [esi]; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x00157943: lea esi, [esi]; nop; mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c8d13: lea esi, [esi]; nop; mov ecx, eax; mov eax, ecx; ret; 
0x000a4ceb: lea esi, [esi]; nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000a4dab: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dbb: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dcb: lea esi, [esi]; nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x001876ab: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001876bb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001876cb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001876db: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001876eb: lea esi, [esi]; nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018768b: lea esi, [esi]; nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0008b0fb: lea esi, [esi]; nop; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0019024b: lea esi, [esi]; nop; pop ebx; xor eax, eax; ret; 
0x000af058: lea esi, [esi]; nop; pop esi; ret; 
0x00081ce3: lea esi, [esi]; nop; ret; 
0x00131198: lea esi, [esi]; nop; shr eax, 0x18; ret; 
0x00080073: lea esi, [esi]; nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000e2333: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00103f13: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x001603bb: lea esi, [esi]; nop; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0019520b: lea esi, [esi]; nop; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x00154f4b: lea esi, [esi]; nop; xor eax, eax; add esp, 0xc; ret; 
0x000b276b: lea esi, [esi]; nop; xor eax, eax; pop edi; ret; 
0x00039f87: lea esi, [esi]; nop; xor eax, eax; ret; 
0x00083a9c: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0013d8a5: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00191c5d: lea esi, [esi]; pop ebx; mov eax, 1; ja 0x191c6a; neg eax; ret; 
0x000826ea: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x000b260d: lea esi, [esi]; pop ebx; pop esi; ret; 
0x000a4cca: lea esi, [esi]; pop ebx; ret; 
0x000e7e04: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018e85a: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000ab37c: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000c8a3c: lea esi, [esi]; pop edi; pop esi; ret; 
0x0005f961: lea esi, [esi]; ret; 
0x0007f7ba: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00073b6c: lea esi, [esi]; sub esp, 0x18; push ecx; call 0x75530; add esp, 0x1c; ret; 
0x000dfdbd: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x001604cc: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00155d5d: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00099512: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x000741dd: lea esi, [esi]; sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0015527c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016b1d5: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0016027d: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00194acc: lea esi, [esi]; test ah, 0xf0; jne 0x194af0; lea eax, [edi - 8]; pop edi; ret; 
0x0019487c: lea esi, [esi]; test ah, 1; jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x0016e17d: lea esi, [esi]; test al, al; jne 0x16e1a4; mov eax, 4; add esp, 0xc; ret; 
0x0004accc: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00098b3c: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000c8a4a: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000b294d: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00034d4d: lea esi, [esi]; xor eax, eax; ret; 
0x00105f0d: lea esi, [esi]; xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001561bd: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00123f6f: lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0013a708: lea esp, [eax - 0x72000005]; lea ebp, [eax - 0x76000005]; ret 0xbd8d; 
0x0006b86b: lea esp, [eax]; idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x0004dac4: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00022291: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012e9f8: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00119bbf: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0012e9eb: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0012d053: lea esp, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x000df807: lea esp, [esi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x000dece3: lea esp, cs:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013d552: lea esp, gs:[ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000cda64: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00113ffa: leave; add byte ptr [eax], al; add byte ptr [eax - 0x3fcef777], al; pop ebx; ret; 
0x00077ab3: leave; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000ddca5: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000664f0: leave; add eax, dword ptr [eax]; add byte ptr [ebx - 0x8737b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000b3197: leave; add eax, ecx; ret; 
0x00030485: leave; call 0x2ff60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0009aef4: leave; call 0xc24dbef9; ret; 
0x0010936a: leave; call dword ptr gs:[0x10]; 
0x0010936a: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0006b072: leave; clc; dec dword ptr [ebp + 0x4c7f0684]; in al, 0xff; jmp eax; 
0x0003e352: leave; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0014e0a0: leave; cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x000c018e: leave; in eax, 0xff; dec dword ptr [ebx - 0x7ab3dbbc]; ror byte ptr [edi], 0x84; ret 0xffea; 
0x00118537: leave; je 0x11853d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012a8fd: leave; je 0x12a908; xor eax, eax; pop ebx; ret; 
0x0012e942: leave; je 0x12e958; ret; 
0x0008a439: leave; je 0x8a845; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b3192: leave; je 0xb31a0; bsf ecx, ecx; add eax, ecx; ret; 
0x000d5ae7: leave; jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x0010385c: leave; jne 0x10383e; xor eax, eax; pop ebx; ret; 
0x00105fbc: leave; jne 0x105f9e; xor eax, eax; pop ebx; ret; 
0x00126142: leave; jne 0x126150; mov eax, edx; pop ebx; pop esi; ret; 
0x001261ad: leave; jne 0x1261b8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126398: leave; jne 0x1263a0; mov eax, edx; pop ebx; pop esi; ret; 
0x001269ed: leave; jne 0x1269f8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126a4d: leave; jne 0x126a58; mov eax, edx; pop ebx; pop esi; ret; 
0x00126c38: leave; jne 0x126c40; mov eax, edx; pop ebx; pop esi; ret; 
0x00156bf4: leave; jne 0x156c48; mov dword ptr [eax], 0; pop ebx; ret; 
0x0007834e: leave; jne 0x78360; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000938d2: leave; jne 0x938e0; ret; 
0x000a0a93: leave; jne 0xa0a88; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000b4530: leave; jne 0xb4535; xor eax, eax; ret; 
0x000df5dc: leave; jne 0xdf5be; xor eax, eax; pop ebx; ret; 
0x000e1c7c: leave; jne 0xe1c5e; xor eax, eax; pop ebx; ret; 
0x000f6b2c: leave; jne 0xf6b0e; xor eax, eax; pop ebx; ret; 
0x000f76ec: leave; jne 0xf76ce; xor eax, eax; pop ebx; ret; 
0x00113f2d: leave; js 0x113f38; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000deb79: leave; js 0xdeb80; ret; 
0x000d613d: leave; lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008b3d3: leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bfc9: leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bd46: leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008d4ae: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000b1734: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00037219: leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x000d5dba: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000882bb: leave; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001495ff: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0004a5b1: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00083ca0: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0006dc83: leave; ret 0xffff; 
0x000b29af: leave; sub edx, ecx; jbe 0xb29e0; add eax, ecx; ret; 
0x0015793a: leave; test eax, eax; je 0x157970; mov eax, ecx; pop ebx; ret; 
0x00162cda: leave; test eax, eax; je 0x162d10; mov eax, ecx; pop ebx; ret; 
0x00162d4a: leave; test eax, eax; je 0x162d80; mov eax, ecx; pop ebx; ret; 
0x000fdb53: leave; xor al, 3; add byte ptr [ebx - 0x6e373], cl; dec dword ptr [ebx - 0x1137f]; jmp dword ptr [ebp - 0x39]; 
0x000300e2: les eax, ptr [0x3cc48300]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a4898: les eax, ptr [0x5b5f0000]; ret; 
0x00035b92: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x00035b20: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0015fa5c: les eax, ptr [eax + 0x90]; pop ebx; pop esi; ret; 
0x0015faec: les eax, ptr [eax + 0x94]; pop ebx; pop esi; ret; 
0x001551e1: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0010c709: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00099129: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001208c0: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00192218: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001209f1: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000b324d: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00193086: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2e42: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000776b7: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00034fc6: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00022711: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000218b9: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0018b63a: les eax, ptr [ebx + ebx*2]; ret; 
0x0002318f: les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x00082658: les eax, ptr [ebx - 0x7872f314]; jo 0x826de; stc; call dword ptr [eax - 0x18]; 
0x000e648f: les eax, ptr [ebx - 0x7c72f314]; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0016dc1f: les eax, ptr [ebx - 0x7f72f314]; je 0x16dc8d; stc; call dword ptr [eax - 0x18]; 
0x00157c67: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00109f8a: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x0011fc53: les eax, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; ret; 
0x00157348: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013d97d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0003a464: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0014edcd: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0011cc79: les eax, ptr [ecx*4 - 0x6b5977d]; call ptr [ebx + 0x5e]; ret; 
0x00093590: les eax, ptr [ecx]; add byte ptr [eax], al; ret; 
0x00194881: les eax, ptr [ecx]; jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x00158610: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00087318: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001926fa: les eax, ptr [edx]; jne 0x192790; lea eax, [edi - 8]; pop edi; ret; 
0x0019328a: les eax, ptr [edx]; jne 0x193320; lea eax, [ecx + 8]; ret; 
0x001934c9: les eax, ptr [edx]; jne 0x193570; add edx, 8; jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x001938e1: les eax, ptr [edx]; jne 0x193990; test ah, 4; jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x0018ded1: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00083c5a: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000dc1b0: les ebp, ptr [eax + 0x5b]; ret; 
0x00197891: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x000243a0: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e6af1: les ebp, ptr [eax + ebp + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e5021: les ebp, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0004cc3d: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x0011a365: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00170f3d: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00037d59: les ebp, ptr [eax]; pop ebx; ret; 
0x000cdc52: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0013f936: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000fe46c: les ebp, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00025215: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x000853f1: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000b6c24: les ebp, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00021f56: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0006f2e2: les ebp, ptr [ecx + eax*4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003810b: les ebp, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x0014ee3e: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00033c47: les ebp, ptr [ecx + ecx*4]; call 0x5d629aaa; ret; 
0x000b6ac0: les ebp, ptr [ecx + ecx*4]; call 0x5d6ac923; ret; 
0x000f60b4: les ebp, ptr [ecx + ecx*4]; call 0x5d6ebf17; ret; 
0x000f900e: les ebp, ptr [ecx + ecx*4]; call 0x5d6eee71; ret; 
0x0003ea03: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00088047: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0007abae: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000c2389: les ebp, ptr [ecx]; ret; 
0x0011f2ee: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x000f6abd: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0008e928: les ebp, ptr [esi - 0x7c76fffa]; and al, 1; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00116cb7: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000484ff: les ebp, ptr [esp + eax]; add byte ptr [eax], al; ret; 
0x001473cb: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00037bb3: les ebx, ptr [eax + 0x5b000000]; ret; 
0x00195d06: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x0003791d: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e7d67: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00149fb8: les ebx, ptr [eax - 0x12]; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x00155097: les ebx, ptr [eax]; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0003b613: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x00114b17: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00050eb9: les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x00162034: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x0009ba98: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00035d0b: les ebx, ptr [eax]; pop ebx; ret; 
0x000832af: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000ddc3b: les ebx, ptr [ebx + eax*8]; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x00024ba2: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002621d: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008de76: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0011bdd4: les ebx, ptr [ebx + ebx*2]; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0015286b: les ebx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006a1cb: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0003384f: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00075ccb: les ebx, ptr [ebx + ebx*2]; neg eax; pop esi; pop edi; pop ebp; ret; 
0x0008de3e: les ebx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0009a5c9: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00072b0c: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00021cfa: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00137989: les ebx, ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x0010737b: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001747d3: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x00143fa5: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x00038d67: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00030595: les ebx, ptr [ecx + ecx*4]; call 0x5d6263f8; ret; 
0x00049ade: les ebx, ptr [ecx + ecx*4]; call 0x5d63f941; ret; 
0x00049b34: les ebx, ptr [ecx + ecx*4]; call 0x5d63f997; ret; 
0x0006f726: les ebx, ptr [ecx + ecx*4]; call 0x5d665589; ret; 
0x0006f81c: les ebx, ptr [ecx + ecx*4]; call 0x5d66567f; ret; 
0x0007b012: les ebx, ptr [ecx + ecx*4]; call 0x5d670e75; ret; 
0x0007d066: les ebx, ptr [ecx + ecx*4]; call 0x5d672ec9; ret; 
0x0008fbbf: les ebx, ptr [ecx + ecx*4]; call 0x5d685a22; ret; 
0x0009a5fb: les ebx, ptr [ecx + ecx*4]; call 0x5d69045e; ret; 
0x0011733e: les ebx, ptr [ecx + ecx*4]; call 0x5d70d1a1; ret; 
0x0011bda6: les ebx, ptr [ecx + ecx*4]; call 0x5d711c09; ret; 
0x0014e047: les ebx, ptr [ecx + ecx*4]; call 0x5d743eaa; ret; 
0x0014e608: les ebx, ptr [ecx + ecx*4]; call 0x5d74446b; ret; 
0x0003368f: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0002f44d: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0008b476: les ebx, ptr [ecx + ecx*4]; ret 0x895b; 
0x00021a92: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000e4751: les ebx, ptr [ecx*4 + 0x5e5b0243]; pop edi; pop ebp; ret; 
0x000e4629: les ebx, ptr [ecx*4 + 0x5e5b0843]; pop edi; pop ebp; ret; 
0x0011f2ad: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x001591ca: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x0012f158: les ebx, ptr [esi]; add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x000c9bd0: les ecx, ptr [eax + 0x5b]; ret; 
0x000f04af: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000fe3be: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0012c44c: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b31d: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012b0d6: les ecx, ptr [eax + edx*2]; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012cbce: les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0015b878: les ecx, ptr [eax - 0x14]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001442dc: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008a199: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x001309be: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x0011752c: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x0008ce6c: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x00118a2f: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0007dbc5: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x0015746b: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x001026d3: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x00051190: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002bf5d: les ecx, ptr [eax]; pop ebx; ret; 
0x00035f8a: les ecx, ptr [eax]; ret; 
0x00037138: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000309a1: les ecx, ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00023937: les ecx, ptr [ebp - 0x6ba217d]; call dword ptr [eax - 1]; 
0x0012ba38: les ecx, ptr [ebx + 0x4f8bfff8]; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x000c2bcf: les ecx, ptr [ebx + 0xc8dbc45]; mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x0009d027: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003657a: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000392fc: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000fdf49: les ecx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0009ae77: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x001294d3: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00075202: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00099d61: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0002f507: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001575c6: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x000360a4: les ecx, ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x00076745: les ecx, ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000860b4: les ecx, ptr [ebx - 0x137c4fbb]; or al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x000b83a2: les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x00151e1f: les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00074ae7: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00169b16: les ecx, ptr [ecx + ebp*8]; mov dword ptr [0xe8fffffe], eax; ficomp word ptr [ebp - 4]; jmp dword ptr [esi - 0x70]; 
0x000c2df1: les ecx, ptr [ecx + ebp]; ret; 
0x00079aca: les ecx, ptr [ecx + ecx*4]; call 0x5d66f92d; ret; 
0x00079b05: les ecx, ptr [ecx + ecx*4]; call 0x5d66f968; ret; 
0x000839f1: les ecx, ptr [ecx + ecx*4]; call 0x5d679854; ret; 
0x00098fc2: les ecx, ptr [ecx + ecx*4]; call 0x5d68ee25; ret; 
0x000d6dcd: les ecx, ptr [ecx + ecx*4]; call 0x5d6ccc30; ret; 
0x000fdffa: les ecx, ptr [ecx + ecx*4]; call 0x5d6f3e5d; ret; 
0x0011b67c: les ecx, ptr [ecx + ecx*4]; call 0x5d7114df; ret; 
0x0011be28: les ecx, ptr [ecx + ecx*4]; call 0x5d711c8b; ret; 
0x0012f45c: les ecx, ptr [ecx + ecx*4]; call 0x5d7252bf; ret; 
0x0013cc2e: les ecx, ptr [ecx + ecx*4]; call 0x5d732a91; ret; 
0x0007db66: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00023ead: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x20394f7d]; call dword ptr [eax - 0x73]; 
0x00073d2f: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0010da0d: les ecx, ptr [ecx + ecx*4]; ret 0x408d; 
0x0005ee80: les ecx, ptr [ecx + ecx*4]; ret 0x8489; 
0x0005ed62: les ecx, ptr [ecx + ecx*4]; ret 0x8589; 
0x0002f90d: les ecx, ptr [ecx + ecx*4]; ret; 
0x00023749: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00094302: les ecx, ptr [ecx*4 - 0x19293f7d]; call dword ptr [eax + 0x56]; 
0x000942de: les ecx, ptr [ecx*4 - 0x19298f7d]; call dword ptr [eax + 0x56]; 
0x000942a8: les ecx, ptr [ecx*4 - 0x192a0f7d]; call dword ptr [eax + 0x56]; 
0x00094284: les ecx, ptr [ecx*4 - 0x192a3f7d]; call dword ptr [eax + 0x56]; 
0x00094260: les ecx, ptr [ecx*4 - 0x192a5f7d]; call dword ptr [eax + 0x56]; 
0x00094296: les ecx, ptr [ecx*4 - 0x192abf7d]; call dword ptr [eax + 0x56]; 
0x00094272: les ecx, ptr [ecx*4 - 0x192aef7d]; call dword ptr [eax + 0x56]; 
0x000889c4: les ecx, ptr [ecx*4 - 0x19d68f7d]; call dword ptr [eax + 0x56]; 
0x0008f217: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00047d09: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x00194845: les ecx, ptr [edi]; jne 0x194860; test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x000a0657: les ecx, ptr [edi]; mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x000749ea: les ecx, ptr [edx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011d24e: les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x00041ccf: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057df2: les edi, ptr [eax + 0x5b]; ret; 
0x0019954b: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00057733: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00098cfb: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x00143042: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008f16a: les edi, ptr [eax]; pop ebx; ret; 
0x00026b28: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x000217ca: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00036d22: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x000241a7: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000e814d: les edi, ptr [ebx + ebx*2]; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x0016a131: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001364b9: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002b965: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b65c0: les edi, ptr [ecx + ecx*4]; call 0x5d6ac423; ret; 
0x0003ced4: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00087bb3: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000844fd: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003c9a8: les edi, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00147dab: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0008d358: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x001161fc: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x000cda0f: les edx, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00084119: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00037a95: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x00167c01: les edx, ptr [eax - 0x27770000]; pop ebx; pop esi; ret; 
0x001687ba: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00143b9d: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012f2de: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000945a5: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b70e: les edx, ptr [eax]; add esp, 0xc; ret; 
0x001574e9: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00140c67: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000227b7: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x000835e9: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00117d05: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x0002bf5a: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0008b27a: les edx, ptr [eax]; call eax; 
0x00094e24: les edx, ptr [eax]; cmp eax, -1; je 0x94e30; add esp, 0xc; ret; 
0x0015b0f1: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x00163824: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x001282d0: les edx, ptr [eax]; cmp edx, 1; jg 0x1282f8; add esp, 0x18; pop ebx; ret; 
0x0016824d: les edx, ptr [eax]; cmp edx, 1; jg 0x168278; add esp, 0x18; pop ebx; ret; 
0x001682d9: les edx, ptr [eax]; cmp edx, 1; jg 0x168300; add esp, 0x18; pop ebx; ret; 
0x001685b1: les edx, ptr [eax]; cmp edx, 1; jg 0x1685d8; add esp, 0x18; pop ebx; ret; 
0x00087380: les edx, ptr [eax]; cmp edx, 1; jg 0x873a8; add esp, 0x18; pop ebx; ret; 
0x0013d85f: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x00119c20: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00143cb7: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x00124b52: les edx, ptr [eax]; mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00124b76: les edx, ptr [eax]; mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x000d9b00: les edx, ptr [eax]; mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000d5c47: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x001174d1: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00071832: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011c272: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3b4: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x11c458; call eax; 
0x00129ebe: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00161f19: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0015ff52: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160032: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160095: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f5: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160162: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x00037861: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873bc: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000d8c38: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; call eax; 
0x001606d0: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0003b405: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b458: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x0011742a: les edx, ptr [eax]; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000d8d9f: les edx, ptr [eax]; mov eax, edi; call eax; 
0x00070f4c: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0008ae0a: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0003ae38: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x001462fc: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00021da6: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x00118a27: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00130c5c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130ccc: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d7d: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0003aaa3: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd3: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00085975: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b625: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba85: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf81: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0015fee2: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x001171c6: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x00170bb0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x0003b4b5: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b508: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b555: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5a8: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000c9b15: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d3569: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bf9: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x00021c2c: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x000220b5: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x001438ce: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008adef: les edx, ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00056629: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002ba95: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00139b7a: les edx, ptr [eax]; push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x0014511f: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0015f6fb: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0015f10c: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00156e0e: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0012ff41: les edx, ptr [eax]; test eax, eax; je 0x12ff50; add esp, 8; pop ebx; ret; 
0x00139221: les edx, ptr [eax]; test eax, eax; je 0x139230; sub esp, 0xc; push esi; call eax; 
0x00139581: les edx, ptr [eax]; test eax, eax; je 0x139590; sub esp, 0xc; push esi; call eax; 
0x001575d4: les edx, ptr [eax]; test eax, eax; je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0011774d: les edx, ptr [eax]; test eax, eax; jne 0x11770c; add esp, 0xc; ret; 
0x000374c6: les edx, ptr [eax]; test eax, eax; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037755: les edx, ptr [eax]; test eax, eax; jne 0x37760; add esp, 8; pop ebx; ret; 
0x000dc7d5: les edx, ptr [eax]; test eax, eax; jne 0xdc7e0; add esp, 8; pop ebx; ret; 
0x00122b42: les edx, ptr [eax]; test eax, eax; js 0x122b50; add esp, 8; pop ebx; ret; 
0x0014cd60: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x00099521: les edx, ptr [eax]; test ebp, ebp; jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x0016e610: les edx, ptr [eax]; test ebx, ebx; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x000871d2: les edx, ptr [eax]; xor eax, eax; add esp, 0xc; ret; 
0x00035030: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000ebd3c: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000872cb: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00107c4b: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x000814bb: les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000cbefb: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002c6f9: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00155bb1: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00037999: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0011cb27: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x00121d74: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00162170: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00055309: les edx, ptr [ecx + ecx*4]; ret; 
0x00070ed9: les edx, ptr [ecx + ecx*4]; xchg byte ptr [eax + eax - 0x17aa0000], dl; stc; ret 0; 
0x000b50a2: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x0010fb11: les edx, ptr [esi + ebx*2]; pop edi; ret; 
0x000d7433: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x000934ed: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00119d7a: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000ca9d3: les esi, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00078057: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00106de5: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0015eb97: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x0016b32b: les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x0003a97b: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x000dc862: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019d06b: les esi, ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x0005138e: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0015e959: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00107d77: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0003899e: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000842cd: les esp, ptr [eax]; add esp, 0xc; ret; 
0x00139f2e: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0016ef58: les esp, ptr [eax]; cld; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0013996e: les esp, ptr [eax]; cmp edx, 1; jg 0x139998; add esp, 0x18; pop ebx; ret; 
0x00192723: les esp, ptr [eax]; jne 0x1927c0; lea eax, [edi - 4]; pop edi; ret; 
0x001932b3: les esp, ptr [eax]; jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x001934f3: les esp, ptr [eax]; jne 0x1935a0; add edx, 0xc; jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x0019390a: les esp, ptr [eax]; jne 0x1939c0; test ah, 0x40; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x0013ddb9: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x000d5c9c: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000cab46: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00057c4b: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f9954: les esp, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0007124f: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0011ae70: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00021e54: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0019cb56: les esp, ptr [eax]; ret; 
0x0013c28c: les esp, ptr [ebp - 0x77]; push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000dc494: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x000cb11e: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000385d2: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x00037439: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000818a0: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003a3e4: les esp, ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0015347e: les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0019da20: les esp, ptr [edx]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0004a7ba: ljmp 0:0x15c8789; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x000b49ee: ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00087e87: ljmp 0:0xb68d80eb; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0013118c: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000c9457: ljmp 0x108:0x24748b1c; rol dword ptr [ecx], cl; ret; 
0x000d5d22: ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x00175b9d: ljmp 0x110:0xc483fff3; ret; 
0x0015b0c2: ljmp 0x14c4:0x83ffffd2; mov eax, ebx; pop ebx; pop esi; ret; 
0x0019da52: ljmp 0x18c4:0x83ffe826; pop ebx; ret; 
0x000e7df7: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000ca8c6: ljmp 0x1c24:0x74ff50ff; call 0xc9fb0; add esp, 0x18; pop ebx; ret; 
0x0009b6ae: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x00083202: ljmp 0x1cc4:0x83fffff5; ret; 
0x0007882f: ljmp 0x1e0:0x83d08904; add esp, 0x14; pop ebx; pop esi; ret; 
0x000788ef: ljmp 0x1e0:0x83d08905; add esp, 0x14; pop ebx; pop esi; ret; 
0x00155ca2: ljmp 0x2454:0x8b00006f; sbb al, 0x8b; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x000c9138: ljmp 0x29d2:0x31d0891f; ret; 
0x0018479b: ljmp 0x3e8b:0x1c030003; jmp ebx; 
0x000d65e3: ljmp 0x424:0x748bc789; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00177992: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00063432: ljmp 0x440f:0x93048d01; ret; 
0x00071806: ljmp 0x450f:0x107f602; ret 0xec83; 
0x000de28a: ljmp 0x46be:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x00135ec0: ljmp 0x470f:0x9f88357; ret 0xf983; 
0x00192e81: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x000aaec2: ljmp 0x5b5e:0x5f000005; ret; 
0x001262c3: ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x0012a9d4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x00075a87: ljmp 0x5bff:0xffffffb8; ret; 
0x0017048b: ljmp 0x5e5b:0xd889db31; pop edi; ret; 
0x00177dda: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017832a: ljmp 0x5f07:0x88027402; pop ebx; ret; 
0x00150383: ljmp 0x5fd0:0x895e5b02; pop ebp; ret; 
0x00192e91: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x00024bcd: ljmp 0x838d:0x50000002; sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x00192ea1: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x00025e35: ljmp 0x868d:0x50000002; sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0002524c: ljmp 0x878d:0x50000002; sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x00070ed5: ljmp 0x8914:0xc483ffff; xchg byte ptr [eax + eax - 0x17aa0000], dl; stc; ret 0; 
0x000c9403: ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x00091294: ljmp 0x8956:0x7edb8510; ret; 
0x000b2f84: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000de372: ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000de3cf: ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x000b2f74: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000b2f64: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x00192eb1: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x0003fe01: ljmp 0x970f:0x9fa8330; ret 0xd284; 
0x00192ec1: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x00176dc9: ljmp 0xc019:0xd8f7fffb; add esp, 0x1c; ret; 
0x001463da: ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000b2c91: ljmp 0xc229:0xc0bc0f10; jbe 0xb2cc0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2ca1: ljmp 0xc229:0xc0bc0f20; jbe 0xb2cc0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2cb1: ljmp 0xc229:0xc0bc0f30; jbe 0xb2cc0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000e4388: ljmp 0xc283:0x142b60f; add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x00192ed1: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x000733d2: ljmp 0xd024:0x9489ffff; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x0012601c: ljmp 0xd089:0x5b01e283; pop esi; pop edi; ret; 
0x00036421: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00192ee1: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x0011e1e8: ljmp 0xe283:0x1e08314; add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x00192ef1: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x00023272: ljmp 0xe900:0x1b9; ret; 
0x000d5dec: ljmp 0xf00:0x3b8; inc ebp; ret 0x8dc3; 
0x000b4a4e: ljmp 0xf02:0x7d41f6ff; inc ebp; ret 0x66c3; 
0x0004f1f8: ljmp 0xf284:0xfd3201f; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0018ec7a: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00182f9f: ljmp 0xf702:0x89068b04; ret 0xf; 
0x0017fe6f: ljmp 0xf702:0x89078b04; ret 0xf; 
0x0005467d: ljmp 0xfcbe:0x53e9ffff; call dword ptr [eax - 0x77]; 
0x00034d3c: ljmp 0xfff:0xffff2518; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x000c8f10: lock add byte ptr [eax], al; add al, ch; pop es; ret; 
0x000884da: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9eb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00089fd6: lock add byte ptr [eax], al; add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00082629: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090dac: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000860e9: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e4b: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00088c19: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008a7c7: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008a441: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x000240a1: lock add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x00083ed1: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849ca: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b4ee: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c6d2: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089783: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844df: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b908: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c63: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084f58: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a94a: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008492e: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844ad: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085132: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000826ad: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00094d71: lock add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x001709c6: lock add dword ptr [ebx], 1; mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00084d38: lock and dword ptr [ebx], 0xfffffffe; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008e83c: lock cmpxchg dword ptr [ebx], edx; jne 0x8e850; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008d7c5: lock cmpxchg dword ptr [ebx], esi; jne 0x8d7d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0008211e: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0008e87f: lock cmpxchg dword ptr [edx], ecx; jne 0x8e876; xor eax, eax; pop ebx; ret; 
0x0008e8cd: lock cmpxchg dword ptr [edx], ecx; jne 0x8e8e0; xor eax, eax; pop ebx; ret; 
0x0008d4af: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00087aec: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0008d488: lock dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x00097fc2: lock dec dword ptr [edi]; inc esp; ret 0x568d; 
0x00093e11: lock dec dword ptr [edi]; inc esp; ret 0xd231; 
0x000985bf: lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x00097c82: lock dec dword ptr [edi]; inc esp; shl dword ptr [ecx], 1; ret 0x1a8b; 
0x0011b300: lock inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012e6c7: lock inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x00163821: lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009ea15: lock or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x0008d64b: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00116cb8: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015cae0: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5fd7d], cl; call dword ptr [esi + 0x57]; 
0x00109000: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00197892: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000243a1: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008edb8: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0015a1ee: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0015a4e5: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00082fa7: lodsb al, byte ptr [esi]; add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00199e6a: lodsb al, byte ptr [esi]; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0016aeff: lodsb al, byte ptr [esi]; arpl bx, bp; jmp dword ptr [esi - 0x70]; 
0x00153f02: lodsb al, byte ptr [esi]; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x0002da23: lodsb al, byte ptr [esi]; jno 0x2da1f; call dword ptr [eax - 0x73]; 
0x000de289: lodsb al, byte ptr [esi]; ljmp 0x46be:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000de371: lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x000de3ce: lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax - 1]; 
0x00149b30: lodsb al, byte ptr [esi]; lodsb al, byte ptr [esi]; stc; call dword ptr [eax + 0x68]; 
0x0014c09c: lodsb al, byte ptr [esi]; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0016643f: lodsb al, byte ptr [esi]; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0014de44: lodsb al, byte ptr [esi]; mov byte ptr [0xc8c10000], al; or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x000e5022: lodsb al, byte ptr [esi]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000563d0: lodsb al, byte ptr [esi]; or eax, 0xa105e900; cld; jmp dword ptr [esi - 0x70]; 
0x00146c79: lodsb al, byte ptr [esi]; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000cd068: lodsb al, byte ptr [esi]; ret 0xf0; 
0x000c982d: lodsb al, byte ptr [esi]; ret; 
0x0011e400: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x00149b31: lodsb al, byte ptr [esi]; stc; call dword ptr [eax + 0x68]; 
0x0014a527: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00149c25: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x001495c2: lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000e6af2: lodsb al, byte ptr [esi]; sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000f8be5: lodsb al, byte ptr [esi]; wait; stc; call dword ptr [eax - 0x73]; 
0x0008300e: lodsb al, byte ptr cs:[esi]; add eax, 0x84e8b00; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000de83a: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000d601d: lodsd eax, dword ptr [esi]; cmp eax, -0x26; jne 0xd6060; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0010afd0: lodsd eax, dword ptr [esi]; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000c7acf: lodsd eax, dword ptr [esi]; jge 0xc7ac8; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x00093704: lodsd eax, dword ptr [esi]; or eax, 0xf9c28100; sub byte ptr [ecx], bl; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0004b226: lodsd eax, dword ptr [esi]; ret; 
0x0014c09d: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0014d8ef: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; mov byte ptr [edi], bl; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014aeef: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0014b323: lodsd eax, dword ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00103e26: loope 0x103db1; ret 0x25; 
0x0010577d: loope 0x105708; ret 0x25; 
0x00106586: loope 0x106511; ret 0x25; 
0x00116b4e: loope 0x116b4e; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011a69e: loope 0x11a67d; and byte ptr [eax], 0xbb; stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0011ac6e: loope 0x11ac7f; xchg ebp, eax; ret; 
0x0011bf46: loope 0x11bfa3; stc; jmp dword ptr [ebp - 0x77]; 
0x0011c11f: loope 0x11c118; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0011d480: loope 0x11d4d4; stc; call dword ptr [eax + 0x57]; 
0x00121d2a: loope 0x121cb5; ret 0x448b; 
0x00121e6b: loope 0x121df6; ret 0x448b; 
0x001223fe: loope 0x122389; ret 0x448b; 
0x001224ba: loope 0x122445; ret 0x448b; 
0x0012260a: loope 0x122595; ret 0x448b; 
0x001255c3: loope 0x1255d4; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x0012aa27: loope 0x12a9b2; ret 0x25; 
0x001310c7: loope 0x1310c9; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x00131186: loope 0x131188; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013866a: loope 0x1385f5; ret 0x25; 
0x0013d0cb: loope 0x13d056; ret 0x25; 
0x001442d9: loope 0x1442df; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0015a25b: loope 0x15a2bb; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015c63e: loope 0x15c5c9; ret 0x25; 
0x00165ce6: loope 0x165c6b; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0016734a: loope 0x1672d5; ret 0x9d89; 
0x0017241d: loope 0x1723a8; ret 0x25; 
0x00173edd: loope 0x173e68; ret 0x25; 
0x00175c0d: loope 0x175b98; ret 0x25; 
0x00182f54: loope 0x182f4d; ret 1; 
0x00186214: loope 0x18620d; ret 1; 
0x0019002e: loope 0x19008b; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0019226b: loope 0x19226d; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0002d291: loope 0x2d21c; ret 0x25; 
0x0002d525: loope 0x2d4b0; ret 0x25; 
0x00031391: loope 0x3131c; ret; 
0x0004a55a: loope 0x4a517; add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004a772: loope 0x4a72f; add al, 0x30; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004a88a: loope 0x4a847; add dword ptr [eax], esi; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00052a40: loope 0x529cb; ret 0x25; 
0x00053238: loope 0x531bd; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00061bdd: loope 0x61bde; dec dword ptr [ebx - 0x5037b]; dec dword ptr [ecx - 0x4ff4b]; dec dword ptr [ecx - 0x52f63]; jmp dword ptr [ebp - 0x75]; 
0x000623bf: loope 0x623c0; dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x000629a4: loope 0x629a5; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x0006cd0b: loope 0x6cd0c; jmp dword ptr [esi - 0x70]; 
0x0007a786: loope 0x7a708; js 0x7a78b; jae 0x7a801; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00080346: loope 0x80356; add byte ptr [0x1a5cb7], al; mov eax, dword ptr [eax + 0xce0]; ret; 
0x0008b4fb: loope 0x8b504; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008bc27: loope 0x8bc30; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008be37: loope 0x8be40; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c461: loope 0x8c46a; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009e99b: loope 0x9e9ab; stc; dec dword ptr [ebp - 0x66acf70]; call dword ptr [edx - 0x73]; 
0x000a0cce: loope 0xa0d2b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000ab518: loope 0xab49d; ret; 
0x000ab535: loope 0xab4ba; ret; 
0x000acc48: loope 0xacbcd; ret; 
0x000acc65: loope 0xacbea; ret; 
0x000aec49: loope 0xaebd8; mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000b1f49: loope 0xb1ed8; mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000b260c: loope 0xb259b; jbe 0xb2610; pop ebx; pop esi; ret; 
0x000b3246: loope 0xb31cb; ret 0x6640; 
0x000b48bc: loope 0xb484b; jbe 0xb48c0; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c8c0c: loope 0xc8c1d; je 0xc8c30; ret; 
0x000d07a9: loope 0xd07aa; call dword ptr [edi + 0x57]; 
0x000d5b39: loope 0xd5b3a; call dword ptr [ecx + 0x52]; 
0x000dde98: loope 0xdde23; ret 0x25; 
0x000dfba6: loope 0xdfb31; ret 0x25; 
0x000e152d: loope 0xe14b8; ret 0x25; 
0x000e2246: loope 0xe21d1; ret 0x25; 
0x000e3b9d: loope 0xe3b28; ret 0x25; 
0x000e9497: loope 0xe9419; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x5e5b; 
0x000ef511: loope 0xef512; add esi, esi; ret; 
0x000f1947: loope 0xf1948; add esi, esi; ret; 
0x000f70f6: loope 0xf7081; ret 0x25; 
0x000f7cb6: loope 0xf7c41; ret 0x25; 
0x000fdcfe: loope 0xfdd5b; pop esi; pop edi; ret; 
0x000ab1ad: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0018482a: maxps xmm5, xmm0; push 0x81fffe9c; ret; 
0x00102116: mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00090eb0: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x001200ce: mov ah, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xb0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001020e2: mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000934ee: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000ca799: mov ah, 0; add byte ptr [eax], al; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0009997d: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x66bbb80], cl; call dword ptr [eax + 0x68]; 
0x00120a6c: mov ah, 0x24; mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016faf9: mov ah, 0x24; mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00107392: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0009aae1: mov ah, 0x24; push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x00120aa6: mov ah, 0x24; pushfd; add byte ptr [eax], al; add al, ch; jmp dword ptr [edi]; 
0x0013033a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00068dfa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0019485a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x00191f44: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; ret; 
0x001310d7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; and eax, 0xffffff; ret; 
0x0003a077: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; call dword ptr [ebx]; 
0x000821b6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x00194853: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x00193924: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x0008de07: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [eax + 4], edx; ret; 
0x00084037: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0x16; ret; 
0x0013d607: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x000c8c54: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ret; 
0x000c8c67: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 2; ret; 
0x000c8c77: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 3; ret; 
0x000c8c87: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 4; ret; 
0x000c8c97: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 5; ret; 
0x000c8ca7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 6; ret; 
0x000c8cb7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, 7; ret; 
0x00194826: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000dcdf7: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a4cc4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00094e37: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x000a4cda: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x0008b13a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000de68a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xfc17; pop ebx; ret; 
0x0016268a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x0011d0ca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x0019488a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00192e3a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x0011f95a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0014e0aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, 1; mov eax, ecx; ret; 
0x00155188: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x000de7d9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x100; ret; 
0x00083aa8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00085ff8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000af059: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; pop esi; ret; 
0x00081d79: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; ret; 
0x00131199: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; shr eax, 0x18; ret; 
0x00039f88: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0005f962: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0016a9d2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000b306a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000de892: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00034e1a: mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00022f14: mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x0012c593: mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x00023189: mov ah, 0x6b; fistp qword ptr [ebx + eax]; pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x001379b4: mov ah, 0x72; stc; call dword ptr [eax + 0x55]; 
0x0002f91c: mov ah, 0x72; stc; call dword ptr [eax - 0x18]; 
0x00058914: mov ah, 0x72; stc; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00041213: mov ah, 0x74; stc; call dword ptr [eax - 0x18]; 
0x0008ed20: mov ah, 0x82; stc; call dword ptr [eax - 0x73]; 
0x00031641: mov ah, 0x83; in al, dx; or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0012cbcc: mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0012e087: mov ah, 0x83; ret; 
0x000fa8c1: mov ah, 0x85; ret; 
0x000c2464: mov ah, 0x85; sal byte ptr [ebx - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x00091238: mov ah, 0x89; ret 0x458b; 
0x0012e84b: mov ah, 0x89; ret; 
0x0016dc1c: mov ah, 0x8b; inc ebp; les eax, ptr [ebx - 0x7f72f314]; je 0x16dc8d; stc; call dword ptr [eax - 0x18]; 
0x0013b9e7: mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x0016cceb: mov ah, 0x8d; je 0x16cd15; add dh, dh; ret; 
0x0012ee47: mov ah, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x00085e3a: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000b9785: mov ah, 0xb9; stc; call dword ptr [eax + 0x53]; 
0x0010438c: mov ah, 0xf2; dec dword ptr [ebx - 0x19f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000bfca7: mov ah, 0xf8; call dword ptr [ebx - 1]; 
0x0016b759: mov ah, 0xf9; call dword ptr [eax + 0x6a]; 
0x00155bc5: mov ah, 0xfd; jmp dword ptr [esi - 0x70]; 
0x000443de: mov ah, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00044401: mov ah, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x0004fcf4: mov ah, 0xff; dec dword ptr [ebx - 0x362f7b]; call dword ptr [esi - 1]; 
0x000ec9a2: mov ah, 0xff; inc dword ptr [ebp - 0x16688b40]; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00135b8f: mov ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x00113192: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00102eee: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b48f8: mov ah, 1; add byte ptr [eax], al; ret; 
0x000d86e1: mov ah, dh; jmp dword ptr [esi - 0x70]; 
0x0015a4de: mov al, 0; add byte ptr [eax], al; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x000377b1: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001200d5: mov al, 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000b2e6c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0015ac00: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000b2bfc: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000485ca: mov al, 0x18; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0015fca3: mov al, 0x39; sbb byte ptr [eax + ecx + 0x5b], dh; pop esi; pop edi; ret; 
0x00139ef5: mov al, 0x3e; int1; call dword ptr [eax - 0x73]; 
0x0013a1d7: mov al, 0x40; int1; call dword ptr [eax - 0x18]; 
0x0011bf3c: mov al, 0x42; cmc; dec dword ptr [ebx - 0x72ebdbb4]; and ecx, 0x5b; stc; jmp dword ptr [ebp - 0x77]; 
0x0016d776: mov al, 0x64; hlt; call dword ptr [eax - 0x18]; 
0x000286b6: mov al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x00066a70: mov al, 0x83; in al, dx; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x0008604f: mov al, 0x83; in al, dx; or al, 0x8d; and ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x0008d69f: mov al, 0x83; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000860b7: mov al, 0x83; in al, dx; or al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x0005308c: mov al, 0x83; ret; 
0x0002ea17: mov al, 0x87; stc; jmp dword ptr [ebp - 0x75]; 
0x0002290c: mov al, 0x8a; adc al, 0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0012ee12: mov al, 0x8d; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x00030b6f: mov al, 0x8d; cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x0008618e: mov al, 0x8d; xchg byte ptr [eax + 0x7f], bl; stc; call dword ptr [eax - 0x73]; 
0x0015c059: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015c059: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000b59ed: mov al, 0x96; stc; call dword ptr [eax - 0x73]; 
0x0019da4c: mov al, 0x98; add byte ptr [eax], al; add al, ch; ljmp 0x18c4:0x83ffe826; pop ebx; ret; 
0x000c6641: mov al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x00105da8: mov al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0009af31: mov al, 0xa5; idiv bh; cmovne eax, edx; ret; 
0x000479a0: mov al, 0xb; add byte ptr [ebx - 0x76a9eb3c], al; ret; 
0x0013ddd7: mov al, 0xe8; inc ebx; xor bh, bh; dec dword ptr [ebp - 0x6579f79]; call dword ptr [eax - 0x73]; 
0x000324d2: mov al, 0xe9; ret; 
0x00158169: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x00155fab: mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x000ea5f4: mov al, 0xff; je 0xea61c; and al, 0xe8; ret 0xfcb0; 
0x000b48e8: mov al, 1; add byte ptr [eax], al; ret; 
0x0012c7dd: mov al, 8; ret 0x975; 
0x000b487b: mov al, ah; cmp eax, dword ptr [eax]; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000803cc: mov al, byte ptr [0x1000019]; add esp, 4; pop ebx; pop esi; ret; 
0x000d1876: mov al, byte ptr [0x1fff8e9]; fnstcw word ptr [esi]; jmp ecx; 
0x00073e43: mov al, byte ptr [0x29ffffe3]; ret 0x4d89; 
0x00170451: mov al, byte ptr [0x29ffffe3]; ret 0xc129; 
0x00070427: mov al, byte ptr [0x29ffffe3]; ret 0xd989; 
0x0007d571: mov al, byte ptr [0x29ffffe3]; ret 0xf189; 
0x0007724a: mov al, byte ptr [0x29ffffe3]; ret 0xf989; 
0x0007bdbc: mov al, byte ptr [0x39000001]; ret 0x448b; 
0x001649cc: mov al, byte ptr [0x3908418b]; ret 0x2c75; 
0x0003a06e: mov al, byte ptr [0x39ffffe3]; jae 0x3a089; lea esi, [esi]; lea esi, [esi]; call dword ptr [ebx]; 
0x00059952: mov al, byte ptr [0x3efff8be]; jmp eax; 
0x001469c5: mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0016d86a: mov al, byte ptr [0x3efff928]; jmp eax; 
0x000817f6: mov al, byte ptr [0x4389000e]; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x001529b3: mov al, byte ptr [0x50fff962]; push 6; call 0x14f970; add esp, 0x1c; ret; 
0x00021708: mov al, byte ptr [0x50fff966]; push 1; call 0x108630; add esp, 0x1c; ret; 
0x0016b13d: mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x24]; 
0x0016b1dd: mov al, byte ptr [0x51000003]; push edx; call dword ptr [eax + 0x28]; 
0x0015e95a: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x000a48d2: mov al, byte ptr [0x5b5f0000]; ret; 
0x000a4cbc: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x0015f7e6: mov al, byte ptr [0x650000a4]; mov dword ptr [edx], eax; ret; 
0x0009b1d8: mov al, byte ptr [0x80ffe8d4]; in eax, 2; lea edx, [edx - 0x9cec0]; cmovne eax, edx; ret; 
0x00105ff5: mov al, byte ptr [0x81000684]; ret; 
0x000ed5f5: mov al, byte ptr [0x8100080e]; ret; 
0x000e9bf5: mov al, byte ptr [0x81000848]; ret; 
0x000e97f5: mov al, byte ptr [0x8100084c]; ret; 
0x000e81f5: mov al, byte ptr [0x81000862]; ret; 
0x0017d0f5: mov al, byte ptr [0x81ffff13]; ret; 
0x0017a4f5: mov al, byte ptr [0x81ffff3f]; ret; 
0x00069847: mov al, byte ptr [0x83000003]; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0003ac1c: mov al, byte ptr [0x830007aa]; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0008137c: mov al, byte ptr [0x83fff9ee]; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0019d625: mov al, byte ptr [0x85000042]; sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x001201d0: mov al, byte ptr [0x89000000]; inc esp; and al, 0x5c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0016b382: mov al, byte ptr [0x89000003]; dec esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00080e92: mov al, byte ptr [0x89000003]; push esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0002e872: mov al, byte ptr [0x89000010]; ret 0x858b; 
0x0018ffde: mov al, byte ptr [0x89fff8de]; ret; 
0x000f373c: mov al, byte ptr [0x89ffffd1]; ret; 
0x00070f17: mov al, byte ptr [0x89ffffe6]; ret 0x9689; 
0x000b7455: mov al, byte ptr [0x89fffffc]; ret; 
0x0004e34d: mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x0008906d: mov al, byte ptr [0x8bfffffd]; je 0x89098; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00066013: mov al, byte ptr [0x8dfff8c5]; test byte ptr [esi], al; out 0xfb, eax; jecxz 0x6601d; jmp eax; 
0x0006b071: mov al, byte ptr [0x8dfff8c9]; test byte ptr [esi], al; jg 0x6b0c6; in al, 0xff; jmp eax; 
0x0013a709: mov al, byte ptr [0x8dfffffb]; lea ebp, [eax - 0x76000005]; ret 0xbd8d; 
0x0012a36c: mov al, byte ptr [0x8dfffffe]; xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x001938bc: mov al, byte ptr [0xa8000000]; inc eax; jne 0x193970; lea eax, [edx + 7]; ret; 
0x00092279: mov al, byte ptr [0xb8000000]; sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008d321: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00120a6e: mov al, byte ptr [0xb8000000]; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00088530: mov al, byte ptr [0xbafffffc]; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00158645: mov al, byte ptr [0xc4830000]; adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x00148848: mov al, byte ptr [0xf6000050]; ret 0xf01; 
0x00152278: mov al, byte ptr [0xfdeda2e8]; jmp dword ptr [esi - 0x70]; 
0x000376f6: mov al, byte ptr [0xfffe115]; inc esp; ret 0x24e9; 
0x000d6142: mov al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0014b332: mov al, byte ptr [ebp - 0x12]; dec dword ptr [ebp - 0x652db6b]; call dword ptr [edx - 0x73]; 
0x000a70f6: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a7236: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b14f9: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d26: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a2e46: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000a7254: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a2e64: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000aba0a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000abb6a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b159b: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3aa: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000aa50a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a7294: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001921d2: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000a70d0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a7210: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b14d3: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d00: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a2e20: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0003bdff: mov al, byte ptr [esi - 2]; jmp dword ptr [esi - 0x70]; 
0x0012c068: mov al, ch; ret 0xffd4; 
0x00131415: mov al, dl; add eax, dword ptr [eax]; add eax, 0xf4be7; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x000a7124: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7264: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a2d44: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a2e74: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000aba2a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000abb8a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b15bb: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3ca: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000aa52a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a72b4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2ec4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a70e0: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a7220: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a7230: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a2e40: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b14e3: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d10: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a2e30: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00193515: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0010958c: mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00102989: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012699f: mov bh, 0x14; inc edx; and edx, 0x1000; mov eax, edx; ret; 
0x0012603d: mov bh, 0x14; inc edx; and edx, 0x100; mov eax, edx; ret; 
0x0012689f: mov bh, 0x14; inc edx; and edx, 0x2000; mov eax, edx; ret; 
0x0012669f: mov bh, 0x14; inc edx; and edx, 0x200; mov eax, edx; ret; 
0x0012679f: mov bh, 0x14; inc edx; and edx, 0x4000; mov eax, edx; ret; 
0x0012649f: mov bh, 0x14; inc edx; and edx, 0x400; mov eax, edx; ret; 
0x0012671f: mov bh, 0x14; inc edx; and edx, 0x8000; mov eax, edx; ret; 
0x0012651f: mov bh, 0x14; inc edx; and edx, 1; mov eax, edx; ret; 
0x0012659f: mov bh, 0x14; inc edx; and edx, 2; mov eax, edx; ret; 
0x0012681f: mov bh, 0x14; inc edx; and edx, 4; mov eax, edx; ret; 
0x0012641f: mov bh, 0x14; inc edx; and edx, 8; mov eax, edx; ret; 
0x00073b75: mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0015e765: mov bh, 0x28; std; jmp dword ptr [esi - 0x70]; 
0x0002274a: mov bh, 0x38; and byte ptr [eax], al; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00093be8: mov bh, 0x39; ret 0xb374; 
0x00141aa4: mov bh, 0x41; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0016c0ac: mov bh, 0x47; adc byte ptr [esi - 0x3f], ah; call 0x1015fcb9; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0002174a: mov bh, 0x48; and byte ptr [eax], al; lea eax, [eax - 0x6921c]; ret; 
0x000fcf91: mov bh, 0x4c; push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000cb291: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x0008034a: mov bh, 0x5c; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000b6555: mov bh, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d6b8c: mov bh, 0x83; ret 0x8301; 
0x000cb1b8: mov bh, 0x84; inc ebp; mov esi, 0x89fff8e4; ret 0x80b8; 
0x0002fe91: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0002444c: mov bh, 0x87; aam 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x0009b408: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00168824: mov bh, 0x99; add byte ptr [esi + 0x728d0000], ah; jmp dword ptr [esi - 0x7d]; 
0x00047ed1: mov bh, 0x9a; inc ebp; stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x00176865: mov bh, 0xa7; sti; jmp dword ptr [esi - 0x70]; 
0x0014793f: mov bh, 0xc0; add esp, 0x2c; ret; 
0x001310c1: mov bh, 0xd0; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0009a04a: mov bh, 0xe7; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0017674a: mov bh, 0xf8; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001558a9: mov bh, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0002fb5c: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fb2c: mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fafc: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fa3c: mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fa9c: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002f9ac: mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fa6c: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fa0c: mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fc0c: mov bh, 4; push eax; and eax, 1; ret; 
0x0002f9dc: mov bh, 4; push eax; and eax, 2; ret; 
0x0002facc: mov bh, 4; push eax; and eax, 4; ret; 
0x0002f97c: mov bh, 4; push eax; and eax, 8; ret; 
0x0012e914: mov bh, 4; push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0017bb69: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184fb9: mov bh, 8; mov word ptr [edx], cx; pop ebx; ret; 
0x0014c1b2: mov bh, byte ptr [edi]; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x001585b6: mov bh, ch; jmp dword ptr [esi - 0x70]; 
0x00037841: mov bl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00194a09: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00037813: mov bl, 0; add byte ptr [eax], al; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000343fa: mov bl, 0; je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0015d869: mov bl, 0x37; std; jmp dword ptr [esi - 0x70]; 
0x001688e5: mov bl, 0x48; or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x00139f97: mov bl, 0x5c; stc; call dword ptr [eax - 0x18]; 
0x0013a10d: mov bl, 0x5c; stc; call dword ptr [eax - 0x73]; 
0x00124d69: mov bl, 0x60; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000cd949: mov bl, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0015a4c1: mov bl, 0xa8; add byte ptr [eax], al; add bh, bh; je 0x15a4ed; sub al, 0x56; call dword ptr [eax + 0xc]; 
0x00144823: mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0014484f: mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0013dd43: mov bl, 0xe8; xlatb; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x0014487b: mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x000e452d: mov bl, 0xf4; call dword ptr [ebp - 0x43]; 
0x00116888: mov bl, 0xf6; jmp dword ptr [ebp - 0x75]; 
0x001646ea: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x00161d46: mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00169671: mov bl, 0xf9; call dword ptr [edi + 0x56]; 
0x00165c38: mov bl, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00064b1a: mov bl, 0xff; dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x000873b8: mov bl, 0xff; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0012105e: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x00056eab: mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x000b62a9: mov bl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0019da21: mov byte ptr [0], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0011e1d9: mov byte ptr [0x408bfff6], al; jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x000825c0: mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d18: mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00081d42: mov byte ptr [0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x000825e6: mov byte ptr [0x4fe], al; cmp eax, 1; je 0x825f8; ret; 
0x000aab0a: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00048c3a: mov byte ptr [0x83000004], al; ret; 
0x0019d39a: mov byte ptr [0x83ffe82d], al; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00140584: mov byte ptr [0x83fffffb], cl; in al, dx; or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0008be02: mov byte ptr [0x89000000], al; ret 0xf283; 
0x000ceac9: mov byte ptr [0x8d01f980], al; dec edx; fisttp qword ptr [edi]; xchg esi, eax; ret; 
0x00199696: mov byte ptr [0x9c8b0000], 0x24; add byte ptr [eax], 0; add dh, dh; ret; 
0x00046cb2: mov byte ptr [0xc4830000], al; adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], cl; ret; 
0x0014de45: mov byte ptr [0xc8c10000], al; or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x001916da: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x0014e53b: mov byte ptr [0xf8830000], al; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000cbf63: mov byte ptr [0xf8830000], bh; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0014b2fb: mov byte ptr [0xfe5d1fe8], al; dec dword ptr [ebp - 0x652af7b]; call dword ptr [eax - 0x73]; 
0x000b22fe: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee68: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002eba0: mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x000b2384: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeeee: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2408: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef72: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2573: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00081c51: mov byte ptr [eax + 0x4fe], 0; ret; 
0x00191f3b: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x00192188: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00193d43: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000b214c: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed06: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2178: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed22: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000512ec: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000b21fa: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed74: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00070e5e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x00121da6: mov byte ptr [eax + eax], 0x81; ret 0x4257; 
0x000485ce: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0015f535: mov byte ptr [eax + esi], 0; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0015919d: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x159190; pop ebx; ret; 
0x00144de3: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x00193fdf: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0011e51a: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000a0b00: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00083c6b: mov byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00083c54: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x0007bb27: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0011f4bb: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4bb: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00193264: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001926d4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x000dc2b1: mov byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x0002b528: mov byte ptr [eax], al; add byte ptr [eax], al; push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x0007534a: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x00070e68: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00026f85: mov byte ptr [eax], al; add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x000b2110: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b1933: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1735: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00058e59: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000b2125: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aece0: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00091937: mov byte ptr [ebp - 0x67bb77a], cl; call dword ptr [eax + 0x68]; 
0x00091993: mov byte ptr [ebp - 0x67bb77a], cl; call dword ptr [eax - 0x73]; 
0x00165310: mov byte ptr [ebp - 0x72b00000], ah; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x000c7af4: mov byte ptr [ebp - 0xa], bh; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x0008ce1b: mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x00144d59: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x0014e309: mov byte ptr [ebx + 0x8258], 0; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x000b32f9: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0013da81: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x0006ad44: mov byte ptr [ebx + ebx], al; add dh, dh; ret 0xf40; 
0x0009196a: mov byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00125915: mov byte ptr [ebx - 0x18fafffc], cl; push es; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00021f9e: mov byte ptr [ebx - 0x72fbdb8c], cl; xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x0016883a: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x001502d9: mov byte ptr [ebx - 0xf76fd12], 0x5e; pop edi; pop ebp; ret; 
0x00116eff: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013f438: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a4d03: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a4d22: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a4d64: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b47d8: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb47d8; pop esi; ret; 
0x000b3f60: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0013d7c0: mov byte ptr [ecx + edx], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001456ad: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf0c244c], 0x94; ret 0xa3c; 
0x0014584d: mov byte ptr [ecx], 0x3c; and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0009cf33: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000e0b79: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x0004dea7: mov byte ptr [ecx], 0x83; ret 0x8b01; 
0x000285e9: mov byte ptr [ecx], 0x83; ret; 
0x000c97bb: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x000d0b44: mov byte ptr [ecx], 0x89; ret 0x44f6; 
0x00150555: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x0012c035: mov byte ptr [ecx], 0x89; ret; 
0x000491f1: mov byte ptr [ecx], 0xc6; inc esi; jmp dword ptr [eax]; 
0x00124871: mov byte ptr [ecx], 1; ret; 
0x0002847f: mov byte ptr [ecx], 9; ret 0x7439; 
0x00155bd7: mov byte ptr [ecx], al; add byte ptr [ecx + 0xd0426c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x00074750: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00165e45: mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x000a4ce0: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000ac87b: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000ab16b: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac901: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000ab1f1: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac985: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000ab275: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab375: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ac6e9: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000ab019: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac717: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ab037: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac78b: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000ab07b: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x001921ce: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00174815: mov byte ptr [edi + edi*8 + 0x17e705ff], bl; or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00038b7e: mov byte ptr [edi - 0x7cfffffd], bl; in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x30]; call edi; 
0x00044a54: mov byte ptr [edi], ah; add byte ptr [ebx - 0x7636cefd], cl; ret 0x4489; 
0x000b4381: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000b4747: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00177dde: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017832e: mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00180d79: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186049: mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0014d8f4: mov byte ptr [edi], bl; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000ac6c2: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000aaff2: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000b1891: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x00083c69: mov byte ptr [edx + 0x88], 0; add esp, 4; pop esi; pop edi; ret; 
0x00083c52: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0013d5f5: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000ae620: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a0fe5: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a70f9: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a7239: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b14fc: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d29: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a2e49: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000ae630: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a7117: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000a7257: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b152a: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d37: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000a2e67: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000ae660: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a10f8: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a1028: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a715b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a729b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b159e: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d6b: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a2eab: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b1834: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000ae6d0: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001916d5: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x0002f7b6: mov byte ptr [edx - 0x73000000], dl; cmp dword ptr [eax + 0x57], -7; call dword ptr [esi - 1]; 
0x0014d9bf: mov byte ptr [edx - 0x7a], 0xd; add byte ptr [ebx - 0x77], dl; ret; 
0x000a0aa0: mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x001775c5: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d5a4: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00176f95: mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b45c: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d47c: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0018492c: mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001211d7: mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000a0fb0: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x0011cc25: mov byte ptr [edx], 0; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012a28f: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x0002a17a: mov byte ptr [edx], 0x39; test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00191f1d: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x0012a242: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000c9d24: mov byte ptr [edx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a70d2: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000a7212: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x0017dc03: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017bc03: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b14d5: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d02: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000a2e22: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00185043: mov byte ptr [edx], al; pop ebx; ret; 
0x00114169: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0017dabb: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017badb: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0007b421: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00184f3b: mov byte ptr [edx], cl; pop ebx; ret; 
0x0014e28b: mov byte ptr [edx], dl; add byte ptr [eax], al; call esi; 
0x0013b125: mov byte ptr [esi + 0x39000002], bh; ret; 
0x0002ff3f: mov byte ptr [esi + edi*8 + 0x428bffff], bh; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0015a194: mov byte ptr [esi - 3], ch; jmp dword ptr [esi - 0x70]; 
0x000bdde3: mov byte ptr [esi], 0xb; add byte ptr [ecx + 0x168219c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0011415d: mov byte ptr [esp + 0x37], al; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x000866c8: mov byte ptr [esp + 0x4b], 0; lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00085ea5: mov byte ptr [esp + eax], bh; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000825bf: mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x00081d17: mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00081d41: mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x000825e5: mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x825f8; ret; 
0x000b2124: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00124868: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x397cfeb6], cl; add dword ptr [ecx], eax; ret; 
0x0015c6e5: mov ch, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x12f63], cl; call dword ptr [eax - 0x18]; 
0x000554c9: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0005270c: mov ch, 0; add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x001021e6: mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00193917: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x001021b2: mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0009945f: mov ch, 0; add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x001561b7: mov ch, 0x20; push edx; call dword ptr [esi - 0x73]; 
0x000c9cf7: mov ch, 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00067445: mov ch, 0x2c; idiv edi; inc dword ptr [ebx - 0x6a76f314]; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0009aeb7: mov ch, 0x3b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000666fa: mov ch, 0x3c; idiv edi; dec dword ptr [ecx + 0x408d8bc2]; idiv edi; dec dword ptr [ebx - 0x8c77b]; call dword ptr [esi - 0x18]; 
0x00066ea7: mov ch, 0x40; idiv edi; call dword ptr [eax - 0x18]; 
0x00066eb3: mov ch, 0x48; idiv edi; inc dword ptr [ebx - 0x47cef3c]; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x0006ba1d: mov ch, 0x54; idiv edi; call dword ptr [esi - 1]; 
0x0012c598: mov ch, 0x57; stc; call dword ptr [eax - 0x75]; 
0x0012f915: mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0006c18e: mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x000660c7: mov ch, 0x7c; idiv edi; dec dword ptr [ebx + 0x5f8b1447]; sbb byte ptr [ecx], ch; ret; 
0x000663cf: mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x000667b1: mov ch, 0x94; idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x00085a4b: mov ch, 0xa; add byte ptr [esi - 0x70], ah; endbr32; xor eax, eax; ret; 
0x001442fe: mov ch, 0xee; jmp dword ptr [esi - 0x70]; 
0x00044350: mov ch, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00044373: mov ch, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000442c4: mov ch, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000d8371: mov ch, 3; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [ecx + eax*2 - 0x77]; ret 0xe283; 
0x0019dd74: mov ch, 4; add al, byte ptr [eax]; add al, ch; ret 0xe823; 
0x000c5422: mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x363f63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0004e662: mov ch, 4; add byte ptr [eax], al; add byte ptr [ebx - 0x365363], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000c763a: mov ch, 4; add byte ptr [eax], al; add byte ptr [edx - 0x75], dl; popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0003e237: mov ch, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0018ea7d: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000ac227: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013aefe: mov ch, ah; add al, 0; add byte ptr [ecx], bh; ret; 
0x000382ef: mov ch, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x000c8c20: mov ch, dh; and ch, 0xf; je 0xc8c40; add eax, 2; ret; 
0x00117d01: mov ch, dh; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00038433: mov cl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000383d2: mov cl, 0; add byte ptr [eax], al; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00025f11: mov cl, 0x10; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00082120: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x0008e83e: mov cl, 0x13; jne 0x8e850; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008044b: mov cl, 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017175b: mov cl, 0x24; hlt; call dword ptr [edi - 1]; 
0x0008d7c7: mov cl, 0x33; jne 0x8d7d0; xor eax, eax; pop ebx; pop esi; ret; 
0x0014da4b: mov cl, 0x4c; inc dword ptr [ebx + 0x1b810c4]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00087aee: mov cl, 0x54; and al, 4; ret; 
0x0008e881: mov cl, 0xa; jne 0x8e876; xor eax, eax; pop ebx; ret; 
0x0008e8cf: mov cl, 0xa; jne 0x8e8e0; xor eax, eax; pop ebx; ret; 
0x0008d4b1: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x00116a92: mov cl, 0xf6; dec dword ptr [ebx - 0x76dfdba4]; ret 0x94b8; 
0x0015d840: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015f1c6: mov cl, 0xf9; call dword ptr [ebx - 1]; 
0x00155f19: mov cl, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0003502c: mov cl, 0xfe; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0008fd5b: mov cl, 0xff; inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x00135e2f: mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007bb26: mov cl, byte ptr [eax - 0x7d000000]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ffc9d: mov cl, byte ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000885ac: mov cl, byte ptr [edx]; add byte ptr [ebx - 0x72f3db8c], cl; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000c8c09: mov cl, dl; and cl, 0xf; je 0xc8c30; ret; 
0x000ed319: mov cs, eax; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x0002e446: mov cs, esp; adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x00077b86: mov cs, word ptr [ebp - 0x75000000]; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x000c2bd5: mov cs, word ptr [ebx - 0x3f7cfb90]; add al, 0x83; ret; 
0x00078140: mov cs, word ptr [ebx]; add byte ptr [ebp - 0x682e37a], cl; call dword ptr [eax - 0x73]; 
0x000dd216: mov cs, word ptr [ecx - 0x76f3dbb4]; inc esp; and al, 8; call edx; 
0x000aed00: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007ef0b: mov dh, 0; add byte ptr [eax], al; add al, ch; stosd dword ptr es:[edi], eax; ret; 
0x00170953: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0008b0c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x00129b63: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0012076b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001208eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00087e8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x0018e37b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ja 0x18e389; neg eax; ret; 
0x0009959b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000871db: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0011b96b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x00094e4b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00198613: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3968245c], cl; ret; 
0x00056fe3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x000ce14b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5a8d0cec], al; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x000826eb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00193f3b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x001227cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x75]; 
0x0009249b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x0012fafb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x00113383: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x0004812b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0011c1cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x7d]; 
0x000d61cb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x39]; 
0x0003751b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x00120b8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0002f633: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13b68], cl; jmp dword ptr [ebp - 0x77]; 
0x000eb42b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x0004f843: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x36277b], al; call dword ptr [eax]; 
0x0011757b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00142003: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x44f7b], cl; dec dword ptr [ebx - 0x45373]; jmp dword ptr [ebp - 0x75]; 
0x000623c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x0005c5bb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0003a9fb: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000b51ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x677f], cl; jmp dword ptr [ebp - 0x75]; 
0x001364c3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x00165813: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; pop di; stc; call dword ptr [eax - 0x18]; 
0x000f0673: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x000eff8b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00065f73: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x87343], cl; dec dword ptr [ebp - 0x686f379]; call dword ptr [eax - 0x73]; 
0x000d7b63: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x8d3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00037703: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x8f3db84], cl; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0011423b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x8f3dbbc], cl; fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0013eb23: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00066e7b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x6785c6d3], cl; idiv edi; jmp dword ptr [eax]; 
0x0005c063: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x5bb4b], cl; dec dword ptr [ecx - 0x76287608]; ret 0x7de9; 
0x00094033: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76f3db94], cl; ret; 
0x000aec4b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x001307f3: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x00193cdb: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x00193206: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0007ef02: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0017bc01: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00185041: mov dh, 0; mov byte ptr [edx], al; pop ebx; ret; 
0x0018e873: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007cf7f: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x000df5f9: mov dh, 0x10; pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00034d46: mov dh, 0x11; test dl, dl; jne 0x34d29; ret; 
0x0018e876: mov dh, 0x12; sub eax, edx; ret; 
0x0015919a: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x159190; pop ebx; ret; 
0x000ed31f: mov dh, 0x14; add eax, dword ptr [ecx]; ret 0xb60f; 
0x000ea745: mov dh, 0x14; ret 0xc083; 
0x00143d2a: mov dh, 0x18; test ebx, ebx; jne 0x143cf8; mov eax, 1; pop ebx; ret; 
0x000f42a1: mov dh, 0x1c; add dword ptr [ebp + 0xf01186c], ecx; mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x0002d0ff: mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x000a0659: mov dh, 0x3c; or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0007f737: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0017b57d: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000e438a: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xe4361; xor eax, eax; ret; 
0x00188e32: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x00187685: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x00188f0e: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x001876f5: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x000f47d8: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00068500: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00068800: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00068a99: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689f9: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068449: mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0006ddf9: mov dh, 0x44; pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x0007a759: mov dh, 0x45; aam 0x89; ret 0xf889; 
0x000f628a: mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x000f4b56: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00191702: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00188eea: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x001876e1: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0017b459: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x0017d479: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x00188e2e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00187681: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00188f0a: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001876f1: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000ffa63: mov dh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00053132: mov dh, 0x50; or al, 0x89; sal esi, 1; ret 0xf40; 
0x0005224b: mov dh, 0x50; or al, 0xf6; ret 0xf40; 
0x000fa341: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000f0b0a: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x000994e2: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x000e585b: mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x00056cc1: mov dh, 0x55; or al, 0xf6; ret 0xf01; 
0x00056e4b: mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00191775: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00191706: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000f555e: mov dh, 0x56; sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00191735: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0006ad3e: mov dh, 0x57; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], al; add dh, dh; ret 0xf40; 
0x0006ad18: mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x0013d8b9: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x00054e65: mov dh, 0x5f; or al, 0xf6; ret; 
0x0014ed46: mov dh, 0x5f; pop ebp; ret; 
0x0015ef72: mov dh, 0x64; sub cl, bh; call dword ptr [edi + 0x52]; 
0x0013d991: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x00159166: mov dh, 0x7e; std; jmp dword ptr [esi - 0x70]; 
0x000d0225: mov dh, 0x83; ret 0x8901; 
0x00034934: mov dh, 0x83; ret 0x8d01; 
0x0003e891: mov dh, 0x83; ret; 
0x0002ce6c: mov dh, 0x84; push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x00099841: mov dh, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x00163649: mov dh, 0xc0; add esp, 0x1c; ret; 
0x0010a3c7: mov dh, 0xc0; add esp, 0x4c; ret; 
0x00158699: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x00118b6f: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x001310c4: mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008f21a: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x000de8ae: mov dh, 0xc0; lea eax, [eax + eax - 1]; ret; 
0x00037159: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000825ba: mov dh, 0xc0; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000f9aed: mov dh, 0xc0; neg eax; ret; 
0x0007dbc8: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00158613: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00082126: mov dh, 0xc0; pop ebx; ret; 
0x00038023: mov dh, 0xc0; ret; 
0x0010a5d7: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0015f6ca: mov dh, 0xc0; std; bnd call dword ptr [ebp - 0x73]; 
0x0008f0e6: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0002479b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0011e3fd: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0003c961: mov dh, 0xc; adc edi, dword ptr [eax]; dec esp; adc eax, 0x83167500; ret 0x3901; 
0x000f394e: mov dh, 0xc; add ecx, dword ptr [ebp + 0xf01084c]; mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f4f31: mov dh, 0xc; js 0xc0925545; add dword ptr [ecx], edi; ret 0xda75; 
0x0018e35a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x00081d12: mov dh, 0xd2; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x000c8d80: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009a384: mov dh, 0xe7; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x001697b8: mov dh, 0xe9; stc; call dword ptr [esi + 0x53]; 
0x0002e9eb: mov dh, 0xe; add byte ptr [ebx - 0x4d16ef3c], al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x001165da: mov dh, 0xf6; jmp dword ptr [ebp - 0x75]; 
0x000d64e2: mov dh, 0xfa; dec dword ptr [ebx - 0x768bdbb4]; cli; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000a15fa: mov dh, 0xfb; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x000441eb: mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004420e: mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000647dd: mov dh, 0xff; call dword ptr [eax - 0x75]; 
0x000a4ba6: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0018b4f4: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000804c3: mov dh, 2; pop ebx; pop esi; ret; 
0x0016f94a: mov dh, 2; pop esi; pop edi; ret; 
0x0007b457: mov dh, 2; ret; 
0x00188e4d: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00187694: mov dh, 2; sub eax, ecx; ret; 
0x000f3956: mov dh, 4; or edi, dword ptr [ecx]; ret 0xd375; 
0x000f42a9: mov dh, 4; sub dword ptr [ecx], edi; ret 0xd075; 
0x00186047: mov dh, 6; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x000b3927: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xb3931; xor eax, eax; pop ebx; ret; 
0x0017bad9: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184f39: mov dh, 8; mov byte ptr [edx], cl; pop ebx; ret; 
0x00188e4a: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00187691: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00103859: mov dh, 8; test cl, cl; jne 0x10383e; xor eax, eax; pop ebx; ret; 
0x00105fb9: mov dh, 8; test cl, cl; jne 0x105f9e; xor eax, eax; pop ebx; ret; 
0x000df5d9: mov dh, 8; test cl, cl; jne 0xdf5be; xor eax, eax; pop ebx; ret; 
0x000e1c79: mov dh, 8; test cl, cl; jne 0xe1c5e; xor eax, eax; pop ebx; ret; 
0x000f6b29: mov dh, 8; test cl, cl; jne 0xf6b0e; xor eax, eax; pop ebx; ret; 
0x000f76e9: mov dh, 8; test cl, cl; jne 0xf76ce; xor eax, eax; pop ebx; ret; 
0x000b2149: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000b2123: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00073b38: mov dh, cl; cli; jmp dword ptr [esi - 0x70]; 
0x0003867a: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001708ea: mov dl, 0x1c; int1; jmp dword ptr [esi - 0x70]; 
0x0004436c: mov dl, 0x30; stc; call dword ptr [eax - 0x18]; 
0x000d8c54: mov dl, 0x45; stc; call dword ptr [eax + 0x53]; 
0x000d9b60: mov dl, 0x45; stc; call dword ptr [eax - 0x18]; 
0x0014aaca: mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00121bd4: mov dl, 0x55; stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x00128ce0: mov dl, 0x56; stc; call dword ptr [eax - 0x18]; 
0x001375eb: mov dl, 0x5b; stc; call dword ptr [eax + 0x6a]; 
0x00155128: mov dl, 0x83; in al, dx; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x00085d29: mov dl, 0xa; add byte ptr [ebx - 0x72fbdb84], cl; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x0008172a: mov dl, 0xed; cli; call dword ptr [eax + 0x6a]; 
0x001169c2: mov dl, 0xf6; dec dword ptr [ebx - 0x76dfdba4]; ret 0x76b8; 
0x0012232a: mov dl, 0xf8; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00064b98: mov dl, 0xff; dec dword ptr [ebx - 0x4f34b]; dec dword ptr [ebp - 0x6879f7a]; call dword ptr [eax + 0x68]; 
0x0009251a: mov dl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000aadfa: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aacfa: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000cdaae: mov dl, al; cmp eax, 0x928d0000; and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; 
0x0014fbd4: mov dl, al; ret 0xfff2; 
0x00086fc3: mov dl, bh; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8704c; stc; call dword ptr [eax - 0x73]; 
0x00086fe5: mov dl, bh; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8706e; stc; call dword ptr [eax - 0x73]; 
0x0002290d: mov dl, byte ptr [eax + eax]; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000aaff0: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x001362fa: mov ds, word ptr [edx - 7]; call dword ptr [eax + 0x53]; 
0x00037832: mov dword ptr [0x5c8b0004], eax; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x000ac439: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x000656ee: mov dword ptr [0x68fff932], eax; out dx, al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00022f19: mov dword ptr [0x6b000001], eax; ret 0x8b3c; 
0x00146c5e: mov dword ptr [0x758bfffe], eax; mov eax, 0xab10868d; stc; call dword ptr [eax - 0x73]; 
0x00081cb0: mov dword ptr [0x7c], eax; ret; 
0x000825c8: mov dword ptr [0x7c], edx; ret; 
0x00081c79: mov dword ptr [0x80], eax; ret; 
0x00081d38: mov dword ptr [0x80], edx; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x0011c0f2: mov dword ptr [0x81000523], eax; ret; 
0x000ebcf2: mov dword ptr [0x81000827], eax; ret; 
0x0017bcf2: mov dword ptr [0x81ffff27], eax; ret; 
0x0016bc29: mov dword ptr [0x83000000], eax; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00162aff: mov dword ptr [0x83000000], eax; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00082504: mov dword ptr [0x832272d1], eax; in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0008b218: mov dword ptr [0x839d72c2], eax; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000826d7: mov dword ptr [0x83c272c2], eax; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00082655: mov dword ptr [0x83c472c2], eax; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00083d72: mov dword ptr [0x83d272c2], eax; in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000847f7: mov dword ptr [0x83d572c2], eax; in al, dx; or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x000a5169: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00136c89: mov dword ptr [0x89fffff7], eax; ret; 
0x001179b9: mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0008832e: mov dword ptr [0x8bfffffd], eax; je 0x88359; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x00155826: mov dword ptr [0xc0850000], eax; je 0x155838; add esp, 8; pop ebx; ret; 
0x000cda80: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00168310: mov dword ptr [0xc483fff1], eax; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x00128308: mov dword ptr [0xc483fff5], eax; adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x000f9a4f: mov dword ptr [0xc483fffb], eax; adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00169b19: mov dword ptr [0xe8fffffe], eax; ficomp word ptr [ebp - 4]; jmp dword ptr [esi - 0x70]; 
0x0010315f: mov dword ptr [0xe8fffffe], eax; sbb byte ptr [ebx - 0x347c0003], ch; dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00027b5f: mov dword ptr [0xeb000001], eax; mov ecx, dword ptr [ebx - 0x72c7db84]; xchg esp, edx; jo 0x27b67; call dword ptr [eax - 0x73]; 
0x000f47d3: mov dword ptr [0xf000001], eax; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00020155: mov dword ptr [0xfffffff0], eax; nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00081da4: mov dword ptr [eax + 0x104], edx; ret; 
0x00081dc4: mov dword ptr [eax + 0x108], edx; ret; 
0x0010350e: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0008398c: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x001583ee: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0007447f: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00093f8c: mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000b2381: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeeeb: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2320: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee8d: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007a649: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00083cc0: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00081de4: mov dword ptr [eax + 0x10c], edx; ret; 
0x001034f6: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00081e04: mov dword ptr [eax + 0x110], edx; ret; 
0x00088984: mov dword ptr [eax + 0x114], edx; ret; 
0x00088964: mov dword ptr [eax + 0x11c], edx; ret; 
0x0003b805: mov dword ptr [eax + 0x14], 5; xor eax, eax; ret; 
0x0016323e: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00083cf4: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0007b41c: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x001145ae: mov dword ptr [eax + 0x16], edx; ret; 
0x000b2468: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb5: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001583eb: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000b243a: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef97: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00021472: mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213d2: mov dword ptr [eax + 0x1978], edx; ret; 
0x00080478: mov dword ptr [eax + 0x19a0], 0; mov dword ptr [eax + 0x19a4], 0; ret; 
0x00080482: mov dword ptr [eax + 0x19a4], 0; ret; 
0x000935de: mov dword ptr [eax + 0x1c0], edx; ret; 
0x0009358e: mov dword ptr [eax + 0x1c4], edx; ret; 
0x0009352e: mov dword ptr [eax + 0x1c8], edx; ret; 
0x00081c6b: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0009b6b2: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00093624: mov dword ptr [eax + 0x1cc], edx; ret; 
0x00093604: mov dword ptr [eax + 0x1d0], edx; ret; 
0x0009355e: mov dword ptr [eax + 0x1e4], edx; ret; 
0x000935d4: mov dword ptr [eax + 0x1ec], 1; mov dword ptr [eax + 0x1c0], edx; ret; 
0x00093584: mov dword ptr [eax + 0x1ec], 1; mov dword ptr [eax + 0x1c4], edx; ret; 
0x00093524: mov dword ptr [eax + 0x1ec], 1; mov dword ptr [eax + 0x1c8], edx; ret; 
0x00093554: mov dword ptr [eax + 0x1ec], 1; mov dword ptr [eax + 0x1e4], edx; ret; 
0x000936b4: mov dword ptr [eax + 0x208], edx; ret; 
0x00074e87: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x00074e58: mov dword ptr [eax + 0x20], ecx; ret; 
0x00081c75: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00075500: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0007e810: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0007e844: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00081d14: mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00113447: mov dword ptr [eax + 0x28], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007e80a: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0009222e: mov dword ptr [eax + 0x3b04], 0; ret; 
0x00093438: mov dword ptr [eax + 0x3b08], 0; ret; 
0x000935b4: mov dword ptr [eax + 0x3b68], edx; ret; 
0x000938cc: mov dword ptr [eax + 0x3b], ebp; add byte ptr [eax], al; test ecx, ecx; jne 0x938e0; ret; 
0x0016e05c: mov dword ptr [eax + 0x4c], edx; ret; 
0x00113284: mov dword ptr [eax + 0x50], ecx; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x00113287: mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x000dcd6e: mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0014f721: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x00070e5d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0016e6bd: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x00083985: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000904a5: mov dword ptr [eax + 0xc], ecx; ret; 
0x0007e813: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x00081cac: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001630de: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0016309e: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0009057a: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x001638c4: mov dword ptr [eax + 0xc], edx; ret; 
0x0013dad4: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00083de5: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00083acc: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0003b89f: mov dword ptr [eax + 0xe], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0014fd5c: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000b233e: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeeab: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014fd62: mov dword ptr [eax + 0xfc], edx; ret; 
0x000b21ba: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed57: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014957f: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0007f474: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00156cae: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00037ec7: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x000f6a79: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008cb2e: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013ccc3: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00156c12: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0005861c: mov dword ptr [eax + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00156c3c: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000c3e79: mov dword ptr [eax + 4], ecx; mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00074e4d: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0015ce77: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0015d887: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0007b453: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00156bea: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x00074e81: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x000aed39: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007a643: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x001638bd: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00081ca2: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0007e847: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0007e816: mov dword ptr [eax + 4], edx; ret; 
0x001029ec: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000cbb4d: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000b223e: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedbb: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00143cb9: mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000f6a72: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0007f47b: mov dword ptr [eax + 8], 0; ret; 
0x00083993: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x00074e84: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x00058619: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x00156c19: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00074e55: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x000b2220: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed9d: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b5060: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x001145a5: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000f6a5f: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0015a1c6: mov dword ptr [eax + 8], edx; ret; 
0x00113fdf: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00088a15: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0019ce68: mov dword ptr [eax + ebp*4], edi; test edx, edx; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x00163900: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0007f46e: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008cb28: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000f6a6c: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00176f18: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00090493: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00156bf7: mov dword ptr [eax], 0; pop ebx; ret; 
0x00037ece: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00156ca8: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156c0c: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00156be4: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008e527: mov dword ptr [eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0011afdf: mov dword ptr [eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x00098457: mov dword ptr [eax], 0x16; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001309b7: mov dword ptr [eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00037587: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003748f: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00037527: mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010dcdf: mov dword ptr [eax], 0x16; mov eax, 1; ret; 
0x000711f2: mov dword ptr [eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000983c7: mov dword ptr [eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016e5e7: mov dword ptr [eax], 0x16; xor eax, eax; ret; 
0x00035d4a: mov dword ptr [eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x00036358: mov dword ptr [eax], 0x22; add esp, 8; pop ebx; ret; 
0x00038065: mov dword ptr [eax], 0x26; mov eax, 0xffffffff; ret; 
0x00142bf2: mov dword ptr [eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00156c90: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0008e897: mov dword ptr [eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x00156c80: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0013ccbd: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00114e97: mov dword ptr [eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x00156c78: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x000ddc85: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x0008d4c8: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x000d74b7: mov dword ptr [eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0011d0bf: mov dword ptr [eax], 2; xor eax, eax; pop ebx; ret; 
0x00156c36: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00156c23: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00156ca0: mov dword ptr [eax], 8; pop ebx; ret; 
0x00156c66: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000220c7: mov dword ptr [eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000789bf: mov dword ptr [eax], 9; mov eax, 0xffffffff; ret; 
0x0013b4a4: mov dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret; 
0x000c89a3: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x00026e7e: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026ea1: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f0a: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg eax, esi; jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00163236: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x4e0]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0019d61d: mov dword ptr [eax], ecx; add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x85000042]; sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x00081363: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000aed04: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21b8: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed55: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00082787: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00092b3e: mov dword ptr [eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x000755e3: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x00073a29: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000b217b: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed25: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f5eca: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x0015ce72: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0015d882: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00035c92: mov dword ptr [eax], ecx; ret; 
0x00087d38: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00113fff: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x0005f95b: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x0008134e: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000ce67e: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000cbb4b: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x00074e53: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00157b75: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0012448e: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000b2137: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecf4: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002f62c: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00074e8a: mov dword ptr [eax], edx; pop ebx; ret; 
0x00118568: mov dword ptr [eax], edx; ret; 
0x0003b7c4: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00075ac2: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000c3e7c: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x0008377f: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0016e28a: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0009b409: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00160fb3: mov dword ptr [ebp + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0016133b: mov dword ptr [ebp + 8], 1; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00084419: mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00066c3a: mov dword ptr [ebp - 0x1600000c], ecx; ret; 
0x0008b26a: mov dword ptr [ebp - 0x30], 1; call 0x81c90; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0011b73d: mov dword ptr [ebp - 0x30], edx; call eax; 
0x0012e566: mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0002ccef: mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x0012e56b: mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0012df5f: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0012e047: mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0012def9: mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0012e60a: mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00076631: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0012ddb0: mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012e3b6: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0012dfaf: mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0012e477: mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x00124824: mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001249f4: mov dword ptr [ebp - 0x500], ecx; call dword ptr gs:[0x10]; 
0x0013cc5c: mov dword ptr [ebp - 0x658377a], ecx; call dword ptr [eax - 0x73]; 
0x00107ee8: mov dword ptr [ebp - 0x74ec8b40], 0xfffecc86; jmp dword ptr [ebp - 0x7d]; 
0x000ec5c5: mov dword ptr [ebp - 0x74f08140], 0x148d0845; mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x0006ba29: mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006bb9c: mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00066a74: mov dword ptr [ebp - 0x8ac], ecx; push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x000818ec: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x00157b29: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0007e8c5: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00099626: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0008e92c: mov dword ptr [ebx + 0x124], eax; add esp, 0x18; pop ebx; ret; 
0x0007a665: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0007990f: mov dword ptr [ebx + 0x14], esi; mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x001392fe: mov dword ptr [ebx + 0x18], eax; add esp, 4; mov eax, ecx; pop ebx; pop esi; ret; 
0x00037134: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000992ea: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00079912: mov dword ptr [ebx + 0x18], esi; pop ebx; pop esi; pop edi; ret; 
0x000992ed: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00124b54: mov dword ptr [ebx + 0x260], 0; add esp, 8; pop ebx; ret; 
0x00124b78: mov dword ptr [ebx + 0x260], 3; add esp, 8; pop ebx; ret; 
0x00124d68: mov dword ptr [ebx + 0x260], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00075a23: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00118e66: mov dword ptr [ebx + 0x4414], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00118ef8: mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x00113ed3: mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x0014e4a5: mov dword ptr [ebx + 0x5188], 0; call esi; 
0x0014e41e: mov dword ptr [ebx + 0x61c8], 0; call esi; 
0x001701d3: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0014e397: mov dword ptr [ebx + 0x7208], 0; call esi; 
0x0014e310: mov dword ptr [ebx + 0x8248], 0; call esi; 
0x0014e289: mov dword ptr [ebx + 0x9288], 0; call esi; 
0x0015583d: mov dword ptr [ebx + 0xa340], eax; add esp, 8; pop ebx; ret; 
0x00155377: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0014224e: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000817f9: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0016aff0: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00083963: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00079b59: mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00129eee: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x000dc0f7: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00139ecd: mov dword ptr [ebx + 0xfc0], eax; add esp, 0x18; pop ebx; ret; 
0x0008a7d0: mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x00099629: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x00102531: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001027ac: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00102672: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004c383: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00129e4e: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x0013dea9: mov dword ptr [ebx + 4], edx; mov dword ptr [ebx + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x0007aeba: mov dword ptr [ebx + 4], edx; xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0008b35b: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016b043: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00142246: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0007a65f: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0015e8f3: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0013deac: mov dword ptr [ebx + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x00129e9e: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x000dc0f1: mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0014be76: mov dword ptr [ebx - 0x7d7273ab], ecx; pushfd; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0008b307: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00160af5: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x0008b296: mov dword ptr [ebx], 2; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x000711af: mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016b44c: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0009b930: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0007aa17: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0007aebf: mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x00051b69: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00155f9b: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000992f0: mov dword ptr [ebx], eax; push eax; call ecx; 
0x000754a7: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001630d7: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0005f90d: mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x000787db: mov dword ptr [ebx], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0016e628: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00058e57: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x0005f959: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x0014b561: mov dword ptr [ebx], esi; jne 0x14b510; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00090da2: mov dword ptr [ebx], esi; jne 0x90d40; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008fe29: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0008fe49: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x000936f1: mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x00070e66: mov dword ptr [ecx + 0x88], edx; ret; 
0x000827d5: mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x001463f9: mov dword ptr [ecx + 0xa], edx; pop ebx; ret; 
0x000a4d42: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0002c00b: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x00082784: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011853a: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0003b8f8: mov dword ptr [ecx + 4], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a4d33: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003a905: mov dword ptr [ecx + 4], edx; ret 4; 
0x00083bb6: mov dword ptr [ecx + 4], edx; ret; 
0x000a4d84: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x00113f77: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00083b00: mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x000a4d75: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x00051aec: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0014e9de: mov dword ptr [ecx - 7], esp; call dword ptr [eax + 0x53]; 
0x0008d27c: mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000b4745: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x000785cc: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0007913a: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00114e86: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x114e90; xor eax, eax; pop ebx; ret; 
0x0008ce19: mov dword ptr [ecx], eax; mov byte ptr [ebx + 0x4fd], dl; xor eax, eax; pop ebx; ret; 
0x0011d025: mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00083874: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003a901: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00131111: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0008b17c: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0002ff4d: mov dword ptr [ecx], eax; pop ebx; ret; 
0x00085adf: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0011ed74: mov dword ptr [ecx], ebx; int 0x80; 
0x000a4d01: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a4d20: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a4d40: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a4d30: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0013d8e2: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x0007a6f0: mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x000a4cf1: mov dword ptr [ecx], edx; pop ebx; ret; 
0x000745e6: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0002f62a: mov dword ptr [ecx], esi; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x00083f7d: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000ac89d: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ac8db: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000ab1ee: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab18d: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x0004a7bb: mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x000ab2b5: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac9a7: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ac9f5: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000ab297: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x00082d17: mov dword ptr [edi + 0x218], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000ac8bb: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000ab1ab: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ac757: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000ab057: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab049: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab0bb: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x00102426: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000ac7ad: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000ac7eb: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000ab09d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab3b0: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x00083f8a: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0004b1c8: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x0008b078: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004b1d1: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000ab017: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab035: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab055: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab046: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac6d4: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ac702: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000ab3d0: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab3e0: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x001435d1: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ab004: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0003a883: mov dword ptr [edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0013cb63: mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x000d8c33: mov dword ptr [edi], esp; or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x00083ca5: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0008fec8: mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x000745e3: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00157aa6: mov dword ptr [edx + 0x10], ecx; pop ebx; ret; 
0x00163025: mov dword ptr [edx + 0x14], eax; mov eax, 1; pop ebx; ret; 
0x0016305b: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0007474d: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00081e42: mov dword ptr [edx + 0x19f0], eax; ret; 
0x0008c4e6: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00093665: mov dword ptr [edx + 0x1fc], eax; ret; 
0x00093690: mov dword ptr [edx + 0x204], eax; ret; 
0x000e9308: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001106f8: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x00082bfb: mov dword ptr [edx + 0x218], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x001106fb: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x001106fe: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0003721a: mov dword ptr [edx + 0x28], ecx; ret; 
0x00157a84: mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x00113de5: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x00157a87: mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x0008cea7: mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x0008fe2c: mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009049f: mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x00097940: mov dword ptr [edx + 0x3b5c], 0; pop ebx; pop esi; ret; 
0x00113de2: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0010dccd: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x0010f56d: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x00038303: mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x000382ee: mov dword ptr [edx + 0x68], ecx; ret; 
0x0007bb25: mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00082789: mov dword ptr [edx + 0x924], 0; ret; 
0x00050eb5: mov dword ptr [edx + 0xc], eax; add esp, 0x18; mov eax, edx; pop ebx; ret 4; 
0x00163060: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0018503d: mov dword ptr [edx + 1], ecx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x00184f35: mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00184fb5: mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x000a7147: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a7277: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b156a: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d57: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a2e87: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0011070e: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x001106aa: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000a7129: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7269: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ab908: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000abb57: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000aba07: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000abb67: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000aa3a7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000aa507: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000abb87: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000aa527: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000aba67: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000abbc7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000aa407: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000aa567: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b154c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d49: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000a0fca: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a2e79: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0011853f: mov dword ptr [edx + 4], eax; ret; 
0x00118561: mov dword ptr [edx + 4], eax; test eax, eax; je 0x11856a; mov dword ptr [eax], edx; ret; 
0x0008cb81: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000a10e5: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a1015: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x001027a9: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00180dc9: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00186089: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000a719b: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72db: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b15de: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2dab: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a2eeb: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00058666: mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x000a9f14: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a708b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72fb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a8ebb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a717d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72bd: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x000825bc: mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000b15c0: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4abb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2cbb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a5a34: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a2ecd: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000888dc: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x888e8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000585d3: mov dword ptr [edx + 8], esi; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000e82b8: mov dword ptr [edx + eax*4], ecx; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x00178dfa: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0002cbdd: mov dword ptr [edx + edi*4], ecx; mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x00176f69: mov dword ptr [edx - 0x10], eax; mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001775df: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176faf: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00176f6c: mov dword ptr [edx - 0xc], eax; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00176f8c: mov dword ptr [edx - 0xd], eax; mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00176fac: mov dword ptr [edx - 0xe], eax; mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001775e6: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fb6: mov dword ptr [edx - 2], eax; pop ebx; ret; 
0x0017b4ed: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d50d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x001849bd: mov dword ptr [edx - 2], ecx; pop ebx; ret; 
0x00177606: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fd6: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b581: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d5a1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00184a51: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001775a2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d439: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00176f72: mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017b3b5: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e5: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00163096: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00184895: mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001775c2: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f92: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b406: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d436: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001848e6: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184925: mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001775e2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fb2: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001849b5: mov dword ptr [edx - 6], ecx; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00176fd2: mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017759f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f6f: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00185de9: mov dword ptr [edx - 8], ecx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x001775bf: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f8f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0003aaeb: mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000a8ff5: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001106a4: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000838c2: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x00174639: mov dword ptr [edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00081402: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000361ac: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000a70e4: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000a7224: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000a9ff2: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a10bc: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000a7012: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a7242: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a10d0: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000a8e4f: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a10e8: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a10fc: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000a70f4: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a7234: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a2d24: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a2e44: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000a7252: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a2e62: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000a7262: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a2e72: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000827d3: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x924], 0; pop ebx; ret; 
0x000584e9: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x000925a1: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000377d9: mov dword ptr [edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x000216e8: mov dword ptr [edx], eax; mov eax, 0xffffffff; ret; 
0x000574f3: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a7142: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a7272: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a2d52: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a2e82: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000aa4f2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b14e7: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a4f: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c42: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a0ff4: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a5b02: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a2e34: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00080022: mov dword ptr [edx], eax; ret; 
0x00099118: mov dword ptr [edx], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003b754: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00083762: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000da7fa: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00178df4: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000d5e04: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000f954a: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x00075182: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0011853d: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0017da24: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017ba54: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00074484: mov dword ptr [edx], ecx; pop ebx; ret; 
0x0004a7d6: mov dword ptr [edx], ecx; ret; 
0x00073905: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000d8946: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a1099: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a0fe1: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a0fd9: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0008fe4c: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0011d718: mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; pop edi; ret; 
0x000f659b: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010c6da: mov dword ptr [esi + 0x14], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00153803: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00079b56: mov dword ptr [esi + 0x18], edx; mov dword ptr [ebx + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0012959c: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000eeae3: mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x0007e929: mov dword ptr [esi + 0x28], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008016f: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0011d5ec: mov dword ptr [esi + 0x28], eax; mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x00074ed8: mov dword ptr [esi + 0x3c], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00079284: mov dword ptr [esi + 0xa4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00078734: mov dword ptr [esi + 0xa4], edx; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0003a977: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000800c5: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0007baaf: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003a803: mov dword ptr [esi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009d0a4: mov dword ptr [esi + edx*2], 0x17554e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x000c48a6: mov dword ptr [esi], 0xc6e9e900; cmc; jmp dword ptr [esi - 0x70]; 
0x0007edc4: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00075a21: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0016f927: mov dword ptr [esi], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0013c28e: mov dword ptr [esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0009e1fc: mov dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x000d947b: mov dword ptr [esi], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d9acb: mov dword ptr [esi], edi; pop ebx; pop esi; pop edi; ret; 
0x00038204: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a0a96: mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x0011c90f: mov dword ptr [esp + 0x100c], eax; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00122c24: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122355: mov dword ptr [esp + 0x10], eax; mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001551d0: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00080d9a: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00080e96: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001570fb: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0008ef30: mov dword ptr [esp + 0x10], edx; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000776af: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00075714: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000755b4: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00102bbc: mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000d7c3b: mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0012235d: mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122294: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001226d4: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00080d96: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0003a5c1: mov dword ptr [esp + 0x14], ecx; sub esp, 8; push 0; push edx; call edi; 
0x00157d4e: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00088c24: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00122dfd: mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db7: mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0012229c: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122025: mov dword ptr [esp + 0x18], eax; mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122785: mov dword ptr [esp + 0x18], eax; mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00123a97: mov dword ptr [esp + 0x18], eax; or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012340d: mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00122164: mov dword ptr [esp + 0x18], ebx; mov ebx, 0xf; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011fdaf: mov dword ptr [esp + 0x18], edx; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x0011479c: mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001071ad: mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000d8c2e: mov dword ptr [esp + 0x1c], eax; call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0012202d: mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008d410: mov dword ptr [esp + 0x1c], eax; mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0006d4c2: mov dword ptr [esp + 0x20], 0; jmp eax; 
0x0006d472: mov dword ptr [esp + 0x20], 1; jmp eax; 
0x0008d41b: mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012216d: mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00038675: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0016202c: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000682f2: mov dword ptr [esp + 0x24], 0; jmp eax; 
0x0006829a: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x001600e7: mov dword ptr [esp + 0x24], 5; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001220d3: mov dword ptr [esp + 0x24], eax; lea eax, [esp + 0x14]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00090959: mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00093143: mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001220db: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009098a: mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00108d62: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0016bb3a: mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00039280: mov dword ptr [esp + 0x28], ecx; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015ff45: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0013917c: mov dword ptr [esp + 0x2c], eax; call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0016ba3a: mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00155c66: mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00092d2f: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0006ea70: mov dword ptr [esp + 0x34], 1; jmp ebx; 
0x00092d33: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0015fed5: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000b59c1: mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x0006de3f: mov dword ptr [esp + 0x38], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006eaa0: mov dword ptr [esp + 0x38], 1; jmp ebx; 
0x0006deba: mov dword ptr [esp + 0x3c], 0x20; jmp eax; 
0x0006db2f: mov dword ptr [esp + 0x40], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006ea60: mov dword ptr [esp + 0x40], 1; jmp ebx; 
0x0007efb4: mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0015caa2: mov dword ptr [esp + 0x434], edx; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0006ea53: mov dword ptr [esp + 0x44], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006de74: mov dword ptr [esp + 0x44], 1; jmp ebx; 
0x00092362: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x0006ddb2: mov dword ptr [esp + 0x4c], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9f0: mov dword ptr [esp + 0x4c], 1; jmp ebx; 
0x001201ca: mov dword ptr [esp + 0x58], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0006dbc6: mov dword ptr [esp + 0x5c], 0; jmp eax; 
0x0006e9d0: mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x001201d4: mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001140d6: mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006dd67: mov dword ptr [esp + 0x64], 1; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0006e9e0: mov dword ptr [esp + 0x64], 1; jmp ebx; 
0x00068a56: mov dword ptr [esp + 0x68], 1; jmp eax; 
0x000c9d9c: mov dword ptr [esp + 0x68], edi; push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x000c9f02: mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000993fe: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0002cbeb: mov dword ptr [esp + 0xc], eax; call edx; 
0x00035a79: mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x000d64eb: mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00121df2: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010872b: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00114199: mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x001151a7: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115357: mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00162cfb: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d13: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157973: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015795b: mov dword ptr [esp + 0xc], ebx; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x000dd1c7: mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000dd217: mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x00070fb9: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00080e42: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00162b67: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621d7: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00035c86: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00021610: mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00036149: mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0004c5a5: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0015a1f6: mov dword ptr [esp + 4], eax; jmp edx; 
0x000d619f: mov dword ptr [esp + 4], eax; mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00121d41: mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001221fa: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121e79: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016b386: mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x00161f7f: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00081cdd: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000710c2: mov dword ptr [esp + 4], edx; jmp eax; 
0x0004c5dc: mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x000362af: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0015535b: mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x000dd1ce: mov dword ptr [esp + 8], eax; call edx; 
0x00035e09: mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x000d62d3: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000926bf: mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x000dc5c7: mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x001080b0: mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010f8e8: mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0009270f: mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x0003847e: mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00121e81: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012335a: mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00123459: mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0003842e: mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00108cec: mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121dea: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011527d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210d: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021dd: mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00092967: mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b7: mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0015e9c0: mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0016b660: mov dword ptr [esp + 8], ecx; call eax; 
0x000d61a8: mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0015a1f2: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00161f7b: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f93: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000866d8: mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00035ff7: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00087dda: mov dword ptr [esp + 8], edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00070fc3: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00162cff: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d17: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157977: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015795f: mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0016d4d1: mov dword ptr [esp], eax; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0015e7db: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0009340e: mov dword ptr [esp], eax; call esi; 
0x0004c55c: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0004c5e0: mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00121d3a: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001224ca: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122405: mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00090bb0: mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x001564b2: mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x00139dd9: mov dword ptr [esp], ebp; call ebx; 
0x00139ad5: mov dword ptr [esp], ebp; call esi; 
0x000236d0: mov dword ptr [esp], ebx; call edi; 
0x0002279d: mov dword ptr [esp], ebx; call esi; 
0x00022910: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022fa0: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00090bb8: mov dword ptr [esp], edi; call esi; 
0x00155cad: mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00155403: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000e9566: mov dword ptr [esp], esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00155024: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002b7bb: mov dword ptr [esp], esi; call ebx; 
0x00139185: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012e9d6: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00093142: mov dword ptr fs:[esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000b59c0: mov dword ptr fs:[esp + 0x34], edx; push eax; push edi; call esi; 
0x00081caf: mov dword ptr gs:[0x7c], eax; ret; 
0x000825c7: mov dword ptr gs:[0x7c], edx; ret; 
0x00081c78: mov dword ptr gs:[0x80], eax; ret; 
0x00081d37: mov dword ptr gs:[0x80], edx; mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x0008e526: mov dword ptr gs:[eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0011afde: mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x00098456: mov dword ptr gs:[eax], 0x16; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001309b6: mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00037586: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003748e: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00037526: mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010dcde: mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x000711f1: mov dword ptr gs:[eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000983c6: mov dword ptr gs:[eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016e5e6: mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x00035d49: mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x00036357: mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x00038064: mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00142bf1: mov dword ptr gs:[eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0008e896: mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x00114e96: mov dword ptr gs:[eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000d74b6: mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0011d0be: mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x000220c6: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000789be: mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00092b3d: mov dword ptr gs:[eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x0002ff4c: mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0003a882: mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00174638: mov dword ptr gs:[edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0014d840: mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000584e8: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x000925a0: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000377d8: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x000216e7: mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x0015f7ea: mov dword ptr gs:[edx], eax; ret; 
0x0013c28d: mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000d947a: mov dword ptr gs:[esi], edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000d9aca: mov dword ptr gs:[esi], edi; pop ebx; pop esi; pop edi; ret; 
0x000b2133: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecf0: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab000: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0008cbda: mov eax, 0; cmova eax, edx; ret; 
0x0018eba2: mov eax, 0; jne 0x18f320; pop ebx; ret; 
0x0018e9db: mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x0019034a: mov eax, 0; jne 0x190590; pop ebx; ret; 
0x00191a14: mov eax, 0; jne 0x191c40; pop ebx; ret; 
0x00191ad1: mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0004a6a9: mov eax, 0; jne 0x4a6b2; push ecx; ret; 
0x0004a94f: mov eax, 0; jne 0x4a958; push ecx; ret; 
0x0010faa3: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0011f537: mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f4f8: mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000de7e0: mov eax, 0x100; ret; 
0x0011a18b: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001304ad: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x00092bcc: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009314a: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00092f9c: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x00092eec: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00029d58: mov eax, 0x1072c2e8; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x00092e05: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d62d7: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000d61a3: mov eax, 0x108; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6027: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0008d600: mov eax, 0x10; add esp, 0xc; ret; 
0x0008d4b3: mov eax, 0x10; cmove eax, ecx; ret; 
0x001551e3: mov eax, 0x10; pop ebx; pop esi; ret; 
0x0008c4f8: mov eax, 0x10; pop ebx; ret; 
0x0019407a: mov eax, 0x10; pop edi; ret; 
0x000d5dd5: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000d5ec4: mov eax, 0x10a; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000d64ef: mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x000d6421: mov eax, 0x10b; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x001078d9: mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00107a39: mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00082fb4: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009245b: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00092b0c: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009296f: mov eax, 0x117; call dword ptr gs:[0x10]; 
0x00092919: mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000926c3: mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00092679: mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009227d: mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc5cb: mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x000dc589: mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001214a4: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001214a4: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00121481: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x001214fe: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001080b4: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113a2f: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00108070: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b4: mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108304: mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010845a: mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108011: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00107846: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00109efb: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010739c: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00120b01: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0010a551: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a42b: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0010a491: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010a4f6: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00107f3e: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108b4f: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0010f886: mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0012169a: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x00085e43: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011f607: mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f5c8: mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f6d7: mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x0011f698: mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00105f16: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00110357: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001216fe: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011fb64: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0011f26e: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001213aa: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000ddc44: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ddc44: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00109331: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x001093ae: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00109360: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x001214ca: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x001151af: mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115174: mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115250: mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011535f: mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00115324: mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115400: mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0008d41f: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00122d4b: mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0012172e: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0011f380: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00114797: mov eax, 0x154; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012176b: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0011f8ab: mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0011f877: mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001201d8: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00116b0a: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x001230e7: mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001230a8: mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012156b: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012179e: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0005852b: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0003b98b: mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0003b957: mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003ba26: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x001217ce: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000dd2df: mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00083bd4: mov eax, 0x16; cmove eax, edx; ret; 
0x00083cd8: mov eax, 0x16; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x00083b9c: mov eax, 0x16; cmp edx, 2; jbe 0x83bb0; ret; 
0x000a1393: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009912b: mov eax, 0x16; pop ebx; pop esi; ret; 
0x00083df0: mov eax, 0x16; pop ebx; ret; 
0x0008b090: mov eax, 0x16; pop esi; pop edi; ret; 
0x00083ab0: mov eax, 0x16; ret; 
0x0011f931: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0011f9e7: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x001217fe: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012182a: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x001071b6: mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x0004a560: mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00086020: mov eax, 0x182; call dword ptr gs:[0x10]; 
0x000d600c: mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d6146: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000d5dbb: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000d6481: mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d63ab: mov eax, 0x197; mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d66b3: mov eax, 0x197; mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d6562: mov eax, 0x197; mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00092f50: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000930cb: mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011fc1c: mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0011fb0e: mov eax, 0x19a; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011fd2d: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x001102b2: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010f8ec: mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0010f812: mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00122dbb: mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122cd4: mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000929bf: mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x000928a5: mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092713: mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00092609: mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00123db9: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00038482: mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x00038361: mov eax, 0x1a5; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000824dd: mov eax, 0x1a6; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000f991d: mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00117272: mov eax, 0x1a; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012105d: mov eax, 0x1b3; int 0x80; 
0x00113191: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x00102eed: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000dc63a: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x000dc72d: mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00195214: mov eax, 0x20; add eax, edx; ret; 
0x000de7cf: mov eax, 0x20; cmovne eax, edx; ret; 
0x000de707: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00108850: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00116a34: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00116a34: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0003777e: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00047bda: mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00058460: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00107fde: mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010a57a: mov eax, 0x28; call dword ptr gs:[0x10]; 
0x00054178: mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x001092ca: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x000dc0b5: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114e70: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c63e2: mov eax, 0x31ffffc9; call dword ptr [eax - 0x73]; 
0x0011692a: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0011edd0: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001140dc: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00114433: mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00165e6c: mov eax, 0x3908418b; ret 0x4c75; 
0x000ddf6e: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0005edc9: mov eax, 0x39fffffb; ret 0x1875; 
0x0005a618: mov eax, 0x39fffffb; ret 0x840f; 
0x00107d9a: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00107d9a: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001469be: mov eax, 0x3d1b60f; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0011695a: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0011c4e0: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00060157: mov eax, 0x3efff8c1; jmp eax; 
0x001092fe: mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x000ddc64: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc64: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000de738: mov eax, 0x40; ret; 
0x000ddf94: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf94: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de014: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011612e: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00114700: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001148cc: mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x000cadd0: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00143fe5: mov eax, 0x50002a4; pop ss; and byte ptr [esi], cl; add byte ptr [ebx - 0x1380], cl; jmp dword ptr [ebp - 0x75]; 
0x0002fee5: mov eax, 0x50013e5; pop ss; popal; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x00153223: mov eax, 0x50fff962; push 0xa; call 0x14f970; add esp, 0x1c; ret; 
0x0010a45e: mov eax, 0x53; call dword ptr gs:[0x10]; 
0x0010a4c1: mov eax, 0x55; call dword ptr gs:[0x10]; 
0x001216ca: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00116e8e: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ffe: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00118390: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001183e0: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00107dee: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x001747e5: mov eax, 0x5ffff9c; pop ss; sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00114d50: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114db1: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea51: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121d45: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122862: mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00121531: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000cd8b0: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000cd91c: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x000cd72c: mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00120770: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00156af7: mov eax, 0x6afffff9; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x000596ad: mov eax, 0x6afffffb; add dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x401; 
0x001208f0: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120837: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011ea7a: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e5a: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012125a: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x000dc2ba: mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00116eba: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0002145c: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1aad3f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012166a: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0012335e: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012345d: mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00123318: mov eax, 0x75; mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00176949: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012412c: mov eax, 0x75; xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235dc: mov eax, 0x75; xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x001169a2: mov eax, 0x76; call dword ptr gs:[0x10]; 
0x000375a9: mov eax, 0x77; int 0x80; 
0x000dcd47: mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0011ed6f: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011624e: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dc08a: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121231: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a031: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0004a5b7: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000de6a0: mov eax, 0x7e; pop ebx; ret; 
0x000360f8: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00121321: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x000de680: mov eax, 0x7f; cmovne eax, edx; ret; 
0x000de63e: mov eax, 0x7f; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x000de601: mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x000de660: mov eax, 0x7f; mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de623: mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000de5d1: mov eax, 0x7f; mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x0012144b: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00143add: mov eax, 0x810002a9; ret; 
0x00121351: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x001900dd: mov eax, 0x81fffde3; ret; 
0x0017f1dd: mov eax, 0x81fffef2; ret; 
0x0017eddd: mov eax, 0x81fffef6; ret; 
0x0017e6dd: mov eax, 0x81fffefd; ret; 
0x0017e2dd: mov eax, 0x81ffff01; ret; 
0x0017d0dd: mov eax, 0x81ffff13; ret; 
0x0017a4dd: mov eax, 0x81ffff3f; ret; 
0x0012140a: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00121646: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0005cce5: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0012487e: mov eax, 0x83fffffc; ret 0x8902; 
0x00146004: mov eax, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x0015fa72: mov eax, 0x83ffffff; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ddf3a: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0005e7ad: mov eax, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x001094da: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x001031a4: mov eax, 0x85fffffe; ror byte ptr [edi], 0x44; ret 0xec83; 
0x0012128e: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0011f4ba: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0011f4ba: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0008d417: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00038671: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000ee654: mov eax, 0x89ffff97; ret 0xe883; 
0x0004fc94: mov eax, 0x89ffffc9; fld dword ptr [ebx - 0x361f7b]; jmp dword ptr [eax]; 
0x0004eb4a: mov eax, 0x89ffffc9; ret 0xe283; 
0x0005cc93: mov eax, 0x89fffffb; ret 0xb589; 
0x000993fa: mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x0005b345: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e300: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x001087d4: mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0010872f: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00108f5e: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a0ab: mov eax, 0x90; call dword ptr gs:[0x10]; 
0x0011a077: mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0016b65b: mov eax, 0x90fffffe; mov dword ptr [esp + 8], ecx; call eax; 
0x0011501b: mov eax, 0x91; call dword ptr gs:[0x10]; 
0x00114fe7: mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150db: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00142249: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00124757: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00124707: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001150a7: mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x000ddfea: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00116a72: mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011a1be: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1ee: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011a21a: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0011a244: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x000f96ee: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00086ae5: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00085cf7: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00086ab3: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0008f1b4: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1b4: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000f97ca: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97fa: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x000f9884: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0011eaae: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012160b: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0010f73b: mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x0010f707: mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001215a1: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x0010a51a: mov eax, 0xa; call dword ptr gs:[0x10]; 
0x00146c63: mov eax, 0xab10868d; stc; call dword ptr [eax - 0x73]; 
0x000375a0: mov eax, 0xad; int 0x80; 
0x00037648: mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00085eaa: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00090954: mov eax, 0xaf; mov dword ptr [esp + 0x24], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00086749: mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00086a39: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090b96: mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000377b0: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00038432: mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x000383d1: mov eax, 0xb1; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00038679: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00037840: mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00037812: mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00102115: mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001020e1: mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021e5: mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x001021b1: mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0010958b: mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00193ff2: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x001212be: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212ee: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000dd271: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00037dae: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00110106: mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x000dcda5: mov eax, 0xbe; int 0x80; 
0x001146b0: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec5cf: mov eax, 0xc0833803; add al, 0x39; ret 0xf775; 
0x000cda5e: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xcda78; mov eax, edx; ret; 
0x0012073f: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x00120950: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001208bf: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x001209f0: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001207ff: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x001209a0: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00109ec1: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000ddc84: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc84: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcc4: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcc4: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddca4: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddca4: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x001094aa: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x00194046: mov eax, 0xc; pop edi; ret; 
0x0008326c: mov eax, 0xc; pop esi; pop edi; ret; 
0x000ddce4: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddce4: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00115cd0: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d70: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000ddd0e: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x000d93a0: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00109e91: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de0c5: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00115e1d: mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000de041: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de175: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00115eed: mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000de071: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e61: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x000ddd5c: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddfc: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0011ee7a: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee7a: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011ee9a: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011ee9a: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001215ce: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011a151: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a121: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00103534: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d7bc7: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000d7a1e: mov eax, 0xdc; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00108cf0: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00113908: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00108eb8: mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108c58: mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00087e90: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00121854: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0011cfbb: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf4b: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce1b: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011ce56: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceb6: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd86: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011ce81: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cee1: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdb1: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0011cf7e: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf0e: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdde: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00110136: mov eax, 0xef; call dword ptr gs:[0x10]; 
0x00083071: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000884d9: mov eax, 0xf0; mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000882bc: mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x00089fd5: mov eax, 0xf0; mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x00082628: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00090dab: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000860e8: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00082e4a: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00088c18: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0008a7c6: mov eax, 0xf0; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008a440: mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008ace4: mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008b4ed: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c6d1: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089782: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844de: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b907: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c62: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084f57: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a949: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008492d: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844ac: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085131: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000826ac: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008ad25: mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000881a7: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00084e97: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00083e59: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008254c: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x001709cf: mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083ed0: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849c9: mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008d680: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085ca3: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008729b: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00107dbe: mov eax, 0xf; call dword ptr gs:[0x10]; 
0x000de690: mov eax, 0xfc17; pop ebx; ret; 
0x0012137a: mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x001213e6: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000de6b0: mov eax, 0xfffa; pop ebx; ret; 
0x0005d185: mov eax, 0xffffffb; test byte ptr [edx], dh; ret 0xffff; 
0x000220cd: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0007f684: mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x00144222: mov eax, 0xffffffff; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0002b67f: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000584eb: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0003758d: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00037495: mov eax, 0xffffffff; pop ebx; ret; 
0x0003ba59: mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x00071859: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000216ea: mov eax, 0xffffffff; ret; 
0x000d5c49: mov eax, 1; add esp, 0xc; ret; 
0x000e82bb: mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001174d3: mov eax, 1; add esp, 8; pop ebx; ret; 
0x000920b8: mov eax, 1; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x0011ed8c: mov eax, 1; call dword ptr gs:[0x10]; 
0x00187740: mov eax, 1; ja 0x187749; neg eax; ret; 
0x00188f80: mov eax, 1; ja 0x188f89; neg eax; pop ebp; ret; 
0x0018e380: mov eax, 1; ja 0x18e389; neg eax; ret; 
0x0018e680: mov eax, 1; ja 0x18e689; neg eax; pop ebp; ret; 
0x0018e850: mov eax, 1; ja 0x18e859; neg eax; ret; 
0x0018f337: mov eax, 1; ja 0x18f340; neg eax; ret; 
0x001905e8: mov eax, 1; ja 0x1905f1; neg eax; ret; 
0x00191c61: mov eax, 1; ja 0x191c6a; neg eax; ret; 
0x00190266: mov eax, 1; jg 0x190270; neg eax; ret; 
0x00190591: mov eax, 1; jg 0x1905a0; neg eax; ret; 
0x001946c1: mov eax, 1; jg 0x1946d0; neg eax; ret; 
0x000c8a60: mov eax, 1; jg 0xc8a69; neg eax; ret; 
0x000b43ab: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00071834: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0010c70b: mov eax, 1; pop ebx; pop esi; ret; 
0x0011752e: mov eax, 1; pop ebx; ret; 
0x0004a9e0: mov eax, 1; pop esi; pop edi; ret; 
0x000574f5: mov eax, 1; ret; 
0x0015b0f6: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000deb73: mov eax, 1; test ecx, ecx; js 0xdeb80; ret; 
0x001570e6: mov eax, 2; pop ebx; pop esi; ret; 
0x000c8c70: mov eax, 2; ret; 
0x000871e0: mov eax, 3; add esp, 0xc; ret; 
0x001085cb: mov eax, 3; call dword ptr gs:[0x10]; 
0x000d5ded: mov eax, 3; cmovne eax, edx; ret; 
0x00108597: mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d651: mov eax, 3; pop ebx; pop esi; pop edi; ret; 
0x000877a8: mov eax, 3; ret; 
0x0016e184: mov eax, 4; add esp, 0xc; ret; 
0x0010868b: mov eax, 4; call dword ptr gs:[0x10]; 
0x00108657: mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011d5ef: mov eax, 4; pop ebx; pop esi; pop edi; ret; 
0x00193f9d: mov eax, 4; pop edi; ret; 
0x000c8c90: mov eax, 4; ret; 
0x0012e9fb: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x000fe3c0: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c8ca0: mov eax, 5; ret; 
0x00109232: mov eax, 6; call dword ptr gs:[0x10]; 
0x0013bcfb: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0013c290: mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00091f00: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000c8cb0: mov eax, 6; ret; 
0x000c8cc0: mov eax, 7; ret; 
0x0016e174: mov eax, 8; add esp, 0xc; ret; 
0x001093f6: mov eax, 8; call dword ptr gs:[0x10]; 
0x000936e9: mov eax, 8; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x00193ff6: mov eax, 8; pop edi; ret; 
0x0010a3ee: mov eax, 9; call dword ptr gs:[0x10]; 
0x00102681: mov eax, 9; pop esi; pop edi; ret; 
0x000d7c36: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001071a8: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001140d1: mov eax, dword ptr [0x14]; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001542a6: mov eax, dword ptr [0x57050001]; sbb eax, 0xec83000d; adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x000a50bc: mov eax, dword ptr [0x5bfffffd]; ret; 
0x0008c4e1: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00183df4: mov eax, dword ptr [0x81fffea6]; ret; 
0x0017cef4: mov eax, dword ptr [0x81ffff15]; ret; 
0x0017a2f4: mov eax, dword ptr [0x81ffff41]; ret; 
0x000b569c: mov eax, dword ptr [0x828dfff7]; jo 0xb5639; stc; call dword ptr [eax - 0x73]; 
0x00116053: mov eax, dword ptr [0x83000000]; in al, dx; or al, 0x89; ret; 
0x00149fdb: mov eax, dword ptr [0x8bffee58]; jl 0x14a006; and al, 0x8d; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x000971eb: mov eax, dword ptr [0x9000000]; ret; 
0x00074767: mov eax, dword ptr [0xc4830000]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00168538: mov eax, dword ptr [0xc483fff1]; adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x001685e8: mov eax, dword ptr [0xc483fff1]; adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x000dc724: mov eax, dword ptr [0xc]; test eax, eax; jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00081c4c: mov eax, dword ptr [8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000dcd3a: mov eax, dword ptr [8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0008cba5: mov eax, dword ptr [8]; ret; 
0x00087ae5: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002b80e: mov eax, dword ptr [eax + 0x1014]; ret; 
0x000776b3: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0014ac78: mov eax, dword ptr [eax + 0x10]; ret; 
0x00115f95: mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x115f9d; ret; 
0x00080d9e: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00093f89: mov eax, dword ptr [eax + 0x14]; mov dword ptr [eax + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001633f8: mov eax, dword ptr [eax + 0x14]; ret; 
0x0012e89c: mov eax, dword ptr [eax + 0x18]; ret; 
0x000b48d6: mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b48e6: mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b48f6: mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b4906: mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b4916: mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b4926: mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b4936: mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b4946: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000814b7: mov eax, dword ptr [eax + 0x1c]; add esp, 0x14; pop ebx; pop esi; jmp eax; 
0x00081c84: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x0012e9bb: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00155037: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x155047; sub esp, 0xc; push esi; call eax; 
0x00155505: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x155515; sub esp, 0xc; push esi; call eax; 
0x00156514: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x156524; sub esp, 0xc; push esi; call eax; 
0x001567dc: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15666a; sub esp, 0xc; push edi; call eax; 
0x001568bd: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1568cd; sub esp, 0xc; push edi; call eax; 
0x0015719f: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1571af; sub esp, 0xc; push edi; call eax; 
0x0015ac1a: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15ac2a; sub esp, 0xc; push esi; call eax; 
0x0015c163: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15c173; sub esp, 0xc; push esi; call eax; 
0x0015c31f: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15c32f; sub esp, 0xc; push edi; call eax; 
0x0015d6c8: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x15d6d8; sub esp, 0xc; push ebp; call eax; 
0x000b4956: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b4966: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b4976: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b48c6: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x00162d04: mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00157447: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00162d1c: mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00081d3e: mov eax, dword ptr [eax + 0x24]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x81d50; ret; 
0x00125924: mov eax, dword ptr [eax + 0x24]; ret; 
0x0011cd59: mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0002fc6d: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fbdc: mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0015add4: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00160ee4: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0002fc3d: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fb9c: mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003aa28: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0002fe1c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fdfc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fddc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fd5c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fd9c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002fcfc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fd7c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fd3c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fcbc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002fd1c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fdbc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002fcdc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00080378: mov eax, dword ptr [eax + 0x34]; ret; 
0x0007f3c7: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7f3c0; ret; 
0x0011d050: mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011d0d8: mov eax, dword ptr [eax + 0x368]; pop ebx; ret; 
0x0002fe3c: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000789ab: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x789b8; ret; 
0x00080e90: mov eax, dword ptr [eax + 0x3a0]; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008776e: mov eax, dword ptr [eax + 0x3a28]; ret; 
0x0002fe5c: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0011d038: mov eax, dword ptr [eax + 0x44]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011d0d0: mov eax, dword ptr [eax + 0x44]; pop ebx; ret; 
0x0012529d: mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x0016e048: mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e068: mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f8: mov eax, dword ptr [eax + 0x54]; ret; 
0x0002ec69: mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e078: mov eax, dword ptr [eax + 0x5c]; ret; 
0x000382ae: mov eax, dword ptr [eax + 0x64]; ret; 
0x0003828e: mov eax, dword ptr [eax + 0x68]; ret; 
0x00075348: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00081e36: mov eax, dword ptr [eax + 0x98]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0012e98d: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000904f7: mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x904f0; pop ebx; ret; 
0x0008034e: mov eax, dword ptr [eax + 0xce0]; ret; 
0x0002272e: mov eax, dword ptr [eax + 0xfec]; ret; 
0x0002274e: mov eax, dword ptr [eax + 0xff0]; ret; 
0x0009964c: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0x99648; mov eax, ecx; ret; 
0x00162030: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00080e9a: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0015797c: mov eax, dword ptr [eax + 4]; jmp eax; 
0x00082781: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x0011d0ae: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0014af30: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x14af3c; cmp dword ptr [eax + 8], edx; jne 0x14af30; ret; 
0x00099590: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0x99588; xor eax, eax; ret; 
0x00113f08: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0008375c: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000825e2: mov eax, dword ptr [eax + 8]; mov byte ptr gs:[0x4fe], al; cmp eax, 1; je 0x825f8; ret; 
0x0012e9d3: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000818b9: mov eax, dword ptr [eax + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x000837fc: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008003c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00125916: mov eax, dword ptr [eax + eax]; add eax, 0x1006e7; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0002fc40: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002f67b: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0016e00c: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0016e02c: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0002fb9f: mov eax, dword ptr [eax + edx*4]; ret; 
0x0013141e: mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x00051a8b: mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x000747eb: mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x000f5ec2: mov eax, dword ptr [eax - 0x120]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00021dce: mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x000de8a0: mov eax, dword ptr [eax - 0x134]; cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0008d7e0: mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00113f7e: mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00038030: mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0003805e: mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000de7c0: mov eax, dword ptr [eax - 0x134]; mov edx, 0xffffffff; cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x0002feae: mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002fb52: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fb22: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002faf2: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fa32: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fa92: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002f9a2: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fa62: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fa02: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fc02: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002f9d2: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fac2: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002f972: mov eax, dword ptr [eax - 0x13c]; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0002feee: mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x00099344: mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00143fee: mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x0002f672: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fc62: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc32: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002ec5e: mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002ebc1: mov eax, dword ptr [eax - 0x68]; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x2ebe0; add esp, 0x1c; ret; 
0x000546c9: mov eax, dword ptr [eax - 0x68]; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x51e90; add esp, 0x1c; ret; 
0x0009a2a1: mov eax, dword ptr [eax - 0x68]; push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0xa13a0; add esp, 0x1c; ret; 
0x0005768c: mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x58e80; add esp, 0x1c; ret; 
0x0007484c: mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x5f980; add esp, 0x1c; ret; 
0x0018b4e0: mov eax, dword ptr [eax - 0x7400086c]; test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebx; ret; 
0x0016b3a9: mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x0012591e: mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x0011cd53: mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0002fece: mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0012e8c6: mov eax, dword ptr [eax - 0xd4]; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x12d300; add esp, 0x1c; ret; 
0x001848e3: mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x000c0bbc: mov eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd839; 
0x0007a618: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c8: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0008afec: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00085a8c: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00093643: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x000936d3: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x936e0; ret; 
0x00093683: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x93690; ret; 
0x00157964: mov eax, dword ptr [eax]; jmp eax; 
0x00075180: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0004c5da: mov eax, dword ptr [eax]; mov dword ptr [esp + 4], edx; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0002fc6b: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fbda: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fc3b: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fb9a: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003aa26: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x0002ec67: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002f679: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fc69: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fbd8: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fc39: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fb98: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ec65: mov eax, dword ptr [eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0015e7cd: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015a650: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0015dc61: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0015a713: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x0015a500: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00088a60: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d918: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002fb59: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fb29: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002faf9: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fa39: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fa99: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002f9a9: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fa69: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fa09: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fc09: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002f9d9: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fac9: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002f979: mov eax, dword ptr [eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000817c9: mov eax, dword ptr [eax]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000d7d98: mov eax, dword ptr [eax]; ret; 
0x0008af8c: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00085a6c: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008afac: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007b3c8: mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007b3e8: mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x0002de7c: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0011c274: mov eax, dword ptr [eax]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3b6: mov eax, dword ptr [eax]; test eax, eax; je 0x11c458; call eax; 
0x000dd15b: mov eax, dword ptr [eax]; test eax, eax; je 0xdd163; call eax; 
0x00080016: mov eax, dword ptr [eax]; test eax, eax; jne 0x80010; ret; 
0x00085c98: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001564af: mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x0015dc26: mov eax, dword ptr [ebp + 0x3c]; push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0015dc92: mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0015abfe: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00160fdc: mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0012593b: mov eax, dword ptr [ebp + 4]; call 0x124de0; pop edx; pop ecx; pop eax; ret; 
0x000e009e: mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x000dfdc3: mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x0010430e: mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00103f1b: mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x00073e52: mov eax, dword ptr [ebp - 0x20]; sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00072ed4: mov eax, dword ptr [ebp - 0x20]; sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0007de3b: mov eax, dword ptr [ebp - 0x28]; sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0007de45: mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x000d8588: mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d8134: mov eax, dword ptr [ebp - 0x34]; test eax, eax; je 0xd8150; sub esp, 0xc; push esi; call eax; 
0x0008b276: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0013c28a: mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0011b737: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0007a0ea: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00076a90: mov eax, dword ptr [ebp - 0x40]; sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0016ae76: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x00114196: mov eax, dword ptr [ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x00155358: mov eax, dword ptr [ebp]; mov dword ptr [esp + 4], edx; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x00155299: mov eax, dword ptr [ebp]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0015538e: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0007a662: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0015537e: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00155283: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x001552ce: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x001554ef: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00156a23: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0009954d: mov eax, dword ptr [ebx + 0x20]; je 0x99560; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x001573fd: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016b13b: mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016b1db: mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0015d174: mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015d158: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0014de42: mov eax, dword ptr [ebx + 0xa2ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00155823: mov eax, dword ptr [ebx + 0xa340]; test eax, eax; je 0x155838; add esp, 8; pop ebx; ret; 
0x0015a4dc: mov eax, dword ptr [ebx + 0xb0]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0012e043: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0012def5: mov eax, dword ptr [ebx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x00157b0d: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00156073: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00155bad: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00156086: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0015ba35: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00157a2b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001579db: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00155a86: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0015bab3: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00156050: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00081360: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00129e9b: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00160283: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00160472: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x001604d3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x001603c3: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0008b34c: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x8b365; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0011b2ea: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x11b31c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0018dcf2: mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4e5: mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x001570f4: mov eax, dword ptr [ebx + ecx*4 - 0x264]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0011afd8: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x001309b0: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00037488: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00035d43: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x00036351: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x22; add esp, 8; pop ebx; ret; 
0x0008e890: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x0011d0b8: mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x0015fb00: mov eax, dword ptr [ebx - 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0015fa70: mov eax, dword ptr [ebx - 0x48]; add esp, 4; pop ebx; pop esi; ret; 
0x0015f948: mov eax, dword ptr [ebx - 0x64]; add esp, 4; pop ebx; pop esi; ret; 
0x0015f9d8: mov eax, dword ptr [ebx - 0xcc]; add esp, 4; pop ebx; pop esi; ret; 
0x0011c26b: mov eax, dword ptr [ebx - 0xdc]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11c2c0; call eax; 
0x0011c3ad: mov eax, dword ptr [ebx - 0xdc]; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x11c458; call eax; 
0x00143cb4: mov eax, dword ptr [ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x0015f109: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00170915: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0015e8f6: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015e7d6: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0015e7c8: mov eax, dword ptr [ebx]; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0008fec5: mov eax, dword ptr [ecx + 0x10]; mov dword ptr [edx + 0x10], eax; pop ebx; pop esi; ret; 
0x0012e606: mov eax, dword ptr [ecx + 0xc]; push esi; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x0007a5a8: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000a7144: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000a7274: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1567: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d54: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000a2e84: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000abb64: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000abbc4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000aa4f4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000a7125: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7265: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a2d45: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a2e75: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x00162e1e: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623ae: mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x000aba4a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000abbaa: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000aa3ea: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000aa54a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a72d4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000aba6a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000abbca: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b15fb: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa40a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000aa56a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000aba2b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000abb8b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b15bc: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3cb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000aa52b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a72f4: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f04: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a72b5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2ec5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00075a72: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0008006d: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000a152a: mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000a14fa: mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x0006f38d: mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x00114005: mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00037520: mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0016e5e0: mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x000d74b0: mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002fbd1: mov eax, dword ptr [ecx - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fb91: mov eax, dword ptr [ecx - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000a7010: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a7240: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000a8e4d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000a7250: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000a2e60: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000a7260: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000a2e70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a7270: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000a2e80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000aa4f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b1513: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a4d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c40: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a5b00: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000a2e50: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00080020: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; ret; 
0x000a70e1: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a7221: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a7231: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a2e41: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b14e4: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d11: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a2e31: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x00075719: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000755b9: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0015d6b5: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00108d5f: mov eax, dword ptr [edi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00156de8: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00156d6c: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00156e13: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0015f6f2: mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0015f700: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0015760b: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001575c8: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00083126: mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0007a6a2: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000ebd20: mov eax, dword ptr [edx + 0x14]; call 0xe9520; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007a6b0: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00080e47: mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x0007a572: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0015f102: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0007a580: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x00078351: mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x0016b327: mov eax, dword ptr [edx + 0x2c]; add esp, 0x34; pop ebx; pop esi; jmp eax; 
0x0002ff44: mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0016b380: mov eax, dword ptr [edx + 0x3a0]; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x000871b4: mov eax, dword ptr [edx + 0x84]; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x001201ce: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00162ff8: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00161f78: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00161f90: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00155caa: mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00155d4e: mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00113f30: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00080a28: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00098b2d: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x0012f6b4: mov eax, dword ptr [edx - 0x11c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x00130674: mov eax, dword ptr [edx - 0x11c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00115cc1: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0x115cf8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d61: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0x115d98; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d9391: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xd93c8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000ddd4d: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xddd88; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000ddded: mov eax, dword ptr [edx - 0x12c]; cmp byte ptr [eax], 0; je 0xdde28; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000deb80: mov eax, dword ptr [edx - 0x134]; cmp dword ptr gs:[eax], 0x26; sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00092b50: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00037ed7: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010dcd8: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x00114e90: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000d7508: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000220c0: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000789b8: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00092b37: mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], ecx; mov eax, 0xffffffff; pop ebx; ret; 
0x00115f8f: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x10]; test eax, eax; je 0x115f9d; ret; 
0x000b48d0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1ac]; ret; 
0x000b48e0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b0]; ret; 
0x000b48f0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b4]; ret; 
0x000b4900: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1b8]; ret; 
0x000b4910: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1bc]; ret; 
0x000b4920: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c0]; ret; 
0x000b4930: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c4]; ret; 
0x000b4940: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000b4950: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000b4960: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000b4970: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000b48c0: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x00081e30: mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x98]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x00085aff: mov eax, dword ptr [edx]; and eax, 0xfffffffe; or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00082d98: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000832d8: mov eax, dword ptr [edx]; mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x000755e5: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x00075765: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00073a2b: mov eax, dword ptr [edx]; ret; 
0x0007c243: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0002ddf8: mov eax, dword ptr [esi + 0x10]; test eax, eax; je 0x2de08; sub esp, 0xc; push esi; call eax; 
0x000e93b0: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0015e4bd: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0012df5b: mov eax, dword ptr [esi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x00161e90: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00161ec8: mov eax, dword ptr [esi + 4]; push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x00162717: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00161e73: mov eax, dword ptr [esi + 4]; push edx; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161eab: mov eax, dword ptr [esi + 4]; push edx; push ebp; push esi; call dword ptr [eax + 8]; 
0x0006b06e: mov eax, dword ptr [esi + eax*4 - 0x73660]; lea eax, [esi + eax - 0x1bb381]; jmp eax; 
0x00066010: mov eax, dword ptr [esi + eax*4 - 0x73a60]; lea eax, [esi + eax - 0x1c0419]; jmp eax; 
0x000de0b6: mov eax, dword ptr [esi - 0x12c]; cmp byte ptr [eax], 0; je 0xde0f0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de166: mov eax, dword ptr [esi - 0x12c]; cmp byte ptr [eax], 0; je 0xde1a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00037580: mov eax, dword ptr [esi - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00142beb: mov eax, dword ptr [esi - 0x134]; mov dword ptr gs:[eax], 0x61; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x001303f8: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x00036d34: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00074258: mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0016fd91: mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x0016cb08: mov eax, dword ptr [esp + 0x10]; call eax; 
0x00035c95: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00035c8a: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00176f14: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00125299: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x000872f9: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000b4383: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0013f461: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0012a70f: mov eax, dword ptr [esp + 0x14]; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x00119ce0: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00021513: mov eax, dword ptr [esp + 0x14]; call eax; 
0x000d62cb: mov eax, dword ptr [esp + 0x14]; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000748f0: mov eax, dword ptr [esp + 0x14]; pop ebx; pop esi; pop edi; ret; 
0x0015c194: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0006a041: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0015dc7e: mov eax, dword ptr [esp + 0x18]; call eax; 
0x00155020: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00064fc1: mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0009340a: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0003306e: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xb3440; add esp, 0x1c; ret; 
0x00161f1b: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0012a48c: mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x00039049: mov eax, dword ptr [esp + 0x20]; call eax; 
0x00081593: mov eax, dword ptr [esp + 0x24]; call eax; 
0x00121d3d: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001221fe: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00157170: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00076e87: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0012a02b: mov eax, dword ptr [esp + 0x28]; call eax; 
0x00121e7d: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00139188: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000582d3: mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c9f08: mov eax, dword ptr [esp + 0x34]; call eax; 
0x00078202: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00121dee: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122408: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015a76c: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00122298: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015ff54: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160034: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x00160097: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600f7: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160164: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x0015a51d: mov eax, dword ptr [esp + 0x40]; call eax; 
0x00122359: mov eax, dword ptr [esp + 0x40]; mov dword ptr [esp + 0x14], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c3c94: mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00025afc: mov eax, dword ptr [esp + 0x44]; call eax; 
0x001226d8: mov eax, dword ptr [esp + 0x44]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0015c4d6: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0015c374: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000249e6: mov eax, dword ptr [esp + 0x48]; call eax; 
0x00027182: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00122029: mov eax, dword ptr [esp + 0x54]; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ca536: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00122789: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00114161: mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x001564fc: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00090ead: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0008d414: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0003866e: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00037863: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000873be: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x000d8c3a: mov eax, dword ptr [esp + 0xc]; call eax; 
0x00035ffb: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00083876: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00099340: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00124488: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00035a44: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000b2112: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00193db2: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0014df55: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x001606d2: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071a: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x0003b407: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45a: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x001633b4: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cc84: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00083be0: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0007b3b4: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc84: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00131094: mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00131084: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00081e1f: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x0008d484: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x0010350a: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x001034f2: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00083cf0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0008cb24: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084004: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014ac74: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00160ee0: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00080374: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016e044: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e064: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e074: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e34: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f04: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0016e028: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0007a614: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009363f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x000936cf: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x936e0; ret; 
0x0009367f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x93690; ret; 
0x000d7d94: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007b3c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007b3e4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x001633d4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0016e054: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00083ac4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080034: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e004: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de74: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001029b4: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00080384: mov eax, dword ptr [esp + 4]; ret; 
0x0007e3b4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0007a5d4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007a5f4: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x000b3cf5: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x00087204: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x000362b3: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0008377b: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013bcf5: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0017da26: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007107b: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0002fe34: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe54: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003733d: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010298b: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001775a5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b3ccb: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000aece2: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016e4a1: mov eax, dword ptr [esp]; ret; 
0x0011b2e9: mov eax, dword ptr es:[ebx + 8]; test eax, eax; jne 0x11b31c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00025538: mov eax, dword ptr fs:[esp + 0x48]; call eax; 
0x000d7c35: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x13c], eax; xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x001071a7: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], eax; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001140d0: mov eax, dword ptr gs:[0x14]; mov dword ptr [esp + 0x5c], eax; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0008c4e0: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x000dc723: mov eax, dword ptr gs:[0xc]; test eax, eax; jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x00081c4b: mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000dcd39: mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x0008cba4: mov eax, dword ptr gs:[8]; ret; 
0x00087ae4: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0002f678: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0002fc68: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fbd7: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fc38: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fb97: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002ec64: mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0002fb58: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fb28: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002faf8: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fa38: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fa98: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002f9a8: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fa68: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fa08: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fc08: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002f9d8: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002fac8: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002f978: mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00143ff4: mov eax, dword ptr gs:[eax]; ret; 
0x00114195: mov eax, dword ptr gs:[ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x00143cb3: mov eax, dword ptr gs:[ebx]; add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 8; pop ebx; ret; 
0x000390ad: mov eax, dword ptr ss:[esp + 0x20]; call eax; 
0x00082cc8: mov eax, ebp; call dword ptr gs:[0x10]; 
0x0015304f: mov eax, ebp; pop ebp; ret; 
0x0004ac7d: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00098c31: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00025a94: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a5cd: mov eax, ebp; pop edi; pop ebp; ret; 
0x0011e95f: mov eax, ebp; pop esi; mov edx, ecx; pop edi; pop ebp; ret; 
0x00030616: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000b4ceb: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00114d2a: mov eax, ebx; call 0x114c50; sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x000b6205: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009dad9: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0007b41f: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0011e3d5: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0015734a: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00024f61: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013ddbb: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0002f6ba: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003a466: mov eax, ebx; pop ebx; pop esi; ret; 
0x000c2d71: mov eax, ebx; pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x0004cc3f: mov eax, ebx; pop ebx; ret 4; 
0x0008ce6e: mov eax, ebx; pop ebx; ret; 
0x0013dc6f: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00057cd9: mov eax, ebx; test edx, edx; jne 0x57ce8; add esp, 8; pop ebx; ret; 
0x000dce11: mov eax, ecx; call dword ptr gs:[0x10]; 
0x0003a903: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00074482: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00073903: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x00022953: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00037ccd: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00054719: mov eax, ecx; pop ebx; pop esi; ret; 
0x000c8e0e: mov eax, ecx; pop ebx; ret; 
0x0009e892: mov eax, ecx; pop edi; pop ebp; ret; 
0x00073917: mov eax, ecx; pop edi; ret; 
0x000eba2d: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012a10e: mov eax, ecx; pop esi; pop edi; ret; 
0x00131113: mov eax, ecx; ret 4; 
0x0002f573: mov eax, ecx; ret; 
0x0007a8a8: mov eax, edi; call dword ptr gs:[0x10]; 
0x000d8da1: mov eax, edi; call eax; 
0x000eeae1: mov eax, edi; mov dword ptr [esi + 0x20], ebx; pop ebx; pop esi; pop edi; ret; 
0x00086090: mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x0011e452: mov eax, edi; or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x00084be7: mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x000b1469: mov eax, edi; pop ebx; pop edi; ret; 
0x0002bb6d: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00057c4d: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000719a8: mov eax, edi; pop edi; pop ebp; ret; 
0x000a4a51: mov eax, edi; pop edi; pop ebx; ret; 
0x000ab630: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000879f7: mov eax, edi; pop edi; ret; 
0x000719c6: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00083d51: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003647e: mov eax, edx; add esp, 0x1c; ret 4; 
0x00030476: mov eax, edx; add esp, 0xc; ret; 
0x00078831: mov eax, edx; and eax, 1; add esp, 0x14; pop ebx; pop esi; ret; 
0x00021548: mov eax, edx; call dword ptr gs:[0x10]; 
0x000a0fe3: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x0017945e: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0016d7ce: mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x0003a8b8: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0014edcf: mov eax, edx; pop ebx; pop edi; ret; 
0x00024a42: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008ae0c: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0004b27a: mov eax, edx; pop ebx; pop esi; ret; 
0x00050ebb: mov eax, edx; pop ebx; ret 4; 
0x0002ec36: mov eax, edx; pop ebx; ret; 
0x000a0e54: mov eax, edx; pop edi; pop ebp; ret; 
0x00178ab1: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0002f476: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0004ad31: mov eax, edx; pop esi; pop edi; ret; 
0x0002ec24: mov eax, edx; ret; 
0x00035dc2: mov eax, edx; shr eax, 0x1f; ret; 
0x000847d2: mov eax, edx; shr eax, 3; je 0x84810; mov eax, edi; call dword ptr gs:[0x10]; 
0x000a5108: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa4e61; pop ebx; ret; 
0x000a5020: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xa4e61; pop ebx; ret; 
0x000a503e: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xa4e61; pop ebx; ret; 
0x000a505e: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa4e61; pop ebx; ret; 
0x000a5082: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa4e61; pop ebx; ret; 
0x000a50b2: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa4e61; pop ebx; ret; 
0x000a50e2: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa4e61; pop ebx; ret; 
0x000a4ef4: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xa4e61; pop ebx; ret; 
0x000a4f16: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xa4e61; pop ebx; ret; 
0x000a4f3c: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xa4e61; pop ebx; ret; 
0x000a4f54: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xa4e61; pop ebx; ret; 
0x000a4f7a: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xa4e61; pop ebx; ret; 
0x000a4f9c: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xa4e61; pop ebx; ret; 
0x000a4fba: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x000a4fd8: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xa4e61; pop ebx; ret; 
0x000a4ffe: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xa4e61; pop ebx; ret; 
0x0003ae3a: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0012ea92: mov eax, esi; call dword ptr [edx - 0x3f]; 
0x0003a975: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0009ea14: mov eax, esi; or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00036a51: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002a00d: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00051aef: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00099e4b: mov eax, esi; pop ebx; pop esi; ret 4; 
0x0003ae0b: mov eax, esi; pop ebx; pop esi; ret; 
0x0002c1da: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0003ad6f: mov eax, esi; pop esi; pop edi; ret; 
0x000b2f81: mov ebp, 0x10ea83c0; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x30]; ret; 
0x000b2f71: mov ebp, 0x20ea83c0; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f61: mov ebp, 0x30ea83c0; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b3052: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x000b2f51: mov ebp, 0x40ea83c0; add edx, eax; jl 0xb2f90; add eax, ecx; ret; 
0x001904cf: mov ebp, 0x5b000000; ret; 
0x000b27f6: mov ebp, 0x5ff801c0; ret; 
0x000b3015: mov ebp, 0x5ff801ff; ret; 
0x000c7ae2: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x0004739a: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c10: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000ba9fa: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6a1: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c0488: mov ebp, 0x68fff930; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x00047528: mov ebp, 0x68fff930; fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x000473e0: mov ebp, 0x68fff930; nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x000c7b31: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0004749c: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050beb: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba921: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7c0: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c0416: mov ebp, 0x68fff930; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x0004754b: mov ebp, 0x68fff930; pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x000c7a98: mov ebp, 0x68fff930; push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x00047479: mov ebp, 0x68fff930; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c7f: mov ebp, 0x68fff930; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8b8: mov ebp, 0x68fff930; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03f3: mov ebp, 0x68fff930; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x0017dcd8: mov ebp, 0x81ffff07; ret; 
0x000cc25f: mov ebp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x0009427f: mov ebp, 0x83fff8bf; les ecx, ptr [ecx*4 - 0x192a3f7d]; call dword ptr [eax + 0x56]; 
0x00066c33: mov ebp, 0x85fffff8; fisttp dword ptr [edi]; mov dword ptr [ebp - 0x1600000c], ecx; ret; 
0x000c03bf: mov ebp, 0x8bfff6f4; jl 0xc03ea; and al, 0x8d; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00149c21: mov ebp, 0xac88868d; stc; call dword ptr [eax - 0x73]; 
0x0006627b: mov ebp, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00144819: mov ebp, 0xc483fff2; adc byte ptr [ebx - 0x4c72f314], al; into; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00023b18: mov ebp, 0xe80000; aad 0x10; add byte ptr [ebp - 0x691637d], cl; call dword ptr [eax - 0x73]; 
0x00132918: mov ebp, 0xe8fffffe; jmp esi; 
0x0004a6be: mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x0003733a: mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0011418f: mov ebp, dword ptr [eax - 0x134]; mov eax, dword ptr gs:[ebp]; mov dword ptr [esp + 0xc], eax; mov eax, edi; call dword ptr gs:[0x10]; 
0x0014b3a2: mov ebp, dword ptr [ebx + 4]; push ebx; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00130f26: mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x001131b9: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x000933e7: mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0016e4a9: mov ebp, dword ptr [esp]; ret; 
0x0009f27b: mov ebp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x000d6788: mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0015605a: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00153049: mov ebp, eax; pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x0011b66f: mov ebp, ebx; push esi; call edi; 
0x0014a304: mov ebp, es; push 0x8b000001; dec esp; ret 0x8904; 
0x0011ed86: mov ebp, esi; call ebx; 
0x0011ed86: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0004a5b2: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000dcd3f: mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00123fde: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001769ca: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00124133: mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x0004a55b: mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004a773: mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000660f1: mov ebx, 0x8300000c; in al, dx; add al, 0x53; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00101581: mov ebx, 0x85ffffca; ror byte ptr [edi], 0x85; ret; 
0x0002891d: mov ebx, 0x89fffffb; ret 0xe283; 
0x0005d374: mov ebx, 0x8bffffd3; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0011a6a2: mov ebx, 0x950ffff9; ret; 
0x000fde5e: mov ebx, 0x9e70838d; stc; call dword ptr [eax - 0x73]; 
0x0012331d: mov ebx, 0xb; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0007ca38: mov ebx, 0xc4830008; adc byte ptr [ebp + 0x292678c0], al; ret; 
0x00123411: mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x001234f0: mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00122867: mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x001235e3: mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00122168: mov ebx, 0xf; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00116b4b: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0002ccf4: mov ebx, 0xfffffc5c; test edx, edx; je 0x2ccff; call edx; 
0x0002cbe2: mov ebx, 0xfffffc60; test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x00113a34: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001080a5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001081f5: mov ebx, 0xffffff9c; mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00108075: mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b9: mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d6569: mov ebx, 1; call dword ptr gs:[0x10]; 
0x000933df: mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x00142258: mov ebx, 2; call dword ptr gs:[0x10]; 
0x0004a5ee: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0012398a: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0007a89a: mov ebx, 2; mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008674e: mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087e20: mov ebx, 2; xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c73: mov ebx, 2; xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0017694e: mov ebx, 3; call dword ptr gs:[0x10]; 
0x00121d35: mov ebx, 5; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0004a6c1: mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00087295: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0008cbc1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00087301: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00178df6: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0002f713: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00092e03: mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0013bcf9: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013bcf9: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000930c5: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x001570f6: mov ebx, dword ptr [ebp + edi*8 + 0x5489ffff]; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0013c295: mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x0012475c: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x00124899: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0012470c: mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00124813: mov ebx, dword ptr [ebp - 0x4f8]; mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0014d5b4: mov ebx, dword ptr [ebx + 0x5e]; ret; 
0x00102ee8: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00092eea: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x00092f4e: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013bdc0: mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00130f1e: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00083128: mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001131b7: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0018f303: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x18f320; pop ebx; ret; 
0x00082d9a: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00085c9b: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00085ce8: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00047bdf: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0010784b: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f9a24: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008b303: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0011a187: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b2f: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef7: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a427: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121767: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121567: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121447: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121607: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb7: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf47: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce17: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f220: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000584bf: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00113baf: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001211dc: mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00120b06: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001037c0: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012d95d: mov ebx, dword ptr [esp + 0x18]; je 0x12d970; add esp, 8; pop ebx; ret; 
0x00119cdc: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011ed67: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000d6135: mov ebx, dword ptr [esp + 0x20]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd61d0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00113900: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011442f: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011699e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a6e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003780e: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001138cd: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010922e: mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00037835: mov ebx, dword ptr [esp + 0x20]; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0011f86f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b94f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a06f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fdf: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011509f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f6ff: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010858f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010864f: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093ee: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00109415: mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f9847: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001169c5: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a95: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00109255: mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000cd724: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00115ccc: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d6c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d939c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000de0c1: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de171: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ddd58: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf8: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108eb4: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001082fc: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108452: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115248: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153f8: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001020d9: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021a9: mov ebx, dword ptr [esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb17: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d5e39: mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001087cc: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000f9911: mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0015dc2c: mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x001142ca: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00092671: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092601: mov ebx, dword ptr [esp + 0x40]; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0011fdba: mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x000cd8a8: mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00123db5: mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cd918: mov ebx, dword ptr [esp + 0x50]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00108c54: mov ebx, dword ptr [esp + 0x50]; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fd25: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0011fc10: mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x0011034f: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102aa: mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001148c4: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0011f37c: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00120830: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00107a2e: mov ebx, dword ptr [esp + 0x90]; lea edx, [esp + 0x18]; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00092276: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0x119; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008d31e: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001200d2: mov ebx, dword ptr [esp + 0xb0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00082717: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00082717: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000d7bbe: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0010a4f2: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0011f92d: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00121642: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011f960: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00109587: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00110102: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce52: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceb2: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd82: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110132: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213e2: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00082746: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001214fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00121696: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001216fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f26a: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001213a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001093aa: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001214c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012172a: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00116b06: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012179a: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217ca: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00121826: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc636: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003777a: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fda: mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010a576: mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116926: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ddf6a: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00107d96: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00107d96: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00116956: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001092fa: mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x0011612a: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a45a: mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001216c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00116e8a: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ffa: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107dea: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0011ea76: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e56: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121256: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121666: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0011624a: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dc086: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121406: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf36: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d6: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012128a: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0011f4b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0011f4b6: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00108f5a: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ddfe6: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a1ba: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1ea: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011a216: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f96ea: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f971a: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000f9776: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f6: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0011eaaa: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010a516: mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001212ba: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212ea: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037daa: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001094a6: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ddd0a: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0011ee76: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee96: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011ee96: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001215ca: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf7a: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf0a: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdda: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107dba: mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00121376: mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010a3ea: mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00058469: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00103539: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012187d: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012147d: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0010800d: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54d: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48d: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010932d: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011318d: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4bd: mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114dad: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4d: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012152d: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012122d: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02d: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131d: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134d: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974d: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159d: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd26d: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109ebd: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8d: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03d: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06d: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5d: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14d: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11d: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce7d: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cedd: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdad: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000377b5: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00109365: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0016e499: mov ebx, dword ptr [esp]; ret; 
0x00108451: mov ebx, dword ptr ds:[esp + 0x30]; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x001148c3: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0011f37b: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00086aac: mov ebx, eax; and ebx, 0x40; jne 0x86ad4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x00086ad7: mov ebx, eax; jne 0x86698; lea ecx, [ebp + 0x22c]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00082fb2: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0011ed8a: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0006f297: mov ebx, eax; push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x000884de: mov ebx, ebp; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000882c1: mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x0008b913: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00121057: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0014b3a6: mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00083f7b: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00089fda: mov ebx, edi; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000844b8: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00115e22: mov ebx, edx; call dword ptr gs:[0x10]; 
0x0003778a: mov ebx, edx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00114819: mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00107da6: mov ebx, edx; ret; 
0x0013dfe2: mov ebx, esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00092bd1: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011390d: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0009f1f5: mov ecx, 0x4bb; add byte ptr [ecx], ch; ret; 
0x00114438: mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x00114469: mov ecx, 0x5409; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00157625: mov ecx, 0x6afff963; add eax, 0xb4838d50; jb 0x15762a; call dword ptr [eax - 0x18]; 
0x0008608b: mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x0008262d: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007bfdc: mov ecx, 0x81000f24; ret; 
0x00090db0: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000860ed: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b716: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008270a: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00082e4f: mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000b5680: mov ecx, 0x828d0007; jo 0xb561d; stc; call dword ptr [eax - 0x73]; 
0x00088c1d: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000eeaf3: mov ecx, 0x89ffffa7; clc; pop ebx; pop esi; pop edi; ret; 
0x000442c3: mov ecx, 0x8bfffeb5; je 0x442ee; and al, 0x8d; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00086adb: mov ecx, 0x8dfffffb; lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00056fde: mov ecx, 0x8dfffffc; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x48904e8], al; and al, 0xf6; ret 0xf20; 
0x0006e9cb: mov ecx, 0x90ffffe9; mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x000dcd66: mov ecx, 0xc; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00085e3b: mov ecx, 0xc; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013e3e3: mov ecx, 0xff2c37e8; jmp dword ptr [esi - 0x70]; 
0x00036118: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00035dd8: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00035a2a: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00102ef2: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b43b0: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00073910: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x001630d9: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x00163099: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0014e0b0: mov ecx, 1; mov eax, ecx; ret; 
0x00157948: mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c8ab2: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x0008a7cb: mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000884e0: mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x000377b9: mov ecx, 8; call dword ptr gs:[0x10]; 
0x00037839: mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0008a445: mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x00179d87: mov ecx, dword ptr [eax + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x00155362: mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x001553ed: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x00070e63: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00184f32: mov ecx, dword ptr [eax + 1]; mov dword ptr [edx + 1], ecx; movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00184fb2: mov ecx, dword ptr [eax + 2]; mov dword ptr [edx + 2], ecx; movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x00186086: mov ecx, dword ptr [eax + 4]; mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00085c9e: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0015563f: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x00074e50: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0012a8f9: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x12a908; xor eax, eax; pop ebx; ret; 
0x0002ff3e: mov ecx, dword ptr [eax - 0x144]; mov eax, dword ptr [edx + 0x30]; add eax, 0x200; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x000213e7: mov ecx, dword ptr [eax - 0xe8]; cmp dword ptr [ecx + 0x94], edx; jne 0x213c2; ret; 
0x0017b3b2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d3e2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00184892: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0008ddfe: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8de10; ret; 
0x0017ba52: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184eb2: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000881a5: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008277f: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x924], 0; ret; 
0x00022913: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022fa3: mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00124762: mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0012489f: mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00124712: mov ecx, dword ptr [ebp - 0x4fc]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0012481e: mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000993f3: mov ecx, dword ptr [ebp - 0x74ffd98c]; xchg edi, eax; mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x00083e56: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00083d4e: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008d67d: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018b4de: mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x00027b64: mov ecx, dword ptr [ebx - 0x72c7db84]; xchg esp, edx; jo 0x27b67; call dword ptr [eax - 0x73]; 
0x0013d9a3: mov ecx, dword ptr [ebx - 0x74d7db8c]; jl 0x13d9cf; sub al, 0x83; ret 0x8902; 
0x000938cb: mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x00109251: mov ecx, dword ptr [ecx + 0x5c8bfff7]; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0012a96a: mov ecx, dword ptr [ecx - 0x13c]; mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0012a971: mov ecx, dword ptr [ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x00084f54: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00087e65: mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00083f06: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00083f84: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008312b: mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0007614e: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00080a2b: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00156bf0: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x156c48; mov dword ptr [eax], 0; pop ebx; ret; 
0x00179c87: mov ecx, dword ptr [edx + 0x1c030004]; mov edi, dword ptr [esi]; jmp ebx; 
0x0015ce74: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0015d884: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00090499: mov ecx, dword ptr [edx + 0x3ae0]; mov dword ptr [edx + 0x3ae0], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012447a: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x124488; ret; 
0x0015e9c7: mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x00082d9d: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00068504: mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00068804: mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00068a9d: mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689fd: mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x0006844d: mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0012e93f: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x12e958; ret; 
0x00113f2a: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x113f38; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000c8980: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x0010a6d3: mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00085ceb: mov ecx, dword ptr [esi + 0x230]; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000c8a00: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000c8a20: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x00082faa: mov ecx, dword ptr [esi + 8]; mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000c88db: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x000aed20: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aed01: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00179460: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00113a2b: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00121059: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011c4dc: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00106b38: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a4ee: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100fe: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceae: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012e: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213de: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00082742: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092576: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00114869: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0011481b: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00113aab: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001234ec: mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011a183: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b2b: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef3: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a423: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121763: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121563: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121443: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121603: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb3: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf43: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce13: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f21c: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00113bab: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010783e: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000584b7: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001768bf: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012398f: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009095f: mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00157a06: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x001579c6: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00119cd8: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f873: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b953: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a073: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fe3: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150a3: mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f703: mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108593: mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108653: mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093f2: mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011f8a1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b981: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115011: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f731: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c1: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108681: mov ecx, dword ptr [esp + 0x24]; mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00109419: mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x0010806c: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b0: mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x001080aa: mov ecx, dword ptr [esp + 0x30]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001081fa: mov ecx, dword ptr [esp + 0x30]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x000c9da6: mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x001151a3: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115353: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 0xc], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00115279: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115429: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00102109: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021d9: mov ecx, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x0011f4f4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x100; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc585: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x11c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00108300: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108456: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011f5c4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13b; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f694: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x13c; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00115170: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011524c: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00115320: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153fc: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001230a4: mov ecx, dword ptr [esp + 0x34]; mov eax, 0x159; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001020dd: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021ad: mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00090984: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00108339: mov ecx, dword ptr [esp + 0x34]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00108499: mov ecx, dword ptr [esp + 0x34]; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010f882: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fd29: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010f80e: mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0010f8e2: mov ecx, dword ptr [esp + 0x54]; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0009313f: mov ecx, dword ptr [esp + 0x64]; mov dword ptr [esp + 0x28], eax; cmove esi, edi; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000930c7: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0011f378: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d63b0: mov ecx, dword ptr [esp + 0x74]; mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d6426: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000d64e5: mov ecx, dword ptr [esp + 0x74]; mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x00108a13: mov ecx, dword ptr [esp + 0x94]; mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00108734: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00103530: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00058465: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00121879: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121479: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108009: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a549: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a489: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109329: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113189: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea49: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121529: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121229: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a029: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121319: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121349: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9749: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121599: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd269: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e89: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de039: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de069: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e59: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a149: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a119: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce79: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda9: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00122df5: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122daf: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d43: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008cbb9: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00021da8: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x00083b98: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x83bb0; ret; 
0x000deb6f: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xdeb80; ret; 
0x0011d021: mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0008c6cd: mov ecx, dword ptr [esp + 8]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001214f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f266: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121726: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121796: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037776: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf66: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116126: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a456: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e86: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116246: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121286: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f56: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9716: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd06: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf76: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf06: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e6: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x00087e27: mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x000cadd5: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00086a33: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0016e4b1: mov ecx, dword ptr [esp]; ret; 
0x00084413: mov ecx, dword ptr [esp]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x0012a970: mov ecx, dword ptr gs:[ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x0010ac91: mov ecx, eax; cld; jmp dword ptr [ebp - 0x77]; 
0x001032a4: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000c8d18: mov ecx, eax; mov eax, ecx; ret; 
0x0010316b: mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000cda61: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xcda78; mov eax, edx; ret; 
0x00092282: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc2b5: mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000926bd: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009270d: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00092965: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929b5: mov ecx, ebp; mov dword ptr [esp + 8], eax; mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x0008512f: mov ecx, ebp; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003836b: mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003847a: mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003842a: mov ecx, ebp; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00102c7a: mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000928aa: mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x000824e4: mov ecx, edi; call dword ptr gs:[0x10]; 
0x000d6786: mov ecx, edi; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d66b8: mov ecx, edi; mov ebx, 1; call dword ptr gs:[0x10]; 
0x0008ace9: mov ecx, edx; call dword ptr gs:[0x10]; 
0x00070e5b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00084c60: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00122cd9: mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000b3dad: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3694: mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000d5e3d: mov ecx, esi; call dword ptr gs:[0x10]; 
0x0003ba24: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0008d31c: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00087ea7: mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00108ebd: mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108ef1: mov ecx, esi; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00108c5d: mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x00108ce8: mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00170a5d: mov ecx, esi; mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00130ecb: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0004a559: mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0004a771: mov ecx, esp; mov ebx, 0x3004; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000dd2ea: mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00089c3a: mov edi, 0x11c85; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00138c57: mov edi, 0x2cc86; add byte ptr [ecx], ch; ret 0xc031; 
0x000c896d: mov edi, 0x5f000000; pop esi; ret; 
0x000ac61d: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x00155c5d: mov edi, 0x6afff3; push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0015ef7c: mov edi, 0x6afff3; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0005d14a: mov edi, 0x7ee9ffff; ret 0xffff; 
0x0015ccd6: mov edi, 0x81000117; ret; 
0x0007e0d6: mov edi, 0x81000f03; ret; 
0x00035cd6: mov edi, 0x81001387; ret; 
0x00066bb7: mov edi, 0x8300000b; in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x000681fd: mov edi, 0x83000010; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0013024d: mov edi, 0x83fff839; les ebx, ptr [eax]; pop ebx; ret; 
0x00046f07: mov edi, 0x83ffffdf; in al, dx; add al, 0x83; ret; 
0x001146b1: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000773ad: mov edi, 0x8b00000f; dec esi; or al, 0x89; ret 0x48d; 
0x000ba95d: mov edi, 0x8b000766; jl 0xba988; xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x0011736e: mov edi, 0x8d08ec83; xchg esi, eax; pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x0003fb9a: mov edi, 0x8dffffef; xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x000d641d: mov edi, 0xb8000000; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00094292: mov edi, 0xc483fff8; or al, 0x8d; add dword ptr [eax - 0x2b], -0x1a; call dword ptr [eax + 0x56]; 
0x000942da: mov edi, 0xc483fff8; or al, 0x8d; xor dword ptr [eax - 0x2a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x000341c5: mov edi, 0xc483fffe; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00176b81: mov edi, 0xd8f7fffb; sbb eax, eax; add esp, 0x2c; ret; 
0x001769a1: mov edi, 0xfba679e8; jmp dword ptr [esi - 0x70]; 
0x0015505d: mov edi, 0xff3fffd; push ds; sti; ret; 
0x0010f817: mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0004a6b8: mov edi, dword ptr [eax + 0x24]; mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00037337: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00034666: mov edi, dword ptr [eax]; je 0x34662; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000d8585: mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x00130f23: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0004a7c6: mov edi, dword ptr [edi + 0x38]; ret; 
0x001131bc: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x001131bc: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x00179c7b: mov edi, dword ptr [esi]; jmp ebx; 
0x00123fe3: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001768c7: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0010fa8a: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x001037c8: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011ed6b: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00123326: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00123356: mov edi, dword ptr [esp + 0x34]; mov dword ptr [esp + 8], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00123f73: mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001087d0: mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0010777a: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0006e10f: mov edi, dword ptr [esp + 0x50]; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0016e4ad: mov edi, dword ptr [esp]; ret; 
0x000d647f: mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x00114473: mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00170a61: mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0011f8a5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b985: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115015: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f735: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c5: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108685: mov edi, eax; mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x0011f52d: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f5fd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6cd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230dd: mov edi, eax; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x000d65e4: mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000b3c61: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00168f55: mov edi, eax; stc; call dword ptr [ecx - 0x77]; 
0x00122cdd: mov edi, ebp; call dword ptr gs:[0x10]; 
0x00122dad: mov edi, ebp; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00115179: mov edi, ebp; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000c1fb0: mov edi, ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0009ef28: mov edi, ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x4bfac55], cl; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5589; 
0x00122cd2: mov edi, ecx; mov eax, 0x1a1; mov ecx, edx; mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x00109252: mov edi, esi; dec dword ptr [ebx - 0x76dfdba4]; ret 0x6b8; 
0x001234ea: mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001684a6: mov edi, esp; jmp dword ptr [esi - 0x70]; 
0x00123266: mov edx, 0; cmovb eax, edx; ret; 
0x0009d7f4: mov edx, 0; cmove eax, edx; ret; 
0x0009052e: mov edx, 0; cmovne eax, edx; ret; 
0x001145a8: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000832da: mov edx, 0x16; test eax, eax; cmovne eax, edx; ret; 
0x00082fad: mov edx, 0x21; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00124718: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000de70c: mov edx, 0x40; cmove eax, edx; ret; 
0x00083bcf: mov edx, 0x5f; mov eax, 0x16; cmove eax, edx; ret; 
0x0011cd4e: mov edx, 0x64; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; test eax, eax; cmove eax, edx; ret; 
0x0013647f: mov edx, 0x6afff95a; add eax, 0xb4858d50; jb 0x136484; call dword ptr [eax - 0x18]; 
0x000de643: mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x00084421: mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000de606: mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x0003d545: mov edx, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008b4f2: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00083ed7: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00089787: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844e3: mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008b90c: mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084c67: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000b7192: mov edx, 0x80000000; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00151ddb: mov edx, 0x810001c6; ret; 
0x001261db: mov edx, 0x81000482; ret; 
0x000821db: mov edx, 0x81000ec2; ret; 
0x0011c012: mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x000c3dff: mov edx, 0x858dfff6; movsb byte ptr es:[edi], byte ptr [esi]; cwde; stc; call dword ptr [eax - 0x73]; 
0x0008795a: mov edx, 0x89000000; clc; pop ebx; pop esi; pop edi; ret; 
0x00025862: mov edx, 0x8b0010b7; jl 0x2588d; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x000b83c2: mov edx, 0x8bfff774; jl 0xb83ed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0004d8c2: mov edx, 0x8bfffe1f; jl 0x4d8ed; adc al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x000c7582: mov edx, 0x8bffffe3; popfd; ror cl, 0xff; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x00068df5: mov edx, 0x8dfffff3; mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0015e761: mov edx, 0xb7e8ffed; sub ch, bh; jmp dword ptr [esi - 0x70]; 
0x00151dc2: mov edx, 0xe8ffedda; push ebp; std; jmp dword ptr [esi - 0x70]; 
0x000de665: mov edx, 0xfa; pop ebx; cmove eax, edx; ret; 
0x000de628: mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000de5d6: mov edx, 0xfffa; cmove eax, edx; pop ebx; ret; 
0x00082cc1: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0009b0b4: mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x0018e1b5: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x0002479d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000de7c6: mov edx, 0xffffffff; cmp dword ptr gs:[eax], 0x26; mov eax, 0x20; cmovne eax, edx; ret; 
0x00115e18: mov edx, 0xffffffff; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee8: mov edx, 0xffffffff; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0014afa0: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x0009b103: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0009b0ef: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000de676: mov edx, 0xffffffff; pop ebx; cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x0007f689: mov edx, 0xffffffff; ret; 
0x0007ae8b: mov edx, 0xffffffff; test eax, eax; je 0x7aec8; mov eax, edx; pop ebx; ret; 
0x00118a29: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082c05: mov edx, 1; call dword ptr gs:[0x10]; 
0x0016b71b: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00090da6: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008acdf: mov edx, 1; mov eax, 0xf0; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001709ca: mov edx, 1; mov eax, 0xf0; xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007a5b8: mov edx, 1; mov eax, edx; ret; 
0x0011446e: mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0014afb0: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008270f: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000849d0: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002153b: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008a94e: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082e16: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000844b1: mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00085136: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00124819: mov edx, 2; mov ecx, dword ptr [ebp - 0x500]; mov dword ptr [ebp - 0x4e0], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0011c996: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00082632: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000826b1: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00088a0f: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00081c6f: mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00081ca6: mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00081c65: mov edx, dword ptr [0x80]; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00083888: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0019cfb8: mov edx, dword ptr [eax + 0x10]; test edx, edx; je 0x19cfcc; sub esp, 0xc; push eax; call edx; 
0x00146968: mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x0015e2dd: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0015e7cf: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015a652: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0015dc63: mov edx, dword ptr [eax + 0x20]; push ebx; push eax; call dword ptr [edx + 4]; 
0x0015a715: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x0015529f: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0007e80d: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0015ff42: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0007a646: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00081cda: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0015e7d8: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001557ec: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0015caa9: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0015fed9: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0006b6ee: mov edx, dword ptr [eax + esi]; sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0015f7de: mov edx, dword ptr [eax - 0x150]; lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x0002140e: mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x0008b37c: mov edx, dword ptr [eax]; and edx, 2; je 0x8b390; xor eax, eax; ret; 
0x000c8dd7: mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xc8dd0; ret; 
0x000f5ec8: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00085ca1: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00103508: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000837b8: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00075bea: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0016d4b7: mov edx, dword ptr [eax]; test edx, edx; jne 0x16d4c8; add esp, 8; pop ebx; ret; 
0x0003818e: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0007a89f: mov edx, dword ptr [ebp - 0x34]; lea esi, [esi]; mov eax, edi; call dword ptr gs:[0x10]; 
0x0012cbca: mov edx, dword ptr [ebp - 0x4c]; add esp, 0xc; push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00083c0d: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x000dc0f4: mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x0003b7c1: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000dc0ee: mov edx, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; mov edx, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000813ff: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0002ec1f: mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x0002cbe0: mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002ccf2: mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x000847d0: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x84810; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008134b: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00124f60: mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0012e473: mov edx, dword ptr [ecx + 0xc]; push esi; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x0016d7d0: mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x0011f94f: mov edx, dword ptr [ecx]; cmp edx, 0x26; je 0x11f9a4; pop ebx; pop esi; ret; 
0x00083068: mov edx, dword ptr [edi + 0x10]; test edx, edx; je 0x830b0; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008312e: mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0012dfab: mov edx, dword ptr [edi + 0xc]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x00156e5d: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x000993f8: mov edx, dword ptr [edi - 0x148]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00139c31: mov edx, dword ptr [edi]; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00156c20: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x00156c33: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0012e95f: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x00156c63: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0015ce7a: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x0015d88a: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0007a69f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007a56f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0015a1c0: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x000710bc: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x00070fbd: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00082da0: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0013dad1: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x000fa2e7: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000216e1: mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x000377d0: mov edx, dword ptr [edx - 0x134]; neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00074e23: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x74e20; ret; 
0x0007e5f3: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x7e5f0; ret; 
0x00081da2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dc2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081de2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081e02: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x00088982: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00088962: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00093622: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x00093602: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000936b2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x000935b2: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x0012448c: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0008ddfc: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x10], ecx; je 0x8de10; ret; 
0x0012603a: mov edx, dword ptr [edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00081b89: mov edx, dword ptr [edx]; push ebx; push eax; push ecx; call edx; 
0x000b5461: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x0012e3b2: mov edx, dword ptr [esi + 0x30]; push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0012e74e: mov edx, dword ptr [esi + 0x30]; push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x000aed52: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0006df15: mov edx, dword ptr [esi + eax*4 - 0x735e0]; add edx, ebx; jmp edx; 
0x0002cceb: mov edx, dword ptr [esi + edi*4 - 4]; mov dword ptr [ebp - 0x40], edx; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x0012dda5: mov edx, dword ptr [esi - 0x18]; push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x000b2163: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed10: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011ea34: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ab020: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000b2134: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecf1: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab001: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00127fa7: mov edx, dword ptr [esi]; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x00082a9e: mov edx, dword ptr [esi]; test edx, edx; je 0x82a80; sub esp, 0xc; push eax; call edx; 
0x00122df9: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db3: mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d47: mov edx, dword ptr [esp + 0x10]; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008cbbd: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00107b7b: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121875: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121475: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108005: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a545: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a485: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109325: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113185: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea45: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121525: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121225: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a025: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121315: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121345: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9745: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121595: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd265: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e85: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de035: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de065: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e55: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a145: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a115: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce75: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda5: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0003048b: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x000872fd: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001745ee: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009257a: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a4ea: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100fa: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceaa: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012a: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213da: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011486d: mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x001560a9: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001234f5: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f9de: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x11fa00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000f6a5b: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00107842: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f9a20: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000584bb: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011a17f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00109eef: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a41f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012175f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012155f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012143f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x001215ff: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfaf: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf3f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce0f: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001768c3: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123993: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001637fc: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x163810; add esp, 0xc; ret; 
0x0016384c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x163860; add esp, 0xc; ret; 
0x00120afd: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00155ca6: mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x001037bc: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00130c5e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cce: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d7f: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0003aaa5: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd5: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x0008163e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817a6: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x00085977: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b627: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba87: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf83: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f3cc: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f658: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x001211d2: mov edx, dword ptr [esp + 0x1c]; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0014058d: mov edx, dword ptr [esp + 0x20]; call edx; 
0x00119cd4: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0016abf9: mov edx, dword ptr [esp + 0x24]; call edx; 
0x000f9843: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003b95c: mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011f8a7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b987: mov edx, dword ptr [esp + 0x28]; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115017: mov edx, dword ptr [esp + 0x28]; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d7: mov edx, dword ptr [esp + 0x28]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f737: mov edx, dword ptr [esp + 0x28]; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c7: mov edx, dword ptr [esp + 0x28]; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108687: mov edx, dword ptr [esp + 0x28]; mov eax, 4; call dword ptr gs:[0x10]; 
0x00117157: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x00176941: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000cd720: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011fb13: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001020e6: mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00123f6b: mov edx, dword ptr [esp + 0x38]; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001151ab: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011535b: mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00102111: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021e1: mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00107776: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc58e: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc5bf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f52f: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f5ff: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6cf: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230df: mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0015fee4: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x000da7f6: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00092915: mov edx, dword ptr [esp + 0x48]; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092675: mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000928a1: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092605: mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000926b9: mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x00092709: mov edx, dword ptr [esp + 0x48]; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00123405: mov edx, dword ptr [esp + 0x48]; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0011fc14: mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001148c0: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001232cc: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00068632: mov edx, dword ptr [esp + 0x70]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000dc2ae: mov edx, dword ptr [esp + 0x88]; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00107f37: mov edx, dword ptr [esp + 0x98]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00108b48: mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00108a1a: mov edx, dword ptr [esp + 0x98]; mov esi, ebp; call dword ptr gs:[0x10]; 
0x001633d8: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007107f: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00116b50: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000361a5: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0016e02f: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000d5e00: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x00087e68: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00087ea3: mov edx, dword ptr [esp + 0xc]; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000684fb: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x000687fb: mov edx, dword ptr [esp + 0xc]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x0010357a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x001143d1: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115fee: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x001171c8: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x0011ae72: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00122bc2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x00142494: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e0: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x00144227: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0015eb0d: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015f029: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x00170bb2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x0003b4b7: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50a: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b557: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5aa: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x00058391: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x000c9b17: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d356b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bfb: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x0008cb7d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008402d: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0002fe38: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe58: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002f66e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00162ff4: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003a8b4: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00081d9e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dbe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081dde: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081dfe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008897e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008895e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0009361e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935fe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000936ae: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x000935ae: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x0016e058: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x001638c0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00083ac8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00083cd4: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x00080038: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e008: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de78: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010dcc8: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f568: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00083cb8: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00088a62: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d91a: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016e49d: mov edx, dword ptr [esp]; ret; 
0x001171fb: mov edx, dword ptr es:[edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x00088a0e: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00081c6e: mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00081ca5: mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00081c64: mov edx, dword ptr gs:[0x80]; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0011f94e: mov edx, dword ptr gs:[ecx]; cmp edx, 0x26; je 0x11f9a4; pop ebx; pop esi; ret; 
0x00126039: mov edx, dword ptr gs:[edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00127fa6: mov edx, dword ptr gs:[esi]; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x000dc74d: mov edx, eax; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x001169c9: mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a99: mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003783e: mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x00084724: mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084e95: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00109259: mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010941d: mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x00080014: mov edx, eax; mov eax, dword ptr [eax]; test eax, eax; jne 0x80010; ret; 
0x00084be5: mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x000a0ab8: mov edx, eax; xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x00195200: mov edx, eax; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x0010807a: mov edx, ebp; call dword ptr gs:[0x10]; 
0x00090988: mov edx, ebp; mov dword ptr [esp + 0x28], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001080ae: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0010f8e6: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x00108ef3: mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000d6567: mov edx, ebp; mov ebx, 1; call dword ptr gs:[0x10]; 
0x000d647d: mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d65e2: mov edx, ebp; mov edi, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d63b4: mov edx, ebp; mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x00080bf9: mov edx, ebp; pop ebp; ret; 
0x00021a63: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000b77c2: mov edx, ebp; pop edi; pop ebp; ret; 
0x0006de01: mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0010316d: mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00121694: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001213a4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001214c4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00116b04: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00121824: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc634: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010a574: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116924: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00107d94: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00107d94: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00116954: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001216c4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011ea74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e54: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121254: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121664: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dc084: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121404: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf34: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0011f4b4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0011f4b4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000ddfe4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a214: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f9774: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010a514: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001094a4: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0011ee74: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee94: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011ee94: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00121374: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x001214f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f264: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121724: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121794: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037774: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf64: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116124: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a454: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e84: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116244: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121284: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f54: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9714: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd04: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf74: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf04: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e4: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x001032a2: mov edx, ebx; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0009095d: mov edx, ecx; mov ecx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0010fa88: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0011e962: mov edx, ecx; pop edi; pop ebp; ret; 
0x0003641e: mov edx, ecx; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003836d: mov edx, edi; call dword ptr gs:[0x10]; 
0x00085ea2: mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000d64e9: mov edx, edi; mov dword ptr [esp + 0xc], eax; mov eax, 0x10b; call dword ptr gs:[0x10]; 
0x001081fe: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0003847c: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0x1a5; call dword ptr gs:[0x10]; 
0x0003842c: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xb1; call dword ptr gs:[0x10]; 
0x00108cea: mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00122cdb: mov edx, edi; mov edi, ebp; call dword ptr gs:[0x10]; 
0x000762d5: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0007631f: mov edx, edi; pop edi; pop ebp; ret; 
0x000cd921: mov edx, esi; call dword ptr gs:[0x10]; 
0x00170a5f: mov edx, esi; mov edi, eax; mov eax, ebp; call dword ptr gs:[0x10]; 
0x000368d1: mov edx, fs; add byte ptr [eax], al; add byte ptr [ecx + 0x9024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00199695: mov es, esi; add eax, 0x9c8b0000; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x00087dd5: mov es, word ptr [eax - 0x76000726]; push esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x0019328e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001926fe: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x0009a189: mov esi, 0x10c483c2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001423a9: mov esi, 0x244c8bf1; adc byte ptr [ebx - 0x13b77], cl; jmp dword ptr [ebp - 0x75]; 
0x0013b126: mov esi, 0x39000002; ret; 
0x000c132b: mov esi, 0x39ae048b; ret; 
0x000991a1: mov esi, 0x3b58; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x00086015: mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x001638d7: mov esi, 0x810000ab; ret; 
0x001537d7: mov esi, 0x810001ac; ret; 
0x0011cbd7: mov esi, 0x81000518; ret; 
0x000f94d7: mov esi, 0x8100074f; ret; 
0x000dd7d7: mov esi, 0x8100090c; ret; 
0x0007bcd7: mov esi, 0x81000f27; ret; 
0x0002c6d7: mov esi, 0x8100141d; ret; 
0x0016e6d7: mov esi, 0x81fffffd; ret; 
0x000d12d1: mov esi, 0x83d3890a; ret 0x8901; 
0x000c30e1: mov esi, 0x83d789c0; rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x000fab51: mov esi, 0x83df89ca; ret; 
0x00050f9c: mov esi, 0x83ea2900; rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x0010faee: mov esi, 0x89000036; ret 0xdaf7; 
0x0002d5a7: mov esi, 0x895f3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x000cb1bb: mov esi, 0x89fff8e4; ret 0x80b8; 
0x000c7862: mov esi, 0x89fffffd; ret 0x858d; 
0x0007cc0b: mov esi, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00056133: mov esi, 0x8b572444; xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x00091934: mov esi, 0x8d88758b; xchg byte ptr [eax - 0x7c], cl; stc; call dword ptr [eax + 0x68]; 
0x000623be: mov esi, 0x8dffffe1; mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5134b]; jmp dword ptr [ebp - 0x75]; 
0x0002cced: mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x000a0d04: mov esi, 0xda390114; je 0xa0d00; pop ebx; ret; 
0x0019476e: mov esi, 0xf6000000; ret 0xf0f; 
0x000a0d65: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00086753: mov esi, 8; call dword ptr gs:[0x10]; 
0x000866d3: mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00037643: mov esi, 8; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x00038366: mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x00085e9d: mov esi, 8; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0004a6bb: mov esi, dword ptr [eax + 0x28]; mov ebp, dword ptr [eax + 0x2c]; mov ebx, dword ptr [eax + 0x34]; xor eax, eax; ret; 
0x00037334: mov esi, dword ptr [eax + 4]; mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0013c287: mov esi, dword ptr [ebp - 0x40]; mov eax, dword ptr [ebp - 0x3c]; mov dword ptr gs:[esi], eax; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00090bad: mov esi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x00130f20: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x00057efb: mov esi, dword ptr [ecx]; stc; call dword ptr [eax - 1]; 
0x0004a7c3: mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x0011481f: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f224: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00121053: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0010fa84: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00077000: mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00107391: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000584c3: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120b0a: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001037c4: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00058523: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x58560; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x00047bd6: mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f9915: mov esi, dword ptr [esp + 0x34]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000d5e35: mov esi, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000dc592: mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc5c3: mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f533: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f603: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6d3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230e3: mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x0010777e: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00123322: mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x001142c6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000928ac: mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x0009296b: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x117; call dword ptr gs:[0x10]; 
0x000929bb: mov esi, dword ptr [esp + 0x4c]; mov eax, 0x1a2; call dword ptr gs:[0x10]; 
0x00123409: mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00110353: mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102ae: mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0006ddfd: mov esi, dword ptr [esp + 0x70]; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x00120a6b: mov esi, dword ptr [esp + 0xa0]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00064fba: mov esi, dword ptr [esp + 0xc]; push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000d63b6: mov esi, dword ptr [esp + 4]; call dword ptr gs:[0x10]; 
0x000d65e6: mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d6479: mov esi, dword ptr [esp + 4]; mov edx, ebp; mov edi, eax; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x0016e4a5: mov esi, dword ptr [esp]; ret; 
0x00168839: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x001561c8: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0008a36e: mov esi, eax; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000930d0: mov esi, ebp; call dword ptr gs:[0x10]; 
0x00114871: mov esi, ebx; call dword ptr gs:[0x10]; 
0x001147a0: mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000882c3: mov esi, ecx; call dword ptr gs:[0x10]; 
0x0011fd32: mov esi, edi; call dword ptr gs:[0x10]; 
0x00086092: mov esi, edx; call dword ptr gs:[0x10]; 
0x000b364f: mov esi, edx; cld; pop edi; ret; 
0x00088c22: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000b3c63: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000b3cf3: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b3cc9: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3629: mov esi, edx; pop edi; ret; 
0x00123fdb: mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000b3d43: mov esi, edx; ret; 
0x0009e454: mov esi, esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x00088fe5: mov esi, esp; add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001087ca: mov esi, esp; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0012e56d: mov esp, 0; push 0x1000002; call edx; 
0x0008d275: mov esp, 0x1a20c3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0005b34b: mov esp, 0x1fffffb; ret 0xd801; 
0x0005e306: mov esp, 0x1fffffb; ret 0xf001; 
0x00195212: mov esp, 0x20b8d2; add byte ptr [eax], al; add eax, edx; ret; 
0x00054416: mov esp, 0x31d829d2; fstp xword ptr [ecx]; ret 0xbb7d; 
0x001415e0: mov esp, 0x31fffffb; rol byte ptr [ebx - 0x7c9aef3c], cl; cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x00082d80: mov esp, 0x390005ae; ret; 
0x00076633: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00116b46: mov esp, 0x530010f4; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016fafb: mov esp, 0x55000000; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0019954c: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x00057734: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0016a132: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x00147dac: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x00022290: mov esp, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000aaef0: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000aabf0: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000a16aa: mov esp, 0x5fd001d2; pop esi; ret; 
0x000b2c51: mov esp, 0x5ff801c0; ret; 
0x0002fef0: mov esp, 0x65fffffe; add eax, dword ptr [0]; ret; 
0x0011c6ac: mov esp, 0x6afff9a0; push 0x93818d50; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x000b2c81: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000b2c94: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000b2cb4: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b2ca4: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x00079b85: mov esp, 0x7e0c828d; stc; call dword ptr [eax - 0x73]; 
0x00168ed9: mov esp, 0x81000055; ret; 
0x0015bcd9: mov esp, 0x81000127; ret; 
0x0014aad9: mov esp, 0x81000239; ret; 
0x001262d9: mov esp, 0x81000481; ret; 
0x0011bed9: mov esp, 0x81000525; ret; 
0x00111fd9: mov esp, 0x810005c4; ret; 
0x000ccfd9: mov esp, 0x81000a14; ret; 
0x0009bed9: mov esp, 0x81000d25; ret; 
0x000873d9: mov esp, 0x81000e70; ret; 
0x0007e3d9: mov esp, 0x81000f00; ret; 
0x000776d9: mov esp, 0x81000f6d; ret; 
0x00073cd9: mov esp, 0x81000fa7; ret; 
0x000707d9: mov esp, 0x81000fdc; ret; 
0x0006ced9: mov esp, 0x81001015; ret; 
0x000233d9: mov esp, 0x810014b0; ret; 
0x0019d1d9: mov esp, 0x81fffd12; ret; 
0x001789d9: mov esp, 0x81ffff5a; ret; 
0x00106ce0: mov esp, 0x83000002; les ebx, ptr [eax]; pop ebx; ret; 
0x0007c3c0: mov esp, 0x83000005; in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x000aa8f3: mov esp, 0x83ce01d2; ret 0x2910; 
0x000a16b4: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000a16ce: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000a16c1: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000945a0: mov esp, 0x83fffffd; les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e4690: mov esp, 0x89000000; ret; 
0x00056139: mov esp, 0x89fffffe; ret; 
0x00141e45: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014dc84: mov esp, 0x8bfffffe; add byte ptr [ebx - 0x7bf0fe08], al; cli; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x0002ff40: mov esp, 0x8bfffffe; inc edx; xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x00107394: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0008c47b: mov esp, 0x8d0cec83; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0012ee0f: mov esp, 0x8db075ff; cmp byte ptr [eax + 0x58], 0xf9; call dword ptr [edx - 0x17]; 
0x0012ee44: mov esp, 0xa5b4828d; stc; call dword ptr [eax - 0x73]; 
0x0013ca9c: mov esp, 0xa788868d; stc; call dword ptr [eax - 0x73]; 
0x00192210: mov esp, 0xa8000000; inc eax; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x00156a68: mov esp, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0006a369: mov esp, 0xec83001b; or al, 0x8d; nop; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0013c2d4: mov esp, 0xee3e66e8; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0009b0ba: mov esp, 0xf042444; inc esp; ret 0xc083; 
0x001487c0: mov esp, 0xf6000002; ret 0xf08; 
0x0013c2df: mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0013c248: mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x00037341: mov esp, ecx; jmp edx; 
0x00130f1c: mov esp, edi; mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0004a7c1: mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x00130da6: mov esp, esi; jmp dword ptr [esi - 0x70]; 
0x00107b76: mov esp, fs; adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008f055: mov fs, esi; call dword ptr [ecx + 0x50]; 
0x000a5168: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00057332: mov fs, word ptr [ecx + edi*8 - 1]; dec dword ptr [ebx - 0x76dbdb8c]; ret 0xfa29; 
0x0013e03d: mov fs, word ptr [edi + 0x5d]; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0013c3a0: mov fs, word ptr [edi + edi*8 - 1]; dec dword ptr [ebp + 0x458b061c]; test byte ptr [ecx], al; ret 0x3883; 
0x00138bd1: mov gs, eax; dec ecx; test bh, bh; jmp dword ptr [esi - 0x70]; 
0x001672c3: mov gs, ebx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00093a4e: mov gs, ebx; inc eax; stc; jmp dword ptr [ebp - 0x5f]; 
0x00087bdb: mov gs, ebx; ret; 
0x0002d4a3: mov gs, word ptr [ecx + edi*8]; call dword ptr [edx + 0x50]; 
0x0019014c: mov ss, word ptr [edi + 0x5b000000]; pop esi; pop edi; pop ebp; ret; 
0x000aaf20: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000b231f: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee8c: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001145ad: mov word ptr [eax + 0x16], dx; ret; 
0x000b2439: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef96: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0007bdbb: mov word ptr [eax + 0x39000001], fs; ret 0x448b; 
0x0003b89e: mov word ptr [eax + 0xe], dx; xor eax, eax; pop ebx; pop esi; ret; 
0x000aed38: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b221f: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed9c: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00046b72: mov word ptr [eax + eax - 0x6b770000], ds; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x0002279a: mov word ptr [eax + eax], ss; mov dword ptr [esp], ebx; call esi; 
0x000b84ea: mov word ptr [eax + ebp*2], fs; add al, 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000be112: mov word ptr [eax + ebx*2], fs; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x000b86a3: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx + 0x244489da], cl; or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x0019a241: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7c07763a], cl; ret; 
0x000455f6: mov word ptr [eax + ecx*4], fs; add byte ptr [eax], al; add byte ptr [ecx - 0x7e38fe26], cl; ret 0; 
0x0010a088: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x53]; 
0x0019c130: mov word ptr [eax - 0x7d], ss; ret 0x8920; 
0x0019d34f: mov word ptr [eax], cs; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x000aed03: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2136: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecf3: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010298f: mov word ptr [eax], dx; xor eax, eax; ret; 
0x001087d5: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015a1c2: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00108730: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00038825: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38839; add esp, 0x9c; ret; 
0x00054c36: mov word ptr [eax], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0014be79: mov word ptr [ebp - 0x652637e], cs; call dword ptr [eax - 0x73]; 
0x0014be54: mov word ptr [ebx - 0x13380], cs; jmp dword ptr [ebp - 0x39]; 
0x0008c6cc: mov word ptr [ebx - 0x47f7dbb4], cs; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018b4df: mov word ptr [ebx - 0x86b80], cs; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000991ae: mov word ptr [ebx - 7], es; call dword ptr [ebx + 0x50]; 
0x001463f8: mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x0003b8f7: mov word ptr [ecx + 4], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a4d32: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a4d74: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4d00: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000a4cf0: mov word ptr [ecx], dx; pop ebx; ret; 
0x001071b0: mov word ptr [ecx], es; add byte ptr [eax], al; xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x000ac89c: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ab18c: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ac9a6: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ab296: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab048: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac7ac: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000ab09c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab016: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ac6d3: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ab003: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000aad20: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0010dccc: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f56c: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0018503c: mov word ptr [edx + 1], cx; movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x000a7128: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000a7268: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b154b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d48: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000a2e78: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000a10e4: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000a1014: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000a717c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72bc: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b15bf: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d8c: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a2ecc: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00068505: mov word ptr [edx - 0x737e0], es; add ecx, ebp; jmp ecx; 
0x00068805: mov word ptr [edx - 0x73860], es; add ecx, ebp; jmp ecx; 
0x00068a9e: mov word ptr [edx - 0x738e0], es; add ecx, ebp; jmp ecx; 
0x000689fe: mov word ptr [edx - 0x739e0], es; add ecx, ebp; jmp ecx; 
0x001775e5: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fb5: mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b4ec: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d50c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001849bc: mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00177605: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fd5: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b580: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d5a0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00184a50: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x000a70e3: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a7223: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a70f3: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000a7233: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000a2d23: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000a2e43: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b14e6: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2d13: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a2e33: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0017db5b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0017bb6b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184fbb: mov word ptr [edx], cx; pop ebx; ret; 
0x000a1098: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a0fe0: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000a0fd8: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x0016b990: mov word ptr [esi - 4], ss; jmp dword ptr [esi - 0x70]; 
0x000dcd09: mov word ptr [esi - 7], es; call dword ptr [eax - 0x18]; 
0x0006dc7c: mov word ptr [esp + ecx*4], fs; add byte ptr [eax], al; add al, ch; leave; ret 0xffff; 
0x00198059: mov word ptr [esp + ecx*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x00108a14: mov word ptr [esp + edx*4], fs; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0010fdb3: mov word ptr [esp + edx], fs; add dword ptr [eax], eax; add byte ptr [ecx - 0x76efdbbc], cl; ret 0x4c89; 
0x00184ea9: movd dword ptr [eax + 4], mm0; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x001848bf: movd dword ptr [eax - 0x10], mm0; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001849f9: movd dword ptr [eax - 0xa], mm0; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b3e9: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d419: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001848c9: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184969: movd dword ptr [eax - 9], mm0; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017ba89: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184ee9: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x0017b61a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d63a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00184ada: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00184ad0: movdqa xmm0, xmmword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017786e: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d63f: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x0017721e: movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017789e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017724e: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00184b9f: movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001778ce: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017727e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00184c4f: movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001772ae: movdqa xmmword ptr [edx - 0x13], xmm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017792e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001772de: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184d6f: movdqa xmmword ptr [edx - 0x14], xmm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017795e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017730e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017798e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017733e: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017736e: movdqa xmmword ptr [edx - 0x17], xmm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001779fe: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017739e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184abf: movdqa xmmword ptr [edx - 0x18], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00177a2e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001773ce: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177a6e: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001773fe: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017746e: movdqa xmmword ptr [edx - 0x1c], xmm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017749e: movdqa xmmword ptr [edx - 0x1d], xmm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001774ce: movdqa xmmword ptr [edx - 0x1e], xmm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b615: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d635: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00184ad5: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00177869: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177219: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00177309: movdqa xmmword ptr [edx - 0x25], xmm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177339: movdqa xmmword ptr [edx - 0x26], xmm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00177864: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177214: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017720f: movdqa xmmword ptr [edx - 0x40], xmm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000a70c0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7370: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a2f80: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000aee50: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2520: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af04d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24c0: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefed: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24e0: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af00d: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2500: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af02d: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22fa: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee64: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeee7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b235a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeec7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b233a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeea7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22d7: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee54: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b231b: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee88: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b251c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af049: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24bc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefe9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24dc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af009: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24fc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af029: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef69: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefac: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefcc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23dc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef49: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef8d: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b239c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef09: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23bc: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef29: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aca6d: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ab370: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab34d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000accbc: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ab58c: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000aca0d: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ab2ed: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30d: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000aca4d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ab32d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab470: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac864: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ab167: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab1c7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab1a7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab188: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab349: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab2e9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab309: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab329: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab249: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab209: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab229: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab154: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a70c4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7374: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf4: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a2f84: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b2403: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef6d: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2463: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2493: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefd0: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23e0: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef4d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2434: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef91: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23a0: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef0d: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23c0: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef2d: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2280: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedfd: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22a0: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1d: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22c0: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3d: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b223a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedb7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b225a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedd7: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21d7: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed64: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b221b: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed98: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b227c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedf9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b229c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee19: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22bc: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee39: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4da4: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a4db4: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dc4: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dd4: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d60: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a4d80: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d90: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d70: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4da0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a4db0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dc0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dd0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d50: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000ac95d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ab270: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab2b0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab2d0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab291: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab24d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab20d: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac93d: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ab22d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab454: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac80d: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ab0fd: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab464: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab11d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab13d: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab3f0: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac774: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ab077: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab0b7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab0d7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab098: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab450: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab0f9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab460: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab119: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab139: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab064: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000aba8d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbed: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b1620: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa42d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa58d: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000a71bd: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dcd: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f2d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000abaad: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b1640: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa44d: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ad: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a71dd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2ded: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f4d: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000abacd: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b1660: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa46d: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5cd: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a71fd: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e0d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59e0: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f6d: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ab95c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa31c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ed: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8ef8: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b188c: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b14bc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af8: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae60c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000a9f99: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7044: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a7284: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a8e7f: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ae6e7: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ae707: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a7157: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a7297: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2d67: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a2ea7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b1830: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a7197: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72d7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2da7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a2ee7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a7087: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72f7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a8eb7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a4ab7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2cb7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a5a30: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a2f07: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ae727: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ae747: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001951c4: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1465: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a7f: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c74: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5aa9: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a2e94: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a7178: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72b8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2d88: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a2ec8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a71b9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7319: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f29: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a71d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a7339: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2de9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f49: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a71f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a7359: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e09: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59dc: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f69: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a8ef4: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b14b8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af4: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae608: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000aba84: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa424: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa584: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa444: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa464: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab953: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc44: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa313: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000aba88: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b161b: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa428: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa588: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc08: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa448: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc28: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa468: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab957: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc48: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa317: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7290: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a72d0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a72f0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f00: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a7040: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a7280: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a8e7b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001951c0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1461: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a7b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c70: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5aa5: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a2e90: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000abbe0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa580: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abc00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa5a0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abc20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa5c0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000abc40: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa5e0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7310: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2f20: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7330: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f40: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7350: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f60: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000aed70: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21d3: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed60: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab060: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a71b4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7314: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f24: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7334: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f44: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7354: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f64: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000aedf4: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2404: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef6e: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2464: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2494: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefd1: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23e1: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef4e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2435: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef92: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23a1: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef0e: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23c1: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef2e: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2281: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedfe: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22a1: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1e: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22c1: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3e: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b223b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedb8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b225b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedd8: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21d8: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed65: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b221c: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed99: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b227d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedfa: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b229d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee1a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22bd: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee3a: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4da5: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a4db5: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dc5: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dd5: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d61: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000a4d81: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000a4d91: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000a4d71: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000a4da1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000a4db1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dc1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dd1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d51: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000ac95e: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ab271: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab2b1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab2d1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab292: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab24e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab20e: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ac93e: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ab22e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab455: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac80e: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ab0fe: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab465: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab11e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab13e: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab3f1: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ac775: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ab078: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ab0b8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab0d8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab099: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab451: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab0fa: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab461: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab11a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab13a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab065: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000aba8e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbee: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b1621: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa42e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa58e: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000a71be: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dce: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f2e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000abaae: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b1641: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa44e: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ae: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a71de: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2dee: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f4e: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000abace: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b1661: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa46e: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ce: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a71fe: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e0e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59e1: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f6e: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000ab95d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa31d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ee: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a8ef9: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b188d: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b14bd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af9: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae60d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000a9f9a: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7045: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a7285: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a8e80: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000ae6e8: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000ae708: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a7158: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a7298: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2d68: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a2ea8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b1831: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a7198: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72d8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2da8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a2ee8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a7088: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72f8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a8eb8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000a4ab8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2cb8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a5a31: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a2f08: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000ae728: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000ae748: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001951c5: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1466: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a80: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c75: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5aaa: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a2e95: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000a7179: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72b9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2d89: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a2ec9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000a71ba: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a731a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dca: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f2a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a71da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a733a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2dea: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f4a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a71fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a735a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e0a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59dd: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f6a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a8ef5: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000b14b9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4af5: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000ae609: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000aba85: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa425: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa585: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa445: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa465: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab954: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc45: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa314: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000aba89: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000abbe9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b161c: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa429: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000aa589: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abaa9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc09: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa449: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5a9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abac9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc29: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa469: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5c9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000ab958: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc49: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa318: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5e9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7291: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2ea1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a72d1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2ee1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a72f1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2f01: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a7041: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a7281: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a8e7c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001951c1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b1462: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000a4a7c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000a2c71: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a5aa6: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000a2e91: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000abbe1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000aa581: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000abc01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000aa5a1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000abc21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000aa5c1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000abc41: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000aa5e1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000a7311: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2f21: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7331: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f41: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7351: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f61: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000aed71: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21d4: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed61: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab061: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000a71b5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000a7315: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000a2dc5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f25: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000a7335: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2f45: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000a7355: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2f65: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000aedf5: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0017b61b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d63b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00184adb: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00184ad1: movq mm0, qword ptr [eax - 0x20]; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x000a70c1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7371: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000a2f81: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000aee51: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2521: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af04e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24c1: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefee: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24e1: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af00e: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b2501: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af02e: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22fb: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee65: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aeee8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b235b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeec8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b233b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aeea8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22d8: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee55: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b231c: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee89: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b251d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af04a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24bd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefea: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24dd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af00a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b24fd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af02a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef6a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefad: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aefcd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23dd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef4a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef8e: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b239d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef0a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b23bd: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef2a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aca6e: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ab371: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab34e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000accbd: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ab58d: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000aca0e: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ab2ee: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30e: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000aca4e: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ab32e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ab471: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ac865: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ab168: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab1c8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab1a8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab189: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab34a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab2ea: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab32a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab24a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab20a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab22a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab155: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0017ba4d: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184ead: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0017786f: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d640: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x0017721f: movq qword ptr [edx - 0x10], mm0; pop ebx; ret; 
0x001848c3: movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x0017789f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017724f: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00184ba0: movq qword ptr [edx - 0x11], mm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001778cf: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017727f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00184c50: movq qword ptr [edx - 0x12], mm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x001772af: movq qword ptr [edx - 0x13], mm0; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017792f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001772df: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184d70: movq qword ptr [edx - 0x14], mm0; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; pop ebx; ret; 
0x0017795f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017730f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017798f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017733f: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017736f: movq qword ptr [edx - 0x17], mm0; mov dword ptr [edx - 7], eax; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001779ff: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017739f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184ac0: movq qword ptr [edx - 0x18], mm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00177a2f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001773cf: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00177a6f: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001773ff: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017746f: movq qword ptr [edx - 0x1c], mm0; movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x0017749f: movq qword ptr [edx - 0x1d], mm0; movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001774cf: movq qword ptr [edx - 0x1e], mm0; movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b616: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d636: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00184ad6: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017786a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017721a: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x0017730a: movq qword ptr [edx - 0x25], mm0; movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017733a: movq qword ptr [edx - 0x26], mm0; movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00177865: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177215: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00177210: movq qword ptr [edx - 0x40], mm0; movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; pop ebx; ret; 
0x00177a73: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177403: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x0017b52d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d54d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001849fd: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x00177473: movq qword ptr [edx - 0xc], xmm0; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001774a3: movq qword ptr [edx - 0xd], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001774d3: movq qword ptr [edx - 0xe], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00177a03: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d41d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001773a3: movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00177a33: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001773d3: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0017b49d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d4bd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0018496d: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000a70c5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7375: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf5: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a2f85: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0017ba8c: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184eec: movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00184ea8: movq xmm0, qword ptr [eax + 4]; movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; pop ebx; ret; 
0x001848be: movq xmm0, qword ptr [eax - 0x10]; movq qword ptr [edx - 0x10], xmm0; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x001849f8: movq xmm0, qword ptr [eax - 0xa]; movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b3e8: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d418: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001848c8: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00184968: movq xmm0, qword ptr [eax - 9]; movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017ba88: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184ee8: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x00143fe6: movsb byte ptr es:[edi], byte ptr [esi]; add al, byte ptr [eax]; add eax, 0xe2017; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x001603ad: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x1603d8; sbb al, 0x53; call eax; 
0x000563bd: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, dl; jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x00149b36: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a02a7d], cl; call dword ptr [eax - 0x73]; 
0x000f1993: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x17fbdbbc], cl; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x00078736: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000c8988: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0015f7e7: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; mov dword ptr gs:[edx], eax; ret; 
0x000c59e8: movsb byte ptr es:[edi], byte ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x361f7b], cl; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000c3de8: movsb byte ptr es:[edi], byte ptr [esi]; cwde; stc; call dword ptr [eax - 0x73]; 
0x00133378: movsb byte ptr es:[edi], byte ptr [esi]; fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x00050bd8: movsb byte ptr es:[edi], byte ptr [esi]; in al, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00087264: movsb byte ptr es:[edi], byte ptr [esi]; jg 0x87260; call dword ptr [eax - 0x18]; 
0x00026fa1: movsb byte ptr es:[edi], byte ptr [esi]; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b3c5f: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00137260: movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; stc; call dword ptr [eax - 1]; 
0x0016ae78: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0003ffbb: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001255c5: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x000fe014: movsb byte ptr es:[edi], byte ptr [esi]; sahf; stc; call dword ptr [eax - 0x73]; 
0x000e9dd9: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x0012d29a: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x000f2e4b: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x17]; 
0x0012c668: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x0012c90f: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x0016e7e3: movsb byte ptr es:[edi], byte ptr [esi]; stc; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0015d838: movsb byte ptr es:[edi], byte ptr [esi]; sub al, 0xed; call dword ptr [eax - 0x73]; 
0x00065417: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebp + 0x10e74c0], al; ret; 
0x00038362: movsd dword ptr es:[edi], dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [esi + 8], bh; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0006534b: movsd dword ptr es:[edi], dword ptr [esi]; cld; jmp dword ptr [esi - 0x70]; 
0x00030167: movsd dword ptr es:[edi], dword ptr [esi]; cmp cl, byte ptr [eax]; add byte ptr [ebx - 0x137cef3c], al; or byte ptr [ebp - 0x68cc37b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0010097a: movsd dword ptr es:[edi], dword ptr [esi]; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004b1a0: movsd dword ptr es:[edi], dword ptr [esi]; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0009af32: movsd dword ptr es:[edi], dword ptr [esi]; idiv bh; cmovne eax, edx; ret; 
0x00083c51: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0014f720: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000de706: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000b364e: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000b3cf2: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b3cc8: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3628: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x0013371a: movsd dword ptr es:[edi], dword ptr [esi]; pop ecx; stc; call dword ptr [edi - 0x73]; 
0x00083839: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0014dab4: movsd dword ptr es:[edi], dword ptr [esi]; popal; stc; call dword ptr [eax - 1]; 
0x000b3cc6: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3626: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b3d3f: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0004b1be: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0012ee58: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012bc78: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0004d62a: movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000b3d41: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b3cc5: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3625: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x000b3d3e: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000a0d03: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xa0d00; pop ebx; ret; 
0x00163648: movzx eax, al; add esp, 0x1c; ret; 
0x0010a3c6: movzx eax, al; add esp, 0x4c; ret; 
0x00158698: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x00118b6e: movzx eax, al; add esp, 8; pop ebx; ret; 
0x001310c3: movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0008f219: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x000de8ad: movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x00037158: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000825b9: movzx eax, al; mov dword ptr [edx + 8], eax; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x7c], edx; ret; 
0x000f9aec: movzx eax, al; neg eax; ret; 
0x0007dbc7: movzx eax, al; pop ebx; neg eax; ret; 
0x00158612: movzx eax, al; pop ebx; pop esi; ret; 
0x00082125: movzx eax, al; pop ebx; ret; 
0x00038022: movzx eax, al; ret; 
0x0010a5d6: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0008f0e5: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0014793e: movzx eax, ax; add esp, 0x2c; ret; 
0x0013dc3e: movzx eax, byte ptr [eax + 1]; shr eax, 1; ret; 
0x000684ff: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x000687ff: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00068a98: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689f8: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x00068448: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x0007f736: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x0018eb1d: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191c27: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0017b57c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d59c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00184a4c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0007ef01: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0017bc00: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00185040: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; pop ebx; ret; 
0x0018e872: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0007cf7e: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0006ddf8: movzx eax, byte ptr [edi + ecx - 0x20]; mov esi, dword ptr [esp + 0x70]; mov edx, ebx; add edx, dword ptr [esi + eax*4]; jmp edx; 
0x0018e355: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x000e4389: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xe4361; xor eax, eax; ret; 
0x00188e6d: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x001876a4: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00188e8d: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001876b4: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00188ead: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001876c4: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00188ecd: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001876d4: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00188eed: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001876e4: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00188f0d: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001876f4: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00188e31: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00187684: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018b4f3: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000804c2: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0016f949: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0007b456: movzx eax, byte ptr [edx]; ret; 
0x00188e4c: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00187693: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00114159: movzx eax, byte ptr [esi + 0x23]; mov byte ptr [esp + 0x37], al; mov eax, dword ptr [esp + 0x84]; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x00186046: movzx eax, byte ptr [esi]; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x0002479a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0002fe90: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x0002fb5b: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0002fb2b: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x0002fafb: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0002fa3b: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0002fa9b: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x0002f9ab: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0002fa6b: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0002fa0b: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0002fc0b: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x0002f9db: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x0002facb: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0002f97b: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0012e913: movzx eax, word ptr [eax + edx*2]; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x000c8d7f: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x00143d29: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x143cf8; mov eax, 1; pop ebx; ret; 
0x0011e3fc: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00189120: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x188f80; pop ebp; xor eax, eax; ret; 
0x00188e69: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x001876a0: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x00188e89: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x001876b0: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x00188ea9: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x001876c0: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x00188ec9: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001876d0: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x00188ee9: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x001876e0: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x00188f09: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001876f0: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00188e2d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00187680: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0018e9d4: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191aca: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x0017b458: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d478: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00184928: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x000b3926: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xb3931; xor eax, eax; pop ebx; ret; 
0x0017bad8: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184f38: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; pop ebx; ret; 
0x00188e49: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00187690: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00103858: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x10383e; xor eax, eax; pop ebx; ret; 
0x00105fb8: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x105f9e; xor eax, eax; pop ebx; ret; 
0x000df5d8: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xdf5be; xor eax, eax; pop ebx; ret; 
0x000e1c78: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xe1c5e; xor eax, eax; pop ebx; ret; 
0x000f6b28: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf6b0e; xor eax, eax; pop ebx; ret; 
0x000f76e8: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf76ce; xor eax, eax; pop ebx; ret; 
0x0018e359: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0017b4e8: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d508: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x001849b8: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017bb68: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184fb8: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; pop ebx; ret; 
0x000a15f9: movzx edi, bl; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x001310c0: movzx edx, ax; movzx eax, al; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000fa340: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000df5f8: movzx edx, byte ptr [eax]; pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00159199: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x159190; pop ebx; ret; 
0x00034d45: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x0018e875: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00191714: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00191774: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00191744: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00191734: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00191705: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00081d11: movzx edx, dl; mov dword ptr [eax + 0x24], edx; mov byte ptr gs:[0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x00102988: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012699e: movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012603c: movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012689e: movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012669e: movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012679e: movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012649e: movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012671e: movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012651e: movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012659e: movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012681e: movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012641e: movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x000711f0: mul byte ptr [ebp - 0x39]; add byte ptr [esi], dl; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000b81b3: mul byte ptr [edx + 0xb]; add byte ptr [ecx + 0x16de49c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00154813: mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; 
0x00154813: mul byte ptr [edx - 7]; call dword ptr [eax + 0x6a]; pop es; call 0x14f970; add esp, 0x1c; ret; 
0x00154913: mul byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0013b9e3: mul byte ptr [esi - 0x77]; inc ebp; mov ah, 0x8b; test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00177a77: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0002b80a: mul dword ptr [edi - 0x7f74ffe1]; adc al, 0x10; add byte ptr [eax], al; ret; 
0x00158676: neg byte ptr [edi - 0x3b7d0000]; adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x00131035: neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0017470a: neg dword ptr [eax]; or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0018dec7: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x0018b637: neg eax; add esp, 4; pop ebx; ret; 
0x0003a8ba: neg eax; cmovs eax, edx; ret; 
0x000b4c1e: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0009259e: neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000377d6: neg eax; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x000216df: neg eax; mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x000360db: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00188f87: neg eax; pop ebp; ret; 
0x00021c2e: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0003c9aa: neg eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0004ac37: neg eax; pop ebx; pop esi; pop edi; ret; 
0x0008731a: neg eax; pop ebx; pop esi; ret; 
0x00103544: neg eax; pop ebx; ret; 
0x0018fc17: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0018f6b7: neg eax; pop edi; pop ebx; ret; 
0x001945d7: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000c8a37: neg eax; pop edi; pop esi; ret; 
0x00075cce: neg eax; pop esi; pop edi; pop ebp; ret; 
0x000872af: neg eax; pop esi; pop edi; ret; 
0x0007dbcb: neg eax; ret; 
0x0007b4f3: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00080e84: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176b84: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x000220b7: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0005842d: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003a8e6: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000d5de8: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0008cbd3: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0010fa9c: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003d519: neg edx; pop esi; pop edi; pop ebp; ret; 
0x00021c34: neg edx; ret; 
0x0002015b: nop dword ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0002015a: nop word ptr [eax + eax]; endbr32; jmp dword ptr [ebx + 0xc]; 
0x00088985: nop; adc al, 1; add byte ptr [eax], al; ret; 
0x00081e05: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000fab4c: nop; add al, 0; add byte ptr [edi], cl; mov esi, 0x83df89ca; ret; 
0x00081da5: nop; add al, 1; add byte ptr [eax], al; ret; 
0x001078d1: nop; add byte ptr [eax], al; add byte ptr [ebp - 0x47e7dbac], cl; or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d617c: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0008d359: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015fa5f: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00107f33: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00148ca8: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x0006f28c: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x73efb14], al; add dl, byte ptr [eax - 0x77]; ret; 
0x000b3df5: nop; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x000f5d4c: nop; add byte ptr [edi], cl; test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0002fc42: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0015c05a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0015c05a: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001161fd: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001687bb: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0005862f: nop; add dword ptr [edx + 4], 1; xor eax, eax; pop ebx; pop esi; ret; 
0x0019408f: nop; add eax, 1; pop edi; ret; 
0x000c8c2f: nop; add eax, 1; ret; 
0x000c8c3f: nop; add eax, 3; ret; 
0x000411e9: nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x001402fc: nop; add eax, dword ptr [eax]; add byte ptr [esi - 0x3f], ah; ret 0x8308; 
0x0004ab6f: nop; add eax, dword ptr [esp]; ret; 
0x0019350f: nop; add edx, 1; jl 0x1935d0; lea eax, [ecx + 1]; ret; 
0x001551df: nop; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x0014cdc7: nop; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0009d83f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x000f5e9f: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001189ef: nop; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00065330: nop; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0008b12f: nop; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0019296f: nop; and eax, 0x1fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019294f: nop; and eax, 0x3ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019297f: nop; and eax, 0x3fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019295f: nop; and eax, 0x7ff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0019298f: nop; and eax, 0x7fff; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000b333f: nop; bsf eax, eax; add eax, edx; ret; 
0x000b2c5f: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000b335f: nop; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000b332f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000b2f0f: nop; bsr eax, eax; add eax, ecx; ret; 
0x000b2f2f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000b2f3f: nop; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x001169bf: nop; call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a8f: nop; call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0010924f: nop; call 0x81be0; mov ebx, dword ptr [esp + 0x20]; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x0009a3fa: nop; call 0xc24eb3ff; ret; 
0x0019d4af: nop; call dword ptr [esi]; 
0x0003827f: nop; endbr32; call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b7ff: nop; endbr32; call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0002171f: nop; endbr32; call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x0012149f: nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000ddc3f: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ddc3f: nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00116a2f: nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ddc5f: nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc5f: nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000ddf8f: nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf8f: nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de00f: nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a23f: nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1af: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1af: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000ddc7f: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc7f: nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcbf: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcbf: nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddc9f: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddc9f: nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ddcdf: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddcdf: nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012184f: nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012184f: nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0007f67f: nop; endbr32; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007ee9f: nop; endbr32; mov eax, 0xffffffff; ret; 
0x00161f3f: nop; endbr32; mov eax, 1; ret; 
0x001572df: nop; endbr32; mov eax, 2; ret; 
0x00081c7f: nop; endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036d2f: nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x001633af: nop; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007b3af: nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc7f: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013108f: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x0013107f: nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00083fff: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4bf: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014ac6f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0008036f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00090e2f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113eff: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007a60f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000d7d8f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007e3af: nop; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0008cb9f: nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00087adf: nop; endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0012168f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012139f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001214bf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00116aff: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012181f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc62f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010a56f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092bf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0011691f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00107d8f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x0011694f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001216bf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011ea6f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e4f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012124f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eaf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x000dc07f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x000ddf2f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094cf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0011f4af: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ddfdf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a20f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f976f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97bf: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97ef: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010949f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0011ee6f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee8f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012136f: nop; endbr32; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dcd9f: nop; endbr32; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dc0af: nop; endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0002148f: nop; endbr32; ret; 
0x0007f5cf: nop; endbr32; xor eax, eax; ret; 
0x00105048: nop; fldln2; call dword ptr [eax + 0x6a]; 
0x000d708e: nop; hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00093a15: nop; hlt; xchg ebx, eax; stc; call dword ptr [edx - 0x73]; 
0x0009355f: nop; in al, 1; add byte ptr [eax], al; ret; 
0x0002f67d: nop; inc eax; ret; 
0x0009a489: nop; iretd; out 0xff, eax; cmovne eax, edx; ret; 
0x0018e86f: nop; jb 0x18e880; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0009af7e: nop; jl 0x9af76; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000f199c: nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x0016b3b0: nop; js 0x16b3b6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016b3f0: nop; js 0x16b3f6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000213d3: nop; js 0x213ef; add byte ptr [eax], al; ret; 
0x00021473: nop; js 0x2148f; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0019332f: nop; lea eax, [ecx + 0xa]; ret; 
0x0019333f: nop; lea eax, [ecx + 0xb]; ret; 
0x0019334f: nop; lea eax, [ecx + 0xd]; ret; 
0x0019335f: nop; lea eax, [ecx + 0xe]; ret; 
0x0019336f: nop; lea eax, [ecx + 0xf]; ret; 
0x001932bf: nop; lea eax, [ecx + 1]; ret; 
0x001932cf: nop; lea eax, [ecx + 2]; ret; 
0x001932df: nop; lea eax, [ecx + 3]; ret; 
0x001932ef: nop; lea eax, [ecx + 5]; ret; 
0x001932ff: nop; lea eax, [ecx + 6]; ret; 
0x0019330f: nop; lea eax, [ecx + 7]; ret; 
0x0019331f: nop; lea eax, [ecx + 9]; ret; 
0x000382ff: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x64], eax; mov eax, ecx; ret; 
0x0019228f: nop; lea eax, [edi + 1]; pop edi; ret; 
0x00194abf: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x0019227f: nop; lea eax, [edi]; pop edi; ret; 
0x0019399f: nop; lea eax, [edx + 0xa]; ret; 
0x001939af: nop; lea eax, [edx + 0xc]; ret; 
0x001939bf: nop; lea eax, [edx + 0xd]; ret; 
0x001939cf: nop; lea eax, [edx + 0xe]; ret; 
0x0019393f: nop; lea eax, [edx + 2]; ret; 
0x0019394f: nop; lea eax, [edx + 4]; ret; 
0x0019395f: nop; lea eax, [edx + 5]; ret; 
0x0019396f: nop; lea eax, [edx + 6]; ret; 
0x0019397f: nop; lea eax, [edx + 8]; ret; 
0x0019398f: nop; lea eax, [edx + 9]; ret; 
0x000b4f6f: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x0011fb5f: nop; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0002ec2f: nop; lea edx, [ecx - 0x6d179]; mov eax, edx; pop ebx; ret; 
0x0009358f: nop; les eax, ptr [ecx]; add byte ptr [eax], al; ret; 
0x00059951: nop; mov al, byte ptr [0x3efff8be]; jmp eax; 
0x0016d869: nop; mov al, byte ptr [0x3efff928]; jmp eax; 
0x00148847: nop; mov al, byte ptr [0xf6000050]; ret 0xf01; 
0x000a720f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000abadf: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000a70df: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000a721f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000a2d0f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000a2e2f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0013f437: nop; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000ab38f: nop; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000a0a9f: nop; mov byte ptr [edx - 1], 0; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000a0faf: nop; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x000c8c1f: nop; mov ch, dh; and ch, 0xf; je 0xc8c40; add eax, 2; ret; 
0x000b505f: nop; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x00156c8f: nop; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x00156c9f: nop; mov dword ptr [eax], 8; pop ebx; ret; 
0x000a4d1f: nop; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000a4d3f: nop; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000a4d2f: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000a4d0f: nop; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000ab3af: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab3bf: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x0006e9cf: nop; mov dword ptr [esp + 0x5c], 1; jmp ebx; 
0x0015e9bf: nop; mov dword ptr [esp + 8], eax; sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x0016b65f: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000aecef: nop; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000de7df: nop; mov eax, 0x100; ret; 
0x000859bf: nop; mov eax, 0x16; pop ebx; ret; 
0x00083aaf: nop; mov eax, 0x16; ret; 
0x000de69f: nop; mov eax, 0x7e; pop ebx; ret; 
0x001248d7: nop; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x0003759f: nop; mov eax, 0xad; int 0x80; 
0x000de6af: nop; mov eax, 0xfffa; pop ebx; ret; 
0x00146667: nop; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00076037: nop; mov eax, 0xffffffff; ret; 
0x0018773f: nop; mov eax, 1; ja 0x187749; neg eax; ret; 
0x000df747: nop; mov eax, 1; ret; 
0x0013d5ff: nop; mov eax, 2; ret; 
0x0011d04f: nop; mov eax, dword ptr [eax + 0x368]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011d037: nop; mov eax, dword ptr [eax + 0x44]; mov ecx, dword ptr [esp + 8]; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x0011facf: nop; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0016e00e: nop; mov eax, dword ptr [eax]; ret; 
0x00037487: nop; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0011d0b7: nop; mov eax, dword ptr [ebx - 0x134]; mov dword ptr gs:[eax], 2; xor eax, eax; pop ebx; ret; 
0x0016e5df: nop; mov eax, dword ptr [ecx - 0x134]; mov dword ptr gs:[eax], 0x16; xor eax, eax; ret; 
0x000a700f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000a2c3f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000a2e4f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0016b37f: nop; mov eax, dword ptr [edx + 0x3a0]; mov dword ptr [esp + 4], ecx; jmp dword ptr [eax + 0x30]; 
0x00092b4f: nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003819f: nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 0xffffffff; ret; 
0x0010dcd7: nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 0x16; mov eax, 1; ret; 
0x000220bf: nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000789b7: nop; mov eax, dword ptr [edx - 0x134]; mov dword ptr gs:[eax], 9; mov eax, 0xffffffff; ret; 
0x00124487: nop; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x00085fff: nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000a596f: nop; mov eax, edx; pop ebx; ret; 
0x0019391f: nop; mov eax, edx; ret; 
0x0013bdbf: nop; mov ebx, dword ptr [ebx]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001138ff: nop; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00157947: nop; mov ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c8d17: nop; mov ecx, eax; mov eax, ecx; ret; 
0x0014af9f: nop; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00156c1f: nop; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000aed0f: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016e02e: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000a4cef: nop; mov word ptr [ecx], dx; pop ebx; ret; 
0x000a1097: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000a70bf: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a2cef: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001951df: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000aee4f: nop; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a4daf: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000a4dbf: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000a4dcf: nop; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000a4d4f: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000a703f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000a727f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000a2c6f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001951af: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0007eb5f: nop; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001876af: nop; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x001876bf: nop; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x001876cf: nop; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x001876df: nop; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x001876ef: nop; movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0018768f: nop; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0004ab6d: nop; nop; add eax, dword ptr [esp]; ret; 
0x0012149d: nop; nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00116a2d: nop; nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ddc5e: nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc5e: nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000ddf8d: nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf8d: nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de00d: nop; nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a23d: nop; nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1ae: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1ae: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000ddc7e: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc7e: nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcbe: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcbe: nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddc9e: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddc9e: nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ddcde: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddcde: nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012184d: nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012184d: nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x001572ed: nop; nop; endbr32; mov eax, 2; ret; 
0x00036d2e: nop; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0013107e: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000d7d8e: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0008cb9d: nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0002148e: nop; nop; endbr32; ret; 
0x00083fcd: nop; nop; endbr32; xor eax, eax; ret; 
0x0003759e: nop; nop; mov eax, 0xad; int 0x80; 
0x0004ab6b: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0012149b: nop; nop; nop; endbr32; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00116a2b: nop; nop; nop; endbr32; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ddc5c: nop; nop; nop; endbr32; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddf8b: nop; nop; nop; endbr32; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000de00b: nop; nop; nop; endbr32; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a23b: nop; nop; nop; endbr32; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1ac: nop; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x000ddc7c: nop; nop; nop; endbr32; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddcbc: nop; nop; nop; endbr32; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddc9c: nop; nop; nop; endbr32; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddcdc: nop; nop; nop; endbr32; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x0012184b: nop; nop; nop; endbr32; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x001572eb: nop; nop; nop; endbr32; mov eax, 2; ret; 
0x0008cb9b: nop; nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0002148c: nop; nop; nop; endbr32; ret; 
0x00083fcb: nop; nop; nop; endbr32; xor eax, eax; ret; 
0x0003759c: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x0004ab69: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0002148a: nop; nop; nop; nop; endbr32; ret; 
0x0003759a: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x000c14fc: nop; nop; xchg edi, eax; stc; call dword ptr [edx - 0x73]; 
0x00081de5: nop; or al, 1; add byte ptr [eax], al; ret; 
0x001034f7: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x000961bc: nop; or al, byte ptr [eax]; add byte ptr [ebp - 0x173e00ba], cl; add al, 0x89; ret; 
0x00081dc5: nop; or byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x0010350f: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000936b5: nop; or byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0008b0ff: nop; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x00083baf: nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00155085: nop; out dx, eax; bnd call dword ptr [eax - 0x73]; 
0x000375a7: nop; pop eax; mov eax, 0x77; int 0x80; 
0x0014f64f: nop; pop eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [edx - 0x73]; 
0x00129c0f: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010267f: nop; pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008266f: nop; pop ebx; pop esi; pop edi; ret; 
0x000b295f: nop; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x001924bf: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x001634cf: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0019024f: nop; pop ebx; xor eax, eax; ret; 
0x0018e66f: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000af05f: nop; pop esi; ret; 
0x0011d326: nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x001495c0: nop; pushfd; lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x000213c3: nop; rcl byte ptr [edx - 0x1b], 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000c3406: nop; ret 0x4e8b; 
0x00099cd3: nop; ret 0xc801; 
0x0002fba1: nop; ret; 
0x00093605: nop; rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x00088965: nop; sbb al, 1; add byte ptr [eax], al; ret; 
0x0014f45d: nop; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0013119f: nop; shr eax, 0x18; ret; 
0x00193e9f: nop; sub edi, 3; jb 0x193f40; lea eax, [eax + 2]; pop edi; ret; 
0x00193eaf: nop; sub edi, 5; jb 0x193f40; lea eax, [eax + 4]; pop edi; ret; 
0x00193ebf: nop; sub edi, 6; jb 0x193f40; lea eax, [eax + 5]; pop edi; ret; 
0x00192e4f: nop; sub edx, 2; jb 0x192f00; lea eax, [edi + 1]; pop edi; ret; 
0x00192e5f: nop; sub edx, 3; jb 0x192f00; lea eax, [edi + 2]; pop edi; ret; 
0x00192e6f: nop; sub edx, 5; jb 0x192f00; lea eax, [edi + 4]; pop edi; ret; 
0x00192e7f: nop; sub edx, 6; jb 0x192f00; lea eax, [edi + 5]; pop edi; ret; 
0x00080077: nop; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000e2337: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00103f17: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x001603bf: nop; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0015c18f: nop; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x000720ef: nop; sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x0002166f: nop; sub esp, 4; push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000654af: nop; sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x0016b137: nop; sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x000995cf: nop; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00194b4f: nop; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000227c8: nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0019520f: nop; tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x000c14fd: nop; xchg edi, eax; stc; call dword ptr [edx - 0x73]; 
0x0009af58: nop; xor al, 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0014da99: nop; xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x000d912b: nop; xor al, 0xf9; call dword ptr [eax - 0x18]; 
0x00084ccf: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00094e2f: nop; xor eax, eax; add esp, 0xc; ret; 
0x0015cf5f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0012326f: nop; xor eax, eax; pop ebx; ret; 
0x0018f69f: nop; xor eax, eax; pop edi; pop ebx; ret; 
0x000b276f: nop; xor eax, eax; pop edi; ret; 
0x00039f8f: nop; xor eax, eax; ret; 
0x000a0def: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0008ad1f: nop; xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001261d8: not byte ptr [ebx - 0x18]; mov edx, 0x81000482; ret; 
0x00082740: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b301: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0003e84f: not byte ptr [ebx - 0x77]; ret; 
0x001234e8: not byte ptr [ebx - 0x77]; test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011d3e3: not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x000359d0: not eax; and eax, ecx; ret; 
0x00035d93: not eax; and eax, edx; ret; 
0x00087797: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001637bc: not eax; shr eax, 0x1f; ret; 
0x000d5dc0: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000881ac: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00190248: notrack jmp ebx; lea esi, [esi]; nop; pop ebx; xor eax, eax; ret; 
0x000b48ba: notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx - 0xc8]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000b260a: notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x0015cf5c: notrack jmp edx; nop; xor eax, eax; pop ebx; pop esi; ret; 
0x0015a2ad: notrack jmp edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00192e2f: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00106c7f: or ah, 0x10; push eax; push dword ptr [esp + 0x1c]; call 0x1077f0; add esp, 0x1c; ret; 
0x000b4957: or ah, 1; add byte ptr [eax], al; ret; 
0x00178df8: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000b3cf8: or ah, bh; pop edi; ret; 
0x00087d71: or ah, byte ptr [eax]; sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x00155379: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x0004a76c: or al, 0; add byte ptr [eax], al; add byte ptr [ecx + 0x3004bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x0011a409: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000dc110: or al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001094ab: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000dcd67: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov dword ptr [eax + 0x70], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00085e3c: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x70]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013ccbf: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00114e99: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x00156c7a: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x00194047: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x0008326d: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000dc725: or al, 0; add byte ptr [eax], al; test eax, eax; jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x0011d42b: or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x000660f2: or al, 0; add byte ptr [ebx + 0x505304ec], al; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006e233: or al, 0; add byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x0018d26e: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00168f14: or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x55]; 
0x001688e7: or al, 0; add byte ptr [ebx - 0x4472f714], al; pop es; stc; call dword ptr [edi + 0x56]; 
0x00063d11: or al, 0; add byte ptr [ebx - 0x50f63], cl; call ecx; 
0x0019ce65: or al, 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x0014a629: or al, 0; je 0x14a637; add dword ptr [eax + 8], 1; je 0x14a656; add esp, 0xc; ret; 
0x0014aa14: or al, 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0015f7dc: or al, 0; mov edx, dword ptr [eax - 0x150]; lea eax, [eax + 0xa4a0]; mov dword ptr gs:[edx], eax; ret; 
0x0011c912: or al, 0x10; add byte ptr [eax], al; xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000c93ff: or al, 0x19; aad 0x89; ljmp 0x891f:0xeac1cd89; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0011fabe: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00065329: or al, 0x1c; add byte ptr [ebx - 0x6f72f314], al; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x0016e4b2: or al, 0x24; ret; 
0x00084414: or al, 0x24; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x000cb293: or al, 0x29; ret 0x428d; 
0x000c2df2: or al, 0x29; ret; 
0x0009d028: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0011e402: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x00070f3a: or al, 0x31; call dword ptr [esi - 0x18]; 
0x00097523: or al, 0x31; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00130ec8: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000267b6: or al, 0x31; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x0002374a: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008dd93: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008b456: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0007a5aa: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x000dc3ad: or al, 0x31; rol byte ptr [ebp - 0xfbbf001], 0xb8; jb 0xdc3b8; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00150a43: or al, 0x31; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x000754a4: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0003d148: or al, 0x31; ror byte ptr [ecx - 0x6fef1436], 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0018f305: or al, 0x39; fnstcw word ptr [eax]; jne 0x18f320; pop ebx; ret; 
0x001851f0: or al, 0x39; ret 0x1d72; 
0x00183030: or al, 0x39; ret 0x2972; 
0x0014373b: or al, 0x39; ret 0x307e; 
0x000d7bc1: or al, 0x39; ret 0x470f; 
0x0009a0b1: or al, 0x39; ret 0x840f; 
0x00038c65: or al, 0x39; ret; 
0x00096702: or al, 0x39; ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x00144f21: or al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000d6b87: or al, 0x3b; push 0x83b77d1c; ret 0x8301; 
0x00139ace: or al, 0x50; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x0019cd3b: or al, 0x50; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00082aa6: or al, 0x50; call edx; 
0x000d8c2c: or al, 0x50; mov dword ptr [esp + 0x1c], eax; call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0013917a: or al, 0x50; mov dword ptr [esp + 0x2c], eax; call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012c44d: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b31e: or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012b0d7: or al, 0x50; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0012cbcf: or al, 0x50; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00022909: or al, 0x51; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f99: or al, 0x51; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x000871ca: or al, 0x52; call 0x82b50; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0002160e: or al, 0x52; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x00162b19: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x00162b6e: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x001621de: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00162189: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000d5ff8: or al, 0x52; push ebx; call eax; 
0x00162539: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x00139dd2: or al, 0x53; call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x0002b7b4: or al, 0x53; call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x00156055: or al, 0x53; call dword ptr [eax + 0x10]; 
0x0016f781: or al, 0x53; call dword ptr [ebp + 0x3c]; 
0x0007d497: or al, 0x53; call dword ptr [edi + 0x44]; 
0x0007516b: or al, 0x53; call dword ptr [esi + 0x10]; 
0x0007b4ee: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0007d2f5: or al, 0x53; call dword ptr [esi + 0x44]; 
0x0012df5d: or al, 0x53; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0012dfad: or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0015d6ba: or al, 0x55; call dword ptr [eax + 0x10]; 
0x001575e0: or al, 0x55; call dword ptr [esi]; 
0x0015d6d1: or al, 0x55; call eax; 
0x0015c4d4: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000d5e96: or al, 0x55; push ebx; call eax; 
0x0019cbb6: or al, 0x56; call 0x16b3c0; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00139c2e: or al, 0x56; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00022796: or al, 0x56; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x0002de3c: or al, 0x56; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x001554f4: or al, 0x56; call dword ptr [eax + 0x10]; 
0x0007a0ef: or al, 0x56; call dword ptr [eax + 0x30]; 
0x0007f1e5: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x00170551: or al, 0x56; call dword ptr [ebp + 0x44]; 
0x00073068: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x00070ac7: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x00073120: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007ee40: or al, 0x56; call dword ptr [edi + 0x34]; 
0x00170696: or al, 0x56; call dword ptr [edi + 0x44]; 
0x0002de01: or al, 0x56; call eax; 
0x00121078: or al, 0x56; call edx; 
0x00121078: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0012e045: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0012def7: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0012e608: or al, 0x56; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x0012e475: or al, 0x56; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x0015c192: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001564fa: or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0014058b: or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x00021676: or al, 0x56; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021613: or al, 0x56; push dword ptr [esp + 0x40]; call eax; 
0x00064fbd: or al, 0x56; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0012e98f: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001564a8: or al, 0x57; call 0x109210; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000d8d97: or al, 0x57; call 0x16b3c0; add esp, 0x10; mov eax, edi; call eax; 
0x000236c9: or al, 0x57; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x00157611: or al, 0x57; call dword ptr [eax + 0x10]; 
0x001575ce: or al, 0x57; call dword ptr [eax + 8]; 
0x001567e9: or al, 0x57; call eax; 
0x0007bba8: or al, 0x57; push ebx; call dword ptr [esi + 0x3c]; 
0x00080e45: or al, 0x5b; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x000fdf4a: or al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0009ae78: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x001294d4: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00075203: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00099d62: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x0002f508: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009057c: or al, 0x5b; pop esi; pop edi; ret; 
0x000b2115: or al, 0x5b; pop esi; ret; 
0x000dc0f9: or al, 0x5b; ret; 
0x000a8ec0: or al, 0x5f; pop ebx; ret; 
0x000ac7f0: or al, 0x5f; pop esi; pop ebx; ret; 
0x000a71c4: or al, 0x5f; ret; 
0x0012095c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120970; pop ebx; ret; 
0x001209ac: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1209c0; pop ebx; ret; 
0x001209fc: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120a10; pop ebx; ret; 
0x0008271a: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x00081cae: or al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x00088a0d: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0014df58: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x001606d5: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071d: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x00036474: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370ba: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x0003b40a: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45d: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x00021dab: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x0010357d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x001143d4: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115ff1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x001171cb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x0011ae75: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00121f31: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x0012221c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x0012295c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122bc5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x0014243b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x00142497: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x0014422a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0015b8bb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb10: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015f02c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x00161fcf: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620bf: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162366: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623f6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x0016251a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625b6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dd6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e66: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162ef6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f86: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x0016363e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x0016369e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x00163707: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x00163767: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168153: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x00169928: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a0: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016e0be: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176711: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x0003aea9: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b4ba: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b55a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5ad: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x00058394: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x0008f8cb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000c2f9a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9b1a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d356e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bfe: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x00168482: or al, 0x68; add byte ptr [ecx], 0; add al, ch; ret; 
0x0012a486: or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x000831fe: or al, 0x6a; add al, ch; ljmp 0x1cc4:0x83fffff5; ret; 
0x000cd061: or al, 0x6a; add byte ptr [ebp - 0x5397008b], cl; ret 0xf0; 
0x00099262: or al, 0x6a; add eax, 0x43a2838d; stc; call dword ptr [eax - 0x73]; 
0x0007db4b: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0017045f: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017035d: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x000fd41c: or al, 0x6a; and byte ptr [ebx - 0x6e363], cl; call dword ptr [edx - 0x77]; 
0x00025f60: or al, 0x71; stc; call dword ptr [eax - 0x73]; 
0x0013cbe3: or al, 0x74; push -0x73; dec edx; jmp dword ptr [ecx]; 
0x0008f200: or al, 0x75; sub al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0008f272: or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0008f434: or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0008f7ba: or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x00065f80: or al, 0x79; stc; call dword ptr [eax - 0x73]; 
0x00079b88: or al, 0x7e; stc; call dword ptr [eax - 0x73]; 
0x00143c3e: or al, 0x7f; ret; 
0x00082749: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014a25d: or al, 0x81; ret; 
0x00088901: or al, 0x81; stc; call dword ptr [eax - 0x18]; 
0x0006844e: or al, 0x82; add ecx, ebp; jmp ecx; 
0x000e82b9: or al, 0x82; mov eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008ed30: or al, 0x82; stc; call dword ptr [eax - 0x18]; 
0x00045223: or al, 0x83; clc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00077b8d: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0007cd94: or al, 0x83; in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00038bd3: or al, 0x83; in al, dx; add al, 0x55; push ebx; push esi; call edi; 
0x00038baf: or al, 0x83; in al, dx; add al, 0x55; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00170693: or al, 0x83; in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x00159530: or al, 0x83; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00162713: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00079b5b: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00157c65: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0016aff2: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00051797: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00050eb7: or al, 0x83; les ebx, ptr [eax]; mov eax, edx; pop ebx; ret 4; 
0x000817fb: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0002621b: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00033f34: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000374cb: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0007d684: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00075200: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x00075333: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000266f8: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00036d20: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00051807: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00154f43: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0003b9b1: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00037866: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003a979: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0009d0a2: or al, 0x83; mov dword ptr [esi + edx*2], 0x17554e8; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x000b2763: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x0015b0e6: or al, 0x83; ret 0x5208; 
0x000b4bca: or al, 0x83; ret 0x8310; 
0x00093c55: or al, 0x83; ret 0x8901; 
0x000f93fe: or al, 0x83; ret 0x8902; 
0x000ee8eb: or al, 0x83; ret 0x8904; 
0x00032939: or al, 0x83; ret 0x8908; 
0x00093e25: or al, 0x83; ret 0x8b01; 
0x00033ae2: or al, 0x83; ret; 
0x0013cddf: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0014be8b: or al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x0006ad40: or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], al; add dh, dh; ret 0xf40; 
0x0011736a: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x00117389: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x000904f9: or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0011bcff: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11bd10; ret; 
0x0003a900: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00079acb: or al, 0x89; call 0x5d66f92d; ret; 
0x00079b06: or al, 0x89; call 0x5d66f968; ret; 
0x000839f2: or al, 0x89; call 0x5d679854; ret; 
0x00098fc3: or al, 0x89; call 0x5d68ee25; ret; 
0x000d6dce: or al, 0x89; call 0x5d6ccc30; ret; 
0x000fdffb: or al, 0x89; call 0x5d6f3e5d; ret; 
0x0011b67d: or al, 0x89; call 0x5d7114df; ret; 
0x0011be29: or al, 0x89; call 0x5d711c8b; ret; 
0x0012f45d: or al, 0x89; call 0x5d7252bf; ret; 
0x0013cc2f: or al, 0x89; call 0x5d732a91; ret; 
0x0011419c: or al, 0x89; clc; call dword ptr gs:[0x10]; 
0x00083d50: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0007e843: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0007db67: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008fc32: or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00023eae: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x20394f7d]; call dword ptr [eax - 0x73]; 
0x00037133: or al, 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000800c4: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00108d61: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dd21a: or al, 0x89; inc esp; and al, 8; call edx; 
0x00087ea6: or al, 0x89; int1; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0005b1f4: or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0005bd16: or al, 0x89; lea edx, [edx + edi*8 - 1]; call dword ptr [edi - 0x18]; 
0x00157a83: or al, 0x89; pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x00090579: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x000dc0f6: or al, 0x89; push ebx; or al, 0x5b; ret; 
0x00129eed: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0012d8cc: or al, 0x89; push esi; sbb al, 1; ret 0x448b; 
0x0008ef2f: or al, 0x89; push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00162cfe: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d16: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157976: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015795e: or al, 0x89; push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00073d30: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000f9faf: or al, 0x89; ret 0x4089; 
0x0010da0e: or al, 0x89; ret 0x408d; 
0x0012227c: or al, 0x89; ret 0x448b; 
0x000cfa7b: or al, 0x89; ret 0x44f6; 
0x000773b3: or al, 0x89; ret 0x48d; 
0x00116c35: or al, 0x89; ret 0x7c8d; 
0x0005ee81: or al, 0x89; ret 0x8489; 
0x0005ed63: or al, 0x89; ret 0x8589; 
0x00080013: or al, 0x89; ret 0x8b; 
0x0009aaea: or al, 0x89; ret 0xa165; 
0x0019a6fa: or al, 0x89; ret 0xb70f; 
0x0008b96f: or al, 0x89; ret 0xca81; 
0x0008e432: or al, 0x89; ret 0xca83; 
0x0008862c: or al, 0x89; ret 0xe281; 
0x000ee9a2: or al, 0x89; ret 0xe989; 
0x00035c6b: or al, 0x89; ret 0xff25; 
0x0002e748: or al, 0x89; ret; 
0x00126103: or al, 0x89; ror dword ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x0008b6a2: or al, 0x89; sal dh, 1; ret 0x7501; 
0x00053134: or al, 0x89; sal esi, 1; ret 0xf40; 
0x0002e970: or al, 0x89; test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x000e1501: or al, 0x89; xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x0006744c: or al, 0x89; xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x0008ddfb: or al, 0x8b; adc cl, byte ptr [ebx + 0x104a3908]; je 0x8de10; ret; 
0x0012448b: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000993c1: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x000832d7: or al, 0x8b; add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x001498f5: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0016214a: or al, 0x8b; add eax, dword ptr [ebp + 0x317774c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0015563e: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0015e9c6: or al, 0x8b; dec edx; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x0012e98c: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000ef6b8: or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0016730d: or al, 0x8b; inc ebp; adc byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xdf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000ec5b8: or al, 0x8b; inc ebp; add al, 0x85; ror byte ptr [edi], 0x84; ret 1; 
0x0015dc91: or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x00022f11: or al, 0x8b; inc ebp; mov ah, 0x39; adc byte ptr [edi], cl; test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x00160fdb: or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00155a85: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015bb55: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000c33fb: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x0015f6ff: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x001575c7: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x00155d4d: or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x00035c89: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0012a70e: or al, 0x8b; inc esp; and al, 0x14; add eax, 0x2000001; push eax; call dword ptr [edi + 0x14]; 
0x0013ffa4: or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x001034f1: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0008377a: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003733c: or al, 0x8b; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x00144061: or al, 0x8b; je 0x144089; adc al, 0x8d; xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x000d8584: or al, 0x8b; jge 0xd855c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d87a4: or al, 0x8b; jge 0xd877c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x0011fdb9: or al, 0x8b; pop esp; and al, 0x50; call dword ptr gs:[0x10]; 
0x00109586: or al, 0x8b; pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00058468: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012187c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012147c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0010800c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0010932c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011318c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4bc: or al, 0x8b; pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114dac: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012152c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012122c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974c: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd26c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109ebc: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce7c: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cedc: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdac: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x001557eb: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0011b973: or al, 0x8b; push eax; add al, 0xf6; ret 0xf01; 
0x00122df8: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db2: or al, 0x8b; push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d46: or al, 0x8b; push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x0008cbbc: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001151aa: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011535a: or al, 0x8b; push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0005fa22: or al, 0x8b; sbb dword ptr [eax - 0x76000001], 0xfffac485; jmp dword ptr [ebp - 0x75]; 
0x0014de41: or al, 0x8b; sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x001570f3: or al, 0x8b; test byte ptr [ebx - 0x264], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00104321: or al, 0x8b; test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x000e00b1: or al, 0x8b; test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x000e0cfb: or al, 0x8b; xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00070fbc: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00148ca4: or al, 0x8b; xchg esp, eax; and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x00094297: or al, 0x8d; add dword ptr [eax - 0x2b], -0x1a; call dword ptr [eax + 0x56]; 
0x000fae98: or al, 0x8d; add dword ptr [eax], 0x3b; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0015347b: or al, 0x8d; add esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x00086052: or al, 0x8d; and ah, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00067c53: or al, 0x8d; and al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x0016581a: or al, 0x8d; and dword ptr [esi + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0007b33f: or al, 0x8d; and dword ptr [esi + edi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00108162: or al, 0x8d; and esp, 0xffffff9e; stc; call dword ptr [eax - 0x18]; 
0x00031644: or al, 0x8d; cmp byte ptr [esi], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0010b4c1: or al, 0x8d; cmp dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x00155975: or al, 0x8d; cmp edi, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0015fc12: or al, 0x8d; dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000a4892: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0014d9f2: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x0015a8db: or al, 0x8d; je 0x15a905; add byte ptr [ecx], ch; ret; 
0x000c1a62: or al, 0x8d; je 0xc1a8c; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000c1aaa: or al, 0x8d; je 0xc1ad4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x000de733: or al, 0x8d; je 0xde75d; add byte ptr [eax + 0x40], bh; ret; 
0x00144821: or al, 0x8d; mov bl, 0xce; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0014484d: or al, 0x8d; mov bl, 0xdb; pop esi; stc; call dword ptr [esi - 0x18]; 
0x00144879: or al, 0x8d; mov bl, 0xea; pop esi; stc; call dword ptr [esi - 0x18]; 
0x0006532e: or al, 0x8d; nop; and byte ptr [ecx - 7], bh; call dword ptr [edx - 0x73]; 
0x001495be: or al, 0x8d; nop; pushfd; lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x00101d8f: or al, 0x8d; or byte ptr [ebp + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0010155a: or al, 0x8d; or byte ptr [edx + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00156612: or al, 0x8d; or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000e49c2: or al, 0x8d; or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x000ce152: or al, 0x8d; pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x0015cefc: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x0010a090: or al, 0x8d; push ecx; call dword ptr [edx + 0x53]; 
0x0009a8a7: or al, 0x8d; push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x00162b6a: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621da: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x0013adef: or al, 0x8d; sbb al, 0x43; stc; call dword ptr [eax - 1]; 
0x0014a538: or al, 0x8d; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014a3e4: or al, 0x8d; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x0014e161: or al, 0x8d; sbb byte ptr [esi + ebp*4], 0xf9; call dword ptr [eax - 0x73]; 
0x001082b2: or al, 0x8d; sbb dword ptr [edi + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x000cc2c6: or al, 0x8d; sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x0010d518: or al, 0x8d; sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x000c34ad: or al, 0x8d; sub dword ptr [eax + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x00047a6d: or al, 0x8d; test dword ptr [eax + 0x6a000017], eax; add byte ptr [eax + 0x6a], dl; add ebp, eax; ret 0xfefa; 
0x0008250a: or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0014b58c: or al, 0x8d; test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x000fcf13: or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fc4d0: or al, 0x8d; test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000219bf: or al, 0x8d; test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x0014489d: or al, 0x8d; wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x000563ae: or al, 0x8d; xchg ah, bh; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x000218cb: or al, 0x8d; xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00138384: or al, 0x8d; xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00089074: or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x001445c1: or al, 0x8d; xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00113164: or al, 0x8d; xchg byte ptr [eax], ch; stc; call dword ptr [eax - 0x18]; 
0x00138363: or al, 0x8d; xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00088335: or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x001083fc: or al, 0x8d; xchg byte ptr [edi + ebx*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00138295: or al, 0x8d; xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00119e22: or al, 0x8d; xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00137fca: or al, 0x8d; xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x00156af4: or al, 0x8d; xchg dword ptr [eax + 0x6afffff9], edi; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x0008265b: or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0008a80d: or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x0008e712: or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x0014454c: or al, 0x8d; xchg dword ptr [eax], eax; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x001493fc: or al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0015f1c2: or al, 0x8d; xchg dword ptr [ecx + esi*4 - 7], esi; call dword ptr [ebx - 1]; 
0x00165076: or al, 0x8d; xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x000860ba: or al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x00085c5f: or al, 0x8d; xor byte ptr [eax - 3], 0xe5; call dword ptr [eax - 0x73]; 
0x00102c23: or al, 0x8d; xor byte ptr [eax], 0xcd; in eax, dx; call dword ptr [eax - 0x73]; 
0x000e1038: or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001739f0: or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; ret; 
0x000889c5: or al, 0x8d; xor dword ptr [eax + 0x29], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x000942df: or al, 0x8d; xor dword ptr [eax - 0x2a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x0003a812: or al, 0x8d; xor dword ptr [esp + esi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000bf5e5: or al, 0x97; stc; call dword ptr [eax - 0x73]; 
0x000b2608: or al, 0x99; notrack jmp ecx; lea esi, [esi]; pop ebx; pop esi; ret; 
0x000cd69e: or al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x00194873: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x0011459d: or al, 0xb4; jg 0x1145a0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0019057f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x190590; pop ebx; ret; 
0x0015d921: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000fe3bf: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00103533: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ce55: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001213e5: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f930: or al, 0xb8; js 0x11f935; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001207fe: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001208be: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010958a: or al, 0xb8; mov bh, 0; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0010872e: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d5dd4: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d64ee: or al, 0xb8; or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ceb5: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011cd85: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012073e: or al, 0xb8; ret; 
0x0010a4f5: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000973a4: or al, 0xb9; sub eax, 0x8b000013; je 0x973d1; sbb byte ptr [ebp - 0x66c937a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00198d38: or al, 0xb; je 0x198d60; add al, 0xf; xchg esp, eax; ret; 
0x0012a2e7: or al, 0xb; pop edx; or al, 0xf6; ret; 
0x0002cbde: or al, 0xba; mov edx, dword ptr [ebx + edi*4 - 0x3a0]; test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x000c9136: or al, 0xc1; ljmp 0x29d2:0x31d0891f; ret; 
0x00154f10: or al, 0xc1; std; jmp dword ptr [esi - 0x70]; 
0x00057e34: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x108030; add esp, 0x1c; ret; 
0x00074718: or al, 0xc4; cli; jmp dword ptr [esi - 0x70]; 
0x001262c1: or al, 0xd3; ljmp 0x5bd0:0x8901e283; pop esi; ret; 
0x000361a8: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000361e7: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00035a7c: or al, 0xdb; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00035ffe: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00082d7e: or al, 0xe8; mov esp, 0x390005ae; ret; 
0x00130da3: or al, 0xe9; inc edi; mov esp, esi; jmp dword ptr [esi - 0x70]; 
0x00169b17: or al, 0xe9; mov dword ptr [0xe8fffffe], eax; ficomp word ptr [ebp - 4]; jmp dword ptr [esi - 0x70]; 
0x0012f763: or al, 0xe9; pop ss; test ebx, esi; jmp dword ptr [esi - 0x70]; 
0x000e7147: or al, 0xe9; ret 0xfffa; 
0x0014ba14: or al, 0xe9; ret 0xfffd; 
0x000a11cb: or al, 0xe9; syscall; 
0x00130d43: or al, 0xe9; xlatb; xchg esp, esi; jmp dword ptr [esi - 0x70]; 
0x0018e65f: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0018e35b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x0004a501: or al, 0xeb; ret 0x748d; 
0x000fa052: or al, 0xeb; ret 0x768d; 
0x00168541: or al, 0xeb; ret 0x838b; 
0x0014f6eb: or al, 0xeb; ret 0x9066; 
0x00128311: or al, 0xeb; ret; 
0x00171ce9: or al, 0xed; call dword ptr [eax + 0x6a]; 
0x0008b725: or al, 0xf6; ret 0x7502; 
0x0012b6e2: or al, 0xf6; ret 0x7504; 
0x00056cc3: or al, 0xf6; ret 0xf01; 
0x0006ad1a: or al, 0xf6; ret 0xf08; 
0x0005224d: or al, 0xf6; ret 0xf40; 
0x00054e67: or al, 0xf6; ret; 
0x0011f41b: or al, 0xf7; fimul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00114243: or al, 0xf7; fisttp qword ptr [ebx - 0x13370]; jmp dword ptr [ebp - 0x77]; 
0x0003770b: or al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x00123e45: or al, 0xf7; fmul dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x77]; 
0x00170aa4: or al, 0xf7; fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x0009ec60: or al, 0xf9; dec dword ptr [ebp - 0x66a3b70]; call dword ptr [edx - 0x73]; 
0x00193e54: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0014010d: or al, 0xf; dec esi; ret; 
0x000684fe: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x000687fe: or al, 0xf; mov dh, 0x44; or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x0008f218: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00047d0a: or al, 0xf; mov dh, 0xc0; ret; 
0x00056131: or al, 0xf; mov esi, 0x8b572444; xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x000404bd: or al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000e5853: or al, 0xf; test byte ptr [esi + 0xffffff7], ah; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x000c8925: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000aac73: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac306: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4895: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x00198a96: or al, 0xf; xchg ebp, eax; ret 0xc208; 
0x0013e3db: or al, 0xf; xchg ebp, eax; rol byte ptr [ebx - 0x4614fb40], 0xe8; aaa; sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x001456bc: or al, 0xf; xchg esp, eax; ret 0xa3c; 
0x00192e04: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000f3903: or al, 0xfc; inc dword ptr [ebx + 0xc8b10c4]; and al, 0x89; ret 0x448b; 
0x00083c19: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x0008425e: or al, 0xff; jae 0x84266; call dword ptr [ebx]; 
0x0008b355: or al, 0xff; jae 0x8b35d; call dword ptr [ebx]; 
0x001159d8: or al, 0xff; je 0x115a00; and al, 0xe8; pop esi; ret 0xfff6; 
0x00133870: or al, 0xff; je 0x133898; sub byte ptr [ebx - 0x17cfdba4], cl; ret 0xeec8; 
0x0013777d: or al, 0xff; je 0x1377a5; or al, 0x89; ret; 
0x0013973f: or al, 0xff; je 0x139767; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0013ffa0: or al, 0xff; je 0x13ffc8; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x001402a7: or al, 0xff; je 0x1402cf; or al, 0x8b; inc esp; and al, 0x20; call eax; 
0x00153f7f: or al, 0xff; je 0x153fa7; adc byte ptr [ebx - 0x17d3dba4], cl; ret; 
0x0016abf4: or al, 0xff; je 0x16ac1c; and al, 0x8b; push esp; and al, 0x24; call edx; 
0x0003a424: or al, 0xff; je 0x3a44c; sub al, ch; ret 0xfffe; 
0x000546c0: or al, 0xff; je 0x546e8; sbb bh, bh; je 0x546ec; sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x000819a8: or al, 0xff; je 0x819d0; sub al, 0x52; push ecx; push esi; call eax; 
0x00086e94: or al, 0xff; je 0x86ebc; cmp al, 0xe8; ret 0xffb8; 
0x000d8caf: or al, 0xff; je 0xd8cd7; pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x000d8f99: or al, 0xff; je 0xd8fc1; and byte ptr [ebp + 0x50382444], cl; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00020f49: or al, 0xff; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0019dd72: or al, 0xff; mov ch, 4; add al, byte ptr [eax]; add al, ch; ret 0xe823; 
0x001078da: or al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010346a: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00081de6: or al, 1; add byte ptr [eax], al; ret; 
0x00143f97: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x143fcd; add esp, 0x11c; ret; 
0x001034f8: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0016349b: or al, 1; jle 0x1634b3; pop ebx; pop esi; pop edi; ret; 
0x0008d64e: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x001633db: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000f3a69: or al, 1; ret 0xc083; 
0x000771a5: or al, 1; ret 0xc101; 
0x00023902: or al, 1; ret 0xe852; 
0x0009aa17: or al, 1; ret; 
0x0011a360: or al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00026753: or al, 6; add byte ptr [eax], al; add cl, ch; ret; 
0x0018ec26: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x0003394f: or al, 8; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x00195545: or al, 9; ret; 
0x00068502: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x00068802: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00068a9b: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x738e0]; add ecx, ebp; jmp ecx; 
0x000689fb: or al, ah; mov ecx, dword ptr [edx + eax*4 - 0x739e0]; add ecx, ebp; jmp ecx; 
0x0006844b: or al, ah; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x000b3f5c: or al, al; je 0xb3f64; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00074368: or al, bh; cli; jmp dword ptr [esi - 0x70]; 
0x000374c2: or al, byte ptr [0x10c48300]; test eax, eax; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x000fd23d: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x0003b662: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0010a51b: or al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a7d2: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00156c92: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x000961bd: or al, byte ptr [eax]; add byte ptr [ebp - 0x173e00ba], cl; add al, 0x89; ret; 
0x000f11df: or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x0018d4be: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005e1a8: or al, byte ptr [eax]; add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x00048e44: or al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; je 0x48e74; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0011d36f: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; dec esp; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011d38a: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11d3e5; stc; call dword ptr [eax + 0x57]; 
0x0011d354: or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x00068f64: or al, byte ptr [eax]; add byte ptr [ebx - 0xaafb14], al; je 0x68f92; inc esp; push edi; call dword ptr [ebx + 0x1c]; 
0x000ac17d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00058d8b: or al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0008775e: or al, byte ptr [eax]; endbr32; call 0x16e4a1; add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x0017674c: or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00085a4c: or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x0008ba9b: or al, byte ptr [eax]; nop; nop; endbr32; xor eax, eax; ret; 
0x00113f2b: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x0008f431: or al, byte ptr [ebx + 0x28750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x0008f26f: or al, byte ptr [ebx + 0x2a750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x0008f7b7: or al, byte ptr [ebx + 0x32750cf8]; mov eax, 3; add esp, 0xc; ret; 
0x00075183: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000f954b: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x000bca32: or al, byte ptr [ebx - 0x3f7cff2f]; add al, 0x39; ret; 
0x00099e47: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x00143b9b: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001438cc: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00092063: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0011ed0b: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a0a91: or al, byte ptr [ecx + ecx*8 + 0x1689f275]; pop ebx; pop esi; ret; 
0x000d5dd6: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d5ec5: or al, byte ptr [ecx]; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001931c2: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x1932c0; mov eax, ecx; ret; 
0x0014da6a: or al, byte ptr [edx]; add byte ptr [ecx + 0xd8593c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0014d9bb: or al, byte ptr [edx]; add byte ptr [ecx + 0xd8642c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00091f52: or al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006ef83: or al, ch; aaa; ret; 
0x00143c92: or al, ch; cmp byte ptr [esi], ch; add byte ptr [ebx - 0x1365], cl; jmp dword ptr [ebp - 0x75]; 
0x0019cca2: or al, ch; dec eax; add al, byte ptr [eax]; add al, ch; ret; 
0x000820e8: or al, ch; stosd dword ptr es:[edi], eax; ret; 
0x00079da2: or al, ch; test al, 0x5c; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0017945c: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00178dfc: or bh, ah; mov eax, edx; pop ebx; ret; 
0x001608b1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aec1: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x001600e6: or bh, al; inc esp; and al, 0x24; add eax, 0x51000000; push eax; call dword ptr [edx + 0xc]; 
0x0002f84a: or bh, bh; call dword ptr [eax - 0x73]; 
0x0002f838: or bh, bh; call dword ptr [edx + 0x52]; 
0x00122f82: or bh, bh; je 0x122f3b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x001552b4: or bh, bh; je 0x1552dc; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015a517: or bh, bh; je 0x15a53f; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015d1ac: or bh, bh; je 0x15d1d4; cmp al, 0x56; mov eax, dword ptr [esp + 0x40]; call eax; 
0x0015dc78: or bh, bh; je 0x15dca0; sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00160285: or bh, bh; je 0x1602ad; adc al, 0x53; call dword ptr [eax]; 
0x00160474: or bh, bh; je 0x16049c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016ce0e: or bh, bh; je 0x16ce36; adc al, 0x8b; inc esp; and al, 0x10; call eax; 
0x000818bb: or bh, bh; je 0x818e3; xor byte ptr [edx + 0x51], dl; call eax; 
0x00093dc0: or bh, bh; je 0x93de8; sub byte ptr [ebx - 0x72cbdbbc], cl; add byte ptr [ebx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000d613b: or bh, bh; leave; lcall 0, 0x8a870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0008b3d1: or bh, bh; leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bfc7: or bh, bh; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x0008bd44: or bh, bh; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0006c18c: or bh, bh; mov ch, 0x74; idiv edi; dec dword ptr [ebx - 0x89763]; call dword ptr [edx - 0x77]; 
0x000663cd: or bh, bh; mov ch, 0x88; idiv edi; call dword ptr [edx - 0x77]; 
0x0008d4b2: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x00129c45: or bh, byte ptr [eax + 1]; ret; 
0x001570e5: or bh, byte ptr [eax + 2]; pop ebx; pop esi; ret; 
0x000c8ab1: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0009052b: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0010748b: or bh, dh; fmul dword ptr [ebx - 0x1336d]; jmp dword ptr [ebp - 0x77]; 
0x00092c43: or bh, dh; fmul dword ptr [ebx - 0x1336f]; jmp dword ptr [ebp - 0x77]; 
0x00099ea7: or bh, dh; jmp dword ptr [esi - 0x70]; 
0x0017073b: or bh, dh; ret 0x202; 
0x00113f56: or bh, dh; ret 0xeff0; 
0x0003620f: or bh, dh; ret 0xffff; 
0x00087796: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00083be6: or bl, bh; xor eax, eax; ret; 
0x0003b3b8: or bl, byte ptr [ebx + 0x25]; inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, edx; ret; 
0x0011aee5: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0007b422: or bl, byte ptr [ebx + 0x5e]; ret; 
0x000872ad: or bl, byte ptr [ebx - 9]; fcomp dword ptr [esi + 0x5f]; ret; 
0x000ac7b2: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000e648d: or bl, ch; les eax, ptr [ebx - 0x7c72f314]; push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0016d7a2: or bl, ch; xchg eax, ebp; jbe 0x16d7e0; cld; jmp dword ptr [esi - 0x70]; 
0x0017ba87: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00184ee7: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; pop ebx; ret; 
0x000574ea: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00113f0a: or byte ptr [0x100f], ah; ret; 
0x00083c53: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000d62d6: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x00121880: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x000926c2: or byte ptr [eax + 0x118], bh; call dword ptr gs:[0x10]; 
0x000dc5ca: or byte ptr [eax + 0x11c], bh; call dword ptr gs:[0x10]; 
0x00121480: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x001080b3: or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x00108010: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x0010a550: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x0010a490: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x00105f15: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00109330: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x00083cd7: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x0008a19a: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0010f8eb: or byte ptr [eax + 0x19e], bh; call dword ptr gs:[0x10]; 
0x00092712: or byte ptr [eax + 0x1a3], bh; call dword ptr gs:[0x10]; 
0x00038481: or byte ptr [eax + 0x1a5], bh; call dword ptr gs:[0x10]; 
0x00113190: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x001142d1: or byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000aed05: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x00092b03: or byte ptr [eax + 0x47752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0010a4c0: or byte ptr [eax + 0x55], bh; call dword ptr gs:[0x10]; 
0x0007043f: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x000e004e: or byte ptr [eax + 0x57], dl; call esi; 
0x00114db0: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x0011ea50: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x00121e84: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00121530: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x0012335d: or byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x0012345c: or byte ptr [eax + 0x75], bh; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00176948: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00121230: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0011a030: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x00121320: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x00121350: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x00142248: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000f9750: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001215a0: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x00038431: or byte ptr [eax + 0xb1], bh; call dword ptr gs:[0x10]; 
0x000dd270: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x00109ec0: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x00109e90: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000de040: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000de070: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x00109e60: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x0011a150: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0011a120: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x00108cef: or byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x0011ce80: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0011cee0: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x0011cdb0: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x0013da1b: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x8dc3; 
0x0008c6d0: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b906: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c5d9: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008c668: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b8dc: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000881a6: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000b21f9: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0011752d: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000aa50c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x0012b1fb: or byte ptr [eax - 0x49f0ffc2], al; adc byte ptr [edi], cl; test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x0013de2b: or byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x0011c1f2: or byte ptr [eax - 0x73], dl; or dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x000d98b0: or byte ptr [eax - 0x73], dl; test eax, esp; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x000b1890: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000b159d: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000aa3ac: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0011df3e: or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x00084929: or byte ptr [eax - 0xf477e0f], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00092b3f: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000995d2: or byte ptr [eax - 1], dl; jae 0x995fb; call edx; 
0x00093439: or byte ptr [eax], 0x3b; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00076b23: or byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x00083c6a: or byte ptr [eax], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000b2f35: or byte ptr [eax], ah; ret; 
0x00058668: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1f88302], al; jg 0x58678; ret; 
0x0008441c: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x00160fb5: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00108e54: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0016e175: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000377ba: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000936ea: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x0008b126: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x00081c4d: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000866d4: or byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0012285e: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x66; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00037644: or byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x000dcd3b: or byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00038367: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x0003783a: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0010f818: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00085e9e: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x47c]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008a446: or byte ptr [eax], al; add byte ptr [eax], al; mov esi, edx; call dword ptr gs:[0x10]; 
0x00156ca2: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00193ff7: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0008cba6: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008b101: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00087ae6: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00076d1e: or byte ptr [eax], al; add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00047e7e: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001438d0: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e7c48: or byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011d246: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0011d27c: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0011d297: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x000aabb5: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000939da: or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00094e21: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0x94e30; add esp, 0xc; ret; 
0x0009395d: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007bfc9: or byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00033077: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x000512ee: or byte ptr [eax], al; mov eax, edx; ret; 
0x000485d0: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0004a6a8: or byte ptr [eax], bh; jne 0x4a6b2; push ecx; ret; 
0x0004a94e: or byte ptr [eax], bh; jne 0x4a958; push ecx; ret; 
0x00083cbe: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00083ca3: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b2f45: or byte ptr [eax], dh; ret; 
0x000b2f25: or byte ptr [eax], dl; ret; 
0x00092ee3: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002c0ae: or byte ptr [ebp + 0x1d840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6c72f714], al; jb 0x2c0ea; stc; call dword ptr [edx + 0x50]; 
0x001297a9: or byte ptr [ebp + 0x39010544], cl; ret; 
0x000f35cc: or byte ptr [ebp + 0x390474c0], al; ret 0xd375; 
0x000f0a34: or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x00101d91: or byte ptr [ebp + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0007043b: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0007c086: or byte ptr [ebp + 0x50182444], cl; push esi; call dword ptr [edi + 0x48]; 
0x0007bd1d: or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00076d23: or byte ptr [ebp + 0x50402444], cl; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00103a3a: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000d5ff4: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000df7ba: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x0015edb7: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0007c3c6: or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007efae: or byte ptr [ebp + 0x52500179], cl; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x000d5e92: or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x000a8ebd: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000a8efc: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000dd8d6: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000ac78d: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000ac7af: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000ac7ed: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00174795: or byte ptr [ebp + 0x6705ffff], bl; sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00087e89: or byte ptr [ebp + 0xb6], 0; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000c2602: or byte ptr [ebp + 0xf514], 0; add byte ptr [ecx], bh; ret; 
0x000c1aea: or byte ptr [ebp + 0xfd14], 0; add byte ptr [ecx], bh; ret; 
0x0008d48a: or byte ptr [ebp + 3], dh; xor eax, eax; ret; 
0x0010b3ba: or byte ptr [ebp - 0x11ba5f75], cl; call dword ptr [ecx - 0x73]; 
0x000de22d: or byte ptr [ebp - 0x14c76b], cl; call dword ptr [edx + 0x50]; 
0x000de402: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax + 0x52]; 
0x000de38e: or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x000dfed8: or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax + 0x56]; 
0x000e00d6: or byte ptr [ebp - 0x1837b], cl; call dword ptr [eax - 0x75]; 
0x00104148: or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax + 0x56]; 
0x00104346: or byte ptr [ebp - 0x18f7b], cl; call dword ptr [eax - 0x75]; 
0x000922c2: or byte ptr [ebp - 0x193f2f79], cl; call dword ptr [eax - 0x73]; 
0x0007b1c1: or byte ptr [ebp - 0x1ab0ff7d], cl; call dword ptr [eax - 0x73]; 
0x0002e802: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x000b4f57: or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000c5685: or byte ptr [ebp - 0x35f48], cl; call dword ptr [edi + 0x53]; 
0x000c5214: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebp - 0x360363]; dec dword ptr [ebx - 0x362f73]; call dword ptr [eax - 0x75]; 
0x000c63d9: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36476b]; push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x0005006f: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000825be: or byte ptr [ebp - 0x3a], ah; add eax, 0x4fe; add byte ptr [ebp - 0x77], ah; adc eax, 0x7c; ret; 
0x0009b6af: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x0009ba80: or byte ptr [ebp - 0x3f7cfeab], cl; add dword ptr [ecx], edi; ret 0xc72; 
0x001487bb: or byte ptr [ebp - 0x437bf037], al; add al, byte ptr [eax]; add dh, dh; ret 0xf08; 
0x000844d9: or byte ptr [ebp - 0x47d77aa4], cl; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009b406: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000f47ce: or byte ptr [ebp - 0x5c7bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000825e4: or byte ptr [ebp - 0x5e], ah; inc byte ptr [eax + eax]; add byte ptr [ebx + 0x87401f8], al; ret; 
0x0016966d: or byte ptr [ebp - 0x64c3345], cl; call dword ptr [edi + 0x56]; 
0x0014f45a: or byte ptr [ebp - 0x6516f7a], cl; call dword ptr [eax - 0x73]; 
0x001219d2: or byte ptr [ebp - 0x65d0f79], cl; call dword ptr [eax + 0x55]; 
0x001219ed: or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x00121a0b: or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x0010afdd: or byte ptr [ebp - 0x65fdb7f], cl; call dword ptr [eax - 0x73]; 
0x000e4510: or byte ptr [ebp - 0x665237f], cl; call dword ptr [eax - 0x73]; 
0x000d917a: or byte ptr [ebp - 0x6667b79], cl; call dword ptr [eax - 0x73]; 
0x000fb8ae: or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x000fd2ec: or byte ptr [ebp - 0x6737b], cl; call dword ptr [eax - 0x73]; 
0x00072075: or byte ptr [ebp - 0x6831b6a], cl; jmp dword ptr [ebp - 0x75]; 
0x00030170: or byte ptr [ebp - 0x68cc37b], cl; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0002c7ef: or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x00168907: or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x00169cec: or byte ptr [ebp - 0x699ea7d], cl; call dword ptr [ebp + 0x50]; 
0x00168f19: or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x55]; 
0x001688ec: or byte ptr [ebp - 0x699f845], cl; call dword ptr [edi + 0x56]; 
0x00169797: or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x00168922: or byte ptr [ebp - 0x69a076d], cl; call dword ptr [edx - 0x77]; 
0x00168f53: or byte ptr [ebp - 0x69a0775], cl; call dword ptr [ecx - 0x77]; 
0x00168f76: or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x00168945: or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x56]; 
0x001697b6: or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x00159533: or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00151e28: or byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax + 0x56]; 
0x0014dab1: or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x001396f0: or byte ptr [ebp - 0x6a36d6d], cl; call dword ptr [edx + 0x50]; 
0x00139212: or byte ptr [ebp - 0x6a3a969], cl; call dword ptr [edx + 0x50]; 
0x00139572: or byte ptr [ebp - 0x6a3a96d], cl; call dword ptr [edx + 0x50]; 
0x00138a2d: or byte ptr [ebp - 0x6a8876d], cl; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x0011e59b: or byte ptr [ebp - 0x6ab107d], cl; call dword ptr [eax + 0x56]; 
0x0011d158: or byte ptr [ebp - 0x6ad557d], cl; call dword ptr [eax + 0x57]; 
0x0011d3fb: or byte ptr [ebp - 0x6ade67d], cl; call dword ptr [eax + 0x57]; 
0x0011d3e0: or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x0011d3c5: or byte ptr [ebp - 0x6ae2d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d3aa: or byte ptr [ebp - 0x6ae667d], cl; call dword ptr [eax + 0x57]; 
0x0011d38f: or byte ptr [ebp - 0x6ae8d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d374: or byte ptr [ebp - 0x6aeb37d], cl; call dword ptr [eax + 0x57]; 
0x0011d359: or byte ptr [ebp - 0x6aee97d], cl; call dword ptr [eax + 0x57]; 
0x0011d33e: or byte ptr [ebp - 0x6af1f7d], cl; call dword ptr [eax + 0x57]; 
0x0011d323: or byte ptr [ebp - 0x6af6f7d], cl; call dword ptr [eax + 0x57]; 
0x0011d308: or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0011d2ed: or byte ptr [ebp - 0x6afde7d], cl; call dword ptr [eax + 0x57]; 
0x0011d2d2: or byte ptr [ebp - 0x6b0107d], cl; call dword ptr [eax + 0x57]; 
0x0011d2b7: or byte ptr [ebp - 0x6b0447d], cl; call dword ptr [eax + 0x57]; 
0x0011d29c: or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x0011d281: or byte ptr [ebp - 0x6b0ab7d], cl; call dword ptr [eax + 0x57]; 
0x0011d266: or byte ptr [ebp - 0x6b0f77d], cl; call dword ptr [eax + 0x57]; 
0x0011d24b: or byte ptr [ebp - 0x6b13b7d], cl; call dword ptr [eax + 0x57]; 
0x0011d230: or byte ptr [ebp - 0x6b16d7d], cl; call dword ptr [eax + 0x57]; 
0x0011d215: or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x0011d13d: or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0011d1fa: or byte ptr [ebp - 0x6b1e47d], cl; call dword ptr [eax + 0x57]; 
0x0011d1df: or byte ptr [ebp - 0x6b2197d], cl; call dword ptr [eax + 0x57]; 
0x0011d1c4: or byte ptr [ebp - 0x6b2607d], cl; call dword ptr [eax + 0x57]; 
0x0011d1a9: or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011d18e: or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0011d173: or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x00117371: or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x0011d122: or byte ptr [ebp - 0x6b3e37d], cl; call dword ptr [eax + 0x57]; 
0x0011d107: or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x00117390: or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x00117352: or byte ptr [ebp - 0x6b51b6a], cl; call dword ptr [edx - 0x77]; 
0x000de2c1: or byte ptr [ebp - 0x6b6b768], cl; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x0011743a: or byte ptr [ebp - 0x6b6b77d], cl; call dword ptr [eax - 0x73]; 
0x00137cd1: or byte ptr [ebp - 0x6b73279], cl; call dword ptr [eax - 0x77]; 
0x000e9f85: or byte ptr [ebp - 0x6b7907d], cl; call dword ptr [eax + 0x55]; 
0x000ea142: or byte ptr [ebp - 0x6b7977d], cl; call dword ptr [eax + 0x55]; 
0x000ea0b5: or byte ptr [ebp - 0x6b79d7d], cl; call dword ptr [eax + 0x55]; 
0x000e9fff: or byte ptr [ebp - 0x6b7a37d], cl; call dword ptr [eax + 0x55]; 
0x000e9c88: or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x000e9d98: or byte ptr [ebp - 0x6b7b57d], cl; call dword ptr [eax + 0x55]; 
0x000e9c13: or byte ptr [ebp - 0x6b7bb7d], cl; call dword ptr [eax + 0x55]; 
0x000e9f2c: or byte ptr [ebp - 0x6b7c17d], cl; call dword ptr [eax + 0x55]; 
0x000de377: or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000de3d4: or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000cc1db: or byte ptr [ebp - 0x6bac37d], cl; call dword ptr [eax + 0x56]; 
0x000cbd36: or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x000991ab: or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0014cd51: or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x000faca8: or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x000e9dd6: or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x0007d731: or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x00057fea: or byte ptr [ebp - 0x6ce8061], cl; call dword ptr [ecx + 0x53]; 
0x00057a40: or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x00056ea9: or byte ptr [ebp - 0x6cffe4d], cl; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00034c38: or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x00119143: or byte ptr [ebp - 0x6d0c37a], cl; call dword ptr [eax - 1]; 
0x0011c1a3: or byte ptr [ebp - 0x6d0c37d], cl; call dword ptr [eax + 0x6a]; 
0x00145819: or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0002c0d7: or byte ptr [ebp - 0x6d3877d], cl; call dword ptr [eax - 1]; 
0x0002c0b9: or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x00145183: or byte ptr [ebp - 0x6d5a479], cl; call dword ptr [eax - 0x73]; 
0x001364ca: or byte ptr [ebp - 0x6d5a47b], cl; call dword ptr [eax + 0x53]; 
0x000cc265: or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000875b2: or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax - 0x73]; 
0x000cddbf: or byte ptr [ebp - 0x6d5a47f], cl; call dword ptr [eax + 0x53]; 
0x0011b9fa: or byte ptr [ebp - 0x74868b37], al; pop ecx; add al, 0xf6; ret; 
0x0002d6d4: or byte ptr [ebp - 0x74988a2e], al; inc ebx; add al, 0x83; ret; 
0x0012a2e0: or byte ptr [ebp - 0x74a48b40], al; pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x001553e8: or byte ptr [ebp - 0x74bfdb84], cl; dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x0011c4d7: or byte ptr [ebp - 0x74cb8a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00081d6a: or byte ptr [ebp - 0x74ee8b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00081cd5: or byte ptr [ebp - 0x74f18b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000dd1c2: or byte ptr [ebp - 0x76218b2e], al; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x001951fb: or byte ptr [ebp - 0x76ef8b40], al; ret 0xc031; 
0x000aabea: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x0011bcdb: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x000a065b: or byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x001697af: or byte ptr [ebp - 0x7ccb8b40], al; in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0008b34e: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x8b35d; call dword ptr [ebx]; 
0x0006f4d3: or byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000b86ae: or byte ptr [ebp - 0x7efb7884], cl; ret 0; 
0x000cdd72: or byte ptr [ebp - 0x877b], cl; call dword ptr [eax + 0x53]; 
0x0019cceb: or byte ptr [ebp - 0x8949f6d], cl; call dword ptr [edx + 0x50]; 
0x0012e111: or byte ptr [ebp - 0x8b43], cl; call dword ptr [edi + 0x6a]; 
0x0015c7d2: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0015c832: or byte ptr [ebp - 0x8b7b], cl; call dword ptr [eax + 0x56]; 
0x0011946b: or byte ptr [ebp - 0x8f7b], cl; call dword ptr [eax - 0x73]; 
0x0015c989: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00166f0c: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x001676b5: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x000cdffa: or byte ptr [ebp - 0xb363], cl; call dword ptr [ebx + 0x6a]; 
0x0015512b: or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x0015f8d2: or byte ptr [ebp - 0xc682f7d], cl; call dword ptr [eax - 0x73]; 
0x0015f9ea: or byte ptr [ebp - 0xc682f7d], cl; call dword ptr [eax - 0x73]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0015d6da: or byte ptr [ebp - 0xc8bff7d], cl; call dword ptr [eax - 0x73]; 
0x0014af39: or byte ptr [ebp - 0xc], dh; ret; 
0x0015ac2c: or byte ptr [ebp - 0xcb74f7d], cl; call dword ptr [eax - 0x73]; 
0x0010885c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x108870; pop ebx; ret; 
0x00113868: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x113880; pop ebx; ret; 
0x001146bc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1146d0; pop ebx; ret; 
0x0011470c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114720; pop ebx; ret; 
0x0011839c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1183b0; pop ebx; ret; 
0x001183ec: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x118400; pop ebx; ret; 
0x0011eddc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11edf0; pop ebx; ret; 
0x0005846c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x58480; pop ebx; ret; 
0x00091f08: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x91f20; pop ebx; ret; 
0x0010353c: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x001575ca: or byte ptr [ebp - 1], dl; jbe 0x1575db; push edi; call dword ptr [eax + 8]; 
0x0015760d: or byte ptr [ebp - 1], dl; jbe 0x15761e; push edi; call dword ptr [eax + 0x10]; 
0x0016179b: or byte ptr [ebp - 7], ah; call dword ptr [eax - 0x73]; 
0x00076b24: or byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x0008134a: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0007b44d: or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007b48b: or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008cb77: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00084027: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008cb47: or byte ptr [ebx + 0x137702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008af8b: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00085a8b: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008afab: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00084057: or byte ptr [ebx + 0x2010247c], al; je 0x84068; add esp, 8; pop ebx; ret; 
0x0015a4ff: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x00156d6b: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x000226b7: or byte ptr [ebx + 0x24448900], cl; or byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x0008375e: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x00195799: or byte ptr [ebx + 0x29042444], cl; ret 0xc085; 
0x0019b5d1: or byte ptr [ebx + 0x2914247c], cl; ret; 
0x0008b37b: or byte ptr [ebx + 0x2e28310], cl; je 0x8b390; xor eax, eax; ret; 
0x00155f97: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x001851ec: or byte ptr [ebx + 0x390c2454], cl; ret 0x1d72; 
0x0018302c: or byte ptr [ebx + 0x390c2454], cl; ret 0x2972; 
0x0016b13a: or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x24]; 
0x0016b1da: or byte ptr [ebx + 0x3a083], cl; add byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x28]; 
0x000c33fe: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00094c7e: or byte ptr [ebx + 0x418d1048], cl; jmp dword ptr [ecx]; 
0x000fbc37: or byte ptr [ebx + 0x430888], cl; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x3f7f723f]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x0007a661: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0015bb52: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00037339: or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x000888de: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0015f6ee: or byte ptr [ebx + 0x478b04c1], al; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0009e44a: or byte ptr [ebx + 0x4899004], cl; and al, 0x85; ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0015e9c3: or byte ptr [ebx + 0x4a8b0cec], al; add al, 0x52; call dword ptr [ecx + 0x10]; 
0x0015529e: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00155408: or byte ptr [ebx + 0x50572048], cl; call dword ptr [ecx + 8]; 
0x0015bab2: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x000dc0f3: or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x00162716: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0006e8b3: or byte ptr [ebx + 0x565704ec], al; push ebp; call dword ptr [ebx + 0x1c]; 
0x000758fc: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x0012e9ba: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000b217c: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aed26: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a0f05: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0007bb07: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00097e00: or byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00080a15: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00080645: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00034cfa: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0007fb63: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00036578: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret 4; 
0x00087181: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00028b72: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000c090d: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x000fa2e9: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00051191: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013deae: or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x00058e5a: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009258f: or byte ptr [ebx + 0x5e], bl; ret; 
0x000755e4: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x001143d0: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00122bc1: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x00058390: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x0013bcf8: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013bcf8: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00157a2a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x001579da: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00160282: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x00160471: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x00155282: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x0015fbe4: or byte ptr [ebx + 0x74fff878], al; jne 0x15fb6f; ret 0x3901; 
0x0015ba34: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x00156e12: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016e00b: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x00155822: or byte ptr [ebx + 0xa34083], cl; add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0007cf7b: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0015a4db: or byte ptr [ebx + 0xb083], cl; add byte ptr [ebp + 0xac2494], cl; add byte ptr [eax], al; push edx; push esi; call dword ptr [eax + 4]; 
0x0008afeb: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000896ee: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000404b9: or byte ptr [ebx + 0xf0c2454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00121d34: or byte ptr [ebx + 5], bh; mov dword ptr [esp], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 4], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013cdde: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0012a10a: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x00132958: or byte ptr [ebx - 0x1137d], cl; jmp dword ptr [ebp + 3]; 
0x0014f262: or byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x7d]; 
0x0008e05e: or byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x0004d16b: or byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x39]; 
0x0008ebe3: or byte ptr [ebx - 0x1337e], cl; jmp dword ptr [ebp - 0x75]; 
0x00048003: or byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0014f17e: or byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0010ad0b: or byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00145f81: or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x00030b66: or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x0015f6f9: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x001533df: or byte ptr [ebx - 0x13b6e], cl; jmp dword ptr [ebp - 0x75]; 
0x0012afb0: or byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp - 0x75]; 
0x0015b71b: or byte ptr [ebx - 0x16fbdbbc], cl; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x001082a9: or byte ptr [ebx - 0x17], bl; sar dh, 0xff; inc dword ptr [ebx - 0x7c72f314]; sbb al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x000ee64e: or byte ptr [ebx - 0x17d7dbbc], cl; mov eax, 0x89ffff97; ret 0xe883; 
0x00156de7: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00156e5c: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00035ffa: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011cb25: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x0007b657: or byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0008007a: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000c5dc1: or byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0012a8f8: or byte ptr [ebx - 0x367af7b8], cl; je 0x12a908; xor eax, eax; pop ebx; ret; 
0x00080a2a: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000eff93: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0015c162: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x15c173; sub esp, 0xc; push esi; call eax; 
0x001575d2: or byte ptr [ebx - 0x3f7aef3c], al; je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001592b7: or byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0010f928: or byte ptr [ebx - 0x47abdbb4], cl; xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00102110: or byte ptr [ebx - 0x47c7dbac], cl; mov ah, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001021e0: or byte ptr [ebx - 0x47c7dbac], cl; mov ch, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123f72: or byte ptr [ebx - 0x47cbdb84], cl; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddf69: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001215c9: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ddd09: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001217f9: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x121802; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00116249: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x116251; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010a3e9: or byte ptr [ebx - 0x47fbdba4], cl; or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00108f59: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121289: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00083b97: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x0006319c: or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x00061dfe: or byte ptr [ebx - 0x4f363], cl; call dword ptr [esi + 0x50]; 
0x00061a36: or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x00060db7: or byte ptr [ebx - 0x4f77b], cl; call dword ptr [edi - 1]; 
0x00060b84: or byte ptr [ebx - 0x50b4b], cl; call dword ptr [edi - 1]; 
0x0005b5dc: or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005afe7: or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x0005b24a: or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x0015d173: or byte ptr [ebx - 0x6b72afbd], cl; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x00150b36: or byte ptr [ebx - 0x72d7dbbc], cl; or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x001763c7: or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x000fac8d: or byte ptr [ebx - 0x72ebdb84], cl; xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x000faecd: or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000fb17a: or byte ptr [ebx - 0x72ebdbbc], cl; cmp ch, 0x48; stc; call dword ptr [eax + 0x56]; 
0x000fb016: or byte ptr [ebx - 0x72ebdbbc], cl; or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0014fdcc: or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503ee: or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x000f4e8f: or byte ptr [ebx - 0x72ebdbbc], cl; xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x00092c62: or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [eax - 0x2c], -0x1a; call dword ptr [eax - 0x73]; 
0x001372e6: or byte ptr [ebx - 0x72efdbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0014ee52: or byte ptr [ebx - 0x72efdbbc], cl; cwde; inc esp; popal; stc; call dword ptr [ebx - 0x73]; 
0x001604ba: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000de518: or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000837fb: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0008cbb8: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0002fe57: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x0016e027: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000226bd: or byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ecx - 0x16fbdbbc], cl; ret; 
0x00160edf: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000c5113: or byte ptr [ebx - 0x75], dl; popfd; ror cl, 0xff; call dword ptr [ecx - 0x18]; 
0x0011b151: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x00121ded: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000ef6bb: or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x000827b3: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x0011b158: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0019b5ae: or byte ptr [ebx - 0x7cfb7c84], cl; ret; 
0x000585d5: or byte ptr [ebx - 0x7cfefbbe], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000f8e4e: or byte ptr [ebx - 0x7f723383], cl; cmp al, 0x2f; stc; call dword ptr [eax - 1]; 
0x0012cda6: or byte ptr [ebx - 0x8f73], cl; dec dword ptr [ebx - 0x936b]; call dword ptr [edi + 0x50]; 
0x001131bb: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x0012d051: or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x000809b7: or byte ptr [ebx - 0xe7dbbc], cl; je 0x809e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0012d97e: or byte ptr [ebx - 1], dl; jae 0x12d9b3; call eax; 
0x0011d3da: or byte ptr [ebx], 0; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x00124a76: or byte ptr [ebx], 0x56; stc; call dword ptr [eax + 0x57]; 
0x000fcb17: or byte ptr [ebx], al; add byte ptr [ecx - 0x71b4b], cl; dec dword ptr [ecx - 0x3f7f723a]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x000fbc3a: or byte ptr [ebx], al; add byte ptr [ecx - 0x71b73], cl; dec dword ptr [ecx - 0x3f7f723f]; dec ecx; in eax, dx; call dword ptr [eax - 0x73]; 
0x0009343a: or byte ptr [ebx], bh; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0009ea16: or byte ptr [ebx], dl; pop ebx; pop esi; ret; 
0x00074e86: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0011d024: or byte ptr [ecx + 0x1b801], cl; add byte ptr [eax], al; ret; 
0x0017a44a: or byte ptr [ecx + 0x1c030004], al; mov edi, dword ptr [esi]; jmp ebx; 
0x0003647d: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x00039023: or byte ptr [ecx + 0x24448b03], cl; add al, 0x83; ret; 
0x00076f5c: or byte ptr [ecx + 0x244c8bc8], cl; adc cl, al; clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00025b85: or byte ptr [ecx + 0x29008bf2], cl; ret 0xfa83; 
0x0016f7cd: or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x00025678: or byte ptr [ecx + 0x39242454], cl; ret; 
0x0011ba33: or byte ptr [ecx + 0x418b0447], cl; add al, 0x89; ret; 
0x00099625: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000b21b9: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aed56: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00081401: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x00081362: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x0007bab1: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x0015fedb: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000c9f01: or byte ptr [ecx + 0x536c247c], cl; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000dc0f0: or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x00074e80: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0002f715: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000a0bf4: or byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x000c08fa: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x00074e52: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00155f9a: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00199e68: or byte ptr [ecx + 0x9424ac], 0; add byte ptr [ecx], cl; ret 0xbc89; 
0x00195d04: or byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000a4ffd: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xa4e61; pop ebx; ret; 
0x0019788f: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000ff527: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a501f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xa4e61; pop ebx; ret; 
0x00199549: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0003a974: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x000a505d: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xa4e61; pop ebx; ret; 
0x00131184: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00094f7b: or byte ptr [ecx + 0xf14244c], cl; test edx, esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c9178: or byte ptr [ecx + 0xfffffe3], al; add byte ptr [ecx], al; ret; 
0x000377b8: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x000df5da: or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00035dd7: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x00102d57: or byte ptr [ecx - 0x13f7b], cl; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0006aeee: or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x0014c0c5: or byte ptr [ecx - 0x16fbdbbc], cl; add dword ptr [eax], esp; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000e1dcf: or byte ptr [ecx - 0x16fbdbbc], cl; pop es; cmp bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x00037510: or byte ptr [ecx - 0x16fbdbbc], cl; push esi; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0002e1bf: or byte ptr [ecx - 0x1bb6b], cl; call dword ptr [esi + 0x51]; 
0x000334f3: or byte ptr [ecx - 0x1d76b], cl; call dword ptr [eax - 1]; 
0x000aa56c: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00076630: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0012e9d5: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00083ca4: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x0009943d: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x00083cbf: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x00083acb: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x001029eb: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x000800d6: or byte ptr [ecx - 0x3fcefbba], cl; pop ebx; pop esi; pop edi; ret; 
0x00102671: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x000d619e: or byte ptr [ecx - 0x47fbdbbc], cl; or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00035282: or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x00060068: or byte ptr [ecx - 0x51373], cl; jmp dword ptr [ebp - 0x39]; 
0x000d8c13: or byte ptr [ecx - 0x567a7239], cl; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x00176554: or byte ptr [ecx - 0x5c16a428], cl; dec edx; stc; jmp dword ptr [esi - 0x70]; 
0x00176584: or byte ptr [ecx - 0x5c16a428], cl; pop edx; stc; jmp dword ptr [esi - 0x70]; 
0x000fc3f4: or byte ptr [ecx - 0x6d76b], cl; call dword ptr [eax - 1]; 
0x0015eb5b: or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00130f1b: or byte ptr [ecx - 0x74e67404], cl; jno 0x130f27; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; jmp edx; 
0x0012ba3e: or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x001484f3: or byte ptr [ecx - 0x76efdbac], cl; ret 0xeac1; 
0x0015adfc: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000b15fd: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000aa40c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x0007b1be: or byte ptr [ecx - 0x7c72f7bb], cl; add byte ptr [edi - 0x1b], cl; call dword ptr [eax - 0x73]; 
0x00030b6c: or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x0013da17: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x8dc3; 
0x0012cee5: or byte ptr [ecx - 0x836b], cl; call dword ptr [edx + 0x56]; 
0x0002dad4: or byte ptr [ecx - 0x8f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0012c30a: or byte ptr [ecx - 0x976b], cl; call dword ptr [edx + 0x53]; 
0x0002f172: or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x00099554: or byte ptr [ecx - 1], dl; jae 0x9957d; call eax; 
0x000943b3: or byte ptr [ecx], ah; ret; 
0x0016133d: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000d62d8: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d61a4: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0010348a: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00081dc6: or byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x00103510: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0014a62f: or byte ptr [ecx], al; je 0x14a656; add esp, 0xc; ret; 
0x00093c0d: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0009d57e: or byte ptr [ecx], al; ret 0x5489; 
0x0003564c: or byte ptr [ecx], al; ret 0x8952; 
0x0010a9f2: or byte ptr [ecx], al; ret; 
0x000c945c: or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x00061ab2: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00083aa2: or byte ptr [ecx], al; xor eax, eax; ret; 
0x00087207: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0014e6f2: or byte ptr [ecx], bh; ret 0x1074; 
0x00181f10: or byte ptr [ecx], bh; ret 0x1d72; 
0x00163d54: or byte ptr [ecx], bh; ret 0x2775; 
0x0017dca0: or byte ptr [ecx], bh; ret 0x2972; 
0x001649cf: or byte ptr [ecx], bh; ret 0x2c75; 
0x001642a1: or byte ptr [ecx], bh; ret 0x4a75; 
0x00165e6f: or byte ptr [ecx], bh; ret 0x4c75; 
0x000e0d41: or byte ptr [ecx], bh; ret 0x830f; 
0x001030a5: or byte ptr [ecx], bh; ret 0x840f; 
0x00038e6e: or byte ptr [ecx], bh; ret 0x8e0f; 
0x0016f7d1: or byte ptr [ecx], bh; ret 0x9774; 
0x0009ad90: or byte ptr [ecx], bh; ret 0xeb75; 
0x0006e013: or byte ptr [ecx], bh; ret; 
0x0015a00e: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0009734f: or byte ptr [ecx], bh; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00141aac: or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0007bf6a: or byte ptr [ecx], ch; ret 0x352; 
0x000d00af: or byte ptr [ecx], ch; ret 0xd929; 
0x0007cc14: or byte ptr [ecx], ch; ret 0xfa39; 
0x00144d3c: or byte ptr [ecx], ch; ret; 
0x0014ec09: or byte ptr [ecx], cl; fisub dword ptr [ecx]; ret 0x448b; 
0x00121cd7: or byte ptr [ecx], dh; call dword ptr [edi + 0x56]; 
0x00109368: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000d5db8: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00083c9e: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0003a805: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00158b00: or byte ptr [ecx], dh; ret 0xc889; 
0x00158982: or byte ptr [ecx], dh; ret 0xe281; 
0x00152503: or byte ptr [ecx], dh; ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00086746: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00086a36: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d5fbb: or byte ptr [edi + 0x53], dl; call eax; 
0x000a8e85: or byte ptr [edi + 0x5b], bl; ret; 
0x000ab07d: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c8a27: or byte ptr [edi + 0x5e], bl; ret; 
0x0016d7cb: or byte ptr [edi + 0xf], dh; mov eax, edx; mov edx, dword ptr [ecx - 0xc8]; shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x000c1946: or byte ptr [edi + ebp*8 - 0x75], dh; pop ebp; sar byte ptr [ecx], 1; ret; 
0x0015716e: or byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0011d269: or byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0002e9ab: or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x000c795c: or byte ptr [edi], 0x30; stc; call dword ptr [eax - 0x18]; 
0x001310d1: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0012abf6: or byte ptr [edi], 0x57; stc; call dword ptr [eax - 1]; 
0x000e5cb7: or byte ptr [edi], 0xa3; ret 0x830f; 
0x00108ea4: or byte ptr [edi], 0xa3; ret 0xdc73; 
0x00053130: or byte ptr [edi], 0xb6; push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x00052249: or byte ptr [edi], 0xb6; push eax; or al, 0xf6; ret 0xf40; 
0x0010ab1a: or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000dc3d2: or byte ptr [edi], cl; lahf; ret; 
0x0002444a: or byte ptr [edi], cl; mov bh, 0x87; aam 0x6e; stc; jmp dword ptr [esi - 0x77]; 
0x0007dbc6: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0015746c: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x0011e3fb: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00188e4b: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x00187692: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x000c3404: or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00192dca: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0018e5cc: or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000aabed: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000c890a: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000971d7: or byte ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00096a8d: or byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0011f2e9: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0011f2a8: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000f9ae8: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x001252ec: or byte ptr [edi], cl; xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x001145a7: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00082fac: or byte ptr [edx + 0x21], bh; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010155c: or byte ptr [edx + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00103a3e: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x0015af35: or byte ptr [edx + 0x6a], dl; add eax, 0xb4838d50; jb 0x15af38; call dword ptr [eax - 0x18]; 
0x00160925: or byte ptr [edx + 0x6a], dl; add eax, 0xb4838d50; jb 0x160928; call dword ptr [eax - 0x18]; 
0x000b2148: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x00145fbb: or byte ptr [edx + 1], ch; push eax; call 0x145ec0; add esp, 0x18; pop ebx; ret; 
0x001252ea: or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x0008ed2f: or byte ptr [edx + eax*4], 0xf9; call dword ptr [eax - 0x18]; 
0x001495fb: or byte ptr [edx + esi + 0x31], dh; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0007de40: or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00076a95: or byte ptr [edx - 1], ch; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x000fb01c: or byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x0015adf5: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000936b6: or byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000b3928: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0015744f: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003a5c7: or byte ptr [edx], ch; push edx; call edi; 
0x0007980c: or byte ptr [edx], ch; push esi; call dword ptr [ebp + 8]; 
0x00070617: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x000ae6d2: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000aedd6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b21fc: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed76: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aed97: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab95b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000abc4c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000aa31b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000aa5ec: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000a7156: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000a7296: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000a2d66: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000a2ea6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000a7086: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000a72f6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000a2cb6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000a5a2f: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000a2f06: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000a7177: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000a72b7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000a2d87: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000a2ec7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000ae607: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b17ca: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x00087ddd: or byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00087bd9: or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x00079b87: or byte ptr [esi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x001465c7: or byte ptr [esi - 0x3f], ah; ret 0xff08; 
0x0010f56b: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x0010dccb: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0017bb6a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x001463d4: or byte ptr [esi - 0x77], ah; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x00194e9d: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x00099465: or byte ptr [esi - 1], dl; jae 0x9948e; call eax; 
0x00154b45: or byte ptr [esi - 1], dl; je 0x154b6e; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x000e6fb6: or byte ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x000e6fb6: or byte ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; jmp dword ptr [esi]; 
0x000aac76: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f91ad: or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x00137d65: or ch, 0x48; stc; call dword ptr [eax - 1]; 
0x00035e0c: or ch, bl; inc esp; and al, 4; ret; 
0x00035f82: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x000389e8: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x3c560; add esp, 0x1c; ret; 
0x0008a972: or cl, al; call dword ptr [ebx]; 
0x000837fe: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0006e327: or cl, al; clc; add ch, byte ptr [ecx]; ret; 
0x000362b6: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000794a5: or cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00073a25: or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x0015cbdc: or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x00159d68: or cl, byte ptr [ebx + 0x3920245c]; pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x0017ba55: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0014fe71: or cl, byte ptr [ebx - 0x13b58]; jmp dword ptr [ebp - 0x75]; 
0x0007a5a7: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x0017da25: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0013f163: or cl, byte ptr [ebx - 0x76ebdbbc]; ret 0xc085; 
0x00170475: or cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x00030475: or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x000fb01d: or cl, byte ptr [ecx - 7]; call dword ptr [eax + 0x56]; 
0x000eff91: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00141aa2: or cl, byte ptr [edi]; mov bh, 0x41; add cl, byte ptr [ecx - 0x393e9907]; or byte ptr [ecx], ch; fldenv [esi - 0x3f]; ret 0xf08; 
0x0007cf7d: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00089c38: or cl, byte ptr [edi]; mov edi, 0x11c85; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000aac35: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac2a8: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4c07: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000fb74b: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x001459f1: or cl, byte ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00066ebd: or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00100ed6: or cl, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0005de87: or cl, ch; add eax, 0x8bffffc1; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0005c7f7: or cl, ch; inc ecx; fcos; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000b452f: or cl, cl; jne 0xb4535; xor eax, eax; ret; 
0x0008d91d: or cl, dl; call 0xc039dbad; ret; 
0x0008379e: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0014fdd2: or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503f4: or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00150b3c: or dh, 0x61; stc; call dword ptr [eax - 1]; 
0x00113bb3: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113aaf: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001235e8: or dh, 1; call dword ptr gs:[0x10]; 
0x000d34e7: or dh, bh; inc dword ptr [ebx + 0x73e910c4]; idiv edi; call dword ptr [ecx + 0x50]; 
0x00083a97: or dh, bh; xor eax, eax; ret; 
0x000513f5: or dh, byte ptr [eax + ebp*2 - 0x7d]; call dword ptr [eax]; 
0x001905e5: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1905f1; neg eax; ret; 
0x000759cd: or dh, byte ptr [eax + edx + 0x39]; retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00081f6a: or dh, byte ptr [ebp + 0x3e]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008e8d0: or dh, byte ptr [ebp + 0xd]; xor eax, eax; pop ebx; ret; 
0x000b392a: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x00035d05: or dh, byte ptr [ebp + 8]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0008e882: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x000e9367: or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00193ef2: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00192eb2: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x00190263: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x190270; neg eax; ret; 
0x001558fd: or dh, dh; ret 0x7401; 
0x0008c7c3: or dh, dh; ret 0x7502; 
0x0009409f: or dh, dh; ret 0xf0f; 
0x00098139: or dh, dh; ret; 
0x000b487a: or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x0007f3c0: or dword ptr [eax + 0x3c], 0x80; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x7f3c0; ret; 
0x0011743c: or dword ptr [eax + 0x49], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0016530f: or dword ptr [eax + 0x500000a5], 0xffffff8d; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0011d30a: or dword ptr [eax + 0x50], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0014e4a6: or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x0014e28a: or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x00083aa0: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x00083cbc: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00114439: or dword ptr [eax + eax], edx; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011446a: or dword ptr [eax + eax], edx; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0011e7e8: or dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0011dfa2: or dword ptr [eax - 0x5f], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0005fa42: or dword ptr [eax - 0x76000001], 0xfffabcbd; dec dword ptr [ebx - 0x4ef43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; call dword ptr [eax - 0x77]; 
0x000cbf62: or dword ptr [eax - 0x7cffffc3], 0xfffffff8; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0008b125: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0011d268: or dword ptr [eax], 0x4f; stc; call dword ptr [eax + 0x57]; 
0x0016179a: or dword ptr [eax], 0x65; stc; call dword ptr [eax - 0x73]; 
0x0014e398: or dword ptr [eax], 0x72; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0008b100: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x00084681: or dword ptr [eax], 0xa30f0000; ret 0x820f; 
0x00083f2c: or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008b213: or dword ptr [eax], 0xa30f0000; ret 0x9d72; 
0x000826d2: or dword ptr [eax], 0xa30f0000; ret 0xc272; 
0x00082650: or dword ptr [eax], 0xa30f0000; ret 0xc472; 
0x00082ce1: or dword ptr [eax], 0xa30f0000; ret 0xce72; 
0x00083e78: or dword ptr [eax], 0xa30f0000; ret 0xcf72; 
0x0008308d: or dword ptr [eax], 0xa30f0000; ret 0xd272; 
0x000847f2: or dword ptr [eax], 0xa30f0000; ret 0xd572; 
0x00084ec1: or dword ptr [eax], 0xa30f0000; ret 0xe372; 
0x0011c1f5: or dword ptr [eax], 0xffffffba; stc; call dword ptr [eax - 0x18]; 
0x000fd8b5: or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ch; popfd; stc; call dword ptr [eax - 0x18]; 
0x0010a3ef: or dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00156c68: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000220c9: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x000789c1: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00102682: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00027f6d: or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x00145345: or dword ptr [eax], eax; add byte ptr [ebx - 0x7872f314], al; xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0011d2e8: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0011d303: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; dec eax; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011d31e: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; nop; push eax; stc; call dword ptr [eax + 0x57]; 
0x0011d2cd: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0006904f: or dword ptr [eax], eax; add byte ptr [ebx - 0xaafb14], al; je 0x6907d; inc esp; push edi; call dword ptr [eax + 0x1c]; 
0x00093a42: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; je 0x93a70; sub byte ptr [ebp - 0x6bf1472], cl; jmp dword ptr [ebp - 0x5f]; 
0x000aab0b: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d8c35: or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x000d8d9c: or dword ptr [eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x0012e993: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x000218bf: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x0013e176: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e242: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a87a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002194a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x0014de4a: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x0012e9c2: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x00156614: or dword ptr [ebp + 0x63], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013a833: or dword ptr [ebp - 0x72ffd98c], 0xfffbc8b5; jmp dword ptr [esi - 0x70]; 
0x000aac0d: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4be2: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xa4bec; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0019d07d: or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000cd6b0: or dword ptr [ebx + 0x45], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000db5cf: or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001357af: or dword ptr [ebx + 0x5a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ce66e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000fa343: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00123506: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x001029b3: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003d3d0: or dword ptr [ebx + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x001138ca: or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00131521: or dword ptr [ebx - 0x1136d], ecx; jmp dword ptr [ebp - 0x77]; 
0x000479f3: or dword ptr [ebx - 0x1337b], ecx; jmp dword ptr [ebp - 0x77]; 
0x00087316: or dword ptr [ebx - 0x2708fb3c], eax; pop ebx; pop esi; ret; 
0x00098cf9: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x0004cc3b: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x0015ac20: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcb74f7d], cl; call dword ptr [eax - 0x73]; 
0x0015d6ce: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc8bff7d], cl; call dword ptr [eax - 0x73]; 
0x00072846: or dword ptr [ebx - 0xf76fb3c], eax; pop ebx; pop esi; ret; 
0x0014d85b: or dword ptr [ebx], 0x20; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000cbd38: or dword ptr [ebx], 0x45; stc; call dword ptr [eax + 0x56]; 
0x00037437: or dword ptr [ecx + 0x124c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00021471: or dword ptr [ecx + 0x197890], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x00090430: or dword ptr [ecx + 0x40], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000b43a1: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xb439c; xor eax, eax; ret; 
0x0013dc6e: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x00037b32: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x00083bb0: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000cd69d: or dword ptr [ecx + ebx*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001456b4: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf0c244c], 0x94; ret 0xa3c; 
0x00145854: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d0c579], cl; call dword ptr [eax + 0x56]; 
0x0016dcc9: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x0014da0d: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x000d6028: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a9d6: or dword ptr [ecx], eax; ret; 
0x0012e896: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000997d8: or dword ptr [ecx], edi; ret 0x3374; 
0x00167577: or dword ptr [ecx], edi; ret 0x850f; 
0x0009631d: or dword ptr [ecx], edi; ror byte ptr [ecx + 0xf78246c], 1; inc edi; ret 0x548b; 
0x000b3404: or dword ptr [ecx], edi; sal byte ptr [edi - 0x31], 1; sub eax, esi; pop ebx; pop esi; ret; 
0x0014701a: or dword ptr [ecx], esi; fild dword ptr [eax + 0xf2eff78]; xchg esp, eax; ret; 
0x00023ae6: or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ac790: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000fa973: or dword ptr [edi - 0xd], ecx; dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00135ec4: or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x0014ac54: or dword ptr [edi], ecx; lahf; ret; 
0x000f4f2f: or dword ptr [edi], ecx; mov dh, 0xc; js 0xc0925545; add dword ptr [ecx], edi; ret 0xda75; 
0x000aac10: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000a4be5: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x0004dbfc: or dword ptr [edi], ecx; xchg ch, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0003fe05: or dword ptr [edi], ecx; xchg edi, eax; ret 0xd284; 
0x0009a0d2: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00125c77: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x00084864: or dword ptr [edx + 0x24], 2; xor eax, eax; pop ebx; pop edi; ret; 
0x000e9d9a: or dword ptr [edx + 0x48], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x00193ee2: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x00192ea2: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x0016aa61: or dword ptr [edx + 0x66], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00083ca1: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0016e510: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00037f68: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00144f31: or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x000b5eea: or dword ptr [esi + 0x44], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00121067: or dword ptr [esi + 0x5b], ebx; jl 0x216d0; ret; 
0x000b2e63: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x00193143: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b2ed3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x0007101c: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x00031d1c: or dword ptr [esi], 0x24448900; and al, 0x89; ret; 
0x000e49c4: or dword ptr [esi], 0x48; stc; call dword ptr [eax - 0x18]; 
0x0015af48: or dword ptr [esi], 0x64; stc; call dword ptr [eax - 0x73]; 
0x00080a13: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000d8d9b: or dword ptr es:[eax], eax; add esp, 0x10; mov eax, edi; call eax; 
0x00021dae: or eax, 0x14; jne 0x21db9; add esp, 0x1c; ret; 
0x000caa3e: or eax, 0x14; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x000a4c59: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008aff0: or eax, 0x2890f00; xor eax, eax; ret; 
0x000936a7: or eax, 0x29570500; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x00093617: or eax, 0x29e70500; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935f7: or eax, 0x2a070500; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000935a7: or eax, 0x2a570500; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00046cc0: or eax, 0x39000004; ret; 
0x00098b2c: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00193f12: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x0008fc2d: or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x0014da71: or eax, 0x44ec8100; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00192ed2: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x0019cfbe: or eax, 0x500cec83; call edx; 
0x000c5ead: or eax, 0x538b9066; add al, 0x83; ret; 
0x0003a9b2: or eax, 0x5b04c483; pop esi; ret; 
0x0012d962: or eax, 0x5b08c483; ret; 
0x000d9b82: or eax, 0x5b3e8965; pop esi; pop edi; ret; 
0x00107c49: or eax, 0x5b54c483; pop esi; ret; 
0x00107d09: or eax, 0x5b64c483; pop esi; ret; 
0x00072c52: or eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x001211f2: or eax, 0x5d5f5e5b; ret; 
0x001550da: or eax, 0x5e5bc031; pop edi; ret; 
0x0015935a: or eax, 0x5ec0315b; pop edi; ret; 
0x000aca11: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x0014e41f: or eax, 0x61; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00099d9b: or eax, 0x63c38100; ret 0x18; 
0x000ab2e8: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000b24bb: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefe8: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013dc88: or eax, 0x81000308; ret; 
0x0011ff88: or eax, 0x810004e5; ret; 
0x00119e88: or eax, 0x81000546; ret; 
0x000db588: or eax, 0x8100092f; ret; 
0x00078688: or eax, 0x81000f5e; ret; 
0x00070e88: or eax, 0x81000fd6; ret; 
0x000aac97: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aeff1: or eax, 0x824448b; pop esi; ret; 
0x000fa8b4: or eax, 0x8300768d; ret 0xd101; 
0x0012ec9a: or eax, 0x8301478d; ret; 
0x0009cf0e: or eax, 0x830a8890; ret 0x8301; 
0x0011d4e1: or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x00140585: or eax, 0x83fffffb; in al, dx; or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0012a14f: or eax, 0x83fffffb; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x000faec7: or eax, 0x83fffffe; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x00114e2f: or eax, 0x83ffffff; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0002e82d: or eax, 0x89000010; ret 0x858b; 
0x0012e845: or eax, 0x89ac458b; inc ebp; mov ah, 0x89; ret; 
0x000ac33a: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00081c4a: or eax, 0x8a165; add byte ptr [eax], al; mov byte ptr [eax + 0x4fe], 0; ret; 
0x00094574: or eax, 0x8ac68100; sbb bl, byte ptr [ecx]; add byte ptr [ebx - 0x77], dl; ret; 
0x001234f1: or eax, 0x8b000000; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x001557e8: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0011e86f: or eax, 0x8dfff110; or dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0014aee8: or eax, 0x8dffffff; add dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x000343f5: or eax, 0x948b6877; mov bl, 0; je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000563d1: or eax, 0xa105e900; cld; jmp dword ptr [esi - 0x70]; 
0x00099c48: or eax, 0xb6c58100; ret; 
0x000d7a1a: or eax, 0xb8000001; fadd qword ptr [eax]; add byte ptr [eax], al; cmovae esi, ecx; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b24c4: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x001191f8: or eax, 0xc483ffff; adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x0008d64a: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00093637: or eax, 0xc7c28100; sub dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x000a59cb: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00099d2b: or eax, 0xd3c38100; ret 0x18; 
0x0014d52b: or eax, 0xebc1fff9; add edi, dword ptr [esi]; jmp ecx; 
0x00049d52: or eax, 0xebfc7e8b; ret; 
0x000fb8a9: or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x001477ee: or eax, 0xec835300; adc bh, bh; je 0x14781b; sbb al, 0xe8; ret; 
0x000cb330: or eax, 0xf000000; inc edi; ret 0x960f; 
0x000a4c56: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000ac337: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000aac94: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00093705: or eax, 0xf9c28100; sub byte ptr [ecx], bl; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0008bd41: or eax, 0xff087b81; leave; lcall 1, 0x31870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0008bfc4: or eax, 0xff087e81; leave; lcall 0, 0xce870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00035a48: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0008de41: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x00083afd: or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00084721: or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000574f0: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0009ae01: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00048711: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000dd272: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008e899: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0012331e: or eax, dword ptr [eax]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0x3c]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00156c82: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0011d411: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x000745f7: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0011d3a5: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; cdq; push ecx; stc; call dword ptr [eax + 0x57]; 
0x0011d3db: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x0011d3c0: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0011d3f6: or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x00057e3e: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x0019403e: or eax, dword ptr [eax]; je 0x1940c2; mov eax, 0xc; pop edi; ret; 
0x001680bc: or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x000b51ef: or eax, dword ptr [eax]; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00174668: or eax, dword ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dd08e: or eax, dword ptr [ebp - 0x7c128a25]; rol byte ptr [ecx], 0x39; ret 0xee75; 
0x000cbd39: or eax, dword ptr [ebp - 7]; call dword ptr [eax + 0x56]; 
0x000754a8: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0009d044: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00020f40: or eax, dword ptr [ebx + 0x7400d07d]; sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x0013df93: or eax, dword ptr [ebx - 0x3d7efe17]; add dl, cl; lcall 0x3485, 0x8d82eb3b; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x00156b44: or eax, dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x0008852a: or eax, dword ptr [ebx - 0x78f0f408]; mov al, byte ptr [0xbafffffc]; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00074ae5: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016a12f: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003791b: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00057731: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005887a: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d64f0: or eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d6422: or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x000c04c5: or eax, dword ptr [edi]; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00085b04: or eax, dword ptr [esp + 8]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00035a37: or eax, ecx; ret; 
0x000360dd: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00160af4: or eax, edi; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013110d: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000711ad: or eax, edx; mov dword ptr [ebx], eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00113f75: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00085add: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00035a77: or eax, edx; mov dword ptr [esp + 0xc], eax; fld xword ptr [esp + 4]; ret; 
0x00036147: or eax, edx; mov dword ptr [esp + 4], eax; fld dword ptr [esp + 4]; ret; 
0x0004c5a3: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035e07: or eax, edx; mov dword ptr [esp + 8], eax; fld qword ptr [esp + 4]; ret; 
0x0004c55a: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001232ca: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00170f3f: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x001026d5: or eax, edx; pop ebx; ret; 
0x0011e3e3: or eax, edx; ret; 
0x0008b178: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0011e454: or eax, esi; pop esi; pop edi; or eax, ecx; ret; 
0x0013a113: or ebx, 0x5c; stc; call dword ptr [eax - 0x18]; 
0x0013a113: or ebx, 0x5c; stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x00103168: or ebx, 0xffffffff; mov ecx, eax; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00123ff4: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000584d4: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000ac7d0: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x001842aa: or ebx, dword ptr [edi - 0x18]; call 0x82184153; ret; 
0x00113ff9: or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x00144f2b: or ecx, dword ptr [ebp + 0x3c002674]; or dword ptr [edx + ecx - 0x7d], esi; ret; 
0x00072dec: or ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000a5042: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000a0a83: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x0002f649: or ecx, dword ptr [ebx - 0x14378]; jmp dword ptr [ebp - 0x77]; 
0x00033bf5: or ecx, dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x000d7989: or ecx, dword ptr [ecx - 0x16fbdbbc]; dec ebp; cld; jmp dword ptr [esi - 0x70]; 
0x000d79b9: or ecx, dword ptr [ecx - 0x16fbdbbc]; int 0x26; cld; jmp dword ptr [esi - 0x70]; 
0x00098f98: or ecx, dword ptr [edi]; inc esi; ret 0x8389; 
0x001372dd: or ecx, dword ptr [edi]; test byte ptr [edx + eax - 0x137d0000], ch; or byte ptr [ebx - 0x72efdbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x000a5045: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000ac2d6: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4c35: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0008925d: or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008852d: or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0015037b: or ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc483; 
0x0014f919: or ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x0011e1e6: or ecx, eax; ljmp 0xe283:0x1e08314; add dword ptr [eax - 0x7c72ebba], ecx; rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0008b0f4: or edi, dword ptr [eax + 0x16]; ret; 
0x000de76f: or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000de622: or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000936e8: or edi, dword ptr [eax + 8]; cmova eax, edx; mov dword ptr [ecx + 0x3b6c], eax; ret; 
0x001630d8: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000f3958: or edi, dword ptr [ecx]; ret 0xd375; 
0x0013086e: or edi, ebp; jmp dword ptr [esi - 0x70]; 
0x001385d4: or edi, ecx; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0008ed37: or edi, edx; dec dword ptr [ebp - 0x67d4b7e]; call dword ptr [eax - 0x73]; 
0x001945d6: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000c8a36: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x001145a2: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00084551: or edx, 1; shr esi, 1; je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084a51: or edx, 1; shr esi, 1; je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00084be9: or edx, 2; call dword ptr gs:[0x10]; 
0x0011450c: or edx, dword ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x00124a77: or edx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000de76d: or edx, eax; or edi, dword ptr [eax + 0x20]; mov edx, 0x40; cmove eax, edx; ret; 
0x000de620: or edx, eax; or edi, dword ptr [eax + 0x7f]; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x00113fdd: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x000cda7e: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001632d3: or edx, edx; in al, dx; call dword ptr [eax - 0x73]; 
0x00123a9b: or esi, 0x100; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00036064: or esi, dword ptr [ebp + 9]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x00193f02: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x00192ec2: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00058d22: or esi, dword ptr [edx]; stc; call dword ptr [esi - 0x77]; 
0x0012a972: or esi, esi; inc esp; push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x000549cd: or esi, esi; ret 0xf01; 
0x00114006: or esp, 0x65fffffe; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x00037521: or esp, 0x65fffffe; mov dword ptr [eax], 0x16; mov eax, 0xffffffff; ret; 
0x0016e5e1: or esp, 0x65fffffe; mov dword ptr [eax], 0x16; xor eax, eax; ret; 
0x000d74b1: or esp, 0x65fffffe; mov dword ptr [eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x000cd6ee: or esp, 0xffffff98; stc; call dword ptr [eax - 0x18]; 
0x0014d85c: or esp, dword ptr [eax]; mov dword ptr gs:[edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0017321c: or esp, esi; call dword ptr [edi - 1]; 
0x0011ceb7: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011cd87: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018f24b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x00139dd5: out 0x15, eax; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00057695: out 0x17, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0017481a: out 0x17, eax; or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009361a: out 0x29, eax; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x0018f896: out 0x3c, al; bnd call dword ptr [ebx - 0x18]; 
0x00081e1b: out 0x41, eax; sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x001771ca: out 0x42, eax; jo 0x17714f; ret 0x80; 
0x0017781a: out 0x42, eax; jo 0x17779f; ret 0x80; 
0x0013141a: out 0x4b, eax; str word ptr [ebx - 0x11380]; jmp dword ptr [ebp + 3]; 
0x0011d1e2: out 0x4d, al; stc; call dword ptr [eax + 0x57]; 
0x000fa995: out 0x4e, eax; dec dword ptr [ebx - 0x7c72dbe4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0012a372: out 0x56, eax; stc; call dword ptr [ebp - 1]; 
0x00144de8: out 0x5b, eax; pop esi; pop edi; ret; 
0x00138387: out 0x5b, eax; stc; call dword ptr [eax - 0x18]; 
0x0018b696: out 0x7e, al; bnd call dword ptr [ebx - 0x18]; 
0x0019d159: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000d6d48: out 0x83, eax; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002215c: out 0x89, al; ret 0x25; 
0x000221f4: out 0x89, eax; ret 0x25; 
0x001087cb: out 0x8b, al; pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x0014be51: out 0x8b, eax; inc ebp; mov word ptr [ebx - 0x13380], cs; jmp dword ptr [ebp - 0x39]; 
0x000ec958: out 0x8b, eax; push ebp; add dh, dh; inc esp; ret 0x804; 
0x000e7e4c: out 0x8d, eax; jbe 0xe7e50; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0003827e: out 0x90, eax; endbr32; call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0016a9c9: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00161abf: out 0xeb, al; dec dword ptr [ecx - 0x763e7606]; ret; 
0x00161d3f: out 0xec, eax; call dword ptr [eax - 0x73]; 
0x00111a46: out 0xf0, al; jmp dword ptr [ebp - 0x77]; 
0x0014b595: out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x00133fe4: out 0xf4, eax; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x000cf675: out 0xf8, al; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00081a18: out 0xf9, eax; jmp dword ptr [ebp - 0x75]; 
0x00072049: out 0xfa, al; jmp dword ptr [esi - 0x70]; 
0x0006601a: out 0xfb, eax; jecxz 0x6601d; jmp eax; 
0x000411d4: out 0xfe, al; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000411b3: out 0xfe, al; dec dword ptr [ecx + 0x50808dc7]; jbe 0x411b6; call dword ptr [eax - 0x73]; 
0x0004113a: out 0xfe, eax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00142845: out 0xfe, eax; jmp dword ptr [esi - 0x70]; 
0x00074b44: out 0xff, al; call dword ptr [eax - 0x73]; 
0x000709ee: out 0xff, al; call dword ptr [ecx + 0x52]; 
0x0006c7cb: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000410b6: out 0xff, ax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0009a43a: out 0xff, eax; and ch, 2; lea edx, [edx - 0x9e8b0]; cmovne eax, edx; ret; 
0x000d3415: out 0xff, eax; call dword ptr [eax + 0x51]; 
0x000786d3: out 0xff, eax; call dword ptr [eax - 0x73]; 
0x000708d5: out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x0009a385: out 0xff, eax; cmove eax, edx; ret; 
0x0009a04b: out 0xff, eax; cmovne eax, edx; ret; 
0x0004fa6d: out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0005cfb7: out 0xff, eax; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13348]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x000410b7: out 0xff, eax; dec dword ptr [ebx - 0x72d3db84]; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0005cf97: out 0xff, eax; dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ebx - 0x5b34b]; jmp dword ptr [ebp - 0x75]; 
0x00197622: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x0009a481: out 0xff, eax; test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x00088fe6: out 1, al; add byte ptr [eax], al; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x000421bc: out 1, al; fimul dword ptr [ebx - 0x74c7dba4]; je 0x421ea; cmp al, 1; ret; 
0x0003f10d: out 1, eax; fimul dword ptr [ebx + 0x138245c]; ret; 
0x0012591a: out 6, eax; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x000b41b2: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000b41b5: out dx, al; add al, 0xf7; ret 0; 
0x000656f3: out dx, al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x0004e707: out dx, al; add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000b2b5e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001502db: out dx, al; add cl, byte ptr [ecx + 0x5d5f5ef0]; ret; 
0x0012a1e7: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0005bce8: out dx, al; add dword ptr [ecx], edi; ret 0x850f; 
0x0016f59e: out dx, al; and ch, bl; jmp dword ptr [esi - 0x70]; 
0x001754da: out dx, al; call dword ptr [eax + 0x6a]; 
0x0010b3bf: out dx, al; call dword ptr [ecx - 0x73]; 
0x000930d1: out dx, al; call dword ptr gs:[0x10]; 
0x0016212b: out dx, al; cld; jmp dword ptr [esi - 0x70]; 
0x000717d8: out dx, al; cli; jmp dword ptr [esi - 0x70]; 
0x0014b31e: out dx, al; dec dword ptr [ebp - 0x652db6b]; call dword ptr [edx - 0x73]; 
0x0014a654: out dx, al; dec dword ptr [ebp - 0x653137f]; call dword ptr [eax - 0x73]; 
0x0014aaad: out dx, al; dec dword ptr [ebp - 0x653377a]; call dword ptr [eax - 0x73]; 
0x00149b4b: out dx, al; dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x00166520: out dx, al; dec dword ptr [ebx + 0x291c244c]; ret; 
0x00149fba: out dx, al; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x0014a556: out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x000637cb: out dx, al; fcos; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x0013c2d8: out dx, al; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x0013b563: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013dfe7: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016e60d: out dx, al; inc dword ptr [ebx - 0x247aef3c]; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x0019d605: out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00084555: out dx, al; je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084a55: out dx, al; je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x001442ff: out dx, al; jmp dword ptr [esi - 0x70]; 
0x0011fabc: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00135e2e: out dx, al; mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x001778d2: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177282: out dx, al; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00184c4e: out dx, al; movdqa xmmword ptr [edx - 0x12], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x0017b7d3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d7b3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00184c53: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; pop ebx; ret; 
0x000f11de: out dx, al; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x0002842d: out dx, al; ret 0; 
0x00033e4e: out dx, al; ret 0xfffe; 
0x0005255e: out dx, al; ret; 
0x00086db0: out dx, al; stc; call dword ptr [eax - 0x73]; 
0x0008137d: out dx, al; stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00022617: out dx, al; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000b2765: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x00193e7c: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x00163978: out dx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x00084114: out dx, eax; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000de78b: out dx, eax; add byte ptr [eax], al; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x0004f804: out dx, eax; add dword ptr [ecx - 0x364f43], ecx; dec dword ptr [ecx - 0x360343]; dec dword ptr [ebx - 0x361f7b]; inc dword ptr [ebx - 0x36277b]; call dword ptr [eax]; 
0x0009bcc4: out dx, eax; add dword ptr [ecx], eax; ret; 
0x00193eb1: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00075961: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00155086: out dx, eax; bnd call dword ptr [eax - 0x73]; 
0x0012554e: out dx, eax; call dword ptr [eax + 0x6a]; 
0x0012458a: out dx, eax; call dword ptr [eax - 0x18]; 
0x0011773d: out dx, eax; call dword ptr [eax - 0x73]; 
0x00122cde: out dx, eax; call dword ptr gs:[0x10]; 
0x0016203b: out dx, eax; cld; jmp dword ptr [esi - 0x70]; 
0x00122c06: out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0017ec63: out dx, eax; cmp eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x00129b52: out dx, eax; dec dword ptr [ecx - 0x1b17dbcc]; out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000faa1f: out dx, eax; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0011d2d5: out dx, eax; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0005f5fd: out dx, eax; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0012cca1: out dx, eax; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x00129b5a: out dx, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001375aa: out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00126fa6: out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x0013caba: out dx, eax; jmp dword ptr [esi - 0x39]; 
0x0012f8fa: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x001778a2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00177252: out dx, eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x0008fe48: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x000c8aa8: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x00122dae: out dx, eax; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x0011517a: out dx, eax; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00184b9e: out dx, eax; movdqa xmmword ptr [edx - 0x11], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x0017b703: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d703: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00184ba3: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00193ef1: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x00193ee1: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x00193f11: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x0011d410: out dx, eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x00193f01: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0007590c: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00193ed1: out dx, eax; pop es; jb 0x193f40; lea eax, [eax + 6]; pop edi; ret; 
0x00193f21: out dx, eax; push cs; jb 0x193f40; lea eax, [eax + 0xd]; pop edi; ret; 
0x00193ec1: out dx, eax; push es; jb 0x193f40; lea eax, [eax + 5]; pop edi; ret; 
0x0011e59e: out dx, eax; push esp; stc; call dword ptr [eax + 0x56]; 
0x001020b6: out dx, eax; ret; 
0x0007316f: out dx, eax; salc; cli; jmp dword ptr [esi - 0x70]; 
0x0018e8e4: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0018f2a5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0018e8cf: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0018f28b: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0018e8ba: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0018e8a5: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0018f271: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0018e971: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00123db1: outsb dx, byte ptr [esi]; add al, 0x74; push ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00155d9f: outsb dx, byte ptr [esi]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00133f88: outsb dx, byte ptr [esi]; bnd call dword ptr [eax - 0x73]; 
0x0016a13d: outsb dx, byte ptr [esi]; cld; call dword ptr [ebp + 0x57]; 
0x00079e81: outsb dx, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x000ea256: outsb dx, byte ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0017073a: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x00080644: outsb dx, byte ptr [esi]; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008f212: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00177622: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x00021fb6: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00021fa6: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000227ca: outsb dx, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x0002444f: outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x0015a195: outsb dx, byte ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x0018e8a1: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0006ba15: outsd dx, dword ptr [esi]; adc byte ptr [eax], al; add byte ptr [ebx - 0x4a00fb14], al; push esp; idiv edi; call dword ptr [esi - 1]; 
0x000e6c1d: outsd dx, dword ptr [esi]; add al, 0; add byte ptr [ebx - 0x6bf0a308], al; ret 0x5422; 
0x00155ca3: outsd dx, dword ptr [esi]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x1c]; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x00080f0d: outsd dx, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx + 0x75d28516], cl; imul eax, dword ptr [ebx + 0x56a04ec], 0xb4838d50; jb 0x80f1b; call dword ptr [eax - 0x18]; 
0x0018d95d: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000a70c2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000a7372: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000a2cf2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000a2f82: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0007f35e: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00132a38: outsd dx, dword ptr [esi]; bnd call dword ptr [eax - 0x73]; 
0x0019dacd: outsd dx, dword ptr [esi]; call 0x10de5ed3; add esp, 8; pop ebx; ret; 
0x00088908: outsd dx, dword ptr [esi]; cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x00088946: outsd dx, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0018f0f2: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x0018f052: outsd dx, dword ptr [esi]; dec eax; ret; 
0x000e9f88: outsd dx, dword ptr [esi]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fa90d: outsd dx, dword ptr [esi]; dec edi; dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0018bb56: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00090465: outsd dx, dword ptr [esi]; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0004420d: outsd dx, dword ptr [esi]; mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x000ac36d: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0018ec78: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018f0f7: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x0018f057: outsd dx, dword ptr [esi]; push edx; ret; 
0x000aee52: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00024bd5: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000258b5: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x0002470d: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0018ffdb: outsd dx, dword ptr [esi]; xchg esp, eax; xor ah, byte ptr [eax - 0x76000722]; ret; 
0x00064975: outsd dx, dword ptr [esi]; xor bh, cl; call dword ptr [eax - 0x73]; 
0x00146a8a: paddd mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x0006ddfb: pavgb mm1, qword ptr [ebx - 0x768fdb8c]; fiadd dword ptr [ebx]; adc al, 0x86; jmp edx; 
0x000b2eff: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xb2f70; xor eax, eax; ret; 
0x00193141: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x000b2ed1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x00194b1a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x194b00; lea eax, [edi - 0x10]; pop edi; ret; 
0x000c8c24: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x000c8c0d: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000b2efe: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xb2f70; xor eax, eax; ret; 
0x00193140: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x000b2ed0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x0013efcc: pcmpeqd mm7, qword ptr [ecx - 0x75]; add dword ptr [ecx], edi; ret 0x7372; 
0x00194846: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x00194815: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x001463de: pcmpgtd mm0, mm1; ret 0x6608; 
0x000ab047: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0009b0a4: pmaddwd mm7, mm7; cmove eax, edx; ret; 
0x00099efd: pmaxub mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x001935f3: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x000b2b89: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3324: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b2e71: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00192c9d: pmovmskb eax, mm1; test eax, eax; jne 0x192d70; xor eax, eax; pop edi; ret; 
0x00193145: pmovmskb eax, mm1; test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x00193184: pmovmskb eax, mm1; test eax, eax; jne 0x193400; xor eax, eax; ret; 
0x000b2c2f: pmovmskb eax, mm1; test eax, eax; jne 0xb2c90; xor eax, eax; pop edi; ret; 
0x000b2bf5: pmovmskb eax, mm1; test eax, eax; jne 0xb2cb0; xor eax, eax; pop edi; ret; 
0x000b2ed5: pmovmskb eax, mm1; test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x000b2f04: pmovmskb eax, mm1; test eax, eax; jne 0xb2f70; xor eax, eax; ret; 
0x001935f2: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x000b2b88: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b3323: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000b2e70: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00192c9c: pmovmskb eax, xmm1; test eax, eax; jne 0x192d70; xor eax, eax; pop edi; ret; 
0x00193144: pmovmskb eax, xmm1; test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x00193183: pmovmskb eax, xmm1; test eax, eax; jne 0x193400; xor eax, eax; ret; 
0x000b2c2e: pmovmskb eax, xmm1; test eax, eax; jne 0xb2c90; xor eax, eax; pop edi; ret; 
0x000b2bf4: pmovmskb eax, xmm1; test eax, eax; jne 0xb2cb0; xor eax, eax; pop edi; ret; 
0x000b2ed4: pmovmskb eax, xmm1; test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x000b2f03: pmovmskb eax, xmm1; test eax, eax; jne 0xb2f70; xor eax, eax; ret; 
0x000b318e: pmovmskb ecx, mm0; test ecx, ecx; je 0xb31a0; bsf ecx, ecx; add eax, ecx; ret; 
0x000b318d: pmovmskb ecx, xmm0; test ecx, ecx; je 0xb31a0; bsf ecx, ecx; add eax, ecx; ret; 
0x00117087: pmuludq mm7, mm7; add esp, 0x10; add esp, 0xc; ret; 
0x00165079: pop di; stc; call dword ptr [eax - 0x18]; 
0x000575c8: pop ds; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0008d3db: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76f3db8c], cl; ret; 
0x000b6468: pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d158c: pop ds; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00192972: pop ds; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0002feac: pop ds; add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0002feec: pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0002ec5c: pop ds; add byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x0002fecc: pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0007c0d4: pop ds; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000c890d: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0018dbad: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00121d72: pop ds; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00123f1a: pop ds; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cda0d: pop ds; add esp, 0x50; pop ebx; pop esi; pop edi; ret; 
0x0003acd8: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x001026d1: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x00114d33: pop ds; add esp, 8; pop ebx; ret; 
0x000ebd10: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0010fa90: pop ds; call dword ptr gs:[0x10]; 
0x00123daf: pop ds; cmp dword ptr [esi + 4], ebp; je 0x123e08; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00117374: pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x0015e5bf: pop ds; in eax, dx; call dword ptr [eax - 0x73]; 
0x0002015c: pop ds; inc esp; add byte ptr [eax], al; endbr32; jmp dword ptr [ebx + 0xc]; 
0x0015fd08: pop ds; jg 0x15fcf0; pop ebx; pop esi; pop edi; ret; 
0x00192912: pop ds; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000aafa7: pop ds; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac67a: pop ds; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x0008afb0: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010872a: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001131b8: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0007631e: pop ds; mov edx, edi; pop edi; pop ebp; ret; 
0x000360e1: pop ds; not eax; and eax, edx; ret; 
0x0011d245: pop ds; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0004c5a2: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0004c559: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0014d8f5: pop ds; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0004b1d2: pop ds; pop ebx; pop esi; pop edi; ret; 
0x00080bf7: pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x00035d91: pop ds; pop edi; not eax; and eax, edx; ret; 
0x000aca54: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0016fd8d: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x00035a50: pop ds; ret; 
0x00035a33: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x000359cd: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x000ac64d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x00050378: pop dword ptr [eax + eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000933ec: pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x001647f0: pop dword ptr [eax - 0x76ffff5b]; test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00108f5f: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019481d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x00043613: pop dword ptr [edx - 0x74000011]; jl 0x4363f; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x000cda6a: pop dword ptr [edx]; jbe 0xcda78; mov eax, edx; ret; 
0x000c74fb: pop dword ptr [esi + edi*8 - 1]; call ebx; 
0x0002c518: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00159d6e: pop eax; adc al, 0xf; xchg edi, eax; ret 0x4bd; 
0x001583ef: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00074480: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00073901: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x0012eaec: pop eax; add al, 0x83; ret 0xc601; 
0x000937e6: pop eax; add al, 0x89; ret; 
0x000ef4f0: pop eax; add al, 0xf7; ret; 
0x00170bc4: pop eax; add al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0008f04e: pop eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x19714f7d], cl; call dword ptr [ecx + 0x50]; 
0x000813cb: pop eax; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000389cf: pop eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000be114: pop eax; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0x9eb; 
0x00057607: pop eax; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000b6597: pop eax; add dword ptr [edi], ecx; xchg esp, eax; ret 0x7c83; 
0x0011444f: pop eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000cad53: pop eax; add esp, 0x24; pop ebx; pop esi; ret; 
0x000e92c2: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0009b6ab: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000d9168: pop eax; cdq; stc; call dword ptr [eax - 0x18]; 
0x0007b631: pop eax; cli; jmp dword ptr [esi - 0x70]; 
0x0006a9e3: pop eax; idiv edi; call dword ptr [edx + 0x50]; 
0x000c716c: pop eax; in eax, 0xff; dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x001463d7: pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x000a0ec4: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x00021745: pop eax; int 0x14; add byte ptr [0x2048b7], al; lea eax, [eax - 0x6921c]; ret; 
0x00086191: pop eax; jg 0x8618d; call dword ptr [eax - 0x73]; 
0x000b23c3: pop eax; jnp 0x5b17480e; pop esi; ret; 
0x000aef30: pop eax; jnp 0x5e13137b; ret; 
0x000ca795: pop eax; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ca52d: pop eax; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000b31a7: pop eax; lea esi, [esi]; nop; xor eax, eax; ret; 
0x0014a53b: pop eax; lodsb al, byte ptr [esi]; stc; call dword ptr [eax + 0x68]; 
0x0014a3e7: pop eax; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00080345: pop eax; loope 0x80356; add byte ptr [0x1a5cb7], al; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00155bc4: pop eax; mov ah, 0xfd; jmp dword ptr [esi - 0x70]; 
0x00070e65: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0007bb24: pop eax; mov dword ptr [edx + 0x88], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000de745: pop eax; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000375a8: pop eax; mov eax, 0x77; int 0x80; 
0x000de600: pop eax; mov eax, 0x7f; mov edx, 0x7fffffff; pop ebx; cmove eax, edx; ret; 
0x00156085: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007a6a1: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007a571: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x001201cd: pop eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x5c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00029f8d: pop eax; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000b3c60: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00082d7d: pop eax; or al, 0xe8; mov esp, 0x390005ae; ret; 
0x00030b65: pop eax; or byte ptr [ebx - 0x137c67bb], cl; or byte ptr [ecx - 0x7f724fab], cl; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x53]; 
0x00074e85: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0014734a: pop eax; or dh, dh; ret; 
0x000c04c4: pop eax; or eax, dword ptr [edi]; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00149fb9: pop eax; out dx, al; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x00022633: pop eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0004b1ca: pop eax; pop ebx; pop esi; pop edi; ret; 
0x00093713: pop eax; pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x0012d9b2: pop eax; pop ebx; stc; call dword ptr [eax - 1]; 
0x000c89d7: pop eax; pop edi; pop esi; ret; 
0x0015c36f: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0015605c: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001567c5: pop eax; pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00157169: pop eax; pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000b23a3: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aef10: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d8cb7: pop eax; push dword ptr [esp + 0x1c]; call edi; 
0x0002b404: pop eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00029f89: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d8cb3: pop eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00139743: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025af7: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249e1: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002255d: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00139747: pop eax; push esi; call edi; 
0x0005d40e: pop eax; ret 0xffff; 
0x0002ec6b: pop eax; ret; 
0x000d263d: pop eax; sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x0014f650: pop eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [edx - 0x73]; 
0x0012f916: pop eax; stc; call dword ptr [eax - 0x18]; 
0x0012ed44: pop eax; stc; call dword ptr [ecx + 0x52]; 
0x0012ee16: pop eax; stc; call dword ptr [edx - 0x17]; 
0x00142e92: pop eax; xor byte ptr [eax + 0x64bbfd5f], cl; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x001411e7: pop ebp; adc byte ptr [ecx - 0x44f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00066c2c: pop ebp; adc byte ptr [ecx - 0x7ff0efa3], cl; mov ebp, 0x85fffff8; fisttp dword ptr [edi]; mov dword ptr [ebp - 0x1600000c], ecx; ret; 
0x000ee852: pop ebp; add al, 0x7c; ret 0xb48d; 
0x001183e1: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00087e62: pop ebp; add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00047c66: pop ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00169b1f: pop ebp; cld; jmp dword ptr [esi - 0x70]; 
0x00119cee: pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00071384: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00021953: pop ebp; jmp eax; 
0x0002318e: pop ebp; les eax, ptr [ebx - 0x387cf314]; add dword ptr [ebx - 0x7d], edx; ret; 
0x0004799f: pop ebp; mov al, 0xb; add byte ptr [ebx - 0x76a9eb3c], al; ret; 
0x001469bd: pop ebp; mov eax, 0x3d1b60f; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x0007cd81: pop ebp; mov eax, edx; ret; 
0x0013c2d3: pop ebp; mov esp, 0xee3e66e8; inc dword ptr [ebx + 0x458b10c4]; mov esp, 0xfffff5bf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x000e816d: pop ebp; neg eax; ret; 
0x00149b4a: pop ebp; out dx, al; dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x000b4101: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0018dcfb: pop ebp; pop ebx; ret; 
0x0018ded5: pop ebp; pop ebx; xor eax, eax; ret; 
0x001131c6: pop ebp; pop edi; pop ebx; ret; 
0x0004ac80: pop ebp; pop esi; pop edi; ret; 
0x0003657f: pop ebp; ret 4; 
0x000217cf: pop ebp; ret; 
0x000c194a: pop ebp; sar byte ptr [ecx], 1; ret; 
0x0013d267: pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0013dfb2: pop ebp; stc; call dword ptr [eax - 0x18]; lds ebx, ptr [eax]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014153d: pop ebp; stc; call dword ptr [eax - 0x73]; 
0x0013e060: pop ebp; stc; call dword ptr [ecx + 0x50]; 
0x0013e045: pop ebp; stc; call dword ptr [ecx - 0x77]; 
0x0014209c: pop ebp; stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x0013e03f: pop ebp; stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x0010cdc1: pop ebp; sub dh, dh; ret; 
0x0013e424: pop ebp; test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9773]; jmp dword ptr [ebp - 0x5f]; 
0x00188f93: pop ebp; xor eax, eax; ret; 
0x00021c30: pop ebx; adc edx, 0; neg edx; ret; 
0x00102ee9: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000b27f1: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x0019002f: pop ebx; add eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0013cb90: pop ebx; add esi, eax; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0016a4df: pop ebx; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003b3b9: pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x0011e3d7: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0009b108: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0009b0f4: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000de60b: pop ebx; cmove eax, edx; ret; 
0x0003ad6b: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000de67b: pop ebx; cmp dword ptr gs:[eax], 0x26; mov eax, 0x7f; cmovne eax, edx; ret; 
0x000dd27d: pop ebx; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0004a5c3: pop ebx; cmp eax, 0xfffff001; jae 0x216d0; xor eax, eax; ret; 
0x001302a1: pop ebx; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0015b721: pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00121069: pop ebx; jl 0x216d0; ret; 
0x00070fc7: pop ebx; jmp eax; 
0x00193ee4: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x0008de78: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x000829f0: pop ebx; lea eax, [eax + edx + 0x4000]; ret; 
0x00193574: pop ebx; lea eax, [ecx + 9]; ret; 
0x00192ea4: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x000b3120: pop ebx; lea eax, [edi - 1]; pop esi; pop edi; pop ebp; ret; 
0x000b3130: pop ebx; lea eax, [edi - 2]; pop esi; pop edi; pop ebp; ret; 
0x000b3140: pop ebx; lea eax, [edi - 3]; pop esi; pop edi; pop ebp; ret; 
0x0013cb62: pop ebx; mov dword ptr [edi], esi; pop esi; pop edi; ret; 
0x0008b08f: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0008326b: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0003ba58: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; pop ebp; ret; 
0x00071858: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0018e84f: pop ebx; mov eax, 1; ja 0x18e859; neg eax; ret; 
0x0018f336: pop ebx; mov eax, 1; ja 0x18f340; neg eax; ret; 
0x00191c60: pop ebx; mov eax, 1; ja 0x191c6a; neg eax; ret; 
0x00190590: pop ebx; mov eax, 1; jg 0x1905a0; neg eax; ret; 
0x001946c0: pop ebx; mov eax, 1; jg 0x1946d0; neg eax; ret; 
0x0004a9df: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00102680: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x00162d03: pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d1b: pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x0015797b: pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x00157963: pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00075718: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x000755b8: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00080e46: pop ebx; mov eax, dword ptr [edx + 0x18]; pop esi; jmp eax; 
0x00075764: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007c242: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00030615: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000eba2c: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0012a10d: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0015794d: pop ebx; mov eax, ecx; ret; 
0x000719c5: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0002f475: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0004ad30: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0002ec23: pop ebx; mov eax, edx; ret; 
0x00035dc1: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0002c1d9: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x0003adaa: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0011fd24: pop ebx; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00170f41: pop ebx; movzx eax, al; neg eax; ret; 
0x0016f948: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00075ccd: pop ebx; neg eax; pop esi; pop edi; pop ebp; ret; 
0x000872ae: pop ebx; neg eax; pop esi; pop edi; ret; 
0x0007dbca: pop ebx; neg eax; ret; 
0x000d5de7: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x0008cbd2: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0003d518: pop ebx; neg edx; pop esi; pop edi; pop ebp; ret; 
0x000aab51: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008de40: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0004ac7f: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x00188f92: pop ebx; pop ebp; xor eax, eax; ret; 
0x0003b138: pop ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015b6c1: pop ebx; pop ecx; std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x0003799e: pop ebx; pop edi; ret; 
0x00054727: pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000fa344: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x0002f56d: pop ebx; pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x000b4c40: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x0010a502: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0014ed3f: pop ebx; pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x000776b9: pop ebx; pop esi; jmp eax; 
0x0008fe27: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009a5cb: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0009e890: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00073915: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000c8ab7: pop ebx; pop esi; mov eax, ecx; ret; 
0x000719a6: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000879f5: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000a0e52: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000fa2ea: pop ebx; pop esi; mov eax, edx; ret; 
0x000363fe: pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x000b77c0: pop ebx; pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x00119bc2: pop ebx; pop esi; pop ebp; ret; 
0x00109f07: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00035b94: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x00127fa9: pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x00024ba4: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003657c: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000217cc: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013ddbd: pop ebx; pop esi; pop edi; ret 4; 
0x00021e56: pop ebx; pop esi; pop edi; ret; 
0x000b2960: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x0003a97d: pop ebx; pop esi; ret 4; 
0x00021478: pop ebx; pop esi; ret; 
0x000218bb: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000e814f: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000740d8: pop ebx; pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x0004acc1: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00117db0: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x000b2909: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0014bf73: pop ebx; pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x000a15fc: pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x001901dd: pop ebx; pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000c2d73: pop ebx; pop esi; sub eax, edx; pop edi; ret; 
0x001924c0: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00179da7: pop ebx; ret 0xa; 
0x0004cc41: pop ebx; ret 4; 
0x00129ea4: pop ebx; ret; 
0x0011af62: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x0011fac0: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00093714: pop ebx; stc; call dword ptr [eax + 0x6a]; 
0x00137fce: pop ebx; stc; call dword ptr [eax - 0x18]; 
0x001377da: pop ebx; stc; call dword ptr [eax - 0x42]; 
0x00137898: pop ebx; stc; call dword ptr [eax - 0x73]; 
0x0011be87: pop ebx; stc; call dword ptr [eax - 1]; 
0x000589d6: pop ebx; stc; call dword ptr [ebx + 0x50]; 
0x0011bf22: pop ebx; stc; call dword ptr [ecx + 0x50]; 
0x0011bf47: pop ebx; stc; jmp dword ptr [ebp - 0x77]; 
0x00079d0c: pop ebx; sti; dec dword ptr [ebp - 0x6820f7d]; call dword ptr [eax - 0x73]; 
0x000cddc2: pop ebx; sub bh, cl; call dword ptr [eax + 0x53]; 
0x000cc268: pop ebx; sub bh, cl; call dword ptr [eax + 0x56]; 
0x001386bf: pop ebx; sub bh, cl; call dword ptr [eax + 0x57]; 
0x000875b5: pop ebx; sub bh, cl; call dword ptr [eax - 0x73]; 
0x0002407f: pop ebx; sub bh, cl; call dword ptr [edx + 0x50]; 
0x0012f948: pop ebx; sub bh, cl; dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x0007bb46: pop ebx; sub dword ptr [edi], ecx; add byte ptr [ecx + 0x1aa4b6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00075a75: pop ebx; sub eax, edx; ret; 
0x00114d70: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000df5fb: pop ebx; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0011ed7a: pop ebx; test eax, eax; jl 0x216d0; je 0x11ed86; ret; 
0x0003ba49: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0004a9bf: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018b63e: pop ebx; xor eax, eax; ret; 
0x00044aa9: pop ecx; adc eax, 0x3156001e; not byte ptr [ebx - 0x77]; ret; 
0x00096c70: pop ecx; add al, 0xf6; ret; 
0x0004a7cf: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x001625bf: pop ecx; add esp, 0x18; pop ebx; ret; 
0x00139646: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012fdf3: pop ecx; and al, 0xfd; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x0012ec53: pop ecx; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x0016ca69: pop ecx; hlt; jmp dword ptr [esi - 9]; 
0x000dcdc6: pop ecx; jmp ecx; 
0x000dcda4: pop ecx; mov eax, 0xbe; int 0x80; 
0x0004fa6b: pop ecx; out 0xff, eax; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00125944: pop ecx; pop eax; ret; 
0x0014d9e6: pop ecx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000371c3: pop ecx; pop edx; ret; 
0x001552ec: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b51f2: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x001311ee: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x00132a3f: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00132bd3: pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0013371b: pop ecx; stc; call dword ptr [edi - 0x73]; 
0x0015b6c2: pop ecx; std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x000870be: pop edi; aas; stc; call dword ptr [eax - 0x18]; 
0x00083bd0: pop edi; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; cmove eax, edx; ret; 
0x000d251d: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x000ac67d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c7b36: pop edi; add eax, 0x8d500000; and byte ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00044416: pop edi; add eax, 0x8d500000; xchg byte ptr [eax], ah; jbe 0x44419; call dword ptr [eax - 0x18]; 
0x0004100a: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x4100d; call dword ptr [eax - 0x18]; 
0x000474a1: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050bf0: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba926: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7c5: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c041b: pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x000c065d: pop edi; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0010faa8: pop edi; cmova eax, edx; ret; 
0x000b4c22: pop edi; cmovg eax, edx; ret; 
0x00109f09: pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00099c46: pop edi; dec eax; or eax, 0xb6c58100; ret; 
0x00035b96: pop edi; fsubp st(1); ret; 
0x00049551: pop edi; inc byte ptr [ebx - 0x6bf0021d]; ret; 
0x000df301: pop edi; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000ac940: pop edi; jge 0x5e69e08e; pop ebx; ret; 
0x000755bd: pop edi; jmp eax; 
0x000ab230: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00181d5c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00177de0: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001260d8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00125f98: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00125d18: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00125e58: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00125a98: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00125db8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00125b38: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00125bd8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00125ef8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001259f8: pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0002f572: pop edi; mov eax, ecx; ret; 
0x00127fab: pop edi; mov eax, edx; ret; 
0x00126038: pop edi; mov edx, dword ptr gs:[edx]; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x00080bf8: pop edi; mov edx, ebp; pop ebp; ret; 
0x00117db5: pop edi; movzx eax, al; ret; 
0x0012699d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012691d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012689d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012669d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012679d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012649d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012671d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012651d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012659d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012681d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012641d: pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x00035d92: pop edi; not eax; and eax, edx; ret; 
0x0018d26d: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0002e747: pop edi; or al, 0x89; ret; 
0x00054e66: pop edi; or al, 0xf6; ret; 
0x0012a109: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0011e457: pop edi; or eax, ecx; ret; 
0x00119ced: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00021952: pop edi; pop ebp; jmp eax; 
0x0007cd80: pop edi; pop ebp; mov eax, edx; ret; 
0x000e816c: pop edi; pop ebp; neg eax; ret; 
0x0018fbf2: pop edi; pop ebp; pop ebx; ret; 
0x0018ded4: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003657e: pop edi; pop ebp; ret 4; 
0x000217ce: pop edi; pop ebp; ret; 
0x00188f91: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000a4802: pop edi; pop ebx; ret; 
0x000aaaf0: pop edi; pop esi; pop ebx; ret; 
0x000a16ae: pop edi; pop esi; ret; 
0x000ab210: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0013ddbf: pop edi; ret 4; 
0x00021e58: pop edi; ret; 
0x0002261d: pop edi; rol byte ptr [eax], cl; add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x000660d0: pop edi; sbb byte ptr [ecx], ch; ret; 
0x00144cbe: pop edi; stc; call dword ptr [eax - 0x18]; 
0x0014998b: pop edi; stc; call dword ptr [eax - 0x73]; 
0x001448a1: pop edi; stc; call dword ptr [ebx - 0x18]; 
0x0015304b: pop edi; sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x00058924: pop edi; xor bh, cl; call dword ptr [eax + 0x56]; 
0x0018e671: pop edi; xor eax, eax; pop ebp; ret; 
0x000b2962: pop edi; xor eax, eax; ret; 
0x000745e4: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x0003357b: pop edx; add al, 0x83; ret 0x3908; 
0x000e5c8e: pop edx; add al, 0x83; ret 0x8301; 
0x000566bd: pop edx; add al, 0x83; ret 0x8304; 
0x000a10e6: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0007447d: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0011779e: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x0013d8ba: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000ce154: pop edx; add dword ptr [ecx - 0xff6b], ecx; call dword ptr [ebx - 0x18]; 
0x0016c01d: pop edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e9309: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000373a8: pop edx; in al, dx; push ds; add byte ptr [ebx - 0x77], dl; ret; 
0x00050c22: pop edx; in al, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0009d22c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x000cd6d0: pop edx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00099611: pop edx; jns 0x9960c; call ptr [ebx + 0x5e]; pop edi; ret; 
0x000991cc: pop edx; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0018f304: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x18f320; pop ebx; ret; 
0x0012a2e9: pop edx; or al, 0xf6; ret; 
0x00036577: pop edx; or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret 4; 
0x0003b0bc: pop edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00125943: pop edx; pop ecx; pop eax; ret; 
0x001552eb: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000b51f1: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x0015c370: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0015605d: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x001567c6: pop edx; push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015716a: pop edx; push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00156089: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000371c4: pop edx; ret; 
0x001362fb: pop edx; stc; call dword ptr [eax + 0x53]; 
0x001350bf: pop edx; stc; call dword ptr [eax - 0x18]; 
0x00135243: pop edx; stc; call dword ptr [eax - 0x73]; 
0x0017658a: pop edx; stc; jmp dword ptr [esi - 0x70]; 
0x00157a85: pop edx; sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x000b2c35: pop edx; xor eax, eax; pop edi; ret; 
0x0019cde2: pop edx; xor ebp, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0007b4a5: pop es; aaa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b50d5: pop es; adc dword ptr [eax], eax; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x00083f8b: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00195c0c: pop es; add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0011771c: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000586b6: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c5cc: pop es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00192962: pop es; add byte ptr [eax], al; jne 0x192690; xor eax, eax; pop edi; ret; 
0x0018ebaa: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000aaccb: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b5681: pop es; add byte ptr [ebp - 0x6698f7e], cl; call dword ptr [eax - 0x73]; 
0x0002c2d8: pop es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000392f9: pop es; add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0003ac1e: pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000ba95f: pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, ebx; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000bd7b1: pop es; add byte ptr [ebx - 0x72cfdb84], cl; xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c04c6: pop es; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000b619c: pop es; add byte ptr [ebx - 0x72e3db8c], cl; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0005823d: pop es; add byte ptr [ebx - 0x768bdbbc], cl; ret; 
0x000fe3d6: pop es; add byte ptr [ecx + 0x127c28c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00195625: pop es; add byte ptr [ecx - 0x7683dbbc], cl; ret 0xd285; 
0x00057518: pop es; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00071809: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x001837a9: pop es; add ebx, dword ptr [edi - 0x18]; call 0x8218365e; ret; 
0x001640f2: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038109: pop es; add esp, 0x12c; ret; 
0x00085a41: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000cdc50: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00118364: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000484fd: pop es; add esp, 0x42c; ret; 
0x00038831: pop es; add esp, 0x9c; ret; 
0x0016cf78: pop es; add esp, 4; pop ebx; pop esi; ret; 
0x00154819: pop es; call 0x14f970; add esp, 0x1c; ret; 
0x00154838: pop es; call 0x14fa30; add esp, 0x1c; ret; 
0x000e1dd5: pop es; cmp bl, 0xff; lea esi, [esi]; xor eax, eax; ret; 
0x000a9f9f: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a5a25: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00192e92: pop es; jb 0x192f00; lea eax, [edi + 6]; pop edi; ret; 
0x00193ed2: pop es; jb 0x193f40; lea eax, [eax + 6]; pop edi; ret; 
0x00193562: pop es; jl 0x1935d0; lea eax, [ecx + 7]; ret; 
0x00192902: pop es; jne 0x192690; xor eax, eax; pop edi; ret; 
0x000a4bc1: pop es; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fc1: pop es; jne 0xa4e61; pop ebx; ret; 
0x000a9452: pop es; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000aabcf: pop es; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac242: pop es; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac867: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ac7cd: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000ac851: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000ac777: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x00194ab8: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a719d: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72dd: pop es; lea eax, [edx + 0xa]; ret; 
0x000a9ec4: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000a7201: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a7361: pop es; lea eax, [edx + 0xe]; ret; 
0x000a4bbe: pop es; lea ecx, [edx + 7]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fbe: pop es; lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x00184829: pop es; maxps xmm5, xmm0; push 0x81fffe9c; ret; 
0x000b47d7: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xb47d8; pop esi; ret; 
0x000ab16a: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ab07a: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x00083de4: pop es; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x000ab1ca: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab1aa: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ab0ba: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ab0da: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0008d98a: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000aba4c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000abbac: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b15dd: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa3ec: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000aa54c: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000574f2: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a1529: pop es; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x000a14f9: pop es; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x0006f38c: pop es; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000b2240: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedbd: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b15e0: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2dad: pop es; mov eax, edi; pop edi; ret; 
0x000a59e4: pop es; mov eax, edx; pop ebx; ret; 
0x000a2eed: pop es; mov eax, edx; ret; 
0x00083127: pop es; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0018b4dd: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000ab18b: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ab09b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ab34c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab2ec: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab30c: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab32c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000aedb6: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee38: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab24c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ab20c: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab22c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ab453: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab0fc: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab463: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ab11c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ab13c: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000abacc: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000abc2c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b165f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa46c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5cc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000a7196: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000a72d6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000a2da6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000a2ee6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000a71f8: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000a7358: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000a2e08: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000a59db: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000a2f68: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x00163647: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x0010a3c5: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x0014793d: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x00188e30: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x00187683: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000b4879: pop es; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x001842a9: pop es; or ebx, dword ptr [edi - 0x18]; call 0x82184153; ret; 
0x0004b1c9: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x001239a8: pop es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00114830: pop es; pop ebx; pop esi; pop edi; ret; 
0x000a108f: pop es; pop ebx; pop esi; ret; 
0x000a4d86: pop es; pop ebx; ret; 
0x00177ddf: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017832f: pop es; pop edi; pop ebx; ret; 
0x000ab067: pop es; pop edi; pop esi; pop ebx; ret; 
0x000a704a: pop es; pop edi; ret; 
0x00180d7a: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0018604a: pop es; pop esi; pop edi; pop ebx; ret; 
0x001637b5: pop es; push esi; int1; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0002d0e0: pop es; pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x00037215: pop es; rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000a728a: pop es; ret; 
0x00130f41: pop es; sar eax, 5; add esp, 0xc; ret; 
0x0016a008: pop es; stc; call dword ptr [eax - 0x18]; 
0x00169760: pop es; stc; call dword ptr [edi + 0x53]; 
0x00168f1c: pop es; stc; call dword ptr [edi + 0x55]; 
0x001688ef: pop es; stc; call dword ptr [edi + 0x56]; 
0x0010b125: pop es; stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x00102e8e: pop es; stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00188e34: pop es; sub eax, ecx; pop ebp; ret; 
0x00187687: pop es; sub eax, ecx; ret; 
0x000a947a: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xa92c1; pop ebx; ret; 
0x000dcdc1: pop es; test eax, eax; jne 0xdcdc9; pop ecx; jmp ecx; 
0x0008b4fc: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b079: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00044223: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x000411a5: pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x000ca4ae: pop esi; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00054728: pop esi; add ecx, eax; mov eax, ecx; ret; 
0x000eeab0: pop esi; and al, 0x39; ret; 
0x000eeae4: pop esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e8168: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x000fa345: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000b2942: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0002f56e: pop esi; cmove ecx, eax; pop edi; mov eax, ecx; ret; 
0x000b4c41: pop esi; cmovg eax, edx; pop edi; ret; 
0x0002eb99: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1155], dl; lea eax, [eax + 0x1120]; ret; 
0x0010a503: pop esi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x0011979e: pop esi; dec ebx; stc; call dword ptr [eax - 1]; 
0x0014ed40: pop esi; imul eax, ecx, 0xb6db6db7; pop edi; pop ebp; ret; 
0x0015a25c: pop esi; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000776ba: pop esi; jmp eax; 
0x00194a5e: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0008fe28: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x0009a5cc: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0009e891: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x00073916: pop esi; mov eax, ecx; pop edi; ret; 
0x000c8ab8: pop esi; mov eax, ecx; ret; 
0x000719a7: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x000879f6: pop esi; mov eax, edi; pop edi; ret; 
0x000a0e53: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x000fa2eb: pop esi; mov eax, edx; ret; 
0x000363ff: pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x000b77c1: pop esi; mov edx, ebp; pop edi; pop ebp; ret; 
0x0011e961: pop esi; mov edx, ecx; pop edi; pop ebp; ret; 
0x000b4c1d: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0012a2e6: pop esi; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x00098138: pop esi; or dh, dh; ret; 
0x0018e1bd: pop esi; pop ebp; pop ebx; ret; 
0x0018e19e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x00119bc3: pop esi; pop ebp; ret; 
0x00121068: pop esi; pop ebx; jl 0x216d0; ret; 
0x000aaaf1: pop esi; pop ebx; ret; 
0x0011ed79: pop esi; pop ebx; test eax, eax; jl 0x216d0; je 0x11ed86; ret; 
0x00132b00: pop esi; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00109f08: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00035b95: pop esi; pop edi; fsubp st(1); ret; 
0x000755bc: pop esi; pop edi; jmp eax; 
0x00180d7b: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001260d7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00125f97: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00125d17: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00125e57: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x00125a97: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00125db7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00125b37: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00125bd7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00125ef7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x001259f7: pop esi; pop edi; mov eax, dword ptr gs:[eax]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00127faa: pop esi; pop edi; mov eax, edx; ret; 
0x0011af66: pop esi; pop edi; movzx eax, al; ret; 
0x0012699c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x1000; mov eax, edx; ret; 
0x0012691c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x100; mov eax, edx; ret; 
0x0012689c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x2000; mov eax, edx; ret; 
0x0012669c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x200; mov eax, edx; ret; 
0x0012679c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x4000; mov eax, edx; ret; 
0x0012649c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x400; mov eax, edx; ret; 
0x0012671c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 0x8000; mov eax, edx; ret; 
0x0012651c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 1; mov eax, edx; ret; 
0x0012659c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 2; mov eax, edx; ret; 
0x0012681c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 4; mov eax, edx; ret; 
0x0012641c: pop esi; pop edi; movzx edx, word ptr [edx + eax*2]; and edx, 8; mov eax, edx; ret; 
0x0011e456: pop esi; pop edi; or eax, ecx; ret; 
0x00119cec: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x00024ba5: pop esi; pop edi; pop ebp; jmp eax; 
0x0018fbf1: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0018ded3: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003657d: pop esi; pop edi; pop ebp; ret 4; 
0x000217cd: pop esi; pop edi; pop ebp; ret; 
0x00188f90: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x0018604b: pop esi; pop edi; pop ebx; ret; 
0x0013ddbe: pop esi; pop edi; ret 4; 
0x00021e57: pop esi; pop edi; ret; 
0x0018e670: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000b2961: pop esi; pop edi; xor eax, eax; ret; 
0x00085ce9: pop esi; push 0x2308e8b; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00085c9c: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0012c9d6: pop esi; push edi; stc; call dword ptr [edx + 0x50]; 
0x000a47fe: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001159de: pop esi; ret 0xfff6; 
0x0003a97e: pop esi; ret 4; 
0x00021479: pop esi; ret; 
0x000218bc: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x00021947: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00035d8e: pop esi; sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x000e8150: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000740d9: pop esi; sar eax, 2; pop edi; pop ebp; ret; 
0x00080bf4: pop esi; sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x0007631b: pop esi; sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x0004acc2: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00117db1: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00144069: pop esi; stc; call dword ptr [eax - 0x18]; 
0x001442f8: pop esi; stc; call dword ptr [eax - 0x18]; jg 0x1442b4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00144825: pop esi; stc; call dword ptr [esi - 0x18]; 
0x001598ae: pop esi; stc; cli; jmp dword ptr [ebp - 0x77]; 
0x000b290a: pop esi; sub eax, 0x10; pop edi; ret; 
0x0014bf74: pop esi; sub eax, 1; pop edi; pop ebp; ret; 
0x000a15fd: pop esi; sub eax, edi; pop edi; ret; 
0x001901de: pop esi; sub eax, edx; pop edi; pop ebp; ret; 
0x000c2d74: pop esi; sub eax, edx; pop edi; ret; 
0x0007cd7d: pop esi; sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x00194a79: pop esi; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b39c2: pop esi; xor eax, eax; pop ebx; ret; 
0x0018fc00: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001924c1: pop esi; xor eax, eax; pop edi; ret; 
0x0006dbc9: pop esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00118391: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00079da5: pop esp; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0006e9d3: pop esp; add dword ptr [eax], eax; add byte ptr [eax], al; jmp ebx; 
0x000ec938: pop esp; add dword ptr [eax], eax; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x00038d68: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00109ff4: pop esp; add dword ptr [eax], eax; add byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x75]; 
0x0004a7bd: pop esp; add dword ptr [eax], eax; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x00084529: pop esp; add eax, 0x89038b10; ret 0xff0; 
0x0004be90: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x29342454], cl; ret 0x5489; 
0x00143e43: pop esp; add esp, 0x118; pop ebx; ret; 
0x0010784c: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x000f9a25: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0008b304: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0011a188: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00113b30: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00109ef8: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a428: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121768: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121568: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121448: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121608: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb8: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf48: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce18: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0011f221: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000584c0: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00113bb0: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001211dd: pop esp; and al, 0x14; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00120b07: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x001037c1: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012d95e: pop esp; and al, 0x18; je 0x12d970; add esp, 8; pop ebx; ret; 
0x00119cdd: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012340e: pop esp; and al, 0x18; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00122165: pop esp; and al, 0x18; mov ebx, 0xf; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011ed68: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000d6136: pop esp; and al, 0x20; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xd61d0; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00113901: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00114430: pop esp; and al, 0x20; mov eax, 0x36; mov ecx, 0x5409; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011699f: pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a6f: pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003780f: pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001138ce: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010922f: pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x00037836: pop esp; and al, 0x20; mov ecx, 8; mov edx, eax; mov eax, 0xb3; call dword ptr gs:[0x10]; 
0x0011f870: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b950: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a070: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fe0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001150a0: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f700: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108590: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00108650: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x001093ef: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00109416: pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov edx, eax; mov eax, 8; call dword ptr gs:[0x10]; 
0x000f9848: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001169c6: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a96: pop esp; and al, 0x20; mov edx, eax; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x00109256: pop esp; and al, 0x20; mov edx, eax; mov eax, 6; call dword ptr gs:[0x10]; 
0x000cd725: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x00115ccd: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d6d: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d939d: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x000de0c2: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x000de172: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000ddd59: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x000dddf9: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00108eb5: pop esp; and al, 0x30; mov eax, 0xdd; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001082fd: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00108453: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x127; mov edx, edi; call dword ptr gs:[0x10]; 
0x00115249: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153f9: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001020da: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021aa: pop esp; and al, 0x30; mov ecx, dword ptr [esp + 0x34]; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x0011fb18: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d5e3a: pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001087cd: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; mov eax, 0x8c; call dword ptr gs:[0x10]; 
0x000f9912: pop esp; and al, 0x30; mov esi, dword ptr [esp + 0x34]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0015dc2d: pop esp; and al, 0x3c; push ebx; call dword ptr [eax + 0x14]; 
0x001142cb: pop esp; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00092672: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00092602: pop esp; and al, 0x40; mov edx, dword ptr [esp + 0x48]; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0011fdbb: pop esp; and al, 0x50; call dword ptr gs:[0x10]; 
0x000cd8a9: pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00123db6: pop esp; and al, 0x50; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cd919: pop esp; and al, 0x50; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00108c55: pop esp; and al, 0x50; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0011fd26: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0011fc11: pop esp; and al, 0x50; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00110350: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102ab: pop esp; and al, 0x50; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001148c5: pop esp; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0011f37d: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00082718: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00082718: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000d7bbf: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x00162cfc: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d14: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157974: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x0015795c: pop esp; and al, 0xc; mov dword ptr [esp + 8], edx; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x0010a4f3: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0011f92e: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00121643: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011f961: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00109588: pop esp; and al, 0xc; mov eax, 0xb7; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00110103: pop esp; and al, 0xc; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce53: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceb3: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd83: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110133: pop esp; and al, 0xc; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213e3: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00082747: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001214fb: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00121697: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001216fb: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f26b: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001213a7: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001093ab: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x001214c7: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012172b: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00116b07: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012179b: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217cb: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217fb: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00121827: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc637: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0003777b: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fdb: pop esp; and al, 4; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x0010a577: pop esp; and al, 4; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c7: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116927: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x000ddf6b: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00107d97: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00107d97: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00116957: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001092fb: pop esp; and al, 4; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x0011612b: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a45b: pop esp; and al, 4; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x001216c7: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00116e8b: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ffb: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107deb: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0011ea77: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e57: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121257: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb7: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121667: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0011624b: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x000dc087: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121407: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf37: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d7: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012128b: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0011f4b7: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0011f4b7: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00108f5b: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000ddfe7: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a1bb: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1eb: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0011a217: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f96eb: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f971b: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000f9777: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c7: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f7: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0011eaab: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0010a517: pop esp; and al, 4; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001212bb: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212eb: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037dab: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001094a7: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000ddd0b: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0011ee77: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee97: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0011ee97: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001215cb: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf7b: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf0b: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cddb: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107dbb: pop esp; and al, 4; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x00121377: pop esp; and al, 4; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x0010a3eb: pop esp; and al, 4; mov eax, 9; call dword ptr gs:[0x10]; 
0x0005846a: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010353a: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012187e: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012147e: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0010800e: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a54e: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a48e: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00105f13: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010932e: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011318e: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4be: pop esp; and al, 8; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114dae: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea4e: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012152e: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012122e: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a02e: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012131e: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012134e: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f974e: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012159e: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd26e: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109ebe: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e8e: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de03e: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de06e: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e5e: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a14e: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a11e: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce7e: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011cede: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cdae: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000377b6: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00109366: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000b3013: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000ca539: pop esp; call eax; 
0x00026186: pop esp; call edi; 
0x00028bdf: pop esp; call esi; 
0x0009b00f: pop esp; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00097942: pop esp; cmp eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000ea002: pop esp; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0011d218: pop esp; dec esi; stc; call dword ptr [eax + 0x57]; 
0x00063365: pop esp; idiv edi; dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0007da96: pop esp; jle 0x7da92; call dword ptr [eax - 0x73]; 
0x0007dab5: pop esp; jle 0x7dab1; call dword ptr [eax - 0x73]; 
0x0015fed4: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00194079: pop esp; mov eax, 0x10; pop edi; ret; 
0x00110356: pop esp; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001201d7: pop esp; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001102b1: pop esp; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00027181: pop esp; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00178df7: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00178dfb: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000e7d68: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000cda69: pop esp; pop dword ptr [edx]; jbe 0xcda78; mov eax, edx; ret; 
0x00024ba3: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002621e: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001379fe: pop esp; pop ebx; stc; call dword ptr [eax - 0x73]; 
0x00025af3: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249dd: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028bdb: pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x0002717d: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025534: pop esp; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0014d969: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0016e07a: pop esp; ret; 
0x0008034b: pop esp; sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000c8d83: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0013aeed: pop esp; stc; call dword ptr [eax + 0x53]; 
0x00079b98: pop esp; stc; call dword ptr [eax - 0x18]; 
0x0013a115: pop esp; stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x00138dfe: pop esp; stc; call dword ptr [eax - 0x39]; 
0x0013a10e: pop esp; stc; call dword ptr [eax - 0x73]; 
0x00139b38: pop esp; stc; call dword ptr [eax - 1]; 
0x00139216: pop esp; stc; call dword ptr [edx + 0x50]; 
0x000d68f2: pop esp; sti; inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0002c212: pop esp; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x000dc1a1: pop esp; sub edx, dword ptr gs:[0x14]; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000924f2: pop esp; test cl, bh; call dword ptr [eax - 0x18]; 
0x000844db: pop esp; test dword ptr [eax], ebp; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x001140d9: pop esp; xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00057696: pop ss; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009291a: pop ss; add dword ptr [eax], eax; add byte ptr [ecx + 0x24748be9], cl; dec esp; call dword ptr gs:[0x10]; 
0x00139c32: pop ss; add eax, dword ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x0011c947: pop ss; add esp, 0x1018; pop ebx; ret; 
0x00121f3a: pop ss; add esp, 0x18; pop ebx; ret; 
0x00106f76: pop ss; add esp, 0x74; pop ebx; pop esi; ret; 
0x00143fea: pop ss; and byte ptr [esi], cl; add byte ptr [ebx - 0x1380], cl; jmp dword ptr [ebp - 0x75]; 
0x000de691: pop ss; cld; add byte ptr [eax], al; pop ebx; ret; 
0x000a1555: pop ss; fdivp st(4); jmp dword ptr [esi - 0x70]; 
0x0016a575: pop ss; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0009a442: pop ss; idiv bh; cmovne eax, edx; ret; 
0x000aae27: pop ss; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac9d7: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000ac6c3: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000ac6d5: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ac703: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x00194aa8: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x000213c1: pop ss; lea edx, [eax - 0x1aad40]; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000ab3d1: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000c8c08: pop ss; mov cl, dl; and cl, 0xf; je 0xc8c30; ret; 
0x00170258: pop ss; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x000b246a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aefb7: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002ec1e: pop ss; mov edx, dword ptr [ebx + eax*4 + 0x24]; pop ebx; mov eax, edx; ret; 
0x000ab3e1: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0017481b: pop ss; or eax, dword ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x001435d2: pop ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00113bc8: pop ss; pop ebx; pop esi; pop edi; ret; 
0x000aaff3: pop ss; pop edi; pop esi; pop ebx; ret; 
0x0002feea: pop ss; popal; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0003a884: pop ss; push dword ptr [ebx + 4]; call eax; 
0x000c48ba: pop ss; push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0018e8e9: pop ss; ret 0x2c73; 
0x0018f2aa: pop ss; ret 0x3273; 
0x0018e8d4: pop ss; ret 0x3e73; 
0x0018f290: pop ss; ret 0x4c73; 
0x0018e8bf: pop ss; ret 0x5073; 
0x0018e8aa: pop ss; ret 0x6273; 
0x0018f276: pop ss; ret 0x6673; 
0x0018e229: pop ss; ret 0x830f; 
0x00082b25: pop ss; salc; stc; jmp dword ptr [ebp - 0x39]; 
0x001747ea: pop ss; sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000c34d7: pop ss; sub edi, ecx; jmp dword ptr [ebp - 0x75]; 
0x00071004: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00194848: pop ss; test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x0012f765: pop ss; test ebx, esi; jmp dword ptr [esi - 0x70]; 
0x0011e81b: popal; adc cl, dh; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x000382a6: popal; adc eax, dword ptr [eax]; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00102e04: popal; add al, 0; add dh, dh; ret 0xf20; 
0x000a905b: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00142bf4: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0014e421: popal; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00051a95: popal; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000e011b: popal; div esp; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000f821b: popal; jbe 0xf8211; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x000a5673: popal; jmp dword ptr [esi + 0xf]; 
0x001554ee: popal; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00031d1b: popal; or dword ptr [esi], 0x24448900; and al, 0x89; ret; 
0x0002feab: popal; pop ds; add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0002feeb: popal; pop ds; add byte ptr [ebx - 0x14380], cl; jmp dword ptr [ebp + 3]; 
0x0002fecb: popal; pop ds; add byte ptr [ebx - 0xb80], cl; jmp dword ptr [ebp + 3]; 
0x0008e71b: popal; ret 0xfffe; 
0x00181131: popal; sbb eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0014e9df: popal; stc; call dword ptr [eax + 0x53]; 
0x0014fdd4: popal; stc; call dword ptr [eax + 0x56]; 
0x001503f6: popal; stc; call dword ptr [eax + 0x57]; 
0x00150124: popal; stc; call dword ptr [eax + 0x6a]; 
0x0003a3e5: popal; stc; call dword ptr [eax - 0x18]; 
0x0014e178: popal; stc; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x0014dab5: popal; stc; call dword ptr [eax - 1]; 
0x0014ee5a: popal; stc; call dword ptr [ebx - 0x73]; 
0x0005f740: popfd; aam 0xff; call dword ptr [eax - 0x75]; 
0x0004bd84: popfd; add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00060932: popfd; call 0x8a060932; ret; 
0x000b567f: popfd; mov ecx, 0x828d0007; jo 0xb561d; stc; call dword ptr [eax - 0x73]; 
0x0006bbf6: popfd; push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x0016f17f: popfd; push ds; cld; jmp dword ptr [esi - 0x70]; 
0x000c7641: popfd; ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000c5116: popfd; ror cl, 0xff; call dword ptr [ecx - 0x18]; 
0x000c77b2: popfd; ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x000c680a: popfd; ror cl, 0xff; call dword ptr [edi - 0x18]; 
0x000c70e0: popfd; ror cl, 0xff; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x000c5428: popfd; ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x000fa92a: popfd; stc; call dword ptr [eax - 0x18]; 
0x0017ff35: popfd; sub eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0012cc9f: popfd; xor al, 0xef; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x000aeea6: psllq mm1, qword ptr [edi]; jg 0xaeeab; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef28: psllq mm1, qword ptr [edi]; jg 0xaef2d; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af028: psllq mm1, qword ptr [edi]; jg 0xaf02d; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00034b8a: psubd mm7, mm7; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0019cd82: push -0x2e; idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002b487: push -0x48; push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00106cdd: push -0x64; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d91: push -0x64; call 0x107160; add esp, 0x1c; ret; 
0x00120b7c: push -0x64; call 0x107820; add esp, 0x20; add esp, 0xc; ret; 
0x00107807: push -0x64; call 0x107820; add esp, 0x2c; ret; 
0x00107e24: push -0x64; call 0x107e30; add esp, 0x1c; ret; 
0x0013cbe5: push -0x73; dec edx; jmp dword ptr [ecx]; 
0x00071676: push -0x77; ret; 
0x000ca4dc: push -0x7d; clc; cmp al, 0xf; xchg esp, eax; ret 0xc031; 
0x00071335: push -0x7d; in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0015aa9c: push -0x7d; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000f9879: push -0x7d; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000acff4: push -0xa; ret 0x7520; 
0x000acff9: push -0xa; ret 0x7540; 
0x000dc10d: push -1; call 0xdc120; add esp, 0x1c; ret; 
0x000dc153: push -1; call 0xdc260; add esp, 0x1c; ret; 
0x0007de41: push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00076a96: push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x00057595: push -1; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00161df8: push -1; push ebp; push esi; call edi; 
0x0014a532: push -2; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0007a3a1: push -6; jmp dword ptr [esi - 0x70]; 
0x0002535d: push -7; call dword ptr [eax + 0x68]; 
0x00025241: push -7; call dword ptr [eax - 0x73]; 
0x00120771: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011eadb: push 0; call 0x1200a0; add esp, 0x1c; ret; 
0x00153ff8: push 0; call 0x14f970; add esp, 0x1c; ret; 
0x00154017: push 0; call 0x14fa30; add esp, 0x1c; ret; 
0x0003053d: push 0; call 0x304e0; add esp, 0x1c; ret; 
0x00031975: push 0; call 0x31900; add esp, 0x2c; ret; 
0x00038087: push 0; call 0x37930; add esp, 0x1c; ret; 
0x0015ccbb: push 0; call 0x702d0; add esp, 0x18; pop ebx; ret; 
0x000831ff: push 0; call 0x827f0; add esp, 0x1c; ret; 
0x000b549a: push 0; call 0xb54b0; add esp, 0x1c; ret; 
0x000d5d1f: push 0; call 0xd5e10; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000ddfc9: push 0; call 0xddf60; add esp, 0x1c; ret; 
0x0012df02: push 0; call edx; 
0x000b5771: push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x0012e569: push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x000ddfc7: push 0; push 0; call 0xddf60; add esp, 0x1c; ret; 
0x000b576f: push 0; push 0; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000225b6: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x000774bb: push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007725e: push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00116f19: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x000225b8: push 0; push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x00070958: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007db50: push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0007fbf5: push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00170362: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d581: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007c7d8: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0012e752: push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012dda9: push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012e3b9: push 0; push 0x1000004; call eax; 
0x0012df62: push 0; push 0x1000005; call edx; 
0x0012e04a: push 0; push 0x1000006; call edx; 
0x0012dfb2: push 0; push 0x1000007; call eax; 
0x0012a592: push 0; push 0x2000004; call eax; 
0x0008e3d7: push 0; push 1; push eax; call 0x82450; add esp, 0x2c; ret; 
0x0007841b: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0007c6ca: push 0; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x000774bd: push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077260: push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x000dc107: push 0; push dword ptr [esp + 0x18]; push -1; call 0xdc120; add esp, 0x1c; ret; 
0x0016fc1a: push 0; push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0011eda7: push 0; push dword ptr [esp + 0x1c]; call 0x11edc0; add esp, 0x1c; ret; 
0x0015f3b5: push 0; push dword ptr [esp + 0x1c]; call 0x15f230; add esp, 0x10; add esp, 0xc; ret; 
0x0003a75c: push 0; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0016e567: push 0; push dword ptr [esp + 0x1c]; call 0x3a4c0; add esp, 0x1c; ret; 
0x000389e9: push 0; push dword ptr [esp + 0x1c]; call 0x3c560; add esp, 0x1c; ret; 
0x00048517: push 0; push dword ptr [esp + 0x1c]; call 0x484c0; add esp, 0x1c; ret; 
0x00116f1b: push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0007950b: push 0; push dword ptr [esp + 0x1c]; call 0x72f80; add esp, 0x1c; ret; 
0x0008a237: push 0; push dword ptr [esp + 0x1c]; call 0x89820; add esp, 0x18; pop ebx; ret; 
0x000a14c7: push 0; push dword ptr [esp + 0x1c]; call 0xb3d70; add esp, 0x18; pop ebx; ret; 
0x000385e7: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38570; add esp, 0x1c; ret; 
0x0004122b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eaf0; add esp, 0x1c; ret; 
0x0003e2ba: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x0003e31a: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x00073677: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x000baacb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb83e0; add esp, 0x1c; ret; 
0x000bd8bb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbb330; add esp, 0x1c; ret; 
0x000c050b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe010; add esp, 0x1c; ret; 
0x0007710b: push 0; push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x000304ef: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x00087acb: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x000b6125: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b5de5: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000c3885: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x001104f0: push 0; push eax; call 0x110260; add esp, 0x10; add esp, 0xc; ret; 
0x000225ba: push 0; push eax; push dword ptr [ebx + 4]; call esi; 
0x0007095a: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007ce70: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00157450: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0007db52: push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x0007fbf7: push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00170364: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d583: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0011b1ed: push 0; push ebx; call esi; 
0x000c370b: push 0; push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00076e7f: push 0; push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007c4e0: push 0; push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x00155c60: push 0; push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00080d7a: push 0; push ecx; push edx; call 0x16a600; add esp, 0x1c; ret; 
0x00160fba: push 0; push edi; call dword ptr [eax + 0x14]; 
0x0015c371: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0014c424: push 0; push edi; push ebx; call edx; 
0x00072d18: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0003a5c8: push 0; push edx; call edi; 
0x0015ef7f: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x001552ed: push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007980d: push 0; push esi; call dword ptr [ebp + 8]; 
0x0007c7da: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00070618: push 0; push esi; call dword ptr [ebx + 8]; 
0x0012e754: push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012e572: push 0x1000002; call edx; 
0x0012ddab: push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012e3bb: push 0x1000004; call eax; 
0x0012df64: push 0x1000005; call edx; 
0x0012e04c: push 0x1000006; call edx; 
0x0012dfb4: push 0x1000007; call eax; 
0x000fd852: push 0x100; push eax; push edx; call ebx; 
0x001176d3: push 0x1018; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x000720f3: push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x000741e3: push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0012f8f8: push 0x18; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0017bfd3: push 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000f5564: push 0x1fff8fb; fnstcw word ptr [esi]; jmp ecx; 
0x000e1861: push 0x1fffffb; ret; 
0x0012a487: push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0012b324: push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0012a594: push 0x2000004; call eax; 
0x0012c452: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0012b0da: push 0x2000006; call dword ptr [esi + 0x14]; 
0x00156d6f: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x001617e7: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x161520; add esp, 0x1c; ret; 
0x001617ec: push 0x2260; push dword ptr [esp + 0x1c]; call 0x161520; add esp, 0x1c; ret; 
0x00085cea: push 0x2308e8b; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0010948b: push 0x241; push dword ptr [esp + 0x1c]; call 0x108170; add esp, 0x1c; ret; 
0x0016dcc8: push 0x24448909; and al, 0x89; ret; 
0x00087be5: push 0x24448b52; adc byte ptr [ebp - 0x19e51f80], cl; call dword ptr [eax - 0x73]; 
0x000c9d9f: push 0x246c8d51; insb byte ptr es:[edi], dx; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x00029f84: push 0x2474ff50; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028bd6: push 0x2474ff50; pop esp; push dword ptr [esp + 0x5c]; call esi; 
0x0016ae7c: push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x0012f945: push 0x2a5b878d; stc; dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x00161b92: push 0x2a; cmc; call ecx; 
0x0004a6bf: push 0x34588b2c; xor eax, eax; ret; 
0x000e9851: push 0x3489fff3; and al, 0xe8; in al, 0x68; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0008bfd7: push 0x39000000; ret 0x6174; 
0x0008c732: push 0x39000000; ret 0x6674; 
0x0008b67a: push 0x39000000; ret 0x7e74; 
0x0008b3e1: push 0x39000000; ret 0x840f; 
0x00139b80: push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00079d43: push 0x47; stc; call dword ptr [eax - 0x18]; 
0x000ca20f: push 0x480fc085; ret 0x548b; 
0x000fd243: push 0x49; stc; call dword ptr [eax - 0x18]; 
0x00109da8: push 0x4a; stc; call dword ptr [eax - 0x18]; 
0x0011450b: push 0x540b; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x001143fc: push 0x5410; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x0011d0da: push 0x5b000003; ret; 
0x0013e26f: push 0x5b14c483; pop esi; ret; 
0x0011cc7d: push 0x5bfff94a; pop esi; ret; 
0x00116f39: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x00083737: push 0x80; push dword ptr [esp + 0x1c]; call 0x83660; add esp, 0x18; pop ebx; ret; 
0x00083a6b: push 0x80; push dword ptr [esp + 0x1c]; call 0x839a0; add esp, 0x1c; ret; 
0x0008cc07: push 0x80; push dword ptr [esp + 0x1c]; call 0x8cbb0; add esp, 0x18; pop ebx; ret; 
0x000a9455: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x0016832d: push 0x81000061; ret; 
0x0008e22d: push 0x81000e02; ret; 
0x0007002d: push 0x81000fe4; ret; 
0x0018482d: push 0x81fffe9c; ret; 
0x0018442d: push 0x81fffea0; ret; 
0x00183d2d: push 0x81fffea7; ret; 
0x0018392d: push 0x81fffeab; ret; 
0x0017d22d: push 0x81ffff12; ret; 
0x0017a62d: push 0x81ffff3e; ret; 
0x000420b9: push 0x83000001; salc; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x000723bc: push 0x83000019; clc; add dword ptr [edi + 0xb], edi; ret; 
0x000d6b89: push 0x83b77d1c; ret 0x8301; 
0x0005b1ee: push 0x83fffff4; in al, dx; or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0006ceb2: push 0x83fffff7; in al, dx; or al, 0x8d; and al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x001104f4: push 0x83fffffd; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000938cd: push 0x8500003b; leave; jne 0x938e0; ret; 
0x00051bf4: push 0x89000d47; ret; 
0x0016f73b: push 0x8953000b; ret; 
0x0014f7cd: push 0x8953000d; ret; 
0x0006bbf7: push 0x89fffff7; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x6a]; 
0x0014a306: push 0x8b000001; dec esp; ret 0x8904; 
0x0011d052: push 0x8b000003; dec esp; and al, 8; mov dword ptr [ecx], eax; mov eax, 1; ret; 
0x00085c9d: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0006b022: push 0x8dfffff7; xchg dword ptr [ecx + edi*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x001194c7: push 0x8dffffff; test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax - 0x73]; 
0x0011c6b1: push 0x93818d50; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x00153228: push 0xa; call 0x14f970; add esp, 0x1c; ret; 
0x00153247: push 0xa; call 0x14fa30; add esp, 0x1c; ret; 
0x000389e7: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x3c560; add esp, 0x1c; ret; 
0x000343f7: push 0xb3948b; je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00087e67: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e9859: push 0xc483fff3; adc al, 0x5b; pop esi; ret; 
0x0014dac1: push 0xc483fff6; adc byte ptr [ebp + 0x31840fc0], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x0015e939: push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x001722c5: push 0xe8fffffb; ret 0xf71f; 
0x0015d864: push 0xe8ffffff; mov bl, 0x37; std; jmp dword ptr [esi - 0x70]; 
0x000b84ec: push 0xf000004; xchg ebp, eax; ret 0x9eb; 
0x00098629: push 0xf600003b; ret 0x7402; 
0x000b5691: push 0xf7828d50; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0015ef6d: push 0xfffff928; mov dh, 0x64; sub cl, bh; call dword ptr [edi + 0x52]; 
0x001701d5: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0002170d: push 1; call 0x108630; add esp, 0x1c; ret; 
0x00152ec8: push 1; call 0x14f970; add esp, 0x1c; ret; 
0x00152ee7: push 1; call 0x14fa30; add esp, 0x1c; ret; 
0x0007fd73: push 1; call 0x7f7d0; add esp, 0x18; pop ebx; ret; 
0x00068a59: push 1; jmp eax; 
0x000774b9: push 1; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x0007db4e: push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00170462: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007c8e5: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00079509: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x72f80; add esp, 0x1c; ret; 
0x00143cd7: push 1; push dword ptr [esp + 0x1c]; call 0x143bb0; add esp, 0x1c; ret; 
0x0008aee7: push 1; push dword ptr [esp + 0x1c]; call 0x8ad90; add esp, 0x1c; ret; 
0x00070f77: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x0010ac34: push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x000371b8: push 1; push dword ptr [esp + 8]; call 0x37120; pop ecx; pop edx; ret; 
0x00145fbc: push 1; push eax; call 0x145ec0; add esp, 0x18; pop ebx; ret; 
0x0008d619: push 1; push eax; call 0x82450; add esp, 0x28; pop ebx; ret; 
0x0008e3d9: push 1; push eax; call 0x82450; add esp, 0x2c; ret; 
0x00155a77: push 1; push ebx; call dword ptr [eax]; 
0x0011b201: push 1; push ebx; call esi; 
0x00077d8a: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00170866: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0006f8d9: push 1; push esi; call eax; 
0x00152638: push 2; call 0x14f970; add esp, 0x1c; ret; 
0x00152657: push 2; call 0x14fa30; add esp, 0x1c; ret; 
0x001698c1: push 2; lea eax, [eax - 0x699dd]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x0007725c: push 2; push 0; push 0; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00070956: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00170360: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0007d57f: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007c7d6: push 2; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00137a67: push 2; push dword ptr [esp + 0x1c]; call 0x136d30; add esp, 0x1c; ret; 
0x0010af7d: push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00151a0f: push 2; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x00155ba8: push 2; push ebx; call dword ptr [eax]; 
0x0011b214: push 2; push ebx; call esi; 
0x001516b8: push 3; call 0x14f970; add esp, 0x1c; ret; 
0x001516d7: push 3; call 0x14fa30; add esp, 0x1c; ret; 
0x0007db4c: push 3; push 1; push 0; push 0; push ebx; call dword ptr [ebp + 0x24]; 
0x00170460: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0017035e: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0011b224: push 3; push ebx; call edx; 
0x0015f6d6: push 3; push edi; call dword ptr [eax]; 
0x00152298: push 4; call 0x14f970; add esp, 0x1c; ret; 
0x001522b7: push 4; call 0x14fa30; add esp, 0x1c; ret; 
0x0015ef82: push 4; push ebx; call dword ptr [eax]; 
0x0015e869: push 4; push edx; call dword ptr [eax + 0x14]; 
0x00155c63: push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x00150128: push 5; call 0x14f970; add esp, 0x1c; ret; 
0x00150147: push 5; call 0x14fa30; add esp, 0x1c; ret; 
0x00030537: push 5; push dword ptr [esp + 0x18]; push 0; call 0x304e0; add esp, 0x1c; ret; 
0x00030517: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x0010af0c: push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x001561c3: push 5; push ebx; call dword ptr [eax]; 
0x0012e9be: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x001529b8: push 6; call 0x14f970; add esp, 0x1c; ret; 
0x001529d7: push 6; call 0x14fa30; add esp, 0x1c; ret; 
0x0015e87c: push 6; push eax; call dword ptr [edx + 0x14]; 
0x00154818: push 7; call 0x14f970; add esp, 0x1c; ret; 
0x00154837: push 7; call 0x14fa30; add esp, 0x1c; ret; 
0x00150798: push 8; call 0x14f970; add esp, 0x1c; ret; 
0x001507b7: push 8; call 0x14fa30; add esp, 0x1c; ret; 
0x00156a87: push 8; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x162670; add esp, 0x1c; ret; 
0x0015ba38: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00156e16: push 8; push edi; call dword ptr [eax + 0x18]; 
0x001542b8: push 9; call 0x14f970; add esp, 0x1c; ret; 
0x001542d7: push 9; call 0x14fa30; add esp, 0x1c; ret; 
0x00087000: push cs; aas; stc; call dword ptr [eax - 0x18]; 
0x0009e1fd: push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x00088977: push cs; add byte ptr [0x19d687], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00087767: push cs; add byte ptr [0x19e897], al; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00081d97: push cs; add byte ptr [0x1a4267], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00080347: push cs; add byte ptr [0x1a5cb7], al; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00035247: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0002f843: push cs; add byte ptr [ebx + 0x51e910c4], al; or bh, bh; call dword ptr [eax - 0x73]; 
0x00143fec: push cs; add byte ptr [ebx - 0x1380], cl; jmp dword ptr [ebp - 0x75]; 
0x00050c98: push cs; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0002e9ec: push cs; add byte ptr [ebx - 0x4d16ef3c], al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00041089: push cs; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000442a2: push cs; add byte ptr [ebx - 0x72dbdb84], cl; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00139eee: push cs; add byte ptr [ebx - 0x7c72ef14], al; mov al, 0x3e; int1; call dword ptr [eax - 0x73]; 
0x00145f7c: push cs; add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x00081e17: push cs; add byte ptr [ecx + 0x1a41e7c2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x81e30; ret; 
0x00031d1d: push cs; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0004d627: push cs; add cl, ch; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x0015efb0: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00113141: push cs; add esp, 4; pop ebx; pop esi; ret; 
0x0008e4f9: push cs; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x001442c9: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007dba1: push cs; add esp, 8; pop ebx; ret; 
0x0008e841: push cs; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007101d: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0012e91a: push cs; and eax, 1; pop ebx; ret; 
0x000b3634: push cs; call ecx; 
0x000a9ec7: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000c88dc: push cs; cmp dword ptr [edi], ecx; jne 0xc8a30; pop edi; pop esi; ret; 
0x0011d0a9: push cs; cmp ecx, edx; jne 0x11d0a0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000e49c5: push cs; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000e6fb7: push cs; dec eax; stc; call dword ptr [eax - 0x18]; jmp dword ptr [esi]; 
0x001611ce: push cs; in al, dx; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x00192ee2: push cs; jb 0x192f00; lea eax, [edi + 0xd]; pop edi; ret; 
0x00193f22: push cs; jb 0x193f40; lea eax, [eax + 0xd]; pop edi; ret; 
0x001935b2: push cs; jl 0x1935d0; lea eax, [ecx + 0xe]; ret; 
0x000a4c89: push cs; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50b9: push cs; jne 0xa4e61; pop ebx; ret; 
0x000a959a: push cs; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ac36a: push cs; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x000ac921: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000aca31: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000a4c86: push cs; lea ecx, [edx + 0xe]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50b6: push cs; lea ecx, [edx + 0xe]; jne 0xa4e61; pop ebx; ret; 
0x0019d4aa: push cs; lea esi, [esi]; nop; call dword ptr [esi]; 
0x000aed21: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00058665: push cs; mov dword ptr [edx + 8], 0; xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x000b23a4: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00193db1: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000aef11: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00081cd9: push cs; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000aed02: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000af008: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aef08: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0018e871: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00080a14: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00084c51: push cs; pop ebx; pop esi; pop edi; ret; 
0x000ab211: push cs; pop edi; pop esi; pop ebx; ret; 
0x000a7204: push cs; pop edi; ret; 
0x000f1d5e: push cs; ret 0xffff; 
0x000a7364: push cs; ret; 
0x0015af49: push cs; stc; call dword ptr [eax - 0x73]; 
0x0009e99c: push cs; stc; dec dword ptr [ebp - 0x66acf70]; call dword ptr [edx - 0x73]; 
0x0009e9bb: push cs; stc; jmp dword ptr [esi - 0x70]; 
0x00023719: push cs; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0018e660: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0018e35c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000a95c4: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa92c1; pop ebx; ret; 
0x00080069: push cs; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x000e004b: push cs; sub esp, 8; push eax; push edi; call esi; 
0x00099551: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0015790e: push cs; xchg edi, eax; std; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x0003b8a1: push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x0002ce6e: push ds; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x0012f159: push ds; add byte ptr [eax], al; nop; nop; endbr32; ret; 
0x0003805c: push ds; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000373aa: push ds; add byte ptr [ebx - 0x77], dl; ret; 
0x0003e84b: push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000cda5f: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00024c90: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x00025f26: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*2], bh; stc; call dword ptr [eax - 0x18]; 
0x00025345: push ds; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; 
0x0017671a: push ds; add esp, 0x18; pop ebx; ret; 
0x000caaa5: push ds; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008f3d8: push ds; add esp, 0x2c; ret; 
0x00114a93: push ds; add esp, 0x54; pop ebx; pop esi; ret; 
0x0008afd0: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016f180: push ds; cld; jmp dword ptr [esi - 0x70]; 
0x0011d140: push ds; dec esi; stc; call dword ptr [eax + 0x57]; 
0x000cc2c9: push ds; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000aaf77: push ds; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac64a: push ds; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x00037218: push ds; leave; mov dword ptr [edx + 0x28], ecx; ret; 
0x0012e6c6: push ds; lock inc dword ptr [ebx - 0x72afef3c]; xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x000f9a4e: push ds; mov dword ptr [0xc483fffb], eax; adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000804c1: push ds; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x0015e5be: push ds; pop ds; in eax, dx; call dword ptr [eax - 0x73]; 
0x0007408a: push ds; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011f9f9: push ds; pop ebx; pop esi; pop edi; ret; 
0x000aca34: push ds; pop edi; pop esi; pop ebx; ret; 
0x001350be: push ds; pop edx; stc; call dword ptr [eax - 0x18]; 
0x00135242: push ds; pop edx; stc; call dword ptr [eax - 0x73]; 
0x00087762: push ds; sti; call 0x16e4a1; add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080342: push ds; sti; call 0x16e4a1; add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000382a2: push ds; sti; call 0x16e4a1; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038282: push ds; sti; call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002b802: push ds; sti; call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00022742: push ds; sti; call 0x16e4a1; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022722: push ds; sti; call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021742: push ds; sti; call 0x16e4a1; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021722: push ds; sti; call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00020162: push ds; sti; jmp dword ptr [ebx + 0xc]; 
0x001214a2: push ds; sti; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000ddc42: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ddc42: push ds; sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00116a32: push ds; sti; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000ddc62: push ds; sti; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc62: push ds; sti; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000ddf92: push ds; sti; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf92: push ds; sti; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de012: push ds; sti; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a242: push ds; sti; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1b2: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1b2: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000ddc82: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc82: push ds; sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcc2: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcc2: push ds; sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddca2: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddca2: push ds; sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ddce2: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddce2: push ds; sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00121852: push ds; sti; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00121852: push ds; sti; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0007f682: push ds; sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007eea2: push ds; sti; mov eax, 0xffffffff; ret; 
0x00154f72: push ds; sti; mov eax, 1; ret; 
0x001572e2: push ds; sti; mov eax, 2; ret; 
0x00081c82: push ds; sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x00036d32: push ds; sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00176f12: push ds; sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x001633b2: push ds; sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0007b3b2: push ds; sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc82: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00131092: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00131082: push ds; sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00084002: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014ac72: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080372: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016e042: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e062: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e072: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e32: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f02: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007a612: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d7d92: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0016e052: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00080382: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x0007e3b2: push ds; sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0008cba2: push ds; sti; mov eax, dword ptr gs:[8]; ret; 
0x00087ae2: push ds; sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00162ff2: push ds; sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00121692: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001213a2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001214c2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00116b02: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00121822: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc632: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010a572: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116922: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00107d92: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00116952: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001216c2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011ea72: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e52: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121252: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121662: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dc082: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121402: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf32: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0011f4b2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ddfe2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a212: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f9772: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010a512: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001094a2: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0011ee72: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee92: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121372: push ds; sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x000dcda2: push ds; sti; pop ecx; mov eax, 0xbe; int 0x80; 
0x000dc0b2: push ds; sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00021492: push ds; sti; ret; 
0x0007f5d2: push ds; sti; xor eax, eax; ret; 
0x001573f9: push ds; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0011b669: push ds; sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0002c23c: push dword ptr [eax + 0x1018]; call 0x11bcf0; add esp, 0x1c; ret; 
0x000373a2: push dword ptr [eax + 0x13]; add byte ptr [ecx + 0x1eec5ac6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00154f3c: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015c058: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0015c058: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0007bfc3: push dword ptr [eax + 0x38]; call 0x1087a0; add esp, 0x18; pop ebx; ret; 
0x0019da4b: push dword ptr [eax + 0x98]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0008ef34: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000c9c31: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x0016bfd2: push dword ptr [eax + ebx*2 - 0x77]; ret 0xe283; 
0x00070c25: push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x000b5185: push dword ptr [eax + edi*2 - 0x77]; fdiv st(7); ret; 
0x0016e561: push dword ptr [eax - 0x1480]; push 0; push dword ptr [esp + 0x1c]; call 0x3a4c0; add esp, 0x1c; ret; 
0x00057692: push dword ptr [eax]; call 0x58e80; add esp, 0x1c; ret; 
0x00074852: push dword ptr [eax]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a91: push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x000747f1: push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00033072: push dword ptr [eax]; call 0xb3440; add esp, 0x1c; ret; 
0x000c9c34: push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c3c98: push dword ptr [eax]; call esi; 
0x0007de43: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x0011b735: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0003306c: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xb3440; add esp, 0x1c; ret; 
0x0012e8cc: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x12d300; add esp, 0x1c; ret; 
0x0002ebc8: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x2ebe0; add esp, 0x1c; ret; 
0x000546d0: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x51e90; add esp, 0x1c; ret; 
0x0009a2a8: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0xa13a0; add esp, 0x1c; ret; 
0x00099ff8: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9daf0; add esp, 0x1c; ret; 
0x000c07a8: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0920; add esp, 0x1c; ret; 
0x000dd3d7: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd260; add esp, 0x1c; ret; 
0x00073063: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0015dc29: push dword ptr [ebp + 0x50]; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0010ac3a: push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00073066: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0013011f: push dword ptr [ebp + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x000b5778: push dword ptr [ebp + 8]; call ebx; 
0x00072926: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073e5b: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007133a: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x001029b1: push dword ptr [ebp + 9]; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0016f905: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x00071078: push dword ptr [ebp + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0015fbe8: push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x000dfdc9: push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x000e0098: push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x00103f21: push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x00104308: push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00072923: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073e58: push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007841d: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0019d1be: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x00020f4a: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0011b73a: push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0007f777: push dword ptr [ebp - 0x40]; add esp, 4; pop ebx; pop esi; ret; 
0x0012c44f: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0016ae7e: push dword ptr [ebp - 0x50]; call eax; 
0x000fd6b3: push dword ptr [ebp - 0x534]; push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x000fd6b9: push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x0016ae79: push dword ptr [ebp - 0x60]; push 0x28; push dword ptr [ebp - 0x50]; call eax; 
0x000fd6bf: push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x000fd6c5: push dword ptr [ebp - 0x6ec]; call ebx; 
0x000fd6ad: push dword ptr [ebp - 0x70c]; push dword ptr [ebp - 0x534]; push dword ptr [ebp - 0x538]; push dword ptr [ebp - 0x6e0]; push dword ptr [ebp - 0x6ec]; call ebx; 
0x000755ce: push dword ptr [ebp - 0x72]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00061a31: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; dec dword ptr [ecx - 0x4eb6b]; call dword ptr [ecx + 0x50]; 
0x0005b245: push dword ptr [ebp - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; dec dword ptr [ecx - 0x5ab73]; call dword ptr [edx + 0x50]; 
0x00066462: push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x000660fa: push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00066893: push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x00066a7c: push dword ptr [ebp - 0x87c]; call edx; 
0x0005334b: push dword ptr [ebp - 0x88]; call eax; 
0x0006688d: push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0006b15d: push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006c22b: push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0006b6f6: push dword ptr [ebp - 0x8a0]; call edx; 
0x0006ba23: push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006bb96: push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x0012defc: push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0012e60e: push dword ptr [ebp - 0xc0]; call edx; 
0x000390a9: push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00155394: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00099467: push dword ptr [ebx + 0x24]; call eax; 
0x000995d4: push dword ptr [ebx + 0x24]; call edx; 
0x00124dce: push dword ptr [ebx + 0x274]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0012d980: push dword ptr [ebx + 0x30]; call eax; 
0x0015d15b: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0015a4c0: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x0008425f: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0003a885: push dword ptr [ebx + 4]; call eax; 
0x00022563: push dword ptr [ebx + 4]; call esi; 
0x00020000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x000fa170: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00155f9d: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0007595c: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00075907: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00124751: push dword ptr [ebx + ebx - 0x73]; adc al, 0x3f; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; call dword ptr gs:[0x10]; 
0x000236c4: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x00151300: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0013744a: push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x000818e5: push dword ptr [ebx]; call 0x16b7b0; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x000817f2: push dword ptr [ebx]; call 0x16b870; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00158252: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00157b14: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016afe8: push dword ptr [ebx]; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0011b2f4: push dword ptr [ebx]; call esi; 
0x0011b66d: push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x0002e82b: push dword ptr [ebx]; or eax, 0x89000010; ret 0x858b; 
0x000fa173: push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0002e84d: push dword ptr [ebx]; sub esp, 0x89000010; ret 0x858b; 
0x0011ed82: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0011ed82: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000d8379: push dword ptr [ecx + eax*2 - 0x77]; ret 0xe283; 
0x0010a6d6: push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011f9e4: push dword ptr [ecx + ebx - 0x48]; jl 0x11f9eb; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002f16d: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe36b], cl; call dword ptr [ecx + 0x50]; 
0x001512b3: push dword ptr [ecx + edi*2 - 0x7d]; ret; 
0x000c63e5: push dword ptr [ecx]; call dword ptr [eax - 0x73]; 
0x0013f00b: push dword ptr [ecx]; fisttp dword ptr [ebx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0006472a: push dword ptr [ecx]; fucomi st(1); dec eax; jecxz 0x64730; dec dword ptr [ebx - 0x5037b]; jmp dword ptr [ebp - 0x75]; 
0x000db925: push dword ptr [ecx]; fucomi st(1); ret; 
0x000c60fe: push dword ptr [ecx]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x0005af58: push dword ptr [ecx]; jmp dword ptr [ebp - 0x75]; 
0x000f9c0f: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x0016bb38: push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016ba38: push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00066e97: push dword ptr [ecx]; rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x001415e3: push dword ptr [ecx]; rol byte ptr [ebx - 0x7c9aef3c], cl; cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x0008a7c3: push dword ptr [ecx]; sar byte ptr [eax + 0xf0], cl; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000920b5: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x0005d40a: push dword ptr [ecx]; shr cl, 0x58; ret 0xffff; 
0x0014aee4: push dword ptr [ecx]; shr cl, cl; or eax, 0x8dffffff; add dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x00113ac7: push dword ptr [edi + 0x16]; pop ebx; pop esi; pop edi; ret; 
0x00113bc6: push dword ptr [edi + 0x17]; pop ebx; pop esi; pop edi; ret; 
0x00113a44: push dword ptr [edi + 0x19]; pop ebx; pop esi; pop edi; ret; 
0x0009246b: push dword ptr [edi + 0x1a]; pop ebx; pop esi; pop edi; ret; 
0x0011f9f7: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x000dce0d: push dword ptr [edi + 0x20]; hlt; mov eax, ecx; call dword ptr gs:[0x10]; 
0x000dc73d: push dword ptr [edi + 0x40]; add esp, 0x18; pop ebx; ret; 
0x00037827: push dword ptr [edi + 0x46]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00109406: push dword ptr [edi + 0x47]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00109242: push dword ptr [edi + 0x4b]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003b96b: push dword ptr [edi + 0x52]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011444d: push dword ptr [edi + 0x58]; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011f233: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x00106b4b: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x001709e3: push dword ptr [edi + 0xa]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00123ff2: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000584d2: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x001211f0: push dword ptr [edi + 0xd]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00120b19: push dword ptr [edi + 4]; pop ebx; pop esi; pop edi; ret; 
0x000377c9: push dword ptr [edi + 4]; pop ebx; ret; 
0x0008b318: push dword ptr [edi + 5]; pop ebx; pop esi; pop edi; ret; 
0x00058478: push dword ptr [edi + 5]; pop ebx; ret; 
0x001037d7: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d7bd7: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x001239a6: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011482e: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x00107b8e: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000cade6: push dword ptr [edi + 7]; pop ebx; ret; 
0x00082c15: push dword ptr [edi + 8]; pop ebx; pop esi; pop edi; ret; 
0x0009258d: push dword ptr [edi + 8]; pop ebx; pop esi; ret; 
0x00123504: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00091f14: push dword ptr [edi + 9]; pop ebx; ret; 
0x00063197: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4f363], cl; call dword ptr [edx + 0x50]; 
0x0005b5d7: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [ecx + 0x50]; 
0x0005afe2: push dword ptr [edi + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x59b63], cl; call dword ptr [edx + 0x50]; 
0x001649c5: push dword ptr [edi + edx - 0x75]; jnp 0x41a1ea24; or byte ptr [ecx], bh; ret 0x2c75; 
0x00076a98: push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x000b5293: push dword ptr [edi]; call ebx; 
0x000b51f4: push dword ptr [edi]; call esi; 
0x0016cb02: push dword ptr [edi]; push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0016bab1: push dword ptr [edi]; push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007106b: push dword ptr [edx + 0x98]; call eax; 
0x0016e65b: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00070864: push dword ptr [edx + ebp*4 - 0x77]; ret 0xe283; 
0x00170473: push dword ptr [edx + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0015605e: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0007100d: push dword ptr [esi + 0x98]; call eax; 
0x000872ab: push dword ptr [esi + 0xa]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0010a6da: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0015760f: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001575cc: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0002c6f0: push dword ptr [esi + 4]; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016cb04: push dword ptr [esi + 4]; push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000b53da: push dword ptr [esi + 8]; call ebx; 
0x00087314: push dword ptr [esi + 9]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x0005f90a: push dword ptr [esi - 0x2e]; mov dword ptr [ebx], edi; pop ebx; pop esi; pop edi; ret; 
0x00157d52: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000390ac: push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016bab3: push dword ptr [esi]; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000390a5: push dword ptr [esp + 0x10]; push dword ptr [ebp]; push dword ptr [esi]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0007c6cc: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00139b85: push dword ptr [esp + 0x10]; push ebp; call edi; 
0x00039043: push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015539a: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x0007c6d0: push dword ptr [esp + 0x10]; push esi; call dword ptr [edx + 0x40]; 
0x00099563: push dword ptr [esp + 0x14]; call eax; 
0x0016ce0f: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0002150f: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001556ef: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x000654b4: push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00160286: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x00155286: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x000774bf: push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x00077262: push dword ptr [esp + 0x18]; call dword ptr [edi + 0x40]; 
0x00076d29: push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x0007717a: push dword ptr [esp + 0x18]; call ecx; 
0x00169891: push dword ptr [esp + 0x18]; lea eax, [eax - 0x699dd]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x00051a87: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x000747e7: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x11c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00057688: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x58e80; add esp, 0x1c; ret; 
0x00074848: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0x70]; push dword ptr [eax]; call 0x5f980; add esp, 0x1c; ret; 
0x0016b3a5: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x0016ba3e: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00076e83: push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x00076ffc: push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00106cd9: push dword ptr [esp + 0x18]; push -0x64; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d8d: push dword ptr [esp + 0x18]; push -0x64; call 0x107160; add esp, 0x1c; ret; 
0x00107e20: push dword ptr [esp + 0x18]; push -0x64; call 0x107e30; add esp, 0x1c; ret; 
0x000dc109: push dword ptr [esp + 0x18]; push -1; call 0xdc120; add esp, 0x1c; ret; 
0x000dc14f: push dword ptr [esp + 0x18]; push -1; call 0xdc260; add esp, 0x1c; ret; 
0x0011ead7: push dword ptr [esp + 0x18]; push 0; call 0x1200a0; add esp, 0x1c; ret; 
0x00030539: push dword ptr [esp + 0x18]; push 0; call 0x304e0; add esp, 0x1c; ret; 
0x000b5496: push dword ptr [esp + 0x18]; push 0; call 0xb54b0; add esp, 0x1c; ret; 
0x0012a58e: push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x0003a758: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x00116f89: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x00109487: push dword ptr [esp + 0x18]; push 0x241; push dword ptr [esp + 0x1c]; call 0x108170; add esp, 0x1c; ret; 
0x00083a67: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x839a0; add esp, 0x1c; ret; 
0x0016b3a1: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov eax, dword ptr [eax - 0xc8]; call dword ptr [eax + 0x378]; add esp, 0x1c; ret; 
0x00076ff8: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0016fc1c: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x0003b65b: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3b670; add esp, 0x1c; ret; 
0x0016fc20: push dword ptr [esp + 0x18]; push esi; call dword ptr [edx + 0x40]; 
0x00106c83: push dword ptr [esp + 0x1c]; call 0x1077f0; add esp, 0x1c; ret; 
0x00057e37: push dword ptr [esp + 0x1c]; call 0x108030; add esp, 0x1c; ret; 
0x00109490: push dword ptr [esp + 0x1c]; call 0x108170; add esp, 0x1c; ret; 
0x00108e4f: push dword ptr [esp + 0x1c]; call 0x108e60; add esp, 0x1c; ret; 
0x0011456a: push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x10; add esp, 0xc; ret; 
0x00114401: push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x00119a42: push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0011aea8: push dword ptr [esp + 0x1c]; call 0x11aec0; add esp, 0x1c; ret; 
0x0011bfd9: push dword ptr [esp + 0x1c]; call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011bfa9: push dword ptr [esp + 0x1c]; call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x0011eda9: push dword ptr [esp + 0x1c]; call 0x11edc0; add esp, 0x1c; ret; 
0x00123961: push dword ptr [esp + 0x1c]; call 0x123ea0; add esp, 0x1c; ret; 
0x00176a23: push dword ptr [esp + 0x1c]; call 0x127840; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0012e8ce: push dword ptr [esp + 0x1c]; call 0x12d300; add esp, 0x1c; ret; 
0x0012d4ce: push dword ptr [esp + 0x1c]; call 0x12d3b0; add esp, 0x18; pop ebx; ret; 
0x00176ca3: push dword ptr [esp + 0x1c]; call 0x1340b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176d93: push dword ptr [esp + 0x1c]; call 0x1351e0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00176dc3: push dword ptr [esp + 0x1c]; call 0x135810; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00135e58: push dword ptr [esp + 0x1c]; call 0x135e70; add esp, 0x1c; ret; 
0x001362a8: push dword ptr [esp + 0x1c]; call 0x1362c0; add esp, 0x1c; ret; 
0x00137a69: push dword ptr [esp + 0x1c]; call 0x136d30; add esp, 0x1c; ret; 
0x00176e73: push dword ptr [esp + 0x1c]; call 0x13a0b0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00143cd9: push dword ptr [esp + 0x1c]; call 0x143bb0; add esp, 0x1c; ret; 
0x0015f3d6: push dword ptr [esp + 0x1c]; call 0x15f130; add esp, 0x10; add esp, 0xc; ret; 
0x0015f3b7: push dword ptr [esp + 0x1c]; call 0x15f230; add esp, 0x10; add esp, 0xc; ret; 
0x001617f1: push dword ptr [esp + 0x1c]; call 0x161520; add esp, 0x1c; ret; 
0x00156a8d: push dword ptr [esp + 0x1c]; call 0x162670; add esp, 0x1c; ret; 
0x00162875: push dword ptr [esp + 0x1c]; call 0x1626a0; add esp, 0x1c; ret; 
0x0016f0a3: push dword ptr [esp + 0x1c]; call 0x16e930; add esp, 0x18; pop ebx; ret; 
0x0002bf50: push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013cb23: push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x00099681: push dword ptr [esp + 0x1c]; call 0x20160; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ebca: push dword ptr [esp + 0x1c]; call 0x2ebe0; add esp, 0x1c; ret; 
0x0003051d: push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x000385ed: push dword ptr [esp + 0x1c]; call 0x38570; add esp, 0x1c; ret; 
0x0003a4e0: push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0016e569: push dword ptr [esp + 0x1c]; call 0x3a4c0; add esp, 0x1c; ret; 
0x0003b5d8: push dword ptr [esp + 0x1c]; call 0x3b7e0; add esp, 0x1c; ret; 
0x0003b638: push dword ptr [esp + 0x1c]; call 0x3b860; add esp, 0x1c; ret; 
0x000389eb: push dword ptr [esp + 0x1c]; call 0x3c560; add esp, 0x1c; ret; 
0x00038a2b: push dword ptr [esp + 0x1c]; call 0x3c660; add esp, 0x1c; ret; 
0x0003e232: push dword ptr [esp + 0x1c]; call 0x3eaf0; add esp, 0x1c; ret; 
0x0003e292: push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x0003e2f2: push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x00048519: push dword ptr [esp + 0x1c]; call 0x484c0; add esp, 0x1c; ret; 
0x000546d2: push dword ptr [esp + 0x1c]; call 0x51e90; add esp, 0x1c; ret; 
0x00057663: push dword ptr [esp + 0x1c]; call 0x57610; add esp, 0x1c; ret; 
0x00074873: push dword ptr [esp + 0x1c]; call 0x57630; add esp, 0x1c; ret; 
0x00116fdf: push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x10; add esp, 0xc; ret; 
0x00116f1d: push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x00057621: push dword ptr [esp + 0x1c]; call 0x58e80; add esp, 0x1c; ret; 
0x00057641: push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a61: push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x00057601: push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000702e2: push dword ptr [esp + 0x1c]; call 0x701f0; add esp, 0x1c; ret; 
0x000792c3: push dword ptr [esp + 0x1c]; call 0x70550; add esp, 0x18; pop ebx; ret; 
0x00070f7d: push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x000794f0: push dword ptr [esp + 0x1c]; call 0x72e40; add esp, 0x1c; ret; 
0x0007950d: push dword ptr [esp + 0x1c]; call 0x72f80; add esp, 0x1c; ret; 
0x000796e1: push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x000575e2: push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d61: push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x000809ca: push dword ptr [esp + 0x1c]; call 0x80910; add esp, 0x18; pop ebx; ret; 
0x0008373c: push dword ptr [esp + 0x1c]; call 0x83660; add esp, 0x18; pop ebx; ret; 
0x00083a70: push dword ptr [esp + 0x1c]; call 0x839a0; add esp, 0x1c; ret; 
0x0008a184: push dword ptr [esp + 0x1c]; call 0x89820; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008a239: push dword ptr [esp + 0x1c]; call 0x89820; add esp, 0x18; pop ebx; ret; 
0x0008aee9: push dword ptr [esp + 0x1c]; call 0x8ad90; add esp, 0x1c; ret; 
0x0008cc0c: push dword ptr [esp + 0x1c]; call 0x8cbb0; add esp, 0x18; pop ebx; ret; 
0x00090df9: push dword ptr [esp + 0x1c]; call 0x90640; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000924df: push dword ptr [esp + 0x1c]; call 0x92430; add esp, 0x18; pop ebx; ret; 
0x00091f4d: push dword ptr [esp + 0x1c]; call 0x92560; add esp, 0x1c; ret; 
0x0009adfc: push dword ptr [esp + 0x1c]; call 0x9ae10; add esp, 0x1c; ret; 
0x000a1257: push dword ptr [esp + 0x1c]; call 0x9cb50; add esp, 0x18; pop ebx; ret; 
0x00099ffe: push dword ptr [esp + 0x1c]; call 0x9daf0; add esp, 0x1c; ret; 
0x0009aeb2: push dword ptr [esp + 0x1c]; call 0x9ea70; add esp, 0x1c; ret; 
0x0009a2aa: push dword ptr [esp + 0x1c]; call 0xa13a0; add esp, 0x1c; ret; 
0x0012f391: push dword ptr [esp + 0x1c]; call 0xb3c10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000b4fdf: push dword ptr [esp + 0x1c]; call 0xb3c10; add esp, 0x18; pop ebx; ret; 
0x000b513f: push dword ptr [esp + 0x1c]; call 0xb3d20; add esp, 0x18; pop ebx; ret; 
0x000a14c9: push dword ptr [esp + 0x1c]; call 0xb3d70; add esp, 0x18; pop ebx; ret; 
0x00130375: push dword ptr [esp + 0x1c]; call 0xb4c50; add esp, 0x18; pop ebx; ret; 
0x000c8e46: push dword ptr [esp + 0x1c]; call 0xb4fc0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00130585: push dword ptr [esp + 0x1c]; call 0xb50b0; add esp, 0x18; pop ebx; ret; 
0x000b6462: push dword ptr [esp + 0x1c]; call 0xb83e0; add esp, 0x1c; ret; 
0x000b64c2: push dword ptr [esp + 0x1c]; call 0xbb330; add esp, 0x1c; ret; 
0x000b6522: push dword ptr [esp + 0x1c]; call 0xbe010; add esp, 0x1c; ret; 
0x000c07ae: push dword ptr [esp + 0x1c]; call 0xc0920; add esp, 0x1c; ret; 
0x000c07e2: push dword ptr [esp + 0x1c]; call 0xc1580; add esp, 0x1c; ret; 
0x000ca8c9: push dword ptr [esp + 0x1c]; call 0xc9fb0; add esp, 0x18; pop ebx; ret; 
0x00170ef3: push dword ptr [esp + 0x1c]; call 0xd9bc0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00170fa3: push dword ptr [esp + 0x1c]; call 0xdb630; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000dc131: push dword ptr [esp + 0x1c]; call 0xdc440; add esp, 0x1c; ret; 
0x0008f77f: push dword ptr [esp + 0x1c]; call 0xdce40; add esp, 0x1c; ret; 
0x000dd3dd: push dword ptr [esp + 0x1c]; call 0xdd260; add esp, 0x1c; ret; 
0x000ddc11: push dword ptr [esp + 0x1c]; call 0xdd8f0; add esp, 0x1c; ret; 
0x000dd67d: push dword ptr [esp + 0x1c]; call 0xddc00; add esp, 0x1c; ret; 
0x00038bb5: push dword ptr [esp + 0x1c]; call edi; 
0x0012f6ba: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x0013067a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00071009: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00119a3e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0011bfd5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011bfa5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x0012395d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x123ea0; add esp, 0x1c; ret; 
0x0012d4ca: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x12d3b0; add esp, 0x18; pop ebx; ret; 
0x00156a89: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x162670; add esp, 0x1c; ret; 
0x00030519: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x304e0; add esp, 0x1c; ret; 
0x000385e9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x38570; add esp, 0x1c; ret; 
0x0003a4dc: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0004122d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eaf0; add esp, 0x1c; ret; 
0x0003e2bc: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x0003e2ee: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x0005765f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57610; add esp, 0x1c; ret; 
0x0007486f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57630; add esp, 0x1c; ret; 
0x0005761d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x58e80; add esp, 0x1c; ret; 
0x000c39de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a5d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x000575fd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000702de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x701f0; add esp, 0x1c; ret; 
0x00070f79: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x70e80; add esp, 0x1c; ret; 
0x000794ec: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72e40; add esp, 0x1c; ret; 
0x000796dd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x000575de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d5d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x000a1253: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9cb50; add esp, 0x18; pop ebx; ret; 
0x00099ffa: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9daf0; add esp, 0x1c; ret; 
0x000b4fdb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb3c10; add esp, 0x18; pop ebx; ret; 
0x000b513b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb3d20; add esp, 0x18; pop ebx; ret; 
0x00130371: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb4c50; add esp, 0x18; pop ebx; ret; 
0x00130581: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb50b0; add esp, 0x18; pop ebx; ret; 
0x000baacd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb83e0; add esp, 0x1c; ret; 
0x000bd8bd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbb330; add esp, 0x1c; ret; 
0x000c050d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe010; add esp, 0x1c; ret; 
0x000c07aa: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0920; add esp, 0x1c; ret; 
0x000c07de: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1580; add esp, 0x1c; ret; 
0x000dc12d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdc440; add esp, 0x1c; ret; 
0x0008f77b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdce40; add esp, 0x1c; ret; 
0x000dd3d9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd260; add esp, 0x1c; ret; 
0x000ddc0d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd8f0; add esp, 0x1c; ret; 
0x0012f726: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x67c80; add esp, 0x1c; ret; 
0x001306e6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x6ced0; add esp, 0x1c; ret; 
0x00119a59: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x00123959: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x123ea0; add esp, 0x1c; ret; 
0x0003a4d8: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x0003e2ea: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x00057619: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x58e80; add esp, 0x1c; ret; 
0x000c39f9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x00051a59: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x000575f9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000796d9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x00079889: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d59: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x000c07da: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc1580; add esp, 0x1c; ret; 
0x000dc129: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdc440; add esp, 0x1c; ret; 
0x0008f777: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdce40; add esp, 0x1c; ret; 
0x000ddc09: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xdd8f0; add esp, 0x1c; ret; 
0x00160475: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00157a2e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001579de: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001603b1: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0014c16c: push dword ptr [esp + 0x1c]; push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001552b5: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016e1f7: push dword ptr [esp + 0x20]; call 0x16e070; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e243: push dword ptr [esp + 0x20]; call 0x16e0e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e1de: push dword ptr [esp + 0x20]; call 0x16e0f0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001176a3: push dword ptr [esp + 0x20]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000d8f9a: push dword ptr [esp + 0x20]; lea eax, [esp + 0x38]; push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00119a8a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0012f6ea: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x001306aa: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x00130d0a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x00130d6a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00130dca: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x0016e656: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001567c7: push dword ptr [esp + 0x20]; push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0012a025: push dword ptr [esp + 0x20]; push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00081ac6: push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014c172: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00156874: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0016abf5: push dword ptr [esp + 0x24]; mov edx, dword ptr [esp + 0x24]; call edx; 
0x000d8fa3: push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x0006cffd: push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000582cf: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x00077111: push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x00107803: push dword ptr [esp + 0x28]; push -0x64; call 0x107820; add esp, 0x2c; ret; 
0x00057591: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00031971: push dword ptr [esp + 0x28]; push 0; call 0x31900; add esp, 0x2c; ret; 
0x0007710d: push dword ptr [esp + 0x28]; push dword ptr [esp + 0x28]; mov esi, dword ptr [esp + 0x18]; push esi; call dword ptr [edi + 0x40]; 
0x0007b704: push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dc2: push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x0010340d: push dword ptr [esp + 0x2c]; call 0x102a60; add esp, 0x2c; ret; 
0x00102a1d: push dword ptr [esp + 0x2c]; call 0x1033d0; add esp, 0x2c; ret; 
0x00106ca7: push dword ptr [esp + 0x2c]; call 0x107820; add esp, 0x2c; ret; 
0x0011c315: push dword ptr [esp + 0x2c]; call 0x11c220; add esp, 0x28; pop ebx; ret; 
0x0011c4ad: push dword ptr [esp + 0x2c]; call 0x11c330; add esp, 0x28; pop ebx; ret; 
0x0012bf79: push dword ptr [esp + 0x2c]; call 0x12bd50; add esp, 0x28; pop ebx; ret; 
0x00176b7b: push dword ptr [esp + 0x2c]; call 0x132b60; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176bfb: push dword ptr [esp + 0x2c]; call 0x1335b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00137a4f: push dword ptr [esp + 0x2c]; call 0x136f10; add esp, 0x2c; ret; 
0x00137b85: push dword ptr [esp + 0x2c]; call 0x137a80; add esp, 0x2c; ret; 
0x001383cd: push dword ptr [esp + 0x2c]; call 0x137da0; add esp, 0x2c; ret; 
0x00139f24: push dword ptr [esp + 0x2c]; call 0x139910; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0015f7b7: push dword ptr [esp + 0x2c]; call 0x15f600; add esp, 0x2c; ret; 
0x000304f5: push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x00031945: push dword ptr [esp + 0x2c]; call 0x31900; add esp, 0x2c; ret; 
0x000396a5: push dword ptr [esp + 0x2c]; call 0x39340; add esp, 0x2c; ret; 
0x0003c546: push dword ptr [esp + 0x2c]; call 0x3c720; add esp, 0x2c; ret; 
0x0003c5c6: push dword ptr [esp + 0x2c]; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c646: push dword ptr [esp + 0x2c]; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6c6: push dword ptr [esp + 0x2c]; call 0x3da60; add esp, 0x2c; ret; 
0x0004870c: push dword ptr [esp + 0x2c]; call 0x48720; add esp, 0x2c; ret; 
0x00071ec9: push dword ptr [esp + 0x2c]; call 0x71cf0; add esp, 0x2c; ret; 
0x00057597: push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00074135: push dword ptr [esp + 0x2c]; call 0x73f50; add esp, 0x28; pop ebx; ret; 
0x000747b9: push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x00057569: push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0007f56d: push dword ptr [esp + 0x2c]; call 0x7f490; add esp, 0x28; pop ebx; ret; 
0x00087ad1: push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x00092515: push dword ptr [esp + 0x2c]; call 0x927d0; add esp, 0x2c; ret; 
0x00092545: push dword ptr [esp + 0x2c]; call 0x92a70; add esp, 0x2c; ret; 
0x000b6266: push dword ptr [esp + 0x2c]; call 0xb6560; add esp, 0x2c; ret; 
0x000b62e6: push dword ptr [esp + 0x2c]; call 0xb6a60; add esp, 0x2c; ret; 
0x000b6366: push dword ptr [esp + 0x2c]; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63e6: push dword ptr [esp + 0x2c]; call 0xb7570; add esp, 0x2c; ret; 
0x000b58c3: push dword ptr [esp + 0x2c]; call 0xc35f0; add esp, 0x2c; ret; 
0x000ce6b4: push dword ptr [esp + 0x2c]; call 0xce7c0; add esp, 0x2c; ret; 
0x000d1586: push dword ptr [esp + 0x2c]; call 0xd3530; add esp, 0x2c; ret; 
0x000f964b: push dword ptr [esp + 0x2c]; call 0xf8ec0; add esp, 0x28; pop ebx; ret; 
0x000f9583: push dword ptr [esp + 0x2c]; call 0xf94d0; add esp, 0x28; pop ebx; ret; 
0x00103409: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x102a60; add esp, 0x2c; ret; 
0x00102a19: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1033d0; add esp, 0x2c; ret; 
0x0011c311: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11c220; add esp, 0x28; pop ebx; ret; 
0x0011c4a9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11c330; add esp, 0x28; pop ebx; ret; 
0x0012bf75: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x12bd50; add esp, 0x28; pop ebx; ret; 
0x00137b81: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137a80; add esp, 0x2c; ret; 
0x001383c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137da0; add esp, 0x2c; ret; 
0x0015f7b3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x15f600; add esp, 0x2c; ret; 
0x000304f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x00031941: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31900; add esp, 0x2c; ret; 
0x000396a1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x39340; add esp, 0x2c; ret; 
0x0003c580: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3c720; add esp, 0x2c; ret; 
0x0003d251: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c642: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6c2: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3da60; add esp, 0x2c; ret; 
0x00049a19: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x48720; add esp, 0x2c; ret; 
0x00071ec5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x71cf0; add esp, 0x2c; ret; 
0x00074131: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x73f50; add esp, 0x28; pop ebx; ret; 
0x000747b5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x00057565: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0007f569: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7f490; add esp, 0x28; pop ebx; ret; 
0x00087acd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x00092541: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92a70; add esp, 0x2c; ret; 
0x000b6262: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6560; add esp, 0x2c; ret; 
0x000b6ed1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6a60; add esp, 0x2c; ret; 
0x000b6362: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63e2: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7570; add esp, 0x2c; ret; 
0x000d1541: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce7c0; add esp, 0x2c; ret; 
0x000d1582: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd3530; add esp, 0x2c; ret; 
0x000f9647: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf8ec0; add esp, 0x28; pop ebx; ret; 
0x000f957f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf94d0; add esp, 0x28; pop ebx; ret; 
0x00103405: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x102a60; add esp, 0x2c; ret; 
0x00102a15: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1033d0; add esp, 0x2c; ret; 
0x00137b7d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137a80; add esp, 0x2c; ret; 
0x001383c5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x137da0; add esp, 0x2c; ret; 
0x0015f7af: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x15f600; add esp, 0x2c; ret; 
0x00031911: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31140; add esp, 0x2c; ret; 
0x0003193d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x31900; add esp, 0x2c; ret; 
0x0003969d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x39340; add esp, 0x2c; ret; 
0x0003c57c: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3c720; add esp, 0x2c; ret; 
0x0003d24d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3ccf0; add esp, 0x2c; ret; 
0x0003c63e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3d270; add esp, 0x2c; ret; 
0x0003c6be: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x3da60; add esp, 0x2c; ret; 
0x00049a15: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x48720; add esp, 0x2c; ret; 
0x00071ec1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x71cf0; add esp, 0x2c; ret; 
0x000747b1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x00057561: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0009253d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x92a70; add esp, 0x2c; ret; 
0x000b625e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6560; add esp, 0x2c; ret; 
0x000b6ecd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6a60; add esp, 0x2c; ret; 
0x000b635e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb6ef0; add esp, 0x2c; ret; 
0x000b63de: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xb7570; add esp, 0x2c; ret; 
0x000d153d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xce7c0; add esp, 0x2c; ret; 
0x000d157e: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd3530; add esp, 0x2c; ret; 
0x000b6127: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x000b5de7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00081659: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x000b600c: push dword ptr [esp + 0x2c]; push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0015dc79: push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0007ba13: push dword ptr [esp + 0x2c]; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008d5eb: push dword ptr [esp + 0x2c]; push edx; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x000819a9: push dword ptr [esp + 0x2c]; push edx; push ecx; push esi; call eax; 
0x0015a4c6: push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000d8fa7: push dword ptr [esp + 0x30]; call ebx; 
0x00038b88: push dword ptr [esp + 0x30]; call edi; 
0x00071062: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0010ac36: push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x0002255f: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x000fa175: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x000c370e: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000fa179: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x000817cb: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0012f578: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x000818bc: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00038ee0: push dword ptr [esp + 0x30]; push esi; call edi; 
0x000582cb: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c3887: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b5b1b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push edi; call esi; 
0x001305c6: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x0012f606: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x0007f2e6: push dword ptr [esp + 0x38]; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x00151a0b: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x000b612b: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x00073f27: push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000b5def: push dword ptr [esp + 0x38]; push edi; call esi; 
0x000b612f: push dword ptr [esp + 0x38]; push esi; call ebx; 
0x00141725: push dword ptr [esp + 0x3c]; call 0x141190; add esp, 0x3c; ret; 
0x00151a11: push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0015e625: push dword ptr [esp + 0x3c]; call 0x15e360; add esp, 0x3c; ret; 
0x00081662: push dword ptr [esp + 0x3c]; call eax; 
0x000fa17d: push dword ptr [esp + 0x3c]; call esi; 
0x000b5deb: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x00141721: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x141190; add esp, 0x3c; ret; 
0x00151a3f: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0015e621: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x15e360; add esp, 0x3c; ret; 
0x0014171d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x141190; add esp, 0x3c; ret; 
0x00151a3b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x151860; add esp, 0x3c; ret; 
0x0015e61d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x15e360; add esp, 0x3c; ret; 
0x0015ea3c: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x000817cf: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0008165d: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0007cb9d: push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x0015a518: push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x00021678: push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021615: push dword ptr [esp + 0x40]; call eax; 
0x000b5b1f: push dword ptr [esp + 0x40]; push edi; call esi; 
0x00069056: push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f6b: push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0015a767: push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0002b409: push dword ptr [esp + 0x50]; call esi; 
0x0002b405: push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00026675: push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026671: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002617f: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000ca792: push dword ptr [esp + 0x58]; lea eax, [esp + 0xb4]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000ca52a: push dword ptr [esp + 0x58]; lea eax, [esp + 0xec]; push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00029f8a: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d8cb4: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x0002b401: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00029f86: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000d8cb0: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x1c]; call edi; 
0x00139740: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00025af4: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249de: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002255a: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00139744: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00026183: push dword ptr [esp + 0x5c]; call edi; 
0x00028bdc: push dword ptr [esp + 0x5c]; call esi; 
0x0002717e: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025af0: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249da: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028bd8: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x0002717a: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00025531: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025af8: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249e2: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002552d: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000293d6: push dword ptr [esp + 0x64]; call edi; 
0x00025535: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000293d2: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027e46: push dword ptr [esp + 0x6c]; call esi; 
0x00027e42: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x001556f3: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0016faf8: push dword ptr [esp + 0xbc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0013ffa1: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012a483: push dword ptr [esp + 0xc]; push 0x2000001; mov eax, dword ptr [esp + 0x20]; call dword ptr [eax + 0x14]; 
0x0016f77e: push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0007bba5: push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00021673: push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x000f0b06: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x00139b7c: push dword ptr [esp + 4]; push 0x400; push dword ptr [esp + 0x10]; push ebp; call edi; 
0x000371ba: push dword ptr [esp + 8]; call 0x37120; pop ecx; pop edx; ret; 
0x0012b320: push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0007c5f6: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x000720f5: push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x00072167: push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0015716b: push dword ptr [esp + 8]; push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0007c5fa: push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00145a99: push dword ptr [esp + ebp - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b3011: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000c33f9: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x000f9fad: push dword ptr [esp + ecx - 0x77]; ret 0x4089; 
0x0009e9c9: push dword ptr [esp + edx*2 - 9]; ret 0; 
0x0008cf69: push dword ptr [esp - 0x7b]; sar byte ptr [eax + 0x60], 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x00121985: push dword ptr [esp - 0x7d]; in al, dx; add al, 0x89; ret; 
0x0009e9d1: push dword ptr [esp - 9]; ret 0; 
0x000293d5: push dword ptr fs:[esp + 0x64]; call edi; 
0x0002ebc7: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x2ebe0; add esp, 0x1c; ret; 
0x000546cf: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0x51e90; add esp, 0x1c; ret; 
0x0009a2a7: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; call 0xa13a0; add esp, 0x1c; ret; 
0x00099ff7: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x9daf0; add esp, 0x1c; ret; 
0x000c07a7: push dword ptr gs:[eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc0920; add esp, 0x1c; ret; 
0x0016bab4: push dword ptr ss:[esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00092c69: push eax; aam 0xe6; call dword ptr [eax - 0x73]; 
0x00074540: push eax; adc al, 0x73; ret; 
0x0016323f: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x001633dd: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000b2406: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aef70: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x00077bb3: push eax; adc byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0xf02; 
0x0019cfb9: push eax; adc byte ptr [ebp - 0x7cf28b2e], al; in al, dx; or al, 0x50; call edx; 
0x0015f107: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000b31a1: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, [esi]; nop; xor eax, eax; ret; 
0x000b23e3: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aef50: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000640e6: push eax; adc byte ptr [ebx - 0x50f7b], cl; call dword ptr [edx - 1]; 
0x0007453d: push eax; adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x000b2466: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aefb3: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000b2496: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000aefd3: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00156058: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x156071; push ebx; call dword ptr [esi + 0x14]; 
0x000b2437: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aef94: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009afc3: push eax; adc eax, 0x440ffff5; ret 0x66c3; 
0x00120ed7: push eax; adc eax, dword ptr [ecx]; ret; 
0x00048072: push eax; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x001557ed: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0015caaa: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0007e848: push eax; add al, 0x5b; ret; 
0x00081ca3: push eax; add al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00073a22: push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00065a63: push eax; add al, 0x89; adc dword ptr [ebx - 0x7cf87700], ecx; ret; 
0x0005f957: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x0015e7d9: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x00074e82: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00157ba3: push eax; add al, 0x89; push ebx; adc bl, ch; ret; 
0x00081cdb: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00095cbc: push eax; add al, 0x89; ret 0xf089; 
0x000937c1: push eax; add al, 0x8b; inc eax; or al, 0x83; ret; 
0x000aed3a: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x001638be: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00038f6c: push eax; add al, 0xe9; ret; 
0x0011b975: push eax; add al, 0xf6; ret 0xf01; 
0x000c7a9d: push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [esi + 0x44], 0xf9; call dword ptr [eax - 0x18]; 
0x000baaae: push eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x0014af93: push eax; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x0002fe93: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x0004951a: push eax; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x00102d51: push eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7a76f783], cl; sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x0009aae3: push eax; add dword ptr [eax], eax; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xa165; 
0x00058e55: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x00119592: push eax; add dword ptr [ecx + 0xc61451], ecx; and byte ptr [ebx - 0xa37b], cl; jmp dword ptr [ebp - 0x77]; 
0x0009dad7: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00153a37: push eax; add eax, 0x18; push eax; call 0x153810; add esp, 0x2c; ret; 
0x00135f70: push eax; add eax, 0x5b0cc483; pop esi; pop edi; pop ebp; ret; 
0x000cdddc: push eax; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00071803: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000a0a80: push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x000b21bb: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000aed58: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x00081d15: push eax; and al, 0x65; mov byte ptr [0x4fe], 0; mov dword ptr gs:[0x80], eax; ret; 
0x0015e2de: push eax; and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x001432ca: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x0015dc64: push eax; and byte ptr [ebx + 0x50], dl; call dword ptr [edx + 4]; 
0x00074e4b: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0015a716: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 8]; 
0x001552a0: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x0002fb5e: push eax; and eax, 0x1000; ret; 
0x0002fb2e: push eax; and eax, 0x100; ret; 
0x0002fafe: push eax; and eax, 0x2000; ret; 
0x0002fa3e: push eax; and eax, 0x200; ret; 
0x0002fa9e: push eax; and eax, 0x4000; ret; 
0x0002f9ae: push eax; and eax, 0x400; ret; 
0x0002fa6e: push eax; and eax, 0x8000; ret; 
0x0002fa0e: push eax; and eax, 0x800; ret; 
0x0002fc0e: push eax; and eax, 1; ret; 
0x0002f9de: push eax; and eax, 2; ret; 
0x0002face: push eax; and eax, 4; ret; 
0x0002f97e: push eax; and eax, 8; ret; 
0x00106d1b: push eax; call 0x106fa0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00106e3a: push eax; call 0x107160; add esp, 0x10; add esp, 0xc; ret; 
0x00058d87: push eax; call 0x108030; add esp, 0x1c; ret; 
0x001104f2: push eax; call 0x110260; add esp, 0x10; add esp, 0xc; ret; 
0x0019cd80: push eax; call 0x119ff0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011ae17: push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x0019ccf3: push eax; call 0x11bd20; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000939d6: push eax; call 0x121a30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00145fbe: push eax; call 0x145ec0; add esp, 0x18; pop ebx; ret; 
0x00153a3b: push eax; call 0x153810; add esp, 0x2c; ret; 
0x00139acf: push eax; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x0019cd3c: push eax; call 0x20140; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00103620: push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00142191: push eax; call 0x304e0; add esp, 0x10; add esp, 0xc; ret; 
0x0015ca45: push eax; call 0x304e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000fdd56: push eax; call 0x304e0; add esp, 0x18; pop ebx; ret; 
0x0003b660: push eax; call 0x3b670; add esp, 0x1c; ret; 
0x0003b707: push eax; call 0x3b720; add esp, 0x10; add esp, 0xc; ret; 
0x0003b787: push eax; call 0x3b7a0; add esp, 0x10; add esp, 0xc; ret; 
0x0007b4a3: push eax; call 0x7ebb0; add esp, 0x1c; ret; 
0x0008d61b: push eax; call 0x82450; add esp, 0x28; pop ebx; ret; 
0x0008e3db: push eax; call 0x82450; add esp, 0x2c; ret; 
0x000cbf99: push eax; call 0x82700; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00080449: push eax; call 0x82700; add esp, 0x1c; ret; 
0x0008cdd7: push eax; call 0x835b0; add esp, 0x1c; ret; 
0x00155090: push eax; call 0x8b370; add esp, 0x18; lea eax, [ebx + 0xa300]; pop ebx; ret; 
0x0002469e: push eax; call 0x8b370; add esp, 0x1c; ret; 
0x000f9b38: push eax; call 0xb3910; add esp, 0x1c; ret; 
0x000938e8: push eax; call 0xb3d70; add esp, 0x1c; ret; 
0x000cdabb: push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x000c9c55: push eax; call 0xcbfb0; add esp, 0x1c; ret; 
0x00155642: push eax; call dword ptr [ecx + 0x10]; 
0x000df7c0: push eax; call dword ptr [ecx + 0x20]; 
0x00155365: push eax; call dword ptr [ecx + 0xc]; 
0x001553f1: push eax; call dword ptr [ecx + 8]; 
0x001556f7: push eax; call dword ptr [ecx]; 
0x0012a718: push eax; call dword ptr [edi + 0x14]; 
0x001557ef: push eax; call dword ptr [edx + 0x10]; 
0x0015e87e: push eax; call dword ptr [edx + 0x14]; 
0x0015a655: push eax; call dword ptr [edx + 0xc]; 
0x001552a3: push eax; call dword ptr [edx + 4]; 
0x0015a719: push eax; call dword ptr [edx + 8]; 
0x0015ea43: push eax; call dword ptr [edx]; 
0x0011fdbd: push eax; call dword ptr gs:[0x10]; 
0x00078206: push eax; call ebx; 
0x000992f2: push eax; call ecx; 
0x0014d9f6: push eax; call edi; 
0x00082aa7: push eax; call edx; 
0x0002b40c: push eax; call esi; 
0x0008a861: push eax; cli; dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax - 0x73]; 
0x0009b36e: push eax; cmp al, 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0008e8cc: push eax; cmpxchg dword ptr [edx], ecx; jne 0x8e8e0; xor eax, eax; pop ebx; ret; 
0x000f2bbb: push eax; dec eax; stc; call dword ptr [eax - 0x77]; 
0x0016e05d: push eax; dec esp; ret; 
0x0004a83a: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004a5ae: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004047f: push eax; jbe 0x4047b; call dword ptr [eax - 0x73]; 
0x00040fdb: push eax; jbe 0x40fd7; call dword ptr [eax - 0x73]; 
0x00040ffe: push eax; jbe 0x40ffa; call dword ptr [eax - 0x73]; 
0x00041021: push eax; jbe 0x4101d; call dword ptr [eax - 0x73]; 
0x00041044: push eax; jbe 0x41040; call dword ptr [eax - 0x73]; 
0x00041067: push eax; jbe 0x41063; call dword ptr [eax - 0x73]; 
0x00041091: push eax; jbe 0x4108d; call dword ptr [eax - 0x73]; 
0x000410c0: push eax; jbe 0x410bc; call dword ptr [eax - 0x73]; 
0x00041143: push eax; jbe 0x4113f; call dword ptr [eax - 0x73]; 
0x00041166: push eax; jbe 0x41162; call dword ptr [eax - 0x73]; 
0x00041199: push eax; jbe 0x41195; call dword ptr [eax - 0x73]; 
0x000411ba: push eax; jbe 0x411b6; call dword ptr [eax - 0x73]; 
0x000411dd: push eax; jbe 0x411d9; call dword ptr [eax - 0x73]; 
0x00041200: push eax; jbe 0x411fc; call dword ptr [eax - 0x73]; 
0x000936d7: push eax; jbe 0x936e0; ret; 
0x0010cd65: push eax; jmp dword ptr [esi - 0x7d]; 
0x000b2503: push eax; jnp 0x5b17494e; pop esi; ret; 
0x000af030: push eax; jnp 0x5e13147b; ret; 
0x000fd84b: push eax; lea eax, [ebp - 0x11c]; push 0x100; push eax; push edx; call ebx; 
0x00058d80: push eax; lea eax, [edx - 0x6ce81]; push eax; call 0x108030; add esp, 0x1c; ret; 
0x000b57e0: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x000b53d4: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x000cd8ab: push eax; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0015d176: push eax; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0014b303: push eax; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000e452c: push eax; mov bl, 0xf4; call dword ptr [ebp - 0x43]; 
0x0004432c: push eax; mov ch, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00113286: push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x0012340c: push eax; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x000d8c2d: push eax; mov dword ptr [esp + 0x1c], eax; call 0x16b3c0; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0013917b: push eax; mov dword ptr [esp + 0x2c], eax; call 0x16b3c0; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00123458: push eax; mov dword ptr [esp + 8], eax; mov eax, 0x75; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x00123db8: push eax; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x000cd91b: push eax; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x00108c57: push eax; mov eax, 0xdd; mov ecx, esi; mov edx, edi; call dword ptr gs:[0x10]; 
0x0006a040: push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x000ca535: push eax; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0015dc2b: push eax; mov ebx, dword ptr [esp + 0x3c]; push ebx; call dword ptr [eax + 0x14]; 
0x0006f296: push eax; mov ebx, eax; push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0011fd28: push eax; mov ecx, dword ptr [esp + 0x54]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00108ce7: push eax; mov ecx, esi; mov edx, edi; mov dword ptr [esp + 8], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0011fc13: push eax; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00110352: push eax; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001102ad: push eax; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000754a3: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0009057b: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x00081cad: push eax; or al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x00053133: push eax; or al, 0x89; sal esi, 1; ret 0xf40; 
0x000ef6b7: push eax; or al, 0x8b; inc eax; or byte ptr [ebx - 0x76e3db8c], cl; shr dword ptr [ecx], cl; ret; 
0x0012b6e1: push eax; or al, 0xf6; ret 0x7504; 
0x0005224c: push eax; or al, 0xf6; ret 0xf40; 
0x000b4f56: push eax; or byte ptr [ebp - 0x2a], dh; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x0002d6d3: push eax; or byte ptr [ebp - 0x74988a2e], al; inc ebx; add al, 0x83; ret; 
0x0014af38: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x0007b44c: push eax; or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0007b48a: push eax; or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000b2221: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aed9e: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0015f6f8: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00080079: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x001575d1: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015feda: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0006aeed: push eax; or byte ptr [ecx - 0x16e122e9], cl; ret; 
0x001145a6: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001558fc: push eax; or dh, dh; ret 0x7401; 
0x000fa342: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000aeff0: push eax; or eax, 0x824448b; pop esi; ret; 
0x000b24c3: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x0008b176: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0019d604: push eax; out dx, al; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00021fa5: push eax; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000cda10: push eax; pop ebx; pop esi; pop edi; ret; 
0x000b223f: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aedbc: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009a441: push eax; pop ss; idiv bh; cmovne eax, edx; ret; 
0x00153ff7: push eax; push 0; call 0x14f970; add esp, 0x1c; ret; 
0x0015ccba: push eax; push 0; call 0x702d0; add esp, 0x18; pop ebx; ret; 
0x00116fb0: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x001143fb: push eax; push 0x5410; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x00153227: push eax; push 0xa; call 0x14f970; add esp, 0x1c; ret; 
0x0002170c: push eax; push 1; call 0x108630; add esp, 0x1c; ret; 
0x00152ec7: push eax; push 1; call 0x14f970; add esp, 0x1c; ret; 
0x0010ac33: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x00152637: push eax; push 2; call 0x14f970; add esp, 0x1c; ret; 
0x0010af7c: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x001516b7: push eax; push 3; call 0x14f970; add esp, 0x1c; ret; 
0x00152297: push eax; push 4; call 0x14f970; add esp, 0x1c; ret; 
0x00150127: push eax; push 5; call 0x14f970; add esp, 0x1c; ret; 
0x0010af0b: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [ebp + 0xc]; call dword ptr [ebp + 0x24]; 
0x001529b7: push eax; push 6; call 0x14f970; add esp, 0x1c; ret; 
0x00154817: push eax; push 7; call 0x14f970; add esp, 0x1c; ret; 
0x00150797: push eax; push 8; call 0x14f970; add esp, 0x1c; ret; 
0x001542b7: push eax; push 9; call 0x14f970; add esp, 0x1c; ret; 
0x000b24e3: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000af010: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003b8a0: push eax; push cs; xor eax, eax; pop ebx; pop esi; ret; 
0x000b5777: push eax; push dword ptr [ebp + 8]; call ebx; 
0x0012c44e: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000660f9: push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x000995d3: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0015d15a: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x000225bc: push eax; push dword ptr [ebx + 4]; call esi; 
0x00157b13: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016bb37: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x28], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016ba37: push eax; push dword ptr [ecx]; mov dword ptr [esp + 0x2c], ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000b5292: push eax; push dword ptr [edi]; call ebx; 
0x000b53d9: push eax; push dword ptr [esi + 8]; call ebx; 
0x00076d28: push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00106c82: push eax; push dword ptr [esp + 0x1c]; call 0x1077f0; add esp, 0x1c; ret; 
0x00057e36: push eax; push dword ptr [esp + 0x1c]; call 0x108030; add esp, 0x1c; ret; 
0x0011aea7: push eax; push dword ptr [esp + 0x1c]; call 0x11aec0; add esp, 0x1c; ret; 
0x0011c03c: push eax; push dword ptr [esp + 0x1c]; call 0x11be50; add esp, 0x18; pop ebx; ret; 
0x0011c00c: push eax; push dword ptr [esp + 0x1c]; call 0x11bed0; add esp, 0x18; pop ebx; ret; 
0x00135e57: push eax; push dword ptr [esp + 0x1c]; call 0x135e70; add esp, 0x1c; ret; 
0x001362a7: push eax; push dword ptr [esp + 0x1c]; call 0x1362c0; add esp, 0x1c; ret; 
0x0015f3d5: push eax; push dword ptr [esp + 0x1c]; call 0x15f130; add esp, 0x10; add esp, 0xc; ret; 
0x00162874: push eax; push dword ptr [esp + 0x1c]; call 0x1626a0; add esp, 0x1c; ret; 
0x0003b5d7: push eax; push dword ptr [esp + 0x1c]; call 0x3b7e0; add esp, 0x1c; ret; 
0x0003b637: push eax; push dword ptr [esp + 0x1c]; call 0x3b860; add esp, 0x1c; ret; 
0x00116fde: push eax; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x10; add esp, 0xc; ret; 
0x000924de: push eax; push dword ptr [esp + 0x1c]; call 0x92430; add esp, 0x18; pop ebx; ret; 
0x000ca8c8: push eax; push dword ptr [esp + 0x1c]; call 0xc9fb0; add esp, 0x18; pop ebx; ret; 
0x00119a3d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0005765e: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57610; add esp, 0x1c; ret; 
0x0007486e: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x57630; add esp, 0x1c; ret; 
0x000c39dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x5f980; add esp, 0x1c; ret; 
0x0007478d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x000702dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x701f0; add esp, 0x1c; ret; 
0x000575dd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00079d7d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x0014c171: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000d8fa2: push eax; push dword ptr [esp + 0x24]; push dword ptr [esp + 0x30]; call ebx; 
0x00137a4e: push eax; push dword ptr [esp + 0x2c]; call 0x136f10; add esp, 0x2c; ret; 
0x0002b408: push eax; push dword ptr [esp + 0x50]; call esi; 
0x0002b52c: push eax; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00026670: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002617e: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00029f85: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x00028bd7: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x00027179: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000293d1: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00027e41: push eax; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x6c]; call esi; 
0x0012b31f: push eax; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0003b65f: push eax; push eax; call 0x3b670; add esp, 0x1c; ret; 
0x0003b706: push eax; push eax; call 0x3b720; add esp, 0x10; add esp, 0xc; ret; 
0x0003b786: push eax; push eax; call 0x3b7a0; add esp, 0x10; add esp, 0xc; ret; 
0x00064fbf: push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00158370: push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0007cc92: push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0014b488: push eax; push ebx; bnd call dword ptr [ebx + 0x50]; 
0x0016f7ed: push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007bc0c: push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x00077d8d: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00081b8c: push eax; push ecx; call edx; 
0x000816f4: push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00156d0f: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00156e63: push eax; push edi; call dword ptr [edx + 0x18]; 
0x000b59c5: push eax; push edi; call esi; 
0x0012b0d8: push eax; push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0006e112: push eax; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00154f3f: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x00154f3f: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015c05e: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000fd857: push eax; push edx; call ebx; 
0x0007efb2: push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x00077178: push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x00076636: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0007c728: push eax; push edx; push esi; call ecx; 
0x00155019: push eax; push esi; call 0x156a30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00070440: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007dd41: push eax; push esi; call dword ptr [edi + 0x38]; 
0x00170869: push eax; push esi; call dword ptr [edi + 0x40]; 
0x0007bd22: push eax; push esi; call dword ptr [edi + 0x48]; 
0x000b6015: push eax; push esi; call ebx; 
0x0009b221: push eax; push esi; idiv bh; cmovne eax, edx; ret; 
0x000b528c: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00069e5a: push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00158250: push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0012cbd0: push eax; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x00113288: push eax; push esp; xor eax, eax; ret; 
0x001145af: push eax; push ss; ret; 
0x0006f06c: push eax; ret 0; 
0x00182245: push eax; ret 0xfffe; 
0x000368dd: push eax; ret; 
0x0009a0ce: push eax; rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x000fde71: push eax; sahf; stc; call dword ptr [eax - 0x18]; 
0x00081c6c: push eax; sbb al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x0012a216: push eax; sbb al, 0x89; ret; 
0x00033233: push eax; shl al, 1; call dword ptr [eax + 0x6a]; 
0x0012e916: push eax; shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0011d2f1: push eax; stc; call dword ptr [eax + 0x57]; 
0x0015b0dc: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00113448: push eax; sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015ff43: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000889b2: push eax; sub esi, esp; call dword ptr [eax - 0x73]; 
0x0015d6b7: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0013d3b7: push ebp; aam 0x8b; add byte ptr [ecx], bh; ret 0x460f; 
0x0008c822: push ebp; add bl, ch; ret 0xb48d; 
0x0009b4fd: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000e585c: push ebp; add byte ptr [ecx], bh; ret 0x840f; 
0x000ec95a: push ebp; add dh, dh; inc esp; ret 0x804; 
0x000a8f67: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0007db56: push ebp; and al, 0x21; ret 0xc483; 
0x000f5f29: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000f5f3e: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00093404: push ebp; call 0x20140; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0015d6bb: push ebp; call dword ptr [eax + 0x10]; 
0x000654b8: push ebp; call dword ptr [eax + 0x1c]; 
0x0006e115: push ebp; call dword ptr [ebx + 0x1c]; 
0x0006d3de: push ebp; call dword ptr [edi + 0x1c]; 
0x0006d001: push ebp; call dword ptr [esi + 0x1c]; 
0x0007095c: push ebp; call dword ptr [esi + 0x40]; 
0x001575e1: push ebp; call dword ptr [esi]; 
0x0015d6d2: push ebp; call eax; 
0x00139b89: push ebp; call edi; 
0x00096f52: push ebp; cmp byte ptr [ebp + 0x7c09b], cl; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x001331c7: push ebp; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x000716e9: push ebp; in al, 0x89; ret; 
0x0015af43: push ebp; in eax, dx; call dword ptr [eax - 0x73]; 
0x000b6010: push ebp; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x00076744: push ebp; les ecx, ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0012c592: push ebp; mov ah, 0x6a; add eax, 0x57b5808d; stc; call dword ptr [eax - 0x75]; 
0x0012cbcb: push ebp; mov ah, 0x83; les ecx, ptr [eax + edx*2]; push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0005308b: push ebp; mov al, 0x83; ret; 
0x00030b6e: push ebp; mov al, 0x8d; cmp byte ptr [edx], 0x2f; stc; call dword ptr [eax + 0x53]; 
0x001649cb: push ebp; mov al, byte ptr [0x3908418b]; ret 0x2c75; 
0x00054177: push ebp; mov eax, 0x2901c083; fidivr dword ptr [ecx]; ret 0xee7f; 
0x00165e6b: push ebp; mov eax, 0x3908418b; ret 0x4c75; 
0x0016cb07: push ebp; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00064fc0: push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000c9f07: push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0015c4d5: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001131b6: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x000c9da5: push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0012ee43: push ebp; mov esp, 0xa5b4828d; stc; call dword ptr [eax - 0x73]; 
0x0014be78: push ebp; mov word ptr [ebp - 0x652637e], cs; call dword ptr [eax - 0x73]; 
0x00056cc2: push ebp; or al, 0xf6; ret 0xf01; 
0x00056e4c: push ebp; or al, 0xf6; ret 0xf40; 
0x000575c7: push ebp; pop ds; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0014518d: push ebp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0014998a: push ebp; pop edi; stc; call dword ptr [eax - 0x73]; 
0x00135879: push ebp; pop edx; stc; call dword ptr [eax - 0x18]; 
0x0014c423: push ebp; push 0; push edi; push ebx; call edx; 
0x00158371: push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0015760e: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001575cb: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0002255e: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call esi; 
0x00038edf: push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007cb9c: push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069055: push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f6a: push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x0007c5f5: push ebp; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [edi + 0x40]; 
0x00069e59: push ebp; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x000d5e97: push ebp; push ebx; call eax; 
0x0014d96b: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00038bd7: push ebp; push ebx; push esi; call edi; 
0x00038b70: push ebp; push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x00156dee: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00068205: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007b886: push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0007ce72: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00074255: push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0016faff: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0015ea40: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x00161e77: push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161eaf: push ebp; push esi; call dword ptr [eax + 8]; 
0x0007cc93: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00161dfa: push ebp; push esi; call edi; 
0x00039047: push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015f6d4: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x00038bb3: push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038b86: push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x0002d5ac: push ebp; ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0011e886: push ebp; stc; call dword ptr [eax - 0x18]; 
0x00121bd5: push ebp; stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x00151dc7: push ebp; std; jmp dword ptr [esi - 0x70]; 
0x00076b20: push ebp; test al, 0x8d; or byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x001647ff: push ebp; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015cb67: push ebp; xlatb; dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x00087058: push ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x000f91aa: push ebx; adc al, 0x8d; or ch, 0x48; stc; call dword ptr [eax - 0x77]; 
0x00157ba6: push ebx; adc bl, ch; ret; 
0x00079b54: push ebx; adc byte ptr [ecx + 0x53891856], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00099627: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x0016c10e: push ebx; add al, 0x29; ret 0x143b; 
0x0016c336: push ebx; add al, 0x29; ret 0x543b; 
0x0007aa13: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007aebb: push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000e7dd9: push ebx; add al, 0x74; sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00129e4f: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000b4cd1: push ebx; add al, 0x83; ret; 
0x0013deaa: push ebx; add al, 0x89; dec ebx; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x001030a1: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x00075a81: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x0011bb32: push ebx; add al, 0xf6; ret 0x7401; 
0x0003b7c2: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0009c8ed: push ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3910245c], cl; ret; 
0x0006f969: push ebx; add eax, dword ptr [eax - 0x7cfdf2b2]; ret; 
0x000eadce: push ebx; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x000227c1: push ebx; and byte ptr [ebp - 0x720d8b2e], al; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0014b489: push ebx; bnd call dword ptr [ebx + 0x50]; 
0x00139dd3: push ebx; call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x0002b7b5: push ebx; call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x001311f4: push ebx; call 0x57550; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0011a3a5: push ebx; call 0x57580; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00155a89: push ebx; call dword ptr [eax + 0x10]; 
0x0015608b: push ebx; call dword ptr [eax + 0x14]; 
0x0015ba3a: push ebx; call dword ptr [eax + 0x18]; 
0x000720f9: push ebx; call dword ptr [eax + 0x1c]; 
0x00162b1b: push ebx; call dword ptr [eax + 0x20]; 
0x0015bab7: push ebx; call dword ptr [eax + 0x24]; 
0x00075473: push ebx; call dword ptr [eax + 0xc]; 
0x00157a0e: push ebx; call dword ptr [eax + 4]; 
0x00155a79: push ebx; call dword ptr [eax]; 
0x00155baa: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007216b: push ebx; call dword ptr [ebp + 0x1c]; 
0x00072d1c: push ebx; call dword ptr [ebp + 0x24]; 
0x0007fbf9: push ebx; call dword ptr [ebp + 0x2c]; 
0x0016f782: push ebx; call dword ptr [ebp + 0x3c]; 
0x0007ba19: push ebx; call dword ptr [ebp + 0x40]; 
0x0007f94d: push ebx; call dword ptr [ebp + 0xc]; 
0x0007bc0d: push ebx; call dword ptr [ecx + 0x40]; 
0x00170366: push ebx; call dword ptr [edi + 0x24]; 
0x00077d8e: push ebx; call dword ptr [edi + 0x40]; 
0x0007d498: push ebx; call dword ptr [edi + 0x44]; 
0x0007516c: push ebx; call dword ptr [esi + 0x10]; 
0x00156061: push ebx; call dword ptr [esi + 0x14]; 
0x00075996: push ebx; call dword ptr [esi + 0x18]; 
0x0007b4ef: push ebx; call dword ptr [esi + 0x30]; 
0x0007bbaa: push ebx; call dword ptr [esi + 0x3c]; 
0x0007ce74: push ebx; call dword ptr [esi + 0x40]; 
0x0007d2f6: push ebx; call dword ptr [esi + 0x44]; 
0x0007e896: push ebx; call dword ptr [esi + 0xc]; 
0x000d5e98: push ebx; call eax; 
0x0011b226: push ebx; call edx; 
0x0011b1ef: push ebx; call esi; 
0x0015cefe: push ebx; dec esp; push edx; call eax; 
0x0011df9d: push ebx; idiv bh; dec dword ptr [ebp - 0x65eb77d]; call dword ptr [eax - 0x73]; 
0x00028bd2: push ebx; lea eax, [esp + 0x68]; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; call esi; 
0x00026179: push ebx; lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000293c9: push ebx; lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call edi; 
0x00086019: push ebx; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0004a838: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004a5ac: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001604bb: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0012e565: push ebx; mov dword ptr [ebp - 0x38], eax; push 0; mov dword ptr [ebp - 0x44], 0; push 0x1000002; call edx; 
0x0012df5e: push ebx; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000005; call edx; 
0x0012e3b5: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000004; call eax; 
0x0012dfae: push ebx; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0010935f: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0010884f: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005845f: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dc0b4: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114e6f: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011edcf: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001146ff: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000cadcf: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011838f: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001183df: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114d4f: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000377af: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001146af: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012094f: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001209ef: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012099f: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091eff: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00074257: push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0015dc7d: push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012a02a: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013bcf4: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000dcd38: push ebx; mov eax, dword ptr gs:[8]; mov ebx, 0x1200011; lea edi, [eax + 0x68]; mov eax, 0x78; call dword ptr gs:[0x10]; 
0x00123fdd: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001769c9: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00116b4a: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000933de: push ebx; mov ebx, 1; sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x00123989: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0008b302: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00123db4: push ebx; mov ebx, dword ptr [esp + 0x50]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0014b3a5: push ebx; mov ebx, edi; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x00114818: push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00106b37: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00082741: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092575: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011f21b: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000584b6: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001234e9: push ebx; mov edi, esi; mov ecx, dword ptr [esp + 0x14]; mov ebx, 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00107b7a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121874: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121474: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108004: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a544: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a484: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109324: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113184: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea44: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121524: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121224: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a024: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121314: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121344: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9744: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121594: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd264: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e84: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de034: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de064: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e54: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a144: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a114: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce74: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda4: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ab58b: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000dc0f8: push ebx; or al, 0x5b; ret; 
0x00079b5a: push ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00129eef: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000e45f9: push ebx; or al, 0x83; ret; 
0x000dc0f5: push ebx; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x000993c0: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x000dc0f2: push ebx; or byte ptr [ebx + 0x53890c53], cl; or al, 0x5b; ret; 
0x0016f7cc: push ebx; or byte ptr [ecx + 0x39082444], cl; ret 0x9774; 
0x00081400: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x000dc0ef: push ebx; or byte ptr [ecx + 0x538b0853], cl; or al, 0x89; push ebx; or al, 0x5b; ret; 
0x00035281: push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0009409e: push ebx; or dh, dh; ret 0xf0f; 
0x0014a555: push ebx; out dx, al; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x00132a3e: push ebx; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00132bd2: push ebx; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0012e751: push ebx; push 0; push 0x1000001; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0012dda8: push ebx; push 0; push 0x1000003; mov dword ptr [ebp - 0x44], edx; call eax; 
0x0005334a: push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006688c: push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0012d97f: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000b51f3: push ebx; push dword ptr [edi]; call esi; 
0x000654b3: push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00071008: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006cffc: push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000c370d: push ebx; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push edi; call esi; 
0x0002b400: push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x50]; push dword ptr [esp + 0x50]; call esi; 
0x00025aef: push ebx; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x44]; call eax; 
0x0002552c: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0015dc66: push ebx; push eax; call dword ptr [edx + 4]; 
0x0015e2e7: push ebx; push eax; call dword ptr [edx + 8]; 
0x00113ed4: push ebx; push eax; pop ebx; pop esi; pop edi; ret; 
0x000660f8: push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00081b8b: push ebx; push eax; push ecx; call edx; 
0x000c9f06: push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0014d96a: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00068204: push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00076e81: push ebx; push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x0007c4e2: push ebx; push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x0016fd8e: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x00066a7a: push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x00072eda: push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066460: push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x00066213: push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00161e93: push ebx; push edx; push esi; call dword ptr [eax + 0xc]; 
0x00161ecb: push ebx; push edx; push esi; call dword ptr [eax + 8]; 
0x0016271a: push ebx; push esi; call dword ptr [eax + 4]; 
0x000758fd: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00078421: push ebx; push esi; call eax; 
0x00038bd8: push ebx; push esi; call edi; 
0x0006b15b: push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3dc: push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0011d4e6: push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x0014aaa5: push ebx; pushal; stc; call dword ptr [eax - 0x18]; 
0x000eac48: push ebx; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00139293: push ebx; sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x000de859: push ebx; setne al; ret; 
0x0011d49b: push ebx; stc; call dword ptr [eax + 0x57]; 
0x0011d4cd: push ebx; stc; call dword ptr [ecx + 0x51]; 
0x0015d45d: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000994e3: push ebx; sub dh, dh; ret 0x7502; 
0x00070ac4: push ebx; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x001745ea: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000ecbb1: push ebx; xor al, 0x89; je 0xecbda; cmp al, 0x29; ret 0x448b; 
0x00114866: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x0004a5e8: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00082714: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0007aeb8: push ecx; adc al, 0x89; push ebx; add al, 0x31; ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x000829eb: push ecx; adc byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x000f9ae5: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x000e513e: push ecx; add al, 0; add byte ptr [eax - 0x6bf0a305], al; ret 0x5422; 
0x00157a0b: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x001579cb: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x0003b8f9: push ecx; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000a4d23: push ecx; add al, 0x5b; ret; 
0x000f9b15: push ecx; add al, 0x77; push es; setne al; movzx eax, al; ret; 
0x0014e4a1: push ecx; add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x51], 0; add byte ptr [eax], al; call esi; 
0x0014e4a8: push ecx; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0012a975: push ecx; add dword ptr [eax + 0xf], eax; inc ebp; ret 0xc35b; 
0x00086fd7: push ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x47], ebp; stc; call dword ptr [eax - 0x18]; 
0x001138f0: push ecx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0002290a: push ecx; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f9a: push ecx; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00073b73: push ecx; call 0x75530; add esp, 0x1c; ret; 
0x00162df3: push ecx; call dword ptr [eax + 0x20]; 
0x00162e22: push ecx; call dword ptr [eax + 0x24]; 
0x001623b2: push ecx; call dword ptr [eax + 4]; 
0x00162383: push ecx; call dword ptr [eax]; 
0x0010a092: push ecx; call dword ptr [edx + 0x53]; 
0x000817d3: push ecx; call eax; 
0x00081b8d: push ecx; call edx; 
0x00104abb: push ecx; int1; cli; call dword ptr [edi - 1]; 
0x0007b3ab: push ecx; jae 0x7b3ae; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000c9da0: push ecx; lea ebp, [esp + 0x6c]; push ebp; mov ecx, dword ptr [esp + 0x34]; call ecx; 
0x0006fded: push ecx; lea ecx, [esi + 0x28]; push ecx; push 1; push esi; call eax; 
0x000c3c8e: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x00038b71: push ecx; lea esi, [ecx + eax]; push esi; call edi; 
0x00119bbe: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x00156bf6: push ecx; mov dword ptr [eax], 0; pop ebx; ret; 
0x000dd2de: push ecx; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00081592: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000c3c93: push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0010a6d2: push ecx; mov ecx, dword ptr [esi + 0x20]; push dword ptr [ecx + eax]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0012e474: push ecx; or al, 0x56; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x00154f42: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0002f849: push ecx; or bh, bh; call dword ptr [eax - 0x73]; 
0x00163d53: push ecx; or byte ptr [ecx], bh; ret 0x2775; 
0x001252e9: push ecx; or byte ptr [edx + 8], dh; seta al; movzx eax, al; neg eax; ret; 
0x000a4d85: push ecx; pop es; pop ebx; ret; 
0x0015e938: push ecx; push 0xd; push edx; call dword ptr [eax + 0x14]; 
0x0006fdf1: push ecx; push 1; push esi; call eax; 
0x0011b223: push ecx; push 3; push ebx; call edx; 
0x0015e868: push ecx; push 4; push edx; call dword ptr [eax + 0x14]; 
0x00155c62: push ecx; push 4; push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x001561c2: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0015e87b: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00099555: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0007106a: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00076e82: push ecx; push dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x40]; 
0x00081661: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0015a766: push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0016f77d: push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x000938e7: push ecx; push eax; call 0xb3d70; add esp, 0x1c; ret; 
0x0015fedc: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0015caac: push ecx; push eax; call dword ptr [edx + 8]; 
0x0006a03f: push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0014c170: push ecx; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0015a765: push ecx; push ecx; push dword ptr [esp + 0x44]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015f6f5: push ecx; push edi; call dword ptr [eax + 8]; 
0x0006b6f4: push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x00080d7c: push ecx; push edx; call 0x16a600; add esp, 0x1c; ret; 
0x0016b141: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016b1e1: push ecx; push edx; call dword ptr [eax + 0x28]; 
0x00161ffa: push ecx; push edx; call dword ptr [eax]; 
0x00157d4c: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000cdab9: push ecx; push edx; push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x0016277e: push ecx; push esi; call dword ptr [eax]; 
0x0007c4e3: push ecx; push esi; call dword ptr [ebp + 0x40]; 
0x000819ae: push ecx; push esi; call eax; 
0x0016fd8f: push ecx; push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x0004a6b0: push ecx; ret; 
0x0008134c: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0011d35d: push ecx; stc; call dword ptr [eax + 0x57]; 
0x00040492: push ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000b9b54: push ecx; xor cl, bh; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x00043631: push ecx; xor cl, bh; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x000ab1f2: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000e2aec: push edi; adc al, byte ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; call dword ptr [eax - 0x77]; 
0x000ac983: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ab273: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ab373: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00083069: push edi; adc byte ptr [ebp + 0x314174d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000ac960: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000aca70: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000ac9f3: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000ab2b3: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ab2d3: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000ab250: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac9a4: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ab294: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ab038: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x000ab01a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000faa1a: push edi; add byte ptr [eax - 0x73], dl; sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x000ac6ea: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x000ab058: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000ac758: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x00162523: push edi; add esp, 0x18; pop ebx; ret; 
0x00170368: push edi; and al, 0x21; ret 0xc483; 
0x0013dfe5: push edi; and esi, ebp; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001564a9: push edi; call 0x109210; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000d8d98: push edi; call 0x16b3c0; add esp, 0x10; mov eax, edi; call eax; 
0x000236ca: push edi; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x00090b90: push edi; call 0x37eb0; mov eax, 0xaf; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00157612: push edi; call dword ptr [eax + 0x10]; 
0x00160fbc: push edi; call dword ptr [eax + 0x14]; 
0x000e00b8: push edi; call dword ptr [eax + 0x18]; 
0x00068206: push edi; call dword ptr [eax + 0x1c]; 
0x001575cf: push edi; call dword ptr [eax + 8]; 
0x0015f6d8: push edi; call dword ptr [eax]; 
0x0007b708: push edi; call dword ptr [ebp + 0x1c]; 
0x00067dc6: push edi; call dword ptr [ebx + 0x1c]; 
0x00076638: push edi; call dword ptr [ebx + 0x38]; 
0x00156d10: push edi; call dword ptr [ecx + 0x18]; 
0x00156e64: push edi; call dword ptr [edx + 0x18]; 
0x00073f2b: push edi; call dword ptr [edx + 0x1c]; 
0x0007cba1: push edi; call dword ptr [esi + 0x20]; 
0x0013e183: push edi; call eax; 
0x000b59c6: push edi; call esi; 
0x000ab3b1: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x00146ec5: push edi; cmp dword ptr [eax], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0016a545: push edi; fdiv st(7), st(0); jmp dword ptr [esi - 0x70]; 
0x000a1545: push edi; fdivp st(4); jmp dword ptr [esi - 0x70]; 
0x00103381: push edi; fmul dword ptr [ebx - 0x13341]; jmp dword ptr [ebp - 0x77]; 
0x0009259d: push edi; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; pop esi; ret; 
0x000377d5: push edi; fsub dword ptr [ebp - 0x77]; add bh, byte ptr [eax - 1]; pop ebx; ret; 
0x0015ad78: push edi; in eax, dx; call dword ptr [eax - 0x73]; 
0x0007a057: push edi; insd dword ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x70]; 
0x000aca50: push edi; jge 0x5e69e99e; pop ebx; ret; 
0x00078dba: push edi; jle 0x78db7; jmp dword ptr [esi - 0x70]; 
0x001255c1: push edi; loope 0x1255d4; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc110; 
0x000ab330: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0015716f: push edi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x001567cb: push edi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0015c373: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0012dfac: push edi; or al, 0x53; mov dword ptr [ebp - 0x44], edx; push 0; push 0x1000007; call eax; 
0x0006ad3f: push edi; or al, 0x84; ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], al; add dh, dh; ret 0xf40; 
0x0006ad19: push edi; or al, 0xf6; ret 0xf08; 
0x000ac78c: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000ac7ae: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000ac7ec: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0007662f: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000ab07c: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000aca10: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000ab0bc: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0002feaa: push edi; popal; pop ds; add byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp + 3]; 
0x0011b1ec: push edi; push 0; push ebx; call esi; 
0x0012b0d9: push edi; push 0x2000006; call dword ptr [esi + 0x14]; 
0x0011b200: push edi; push 1; push ebx; call esi; 
0x0011b213: push edi; push 2; push ebx; call esi; 
0x000ab310: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x00071339: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00066a7b: push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x0006b6f5: push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0012e60d: push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x00156873: push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000249d9: push edi; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00072166: push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x001553f0: push edi; push eax; call dword ptr [ecx + 8]; 
0x0015a718: push edi; push eax; call dword ptr [edx + 8]; 
0x000816f3: push edi; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001131b5: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0015608a: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000741e5: push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x0007bba9: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007ce73: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x000d5fbc: push edi; push ebx; call eax; 
0x0014c426: push edi; push ebx; call edx; 
0x00074256: push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x0012a029: push edi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00053349: push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x00081590: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00072edb: push edi; push esi; call dword ptr [eax + 0x2c]; 
0x0016fb00: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0015ea41: push edi; push esi; push eax; call dword ptr [edx]; 
0x0006e113: push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x00072d1a: push edi; push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007ba17: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00036c2b: push edi; ret 0; 
0x000d9cab: push edi; ret; 
0x001542aa: push edi; sbb eax, 0xec83000d; adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0012bdc4: push edi; stc; call dword ptr [eax + 0x57]; 
0x0011c129: push edi; stc; call dword ptr [eax + 0x6a]; 
0x0012bc8b: push edi; stc; call dword ptr [eax - 0x18]; 
0x0012c599: push edi; stc; call dword ptr [eax - 0x75]; 
0x0012abf8: push edi; stc; call dword ptr [eax - 1]; 
0x001374cf: push edi; stc; call dword ptr [ebp - 0x77]; 
0x0012e6d0: push edi; stc; call dword ptr [ebx + 0x50]; 
0x0012c9d7: push edi; stc; call dword ptr [edx + 0x50]; 
0x0002f7be: push edi; stc; call dword ptr [esi - 1]; 
0x00138a31: push edi; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x000f66c0: push edi; std; clc; call dword ptr [ecx + 0x6a]; 
0x0015b829: push edi; std; jmp dword ptr [esi - 0x70]; 
0x000f6c85: push edi; xor edi, edx; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0015e7d4: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x00192f5c: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x0018e8b6: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0014f3fa: push edx; adc edx, esi; jmp dword ptr [ebp - 0x77]; 
0x000a4c0a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00080ee2: push edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0003b96d: push edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018e8cb: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x00080d7d: push edx; call 0x16a600; add esp, 0x1c; ret; 
0x000871cb: push edx; call 0x82b50; add esp, 0x10; xor eax, eax; add esp, 0xc; ret; 
0x0008d5ef: push edx; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x00155d51: push edx; call dword ptr [eax + 0x10]; 
0x0015e86b: push edx; call dword ptr [eax + 0x14]; 
0x0016b142: push edx; call dword ptr [eax + 0x24]; 
0x0016b1e2: push edx; call dword ptr [eax + 0x28]; 
0x001604c0: push edx; call dword ptr [eax + 0xc]; 
0x00161ffb: push edx; call dword ptr [eax]; 
0x0012cbd2: push edx; call dword ptr [ebx + 0x14]; 
0x00072929: push edx; call dword ptr [ebx + 0x1c]; 
0x0015e9ca: push edx; call dword ptr [ecx + 0x10]; 
0x00154f40: push edx; call dword ptr [ecx + 0xc]; 
0x00154f40: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x0015c05f: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001561b9: push edx; call dword ptr [esi - 0x73]; 
0x00139670: push edx; call eax; 
0x000fd858: push edx; call ebx; 
0x0003a5ca: push edx; call edi; 
0x0007af25: push edx; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0018ec5b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018ea1b: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018eceb: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018eabb: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018ed8b: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0015ae68: push edx; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000213c5: push edx; in eax, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000b59bc: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x0012ea8e: push edx; lea edx, [ebx - 0xf7690]; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000781fd: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0006f8d4: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x000782dc: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00155a6f: push edx; lea edx, [esi - 0xd0240]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00155ba0: push edx; lea edx, [esi - 0xd0240]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x0018ec79: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x00157d4d: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00155c65: push edx; mov dword ptr [esp + 0x2c], edx; call dword ptr [eax]; 
0x0007efb3: push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x0002160f: push edx; mov dword ptr [esp + 0xc], edx; push esi; push dword ptr [esp + 0x40]; call eax; 
0x000de7ad: push edx; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00078201: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0015e2dc: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0012d8cb: push edx; or al, 0x89; push esi; sbb al, 1; ret 0x448b; 
0x000fa2e8: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x00093c0c: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00122836: push edx; or byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001463d3: push edx; or byte ptr [esi - 0x77], ah; pop eax; inc cl; ljmp 0xc166:0xfe2c117; ret 0x6608; 
0x0014a653: push edx; out dx, al; dec dword ptr [ebp - 0x653137f]; call dword ptr [eax - 0x73]; 
0x0007a6a0: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0007a570: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0013dfb1: push edx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00079d2a: push edx; pop ebx; sti; dec dword ptr [ebp - 0x6820f7d]; call dword ptr [eax - 0x73]; 
0x00155a76: push edx; push 1; push ebx; call dword ptr [eax]; 
0x0006f8d8: push edx; push 1; push esi; call eax; 
0x00155ba7: push edx; push 2; push ebx; call dword ptr [eax]; 
0x0015ef81: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0002c23b: push edx; push dword ptr [eax + 0x1018]; call 0x11bcf0; add esp, 0x1c; ret; 
0x00066461: push edx; push dword ptr [ebp - 0x87c]; call dword ptr [eax + 0x1c]; 
0x00066214: push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006c22a: push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x0010a6d9: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00077179: push edx; push dword ptr [esp + 0x18]; call ecx; 
0x00119a89: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x1193c0; add esp, 0x1c; ret; 
0x0012f6e9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x67c80; add esp, 0x1c; ret; 
0x001306a9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x6ced0; add esp, 0x1c; ret; 
0x00130d09: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79520; add esp, 0x1c; ret; 
0x00130d69: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x796f0; add esp, 0x1c; ret; 
0x00130dc9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x79bb0; add esp, 0x1c; ret; 
0x0012f57c: push edx; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x001305ca: push edx; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x0012f60a: push edx; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x00106e39: push edx; push eax; call 0x107160; add esp, 0x10; add esp, 0xc; ret; 
0x0002469d: push edx; push eax; call 0x8b370; add esp, 0x1c; ret; 
0x000cdaba: push edx; push eax; call 0xc9fb0; add esp, 0x1c; ret; 
0x000c9c54: push edx; push eax; call 0xcbfb0; add esp, 0x1c; ret; 
0x000df7bf: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015edbc: push edx; push eax; call edi; 
0x0016f7ec: push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x0007bc0b: push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x00077d8c: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0007dd40: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00170868: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00161e76: push edx; push ebp; push esi; call dword ptr [eax + 0xc]; 
0x00161eae: push edx; push ebp; push esi; call dword ptr [eax + 8]; 
0x001560ad: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00162b1a: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015bacc: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00157a0d: push edx; push ebx; call dword ptr [eax + 4]; 
0x001579cd: push edx; push ebx; call dword ptr [eax]; 
0x000d5ff9: push edx; push ebx; call eax; 
0x00078420: push edx; push ebx; push esi; call eax; 
0x00162df2: push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00162e21: push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623b1: push edx; push ecx; call dword ptr [eax + 4]; 
0x00162382: push edx; push ecx; call dword ptr [eax]; 
0x000818c0: push edx; push ecx; call eax; 
0x00081591: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000938e6: push edx; push ecx; push eax; call 0xb3d70; add esp, 0x1c; ret; 
0x000819ad: push edx; push ecx; push esi; call eax; 
0x00076637: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0013e182: push edx; push edi; call eax; 
0x0007c3cb: push edx; push esi; call dword ptr [eax + 0x48]; 
0x00161e94: push edx; push esi; call dword ptr [eax + 0xc]; 
0x0015a4e9: push edx; push esi; call dword ptr [eax + 4]; 
0x00161ecc: push edx; push esi; call dword ptr [eax + 8]; 
0x0013e24e: push edx; push esi; call eax; 
0x0007c729: push edx; push esi; call ecx; 
0x0006f299: push edx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x0006bb94: push edx; push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x0014eefa: push edx; push ss; bnd jmp dword ptr [ebp - 0x77]; 
0x0018f0f8: push edx; ret 0xc2bb; 
0x0018f058: push edx; ret; 
0x0012ea95: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0007b889: push edx; sbb al, 0x89; ret 0x1b8; 
0x000f0b0b: push edx; sbb al, 0xf6; ret 0xf08; 
0x00090f78: push edx; sbb byte ptr [ebp - 0x762d8b2e], al; ret; 
0x0018f11b: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018f1cb: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018f07b: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0011d15c: push edx; stc; call dword ptr [eax + 0x57]; 
0x0011d417: push edx; stc; call dword ptr [ecx + 0x51]; 
0x0011d431: push edx; stc; call dword ptr [edx + 0x52]; 
0x0011e1f6: push edx; stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0007ee3d: push edx; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00130ec5: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0018e8e0: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0012591b: push es; adc byte ptr [eax], al; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x000f1915: push es; adc byte ptr [edx + ebx*8 - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x0013b8e3: push es; add byte ptr [eax], al; add bl, ch; fucompi st(0); xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x0013bcfc: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x00168025: push es; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0010d851: push es; add byte ptr [eax], al; add byte ptr [ecx - 0x277c9912], cl; jmp dword ptr [esi - 0x77]; 
0x000eaf6d: push es; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000294b5: push es; add byte ptr [eax], al; add cl, ch; ret 0xfffe; 
0x00026754: push es; add byte ptr [eax], al; add cl, ch; ret; 
0x00091f53: push es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c60a: push es; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0008ce7a: push es; add byte ptr [eax], al; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0018ecb2: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000a47ff: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000aadca: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c3de4: push es; add byte ptr [ebp - 0x6675b7b], cl; call dword ptr [eax - 0x73]; 
0x00143ac1: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000c7b20: push es; add byte ptr [ebx - 0x363f6b], cl; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000a102a: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000a10fa: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00193fdb: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00075341: push es; add dh, byte ptr [ebp + 0x63]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00081ee9: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010fb0f: push es; add esp, 0x14; pop esi; pop edi; ret; 
0x000385d0: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x00117f81: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x001635d5: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x00122b06: push es; add esp, 0x74; pop ebx; pop esi; ret; 
0x0007edc5: push es; add esp, 4; pop ebx; pop esi; ret; 
0x00149559: push es; add esp, 8; pop ebx; ret; 
0x001529b9: push es; call 0x14f970; add esp, 0x1c; ret; 
0x001529d8: push es; call 0x14fa30; add esp, 0x1c; ret; 
0x00049bc6: push es; cmp byte ptr [eax - 1], 0x2f; jne 0x49bc0; add esp, 8; pop ebx; ret; 
0x0004cbbf: push es; cmp ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00034bd0: push es; idiv edi; dec dword ptr [ebx - 0x7cd3db8c]; ret 0xc702; 
0x0018f396: push es; inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x00192e82: push es; jb 0x192f00; lea eax, [edi + 5]; pop edi; ret; 
0x00193ec2: push es; jb 0x193f40; lea eax, [eax + 5]; pop edi; ret; 
0x00124896: push es; jbe 0x124860; mov ebx, dword ptr [ebp - 0x4f8]; mov ecx, dword ptr [ebp - 0x4fc]; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0006b077: push es; jg 0x6b0c6; in al, 0xff; jmp eax; 
0x00193552: push es; jl 0x1935d0; lea eax, [ecx + 6]; ret; 
0x000a4ba3: push es; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fa3: push es; jne 0xa4e61; pop ebx; ret; 
0x000a9424: push es; jne 0xa92c1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000aabb1: push es; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000ac224: push es; jne 0xacbe0; pop edi; pop esi; pop ebx; ret; 
0x00044aa3: push es; lcall 0x1559, 0xc7810012; push ds; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x000b2f89: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000ac831: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000b2cb9: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000a71e1: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a7341: push es; lea eax, [edx + 0xd]; ret; 
0x000a4ba0: push es; lea ecx, [edx + 6]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fa0: push es; lea ecx, [edx + 6]; jne 0xa4e61; pop ebx; ret; 
0x000aed73: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00186048: push es; mov byte ptr [edi], al; pop esi; pop edi; pop ebx; ret; 
0x00044276: push es; mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00075a22: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0003aaea: push es; mov dword ptr [edx], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0016f928: push es; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0013c28f: push es; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x000b22a4: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee21: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0002f6b9: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000b1644: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000a2df1: push es; mov eax, edi; pop edi; ret; 
0x000a2f51: push es; mov eax, edx; ret; 
0x000b5059: push es; mov eax, esi; pop ebx; pop esi; ret; 
0x0018b5b7: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x86b80]; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x000aee63: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b22d6: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aee53: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab153: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b21d6: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed63: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000aee18: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab063: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000abaac: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000abc0c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b163f: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000aa44c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000aa5ac: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000a71d8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000a7338: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000a2de8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000a2f48: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x00188f0c: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x001876f3: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00066019: push es; out 0xfb, eax; jecxz 0x6601d; jmp eax; 
0x0011e494: push es; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001037d9: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a1100: push es; pop ebx; pop esi; ret; 
0x0003b617: push es; pop ebx; ret; 
0x000ab121: push es; pop edi; pop esi; pop ebx; ret; 
0x000a714c: push es; pop edi; ret; 
0x0015e87d: push es; push eax; call dword ptr [edx + 0x14]; 
0x000789b1: push es; ret; 
0x000f9b18: push es; setne al; movzx eax, al; ret; 
0x00188f10: push es; sub eax, ecx; pop ebp; ret; 
0x001876f7: push es; sub eax, ecx; ret; 
0x0007f638: push es; xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011df37: push esi; adc byte ptr [ebx + 0x468801e0], al; or byte ptr [eax - 0x7c72ebba], cl; ret; 
0x0002c132: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0011d719: push esi; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000974d6: push esi; adc byte ptr [ecx], bh; ret 0x3a73; 
0x000ab014: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e69b275; pop ebx; ret; 
0x000782de: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000ab033: push esi; add al, 0x89; js 0x5e69b493; pop ebx; ret; 
0x000ab044: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0011d538: push esi; add al, 0x89; ret 0xe8c1; 
0x0011d8ff: push esi; add al, 0x8d; xchg ebx, eax; ret 0xf94d; 
0x000fb73e: push esi; add al, 0xf7; ret 0xfffd; 
0x00037516: push esi; add al, byte ptr [eax]; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x0009a379: push esi; add dword ptr [ecx + eax - 0x72fc0000], 0xe7b61092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b099: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf50f3092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f289: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5153092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009afb9: push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5155092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000b21b6: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed53: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab053: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x00109df4: push esi; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0007dd39: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0006ff14: push esi; and byte ptr [ebx - 0x74c3dbac], cl; adc bh, byte ptr [ecx]; ret 0x420f; 
0x001311f6: push esi; arpl dx, si; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x0015501a: push esi; call 0x156a30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0019cbb7: push esi; call 0x16b3c0; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00139c2f: push esi; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00022797: push esi; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x0002de3d: push esi; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012dda6: push esi; call 0x681347ff; add eax, dword ptr [eax]; add byte ptr [ecx], al; mov dword ptr [ebp - 0x44], edx; call eax; 
0x001552d1: push esi; call dword ptr [eax + 0x10]; 
0x001552ef: push esi; call dword ptr [eax + 0x14]; 
0x00073e5e: push esi; call dword ptr [eax + 0x1c]; 
0x000f7634: push esi; call dword ptr [eax + 0x20]; 
0x00072edc: push esi; call dword ptr [eax + 0x2c]; 
0x0007a0f0: push esi; call dword ptr [eax + 0x30]; 
0x0007534e: push esi; call dword ptr [eax + 0x34]; 
0x0007c3cc: push esi; call dword ptr [eax + 0x48]; 
0x0015539e: push esi; call dword ptr [eax + 0xc]; 
0x0015528a: push esi; call dword ptr [eax + 4]; 
0x00161eb0: push esi; call dword ptr [eax + 8]; 
0x0016277f: push esi; call dword ptr [eax]; 
0x0007f1e6: push esi; call dword ptr [ebp + 0x30]; 
0x0007c4e4: push esi; call dword ptr [ebp + 0x40]; 
0x00170552: push esi; call dword ptr [ebp + 0x44]; 
0x0007d0cc: push esi; call dword ptr [ebp + 0xc]; 
0x0007980f: push esi; call dword ptr [ebp + 8]; 
0x0007133d: push esi; call dword ptr [ebx + 0x1c]; 
0x00073069: push esi; call dword ptr [ebx + 0x2c]; 
0x00070ac8: push esi; call dword ptr [ebx + 0x30]; 
0x00073121: push esi; call dword ptr [ebx + 0x34]; 
0x0007cc94: push esi; call dword ptr [ebx + 0x38]; 
0x0007c7dc: push esi; call dword ptr [ebx + 0x40]; 
0x00070441: push esi; call dword ptr [ebx + 0x48]; 
0x00155fa0: push esi; call dword ptr [ebx + 0xc]; 
0x0007061a: push esi; call dword ptr [ebx + 8]; 
0x000758fe: push esi; call dword ptr [edi + 0x18]; 
0x0007ee41: push esi; call dword ptr [edi + 0x34]; 
0x0007dd42: push esi; call dword ptr [edi + 0x38]; 
0x00077004: push esi; call dword ptr [edi + 0x40]; 
0x00170697: push esi; call dword ptr [edi + 0x44]; 
0x0007bd23: push esi; call dword ptr [edi + 0x48]; 
0x0007c6d4: push esi; call dword ptr [edx + 0x40]; 
0x0002de02: push esi; call eax; 
0x000b6016: push esi; call ebx; 
0x0007c72a: push esi; call ecx; 
0x00038b75: push esi; call edi; 
0x00121079: push esi; call edx; 
0x00121079: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0017104b: push esi; clc; jmp dword ptr [esi - 0x70]; 
0x0016b991: push esi; cld; jmp dword ptr [esi - 0x70]; 
0x0007aa85: push esi; cli; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0005d1fe: push esi; cmp byte ptr [ebx + 0x3fcba], al; add byte ptr [edi + ecx - 0x7b], ch; ret; 
0x000f11d6: push esi; cmp edi, 0xf01a8ff; test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x0009a8a9: push esi; dec dword ptr [ebx + 0x3904244c]; ret; 
0x000e9c8b: push esi; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0009b222: push esi; idiv bh; cmovne eax, edx; ret; 
0x00191776: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00191707: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0014aa7f: push esi; in eax, dx; jmp dword ptr [ebp - 0x77]; 
0x0009a9e9: push esi; inc dword ptr [ecx]; fnstcw word ptr [ecx]; ret 0x3376; 
0x0014cd54: push esi; inc ebx; stc; call dword ptr [eax + 0x52]; 
0x00099f42: push esi; inc ecx; jge 0x99f49; lea edx, [edx - 0x179290]; cmovne eax, edx; ret; 
0x0009a042: push esi; inc ecx; jge 0x9a049; lea edx, [edx - 0x1848c0]; cmovne eax, edx; ret; 
0x0009a3f2: push esi; inc ecx; jge 0x9a3f9; lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x0009a482: push esi; inc ecx; jge 0x9a489; lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x0009b142: push esi; inc ecx; jge 0x9b149; lea edx, [edx - 0x1804f0]; cmovne eax, edx; ret; 
0x0009b192: push esi; inc ecx; jge 0x9b199; lea edx, [edx - 0x17ec80]; cmovne eax, edx; ret; 
0x000b4a4f: push esi; inc ecx; jge 0xb4a56; cmovne eax, edx; ret; 
0x0009a07f: push esi; inc ecx; jle 0x9a094; cmovne eax, edx; ret; 
0x0009a4ff: push esi; inc ecx; jle 0x9a514; cmovne eax, edx; ret; 
0x0009a62f: push esi; inc ecx; jle 0x9a644; cmovne eax, edx; ret; 
0x001637b6: push esi; int1; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00169dc6: push esi; jb 0x169dc5; jmp dword ptr [esi - 0x70]; 
0x000b528d: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0012e046: push esi; mov dword ptr [ebp - 0x44], eax; push 0; push 0x1000006; call edx; 
0x0012def8: push esi; mov dword ptr [ebp - 0x44], eax; push dword ptr [ebp - 0xbc]; push 0; call edx; 
0x0012e609: push esi; mov dword ptr [ebp - 0x44], eax; push edi; push dword ptr [ebp - 0xc0]; call edx; 
0x0012e476: push esi; mov dword ptr [ebp - 0x44], edx; push edi; push ebx; call eax; 
0x0016fd90: push esi; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x40]; 
0x0015c193: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0006f29a: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00069e5b: push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00039048: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015a76b: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0015a51c: push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x001564fb: push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0012d95c: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x12d970; add esp, 8; pop ebx; ret; 
0x001102a9: push esi; mov ebx, dword ptr [esp + 0x50]; mov esi, dword ptr [esp + 0x5c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0014058c: push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x00121052: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x00123fda: push esi; mov esi, edx; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000cb292: push esi; or al, 0x29; ret 0x428d; 
0x0003a978: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x0012b841: push esi; or al, 0xf6; ret 0x7504; 
0x000aac56: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f0a33: push esi; or byte ptr [ebp + 0x390474d2], al; ret 0x2b75; 
0x000e9637: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0007cc13: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000ac286: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000aefe7: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00088926: push esi; outsd dx, dword ptr [esi]; cli; dec dword ptr [ebp - 0x693bf7f]; call dword ptr [eax - 0x73]; 
0x00058726: push esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00139215: push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0015f6d5: push esi; push 3; push edi; call dword ptr [eax]; 
0x0006b15c: push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006ba22: push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], ecx; call dword ptr [ebx + 0x1c]; 
0x0006bb95: push esi; push dword ptr [ebp - 0x8a0]; mov dword ptr [ebp - 0x88c], edx; call dword ptr [ebx + 0x1c]; 
0x00099466: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00158251: push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00154b46: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00038bb4: push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00081ac5: push esi; push dword ptr [esp + 0x20]; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007b703: push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dc1: push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00038b87: push esi; push dword ptr [esp + 0x30]; call edi; 
0x00073f26: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x00021677: push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x00021614: push esi; push dword ptr [esp + 0x40]; call eax; 
0x001552a2: push esi; push eax; call dword ptr [edx + 4]; 
0x0015ea42: push esi; push eax; call dword ptr [edx]; 
0x00157b12: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00064fbe: push esi; push eax; push ebp; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x0006e114: push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0006d3dd: push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0007b885: push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x0015bab6: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00072d1b: push esi; push ebx; call dword ptr [ebp + 0x24]; 
0x0007ba18: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00114817: push esi; push ebx; mov ebx, edx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0011f21a: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001561c1: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0006a03e: push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00156872: push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000816f2: push esi; push edi; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008158f: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012cbd1: push esi; push edx; call dword ptr [ebx + 0x14]; 
0x0006c229: push esi; push edx; push dword ptr [ebp - 0x8a0]; call dword ptr [ebx + 0x1c]; 
0x00156871: push esi; push esi; push edi; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x00193dd5: push esi; ret 0xf02; 
0x0005232c: push esi; ret 0xf40; 
0x0016be2f: push esi; ret 0xf60; 
0x00176bb6: push esi; ret 0xfffb; 
0x000613f5: push esi; ret; 
0x0012e990: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012d8ce: push esi; sbb al, 1; ret 0x448b; 
0x000f555f: push esi; sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00079b57: push esi; sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x001273b0: push esi; stc; call dword ptr [eax + 0x53]; 
0x00124a78: push esi; stc; call dword ptr [eax + 0x57]; 
0x0011c466: push esi; stc; call dword ptr [eax + 0x6a]; 
0x00127728: push esi; stc; call dword ptr [eax - 0x18]; 
0x0012789e: push esi; stc; call dword ptr [eax - 0x73]; 
0x00129bbb: push esi; stc; call dword ptr [eax - 1]; 
0x0012a373: push esi; stc; call dword ptr [ebp - 1]; 
0x00129b6e: push esi; stc; call dword ptr [edx + 0x50]; 
0x00157d34: push esi; sub al, 0x89; ret; 
0x00157d64: push esi; sub al, 1; ret 0x5689; 
0x000781ff: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00191736: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00079809: push esi; sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x00157d69: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0008b2ff: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008f042: push esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x196fff7d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0011416b: push esp; add byte ptr [eax], al; mov eax, edi; call dword ptr gs:[0x10]; 
0x0011443a: push esp; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011446b: push esp; add byte ptr [eax], al; mov edx, 1; mov edi, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x001143fe: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x00040b18: push esp; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001551d1: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00122dfa: push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00122db4: push esp; and al, 0x10; mov dword ptr [esp + 0x18], eax; mov eax, 0x1a1; call dword ptr gs:[0x10]; 
0x00122d48: push esp; and al, 0x10; mov eax, 0x151; call dword ptr gs:[0x10]; 
0x00080d9b: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00080e97: push esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00162e1b: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 0x24]; 
0x001623ab: push esp; and al, 0x10; mov eax, dword ptr [ecx + 4]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0008cbbe: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00107b7c: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121876: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121476: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x00108006: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0010a546: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0010a486: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00109326: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00113186: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010a4b6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x55; call dword ptr gs:[0x10]; 
0x00114da6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0011ea46: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x00121526: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00121226: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0011a026: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x00121316: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x00121346: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x000f9746: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00121596: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000dd266: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x00109eb6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00109e86: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000de036: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000de066: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00109e56: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0011a146: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0011a116: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0011ce76: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0011ced6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x0011cda6: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x001570fc: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x0008ef31: push esp; and al, 0x10; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00162b2d: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x0015bac9: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621ff: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016219c: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x00162def: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 0x20]; 
0x00162497: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0016237f: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013e17f: push esp; and al, 0x10; push edx; push edi; call eax; 
0x0013e24b: push esp; and al, 0x10; push edx; push esi; call eax; 
0x000cb22e: push esp; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x0003048c: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x000872fe: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001745ef: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009257b: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010a4eb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012163b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100fb: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce4b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011ceab: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd7b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0011012b: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213db: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011486e: push esp; and al, 0x14; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00157d4f: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000df7bc: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001560aa: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x001234f6: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0011fdb0: push esp; and al, 0x18; cmove esi, ebx; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x0011f9df: push esp; and al, 0x18; cmp esi, -1; je 0x11fa00; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000f6a5c: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00092bc9: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001078d6: push esp; and al, 0x18; mov eax, 0x10c; call dword ptr gs:[0x10]; 
0x00107a36: push esp; and al, 0x18; mov eax, 0x10d; call dword ptr gs:[0x10]; 
0x00107843: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000f9a21: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000584bc: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011a180: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00109ef0: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a420: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121760: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121560: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121440: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121600: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb0: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf40: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce10: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x001768c4: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00123994: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011479d: push esp; and al, 0x18; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001637fd: push esp; and al, 0x18; test edx, edx; jne 0x163810; add esp, 0xc; ret; 
0x0016384d: push esp; and al, 0x18; test edx, edx; jne 0x163860; add esp, 0xc; ret; 
0x00120afe: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000cd8ad: push esp; and al, 0x1c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00155ca7: push esp; and al, 0x1c; mov eax, dword ptr [edx + 4]; mov dword ptr [esp], edx; call dword ptr [eax + 0x10]; 
0x001037bd: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00130c5f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130ccf: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d80: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0003aaa6: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd6: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x0008163f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817a7: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x00085978: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008b628: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba88: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf84: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f3cd: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f659: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x001211d3: push esp; and al, 0x1c; test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0014058e: push esp; and al, 0x20; call edx; 
0x0016202d: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00119cd5: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0015edb9: push esp; and al, 0x20; push edx; push eax; call edi; 
0x0016abfa: push esp; and al, 0x24; call edx; 
0x000f9844: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003b95d: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x0011f8a8: push esp; and al, 0x28; mov eax, 0x156; call dword ptr gs:[0x10]; 
0x0003b988: push esp; and al, 0x28; mov eax, 0x163; call dword ptr gs:[0x10]; 
0x0011a0a8: push esp; and al, 0x28; mov eax, 0x90; call dword ptr gs:[0x10]; 
0x00115018: push esp; and al, 0x28; mov eax, 0x91; call dword ptr gs:[0x10]; 
0x001150d8: push esp; and al, 0x28; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0010f738: push esp; and al, 0x28; mov eax, 0xa8; call dword ptr gs:[0x10]; 
0x001085c8: push esp; and al, 0x28; mov eax, 3; call dword ptr gs:[0x10]; 
0x00108688: push esp; and al, 0x28; mov eax, 4; call dword ptr gs:[0x10]; 
0x0015ff46: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0007c3c8: push esp; and al, 0x28; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00155c67: push esp; and al, 0x2c; call dword ptr [eax]; 
0x00092d30: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00107399: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x00117158: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x00176942: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000cd721: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011fb14: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0015fed6: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000b59c2: push esp; and al, 0x34; push eax; push edi; call esi; 
0x001020e7: push esp; and al, 0x38; call dword ptr gs:[0x10]; 
0x00123f6c: push esp; and al, 0x38; lea esi, [esp + 8]; mov edi, dword ptr [esp + 0x34]; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001151ac: push esp; and al, 0x38; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011535c: push esp; and al, 0x38; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00102112: push esp; and al, 0x38; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021e2: push esp; and al, 0x38; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00107777: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000dc58f: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000dc5c0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov dword ptr [esp + 8], eax; mov eax, 0x11c; call dword ptr gs:[0x10]; 
0x0011f530: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x100; call dword ptr gs:[0x10]; 
0x0011f600: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13b; call dword ptr gs:[0x10]; 
0x0011f6d0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x13c; call dword ptr gs:[0x10]; 
0x001230e0: push esp; and al, 0x38; mov esi, dword ptr [esp + 0x3c]; mov eax, 0x159; call dword ptr gs:[0x10]; 
0x001604bd: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0015fee5: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x0007efb5: push esp; and al, 0x40; call dword ptr [esi + 0xc]; 
0x000da7f7: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00092916: push esp; and al, 0x48; mov eax, 0x117; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092676: push esp; and al, 0x48; mov eax, 0x118; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000928a2: push esp; and al, 0x48; mov eax, 0x1a2; mov ecx, ebp; mov esi, dword ptr [esp + 0x4c]; call dword ptr gs:[0x10]; 
0x00092606: push esp; and al, 0x48; mov eax, 0x1a3; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000926ba: push esp; and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x118; call dword ptr gs:[0x10]; 
0x0009270a: push esp; and al, 0x48; mov ecx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x1a3; call dword ptr gs:[0x10]; 
0x00123406: push esp; and al, 0x48; mov esi, dword ptr [esp + 0x50]; mov dword ptr [esp + 0x18], ebx; mov ebx, 0xc; call dword ptr gs:[0x10]; 
0x0011fc15: push esp; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001148c1: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x001232cd: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00068633: push esp; and al, 0x70; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4]; add ecx, ebp; jmp ecx; 
0x001633d9: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00071080: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x001147a3: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000361a6: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00162b68: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621d8: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016e030: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000d5e01: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0011c919: push esp; and al, 0xc; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00035c87: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0011fdb7: push esp; and al, 0xc; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x00087e69: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00087ea4: push esp; and al, 0xc; mov ecx, esi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000684fc: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x737e0]; add ecx, ebp; jmp ecx; 
0x000687fc: push esp; and al, 0xc; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [edx + eax*4 - 0x73860]; add ecx, ebp; jmp ecx; 
0x00162b17: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00162b6c: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001621dc: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00162187: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000d5ff6: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x00162537: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00021611: push esp; and al, 0xc; push esi; push dword ptr [esp + 0x40]; call eax; 
0x0010357b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x001143d2: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115fef: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x001171c9: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x0011ae73: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00122bc3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x00142495: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e1: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x00144228: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x0015eb0e: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015f02a: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x00170bb3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x0003b4b8: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50b: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b558: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5ab: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x00058392: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x000c9b18: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000d356c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bfc: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x00161f80: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x00081cde: push esp; and al, 4; jmp dword ptr [eax]; 
0x000710c3: push esp; and al, 4; jmp eax; 
0x0008cb7e: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008402e: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004c5dd: push esp; and al, 4; mov dword ptr [esp], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00113905: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0002fe39: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe59: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002f66f: push esp; and al, 4; mov eax, dword ptr [eax - 0x68]; mov eax, dword ptr gs:[eax]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00162ff5: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x000362b0: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003a8b5: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00081d9f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dbf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081ddf: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081dff: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x0008897f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008895f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0009361f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935ff: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000936af: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x000935af: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00087aef: push esp; and al, 4; ret; 
0x00081bd5: push esp; and al, 4; setae al; ret; 
0x0015535c: push esp; and al, 4; sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x000866d9: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x0016e059: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x001638c1: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00083ac9: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e9: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00083cd5: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x001142cf: push esp; and al, 8; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00080039: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e009: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de79: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00035ff8: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00087ddb: push esp; and al, 8; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010dcc9: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x0010f569: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00083cb9: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00070fc4: push esp; and al, 8; pop ebx; jmp eax; 
0x00162d00: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x20]; jmp eax; 
0x00162d18: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 0x24]; jmp eax; 
0x00157978: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax + 4]; jmp eax; 
0x00157960: push esp; and al, 8; pop ebx; mov eax, dword ptr [eax]; jmp eax; 
0x00103a3c: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00088a63: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d91b: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0006a38b: push esp; cld; jmp dword ptr [esi - 0x70]; 
0x000dc74a: push esp; cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001194f3: push esp; dec ebx; stc; call dword ptr [eax - 0x75]; 
0x0011d284: push esp; dec edi; stc; call dword ptr [eax + 0x57]; 
0x0016b6af: push esp; hlt; call dword ptr [eax - 0x73]; 
0x00066a76: push esp; idiv edi; call dword ptr [ebx + 0x57]; 
0x00066a76: push esp; idiv edi; call dword ptr [ebx + 0x57]; push dword ptr [ebp - 0x87c]; call edx; 
0x0006ba1e: push esp; idiv edi; call dword ptr [esi - 1]; 
0x00090438: push esp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x000de857: push esp; inc esi; push ebx; setne al; ret; 
0x000db694: push esp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0009d0a8: push esp; jne 0x9d0ac; add byte ptr [ecx - 0x3b7c0389], cl; adc byte ptr [ecx], ch; ret; 
0x000de731: push esp; jne 0xde740; lea esi, [esi]; mov eax, 0x40; ret; 
0x001083ff: push esp; lahf; stc; call dword ptr [eax - 0x18]; 
0x0011fc17: push esp; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001646e9: push esp; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x0012202c: push esp; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0010f885: push esp; mov eax, 0x135; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0011fd2c: push esp; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0010f811: push esp; mov eax, 0x19e; mov edi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00026678: push esp; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0011cb28: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x0010f8e5: push esp; mov edx, ebp; mov dword ptr [esp + 8], eax; mov eax, 0x19e; call dword ptr gs:[0x10]; 
0x0002ccec: push esp; mov esi, 0xc05589fc; mov edx, dword ptr [ebx + edi*4 - 0x3a4]; test edx, edx; je 0x2ccff; call edx; 
0x00107c4c: push esp; pop ebx; pop esi; ret; 
0x00026674: push esp; push dword ptr [esp + 0x54]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00026182: push esp; push dword ptr [esp + 0x5c]; call edi; 
0x000c3c92: push esp; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call esi; 
0x0016e0fa: push esp; ret; 
0x0011e59f: push esp; stc; call dword ptr [eax + 0x56]; 
0x0011d503: push esp; stc; call dword ptr [eax + 0x57]; 
0x0011e537: push esp; stc; call dword ptr [eax - 0x18]; 
0x0011d4e7: push esp; stc; call dword ptr [edx + 0x52]; 
0x00149fb2: push esp; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x0004ba79: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x0012b318: push esp; xor eax, 0xc4830000; or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x00113289: push esp; xor eax, eax; ret; 
0x0019d077: push ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00169943: push ss; add byte ptr [eax], al; add bl, ch; fsub st(0), st(0); sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x001699b3: push ss; add byte ptr [eax], al; add bl, ch; in al, 0xe8; bound esi, qword ptr [esi - 4]; jmp dword ptr [esi - 0x70]; 
0x0010dce1: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00037589: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x00037491: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x00037529: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000832db: push ss; add byte ptr [eax], al; add byte ptr [ebp - 0x3dbaf040], al; ret; 
0x0011afe1: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a1394: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0009912c: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00083b9d: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00098459: push ss; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00083cd9: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x000711f4: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000983c9: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00083bd5: push ss; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x0008b091: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001029a9: push ss; add byte ptr [eax], al; add byte ptr [esi - 9], ah; ret 0xff00; 
0x000b81bb: push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0006762e: push ss; add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00158900: push ss; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0015eb95: push ss; add esp, 0x74; pop ebx; pop edi; ret; 
0x0014eefb: push ss; bnd jmp dword ptr [ebp - 0x77]; 
0x000b31d9: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000fcf93: push ss; dec byte ptr [ebx - 0x6d34b]; jmp dword ptr [esi - 0x77]; 
0x000d6c59: push ss; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 8; pop ebx; ret; 
0x000aadf7: push ss; jne 0xab4b0; pop edi; pop esi; pop ebx; ret; 
0x000b2f79: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2ca9: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x0009b093: push ss; lea eax, [edx - 0xade90]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x0009afb3: push ss; lea eax, [edx - 0xae410]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f283: push ss; lea eax, [edx - 0xae430]; test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x000aaff1: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000b2164: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aed11: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0011ea35: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ab021: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000e4372: push ss; mov eax, 1; ret; 
0x00160719: push ss; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x0010352f: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b2135: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000aecf2: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ab002: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0011773c: push ss; out dx, eax; call dword ptr [eax - 0x73]; 
0x00127fa8: push ss; pop ebx; pop esi; pop edi; mov eax, edx; ret; 
0x00038205: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d78a9: push ss; pop ebx; pop esi; pop edi; ret; 
0x000a0a97: push ss; pop ebx; pop esi; ret; 
0x000ac924: push ss; pop edi; pop esi; pop ebx; ret; 
0x0011d35c: push ss; push ecx; stc; call dword ptr [eax + 0x57]; 
0x001145b0: push ss; ret; 
0x0016397e: push ss; stc; call dword ptr [ebp + 0x6a]; 
0x00082a9f: push ss; test edx, edx; je 0x82a80; sub esp, 0xc; push eax; call edx; 
0x00058bd2: push ss; xor bh, cl; call dword ptr [ebx + 0x50]; 
0x00084a57: push ss; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x0011d11c: pushal; add al, 0; add byte ptr [ebx - 0x7c72f714], al; sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x00124d6a: pushal; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00114d51: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0014e170: pushal; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00054c38: pushal; add dword ptr [eax], eax; add byte ptr [ecx - 0x768fdbbc], cl; ret 0xc483; 
0x0006c8fc: pushal; add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x00161fd8: pushal; add esp, 0x18; pop ebx; ret; 
0x001574d7: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x000f64f6: pushal; cld; clc; call dword ptr [eax - 0x73]; 
0x001374a7: pushal; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000a97bc: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00066604: pushal; idiv edi; call dword ptr [eax]; 
0x00066d4c: pushal; idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000a52bc: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0014b31c: pushal; inc ebp; out dx, al; dec dword ptr [ebp - 0x652db6b]; call dword ptr [edx - 0x73]; 
0x000c7a1c: pushal; jle 0xc7a15; dec dword ptr [ebx - 0x363f6b]; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x0016e218: pushal; jne 0x21307; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0002c202: pushal; jno 0x2c1fe; call dword ptr [eax - 0x73]; 
0x00064969: pushal; js 0x64965; call dword ptr [eax + 0x68]; 
0x00064ba3: pushal; js 0x64b9f; call dword ptr [eax + 0x68]; 
0x001148c7: pushal; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00175b9c: pushal; ljmp 0x110:0xc483fff3; ret; 
0x00070ed4: pushal; ljmp 0x8914:0xc483ffff; xchg byte ptr [eax + eax - 0x17aa0000], dl; stc; ret 0; 
0x0012278c: pushal; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001601d4: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0011f37f: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0015a712: pushal; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 8]; 
0x00025afb: pushal; mov eax, dword ptr [esp + 0x44]; call eax; 
0x000249e5: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0019ce64: pushal; or al, 0; add byte ptr [ecx - 0x2d7a57c4], cl; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x00171ce8: pushal; or al, 0xed; call dword ptr [eax + 0x6a]; 
0x000ac17c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00083be5: pushal; or bl, bh; xor eax, eax; ret; 
0x00083a96: pushal; or dh, bh; xor eax, eax; ret; 
0x0011d2e7: pushal; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x00079733: pushal; out 0xff, eax; call dword ptr [eax - 0x73]; 
0x000708d4: pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x00107d78: pushal; pop ebx; pop esi; pop edi; ret; 
0x0012f24e: pushal; pop esp; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00025f3d: pushal; push -7; call dword ptr [eax + 0x68]; 
0x00025e29: pushal; push -7; call dword ptr [eax - 0x73]; 
0x00025530: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0011d430: pushal; push edx; stc; call dword ptr [edx + 0x52]; 
0x0008781c: pushal; ret 8; 
0x0009cb43: pushal; shr eax, 1; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0014a64d: pushal; stc; call dword ptr [eax - 0x18]; 
0x0014aac5: pushal; stc; call dword ptr [eax - 0x18]; mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014dad2: pushal; stc; call dword ptr [eax - 0x73]; 
0x0007b6ff: pushal; sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x0013dddf: pushal; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0002d0e1: pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x0011d530: pushal; test dh, dh; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0009afe8: pushal; xor ebp, esi; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00120aa8: pushfd; add byte ptr [eax], al; add al, ch; jmp dword ptr [edi]; 
0x00195d07: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0003791e: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000378b4: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x13348], cl; jmp dword ptr [ebp - 0x75]; 
0x000bc3cd: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x000e9dd0: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax + 0x55]; 
0x000bc6a2: pushfd; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x0008df98: pushfd; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0010737c: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00048070: pushfd; and al, 0x50; add al, 0; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x53]; 
0x0019969b: pushfd; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret; 
0x00120831: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00199670: pushfd; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x00092277: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0008d31f: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x0015e2e1: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000f1814: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000c8f0e: pushfd; and al, 0xf0; add byte ptr [eax], al; add al, ch; pop es; ret; 
0x000f0c38: pushfd; and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret 0xc183; 
0x00106cde: pushfd; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d92: pushfd; call 0x107160; add esp, 0x1c; ret; 
0x00120b7d: pushfd; call 0x107820; add esp, 0x20; add esp, 0xc; ret; 
0x00107808: pushfd; call 0x107820; add esp, 0x2c; ret; 
0x00107e25: pushfd; call 0x107e30; add esp, 0x1c; ret; 
0x000dccf9: pushfd; cdq; stc; call dword ptr [eax - 0x73]; 
0x0013cc72: pushfd; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00143680: pushfd; fsin; jmp dword ptr [esi - 0x70]; 
0x0006607c: pushfd; idiv edi; call dword ptr [eax + 0x57]; 
0x0006cb10: pushfd; jecxz 0x6cb12; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0xf08; 
0x001495c1: pushfd; lodsb al, byte ptr [esi]; stc; call dword ptr [edx - 0x73]; 
0x0014be7c: pushfd; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00023ad4: pushfd; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000b4c1b: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00043d99: pushfd; ret; 
0x0007e112: pushfd; sbb dword ptr [eax], eax; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x0008042c: pushfd; sbb dword ptr [eax], eax; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000fa908: pushfd; stc; call dword ptr [eax - 0x18]; 
0x000f9459: pushfd; stc; call dword ptr [eax - 0x73]; 
0x001031ba: pushfd; std; call dword ptr [ecx + 0x6a]; 
0x001469c3: pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x000f2b14: pushfd; xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x000c17de: pushfd; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00076635: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x0015824f: rcl byte ptr [eax + 0x56]; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0005b33f: rcl byte ptr [eax + eax], cl; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00021406: rcl byte ptr [eax + eax]; add eax, 0x204bf7; mov edx, dword ptr [eax - 0xb8]; test edx, edx; je 0x21419; ret; 
0x001634de: rcl byte ptr [eax - 0x4e1f00d], 0x8b; inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00137e1f: rcl byte ptr [eax - 0x73], 0x86; fadd dword ptr [ebx - 7]; call dword ptr [eax + 0x6a]; 
0x000a16b9: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0012553b: rcl byte ptr [eax], 0x83; ret 0x3904; 
0x001863f3: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x00189249: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x00180c4d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x00124604: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000c7ded: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x00167347: rcl byte ptr [eax], 0x89; loope 0x1672d5; ret 0x9d89; 
0x00124f56: rcl byte ptr [eax]; cmp eax, dword ptr [ecx + 0x4624]; jae 0x124f6b; mov edx, dword ptr [ecx + 0x4628]; add word ptr [edx + eax*2], 1; ret; 
0x0007002a: rcl byte ptr [ebx - 0x18]; push 0x81000fe4; ret; 
0x00096de3: rcl byte ptr [ebx - 0x69720007]; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0011d3c8: rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x00161aaf: rcl byte ptr [edi - 0x18], 0x4a; sub esi, ebp; call ecx; 
0x00161b8f: rcl byte ptr [edi - 0x18], 0x6a; sub dh, ch; call ecx; 
0x0015f9ed: rcl byte ptr [edi - 0x72af000d]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x000213c4: rcl byte ptr [edx - 0x1b], 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0011e1f5: rcl byte ptr [edx - 7], cl; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x0011773b: rcl byte ptr [esi], 0xef; call dword ptr [eax - 0x73]; 
0x00094288: rcl ch, 0xe6; call dword ptr [eax + 0x56]; 
0x00094306: rcl dh, 0xe6; call dword ptr [eax + 0x56]; 
0x00148846: rcl dword ptr [eax + 0x50a0], 0xf6; ret 0xf01; 
0x0012e680: rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x00065c56: rcl dword ptr [eax], 0x39; ret 0xf475; 
0x000b2d19: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0008fe62: rcl dword ptr [ebx - 0x75], 0x40; add al, 0xe8; sub eax, 0x81000de6; ret; 
0x00157d4b: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00123fd9: rcl dword ptr [esi - 0x77]; salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e27ab: rcl eax, 1; hlt; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x0016e50a: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x001259e1: rcl ebx, 1; call 0x5b143a6b; pop esi; pop edi; ret; 
0x00125a81: rcl ebx, 1; call 0x5b143b0b; pop esi; pop edi; ret; 
0x00125b21: rcl ebx, 1; call 0x5b143bab; pop esi; pop edi; ret; 
0x00125bc1: rcl ebx, 1; call 0x5b143c4b; pop esi; pop edi; ret; 
0x00125d01: rcl ebx, 1; call 0x5b143d8b; pop esi; pop edi; ret; 
0x00125da1: rcl ebx, 1; call 0x5b143e2b; pop esi; pop edi; ret; 
0x00125e41: rcl ebx, 1; call 0x5b143ecb; pop esi; pop edi; ret; 
0x00125ee1: rcl ebx, 1; call 0x5b143f6b; pop esi; pop edi; ret; 
0x00125f81: rcl ebx, 1; call 0x5b14400b; pop esi; pop edi; ret; 
0x001260c1: rcl ebx, 1; call 0x5b14414b; pop esi; pop edi; ret; 
0x00153a39: rcr byte ptr [eax], 0x50; call 0x153810; add esp, 0x2c; ret; 
0x0012e9ef: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x00021a95: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003a807: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00024a43: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0008ae0d: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0004b27b: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a0e51: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x0003d7eb: rcr byte ptr [ebx + 0x5e], cl; pop edi; pop ebp; ret; 
0x0014edd0: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00170f40: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0003a3ca: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0012d5af: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0007dbc9: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x0005323a: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00127fc8: rcr byte ptr [ebx], 0xf0; call dword ptr [eax - 1]; 
0x0011d8f4: rcr byte ptr [ebx], 1; cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0002e444: rcr byte ptr [ebx], 1; mov cs, esp; adc byte ptr [eax], al; add byte ptr [edi], cl; dec ebp; ret 0xec83; 
0x000bf5c9: rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x00040464: rcr byte ptr [ecx], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x0010a5d8: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x0018fc02: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000a0e55: rcr byte ptr [edi + 0x5d], 1; ret; 
0x00178ab2: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000a16ad: rcr byte ptr [edi + 0x5e], 1; ret; 
0x0015c056: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0003b0bb: rcr byte ptr [edx + 0x5b], 0x5e; pop edi; pop ebp; ret; 
0x0003ba4b: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x0011af65: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0002f477: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0004ad32: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b4c1c: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0002d28e: rcr byte ptr [esi], 0x89; loope 0x2d21c; ret 0x25; 
0x0002d522: rcr byte ptr [esi], 0x89; loope 0x2d4b0; ret 0x25; 
0x00098f64: rcr ch, 0xf8; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0004acc0: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00134050: rcr dword ptr [ecx - 7], cl; call dword ptr [eax - 0x18]; 
0x0013ce27: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0011faba: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0004a6a3: rdsspd eax; cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4a6b2; push ecx; ret; 
0x0004a949: rdsspd eax; cmp ecx, dword ptr [eax]; mov eax, 0; jne 0x4a958; push ecx; ret; 
0x00037216: rdsspd ecx; mov dword ptr [edx + 0x28], ecx; ret; 
0x000dc0d0: rdtsc; rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x00157a18: rdtsc; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00034d42: rdtsc; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x34d29; ret; 
0x000b3c5e: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00083c50: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0014f71f: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000b364d: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; cld; pop edi; ret; 
0x000b3cf1: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b3cc7: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3627: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; pop edi; ret; 
0x00083838: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000b3d40: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00079e80: rep outsb dx, byte ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x000b3daf: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3696: rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000b3dab: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3692: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x000970cb: rep stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00102466: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00027d3a: ret 0; 
0x0009edc4: ret 0x101; 
0x00029d5a: ret 0x1072; 
0x00082dc5: ret 0x1074; 
0x000b4f8a: ret 0x1077; 
0x000993c5: ret 0x1089; 
0x00096991: ret 0x108; 
0x000c3e57: ret 0x108b; 
0x00064f6a: ret 0x1097; 
0x000a429a: ret 0x10; 
0x0002e789: ret 0x110; 
0x0003a661: ret 0x1177; 
0x0008b16f: ret 0x118b; 
0x00114e6a: ret 0x1197; 
0x00109d8d: ret 0x11; 
0x00049884: ret 0x11eb; 
0x0013a11a: ret 0x123; 
0x00099ceb: ret 0x1274; 
0x000607b5: ret 0x12; 
0x00114d4a: ret 0x12b7; 
0x0003a64e: ret 0x1376; 
0x00114c96: ret 0x1389; 
0x00054e0d: ret 0x13; 
0x00134c5a: ret 0x13a7; 
0x0010cec3: ret 0x1403; 
0x0015a3e7: ret 0x140; 
0x000239ae: ret 0x142b; 
0x0016c111: ret 0x143b; 
0x0004299c: ret 0x1489; 
0x0008cf76: ret 0x148d; 
0x0006c3e8: ret 0x14e9; 
0x00114aca: ret 0x1537; 
0x000a3d1a: ret 0x15; 
0x000cde21: ret 0x15eb; 
0x000b2ca7: ret 0x1676; 
0x000b2f77: ret 0x167c; 
0x00145091: ret 0x168b; 
0x000cda86: ret 0x16d; 
0x000b489a: ret 0x1767; 
0x0011babc: ret 0x1789; 
0x0005edce: ret 0x1875; 
0x0013476a: ret 0x1897; 
0x00099d30: ret 0x18; 
0x00026878: ret 0x18b; 
0x001146fa: ret 0x1907; 
0x000cfe30: ret 0x190; 
0x001146aa: ret 0x1957; 
0x000f3f9d: ret 0x1972; 
0x0009aa04: ret 0x1976; 
0x0011c793: ret 0x1a77; 
0x00097c88: ret 0x1a8b; 
0x00079d9d: ret 0x1a; 
0x0013ce91: ret 0x1b72; 
0x00043504: ret 0x1b8; 
0x000cff3f: ret 0x1b9; 
0x00069d26: ret 0x1b; 
0x00142629: ret 0x1bb; 
0x000c1328: ret 0x1c8b; 
0x000d3de9: ret 0x1c8d; 
0x00181f12: ret 0x1d72; 
0x000b272e: ret 0x1d75; 
0x00129b48: ret 0x1d77; 
0x000dc74e: ret 0x1db8; 
0x000ce5ae: ret 0x1db9; 
0x0016c501: ret 0x1deb; 
0x001441ea: ret 0x1e17; 
0x000d5e1a: ret 0x1e7; 
0x0004aa90: ret 0x1e89; 
0x00039d1d: ret 0x1e; 
0x00037f40: ret 0x1ee0; 
0x00089e80: ret 0x1ee9; 
0x0004a99d: ret 0x1f74; 
0x001947de: ret 0x1f75; 
0x0013b741: ret 0x1f77; 
0x0014374e: ret 0x1f7e; 
0x00029d9b: ret 0x1f; 
0x000d1a16: ret 0x1fb8; 
0x00147fd3: ret 0x1feb; 
0x000e74aa: ret 0x2000; 
0x00138da2: ret 0x200; 
0x0017073d: ret 0x202; 
0x0014c00a: ret 0x20; 
0x000c3f2a: ret 0x20d7; 
0x00147d24: ret 0x20eb; 
0x000c3efa: ret 0x2107; 
0x00047629: ret 0x2174; 
0x000c3e3a: ret 0x21c7; 
0x00029755: ret 0x21e9; 
0x0002554a: ret 0x2374; 
0x00036191: ret 0x2474; 
0x0003eb78: ret 0x24; 
0x000376fc: ret 0x24e9; 
0x0002215e: ret 0x25; 
0x00143a0a: ret 0x25f7; 
0x00082261: ret 0x2672; 
0x000b2c97: ret 0x2676; 
0x000b2f67: ret 0x267c; 
0x000b2749: ret 0x275; 
0x0016389a: ret 0x2767; 
0x00163d56: ret 0x2775; 
0x0011385a: ret 0x27a7; 
0x000a1aba: ret 0x280f; 
0x000c1909: ret 0x28b; 
0x00093708: ret 0x28f9; 
0x0005414a: ret 0x2901; 
0x000aa8f8: ret 0x2910; 
0x001439ac: ret 0x2937; 
0x000b2df8: ret 0x2940; 
0x000d0261: ret 0x2964; 
0x0017dca2: ret 0x2972; 
0x0009367a: ret 0x2987; 
0x00076f68: ret 0x2999; 
0x0009363a: ret 0x29c7; 
0x001147f1: ret 0x29e8; 
0x00196e3c: ret 0x2ae9; 
0x000f0a3a: ret 0x2b75; 
0x00115d4a: ret 0x2b7; 
0x001588e3: ret 0x2b8; 
0x001533d6: ret 0x2c2b; 
0x0018e8ea: ret 0x2c73; 
0x001649d1: ret 0x2c75; 
0x0012c7cd: ret 0x2d3c; 
0x0012cc63: ret 0x2d74; 
0x0008948b: ret 0x2d75; 
0x0002c52d: ret 0x2f3c; 
0x0007c160: ret 0x2f74; 
0x00160621: ret 0x2feb; 
0x0003b380: ret 0x3039; 
0x0014373d: ret 0x307e; 
0x000741b1: ret 0x3089; 
0x000238cb: ret 0x3101; 
0x001435cd: ret 0x3102; 
0x00042eb0: ret 0x311c; 
0x00092eda: ret 0x3127; 
0x000df605: ret 0x31c3; 
0x0018f2ab: ret 0x3273; 
0x000e778c: ret 0x328b; 
0x000fa3ae: ret 0x32c; 
0x00033aa9: ret 0x3325; 
0x000997da: ret 0x3374; 
0x0009a9ee: ret 0x3376; 
0x000d4430: ret 0x348d; 
0x00092afa: ret 0x3507; 
0x0007bf6c: ret 0x352; 
0x00050de1: ret 0x3574; 
0x00115caa: ret 0x357; 
0x00122a1a: ret 0x35e7; 
0x0012299a: ret 0x3667; 
0x000b2f57: ret 0x367c; 
0x0012291a: ret 0x36e7; 
0x000a0a89: ret 0x3801; 
0x000b2713: ret 0x3875; 
0x0013c3ac: ret 0x3883; 
0x0008276a: ret 0x3897; 
0x00099446: ret 0x38b; 
0x00024ab1: ret 0x3901; 
0x000352ca: ret 0x3903; 
0x0003afe0: ret 0x3904; 
0x0003357e: ret 0x3908; 
0x00167576: ret 0x3909; 
0x00053f19: ret 0x390c; 
0x000917eb: ret 0x3910; 
0x0009944d: ret 0x3964; 
0x000b2c84: ret 0x3976; 
0x000c9833: ret 0x39f5; 
0x0002c50f: ret 0x3a3c; 
0x000974d9: ret 0x3a73; 
0x00050fa4: ret 0x3a74; 
0x001947c3: ret 0x3a75; 
0x000352ed: ret 0x3a80; 
0x0009ff8a: ret 0x3a8b; 
0x00035c53: ret 0x3ae; 
0x00026e51: ret 0x3b01; 
0x000f253c: ret 0x3b08; 
0x000f0061: ret 0x3b20; 
0x0016765e: ret 0x3b74; 
0x0004c3af: ret 0x3b89; 
0x0004f96a: ret 0x3b8; 
0x0007242e: ret 0x3c01; 
0x0007239a: ret 0x3c67; 
0x000cb319: ret 0x3c75; 
0x000893d5: ret 0x3c7; 
0x00048b8c: ret 0x3c83; 
0x001433ef: ret 0x3c89; 
0x000d2910: ret 0x3c8d; 
0x0008b1f0: ret 0x3d75; 
0x00038442: ret 0x3d; 
0x000cd449: ret 0x3de9; 
0x001221da: ret 0x3e27; 
0x0018e8d5: ret 0x3e73; 
0x0014216a: ret 0x3e97; 
0x0002209a: ret 0x3f67; 
0x0009208a: ret 0x3f77; 
0x000f5028: ret 0x3f8b; 
0x0008a97a: ret 0x3f; 
0x00197b2c: ret 0x4000; 
0x000596ba: ret 0x401; 
0x000bf5cf: ret 0x403; 
0x00111f9a: ret 0x4067; 
0x000f9fb1: ret 0x4089; 
0x0008feb9: ret 0x408b; 
0x00039810: ret 0x408d; 
0x00121f6a: ret 0x4097; 
0x00035fc1: ret 0x40; 
0x000512e4: ret 0x40c7; 
0x00091efa: ret 0x4107; 
0x00121eea: ret 0x4117; 
0x00144f26: ret 0x4189; 
0x00054445: ret 0x418d; 
0x00081e1a: ret 0x41e7; 
0x0006f89c: ret 0x420f; 
0x001254d8: ret 0x4240; 
0x00121daa: ret 0x4257; 
0x0002512b: ret 0x428b; 
0x000cb295: ret 0x428d; 
0x00094215: ret 0x430; 
0x00035646: ret 0x430f; 
0x00159072: ret 0x4388; 
0x001392cd: ret 0x4389; 
0x000b9616: ret 0x438d; 
0x0009a852: ret 0x4401; 
0x000bc91e: ret 0x4403; 
0x0010ce09: ret 0x443b; 
0x0012a03a: ret 0x4483; 
0x0002549f: ret 0x4489; 
0x00025271: ret 0x448b; 
0x000d19b5: ret 0x448d; 
0x000294d9: ret 0x44c7; 
0x000cfa7d: ret 0x44f6; 
0x0004a1b2: ret 0x44f7; 
0x00081afa: ret 0x4507; 
0x0013cde8: ret 0x4572; 
0x0002d34c: ret 0x4583; 
0x00022c2b: ret 0x4589; 
0x000222b8: ret 0x458b; 
0x0010a9d7: ret 0x458d; 
0x000b33be: ret 0x460f; 
0x0012a656: ret 0x4639; 
0x00074ed7: ret 0x4689; 
0x000527f6: ret 0x468b; 
0x0015fbae: ret 0x468d; 
0x000cb62a: ret 0x470f; 
0x00099589: ret 0x476; 
0x00141216: ret 0x4772; 
0x000d028d: ret 0x4789; 
0x000e142e: ret 0x478b; 
0x00125fba: ret 0x47; 
0x00067251: ret 0x47e9; 
0x0014f792: ret 0x488d; 
0x0003ef80: ret 0x489; 
0x00040443: ret 0x48b; 
0x00033957: ret 0x48d; 
0x00162210: ret 0x48e9; 
0x000216da: ret 0x4927; 
0x0008168a: ret 0x4977; 
0x00192b63: ret 0x498d; 
0x001642a3: ret 0x4a75; 
0x00159d72: ret 0x4bd; 
0x000f181d: ret 0x4c0f; 
0x001097a7: ret 0x4c33; 
0x0018f291: ret 0x4c73; 
0x00165e71: ret 0x4c75; 
0x0004a00e: ret 0x4c88; 
0x00029373: ret 0x4c89; 
0x001179be: ret 0x4c8b; 
0x0008131a: ret 0x4ce7; 
0x00162ba0: ret 0x4ce9; 
0x0002e491: ret 0x4d0f; 
0x000512ca: ret 0x4d37; 
0x00072eca: ret 0x4d89; 
0x00022c28: ret 0x4e0f; 
0x0003b386: ret 0x4e6d; 
0x0012cddb: ret 0x4e89; 
0x000c3407: ret 0x4e8b; 
0x000f4efe: ret 0x4f0f; 
0x0010cc42: ret 0x4f8b; 
0x00095f30: ret 0x4f8d; 
0x000882e0: ret 0x4fe9; 
0x00145930: ret 0x5001; 
0x000cb15b: ret 0x5005; 
0x0007dd3f: ret 0x5052; 
0x000876cf: ret 0x5072; 
0x0018e8c0: ret 0x5073; 
0x0012b71d: ret 0x508b; 
0x00146b1a: ret 0x5152; 
0x0002e494: ret 0x518b; 
0x000a0e6a: ret 0x5197; 
0x00070e3a: ret 0x51c7; 
0x000e1919: ret 0x5201; 
0x001033ad: ret 0x5204; 
0x0015b0e8: ret 0x5208; 
0x00080dba: ret 0x5247; 
0x00129aa4: ret 0x5250; 
0x000a1a3e: ret 0x528d; 
0x001863f6: ret 0x5310; 
0x000769ad: ret 0x532b; 
0x000a1366: ret 0x5350; 
0x00066ea3: ret 0x5352; 
0x001640db: ret 0x5356; 
0x00062d7a: ret 0x536; 
0x0007a792: ret 0x5374; 
0x000b26f8: ret 0x5375; 
0x000ec6ae: ret 0x5388; 
0x0016ff5c: ret 0x5389; 
0x000eadd4: ret 0x538b; 
0x000f3b9c: ret 0x5403; 
0x00041841: ret 0x5409; 
0x000e5147: ret 0x5422; 
0x0002861c: ret 0x542b; 
0x000ca64f: ret 0x5438; 
0x00159b59: ret 0x543b; 
0x001498f9: ret 0x5473; 
0x001428c0: ret 0x5484; 
0x000b65a5: ret 0x5488; 
0x00040374: ret 0x5489; 
0x00049b13: ret 0x548b; 
0x000d191d: ret 0x548d; 
0x00119adf: ret 0x549; 
0x0009ed67: ret 0x5503; 
0x0013bba4: ret 0x5522; 
0x000f3179: ret 0x5523; 
0x001947a8: ret 0x5575; 
0x000767b7: ret 0x5589; 
0x000e88a0: ret 0x5603; 
0x0018f5a8: ret 0x5608; 
0x001209ea: ret 0x5617; 
0x0012cad7: ret 0x562b; 
0x000eea35: ret 0x5650; 
0x0004d51f: ret 0x5652; 
0x00094e52: ret 0x5657; 
0x0012099a: ret 0x5667; 
0x00170108: ret 0x5675; 
0x0017097a: ret 0x5687; 
0x00157d67: ret 0x5689; 
0x0007c1b9: ret 0x568b; 
0x00097fc6: ret 0x568d; 
0x0012094a: ret 0x56b7; 
0x0018e2e9: ret 0x5708; 
0x000ecd30: ret 0x570b; 
0x0018924c: ret 0x5710; 
0x0012ccaa: ret 0x572b; 
0x000234d6: ret 0x574; 
0x0013881d: ret 0x5752; 
0x0009061b: ret 0x578b; 
0x000c086a: ret 0x5797; 
0x001306ca: ret 0x5937; 
0x0013065a: ret 0x59a7; 
0x0009ad19: ret 0x59e9; 
0x001104da: ret 0x5b27; 
0x0009048a: ret 0x5b77; 
0x0008040a: ret 0x5bf7; 
0x000d1947: ret 0x5c29; 
0x000772c8: ret 0x5c3b; 
0x0003d47c: ret 0x5c89; 
0x00093785: ret 0x5c8b; 
0x000a323e: ret 0x5c8d; 
0x00089013: ret 0x5ce9; 
0x0018e1bc: ret 0x5d5e; 
0x000e8342: ret 0x5d89; 
0x000c2b67: ret 0x5d8b; 
0x000e949e: ret 0x5e5b; 
0x0002c5d4: ret 0x5f3c; 
0x0002e745: ret 0x5f89; 
0x0008bfdc: ret 0x6174; 
0x0007fec4: ret 0x6176; 
0x0008fe06: ret 0x61fb; 
0x0013929c: ret 0x6273; 
0x00140a7a: ret 0x64; 
0x000c91c0: ret 0x64f7; 
0x0007114e: ret 0x6509; 
0x0014faca: ret 0x6537; 
0x001089e7: ret 0x65a; 
0x00138cd6: ret 0x6601; 
0x0013fef0: ret 0x6608; 
0x0018fea9: ret 0x6610; 
0x000aa1d3: ret 0x6640; 
0x0018f277: ret 0x6673; 
0x0008c737: ret 0x6674; 
0x000832e3: ret 0x66c3; 
0x000b2cb7: ret 0x676; 
0x000b2f87: ret 0x67c; 
0x000fb15d: ret 0x6889; 
0x000966b1: ret 0x688d; 
0x0002b76f: ret 0x689; 
0x00039055: ret 0x68b; 
0x0007f71a: ret 0x68e7; 
0x0012f70a: ret 0x68f7; 
0x0014f6fa: ret 0x6907; 
0x0007f69a: ret 0x6967; 
0x0014f58a: ret 0x6a77; 
0x000b96e2: ret 0x6a; 
0x0010f55a: ret 0x6aa7; 
0x0002f51a: ret 0x6ae7; 
0x0004c3e4: ret 0x6b89; 
0x0010925a: ret 0x6b8; 
0x0012f119: ret 0x6be; 
0x000ed481: ret 0x6c74; 
0x0014e6df: ret 0x6c89; 
0x00035288: ret 0x6c8b; 
0x000df31a: ret 0x6ce7; 
0x0007f2aa: ret 0x6d57; 
0x0012f26a: ret 0x6d97; 
0x0012f21a: ret 0x6de7; 
0x000b29d0: ret 0x6deb; 
0x0012f1ca: ret 0x6e37; 
0x0012f17a: ret 0x6e87; 
0x00144488: ret 0x6e8b; 
0x000d2e74: ret 0x6eb8; 
0x000bb45d: ret 0x6eb; 
0x000cda56: ret 0x6eba; 
0x0002cfca: ret 0x6f8; 
0x001613e5: ret 0x6f8b; 
0x0007f06a: ret 0x6f97; 
0x000962c1: ret 0x708d; 
0x0007eeba: ret 0x7147; 
0x0012ee7a: ret 0x7187; 
0x000eadae: ret 0x71e9; 
0x0011edca: ret 0x7237; 
0x0013efd2: ret 0x7372; 
0x000e94f3: ret 0x7401; 
0x00077ac2: ret 0x7402; 
0x000b33b4: ret 0x7403; 
0x000eb9cc: ret 0x7404; 
0x0019a192: ret 0x7407; 
0x00075374: ret 0x7408; 
0x000b2fdb: ret 0x7410; 
0x00070db1: ret 0x7420; 
0x00028482: ret 0x7439; 
0x0003d599: ret 0x7489; 
0x0002f3d2: ret 0x748d; 
0x000deb6a: ret 0x7497; 
0x0002652f: ret 0x7501; 
0x0008b69c: ret 0x7502; 
0x0002d969: ret 0x7503; 
0x000acfdc: ret 0x7504; 
0x001916ee: ret 0x7508; 
0x000acff1: ret 0x7510; 
0x000acff6: ret 0x7520; 
0x000acffb: ret 0x7540; 
0x0012df7d: ret 0x758b; 
0x000b589a: ret 0x767; 
0x00047ea4: ret 0x768d; 
0x0008e94a: ret 0x76b7; 
0x001169ca: ret 0x76b8; 
0x00129925: ret 0x7789; 
0x00115f8a: ret 0x77; 
0x0007e85a: ret 0x77a7; 
0x001684a3: ret 0x77e8; 
0x000e81c1: ret 0x7839; 
0x000ebe1b: ret 0x7a75; 
0x00049ba8: ret 0x7a80; 
0x000de55a: ret 0x7aa7; 
0x0011e4da: ret 0x7b27; 
0x00193551: ret 0x7c06; 
0x00193561: ret 0x7c07; 
0x00193571: ret 0x7c09; 
0x00193581: ret 0x7c0a; 
0x00193591: ret 0x7c0b; 
0x001935a1: ret 0x7c0d; 
0x001935b1: ret 0x7c0e; 
0x001935c1: ret 0x7c0f; 
0x00109694: ret 0x7c39; 
0x000b659b: ret 0x7c83; 
0x00074bf7: ret 0x7c89; 
0x00077197: ret 0x7c8b; 
0x00116c37: ret 0x7c8d; 
0x000f5dbc: ret 0x7ce9; 
0x0016e2fa: ret 0x7d07; 
0x0005c073: ret 0x7de9; 
0x0013e20a: ret 0x7df7; 
0x0018e329: ret 0x7e10; 
0x0008b67f: ret 0x7e74; 
0x00168413: ret 0x7e8; 
0x0006ee53: ret 0x7f3c; 
0x001985c6: ret 0x7fff; 
0x00034632: ret 0x8001; 
0x000e59b0: ret 0x800; 
0x000fb7f1: ret 0x8014; 
0x000ec212: ret 0x804; 
0x00072239: ret 0x808b; 
0x00177115: ret 0x80; 
0x00114216: ret 0x80a9; 
0x000cb1c0: ret 0x80b8; 
0x000b33dd: ret 0x8104; 
0x00087d08: ret 0x8108; 
0x000e9464: ret 0x8166; 
0x000936f0: ret 0x8189; 
0x0002af89: ret 0x81e9; 
0x0013de0a: ret 0x81f7; 
0x0006d366: ret 0x820f; 
0x000dddda: ret 0x8227; 
0x0003184a: ret 0x823; 
0x001488d6: ret 0x828d; 
0x000ddd3a: ret 0x82c7; 
0x0002502e: ret 0x8301; 
0x0009b72b: ret 0x8303; 
0x0004a9cb: ret 0x8304; 
0x0009b6fb: ret 0x8305; 
0x0004a72c: ret 0x8307; 
0x00140302: ret 0x8308; 
0x00194ea0: ret 0x830c; 
0x00083f32: ret 0x830f; 
0x000b4bcc: ret 0x8310; 
0x0008de89: ret 0x8314; 
0x000897ab: ret 0x8316; 
0x00088ade: ret 0x8318; 
0x000b3b95: ret 0x8320; 
0x0003b171: ret 0x833c; 
0x000aa224: ret 0x8340; 
0x0010dcba: ret 0x8347; 
0x0005689d: ret 0x8366; 
0x00090634: ret 0x8389; 
0x0013894a: ret 0x838b; 
0x00129b6a: ret 0x838d; 
0x0019303e: ret 0x8390; 
0x0002c30e: ret 0x8401; 
0x000565d7: ret 0x8404; 
0x00023953: ret 0x840f; 
0x0005ee83: ret 0x8489; 
0x00195528: ret 0x848b; 
0x000f2da7: ret 0x84c7; 
0x000fbc14: ret 0x8501; 
0x0004fa5b: ret 0x8503; 
0x000b4d64: ret 0x8504; 
0x000239e1: ret 0x850f; 
0x0007daea: ret 0x8517; 
0x0012d507: ret 0x8518; 
0x000b32aa: ret 0x8540; 
0x000cda9a: ret 0x8567; 
0x0004de9b: ret 0x8589; 
0x0002e833: ret 0x858b; 
0x000c7867: ret 0x858d; 
0x00047f5b: ret 0x860f; 
0x001188ac: ret 0x868d; 
0x0012d94a: ret 0x86b7; 
0x000cc3fd: ret 0x870f; 
0x0015d8ea: ret 0x8717; 
0x00047828: ret 0x874; 
0x000248d3: ret 0x8801; 
0x0013cb7a: ret 0x8802; 
0x00025067: ret 0x8804; 
0x0006d35e: ret 0x880f; 
0x000d292b: ret 0x8830; 
0x0014ea96: ret 0x889; 
0x000255ed: ret 0x8901; 
0x00034983: ret 0x8902; 
0x00029c21: ret 0x8904; 
0x0003293b: ret 0x8908; 
0x000213d0: ret 0x8909; 
0x00040415: ret 0x890a; 
0x00124607: ret 0x890c; 
0x000dd459: ret 0x890f; 
0x000c7df0: ret 0x8910; 
0x000700ad: ret 0x891b; 
0x0019c133: ret 0x8920; 
0x000d444b: ret 0x8930; 
0x000228a4: ret 0x893c; 
0x000c7804: ret 0x8951; 
0x0003564e: ret 0x8952; 
0x0008b479: ret 0x895b; 
0x000cb314: ret 0x8964; 
0x00108b79: ret 0x8965; 
0x00089c7d: ret 0x8966; 
0x000c96d0: ret 0x89f5; 
0x00040cb1: ret 0x8b01; 
0x0009b740: ret 0x8b02; 
0x00123245: ret 0x8b03; 
0x0003291f: ret 0x8b04; 
0x0009b6e0: ret 0x8b06; 
0x00024996: ret 0x8b07; 
0x00032b02: ret 0x8b08; 
0x000b3e11: ret 0x8b10; 
0x0012b99a: ret 0x8b18; 
0x0009b3c1: ret 0x8b20; 
0x0008001e: ret 0x8b30; 
0x00022f1e: ret 0x8b3c; 
0x0012a6a1: ret 0x8b52; 
0x000eb2e9: ret 0x8b65; 
0x0010941e: ret 0x8b8; 
0x0009e45e: ret 0x8b90; 
0x00080015: ret 0x8b; 
0x00053a15: ret 0x8c0f; 
0x0014a302: ret 0x8c89; 
0x00087a63: ret 0x8c; 
0x0002b62b: ret 0x8d01; 
0x0014656c: ret 0x8d08; 
0x000875da: ret 0x8d0; 
0x000d6a35: ret 0x8d0f; 
0x000b31f1: ret 0x8d10; 
0x000d9962: ret 0x8d50; 
0x00052605: ret 0x8d89; 
0x00066700: ret 0x8d8b; 
0x0009c3d9: ret 0x8d8d; 
0x000247a4: ret 0x8dc3; 
0x0007d22a: ret 0x8dd7; 
0x00029b81: ret 0x8de9; 
0x00038e70: ret 0x8e0f; 
0x000c1d17: ret 0x8f0f; 
0x00082dab: ret 0x8f8b; 
0x0004856a: ret 0x901; 
0x001313f2: ret 0x904; 
0x0007e94d: ret 0x9066; 
0x000d194b: ret 0x908d; 
0x000de66d: ret 0x90c3; 
0x0015cf3a: ret 0x90c7; 
0x0006f7ea: ret 0x90e9; 
0x0008ce9a: ret 0x9167; 
0x0014cd7a: ret 0x9287; 
0x000c14e2: ret 0x92e9; 
0x0013f072: ret 0x930f; 
0x00095efd: ret 0x9389; 
0x0004cc5a: ret 0x93a7; 
0x00145685: ret 0x93c; 
0x0003b258: ret 0x93eb; 
0x0019a182: ret 0x940b; 
0x00103722: ret 0x940f; 
0x0004cbda: ret 0x9427; 
0x001947f9: ret 0x9474; 
0x00198208: ret 0x9488; 
0x0008d346: ret 0x948b; 
0x00116a9a: ret 0x94b8; 
0x0009cb1a: ret 0x94e7; 
0x0003e5b9: ret 0x950f; 
0x0019caea: ret 0x9517; 
0x000667b8: ret 0x9522; 
0x0005eca7: ret 0x952b; 
0x00063a57: ret 0x9539; 
0x0002bb9d: ret 0x953b; 
0x000dfb93: ret 0x9588; 
0x0004e7c2: ret 0x9589; 
0x000cb336: ret 0x960f; 
0x000ebe8d: ret 0x9674; 
0x00085427: ret 0x9675; 
0x00070f1c: ret 0x9689; 
0x00091738: ret 0x968b; 
0x0012c7df: ret 0x975; 
0x0016f7d3: ret 0x9774; 
0x000354b5: ret 0x98eb; 
0x001311c8: ret 0x998b; 
0x00085117: ret 0x9a75; 
0x000ecc33: ret 0x9aeb; 
0x0011c4ca: ret 0x9b37; 
0x0010250b: ret 0x9b8; 
0x00072321: ret 0x9c; 
0x0008b219: ret 0x9d72; 
0x0007c27a: ret 0x9d87; 
0x0004db64: ret 0x9d88; 
0x00033153: ret 0x9d89; 
0x0004f357: ret 0x9d8d; 
0x0014c20a: ret 0x9df7; 
0x00078070: ret 0x9e3b; 
0x000b84f2: ret 0x9eb; 
0x0004774a: ret 0x9f74; 
0x000258ba: ret 0x9f; 
0x00024c78: ret 0x9fe9; 
0x000c05d2: ret 0xa074; 
0x0009aaec: ret 0xa165; 
0x0005be74: ret 0xa175; 
0x000eae7e: ret 0xa1e9; 
0x001456bf: ret 0xa3c; 
0x00114203: ret 0xa475; 
0x0011ab2c: ret 0xa4e9; 
0x000dba6a: ret 0xa597; 
0x00035708: ret 0xa5eb; 
0x0007b9da: ret 0xa627; 
0x00094390: ret 0xa72; 
0x0008938b: ret 0xa75; 
0x000334cf: ret 0xa7e9; 
0x000ddee5: ret 0xa874; 
0x000c1a3a: ret 0xa8b; 
0x000db71a: ret 0xa8e7; 
0x00048e43: ret 0xa; 
0x0011a565: ret 0xaae9; 
0x00040430: ret 0xabb8; 
0x0016b41a: ret 0xabe7; 
0x0007b36a: ret 0xac97; 
0x0009b33a: ret 0xacc7; 
0x0003b2ba: ret 0xad47; 
0x0009b27a: ret 0xad87; 
0x0009b23a: ret 0xadc7; 
0x0009b1fa: ret 0xae07; 
0x0009b1ba: ret 0xae47; 
0x0002b19a: ret 0xae67; 
0x0009b16a: ret 0xae97; 
0x0009b11a: ret 0xaee7; 
0x00177040: ret 0xaef; 
0x0009b07a: ret 0xaf87; 
0x0016b05a: ret 0xafa7; 
0x0009b02a: ret 0xafd7; 
0x0016b00a: ret 0xaff7; 
0x0009afda: ret 0xb027; 
0x0009af9a: ret 0xb067; 
0x0009af4a: ret 0xb0b7; 
0x0009af0a: ret 0xb0f7; 
0x0007fd5a: ret 0xb12; 
0x0009aeca: ret 0xb137; 
0x000cadca: ret 0xb237; 
0x0016ad0a: ret 0xb2f7; 
0x00093bea: ret 0xb374; 
0x000cbbc8: ret 0xb38b; 
0x0003783f: ret 0xb3b8; 
0x001497e6: ret 0xb439; 
0x000b54ba: ret 0xb47; 
0x0019a6df: ret 0xb489; 
0x000390c6: ret 0xb48d; 
0x0016ab6a: ret 0xb497; 
0x00068e51: ret 0xb4ff; 
0x0005cc98: ret 0xb589; 
0x0005c73d: ret 0xb58b; 
0x000e135d: ret 0xb58d; 
0x000267be: ret 0xb60f; 
0x00045529: ret 0xb68d; 
0x000cb28f: ret 0xb70f; 
0x000dd08c: ret 0xb74; 
0x000a05e7: ret 0xb801; 
0x000d2e7b: ret 0xb850; 
0x000b547a: ret 0xb87; 
0x00058de1: ret 0xb89; 
0x000d3c83: ret 0xb8; 
0x000de60e: ret 0xb8c3; 
0x00114530: ret 0xb963; 
0x0006f7c1: ret 0xb9e9; 
0x0003e39a: ret 0xb9eb; 
0x00042ea4: ret 0xb; 
0x000420c8: ret 0xba; 
0x00037304: ret 0xbb01; 
0x001177c9: ret 0xbb03; 
0x0009a4aa: ret 0xbb57; 
0x0005441d: ret 0xbb7d; 
0x000ff5fb: ret 0xbb8b; 
0x0009a45a: ret 0xbba7; 
0x0009a41a: ret 0xbbe7; 
0x000eb3fb: ret 0xbc03; 
0x0009a3ca: ret 0xbc37; 
0x00037c16: ret 0xbc89; 
0x0009a35a: ret 0xbca7; 
0x000c7387: ret 0xbd39; 
0x0015a28a: ret 0xbd77; 
0x0005a4e7: ret 0xbd83; 
0x0013a714: ret 0xbd8d; 
0x0005f8bd: ret 0xbe08; 
0x0005f31a: ret 0xbe0f; 
0x000c4c1b: ret 0xbeb; 
0x00029f0f: ret 0xbeeb; 
0x000da0ba: ret 0xbf47; 
0x0012a0a6: ret 0xbf5b; 
0x0009a01a: ret 0xbfe7; 
0x00069fda: ret 0xc027; 
0x0003adf5: ret 0xc031; 
0x00099faa: ret 0xc057; 
0x00138d83: ret 0xc069; 
0x0002c14a: ret 0xc083; 
0x00099c73: ret 0xc084; 
0x0002e40b: ret 0xc085; 
0x00099f6a: ret 0xc097; 
0x000a1973: ret 0xc0be; 
0x00035ab5: ret 0xc0d9; 
0x00099f1a: ret 0xc0e7; 
0x000225d3: ret 0xc101; 
0x0003ffbc: ret 0xc102; 
0x000e833c: ret 0xc104; 
0x00052d72: ret 0xc108; 
0x001255c6: ret 0xc110; 
0x00049ffd: ret 0xc121; 
0x0007132f: ret 0xc129; 
0x0004b637: ret 0xc139; 
0x000c9809: ret 0xc169; 
0x000f0c40: ret 0xc183; 
0x00032a1c: ret 0xc189; 
0x00198a99: ret 0xc208; 
0x0008c647: ret 0xc231; 
0x0003af72: ret 0xc269; 
0x000cb312: ret 0xc26b; 
0x000826d8: ret 0xc272; 
0x000cda84: ret 0xc281; 
0x000a05e5: ret 0xc283; 
0x0008bda3: ret 0xc289; 
0x0018f0f9: ret 0xc2bb; 
0x0003d668: ret 0xc301; 
0x000e8bdb: ret 0xc339; 
0x000d9caa: ret 0xc357; 
0x0009af84: ret 0xc35b; 
0x000b4c44: ret 0xc35f; 
0x00109850: ret 0xc389; 
0x000faa4a: ret 0xc3; 
0x00090535: ret 0xc3c3; 
0x0009a1c5: ret 0xc3eb; 
0x00082656: ret 0xc472; 
0x00070189: ret 0xc474; 
0x00024ef1: ret 0xc483; 
0x00079b1a: ret 0xc4e7; 
0x001272d8: ret 0xc589; 
0x000cca2a: ret 0xc601; 
0x0012a1ad: ret 0xc629; 
0x0014a2cd: ret 0xc683; 
0x000351b5: ret 0xc689; 
0x000dec96: ret 0xc701; 
0x00034af4: ret 0xc702; 
0x00029665: ret 0xc704; 
0x0014f7a7: ret 0xc708; 
0x0009ba88: ret 0xc72; 
0x000a0d6b: ret 0xc739; 
0x00089ad0: ret 0xc74; 
0x00198831: ret 0xc789; 
0x00099cd4: ret 0xc801; 
0x00074ecc: ret 0xc883; 
0x00022394: ret 0xc889; 
0x0014892c: ret 0xc8c1; 
0x0009d227: ret 0xc8d; 
0x00089c44: ret 0xc931; 
0x0008418b: ret 0xc983; 
0x0006955b: ret 0xc985; 
0x0006c11a: ret 0xc; 
0x0013df98: ret 0xca00; 
0x0002c2cc: ret 0xca08; 
0x000b9844: ret 0xca19; 
0x0016faa5: ret 0xca29; 
0x001295ca: ret 0xca37; 
0x0016cb4a: ret 0xca39; 
0x0008b971: ret 0xca81; 
0x00082909: ret 0xca83; 
0x000941e6: ret 0xcac1; 
0x0011a806: ret 0xcad8; 
0x00197f3d: ret 0xcb11; 
0x0010254d: ret 0xcb8; 
0x000d937a: ret 0xcc87; 
0x0010935a: ret 0xcca7; 
0x000d2f06: ret 0xcde9; 
0x00082ce7: ret 0xce72; 
0x000240aa: ret 0xce80; 
0x0015917a: ret 0xce87; 
0x00083e7e: ret 0xcf72; 
0x00070671: ret 0xd008; 
0x00070650: ret 0xd009; 
0x000bf97a: ret 0xd020; 
0x000ca0ea: ret 0xd069; 
0x000f42ad: ret 0xd075; 
0x000b52fa: ret 0xd07; 
0x00030b95: ret 0xd089; 
0x000ed192: ret 0xd101; 
0x0012ea7a: ret 0xd108; 
0x0004387e: ret 0xd120; 
0x000ce40d: ret 0xd129; 
0x0002e181: ret 0xd139; 
0x000e88c4: ret 0xd17f; 
0x00028e63: ret 0xd184; 
0x00049ff9: ret 0xd189; 
0x000ebe17: ret 0xd201; 
0x00093e15: ret 0xd231; 
0x00083093: ret 0xd272; 
0x0003fe08: ret 0xd284; 
0x00120c93: ret 0xd285; 
0x00058d6a: ret 0xd297; 
0x0007c1e0: ret 0xd2e9; 
0x000845c0: ret 0xd2f7; 
0x0005063a: ret 0xd301; 
0x00196c29: ret 0xd304; 
0x000404e1: ret 0xd31d; 
0x000383fb: ret 0xd321; 
0x000ce6fe: ret 0xd329; 
0x000ca7ee: ret 0xd338; 
0x000ed093: ret 0xd339; 
0x000c9803: ret 0xd369; 
0x00084282: ret 0xd372; 
0x000f35d2: ret 0xd375; 
0x00158c7a: ret 0xd387; 
0x00195f2b: ret 0xd389; 
0x0005265a: ret 0xd439; 
0x000e8679: ret 0xd473; 
0x000c44da: ret 0xd4d; 
0x000847f8: ret 0xd572; 
0x0019c875: ret 0xd589; 
0x0005c75d: ret 0xd629; 
0x00146902: ret 0xd639; 
0x0007899a: ret 0xd667; 
0x000445af: ret 0xd689; 
0x000c9265: ret 0xd719; 
0x0013f315: ret 0xd72; 
0x0007c4d7: ret 0xd739; 
0x00198ae0: ret 0xd789; 
0x0010884a: ret 0xd7b7; 
0x00026d9c: ret 0xd7e9; 
0x001435be: ret 0xd7eb; 
0x0005b350: ret 0xd801; 
0x000c0bc3: ret 0xd839; 
0x00030188: ret 0xd889; 
0x00035a25: ret 0xd8f7; 
0x000d00b1: ret 0xd929; 
0x0007042c: ret 0xd989; 
0x0019697e: ret 0xd9f7; 
0x00044f22: ret 0xd; 
0x000f3cff: ret 0xda01; 
0x000984a7: ret 0xda21; 
0x0007c3b9: ret 0xda29; 
0x000951f8: ret 0xda39; 
0x000f4f3b: ret 0xda75; 
0x000ca1b5: ret 0xda81; 
0x0008d337: ret 0xdaf7; 
0x001184fa: ret 0xdb07; 
0x000aa0de: ret 0xdb31; 
0x001184ca: ret 0xdb37; 
0x00092de7: ret 0xdb6; 
0x000b6af8: ret 0xdb85; 
0x0005845a: ret 0xdba7; 
0x001183da: ret 0xdc27; 
0x00108ea7: ret 0xdc73; 
0x0011838a: ret 0xdc77; 
0x000e7739: ret 0xdceb; 
0x000382ca: ret 0xdd37; 
0x000ed22e: ret 0xdd39; 
0x0003817a: ret 0xde87; 
0x000bb4aa: ret 0xde89; 
0x0011cc0f: ret 0xdeb; 
0x000cfe2a: ret 0xdf89; 
0x0011cd0d: ret 0xe075; 
0x00026e20: ret 0xe083; 
0x000c332d: ret 0xe089; 
0x00158960: ret 0xe0c1; 
0x00037efa: ret 0xe107; 
0x00037eba: ret 0xe147; 
0x0002b713: ret 0xe183; 
0x00192695: ret 0xe280; 
0x00034d32: ret 0xe281; 
0x00028558: ret 0xe283; 
0x00083de1: ret 0xe2c1; 
0x00153f0d: ret 0xe2e9; 
0x00047cda: ret 0xe327; 
0x00084ec7: ret 0xe372; 
0x000525c1: ret 0xe381; 
0x00023e68: ret 0xe383; 
0x000c7c4a: ret 0xe3b7; 
0x000eaae3: ret 0xe3eb; 
0x000c7bca: ret 0xe437; 
0x000e5e2b: ret 0xe581; 
0x0014da62: ret 0xe589; 
0x00082bc2: ret 0xe5e8; 
0x0002d177: ret 0xe683; 
0x000978ca: ret 0xe737; 
0x000fb30a: ret 0xe74; 
0x00198a9b: ret 0xe75; 
0x000f2184: ret 0xe775; 
0x000c96b3: ret 0xe7f7; 
0x00043609: ret 0xe801; 
0x000985c3: ret 0xe821; 
0x0019dd7a: ret 0xe823; 
0x000861e7: ret 0xe82; 
0x00023904: ret 0xe852; 
0x000cc4d0: ret 0xe856; 
0x000377aa: ret 0xe857; 
0x0005920d: ret 0xe883; 
0x00084f4c: ret 0xe889; 
0x0004a990: ret 0xe89; 
0x000f4dde: ret 0xe8c0; 
0x0004abac: ret 0xe8c1; 
0x0009a87b: ret 0xe901; 
0x001176fa: ret 0xe907; 
0x0014ba13: ret 0xe90c; 
0x0011a5a4: ret 0xe975; 
0x0002728d: ret 0xe983; 
0x000ee9a4: ret 0xe989; 
0x000ec6f4: ret 0xe9c0; 
0x0002dd89: ret 0xe; 
0x001298fa: ret 0xea29; 
0x00079c5b: ret 0xea39; 
0x000416a1: ret 0xea81; 
0x000b2a25: ret 0xea83; 
0x000cf3f6: ret 0xeac0; 
0x000581b3: ret 0xeac1; 
0x0008dd7c: ret 0xead1; 
0x000c607b: ret 0xead3; 
0x000a0661: ret 0xeb01; 
0x001177e9: ret 0xeb03; 
0x000e645d: ret 0xeb04; 
0x000d74da: ret 0xeb27; 
0x00117766: ret 0xeb53; 
0x0008b738: ret 0xeb75; 
0x0004a9d9: ret 0xeb83; 
0x00161d7a: ret 0xebe3; 
0x00160f7a: ret 0xebf1; 
0x0015c57a: ret 0xec3b; 
0x00055379: ret 0xec75; 
0x0007513a: ret 0xec7; 
0x000254ae: ret 0xec83; 
0x00058dd6: ret 0xed01; 
0x0002b468: ret 0xed31; 
0x0015fe1b: ret 0xed85; 
0x0011721a: ret 0xede7; 
0x001171ea: ret 0xee17; 
0x000dd097: ret 0xee75; 
0x0005417f: ret 0xee7f; 
0x0013387a: ret 0xeec8; 
0x0012b68a: ret 0xef4a; 
0x0002c06a: ret 0xef5; 
0x0003a672: ret 0xef76; 
0x000eac4e: ret 0xef7f; 
0x000ea175: ret 0xef89; 
0x0011706a: ret 0xef97; 
0x00198a00: ret 0xefc1; 
0x0011701a: ret 0xefe7; 
0x00113f58: ret 0xeff0; 
0x0004046a: ret 0xf001; 
0x0011e6f4: ret 0xf009; 
0x001933af: ret 0xf00; 
0x0003173e: ret 0xf01; 
0x000b33c1: ret 0xf029; 
0x00077bc0: ret 0xf02; 
0x00116fca: ret 0xf037; 
0x00050499: ret 0xf039; 
0x00193531: ret 0xf03; 
0x000a15b6: ret 0xf04; 
0x00193541: ret 0xf05; 
0x000c2ad8: ret 0xf075; 
0x001199bf: ret 0xf076; 
0x0004c396: ret 0xf083; 
0x0003d3d9: ret 0xf089; 
0x00026cb7: ret 0xf08; 
0x000cd069: ret 0xf0; 
0x00084725: ret 0xf0b8; 
0x0013fbe1: ret 0xf0c; 
0x0012bf2a: ret 0xf0e2; 
0x000940a1: ret 0xf0f; 
0x0007cb5f: ret 0xf101; 
0x0006c7d1: ret 0xf10; 
0x000e0b68: ret 0xf139; 
0x0002dfac: ret 0xf175; 
0x00106e7a: ret 0xf187; 
0x00053327: ret 0xf189; 
0x00106e1a: ret 0xf1e7; 
0x0009de8b: ret 0xf201; 
0x00056ec4: ret 0xf20; 
0x0019621d: ret 0xf27e; 
0x0008b4cb: ret 0xf283; 
0x00026080: ret 0xf289; 
0x000d6d6a: ret 0xf297; 
0x00136d3a: ret 0xf2c7; 
0x0003af74: ret 0xf31d; 
0x001161e6: ret 0xf372; 
0x000f443f: ret 0xf375; 
0x000872be: ret 0xf389; 
0x0003a8be: ret 0xf3c3; 
0x0005224f: ret 0xf40; 
0x0009ad9e: ret 0xf474; 
0x00065c59: ret 0xf475; 
0x001195ba: ret 0xf4e6; 
0x00052309: ret 0xf50; 
0x000ce18a: ret 0xf51f; 
0x0019626a: ret 0xf572; 
0x000b33b1: ret 0xf601; 
0x0016a749: ret 0xf604; 
0x00187704: ret 0xf608; 
0x0016be31: ret 0xf60; 
0x0010818f: ret 0xf631; 
0x000a18c7: ret 0xf66; 
0x0004f385: ret 0xf672; 
0x000a133f: ret 0xf685; 
0x000b7bae: ret 0xf693; 
0x000b508a: ret 0xf6b1; 
0x00196f9e: ret 0xf6e9; 
0x001722ca: ret 0xf71f; 
0x0009c99b: ret 0xf739; 
0x0008cbd1: ret 0xf75b; 
0x0009bb4e: ret 0xf775; 
0x000b61ba: ret 0xf796; 
0x00043203: ret 0xf7ff; 
0x0009e9c5: ret 0xf800; 
0x00058e4e: ret 0xf801; 
0x00102e12: ret 0xf80; 
0x0013e7b1: ret 0xf839; 
0x0002c62a: ret 0xf883; 
0x000508b9: ret 0xf889; 
0x000d9a37: ret 0xf8c1; 
0x0009c17e: ret 0xf901; 
0x0009e9ba: ret 0xf90e; 
0x00024cba: ret 0xf92b; 
0x0009a336: ret 0xf943; 
0x0011d903: ret 0xf94d; 
0x0011dbf3: ret 0xf94f; 
0x0011e1fe: ret 0xf952; 
0x000588ba: ret 0xf962; 
0x000e097c: ret 0xf980; 
0x00031d4d: ret 0xf981; 
0x000f0175: ret 0xf983; 
0x0007724f: ret 0xf989; 
0x000ff35a: ret 0xf9a3; 
0x000721aa: ret 0xf; 
0x0009a0e2: ret 0xfa01; 
0x001979b1: ret 0xfa09; 
0x000ca0de: ret 0xfa19; 
0x00054bce: ret 0xfa29; 
0x0007cc16: ret 0xfa39; 
0x000f4cf3: ret 0xfa73; 
0x00079100: ret 0xfa7b; 
0x00053edf: ret 0xfa80; 
0x00024bfe: ret 0xfa83; 
0x00075e7a: ret 0xfaa2; 
0x0002ebf5: ret 0xfac1; 
0x000f9a46: ret 0xfb89; 
0x000d0114: ret 0xfbc1; 
0x0006189a: ret 0xfbe8; 
0x000723e7: ret 0xfc0; 
0x0013f24a: ret 0xfc9f; 
0x0003b0d3: ret 0xfc; 
0x000ea5fa: ret 0xfcb0; 
0x000e87aa: ret 0xfcb5; 
0x000e0b5a: ret 0xfd31; 
0x001362ca: ret 0xfd37; 
0x000dd9ba: ret 0xfd59; 
0x0005891a: ret 0xfd7b; 
0x0003627b: ret 0xfd86; 
0x000d622a: ret 0xfdd7; 
0x000d6d3a: ret 0xfdd8; 
0x000703e7: ret 0xfe0; 
0x0005b8da: ret 0xfe0d; 
0x000d1cde: ret 0xfe29; 
0x00032269: ret 0xfe81; 
0x0002af0f: ret 0xfe83; 
0x0019491a: ret 0xfe89; 
0x000d611a: ret 0xfee7; 
0x00047c7a: ret 0xfef8; 
0x00047a7a: ret 0xfefa; 
0x001029af: ret 0xff00; 
0x0003452c: ret 0xff03; 
0x001465ca: ret 0xff08; 
0x0008452f: ret 0xff0; 
0x00035c31: ret 0xff25; 
0x001961a1: ret 0xff31; 
0x001360ca: ret 0xff37; 
0x0018f0f4: ret 0xff3; 
0x0016bd3e: ret 0xff3c; 
0x00057e35: ret 0xff50; 
0x00068e14: ret 0xff52; 
0x0004381c: ret 0xff56; 
0x000b58b6: ret 0xff65; 
0x000c05aa: ret 0xff6f; 
0x000e394a: ret 0xff7d; 
0x00125986: ret 0xff80; 
0x00060495: ret 0xff83; 
0x00095c37: ret 0xff85; 
0x00064cba: ret 0xffb1; 
0x00021e17: ret 0xffb8; 
0x0002479c: ret 0xffba; 
0x00044582: ret 0xffbf; 
0x001011da: ret 0xffcc; 
0x0012c06a: ret 0xffd4; 
0x00061eba: ret 0xffdf; 
0x0005d3c0: ret 0xffe1; 
0x00043e2c: ret 0xffe3; 
0x000d5ab1: ret 0xffe5; 
0x000c019a: ret 0xffea; 
0x00153eb8: ret 0xffec; 
0x00043584: ret 0xffee; 
0x000f5c33: ret 0xfff0; 
0x000ef9ea: ret 0xfff1; 
0x00032e4e: ret 0xfff2; 
0x000e3e49: ret 0xfff3; 
0x0012a76a: ret 0xfff4; 
0x000b97b2: ret 0xfff5; 
0x001159a2: ret 0xfff6; 
0x000e7536: ret 0xfff7; 
0x000573d5: ret 0xfff8; 
0x0006c0e1: ret 0xfff9; 
0x00067b13: ret 0xfffa; 
0x0003254e: ret 0xfffb; 
0x00035691: ret 0xfffc; 
0x000278de: ret 0xfffd; 
0x0002013a: ret 0xfffe; 
0x0002003a: ret 0xffff; 
0x0002a1e6: ret 1; 
0x0002a88a: ret 2; 
0x000b3dd7: ret 3; 
0x00036483: ret 4; 
0x00059187: ret 5; 
0x0004836a: ret 6; 
0x0002679f: ret 7; 
0x0008781d: ret 8; 
0x0005944e: ret 9; 
0x001208e9: ret; 
0x000ddce5: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00157b74: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00098a57: retf 0x13; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000804bf: retf 0x1e73; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000b29b1: retf 0x2c76; add eax, ecx; ret; 
0x0007311b: retf 0x4376; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000b622f: retf 0x474; test edx, edx; jne 0xb6228; ret; 
0x0009095e: retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x0007ee3b: retf 0x5276; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00070ac2: retf 0x5376; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0011e963: retf 0x5d5f; ret; 
0x00071333: retf 0x6a76; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00055ad3: retf 0x748d; add dh, dh; ret; 
0x0007d57c: retf 0x7976; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0010fa89: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0007c3bd: retf 0x830f; mov esp, 0x83000005; in al, dx; or byte ptr [ebp + 0x52282454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0007060e: retf 0x860f; imul eax, dword ptr [ecx], 0; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x001145a3: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0004f1f3: retf 0x950f; ret; 
0x0019966e: retf 0x9c89; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xb60f; 
0x000df5d7: retf 0xb60f; or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x000b2fbe: retf 0xc801; ret; 
0x000b275f: retf 0xc839; ja 0xb2770; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x0007f6d3: retf 0xd039; jbe 0x7f700; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00084552: retf 0xd101; out dx, al; je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084a52: retf 0xd101; out dx, al; je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b2fb7: retf 0xd285; je 0xb2f90; bsr ecx, edx; add eax, ecx; ret; 
0x000dcdbd: retf 0xd285; je 0xdcdc9; test eax, eax; jne 0xdcdc9; pop ecx; jmp ecx; 
0x0008ca8e: retf 0xe902; ret; 
0x0002e9b2: retf 0xe; add byte ptr [ebx - 0x1cf6b], cl; dec dword ptr [ebp - 0x68e237e]; call dword ptr [eax - 0x73]; 
0x0014f7b1: retf 0xec75; add esp, 8; pop ebx; ret; 
0x000c8dda: retf 0xf375; ret; 
0x000759d1: retf 0xf477; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001949ad: retf 0xf66; xlatb; ret; 
0x0003af6d: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000ce785: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x0011f2a2: retf 0xfe92; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000411b2: retf 0xfee6; dec dword ptr [ecx + 0x50808dc7]; jbe 0x411b6; call dword ptr [eax - 0x73]; 
0x00103649: retf 0xfff1; add esp, 0x18; pop ebx; ret; 
0x0006df19: retf 0xfff8; add edx, ebx; jmp edx; 
0x0012fd32: retf 0xfffb; jmp dword ptr [esi - 0x70]; 
0x0018e7a4: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x00152ecc: retf 0xffff; add esp, 0x1c; ret; 
0x0018ec3b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x0008a85a: retf; aas; stc; call dword ptr [eax - 0x18]; 
0x000e561a: retf; add al, 0; add byte ptr [ebx - 0x7ad3dbbc], cl; ror byte ptr [edi], 0x85; ret 8; 
0x0018feb8: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00073ea7: retf; cli; jmp dword ptr [esi - 0x70]; 
0x00103169: retf; dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121058: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0005cfb6: retf; out 0xff, eax; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13348]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x0008b08e: retf; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0013a114: retf; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0013a114: retf; pop esp; stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x00194b34: retf; test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x000dd17a: rol bh, cl; sti; jmp dword ptr [esi - 0x70]; 
0x0015f6c5: rol bl, 0xf3; dec dword ptr [ebp - 0xd023f4a]; call dword ptr [ebp - 0x73]; 
0x000e0108: rol byte ptr [0x878d0000], 0xc0; inc edi; stc; call dword ptr [eax - 0x73]; 
0x00153429: rol byte ptr [eax + 0x440f0038], cl; ret 0x5e5b; 
0x0003a9ad: rol byte ptr [eax + 0xd75003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008b458: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x0013eca4: rol byte ptr [eax + eax*8 + 0x5e5b0775], 0x5f; ret; 
0x0019d7c5: rol byte ptr [eax + eax*8 - 0x3b7cf98b], 4; pop ebx; pop esi; ret; 
0x001223c7: rol byte ptr [eax + eax], 0x81; lds esi, ptr [esi]; cmp al, 0x10; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x000aafda: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00068e0e: rol byte ptr [eax - 0x6bf0a705], cl; ret 0xff52; 
0x0009a137: rol byte ptr [eax - 0x6bf0cf05], cl; ret 0xb60f; 
0x0009a0dc: rol byte ptr [eax - 0x6bf0cf07], cl; ret 0xfa01; 
0x0015346f: rol byte ptr [eax - 0x7bf0ffc6], 0x13; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00066e99: rol byte ptr [eax - 0x89a43], cl; call ptr [eax + 0xf]; xchg esp, eax; ret 0x5352; 
0x000c8dd1: rol byte ptr [eax*4 - 0x74f68b2e], 0x10; cmp edx, ecx; jne 0xc8dd0; ret; 
0x000c8e08: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x000dc48f: rol byte ptr [eax], 0; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0016891c: rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x001518b4: rol byte ptr [eax], 0; add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x00166d65: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb77b], cl; dec dword ptr [ecx - 0xbb6b]; jmp dword ptr [ebp - 0x5f]; 
0x00177627: rol byte ptr [eax], 0xf7; ret 0xf; 
0x000de0c6: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115e1e: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x000df396: rol byte ptr [eax], 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00020f43: rol byte ptr [eax], 1; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000de176: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115eee: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0002261e: rol byte ptr [eax], cl; add byte ptr [ebp - 0x691837f], cl; call dword ptr [eax - 0x73]; 
0x0003a8e4: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00021c32: rol byte ptr [eax], cl; neg edx; ret; 
0x0011aee1: rol byte ptr [ebp + 0x5b0a74d2], 0x5e; pop edi; ret; 
0x000b3300: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0009f277: rol byte ptr [ebp - 0x3a76f040], 1; add byte ptr [eax], al; add byte ptr [ebx + 0x4d89ac55], cl; aam 0x29; ret 0xb48d; 
0x0007a5ac: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00129f3b: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x001219e6: rol byte ptr [ebp - 0x7c398b2e], 0xec; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x001579ae: rol byte ptr [ebp - 0x7cb28b40], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000dc3af: rol byte ptr [ebp - 0xfbbf001], 0xb8; jb 0xdc3b8; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e9364: rol byte ptr [ebx + 0x2f740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000939c1: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x00048b86: rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x000dc0d2: rol byte ptr [ebx + 0x440ffff8], cl; ret 0xc35b; 
0x000a4f17: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000a4f9d: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xa4e61; pop ebx; ret; 
0x000a4fbb: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xa4e61; pop ebx; ret; 
0x000a503f: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000a50b3: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xa4e61; pop ebx; ret; 
0x0004b437: rol byte ptr [ebx + 0x4e8d10c4], 1; add al, 3; add cl, byte ptr [edi]; xchg edx, eax; ret 0x689; 
0x0007c724: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0003aff6: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x00049c47: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x00056627: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0011a7a8: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0011b228: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x0009ba96: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x00083f5f: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00090d71: rol byte ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x0007e682: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x000cd26d: rol byte ptr [ebx + 0x5e5b2cc4], cl; pop edi; pop ebp; ret; 
0x0003c90a: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x0003d444: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x000a16b7: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a16c4: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a16d1: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000a1524: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x8a0], dl; ret; 
0x000a14f4: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0x9c0], dl; ret; 
0x000eff95: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0015d6d4: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc8bff7d], cl; call dword ptr [eax - 0x73]; 
0x0015ac26: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcb74f7d], cl; call dword ptr [eax - 0x73]; 
0x0004acc4: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x000dced5: rol byte ptr [ebx - 0x1f7cfb3c], 0xc; pop ebx; pop esi; ret; 
0x00157a1a: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x00085ad9: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0008f0e7: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00078832: rol byte ptr [ebx - 0x3b7cfe20], 1; adc al, 0x5b; pop esi; ret; 
0x000b2f52: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000b2f62: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000b2f72: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f82: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x001171f5: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx - 0x134]; mov dword ptr gs:[edx], eax; mov eax, 0xffffffff; ret; 
0x000d6c87: rol byte ptr [ebx - 0x3fcef73c], cl; pop ebx; ret; 
0x000e93a1: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0013e3de: rol byte ptr [ebx - 0x4614fb40], 0xe8; aaa; sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x00101ca5: rol byte ptr [ebx - 0x47cfb14], cl; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x0011f2ec: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x000f6abb: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0011f2ab: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x001591c8: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0008f215: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00047d07: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0007dbc3: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00157469: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015860e: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0009955a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0009a0cf: rol byte ptr [ebx - 0x69f0f606], 1; ret 0xb60f; 
0x0016e621: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x00162152: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0008aded: rol byte ptr [ebx - 0x76a4ef3c], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00135ebe: rol byte ptr [ebx - 0x77ca816], 1; or dword ptr [edi], ecx; inc edi; ret 0xf983; 
0x000971e5: rol byte ptr [ebx - 0x78f0f007], 1; mov eax, dword ptr [0x9000000]; ret; 
0x00083d75: rol byte ptr [ebx - 0x7a72f314], cl; jo 0x83dfb; stc; call dword ptr [eax - 0x18]; 
0x001415e5: rol byte ptr [ebx - 0x7c9aef3c], cl; cmp byte ptr [edi + 0xf], ch; xchg esp, eax; ret 0xdaf7; 
0x00151e25: rol byte ptr [ebx - 0x7f72f714], 1; into; popal; stc; call dword ptr [eax + 0x56]; 
0x00076a92: rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x00193cd6: rol byte ptr [ebx], 0x5f; ret; 
0x00156cfa: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x00131416: rol byte ptr [ebx], 1; add byte ptr [0xf4be7], al; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x000de886: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x0011dbff: rol byte ptr [ecx + 0x408bfff6], 1; jl 0x11db90; push esi; add al, 0x89; ret 0xe8c1; 
0x0006f384: rol byte ptr [ecx + 0x85fa], 0; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000de836: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000fa351: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x001310c5: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001310cb: rol byte ptr [ecx + 0xf9], 0x80; cmove eax, edx; ret; 
0x00157b27: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000b4dcf: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0003e350: rol byte ptr [ecx + ecx*8 - 0x7c3dbbf1], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b622c: rol byte ptr [ecx + edi], 0xca; je 0xb6236; test edx, edx; jne 0xb6228; ret; 
0x000de86b: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000883d7: rol byte ptr [ecx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x00146dfe: rol byte ptr [ecx], 0; add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137b], cl; jmp dword ptr [ebp - 0x39]; 
0x00146926: rol byte ptr [ecx], 0; add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx - 0x1137f], cl; jmp dword ptr [ebp - 0x39]; 
0x0005417a: rol byte ptr [ecx], 0x29; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0010ab14: rol byte ptr [ecx], 0x31; sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x000e7811: rol byte ptr [ecx], 0x39; lds esi, ptr [edx + ebx + 0x39]; ret; 
0x0009aa01: rol byte ptr [ecx], 0x39; ret 0x1976; 
0x00050fa1: rol byte ptr [ecx], 0x39; ret 0x3a74; 
0x000dd089: rol byte ptr [ecx], 0x39; ret 0xb74; 
0x0009ba85: rol byte ptr [ecx], 0x39; ret 0xc72; 
0x000f4f38: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x0011cd0a: rol byte ptr [ecx], 0x39; ret 0xe075; 
0x000f2181: rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0011a5a1: rol byte ptr [ecx], 0x39; ret 0xe975; 
0x000dd094: rol byte ptr [ecx], 0x39; ret 0xee75; 
0x000eac4b: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0003d151: rol byte ptr [ecx], 0x39; ret; 
0x000e88bc: rol byte ptr [ecx], 0x39; ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x000b528a: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00194091: rol byte ptr [ecx], 0x5f; ret; 
0x0009c429: rol byte ptr [ecx], 0x80; jo 0x9c42d; sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x0009d024: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000917e8: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x000f005e: rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x0010da7e: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x00025809: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x000255ea: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0007d95c: rol byte ptr [ecx], 0x83; ret 0x8b01; 
0x00024c17: rol byte ptr [ecx], 0x83; ret; 
0x0009d7f0: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x0009b92e: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00093663: rol byte ptr [ecx], 0x89; cmp ah, 1; add byte ptr [eax], al; ret; 
0x001392fc: rol byte ptr [ecx], 0x89; inc ebx; sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x000c3400: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4e8b; 
0x00170105: rol byte ptr [ecx], 0x89; ret 0x5675; 
0x0012d8b1: rol byte ptr [ecx], 0x89; ret 0xe2c1; 
0x001298f7: rol byte ptr [ecx], 0x89; ret 0xea29; 
0x00072009: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x0012d501: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000b2e76: rol byte ptr [ecx], 0xc8; ret; 
0x000b31dc: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000b3342: rol byte ptr [ecx], 0xd0; ret; 
0x000b27f7: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000b2945: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000a0d01: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xa0d00; pop ebx; ret; 
0x0005f5f9: rol byte ptr [ecx], 0xf; test edi, ebp; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x0019218c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x000a4c8c: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00093606: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x0004b39e: rol byte ptr [ecx], 1; ret 0x458b; 
0x00143cf9: rol byte ptr [ecx], 1; ret; 
0x000a16ab: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000f3112: rol byte ptr [ecx], cl; ret; 
0x000a16b5: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000a16c2: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000a16cf: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x000ebe89: rol byte ptr [ecx], cl; ror byte ptr [ecx], cl; ret 0x9674; 
0x000cbf60: rol byte ptr [edi + 0x3d8883], 0; cmp eax, 1; jg 0xcbf90; add esp, 8; pop ebx; ret; 
0x000e0115: rol byte ptr [edi - 7], 1; call dword ptr [eax - 0x18]; 
0x00097348: rol byte ptr [edi], 0; add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00098d75: rol byte ptr [edi], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret; 
0x00096f56: rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x00094957: rol byte ptr [edi], 0; add byte ptr [ecx], bh; ret; 
0x00193cfc: rol byte ptr [edi], 0x5f; ret; 
0x0004abb9: rol byte ptr [edx], 0; add byte ptr [eax], al; call 0x4ab70; add eax, ebx; jmp eax; 
0x000a0f07: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00194096: rol byte ptr [edx], 0x5f; ret; 
0x001940aa: rol byte ptr [esi], 0x5f; ret; 
0x000c3de3: rol byte ptr [esi], cl; add byte ptr [ebp - 0x6675b7b], cl; call dword ptr [eax - 0x73]; 
0x0008d987: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0013118a: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001638fc: rol cl, 0xff; inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000847d3: rol cl, 1; call 0x893fbbdd; clc; call dword ptr gs:[0x10]; 
0x00143fc7: rol cl, 1; call 0xe8dc2aed; dec esi; sar dh, 1; jmp dword ptr [esi - 0x70]; 
0x000a0fe4: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000c8c0a: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x00092454: rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0018767c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0016a5e9: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0008619d: rol dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x00034e0b: rol dword ptr [eax], 0; add byte ptr [ebp - 0x6b42f55], cl; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x000b375c: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xb3764; inc eax; pop edi; ret; 
0x000de042: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0017054b: rol dword ptr [eax], 1; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x000de072: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00193147: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b2c31: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b2f06: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b2ed7: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00193186: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012ea72: rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x00192c9f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000b2bf7: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00092dfb: rol dword ptr [ebp - 0x72fa862e], cl; add al, 0x12; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000f9fab: rol dword ptr [ebp - 0x76f38b01], 1; ret 0x4089; 
0x00070c22: rol dword ptr [ebx + 0x4874fff9], 0x89; ret; 
0x00094f78: rol dword ptr [ebx + 0x4c8908e1], 0x24; adc al, 0xf; test edx, esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010b5dc: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x0010a5da: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x0014ab3c: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x0015fbe1: rol dword ptr [ebx + 0x788308c0], 0xf8; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x0013efc9: rol dword ptr [ebx + 0x79760ffa], 0x8b; add dword ptr [ecx], edi; ret 0x7372; 
0x0015f6f0: rol dword ptr [ebx + ecx*4], 0x47; add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0012a032: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x000920c6: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0019a524: rol dword ptr [ebx - 0x67cf01f], 1; add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x00084d29: rol dword ptr [ebx], 0x83; clc; add esi, dword ptr [eax + ecx + 0x5b]; pop esi; pop edi; ret; 
0x001469c1: rol dword ptr [ebx], 1; pushfd; xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x00144cb6: rol dword ptr [ecx], 0; add byte ptr [eax - 0x73], dl; sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x000e5ddd: rol dword ptr [ecx], 0x29; ret 0xd301; 
0x0005bce5: rol dword ptr [ecx], 0x83; out dx, al; add dword ptr [ecx], edi; ret 0x850f; 
0x00087d05: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000565d4: rol dword ptr [ecx], 0x83; ret 0x8404; 
0x000c30e6: rol dword ptr [ecx], 0x83; ret 0x8b01; 
0x0003ef89: rol dword ptr [ecx], 0x83; ret 0x8d01; 
0x000a15e4: rol dword ptr [ecx], 0x83; ret 0xf01; 
0x000f5cd8: rol dword ptr [ecx], 0x83; ret; 
0x0009b3b9: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000b839f: rol dword ptr [ecx], 0xeb; les ecx, ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0003c54b: rol dword ptr [ecx], 1; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000f0172: rol dword ptr [ecx], 9; ret 0xf983; 
0x000c945e: rol dword ptr [ecx], cl; ret; 
0x000ac40b: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00097ece: rol dword ptr [edx], 0x75; cmp dword ptr [ebx - 0x15f7b], ecx; jmp dword ptr [ebp - 0x75]; 
0x001619e7: rol dword ptr [edx], 0x89; ret; 
0x00048567: rol dword ptr [esi], 0x83; ret 0x901; 
0x001463ed: rol dx, 8; add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x001463f4: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x00037fc6: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000cda62: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x0008b4f9: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008b42e: rol ecx, 0xe9; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00089c78: rol ecx, 0xf8; add eax, dword ptr [ecx]; ret 0x8966; 
0x00035a30: rol ecx, 1; call 0x10ed1b56; or eax, ecx; ret; 
0x001463ee: rol edx, 8; add edx, 1; rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x001463f5: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; ret; 
0x0002146f: rol edx, 9; mov dword ptr [eax + 0x1978], edx; pop ebx; pop esi; ret; 
0x000213cf: rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000a12f3: ror ah, 1; call 0xc24e22f9; ret; 
0x0013109d: ror ax, 8; ret; 
0x001456b8: ror byte ptr [eax + 0xf0c244c], 0x94; ret 0xa3c; 
0x0011e401: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x000f5cd2: ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x000f9b36: ror byte ptr [eax], 0x50; call 0xb3910; add esp, 0x1c; ret; 
0x001940b4: ror byte ptr [eax], 0x5f; ret; 
0x0015fbe3: ror byte ptr [eax], 0x83; js 0x15fbe0; push dword ptr [ebp + esi*2 - 0x7d]; ret 0x3901; 
0x0018f5a5: ror byte ptr [eax], 0x83; ret 0x5608; 
0x0018e2e6: ror byte ptr [eax], 0x83; ret 0x5708; 
0x00188f21: ror byte ptr [eax], 0x83; ret 0x8308; 
0x00149efe: ror byte ptr [eax], 0x83; ret 0x8908; 
0x00187701: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0015adfb: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0015add8: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x0004a5ea: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x000cb289: ror byte ptr [ebp + 0x480f0750], 1; ret 0xb70f; 
0x000254a8: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x00196ad3: ror byte ptr [ebp + 0x490f1f42], cl; ret 0xf8c1; 
0x0019619b: ror byte ptr [ebp + 0x490f1f42], cl; ret 0xff31; 
0x0016f21c: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00087798: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011b969: ror byte ptr [ebp + 0xb6], 1; add byte ptr [ebp - 0x74f38b40], al; push eax; add al, 0xf6; ret 0xf01; 
0x00071801: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0009dad5: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x0002407c: ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x00191df8: ror byte ptr [ebp - 0x7af0efc0], cl; ret 0; 
0x0015eb54: ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00143737: ror byte ptr [ebx + 0x390c2454], 1; ret 0x307e; 
0x000f4f01: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x00124479: ror byte ptr [ebx + 0x3980044a], 0; je 0x124488; ret; 
0x000cbbb9: ror byte ptr [ebx + 0x3d5483], cl; add byte ptr [ecx], bh; cmp dword ptr [eax + 0x3d], 0; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb38b; 
0x0015eb0c: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x15eb27; add esp, 0x1c; ret; 
0x001232cb: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00113f29: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0019ab27: ror byte ptr [ebx + 0x9282454], 1; ret 0x448b; 
0x0003d435: ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00150a45: ror byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00122bff: ror byte ptr [ebx - 0x17c7dba4], 0xd7; out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012269f: ror byte ptr [ebx - 0x17cbdba4], 0x37; cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0012226f: ror byte ptr [ebx - 0x17cbdba4], 0x67; stc; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012254f: ror byte ptr [ebx - 0x17cbdba4], 0x87; div ch; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000cf670: ror byte ptr [ebx - 0x19b37c6c], 0xf8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00087e26: ror byte ptr [ebx - 0x41f7dbb4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001148bf: ror byte ptr [ebx - 0x749bdbac], 0x5c; and al, 0x60; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x0011fc0f: ror byte ptr [ebx - 0x74afdba4], 0x54; and al, 0x54; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x001142c5: ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000cd71f: ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f9910: ror byte ptr [ebx - 0x74cfdba4], 0x74; and al, 0x34; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00125298: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x125170; add esp, 4; ret; 
0x0013c289: ror byte ptr [ebx - 0x769a3bbb], 6; mov eax, 6; mov ebx, dword ptr [ebp - 0x30]; call dword ptr gs:[0x10]; 
0x00034ef2: ror byte ptr [ebx - 7], 1; dec dword ptr [edi]; inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x00034e11: ror byte ptr [ebx - 7], 1; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0011d10a: ror byte ptr [ebx - 7], cl; call dword ptr [eax + 0x57]; 
0x00193d23: ror byte ptr [ebx], 0x5f; ret; 
0x00089259: ror byte ptr [ebx], 0x83; clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00088529: ror byte ptr [ebx], 0x83; clc; or ecx, dword ptr [edi]; xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x000de76e: ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000de621: ror byte ptr [ebx], 1; mov eax, 0x7f; mov edx, 0xfde8; pop ebx; cmove eax, edx; ret; 
0x000de76c: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x000711ae: ror byte ptr [ecx + 0x14c48303], 1; pop ebx; pop esi; ret; 
0x001625e7: ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x0012107b: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c30e2: ror byte ptr [ecx + 0x1c183d7], 0x83; ret 0x8b01; 
0x00044899: ror byte ptr [ecx + 0x23d231d7], cl; jl 0x448c5; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000baef9: ror byte ptr [ecx + 0x23d231d7], cl; jl 0xbaf25; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000754a6: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0007aa16: ror byte ptr [ecx + 0x5bd08903], cl; pop esi; ret; 
0x0007aebe: ror byte ptr [ecx + 0x5bd08903], cl; ret; 
0x00113ed2: ror byte ptr [ecx + 0x5e5b5053], 0x5f; ret; 
0x00038203: ror byte ptr [ecx + 0x5f5e5b16], 0x5d; ret; 
0x001435d0: ror byte ptr [ecx + 0x5f5e5b17], 0x5d; ret; 
0x0005f90c: ror byte ptr [ecx + 0x5f5e5b3b], cl; ret; 
0x0009ed87: ror byte ptr [ecx + 0x75cb38f1], cl; adc eax, 0x83d4758b; ret 0xf01; 
0x000a030b: ror byte ptr [ecx + 0x75cb38f9], cl; adc eax, 0x83d47d8b; ret 0xf01; 
0x00102c79: ror byte ptr [ecx + 0x8bee9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00079139: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x000dc3ce: ror byte ptr [ecx + 0xf082444], 0x9f; ret; 
0x0008512e: ror byte ptr [ecx + 0xf0b8e9], 1; add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000a135f: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000d1ce4: ror byte ptr [ecx + 0xf182474], cl; dec ecx; ret 0xc483; 
0x00096704: ror byte ptr [ecx + 0xf6c244c], 1; inc edi; ret 0x5c89; 
0x0009631f: ror byte ptr [ecx + 0xf78246c], 1; inc edi; ret 0x548b; 
0x0004ea41: ror byte ptr [ecx + 0xf983da], 0x19; ret 0xba; 
0x000420c1: ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x00055b83: ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x000b853c: ror byte ptr [ecx + 0xffd89e8], 0x94; ret 0xf883; 
0x00035e08: ror byte ptr [ecx - 0x22f7dbbc], 1; inc esp; and al, 4; ret; 
0x0004c5a4: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x00035a78: ror byte ptr [ecx - 0x24f3dbbc], 1; insb byte ptr es:[edi], dx; and al, 4; ret; 
0x00036148: ror byte ptr [ecx - 0x26fbdbbc], 1; inc esp; and al, 4; ret; 
0x000825bb: ror byte ptr [ecx - 0x399af7be], 5; inc byte ptr [eax + eax]; add byte ptr [eax], al; mov dword ptr gs:[0x7c], edx; ret; 
0x0003715a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x00113f76: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0005c662: ror byte ptr [ecx - 0x4577b], 1; call dword ptr [eax - 0x7d]; 
0x0003d14a: ror byte ptr [ecx - 0x6fef1436], 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00197eeb: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x6c89; 
0x000ca20b: ror byte ptr [ecx - 0x7a97dba4], cl; ror byte ptr [edi], 0x48; ret 0x548b; 
0x00152d91: ror byte ptr [ecx - 0x7ce7dbac], 1; ret 0xf01; 
0x00196261: ror byte ptr [ecx - 0x7cffeab4], cl; ret 0x3904; 
0x0009a0d8: ror byte ptr [ecx - 0x7f2dce29], cl; stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x001940b9: ror byte ptr [ecx], 0x5f; ret; 
0x0014da0c: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x0011e404: ror byte ptr [ecx], 0xc8; ret; 
0x00198ad5: ror byte ptr [ecx], cl; fisttp word ptr [ecx]; test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x000ebe19: ror byte ptr [ecx], cl; ret 0x7a75; 
0x000ebe8b: ror byte ptr [ecx], cl; ret 0x9674; 
0x0012e67d: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x87; salc; push edi; stc; call dword ptr [eax - 1]; 
0x0011cd5d: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x00129922: ror byte ptr [edi], 0x44; ret 0x7789; 
0x001272bd: ror byte ptr [edi], 0x44; ret 0x8d50; 
0x0011c99c: ror byte ptr [edi], 0x44; ret 0xc483; 
0x001031a9: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00023394: ror byte ptr [edi], 0x44; ret; 
0x000832e0: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x0011a5c2: ror byte ptr [edi], 0x45; ret 0xc084; 
0x0012a653: ror byte ptr [edi], 0x48; ret 0x4639; 
0x000ca211: ror byte ptr [edi], 0x48; ret 0x548b; 
0x0002c147: ror byte ptr [edi], 0x48; ret 0xc083; 
0x0003a9ed: ror byte ptr [edi], 0x48; ret 0xc483; 
0x0012a1aa: ror byte ptr [edi], 0x48; ret 0xc629; 
0x000809c1: ror byte ptr [edi], 0x48; ret 0xff50; 
0x00114d74: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x000d91d4: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x00090618: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x00100a8a: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x00193d4c: ror byte ptr [edi], 0x5f; ret; 
0x00139706: ror byte ptr [edi], 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x000e3430: ror byte ptr [edi], 0x84; add dword ptr [esi], 0x2fbb0000; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x0005b51c: ror byte ptr [edi], 0x84; and dword ptr [edx], eax; add byte ptr [ebx - 0x5db73], cl; call ecx; 
0x0011d134: ror byte ptr [edi], 0x84; and eax, 0x83000005; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x000fbe67: ror byte ptr [edi], 0x84; cmp al, byte ptr [eax + eax]; add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0011d16a: ror byte ptr [edi], 0x84; dec edi; add eax, 0xec830000; or byte ptr [ebp - 0x6b3577d], cl; call dword ptr [eax + 0x57]; 
0x00061d8f: ror byte ptr [edi], 0x84; dec edx; sub al, byte ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0014daa8: ror byte ptr [edi], 0x84; imul eax, dword ptr [ecx], 0xec830000; or byte ptr [ebp - 0x69e5a7d], cl; call dword ptr [eax - 1]; 
0x0011d3bc: ror byte ptr [edi], 0x84; inc eax; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; rcl byte ptr [ecx - 7], cl; call dword ptr [eax + 0x57]; 
0x0002409e: ror byte ptr [edi], 0x84; lock add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x000f47d0: ror byte ptr [edi], 0x84; mov dword ptr [0xf000001], eax; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000cc25c: ror byte ptr [edi], 0x84; mov ebp, 0x83000003; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x0011d3d7: ror byte ptr [edi], 0x84; or byte ptr [ebx], 0; add byte ptr [ebx - 0x7c72f714], al; not byte ptr [ecx - 7]; call dword ptr [eax + 0x57]; 
0x0011d40d: ror byte ptr [edi], 0x84; out dx, eax; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x0011d242: ror byte ptr [edi], 0x84; pop ds; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x000cddd9: ror byte ptr [edi], 0x84; push eax; add eax, dword ptr [eax]; add byte ptr [ecx + 0x800008], al; add byte ptr [ebx - 0x13b7d], cl; jmp dword ptr [ebp - 0x75]; 
0x00080edf: ror byte ptr [edi], 0x84; push edx; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011d2e4: ror byte ptr [edi], 0x84; pushal; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; and dword ptr [eax - 7], edx; call dword ptr [eax + 0x57]; 
0x0005b33c: ror byte ptr [edi], 0x84; rcl byte ptr [eax + eax], cl; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0002ccc7: ror byte ptr [edi], 0x84; ret 0; 
0x000607b2: ror byte ptr [edi], 0x84; ret 0x12; 
0x0003eb75: ror byte ptr [edi], 0x84; ret 0x24; 
0x0011d45b: ror byte ptr [edi], 0x84; ret 0xd; 
0x000c0197: ror byte ptr [edi], 0x84; ret 0xffea; 
0x0002d317: ror byte ptr [edi], 0x84; ret 1; 
0x00059107: ror byte ptr [edi], 0x84; ret 2; 
0x00166051: ror byte ptr [edi], 0x84; ret 3; 
0x0002bcdd: ror byte ptr [edi], 0x84; ret; 
0x00168919: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x001518b1: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x0009856b: ror byte ptr [edi], 0x84; salc; add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x0002c0b0: ror byte ptr [edi], 0x84; sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x0011d427: ror byte ptr [edi], 0x84; sbb ecx, dword ptr [eax + eax]; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x00103187: ror byte ptr [edi], 0x84; sgdt [eax]; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x0011d1a0: ror byte ptr [edi], 0x84; stc; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0011a47e: ror byte ptr [edi], 0x84; stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011d2ff: ror byte ptr [edi], 0x84; test eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0010d960: ror byte ptr [edi], 0x84; xchg edx, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0011d293: ror byte ptr [edi], 0x84; xchg edx, eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0011d185: ror byte ptr [edi], 0x84; xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0012798e: ror byte ptr [edi], 0x85; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00193088: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000a52d4: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a97b4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a52b4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00133c46: ror byte ptr [edi], 0x85; cli; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x000b2e44: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000a516e: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00193188: ror byte ptr [edi], 0x85; jno 0x19318f; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b2bf9: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00116050: ror byte ptr [edi], 0x85; mov eax, dword ptr [0x83000000]; in al, dx; or al, 0x89; ret; 
0x000b2b5b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00163975: ror byte ptr [edi], 0x85; out dx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x000e5237: ror byte ptr [edi], 0x85; ret 0xfffd; 
0x0008bca1: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x000e5623: ror byte ptr [edi], 0x85; ret 8; 
0x00025d6d: ror byte ptr [edi], 0x85; ret; 
0x00094a70: ror byte ptr [edi], 0x85; sar dh, 0xff; jmp dword ptr [ebp - 0x7d]; 
0x00134a10: ror byte ptr [edi], 0x85; sar esi, 0xff; jmp dword ptr [ebp - 0x39]; 
0x00193149: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00038b7c: ror byte ptr [edi], 0x88; lahf; add eax, dword ptr [eax]; add byte ptr [ebx + 0x565504ec], al; push dword ptr [esp + 0x30]; call edi; 
0x0013b123: ror byte ptr [edi], 0x88; mov esi, 0x39000002; ret; 
0x00140582: ror byte ptr [edi], 0x88; or eax, 0x83fffffb; in al, dx; or al, 0x56; mov edx, dword ptr [esp + 0x20]; call edx; 
0x000caef7: ror byte ptr [edi], 0x88; ret 0; 
0x0007312b: ror byte ptr [edi], 0x88; ret 0xfffe; 
0x00137107: ror byte ptr [edi], 0x88; ret 1; 
0x0010fff0: ror byte ptr [edi], 0x88; ret; 
0x0002f7b4: ror byte ptr [edi], 0x88; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x0009e1fa: ror byte ptr [edi], 0x89; push cs; add al, byte ptr [eax]; add byte ptr [ebx + 0x29142454], cl; ret 0xb48d; 
0x0014bac5: ror byte ptr [edi], 0x89; ret 0x25; 
0x0009e452: ror byte ptr [edi], 0x89; test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0011ed7c: ror byte ptr [edi], 0x8c; dec ebp; sub eax, esi; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x00050375: ror byte ptr [edi], 0x8e; pop dword ptr [eax + eax]; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000f179b: ror byte ptr [edi], 0x8e; syscall; 
0x0004fa69: ror byte ptr [edi], 0x8f; shl edi, 0xff; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00043611: ror byte ptr [edi], 0x8f; sub bh, 0xff; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002d5ad: ror byte ptr [edi], 0x94; ret 0x3a3c; 
0x0012a037: ror byte ptr [edi], 0x94; ret 0x4483; 
0x000ca64c: ror byte ptr [edi], 0x94; ret 0x5438; 
0x0006ee50: ror byte ptr [edi], 0x94; ret 0x7f3c; 
0x0015ea4c: ror byte ptr [edi], 0x94; ret 0xc031; 
0x000381e1: ror byte ptr [edi], 0x94; ret; 
0x000f6ab8: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00047d04: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0008bb08: ror byte ptr [edi], 0x95; inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00153ba0: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0016220d: ror byte ptr [edi], 0x95; ret 0x48e9; 
0x00162b9d: ror byte ptr [edi], 0x95; ret 0x4ce9; 
0x000e5254: ror byte ptr [edi], 0x95; ret 0xb48d; 
0x001579eb: ror byte ptr [edi], 0x95; ret 0xc483; 
0x0007a5ae: ror byte ptr [edi], 0x95; ret 0xd089; 
0x000e0253: ror byte ptr [edi], 0x95; ret 0xf981; 
0x0003545d: ror byte ptr [edi], 0x95; ret; 
0x001591c5: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x00157466: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015860b: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0011a697: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000dc2d2: ror byte ptr [edi], 0x9f; ret; 
0x0004b19e: ror byte ptr [edi], 0xa5; fmul dword ptr [edx + 0x74]; sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0008f0e4: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00037157: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000f9aeb: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0016c0aa: ror byte ptr [edi], 0xb7; inc edi; adc byte ptr [esi - 0x3f], ah; call 0x1015fcb9; test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x000bf5cc: ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x00144f23: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000bc91b: ror byte ptr [edi], 1; dec edi; ret 0x4403; 
0x000eadd1: ror byte ptr [edi], 1; dec edi; ret 0x538b; 
0x00144f99: ror byte ptr [edi], 1; dec edi; ret 0x548b; 
0x0004fa58: ror byte ptr [edi], 1; dec edi; ret 0x8503; 
0x0015a010: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0011a399: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00043606: ror byte ptr [edi], 1; dec edi; ret 0xe801; 
0x00040467: ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x000eea32: ror byte ptr [edi], 1; dec esp; ret 0x5650; 
0x0003fe73: ror byte ptr [edi], 1; dec esp; ret; 
0x00087752: ror byte ptr [edi], 1; inc edi; ret 0x4589; 
0x00098af4: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x000806b4: ror byte ptr [edi], 1; lea ebp, [0x89000001]; ret 0x468b; 
0x00034d44: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x34d29; ret; 
0x001310c2: ror byte ptr [edi], 1; mov dh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000b2870: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000b26c1: ror byte ptr [edi], 1; xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x00109691: ror byte ptr [edi], 1; xchg ebp, eax; ret 0x7c39; 
0x0012ea6f: ror byte ptr [edi], 1; xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x00097f12: ror byte ptr [edi], 1; xor byte ptr [edi + 2], 0; add dh, dh; ret; 
0x0011a4d6: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x00061559: ror byte ptr [edi], cl; inc esp; ret; 
0x0006ad42: ror byte ptr [edi], cl; mov byte ptr [ebx + ebx], al; add dh, dh; ret 0xf40; 
0x00024799: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000501d4: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fab49: ror byte ptr [edi], cl; test byte ptr [eax + 0xf000004], dl; mov esi, 0x83df89ca; ret; 
0x0004db78: ror byte ptr [edi], cl; test byte ptr [ecx - 0x76fffffd], dl; ret; 
0x0002289c: ror byte ptr [edi], cl; test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x001916d7: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000ab5f5: ror byte ptr [edi], cl; test dword ptr [ebx + esi*8 - 1], esi; jmp dword ptr [esi + 0xf]; 
0x000fb736: ror byte ptr [edi], cl; test dword ptr [esi - 0x74ffffe8], edx; push esi; add al, 0xf7; ret 0xfffd; 
0x0005a4e4: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xbd83; 
0x00103727: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x001625e4: ror byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x000f58d0: ror byte ptr [edi], cl; xchg esp, eax; ret 0xd020; 
0x000d019c: ror byte ptr [edi], cl; xchg esp, eax; ret; 
0x001940be: ror byte ptr [edx], 0x5f; ret; 
0x001940d2: ror byte ptr [esi], 0x5f; ret; 
0x0013cde1: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x000c7642: ror cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0004e353: ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x0004e2a1: ror cl, 0xff; call dword ptr [ebx]; 
0x000c5117: ror cl, 0xff; call dword ptr [ecx - 0x18]; 
0x000c584e: ror cl, 0xff; call dword ptr [edi + 0x6a]; 
0x000c680b: ror cl, 0xff; call dword ptr [edi - 0x18]; 
0x000c70e1: ror cl, 0xff; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x000c663b: ror cl, 0xff; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000c7944: ror cl, 0xff; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000c791f: ror cl, 0xff; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x000c79fd: ror cl, 0xff; dec dword ptr [ebp - 0x689bb7f]; call dword ptr [eax - 0x73]; 
0x000c5429: ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x6a]; 
0x0004ea00: ror cl, 0xff; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x001033aa: ror dword ptr [eax], 0x83; ret 0x5204; 
0x000ac309: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d5dc1: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061ab4: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x51773], cl; call dword ptr [eax + 0x53]; 
0x00192a57: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x0014aaab: ror dword ptr [ebp - 0x12], 1; dec dword ptr [ebp - 0x653377a]; call dword ptr [eax - 0x73]; 
0x000221ef: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x00022157: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x00193daa: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x193dc0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0002d963: ror dword ptr [ebp - 0x9ffd98c], cl; ret 0x7503; 
0x00087bcd: ror dword ptr [ebx + 0x84a8], cl; add byte ptr [ebx - 0x27cc71b], al; or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x000e92b6: ror dword ptr [ebx - 0x33], 0x13; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000643c6: ror dword ptr [ebx - 0x5037b], cl; jmp dword ptr [ebp - 0x75]; 
0x00126105: ror dword ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 0x75]; 
0x00129ad2: ror dword ptr [ebx - 0x76fbdb8c], cl; inc edi; adc al, 0x29; ret; 
0x0011ed89: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000cc3ef: ror dword ptr [ecx + 0x3db8ab], 1; add byte ptr [ecx + 0x3db083], cl; add byte ptr [ecx], bh; ret 0x870f; 
0x00070e5c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00102461: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00095376: ror dword ptr [ecx - 0x72dfdbbc], 1; inc esi; sbb byte ptr [ecx], bh; ret 0x850f; 
0x00035c85: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00035ff6: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000362ae: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00194b19: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0006c8f9: ror dword ptr [edi], 0x86; pushal; add eax, 0xec830000; add al, 0x89; lea esi, [edi + esi*8 - 1]; call dword ptr [esi + 0x52]; 
0x0013bba1: ror dword ptr [edi], 0x96; ret 0x5522; 
0x000b2e73: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x0004ea50: ror dword ptr [edi], 1; dec ebp; ret; 
0x0007cc88: ror dword ptr [edi], 1; xchg cl, bh; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000e88bf: ror dword ptr [edi], cl; dec esi; sar dword ptr [ecx], cl; ret 0xd17f; 
0x0004f1fb: ror dword ptr [edi], cl; test dl, dh; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x00097351: ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x000e7dcd: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0004a7d1: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x0013109e: ror eax, 8; ret; 
0x0012e991: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000218bd: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013e174: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e240: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a878: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00021948: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0014de48: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0012e9c0: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x000cda63: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xcda78; mov eax, edx; ret; 
0x00079d1d: sahf; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [eax], 0x7d; stc; call dword ptr [eax - 0x18]; 
0x0008f1b5: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00114b12: sahf; add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x0010f813: sahf; add dword ptr [eax], eax; add byte ptr [edi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000a8f1e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0012f1a6: sahf; cmc; inc dword ptr [ebx - 0x6d72fe1d]; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x0011c828: sahf; dec ebx; stc; jmp dword ptr [ebp - 0x75]; 
0x0009a077: sahf; idiv bh; lea eax, [eax - 0x171c40]; test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x000d8bf9: sahf; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000d9c24: sahf; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0011c11e: sahf; loope 0x11c118; inc dword ptr [ebx - 0x72aff33c]; xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00161d3e: sahf; out 0xec, eax; call dword ptr [eax - 0x73]; 
0x0012ea79: sahf; ret 0xd108; 
0x000ce6fd: sahf; ret 0xd329; 
0x0011a699: sahf; ret 0xff85; 
0x001701ea: sahf; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x0016651e: sahf; scasb al, byte ptr es:[edi]; out dx, al; dec dword ptr [ebx + 0x291c244c]; ret; 
0x000ffc92: sahf; stc; call dword ptr [eax + 0x68]; 
0x000fde72: sahf; stc; call dword ptr [eax - 0x18]; 
0x000fa8f5: sahf; stc; call dword ptr [eax - 0x73]; 
0x0009955f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x000e27ac: sal ah, 1; dec dword ptr [ebx - 0x18f43]; dec dword ptr [ebp - 0x6658379]; call dword ptr [eax + 0x68]; 
0x00087aeb: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x0004ac36: sal bh, 0xd8; pop ebx; pop esi; pop edi; ret; 
0x000f9aee: sal bh, 0xd8; ret; 
0x00069573: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x4489; 
0x0003a8b9: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x000f0050: sal bh, 2; add byte ptr [eax + eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x00054724: sal bh, cl; pop ebx; pop esi; add ecx, eax; mov eax, ecx; ret; 
0x0013014f: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x00083837: sal bl, 0xa5; pop esi; pop edi; ret; 
0x000d54c4: sal bl, 0xff; call dword ptr [ebx - 0x75]; 
0x0008df1d: sal byte ptr [eax + eax*2 - 0x73], 0x46; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00121a06: sal byte ptr [eax + ebp*4 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x00023701: sal byte ptr [eax + ebp*8 - 0x73], 0x86; test byte ptr [esi - 7], ch; call dword ptr [eax - 0x73]; 
0x0012b83d: sal byte ptr [eax + ebx - 0x75], cl; push esi; or al, 0xf6; ret 0x7504; 
0x0014cd4c: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bca97f], cl; call dword ptr [eax + 0x52]; 
0x0007bb05: sal byte ptr [eax + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x00082625: sal byte ptr [eax + ecx*2 - 0x48], 0xf0; add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x001951fd: sal byte ptr [eax + edx - 0x77], 0xc2; xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x0004869d: sal byte ptr [eax + edx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x0008b11d: sal byte ptr [eax + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0007a9ed: sal byte ptr [eax + esi - 0x77], 0xd0; pop ebx; pop esi; ret; 
0x000d5e8d: sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [ebp + 0x550c246c], cl; push ebx; call eax; 
0x00083c66: sal byte ptr [eax + esi*8 - 0x3a], cl; or byte ptr [eax], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000a16d3: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x001294f8: sal byte ptr [eax], 0xf0; call dword ptr [eax - 1]; 
0x0008b0dd: sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0013d7b2: sal byte ptr [ebp + 0x1b], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00083a92: sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00155a80: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0011b20d: sal byte ptr [ebp + 0x20], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0016e181: sal byte ptr [ebp + 0x20], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0011699b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a6b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0003780b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0010922b: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov eax, 6; call dword ptr gs:[0x10]; 
0x001093eb: sal byte ptr [ebp + 0x22], 0x8b; pop esp; and al, 0x20; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x00155d48: sal byte ptr [ebp + 0x2c], 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x0004fe5f: sal byte ptr [ebp + 0x2e], 0x85; test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000faca3: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6bf7f79], cl; call dword ptr [eax + 0x53]; 
0x0011c4d9: sal byte ptr [ebp + 0x34], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000a5121: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x000b3320: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x001081ad: sal byte ptr [ebp + 0x40], cl; mov ecx, dword ptr [esp + 0x30]; mov eax, 0x127; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x0015c7cd: sal byte ptr [ebp + 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x000c342d: sal byte ptr [ebp + 0x7b], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00160af2: sal byte ptr [ebp + 0xb], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016d4ba: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x000374c9: sal byte ptr [ebp + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00037131: sal byte ptr [ebp + 0xc], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00163801: sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x001550d8: sal byte ptr [ebp + 0xd], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00144da0: sal byte ptr [ebp + 0xd], 0x5b; pop esi; pop edi; ret; 
0x00159358: sal byte ptr [ebp + 0xd], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x0011313f: sal byte ptr [ebp + 0xe], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d01f: sal byte ptr [ebp + 0xe], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00193daf: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00157a16: sal byte ptr [ebp + 0xf], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x0008217e: sal byte ptr [ebp + 0xf], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x0003818b: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x000dcdc3: sal byte ptr [ebp + 3], 0x59; jmp ecx; 
0x0016d0c9: sal byte ptr [ebp + 4], 0x5b; pop esi; pop edi; ret; 
0x0011bce1: sal byte ptr [ebp + 4], cl; ret; 
0x00037758: sal byte ptr [ebp + 5], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0019d7c7: sal byte ptr [ebp + 6], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013eca6: sal byte ptr [ebp + 7], 0x5b; pop esi; pop edi; ret; 
0x0011bd05: sal byte ptr [ebp + 8], cl; ret; 
0x00156a4c: sal byte ptr [ebp + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000ce66c: sal byte ptr [ebp + 9], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00057cdc: sal byte ptr [ebp + 9], cl; add esp, 8; pop ebx; ret; 
0x0014af34: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0019d62a: sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x0012d047: sal byte ptr [ebp + eax - 0x75], cl; add cl, byte ptr [ebx - 0x137ce7c0]; or byte ptr [ebx - 0x9b73], cl; dec dword ptr [ebx - 0x9f6b]; call dword ptr [edi + 0x50]; 
0x0003046e: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x0002f536: sal byte ptr [ebp + ebp - 0x7d], 0xf8; dec dword ptr [edi]; inc esp; ret; 
0x001608ac: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc54ef7d], cl; call dword ptr [eax - 0x73]; 
0x0015aebc: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xcae6f7d], cl; call dword ptr [eax - 0x73]; 
0x000d601b: sal byte ptr [ebp + ebp*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000de36c: sal byte ptr [ebp + ebx - 0x75], 0x85; lodsb al, byte ptr [esi]; ljmp 0x8d08:0xec83ffff; add byte ptr [edi + eax*2], 0xf9; call dword ptr [eax + 0x53]; 
0x00157b9c: sal byte ptr [ebp + ebx*8 - 0x75], 0x43; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0008d8d0: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x001701d0: sal byte ptr [ebp + ecx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x001557e6: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0015f938: sal byte ptr [ebp + ecx - 0x7d], 1; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019cfbc: sal byte ptr [ebp + ecx - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x0015604d: sal byte ptr [ebp + ecx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00042ab0: sal byte ptr [ebp + edx + 0x39], cl; ret; 
0x000d8138: sal byte ptr [ebp + edx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0015fa58: sal byte ptr [ebp + edx - 0x7d], 1; les eax, ptr [eax + 0x90]; pop ebx; pop esi; ret; 
0x0015fae8: sal byte ptr [ebp + edx - 0x7d], 1; les eax, ptr [eax + 0x94]; pop ebx; pop esi; ret; 
0x0008fe46: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000c8aa6: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x0012f350: sal byte ptr [ebp - 0x13], cl; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012d545: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00130331: sal byte ptr [ebp - 0x14], cl; call 0x12f900; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00139565: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00144de6: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x00160790: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0011315f: sal byte ptr [ebp - 0x20], 0x83; in al, dx; or al, 0x8d; xchg byte ptr [eax], ch; stc; call dword ptr [eax - 0x18]; 
0x00034d49: sal byte ptr [ebp - 0x23], cl; ret; 
0x001175d6: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00117637: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00113ff6: sal byte ptr [ebp - 0x2b], cl; or ecx, 0x80000000; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; ret; 
0x000d6c85: sal byte ptr [ebp - 0x2e], cl; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0011736c: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b3e06a], cl; call dword ptr [edx - 0x77]; 
0x0011738b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5156a], cl; call dword ptr [edx - 0x77]; 
0x000de389: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x15277b], cl; call dword ptr [eax - 1]; 
0x00085a4a: sal byte ptr [ebp - 0x6f99fff6], cl; endbr32; xor eax, eax; ret; 
0x000b4ce8: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000b4a98: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x001173aa: sal byte ptr [ebp - 0x7f], 0x8d; xchg esi, eax; in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0009c430: sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000904fb: sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000c8e0b: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x00074e2b: sal byte ptr [ebp - 0xe], cl; ret; 
0x0012b996: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x0013cde4: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0012e894: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x0011855e: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x001763c2: sal byte ptr [ebx + ebp*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [ebx + 0x4a], 0xf9; call dword ptr [eax + 0x53]; 
0x0012a2e2: sal byte ptr [ebx + ebx*2 - 0x75], 0x5e; or al, 0xb; pop edx; or al, 0xf6; ret; 
0x0015864c: sal byte ptr [ebx + ebx*4 - 0x7d], 0xec; add al, 0x83; ret; 
0x000f5f44: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0007a77f: sal byte ptr [ebx + ecx - 0x80], cl; cli; and eax, 0x7880e175; add dword ptr [ebx + 0x75], esi; fild dword ptr [eax - 0x76da2b83]; ret 0x5374; 
0x00074539: sal byte ptr [ebx + ecx*8 - 0x75], 0x50; adc byte ptr [ebx], bh; push eax; adc al, 0x73; ret; 
0x000c2384: sal byte ptr [ebx + ecx*8 - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x000512da: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x5126d; ret 0x40c7; 
0x00155639: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0019cce6: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x8949f6d], cl; call dword ptr [edx + 0x50]; 
0x0011f92a: sal byte ptr [ebx + esi - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0015e4ba: sal byte ptr [ebx - 0x75], 0x46; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000c2466: sal byte ptr [ebx - 0x75], 0x7d; les ebp, ptr [ecx]; ret; 
0x0008306c: sal byte ptr [ecx + eax*2 + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x001579d5: sal byte ptr [ecx + eax*2 - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x00159434: sal byte ptr [ecx + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x001564f5: sal byte ptr [ecx + ebp*4 - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00121065: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x216d0; ret; 
0x0014ac52: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x000c8dd4: sal byte ptr [ecx + ecx - 0x75], cl; adc byte ptr [ecx], bh; retf 0xf375; ret; 
0x0015d6cc: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0002ddfc: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001568c1: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0014be74: sal byte ptr [ecx + ecx*4 - 0x75], 0x55; mov word ptr [ebp - 0x652637e], cs; call dword ptr [eax - 0x73]; 
0x000a0a7c: sal byte ptr [ecx + edi - 0x73], cl; push eax; add ebx, ebp; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3801; 
0x0008361c: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000a0ddc: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xa0dd0; mov eax, edx; pop ebx; ret; 
0x00081d6c: sal byte ptr [ecx + edx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00139ac9: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x0015793c: sal byte ptr [ecx + esi - 0x77], 0xc8; pop ebx; ret; 
0x0003d7e9: sal byte ptr [ecx], 0xd2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013014d: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x00081bd1: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x000b9b0b: sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x000dcdbf: sal byte ptr [edi + eax - 0x7b], cl; sal byte ptr [ebp + 3], 0x59; jmp ecx; 
0x000d5fb6: sal byte ptr [edi + ebp - 0x7d], 0xec; or byte ptr [edi + 0x53], dl; call eax; 
0x0002c7ea: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x00159379: sal byte ptr [edi + ebx*8 - 0x7d], 0xec; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x0015f8be: sal byte ptr [edi + ecx - 0x7d], 0xc4; add al, 0x5b; pop esi; ret; 
0x0002bfae: sal byte ptr [edi + ecx - 0x7d], 0xf8; add esi, dword ptr [edx + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x00169668: sal byte ptr [edi + ecx*2 - 0x7d], 0xec; or byte ptr [ebp - 0x64c3345], cl; call dword ptr [edi + 0x56]; 
0x00146e41: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x00170256: sal byte ptr [edi + edx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x000c8c06: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x00071002: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0011b1e6: sal byte ptr [edi + esi - 0x7d], 0xec; add al, 0x57; push 0; push ebx; call esi; 
0x00160fd6: sal byte ptr [edi + esi - 0x7d], 0xec; or al, 0x8b; inc ebp; or al, 0x57; call dword ptr [eax + 0x10]; 
0x00093be6: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x000b3406: sal byte ptr [edi - 0x31], 1; sub eax, esi; pop ebx; pop esi; ret; 
0x0009a536: sal byte ptr [edi - 0x7d], 0xec; add al, 0x6a; add eax, 0xb4838d50; jb 0x9a53d; call dword ptr [eax - 0x18]; 
0x00129c43: sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x00118565: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00147801: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x0015867e: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x0015b0e1: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000d5fef: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x0011aee3: sal byte ptr [edx + ecx + 0x5b], cl; pop esi; pop edi; ret; 
0x0002cbe8: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0xc; call edx; 
0x0019ce6c: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 8; call edx; 
0x0008f26d: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0008f42f: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x0008f7b5: sal byte ptr [edx + ecx - 0x7d], 0xf8; or al, 0x75; xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x00083d4b: sal byte ptr [edx + edi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00117d4b: sal byte ptr [edx + edx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0008b350: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x8b35d; call dword ptr [ebx]; 
0x00090f7b: sal byte ptr [edx + edx*8 - 0x77], cl; ret; 
0x00155126: sal byte ptr [edx + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc405f79], cl; call dword ptr [eax - 0x73]; 
0x000227c4: sal byte ptr [edx + esi*8 - 0x73], cl; nop; test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0007f6d5: sal byte ptr [esi + 0x28], 1; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00072160: sal byte ptr [esi + 0x2c], 1; sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x0003aae8: sal byte ptr [esi + eax - 0x39], cl; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00159307: sal byte ptr [esi + eax - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001219e8: sal byte ptr [esi + eax*8 - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x65d2779], cl; call dword ptr [eax + 0x55]; 
0x000996e1: sal byte ptr [esi + ebp + 0x5b], 0x5e; pop edi; ret; 
0x000dd1c4: sal byte ptr [esi + ebx*8 - 0x77], cl; dec esp; and al, 0xc; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x0011d0a7: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00081cd7: sal byte ptr [esi + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000f5f2f: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x001442c7: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000dd214: sal byte ptr [esi + ecx*4 - 0x77], cl; dec esp; and al, 0xc; mov dword ptr [esp + 8], eax; call edx; 
0x000b31d7: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x00032934: sal byte ptr [esi - 0x75], 0x42; or al, 0x83; ret 0x8908; 
0x0016994a: sal byte ptr [esi - 4], cl; jmp dword ptr [esi - 0x70]; 
0x00043603: sal byte ptr [esi], 0x39; ror byte ptr [edi], 1; dec edi; ret 0xe801; 
0x000a0c38: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xa0c30; mov eax, edx; pop ebx; ret; 
0x000f0a36: sal byte ptr [esp + eax + 0x39], cl; ret 0x2b75; 
0x000b3f5d: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0011bcdd: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11bce8; ret; 
0x0011bd01: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x11bd10; ret; 
0x00058909: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; 
0x00058909: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0xb4858d50; jb 0x58910; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00140c2a: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x00082aa1: sal byte ptr [esp + ebx*8 - 0x7d], cl; in al, dx; or al, 0x50; call edx; 
0x00194871: sal byte ptr [esp + ecx - 0x58], 1; jne 0x194890; lea eax, [ecx + 4]; ret; 
0x0011b971: sal byte ptr [esp + ecx - 0x75], 0x50; add al, 0xf6; ret 0xf01; 
0x000832d5: sal byte ptr [esp + ecx - 0x75], cl; add bh, byte ptr [edx + 0x16]; test eax, eax; cmovne eax, edx; ret; 
0x00057938: sal byte ptr [esp + edi - 0x7d], 0xec; add al, 0x6a; add eax, 0xb4838d50; jb 0x5793f; call dword ptr [eax - 0x18]; 
0x0007f46b: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00083bc9: sal byte ptr [esp + edx - 0x7d], 0xf8; add dword ptr [edx + 0x5f], edi; mov eax, 0x16; cmove eax, edx; ret; 
0x00149bcb: sal byte ptr [esp + edx*2 - 0x7d], cl; ret 0x8901; 
0x0007ae91: sal byte ptr [esp + esi - 0x77], 0xd0; pop ebx; ret; 
0x001697b1: sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0012d979: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x12d9b3; call eax; 
0x0009b05f: sal ch, 1; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000a975c: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0008b6a4: sal dh, 1; ret 0x7501; 
0x00092452: sal dh, cl; rol dword ptr [eax + 0x75], 0x20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0012554c: sal dl, 1; out dx, eax; call dword ptr [eax + 0x6a]; 
0x00125541: sal dword ptr [ebp - 0xc], 0x8b; test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x0008fec2: sal dword ptr [ebp - 0xd], 0x8b; inc ecx; adc byte ptr [ecx + 0x5e5b1042], cl; ret; 
0x0011d0ab: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0013ceac: sal dword ptr [ebx + 0x13], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000904f4: sal dword ptr [ebx + esi*8 - 0x75], cl; inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0009cca9: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x0010a50b: sal dword ptr [ecx - 0xf], 0xff; ret; 
0x00096711: sal dword ptr [ecx], 0x83; ret; 
0x00035dde: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x0007e644: sal dword ptr [edi + 0x49], 0x89; ret 0x448b; 
0x0014ed42: sal dword ptr [edi + 0x5fb6db6d], 0x5d; ret; 
0x00076a8d: sal dword ptr [esi + 0x77], 0x8b; inc ebp; rol byte ptr [ebx - 0x95f714], 0xff; aaa; call dword ptr [eax + 0xc]; 
0x00080011: sal dword ptr [esp + ecx - 0x77], 0xc2; mov eax, dword ptr [eax]; test eax, eax; jne 0x80010; ret; 
0x0004f633: sal eax, 0xff; call dword ptr [eax + 0x6a]; 
0x000c2f3e: sal ebp, 1; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000b3c5d: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0011a3a8: sal ebx, 1; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000b3dae: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3695: sal ebx, 1; stosb byte ptr es:[edi], al; pop edi; ret; 
0x00053136: sal esi, 1; ret 0xf40; 
0x0008f785: salc; add al, 0; add esp, 0x1c; ret; 
0x00194766: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000420be: salc; add byte ptr [ecx], dh; ror byte ptr [ecx + 0xfb83f2], 0x19; ret 0xba; 
0x0017ba8e: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000e1b4d: salc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and ah, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0009856e: salc; add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x0011b218: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00086093: salc; call dword ptr gs:[0x10]; 
0x000b3650: salc; cld; pop edi; ret; 
0x00073170: salc; cli; jmp dword ptr [esi - 0x70]; 
0x00177a05: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d41f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x001773a5: salc; inc edx; clc; pop ebx; ret; 
0x00177475: salc; inc edx; hlt; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x001774a5: salc; inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001774d5: salc; inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x001848c5: salc; inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; pop ebx; ret; 
0x00177a75: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017b49f: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000b4f59: salc; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000bfca6: salc; mov ah, 0xf8; call dword ptr [ebx - 1]; 
0x0007a6ef: salc; mov dword ptr [ecx], edx; pop ebx; pop esi; ret; 
0x00088c23: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000b3c64: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000b3cf4: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000b3cca: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001773fd: salc; movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; pop ebx; ret; 
0x00099ea6: salc; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x00117639: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b362a: salc; pop edi; ret; 
0x00123fdc: salc; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012e684: salc; push edi; stc; call dword ptr [eax - 1]; 
0x000b3d44: salc; ret; 
0x0008897b: salc; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008895b: salc; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x00082b26: salc; stc; jmp dword ptr [ebp - 0x39]; 
0x00099e9f: salc; sti; dec dword ptr [ecx - 0x2917dbe4]; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x0015824d: salc; sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00024c65: salc; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00058356: salc; xchg esi, eax; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0012496e: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0018f26b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0011a959: sar bh, 1; je 0x11a981; and byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000640d4: sar bh, cl; dec dword ptr [ebx - 0x5277b]; call dword ptr [ebx + 0x53]; 
0x0015b0c3: sar bh, cl; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x00097c93: sar bh, cl; jmp dword ptr [ebp - 0x77]; 
0x000ffcaa: sar bl, cl; bnd jmp dword ptr [esi - 0x70]; 
0x000cdb43: sar byte ptr [0x8d500000], 1; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000cdaaf: sar byte ptr [0x928d0000], 1; and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; 
0x000cda7c: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0008c4f7: sar byte ptr [eax + 0x10], cl; pop ebx; ret; 
0x00102eec: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0011b43f: sar byte ptr [eax + 0x1e], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x00195213: sar byte ptr [eax + 0x20], cl; add eax, edx; ret; 
0x001374c9: sar byte ptr [eax + 0x22], 0x8d; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [ebp - 0x77]; 
0x0007ca3f: sar byte ptr [eax + 0x26], 0x29; ret; 
0x00116bc4: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x0014363b: sar byte ptr [eax + 0x3a], 0x83; in al, dx; add al, 0x89; ret; 
0x00057a3b: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x00057b2e: sar byte ptr [eax + 0x3f], 0x83; in al, dx; or byte ptr [ebp - 0x6ce847a], cl; call dword ptr [eax + 0x53]; 
0x0013b86f: sar byte ptr [eax + 0x56], 0x89; ret; 
0x0008cf6d: sar byte ptr [eax + 0x60], 0x31; sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x00086748: sar byte ptr [eax + 0xaf], cl; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00086a38: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x000d7bc6: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x0008a7c5: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000920b7: sar byte ptr [eax + 1], cl; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x0014d645: sar byte ptr [eax + 8], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00122b45: sar byte ptr [eax + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0016808c: sar byte ptr [eax + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0008cea4: sar byte ptr [eax + 9], 0x89; sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x00170984: sar byte ptr [eax + 9], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015d8bb: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000e94d9: sar byte ptr [eax], 0xa; je 0xe9442; pop ebx; pop esi; pop edi; ret; 
0x00116f69: sar byte ptr [eax], 0xf; inc esp; ret; 
0x0006627a: sar byte ptr [ebp - 0x3b7d0000], cl; adc byte ptr [ecx], bh; ret; 
0x000c7aaa: sar byte ptr [ebp - 0xa], cl; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x6674f7f]; call dword ptr [eax - 0x73]; 
0x001946b4: sar byte ptr [ebx], 0x4a; cld; jne 0x1946c0; pop ebx; ret; 
0x00081bd3: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x001701e8: sar byte ptr [ebx], 0x9e; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x000d9457: sar byte ptr [ebx], 0xeb; call dword ptr [eax - 0x18]; 
0x0010ab17: sar byte ptr [ebx], cl; inc ebp; or byte ptr [edi], cl; inc esp; ret 0x4589; 
0x0013f6c6: sar byte ptr [ecx + 0x23], 0x8b; jl 0x13f6f0; sbb byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0013de27: sar byte ptr [ecx + 0x26], 0x8d; or byte ptr [eax - 0x58], 0xf9; call dword ptr [eax - 0x73]; 
0x000d6009: sar byte ptr [ecx + 0x2f], cl; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008608a: sar byte ptr [ecx + 0x80], cl; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00116efc: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00092dfd: sar byte ptr [ecx + 5], cl; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x0002812d: sar byte ptr [ecx - 0x28], 0x2d; ret 0; 
0x00027d36: sar byte ptr [ecx - 0x29], 0x2d; ret 0; 
0x00085faa: sar byte ptr [ecx], 1; ret; 
0x0008cf71: sar byte ptr [ecx], cl; fmul dword ptr [edi]; xchg ebp, eax; ret 0x148d; 
0x00140752: sar byte ptr [ecx], cl; ret 0x860f; 
0x0015505c: sar byte ptr [edi + 0xff3fffd], 0x1e; sti; ret; 
0x000885c8: sar byte ptr [edi], cl; stc; call dword ptr [eax - 0x18]; 
0x0008b167: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x001681a6: sar byte ptr [edx + 1], 0xe8; call 0x81168214; ret; 
0x001682a6: sar byte ptr [edx + 1], 0xe8; call 0x81168313; ret; 
0x00168326: sar byte ptr [edx + 1], 0xe8; push 0x81000061; ret; 
0x000b7191: sar byte ptr [edx - 0x80000000], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009b0ee: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x0018fe82: sar byte ptr [edx], 0x83; ret 0x2910; 
0x000fadaf: sar byte ptr [edx], 1; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0009d7f3: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000d3164: sar byte ptr [esi + 0x22], 1; ret 0x7c83; 
0x00086014: sar byte ptr [esi + 0x53053053], cl; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0013f426: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x13f438; add esp, 8; pop ebx; ret; 
0x00037642: sar byte ptr [esi + 8], 1; mov eax, 0xae; call dword ptr gs:[0x10]; 
0x0015f6cb: sar ch, 0xf2; call dword ptr [ebp - 0x73]; 
0x00155a72: sar ch, 0xf2; call dword ptr [edx + 0x6a]; 
0x0012ee3e: sar ch, 0xff; dec dword ptr [ebx - 0x7d7243ab]; mov ah, 0xa5; stc; call dword ptr [eax - 0x73]; 
0x0015ccac: sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0015a6ba: sar ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x00103190: sar dh, 0xff; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x0002141b: sar dh, 0xff; dec dword ptr [ebx - 0x6f70]; call dword ptr [esi + 0x53]; 
0x00102d5a: sar dh, 0xff; dec dword ptr [ecx - 0x14743]; jmp dword ptr [ebp - 0x5f]; 
0x001701eb: sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00070660: sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd009; 
0x001082ac: sar dh, 0xff; inc dword ptr [ebx - 0x7c72f314]; sbb al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x00094a73: sar dh, 0xff; jmp dword ptr [ebp - 0x7d]; 
0x00028c9a: sar dh, 0xff; jmp dword ptr [esi - 0x70]; 
0x0010337e: sar dh, 0xff; push edi; fmul dword ptr [ebx - 0x13341]; jmp dword ptr [ebp - 0x77]; 
0x00143fcf: sar dh, 1; jmp dword ptr [esi - 0x70]; 
0x000f2b16: sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x0005f9ac: sar dl, 0xff; dec dword ptr [ecx - 0x4f363]; jmp dword ptr [ebp - 0x5f]; 
0x000738b9: sar dl, 1; jmp dword ptr [esi - 0x70]; 
0x0007365e: sar dl, cl; jmp dword ptr [esi - 0x70]; 
0x0003778b: sar dword ptr [0xfffff001], cl; jae 0x216d0; ret; 
0x00084c61: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000938c6: sar dword ptr [ebx], 0x27; sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x0007060c: sar dword ptr [ecx], 0xca; jbe 0x70780; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00070ac0: sar dword ptr [ecx], 0xca; jbe 0x70b18; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073119: sar dword ptr [ecx], 0xca; jbe 0x73161; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00078b8d: sar dword ptr [ecx], 0xca; jbe 0x78d60; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee39: sar dword ptr [ecx], 0xca; jbe 0x7ee90; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000e88c2: sar dword ptr [ecx], cl; ret 0xd17f; 
0x00123265: sar dword ptr [edx], 1; cmovb eax, edx; ret; 
0x000b48b9: sar dword ptr [esi], 1; jmp ecx; 
0x0008af8e: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008afce: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00114d31: sar eax, 0x1f; add esp, 8; pop ebx; ret; 
0x00108728: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000360df: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00035d8f: sar eax, 0x1f; pop edi; not eax; and eax, edx; ret; 
0x001747d5: sar eax, 0x1f; ret; 
0x000359cb: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x0008379f: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e8151: sar eax, 1; pop edi; pop ebp; ret; 
0x000837ff: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000740da: sar eax, 2; pop edi; pop ebp; ret; 
0x00076159: sar eax, 2; ret; 
0x00130f42: sar eax, 5; add esp, 0xc; ret; 
0x0016e53d: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0016e4de: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0016e50d: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00080bf5: sar ebp, 0x1f; pop edi; mov edx, ebp; pop ebp; ret; 
0x000759e2: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00037fc3: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00037f63: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00070b48: sar ecx, 1; cli; jmp dword ptr [esi - 0x70]; 
0x00038019: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0007631c: sar edi, 0x1f; mov edx, edi; pop edi; pop ebp; ret; 
0x0018f1ab: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x001638fd: sar edi, 0xff; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0015b0ed: sar edi, 1; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x00133e6f: sar edi, 1; jmp dword ptr [esi - 0x70]; 
0x0005d375: sar edi, cl; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0010fa8e: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000737a9: sar edx, 1; jmp dword ptr [esi - 0x70]; 
0x00075a6f: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x000c8e4c: sar esi, 0xff; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005d5d1: sar esi, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00134a13: sar esi, 0xff; jmp dword ptr [ebp - 0x39]; 
0x0006a03b: sar esi, 2; push esi; push ecx; push eax; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x1c]; 
0x00163c3f: sar esp, cl; jmp dword ptr [esi - 0x70]; 
0x0004a7b7: saveprevssp; mov dword ptr [edi + 0x15c], eax; mov esp, edx; mov esi, dword ptr [edi + 0x3c]; mov edi, dword ptr [edi + 0x38]; ret; 
0x00153ff2: sbb ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00154046: sbb ah, 0x62; stc; jmp dword ptr [ebp - 0x75]; 
0x0002e94b: sbb ah, 0x71; stc; call dword ptr [eax - 0x73]; 
0x00087bee: sbb ah, dh; call dword ptr [eax - 0x73]; 
0x00137d5f: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x6b73280], cl; call dword ptr [eax - 1]; 
0x0018c23e: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005845d: sbb al, 0; push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000236d1: sbb al, 0x24; call edi; 
0x0002279e: sbb al, 0x24; call esi; 
0x00036244: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x000361e9: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000c9bf2: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00035f84: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00022911: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022fa1: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x0016e49a: sbb al, 0x24; ret; 
0x000dc6cb: sbb al, 0x29; ret; 
0x000286c9: sbb al, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0016ef5f: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00021a93: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00122bfd: sbb al, 0x31; ror byte ptr [ebx - 0x17c7dba4], 0xd7; out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012269d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x37; cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x0012226d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x67; stc; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012254d: sbb al, 0x31; ror byte ptr [ebx - 0x17cbdba4], 0x87; div ch; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x000cd71d: sbb al, 0x31; ror byte ptr [ebx - 0x74cbdbac], 0x5c; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x000f990e: sbb al, 0x31; ror byte ptr [ebx - 0x74cfdba4], 0x74; and al, 0x34; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x000c8982: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d6a33: sbb al, 0x39; ret 0x8d0f; 
0x000e92ce: sbb al, 0x39; ret; 
0x00129c41: sbb al, 0x39; sal byte ptr [edx + 0xa], 1; mov eax, 1; ret; 
0x000ff5e2: sbb al, 0x3c; and ecx, dword ptr [edi]; test byte ptr [ebp - 0x76fffffc], ch; ret 0x44c7; 
0x0013adf1: sbb al, 0x43; stc; call dword ptr [eax - 1]; 
0x0011d125: sbb al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x0008a860: sbb al, 0x50; cli; dec dword ptr [ebp - 0x67e5379]; call dword ptr [eax - 0x73]; 
0x0011707f: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x10; add esp, 0xc; ret; 
0x0014c16f: sbb al, 0x51; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00155a6e: sbb al, 0x52; lea edx, [esi - 0xd0240]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x00155b9f: sbb al, 0x52; lea edx, [esi - 0xd0240]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00160478: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00157a31: sbb al, 0x53; call dword ptr [eax + 4]; 
0x001579e1: sbb al, 0x53; call dword ptr [eax]; 
0x001603b4: sbb al, 0x53; call eax; 
0x001552b8: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008de77: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0011bdd5: sbb al, 0x5b; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x0015286c: sbb al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0006a1cc: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00033850: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00075ccc: sbb al, 0x5b; neg eax; pop esi; pop edi; pop ebp; ret; 
0x0008de3f: sbb al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x0009a5ca: sbb al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00072b0d: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x00021cfb: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0009b6b4: sbb al, 0x5b; pop esi; ret; 
0x000ac9fa: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00081c86: sbb al, 0x65; mov dword ptr [0x80], eax; ret; 
0x00081c6d: sbb al, 0x65; mov edx, dword ptr [0x7c]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x80], eax; ret; 
0x00161f1e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x0007b32e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x000caa3b: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x00115ce6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d86: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00121e0c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00122a6c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00130c61: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd1: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d82: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x00147934: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba75: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x00155898: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015ec3a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecda: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0016af63: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b124: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1c6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85b: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x00037d4e: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x0003aaa8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd8: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x00081641: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817a9: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x0008597a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008a206: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a4: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b62a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba8a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf86: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f3cf: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65b: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x000914f5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092acd: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x000c9a9a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000cac91: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000d5d62: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f61: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d93b6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000ddd72: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde12: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x0012e9bd: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00024bd4: sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x000e6c03: sbb al, 0x74; push -0x77; ret; 
0x000c7aed: sbb al, 0x75; stc; call dword ptr [eax - 0x18]; 
0x000d6b8a: sbb al, 0x7d; mov bh, 0x83; ret 0x8301; 
0x00078145: sbb al, 0x7d; stc; call dword ptr [eax - 0x73]; 
0x000d6b81: sbb al, 0x7e; fimul dword ptr [ebx + 0x3b0c246c]; push 0x83b77d1c; ret 0x8301; 
0x0016e511: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x00198782: sbb al, 0x83; cli; add ecx, dword ptr [edi]; test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x00068c7e: sbb al, 0x83; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00163273: sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x000991a8: sbb al, 0x83; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0007bf67: sbb al, 0x83; in al, dx; or byte ptr [ecx], ch; ret 0x352; 
0x000d7833: sbb al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00121e15: sbb al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x000dc6ee: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00122225: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x00129cae: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000275c3: sbb al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0007038b: sbb al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000814b9: sbb al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000cb11c: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000cd785: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x000eaa81: sbb al, 0x83; ret 0x3901; 
0x0002502c: sbb al, 0x83; ret 0x8301; 
0x000fbc12: sbb al, 0x83; ret 0x8501; 
0x0013d8ce: sbb al, 0x83; ret 0x8802; 
0x000d8d46: sbb al, 0x83; ret 0x8901; 
0x0003291d: sbb al, 0x83; ret 0x8b04; 
0x00026818: sbb al, 0x83; ret; 
0x000eac49: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000255e8: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00087d03: sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000f9b34: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xb3910; add esp, 0x1c; ret; 
0x0009194d: sbb al, 0x84; stc; call dword ptr [eax - 0x18]; 
0x000809bf: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x00025d6b: sbb al, 0x85; ror byte ptr [edi], 0x85; ret; 
0x0015d6ca: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x00155039: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x001568bf: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0009340d: sbb al, 0x89; add al, 0x24; call esi; 
0x00030596: sbb al, 0x89; call 0x5d6263f8; ret; 
0x00049adf: sbb al, 0x89; call 0x5d63f941; ret; 
0x00049b35: sbb al, 0x89; call 0x5d63f997; ret; 
0x0006f727: sbb al, 0x89; call 0x5d665589; ret; 
0x0006f81d: sbb al, 0x89; call 0x5d66567f; ret; 
0x0007b013: sbb al, 0x89; call 0x5d670e75; ret; 
0x0007d067: sbb al, 0x89; call 0x5d672ec9; ret; 
0x0008fbc0: sbb al, 0x89; call 0x5d685a22; ret; 
0x0009a5fc: sbb al, 0x89; call 0x5d69045e; ret; 
0x0011733f: sbb al, 0x89; call 0x5d70d1a1; ret; 
0x0011bda7: sbb al, 0x89; call 0x5d711c09; ret; 
0x0014e048: sbb al, 0x89; call 0x5d743eaa; ret; 
0x0014e609: sbb al, 0x89; call 0x5d74446b; ret; 
0x000d6a30: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x00033690: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000771a2: sbb al, 0x89; inc edi; or al, 1; ret 0xc101; 
0x000a0fc9: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0012aa25: sbb al, 0x89; loope 0x12a9b2; ret 0x25; 
0x0003138f: sbb al, 0x89; loope 0x3131c; ret; 
0x000e9307: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002f44e: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0007b88a: sbb al, 0x89; ret 0x1b8; 
0x00030b84: sbb al, 0x89; ret 0x25; 
0x0019bb8a: sbb al, 0x89; ret 0x4489; 
0x0012cad5: sbb al, 0x89; ret 0x562b; 
0x0012cca8: sbb al, 0x89; ret 0x572b; 
0x0008b477: sbb al, 0x89; ret 0x895b; 
0x0009ca3b: sbb al, 0x89; ret 0x98eb; 
0x00027f73: sbb al, 0x89; ret 0xb60f; 
0x000eaa63: sbb al, 0x89; ret 0xc085; 
0x00074eca: sbb al, 0x89; ret 0xc883; 
0x000f628c: sbb al, 0x89; ret 0xeac0; 
0x0008445b: sbb al, 0x89; ret; 
0x000ef6bf: sbb al, 0x89; shr dword ptr [ecx], cl; ret; 
0x00141e42: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d8945: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00155ca9: sbb al, 0x8b; inc edx; add al, 0x89; adc al, 0x24; call dword ptr [eax + 0x10]; 
0x000c9458: sbb al, 0x8b; je 0xc9480; or byte ptr [ecx], al; rol dword ptr [ecx], cl; ret; 
0x001262e5: sbb al, 0x8b; jl 0x12630d; xor byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a0d5f: sbb al, 0x8b; jl 0xa0d87; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00090bac: sbb al, 0x8b; jne 0x90bb0; mov dword ptr [esp], ebp; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x001037bf: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00119cdb: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0003527f: sbb al, 0x8b; push ebx; or byte ptr [ecx - 0x50f0fbb9], cl; ret 0x6c8b; 
0x0016a005: sbb al, 0x8d; add byte ptr [edi], 0x66; stc; call dword ptr [eax - 0x18]; 
0x000a146c: sbb al, 0x8d; add edx, 0x43; stc; call dword ptr [ecx + 0x50]; 
0x0013b10c: sbb al, 0x8d; cmp cl, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x000e4752: sbb al, 0x8d; inc ebx; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000e462a: sbb al, 0x8d; inc ebx; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0010cd63: sbb al, 0x8d; push eax; jmp dword ptr [esi - 0x7d]; 
0x000ed185: sbb al, 0x8d; push ebx; add al, 0x83; ret; 
0x0009409c: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x00157a09: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x001579c9: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000b606b: sbb al, 0x8d; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x0013aee9: sbb al, 0x8d; xor ah, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x000e7e3b: sbb al, 0x8e; je 0xe7e50; pop ebx; pop esi; ret; 
0x000fdad6: sbb al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x001082b5: sbb al, 0x9f; stc; call dword ptr [eax - 0x18]; 
0x0014e164: sbb al, 0xae; stc; call dword ptr [eax - 0x73]; 
0x00129bff: sbb al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00120b00: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000368ab: sbb al, 0xc1; call dword ptr [eax]; 
0x001747d4: sbb al, 0xc1; clc; pop ds; ret; 
0x0010fa8d: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x000ddc3c: sbb al, 0xc3; nop; endbr32; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x0012a28e: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0012a241: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000d5dc3: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b64f3: sbb al, 0xe8; aaa; dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00033e13: sbb al, 0xe8; aaa; ret; 
0x00057644: sbb al, 0xe8; add dword ptr ss:[eax], 0; add esp, 0x1c; ret; 
0x0011454a: sbb al, 0xe8; and byte ptr [edx], cl; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00117719: sbb al, 0xe8; and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0011c0c8: sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x000809cd: sbb al, 0xe8; cmp eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x000b64c5: sbb al, 0xe8; dec esi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a112e: sbb al, 0xe8; fsubr qword ptr [edx]; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00103646: sbb al, 0xe8; hlt; retf 0xfff1; add esp, 0x18; pop ebx; ret; 
0x0003a72f: sbb al, 0xe8; imul edi, eax, -1; jmp dword ptr [esi - 0x70]; 
0x000b6525: sbb al, 0xe8; in eax, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003b5db: sbb al, 0xe8; inc dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b6493: sbb al, 0xe8; inc edi; pop ds; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00176dc6: sbb al, 0xe8; inc esp; ljmp 0xc019:0xd8f7fffb; add esp, 0x1c; ret; 
0x001747cc: sbb al, 0xe8; inc esp; stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x000389cc: sbb al, 0xe8; into; pop eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001144f3: sbb al, 0xe8; ja 0x114501; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012f394: sbb al, 0xe8; jbe 0x12f3e0; clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00058705: sbb al, 0xe8; jne 0x58710; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b6465: sbb al, 0xe8; jne 0xb6488; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000dd680: sbb al, 0xe8; jp 0xdd689; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e295: sbb al, 0xe8; lds edi, ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b6553: sbb al, 0xe8; mov bh, 0x7a; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009aeb5: sbb al, 0xe8; mov ch, 0x3b; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003e235: sbb al, 0xe8; mov ch, 8; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d8c31: sbb al, 0xe8; mov dword ptr [edi], esp; or dword ptr [eax], eax; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; call eax; 
0x0013024b: sbb al, 0xe8; mov edi, 0x83fff839; les ebx, ptr [eax]; pop ebx; ret; 
0x0011c010: sbb al, 0xe8; mov edx, 0x83fffffe; les ebx, ptr [eax]; pop ebx; ret; 
0x00091f50: sbb al, 0xe8; or al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00108e52: sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009adff: sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00033e4c: sbb al, 0xe8; out dx, al; ret 0xfffe; 
0x00057515: sbb al, 0xe8; pop es; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000575c5: sbb al, 0xe8; push ebp; pop ds; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00058724: sbb al, 0xe8; push esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001011d8: sbb al, 0xe8; ret 0xffcc; 
0x001477f7: sbb al, 0xe8; ret; 
0x00058354: sbb al, 0xe8; salc; xchg esi, eax; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x0015ccaa: sbb al, 0xe8; sar ch, 0xff; inc dword ptr [ebx - 0x72aff33c]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0008f86c: sbb al, 0xe8; scasb al, byte ptr es:[edi]; jns 0x8f870; jmp dword ptr [esi - 0x70]; 
0x00038a2e: sbb al, 0xe8; sub al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00170fa6: sbb al, 0xe8; test byte ptr [esi - 0x2708000a], ah; sbb eax, eax; add esp, 0x1c; ret; 
0x0003e263: sbb al, 0xe8; xchg dword ptr [eax], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001170d7: sbb al, 0xe8; xchg ebx, eax; pmuludq mm7, mm7; add esp, 0x10; add esp, 0xc; ret; 
0x00117035: sbb al, 0xe8; xor eax, 0x83fff410; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0015a6b8: sbb al, 0xe9; sar ch, 0xff; jmp dword ptr [esi - 0x70]; 
0x001708eb: sbb al, 0xf1; jmp dword ptr [esi - 0x70]; 
0x000f0b0c: sbb al, 0xf6; ret 0xf08; 
0x000d7d55: sbb al, 0xf7; fimul dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00116563: sbb al, 0xf7; fisttp word ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x001211d5: sbb al, 0xf7; mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000f6a6a: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0011f2ae: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x001591cb: sbb al, 0xf; mov dh, 0xc0; ret; 
0x00077ab0: sbb al, 0xf; test cl, cl; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x000c8985: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000aaf1d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000ac5f0: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00198add: sbb al, 0xf; xchg ebp, eax; ret 0xd789; 
0x00149796: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x0004aa8d: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x0004a98d: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x000ca7eb: sbb al, 0xf; xchg esp, eax; ret 0xd338; 
0x000d82e0: sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0011c0c4: sbb al, 0xff; je 0x11c0ec; sbb al, 0xe8; cmp bh, 0xff; jmp dword ptr [esi - 0x70]; 
0x00057640: sbb al, 0xff; je 0x57668; sbb al, 0xe8; add dword ptr ss:[eax], 0; add esp, 0x1c; ret; 
0x0007bfc2: sbb al, 0xff; jo 0x7bffe; call 0x1087a0; add esp, 0x18; pop ebx; ret; 
0x0015c057: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x0012283e: sbb al, 1; add byte ptr [eax], al; add byte ptr [ecx - 0x7ce7dbbc], cl; ret; 
0x001228b8: sbb al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret; 
0x000dc5cc: sbb al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00193e20: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x000dc58a: sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00088966: sbb al, 1; add byte ptr [eax], al; ret; 
0x000380fd: sbb al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x38111; add esp, 0x12c; ret; 
0x00102bb6: sbb al, 1; add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000937e4: sbb al, 1; pop eax; add al, 0x89; ret; 
0x0012d8cf: sbb al, 1; ret 0x448b; 
0x000a4b40: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000484f1: sbb al, 4; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x48505; add esp, 0x42c; ret; 
0x0002f714: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0008d278: sbb al, byte ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00117273: sbb al, byte ptr [eax]; add byte ptr [eax], al; lea edi, [ebx - 1]; cmp edi, 3; cmovae esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00087a75: sbb al, byte ptr [eax]; add byte ptr [ebp + 0x2e], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00087d73: sbb al, byte ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x00087cf6: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x7501a802], cl; add eax, 0x75fef883; sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0018c48e: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0005d042: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0015501d: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0008034c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xce0]; ret; 
0x00081e1d: sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x81e30; ret; 
0x00081d9c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x104], edx; ret; 
0x00081dbc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x108], edx; ret; 
0x00081ddc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x10c], edx; ret; 
0x00081dfc: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x110], edx; ret; 
0x000d5ff1: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x00114c29: sbb al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0011b0eb: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00106de3: sbb al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x0003899c: sbb al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00033579: sbb al, byte ptr [ecx]; pop edx; add al, 0x83; ret 0x3908; 
0x000debd9: sbb al, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x000a4842: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001900db: sbb al, ch; mov eax, 0x81fffde3; ret; 
0x00161d78: sbb al, ch; ret 0xebe3; 
0x00058037: sbb al, ch; ret; 
0x00126c98: sbb al, dh; call dword ptr [eax - 0x18]; 
0x0012e51b: sbb bh, 0x57; stc; call dword ptr [eax - 0x75]; 
0x00106d8c: sbb bh, bh; je 0x106db4; sbb byte ptr [edx - 0x64], ch; call 0x107160; add esp, 0x1c; ret; 
0x00106f1f: sbb bh, bh; je 0x106f47; sbb byte ptr [edx - 0x64], ch; call 0x107160; add esp, 0x1c; ret; 
0x00107e1f: sbb bh, bh; je 0x107e47; sbb byte ptr [edx - 0x64], ch; call 0x107e30; add esp, 0x1c; ret; 
0x001666b4: sbb bh, bh; je 0x1666dc; and al, ch; ret 0x13; 
0x000546c4: sbb bh, bh; je 0x546ec; sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x00076ffb: sbb bh, bh; je 0x77023; sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000809bb: sbb bh, bh; je 0x809e3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0008f868: sbb bh, bh; je 0x8f890; sbb al, 0xe8; scasb al, byte ptr es:[edi]; jns 0x8f870; jmp dword ptr [esi - 0x70]; 
0x000b5495: sbb bh, bh; je 0xb54bd; sbb byte ptr [edx], ch; call 0xb54b0; add esp, 0x1c; ret; 
0x000dc14e: sbb bh, bh; je 0xdc176; sbb byte ptr [edx - 1], ch; call 0xdc260; add esp, 0x1c; ret; 
0x0013f760: sbb bh, bh; jmp dword ptr [esi - 0x70]; 
0x000c9c30: sbb bh, bh; jo 0xc9c38; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9c7d: sbb bh, bh; jo 0xc9c85; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9cd0: sbb bh, bh; jo 0xc9cd8; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x000c9d1d: sbb bh, bh; jo 0xc9d25; push dword ptr [eax]; call 0xcbfb0; add esp, 0x1c; ret; 
0x0016b3ee: sbb bh, bh; nop; js 0x16b3f6; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00190265: sbb bh, byte ptr [eax + 1]; jg 0x190270; neg eax; ret; 
0x000c2ebd: sbb bh, byte ptr [ecx]; ret; 
0x0012f8f9: sbb bh, ch; jmp dword ptr [esi - 0x70]; 
0x000bdff3: sbb bh, dh; dec dword ptr [ebx - 0x72ebdb84]; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0009246d: sbb bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00094579: sbb bl, byte ptr [ecx]; add byte ptr [ebx - 0x77], dl; ret; 
0x000ac9ac: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000a0714: sbb bl, ch; ret; 
0x00131107: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00034d3d: sbb byte ptr [0xfffffff], ah; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x0017479a: sbb byte ptr [bp + di], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00092bcb: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00092e04: sbb byte ptr [eax + 0x107], bh; call dword ptr gs:[0x10]; 
0x001078d8: sbb byte ptr [eax + 0x10c], bh; call dword ptr gs:[0x10]; 
0x00107a38: sbb byte ptr [eax + 0x10d], bh; call dword ptr gs:[0x10]; 
0x00107845: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00122e00: sbb byte ptr [eax + 0x151], bh; call dword ptr gs:[0x10]; 
0x00122dba: sbb byte ptr [eax + 0x1a1], bh; call dword ptr gs:[0x10]; 
0x0003b65e: sbb byte ptr [eax + 0x50], dl; call 0x3b670; add esp, 0x1c; ret; 
0x0003b705: sbb byte ptr [eax + 0x50], dl; call 0x3b720; add esp, 0x10; add esp, 0xc; ret; 
0x0003b785: sbb byte ptr [eax + 0x50], dl; call 0x3b7a0; add esp, 0x10; add esp, 0xc; ret; 
0x0007c08a: sbb byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x00093712: sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0012d9b1: sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax - 1]; 
0x0002fc63: sbb byte ptr [eax + 0x65ffffff], 0x8b; add byte ptr [ebx + 0x28408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002fc33: sbb byte ptr [eax + 0x65ffffff], 0x8b; add byte ptr [ebx + 0x30408b00], cl; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0002ec5f: sbb byte ptr [eax + 0x65ffffff], 0x8b; add byte ptr [ebx + 0x58408b00], cl; ret; 
0x0012229f: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x001143fa: sbb byte ptr [eax + 0x68], dl; adc byte ptr [eax + eax], dl; push dword ptr [esp + 0x1c]; call 0x114f70; add esp, 0x1c; ret; 
0x00088c17: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x001905e7: sbb byte ptr [eax + 1], bh; ja 0x1905f1; neg eax; ret; 
0x0013bcfa: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013bcfa: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0015fca5: sbb byte ptr [eax + ecx + 0x5b], dh; pop esi; pop edi; ret; 
0x0007b4a2: sbb byte ptr [eax - 0x18], dl; pop es; aaa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014a53a: sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x0014a3e6: sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000d9167: sbb byte ptr [eax - 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00133475: sbb byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x49], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax + 0x50000049], -0x73; add dword ptr [eax], 0x70; bnd call dword ptr [eax - 0x73]; 
0x00157448: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0008ed4b: sbb byte ptr [eax - 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x00082bfc: sbb byte ptr [eax], 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0015602b: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00153805: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0002651e: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; inc edi; and byte ptr [ecx - 0x9d3dbbc], cl; ret 0x7501; 
0x0012e997: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x000218c3: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013e17a: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e246: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a87e: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x001769cb: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00124134: sbb byte ptr [eax], al; add byte ptr [eax], al; or dh, 1; call dword ptr gs:[0x10]; 
0x0002194e: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x0014de4e: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x0012e9c6: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x000213cb: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x0006cff6: sbb byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0x6d024; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x000485cb: sbb byte ptr [eax], al; add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00127719: sbb byte ptr [eax], cl; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x72; bnd call dword ptr [eax - 0x73]; 
0x0002c23e: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x11bcf0; add esp, 0x1c; ret; 
0x001176d4: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x00057d74: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x001655c5: sbb byte ptr [ebp + 0x39183844], cl; ret 0x860f; 
0x00192f57: sbb byte ptr [ebp + 0x528d1049], cl; adc byte ptr [ecx], ch; ret 0xe183; 
0x00144d9e: sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x0009d202: sbb byte ptr [ebp + 0x5b1075db], al; pop esi; pop edi; ret; 
0x000ac987: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000ac9a9: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ac9f7: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0014c422: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x00075362: sbb byte ptr [ebp + 0x88a8], cl; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0012d960: sbb byte ptr [ebp + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x0009b00e: sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x000b5485: sbb byte ptr [ebp - 0x136d7240], al; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x00093403: sbb byte ptr [ebp - 0x18], dl; int 0xf8; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000376f3: sbb byte ptr [ebp - 0x1eea5f7d], cl; dec dword ptr [edi]; inc esp; ret 0x24e9; 
0x00050e1f: sbb byte ptr [ebp - 0x35f80], cl; call dword ptr [eax + 0x6a]; 
0x000b6d15: sbb byte ptr [ebp - 0x35f80], cl; call dword ptr [eax - 1]; 
0x00143d2b: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00163237: sbb byte ptr [ebp - 0x4df77], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00157851: sbb byte ptr [ebp - 0x567bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x72affb14], al; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x0011c6a2: sbb byte ptr [ebp - 0x65ef77f], cl; call dword ptr [eax - 0x73]; 
0x000d140f: sbb byte ptr [ebp - 0x666bb79], cl; call dword ptr [eax - 0x73]; 
0x00093a13: sbb byte ptr [ebp - 0x66c0b70], cl; call dword ptr [edx - 0x73]; 
0x00096de0: sbb byte ptr [ebp - 0x66c2f7a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097389: sbb byte ptr [ebp - 0x66c937a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00097579: sbb byte ptr [ebp - 0x66cb37a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0008f012: sbb byte ptr [ebp - 0x67d2b80], cl; call dword ptr [eax - 0x18]; 
0x00082cf0: sbb byte ptr [ebp - 0x6818f80], cl; call dword ptr [eax - 0x18]; 
0x0006979a: sbb byte ptr [ebp - 0x6871f80], cl; call dword ptr [eax - 0x18]; 
0x0002195c: sbb byte ptr [ebp - 0x6920b80], cl; call dword ptr [eax - 0x18]; 
0x00169894: sbb byte ptr [ebp - 0x699dc80], cl; call dword ptr [eax - 0x18]; 
0x00154910: sbb byte ptr [ebp - 0x69d0980], cl; call dword ptr [eax - 0x18]; 
0x00152fc0: sbb byte ptr [ebp - 0x69d5380], cl; call dword ptr [eax - 0x18]; 
0x00152390: sbb byte ptr [ebp - 0x69d7880], cl; call dword ptr [eax - 0x18]; 
0x00150890: sbb byte ptr [ebp - 0x69e1f80], cl; call dword ptr [eax - 0x18]; 
0x00150220: sbb byte ptr [ebp - 0x69e2e80], cl; call dword ptr [eax - 0x18]; 
0x00131032: sbb byte ptr [ebp - 0x6a70880], cl; call dword ptr [eax - 0x18]; 
0x0012f912: sbb byte ptr [ebp - 0x6a74a80], cl; call dword ptr [eax - 0x18]; 
0x001763cb: sbb byte ptr [ebp - 0x6b58480], cl; call dword ptr [eax + 0x53]; 
0x00100c0b: sbb byte ptr [ebp - 0x6b5fd80], cl; call dword ptr [eax + 0x6a]; 
0x00100e10: sbb byte ptr [ebp - 0x6b6177f], cl; call dword ptr [eax - 0x73]; 
0x000f928a: sbb byte ptr [ebp - 0x6b7f180], cl; call dword ptr [eax - 0x18]; 
0x000cd8a3: sbb byte ptr [ebp - 0x748f8b0a], al; pop esp; and al, 0x50; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00090f79: sbb byte ptr [ebp - 0x762d8b2e], al; ret; 
0x00035702: sbb byte ptr [ebp - 0x76bc8b40], al; ret 0xa5eb; 
0x0012b994: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00143cf3: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x0002c7e8: sbb byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x0007db9d: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000b3118: sbb byte ptr [ebp - 0xb], dh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016ca65: sbb byte ptr [ebp - 0xba65f7e], cl; jmp dword ptr [esi - 9]; 
0x0003b7c0: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0011f9e1: sbb byte ptr [ebx + 0x1974fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x00054d23: sbb byte ptr [ebx + 0x2b34247c], cl; jl 0x54d4f; cmp byte ptr [ebx - 0x7bf00008], al; ret; 
0x000f9a23: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000f594c: sbb byte ptr [ebx + 0x3c8da904], cl; ret; 
0x0002c007: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00139294: sbb byte ptr [ebx + 0x43031443], cl; adc byte ptr [ecx], bh; ret 0x6273; 
0x00149edf: sbb byte ptr [ebx + 0x438910c4], al; adc al, 0x89; ret 0xc985; 
0x0007719f: sbb byte ptr [ebx + 0x47891c47], cl; or al, 1; ret 0xc101; 
0x00085c9a: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000d6a2d: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00077174: sbb byte ptr [ebx + 0x525004ec], al; push dword ptr [esp + 0x18]; call ecx; 
0x0003b4b3: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b506: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b553: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5a6: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x00076fff: sbb byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x000b240a: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aef74: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0009d78f: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000ce7b6: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00035eaa: sbb byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d779a: sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0002c80f: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00149f7b: sbb byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x00024ba0: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x001074fd: sbb byte ptr [ebx + 0x5e5b74c4], al; ret; 
0x00026b26: sbb byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x000b7196: sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0007c0da: sbb byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0009ba99: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00079914: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0016e652: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00037333: sbb byte ptr [ebx + 0x788b0470], cl; or byte ptr [ebx + 0x448b0c68], cl; and al, 8; mov esp, ecx; jmp edx; 
0x00123410: sbb byte ptr [ebx + 0xc], bh; call dword ptr gs:[0x10]; 
0x00122167: sbb byte ptr [ebx + 0xf], bh; mov dword ptr [esp + 0x20], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00097941: sbb byte ptr [ebx + edi], 0; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00176b60: sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp + 3]; 
0x0013f71f: sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp - 0x39]; 
0x0013f6fe: sbb byte ptr [ebx - 0x11380], cl; jmp dword ptr [ebp - 0x75]; 
0x0015982d: sbb byte ptr [ebx - 0x13368], cl; jmp dword ptr [ebp - 0x75]; 
0x0013f6cc: sbb byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x7d]; 
0x0004140f: sbb byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0015e29c: sbb byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x00141c5f: sbb byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x0012c9cb: sbb byte ptr [ebx - 0x137c538b], cl; add al, 0x6a; add eax, 0x575e968d; stc; call dword ptr [edx + 0x50]; 
0x0014c8b8: sbb byte ptr [ebx - 0x13b75], cl; jmp dword ptr [ebp - 0x75]; 
0x00141935: sbb byte ptr [ebx - 0x13b79], cl; jmp dword ptr [ebp - 0x75]; 
0x00055dfb: sbb byte ptr [ebx - 0x16b7dba4], cl; ret; 
0x00099efa: sbb byte ptr [ebx - 0x17], bl; pmaxub mm7, mm7; jmp dword ptr [esi - 0x70]; 
0x001011d4: sbb byte ptr [ebx - 0x17e3dbac], cl; ret 0xffcc; 
0x000f22bd: sbb byte ptr [ebx - 0x1f3ef314], al; add eax, dword ptr [ecx]; ret 0x4489; 
0x0007b693: sbb byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00103164: sbb byte ptr [ebx - 0x347c0003], ch; dec dword ptr [ecx - 0x4725763f]; rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139300: sbb byte ptr [ebx - 0x3776fb3c], al; pop ebx; pop esi; ret; 
0x0015719e: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1571af; sub esp, 0xc; push edi; call eax; 
0x00037136: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x000cffe1: sbb byte ptr [ebx - 0x4774f314], al; sub bh, 0xff; call dword ptr [edi - 0x18]; 
0x0011ed6a: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x11ed72; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x00120afc: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000f5560: sbb byte ptr [ebx - 0x4976c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0003c530: sbb byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x001037bb: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0010a4e9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00121639: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x001100f9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xbb; call dword ptr gs:[0x10]; 
0x0011ce49: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0011cea9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x0011cd79: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00110129: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xef; call dword ptr gs:[0x10]; 
0x001213d9: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0011a182: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00109ef2: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0010a422: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x00121762: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x00121562: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x00121442: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00121602: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0011cfb2: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x0011cf42: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x0011ce12: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00122788: sbb byte ptr [ebx - 0x769fdbbc], cl; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00122028: sbb byte ptr [ebx - 0x76abdbbc], cl; inc esp; and al, 0x1c; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009c178: sbb byte ptr [ebx - 0x76ebdbb4], cl; ret 0xf901; 
0x000d1cd6: sbb byte ptr [ebx - 0x76efdb8c], cl; ret; 
0x000d263e: sbb byte ptr [ebx - 0x78f0f905], al; ret 7; 
0x000f586a: sbb byte ptr [ebx - 0x7cebdbb4], cl; ret; 
0x000f4069: sbb byte ptr [ebx - 0x7cf3dbb4], cl; ret; 
0x0014cd4e: sbb byte ptr [ebx - 0x7e72f714], al; push esi; inc ebx; stc; call dword ptr [eax + 0x52]; 
0x001211d1: sbb byte ptr [ebx - 0x8e3dbac], cl; mov byte ptr [edx], 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0007cb98: sbb byte ptr [ebx - 0xaafb14], al; je 0x7cbc4; cmp al, 0x57; call dword ptr [esi + 0x20]; 
0x0011a924: sbb byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0017470b: sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00123a9a: sbb byte ptr [ecx + 0x100ce], al; add byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x001583ed: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000368a5: sbb byte ptr [ecx + 0x244489c7], cl; sbb al, 0xc1; call dword ptr [eax]; 
0x00121056: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0010fa87: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0004a558: sbb byte ptr [ecx + 0x3001bbe1], cl; add byte ptr [eax], al; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000a10bb: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000992ec: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x00136085: sbb byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008134d: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000a0ff3: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00143788: sbb byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x000d78f7: sbb byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00178df3: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x0008042b: sbb byte ptr [ecx + ebx - 0x77d0000], 1; jg 0x80440; ret; 
0x000a0cb3: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x00073b72: sbb byte ptr [ecx - 0x18], dl; mov bh, 0x19; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00079b58: sbb byte ptr [ecx - 0x3b7cf3ad], cl; add al, 0x5b; pop esi; ret; 
0x0007e8c4: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0011e51f: sbb byte ptr [ecx - 0x723ca428], cl; and byte ptr [eax - 0x5f], 0xf9; call dword ptr [eax - 0x73]; 
0x0015119e: sbb byte ptr [ecx - 0x72ec1408], cl; je 0x1511cc; add byte ptr [eax - 0x7cfbbc75], dl; ret; 
0x000d6a26: sbb byte ptr [ecx - 0x76ebdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x0003b753: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0014fdc5: sbb byte ptr [ecx - 0x7cebdbbc], cl; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x56]; 
0x001503e7: sbb byte ptr [ecx - 0x7cebdbbc], cl; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; or dh, 0x61; stc; call dword ptr [eax + 0x57]; 
0x00164806: sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000926c4: sbb byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009267a: sbb byte ptr [ecx], al; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00143da6: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0016e9f4: sbb byte ptr [ecx], al; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0003ea13: sbb byte ptr [ecx], al; ret; 
0x000c8967: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00087292: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0009537d: sbb byte ptr [ecx], bh; ret 0x850f; 
0x001655c9: sbb byte ptr [ecx], bh; ret 0x860f; 
0x0003d49c: sbb byte ptr [ecx], bh; ret; 
0x000c8d77: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x00196c4a: sbb byte ptr [ecx], ch; ret 0x448b; 
0x00129aa2: sbb byte ptr [ecx], ch; ret 0x5250; 
0x000660d1: sbb byte ptr [ecx], ch; ret; 
0x000bf5ac: sbb byte ptr [ecx], ch; sal byte ptr [ecx], 1; shr byte ptr [ecx], cl; ret; 
0x0009ad70: sbb byte ptr [ecx], cl; ret 0xc985; 
0x001232c9: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x0003cee3: sbb byte ptr [ecx], dh; fisttp dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000ab277: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0010b766: sbb byte ptr [edi - 0x18], dl; ret; 
0x000d1ce8: sbb byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x00032a19: sbb byte ptr [edi], cl; inc edx; ret 0xc189; 
0x0011fdb2: sbb byte ptr [edi], cl; inc esp; lea edx, [esp + 0xc]; mov ebx, dword ptr [esp + 0x50]; call dword ptr gs:[0x10]; 
0x000a0d63: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00046cbd: sbb byte ptr [edi], cl; test byte ptr [0x39000004], cl; ret; 
0x00043b7d: sbb byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000c896a: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00165145: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x00038285: sbb byte ptr [edx + 0x13], ah; add byte ptr [0x1edd77], al; mov eax, dword ptr [eax + 0x68]; ret; 
0x00106e38: sbb byte ptr [edx + 0x50], dl; call 0x107160; add esp, 0x10; add esp, 0xc; ret; 
0x00153246: sbb byte ptr [edx + 0xa], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x0002153a: sbb byte ptr [edx + 1], bh; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00152ee6: sbb byte ptr [edx + 1], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00152656: sbb byte ptr [edx + 2], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001516d6: sbb byte ptr [edx + 3], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001522b6: sbb byte ptr [edx + 4], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00150146: sbb byte ptr [edx + 5], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001529d6: sbb byte ptr [edx + 6], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00154836: sbb byte ptr [edx + 7], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001507b6: sbb byte ptr [edx + 8], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x001542d6: sbb byte ptr [edx + 9], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x00106cdc: sbb byte ptr [edx - 0x64], ch; call 0x106fa0; add esp, 0x18; pop ebx; ret; 
0x00106d90: sbb byte ptr [edx - 0x64], ch; call 0x107160; add esp, 0x1c; ret; 
0x00107e23: sbb byte ptr [edx - 0x64], ch; call 0x107e30; add esp, 0x1c; ret; 
0x001311d8: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x000dc10c: sbb byte ptr [edx - 1], ch; call 0xdc120; add esp, 0x1c; ret; 
0x000dc152: sbb byte ptr [edx - 1], ch; call 0xdc260; add esp, 0x1c; ret; 
0x0007af24: sbb byte ptr [edx - 6], dl; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00101e4d: sbb byte ptr [edx - 7], cl; call dword ptr [eax - 0x18]; 
0x00082bfd: sbb byte ptr [edx], al; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000860e4: sbb byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0011eada: sbb byte ptr [edx], ch; call 0x1200a0; add esp, 0x1c; ret; 
0x00154016: sbb byte ptr [edx], ch; call 0x14fa30; add esp, 0x1c; ret; 
0x0003053c: sbb byte ptr [edx], ch; call 0x304e0; add esp, 0x1c; ret; 
0x00038086: sbb byte ptr [edx], ch; call 0x37930; add esp, 0x1c; ret; 
0x000b5499: sbb byte ptr [edx], ch; call 0xb54b0; add esp, 0x1c; ret; 
0x000d5d1e: sbb byte ptr [edx], ch; call 0xd5e10; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012a591: sbb byte ptr [edx], ch; push 0x2000004; call eax; 
0x0003a75b: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x3a3f0; add esp, 0x1c; ret; 
0x00116f8c: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x58070; add esp, 0x1c; ret; 
0x0008a236: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x89820; add esp, 0x18; pop ebx; ret; 
0x000a14c6: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xb3d70; add esp, 0x18; pop ebx; ret; 
0x0004122a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3eaf0; add esp, 0x1c; ret; 
0x0004446a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x000475ba: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x000baaca: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xb83e0; add esp, 0x1c; ret; 
0x000bd8ba: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbb330; add esp, 0x1c; ret; 
0x000c050a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xbe010; add esp, 0x1c; ret; 
0x001104ef: sbb byte ptr [edx], ch; push eax; call 0x110260; add esp, 0x10; add esp, 0xc; ret; 
0x000ac1c4: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000816f1: sbb byte ptr [esi + 0x57], dl; push eax; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008158e: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0014e163: sbb byte ptr [esi + ebp*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0008e422: sbb byte ptr [esi - 0x18], dl; cmp bh, bh; dec dword ptr [ebx - 0x3b7cffbb]; adc byte ptr [eax - 0x76f38aff], ch; ret 0xca83; 
0x0016ebbb: sbb byte ptr [esi - 0x18], dl; fidivr word ptr [ecx]; int1; jmp dword ptr [ebp - 0x75]; 
0x000a10e3: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000db0bb: sbb byte ptr [esi - 7], al; call dword ptr [edi - 1]; 
0x0016e16b: sbb byte ptr [esp + eax], bh; jne 0x21302; mov eax, 8; add esp, 0xc; ret; 
0x000707c6: sbb ch, bh; cli; jmp dword ptr [esi - 0x70]; 
0x000cb231: sbb ch, byte ptr [ecx]; ret; 
0x001737a9: sbb ch, ch; call dword ptr [eax + 0x6a]; 
0x00137896: sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x000e79fe: sbb cl, al; clc; sbb byte ptr [ecx], bh; ret 0x850f; 
0x000aaebc: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x00151239: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x0014529a: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x000c8d75: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x00178df5: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x001432ce: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000aaebf: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00132916: sbb cl, ch; mov ebp, 0xe8fffffe; jmp esi; 
0x0010b433: sbb cl, ch; ret 0xfffd; 
0x00144188: sbb dh, al; inc esp; ud0; add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x000c8d79: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x00113b15: sbb dh, dh; ret 0x7540; 
0x00194817: sbb dh, dh; ret 0xf0f; 
0x00087dd6: sbb dl, 0xf8; dec dword ptr [ecx - 0x41f7dbac]; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015f122: sbb dl, byte ptr [eax]; in al, dx; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0011f9e6: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x0009927d: sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x0002fbd2: sbb dword ptr [eax + 0x65ffffff], 0x8b008b; mov eax, dword ptr [eax + 0x28]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fb92: sbb dword ptr [eax + 0x65ffffff], 0x8b008b; mov eax, dword ptr [eax + 0x30]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000df2fd: sbb dword ptr [eax - 0x73], edx; test dword ptr [edi + 0x47], ebx; stc; call dword ptr [eax - 0x18]; 
0x0005fa24: sbb dword ptr [eax - 0x76000001], 0xfffac485; jmp dword ptr [ebp - 0x75]; 
0x0014e30a: sbb dword ptr [eax - 0x7e], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x8248], 0; call esi; 
0x00109ad4: sbb dword ptr [eax], -0x60; stc; call dword ptr [eax - 0x73]; 
0x00082e47: sbb dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00080446: sbb dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; mov cl, 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019d355: sbb dword ptr [eax], eax; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0007e113: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x357f01f8], al; add esp, 8; pop ebx; ret; 
0x00082d95: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00021475: sbb dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x000723bd: sbb dword ptr [eax], eax; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00066a6b: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x137c4fec], cl; add al, 0x89; lea edx, [edi + esi*8 - 1]; call dword ptr [ebx + 0x57]; 
0x000803cd: sbb dword ptr [eax], eax; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x0009222c: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3b04], 0; ret; 
0x0008776c: sbb dword ptr [eax], eax; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x0009363d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0x93650; ret; 
0x000936cd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0x936e0; ret; 
0x0009367d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0x93690; ret; 
0x000938c9: sbb dword ptr [eax], eax; mov ecx, dword ptr [ecx + 0x3b68]; test ecx, ecx; jne 0x938e0; ret; 
0x0008897c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x0008895c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x11c], edx; ret; 
0x0009361c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1cc], edx; ret; 
0x000935fc: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x1d0], edx; ret; 
0x000936ac: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x208], edx; ret; 
0x000935ac: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x3b68], edx; ret; 
0x00091efd: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00092573: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000ac3c3: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000de730: sbb dword ptr [ebp + esi*2 + 0xc], edx; lea esi, [esi]; mov eax, 0x40; ret; 
0x00021461: sbb dword ptr [ebp - 0x1aad3f70], ecx; jmp dword ptr [ebp + 0x33]; 
0x00126006: sbb dword ptr [ebp - 0x76ea8b37], eax; ret 0xeac1; 
0x00126140: sbb dword ptr [ebp - 0x76f48a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001261ab: sbb dword ptr [ebp - 0x76f78a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00126396: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000cc267: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax + 0x56]; 
0x001386be: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax + 0x57]; 
0x000875b4: sbb dword ptr [ebx + 0x2a], -7; call dword ptr [eax - 0x73]; 
0x00074751: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0008fe26: sbb dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3adc], ecx; ret; 
0x000e7ddc: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000d5cc6: sbb dword ptr [ebx - 0x13379], ecx; jmp dword ptr [ebp - 0x39]; 
0x000c598c: sbb dword ptr [ebx - 0x361f7b], ecx; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00029a20: sbb dword ptr [ebx - 0x7ce3dbac], ecx; ret 0x8301; 
0x0011d1fc: sbb dword ptr [ebx], 0x4e; stc; call dword ptr [eax + 0x57]; 
0x00174667: sbb dword ptr [ebx], ecx; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0007e111: sbb dword ptr [ecx + ebx - 0x77d0000], 1; jg 0x7e150; add esp, 8; pop ebx; ret; 
0x0011d3fd: sbb dword ptr [ecx], 0x52; stc; call dword ptr [eax + 0x57]; 
0x000de63b: sbb dword ptr [ecx], eax; add byte ptr [eax + 0x7f], bh; mov edx, 0x7d00; pop ebx; cmove eax, edx; ret; 
0x0009227e: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0004ae8d: sbb dword ptr [ecx], eax; ret; 
0x000a170d: sbb dword ptr [ecx], ebp; ret; 
0x000951ee: sbb dword ptr [ecx], edi; ret 0x840f; 
0x000bf5ca: sbb dword ptr [ecx], edi; ror byte ptr [edi], 1; dec edi; ret 0x403; 
0x00040465: sbb dword ptr [ecx], edi; ror byte ptr [edi], 1; dec edi; ret 0xf001; 
0x00084557: sbb dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x0008bb0c: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000ac98a: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00024bd3: sbb dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x001082b4: sbb dword ptr [edi + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x0015f949: sbb dword ptr [edi + edi*8 - 0x3b7c0001], 4; pop ebx; pop esi; ret; 
0x000c7963: sbb dword ptr [edi - 0xa], edi; dec dword ptr [ebx - 0x363f43]; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000ac55d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bdde9: sbb dword ptr [edx + 0x31560016], eax; not byte ptr [ebx - 0x77]; ret; 
0x000cd6cf: sbb dword ptr [edx + 0x45], -7; call dword ptr [eax - 0x18]; 
0x00128c7b: sbb dword ptr [edx - 0x3b7c000b], 0x3e896510; pop ebx; pop esi; pop edi; ret; 
0x0011d3fe: sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x001933b3: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00132aff: sbb dword ptr [esi + 0x59], -7; call dword ptr [eax - 0x18]; 
0x000cc2c8: sbb dword ptr [esi], 0x45; stc; call dword ptr [eax - 0x18]; 
0x0011d13f: sbb dword ptr [esi], 0x4e; stc; call dword ptr [eax + 0x57]; 
0x001350bd: sbb dword ptr [esi], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00135241: sbb dword ptr [esi], 0x5a; stc; call dword ptr [eax - 0x73]; 
0x000ac5c3: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0011d124: sbb dword ptr [esp + ecx*2], -7; call dword ptr [eax + 0x57]; 
0x0015b0fb: sbb eax, -1; add esp, 0xc; ret; 
0x000b1930: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000a9365: sbb eax, -1; pop ebx; ret; 
0x000a8bf6: sbb eax, -1; pop edi; pop ebx; ret; 
0x000b3bde: sbb eax, -1; pop esi; pop ebx; ret; 
0x0010b5dd: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010a5db: sbb eax, 0; pop ebx; pop esi; ret; 
0x00181132: sbb eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0004ba70: sbb eax, 0x26b48d; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfb78ac], cl; ret 0x8901; 
0x00167bff: sbb eax, 0x514c481; add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; ret; 
0x00073f22: sbb eax, 0x5604ec83; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x000aaf47: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0015816e: sbb eax, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x0007027a: sbb eax, 0x5b14c483; pop esi; ret; 
0x0016b12d: sbb eax, 0x5b28c483; ret; 
0x000739b2: sbb eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000ac61a: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aab8f: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x00158878: sbb eax, 0x8100015c; ret; 
0x0019d178: sbb eax, 0x81fffd13; ret; 
0x0002c0b3: sbb eax, 0x83000001; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x0007dab0: sbb eax, 0x858dfffb; pop esp; jle 0x7dab1; call dword ptr [eax - 0x73]; 
0x0012975f: sbb eax, 0x89000002; ret; 
0x00109db8: sbb eax, 0x8908ec83; ret; 
0x00155a82: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000d8581: sbb eax, 0x8b0cec83; jge 0xd855c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000d87a1: sbb eax, 0x8b0cec83; jge 0xd877c; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x000563a7: sbb eax, 0x8bffffec; je 0x563d2; or al, 0x8d; xchg ah, bh; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x0004118f: sbb eax, 0x8bfffff6; jl 0x411ba; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x00167228: sbb eax, 0x8dffffff; je 0x167255; add byte ptr [ebx + 0x2901106d], al; ret; 
0x0011e7e3: sbb eax, 0x8dffffff; or dword ptr [eax - 0x5e], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0019c346: sbb eax, 0x903e0c1; ret 0x48d; 
0x001542ab: sbb eax, 0xec83000d; adc al, 0x8d; sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0012214d: sbb eax, 0xf000000; inc ebp; ret; 
0x000ac617: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x00020f46: sbb eax, 0xff0cec83; jne 0x20f19; call dword ptr [ebp - 0x38]; 
0x000dc63b: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006ad46: sbb eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x000e0047: sbb eax, dword ptr [ebp - 0x7cf18b0a]; in al, dx; or byte ptr [eax + 0x57], dl; call esi; 
0x000579d6: sbb eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00160c2a: sbb eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001104ad: sbb eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x00191964: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x00161df4: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x0008d44b: sbb eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000934eb: sbb eax, dword ptr [ecx + 0xb4c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0008b124: sbb eax, dword ptr [ecx + 8]; inc eax; xor eax, eax; ret; 
0x00192bb1: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00196fab: sbb eax, dword ptr [ecx]; ret 0xe283; 
0x0007b4f5: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000583dc: sbb eax, eax; add esp, 0x1c; ret; 
0x00176b86: sbb eax, eax; add esp, 0x2c; ret; 
0x000220b9: sbb eax, eax; add esp, 0xc; ret; 
0x000dced4: sbb eax, eax; add esp, 4; and eax, 0xc; pop ebx; pop esi; ret; 
0x0005842f: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0004acc3: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x0015eb0b: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0004ac35: sbb eax, eax; neg eax; pop ebx; pop esi; pop edi; ret; 
0x0008fdca: sbb eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000b3931: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000b3bdc: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0009427d: sbb ebp, eax; mov ebp, 0x83fff8bf; les ecx, ptr [ecx*4 - 0x192a3f7d]; call dword ptr [eax + 0x56]; 
0x000ac9da: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0016e750: sbb ebx, ebp; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00061384: sbb ebx, ebx; cmp edi, dword ptr [ecx]; ret 0x840f; 
0x0011d42a: sbb ecx, dword ptr [eax + eax]; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x000dcdf5: sbb ecx, dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002b7de: sbb ecx, dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x00124753: sbb ecx, dword ptr [ebp - 0x6d47c0ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x000aaeea: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000930c4: sbb ecx, dword ptr [ebx + 0x244c8b18]; mov eax, 0x199; mov esi, ebp; call dword ptr gs:[0x10]; 
0x0013d7b4: sbb ecx, dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000fc185: sbb ecx, dword ptr [ecx - 0x7ccf7427]; ret; 
0x000aaeed: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0011d1fd: sbb ecx, dword ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x0010a5d9: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x00134118: sbb edi, 0x59; stc; call dword ptr [eax - 0x18]; 
0x00092eeb: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x00092f4f: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000dc72c: sbb edi, dword ptr [eax + 0x1d]; call dword ptr gs:[0x10]; 
0x0013bdc1: sbb edi, dword ptr [eax + 6]; call dword ptr gs:[0x10]; 
0x000c2dd4: sbb edi, dword ptr [ecx]; ret; 
0x000c8d84: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014f433: sbb edi, esi; dec dword ptr [ecx + 0x74808dc6]; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014d8ea: sbb edx, dword ptr [eax - 0x73]; xchg al, dl; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00035dbf: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000363fc: sbb edx, ebx; pop ebx; pop esi; mov eax, edx; shr eax, 0x1f; ret; 
0x0013ce28: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x00023939: sbb esi, 0x45; stc; call dword ptr [eax - 1]; 
0x001169c1: sbb esi, dword ptr [edx + 0x5c8bfff6]; and al, 0x20; mov edx, eax; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00127fc9: sbb esi, eax; call dword ptr [eax - 1]; 
0x0011d8f5: sbb esi, ebp; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x0012f287: sbb esi, ebp; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5153092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009afb7: sbb esi, ebp; push esi; add dword ptr [ecx + eax - 0x72ff0000], 0xf5155092; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000ec0c8: sbb esi, esi; ret; 
0x00093d78: sbb esp, -0x7b; stc; call dword ptr [eax - 1]; 
0x000751a1: sbb esp, dword ptr [ecx]; add bl, ch; ret 0xb48d; 
0x00046cb1: sbb esp, dword ptr [edx - 0x3b7d0000]; adc byte ptr [ecx + 0x244439c1], cl; sbb byte ptr [edi], cl; test byte ptr [0x39000004], cl; ret; 
0x000530be: scasb al, byte ptr es:[edi]; add al, 0; add dh, dh; ret 0xf50; 
0x00193e0e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x00023ae0: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or dword ptr [edi + 0x2a], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000d785b: scasb al, byte ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x000e0dd6: scasb al, byte ptr es:[edi]; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x48f6b]; dec dword ptr [ebp - 0x1468ef80]; call dword ptr [eax + 0x6a]; 
0x00161b9e: scasb al, byte ptr es:[edi]; in eax, 0xeb; dec dword ptr [ecx - 0x763e7606]; ret; 
0x000885ce: scasb al, byte ptr es:[edi]; jb 0x885cb; dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0008f86e: scasb al, byte ptr es:[edi]; jns 0x8f870; jmp dword ptr [esi - 0x70]; 
0x0003394e: scasb al, byte ptr es:[edi]; or al, 8; add byte ptr [ecx - 0x76d3dbbc], cl; ret 0x48d; 
0x0016651f: scasb al, byte ptr es:[edi]; out dx, al; dec dword ptr [ebx + 0x291c244c]; ret; 
0x000bb10a: scasb al, byte ptr es:[edi]; push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0015f6c4: scasb al, byte ptr es:[edi]; rol bl, 0xf3; dec dword ptr [ebp - 0xd023f4a]; call dword ptr [ebp - 0x73]; 
0x00099e9e: scasb al, byte ptr es:[edi]; salc; sti; dec dword ptr [ecx - 0x2917dbe4]; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x00133e6e: scasb al, byte ptr es:[edi]; sar edi, 1; jmp dword ptr [esi - 0x70]; 
0x00151693: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0014d8df: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014f651: scasb al, byte ptr es:[edi]; stc; call dword ptr [edx - 0x73]; 
0x00024cb3: scasb al, byte ptr es:[edi]; sub edi, ecx; call dword ptr [eax - 0x73]; 
0x0003d3d6: scasd eax, dword ptr es:[edi]; aad 1; ret 0xf089; 
0x0005caba: scasd eax, dword ptr es:[edi]; adc byte ptr [eax], al; add dh, al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0008674a: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00090955: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76dbdbb4], cl; retf 0x4c8b; and al, 0x18; call dword ptr gs:[0x10]; 
0x00086a3a: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0019da8d: scasd eax, dword ptr es:[edi]; call 0x10de5e93; add esp, 8; pop ebx; ret; 
0x0009b006: scasd eax, dword ptr es:[edi]; cmc; inc dword ptr [ebx - 0x6d72fe1d]; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0003d661: scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x0005e1a7: scasd eax, dword ptr es:[edi]; or al, byte ptr [eax]; add byte ptr [ebx - 0x5a77b], cl; jmp dword ptr [ebp - 0x75]; 
0x0014209b: scasd eax, dword ptr es:[edi]; pop ebp; stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x00076f67: scasd eax, dword ptr es:[edi]; ret 0x2999; 
0x00035287: scasd eax, dword ptr es:[edi]; ret 0x6c8b; 
0x00077d62: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x0003d667: scasd eax, dword ptr es:[edi]; ret 0xc301; 
0x000829ee: scasd eax, dword ptr es:[edi]; ret; 
0x00151623: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0002d09d: scasd eax, dword ptr es:[edi]; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0017f4a3: scasd eax, dword ptr es:[edi]; xor eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x001252ed: seta al; movzx eax, al; neg eax; ret; 
0x00081bd8: setae al; ret; 
0x000cda82: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000f6ab9: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0008f213: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00047d05: sete al; add esp, 0xc; movzx eax, al; ret; 
0x0014cd64: sete al; add esp, 0xc; ret; 
0x000de8aa: sete al; movzx eax, al; lea eax, [eax + eax - 1]; ret; 
0x0007a5db: sete al; movzx eax, al; ret; 
0x0008f0e2: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0002fc9e: sete al; ret; 
0x0016e625: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x001026cc: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x0011f2a9: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x001591c6: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0011f2ea: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000e939f: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0015860c: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x0007dbc1: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x00157467: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00158695: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x00118b6b: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x000f9ae9: setne al; movzx eax, al; neg eax; ret; 
0x00082122: setne al; movzx eax, al; pop ebx; ret; 
0x0003801f: setne al; movzx eax, al; ret; 
0x00117db2: setne al; pop edi; movzx eax, al; ret; 
0x0011af63: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000de83d: setne al; ret; 
0x0008d985: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008bb09: setne byte ptr [edx + 0x19]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0008b4f7: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001579ec: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007a5af: setne dl; mov eax, edx; ret; 
0x00083ddf: setne dl; shl edx, 7; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0003835d: sgdt [eax]; add byte ptr [eax + 0x1a5], bh; mov esi, 8; mov ecx, ebp; mov edx, edi; call dword ptr gs:[0x10]; 
0x000b5332: sgdt [eax]; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0010318a: sgdt [eax]; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x00033234: shl al, 1; call dword ptr [eax + 0x6a]; 
0x000786d2: shl bh, 0xff; call dword ptr [eax - 0x73]; 
0x0009a07c: shl bl, 0xe8; push esi; inc ecx; jle 0x9a094; cmovne eax, edx; ret; 
0x000a16c6: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x00138667: shl byte ptr [ebx], 0x89; loope 0x1385f5; ret 0x25; 
0x0004489d: shl byte ptr [ebx], cl; jl 0x448c5; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x000baefd: shl byte ptr [ebx], cl; jl 0xbaf25; cmp byte ptr [edi], cl; xchg ebp, eax; ret 0x5409; 
0x0012e891: shl byte ptr [ecx + edi], 0xd0; jae 0x12e8a0; cmp dword ptr [eax + 4], ecx; jne 0x12e890; mov eax, dword ptr [eax + 0x18]; ret; 
0x00147967: shl byte ptr [esi + 0x39], 0x71; add dh, byte ptr [edx + ecx + 0x5b]; pop esi; ret; 
0x00177623: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x0018e225: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b2e36: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0018f11c: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003b8f6: shl byte ptr [esi - 0x77], 0x51; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001987b4: shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x00157914: shl dword ptr [ebx - 7], cl; call dword ptr [edx + 0x6a]; 
0x0016b98b: shl dword ptr [ecx + esi*8 - 1], 0xe8; mov word ptr [esi - 4], ss; jmp dword ptr [esi - 0x70]; 
0x00150123: shl dword ptr [ecx - 7], 1; call dword ptr [eax + 0x6a]; 
0x00150223: shl dword ptr [ecx - 7], 1; call dword ptr [eax - 0x18]; 
0x001935f5: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x00097c86: shl dword ptr [ecx], 1; ret 0x1a8b; 
0x000b2fb5: shl dword ptr [ecx], 1; retf 0xd285; je 0xb2f90; bsr ecx, edx; add eax, ecx; ret; 
0x00070c20: shl dword ptr [ecx], 1; rol dword ptr [ebx + 0x4874fff9], 0x89; ret; 
0x0007c581: shl dword ptr [ecx], cl; ret; 
0x000b2e3e: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001935f1: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x0018e8e5: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x0018f2a6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x0018e8d0: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0018f28c: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x0018e8bb: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x0018e8a6: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x0018f272: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x0018e972: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0018f1cc: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b2a65: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x0018f07c: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0010361d: shl eax, 2; push eax; call 0x20150; add esp, 0x18; pop ebx; ret; 
0x0013dc71: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0016d7d6: shl eax, 5; lea eax, [eax + edx + 0x64]; ret; 
0x0008d988: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000574e8: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00037f66: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00038017: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x0004b1cf: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0016e50b: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x001442d8: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0008b4fa: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0004fa6c: shl edi, 0xff; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0013112d: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0008b0b3: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0004c5a0: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0004c557: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0003b3b6: shl edx, 0xa; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x0013da12: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00083de2: shl edx, 7; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x00131153: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x001632d4: shr ah, cl; call dword ptr [eax - 0x73]; 
0x00155fa8: shr al, 0x72; mov al, 0xfd; jmp dword ptr [esi - 0x70]; 
0x0013b868: shr al, 0xb2; jb 0x13b86b; inc dword ptr [ebp - 0x76a98740]; ret; 
0x0012e917: shr ax, 0xe; and eax, 1; pop ebx; ret; 
0x0015baad: shr bl, 0x32; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00108b41: shr bl, 0xdc; lea esi, [esi]; mov edx, dword ptr [esp + 0x98]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x000c1aa8: shr bl, 1; or al, 0x8d; je 0xc1ad4; add byte ptr [eax + 0x3901c083], dl; ret; 
0x0015cbda: shr bl, cl; or cl, byte ptr [ebp - 0x6b74ff8a]; ret; 
0x0008fc2b: shr bl, cl; or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00110389: shr bl, cl; ret; 
0x000b49ec: shr byte ptr [0x81f6ffea], 0x83; add byte ptr [eax], al; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0010cc35: shr byte ptr [eax + 0x2444c720], cl; and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x4f8b; 
0x00154f3a: shr byte ptr [eax], 0xff; jo 0x154f53; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0014d8ee: shr byte ptr [ebp - 0x17af0007], 1; mov byte ptr [edi], bl; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000e956a: shr byte ptr [ebx - 0xd], cl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000b2c82: shr byte ptr [ecx], 0xc2; jbe 0xb2cc0; add eax, edi; pop edi; ret; 
0x000b2c95: shr byte ptr [ecx], 0xc2; jbe 0xb2cc0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2ca5: shr byte ptr [ecx], 0xc2; jbe 0xb2cc0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2cb5: shr byte ptr [ecx], 0xc2; jbe 0xb2cc0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004fa45: shr byte ptr [ecx], 1; ret; 
0x00054417: shr byte ptr [ecx], cl; fdiv dword ptr [ecx]; fstp xword ptr [ecx]; ret 0xbb7d; 
0x000b9b0d: shr byte ptr [ecx], cl; ret; 
0x00144333: shr byte ptr [edx + 2], 0x8d; xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x0016f0ed: shr byte ptr [edx], 0x8d; xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x0005d40c: shr cl, 0x58; ret 0xffff; 
0x00062e77: shr cl, 0x62; fdivr st(7); dec dword ptr [ebx - 0x4f37b]; dec dword ptr [ebx - 0x5074b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0005d5b5: shr cl, 0x84; aam 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x0006c7c8: shr cl, 0xe2; out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x0014aee6: shr cl, cl; or eax, 0x8dffffff; add dword ptr [eax - 0x53], -7; call dword ptr [eax - 0x73]; 
0x000cb22c: shr dword ptr [ebx + 0x54], cl; and al, 0x10; sbb ch, byte ptr [ecx]; ret; 
0x001437d1: shr dword ptr [ecx], 1; fld dword ptr [ecx]; ret; 
0x000cabd1: shr dword ptr [ecx], cl; ret; 
0x0003b3b3: shr eax, 0x10; shl edx, 0xa; pop ebx; and eax, 0x3ff; xor eax, edx; ret; 
0x00088a66: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001311a0: shr eax, 0x18; ret; 
0x001026cf: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x0008afae: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00035a4e: shr eax, 0x1f; ret; 
0x00035a31: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x00081e3c: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x19f0], eax; ret; 
0x0012e918: shr eax, 0xe; and eax, 1; pop ebx; ret; 
0x0009cb44: shr eax, 1; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0008d91e: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013dc42: shr eax, 1; ret; 
0x0004abad: shr eax, 2; lea ebx, [eax*4 - 4]; lea eax, [eax + eax*8 + 2]; call 0x4ab70; add eax, ebx; jmp eax; 
0x000847d4: shr eax, 3; je 0x84810; mov eax, edi; call dword ptr gs:[0x10]; 
0x0013d5ef: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0009365f: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0007b3ca: shr eax, 4; and eax, 1; ret; 
0x0007b3ea: shr eax, 5; and eax, 1; ret; 
0x00131182: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001259e2: shr eax, cl; and eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0011fac1: shr eax, cl; and eax, 3; ret; 
0x001633a0: shr eax, cl; jp 0x163380; cld; jmp dword ptr [esi - 0x70]; 
0x00050cbb: shr ebx, 0xfd; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0004b237: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x00035a34: shr ecx, 0x10; or eax, ecx; ret; 
0x0010292b: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000970c8: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00102463: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000b9466: shr ecx, cl; ret 0xfffc; 
0x0013118b: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x001262c2: shr edx, cl; and edx, 1; mov eax, edx; pop ebx; pop esi; ret; 
0x00084554: shr esi, 1; je 0x84571; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00084a54: shr esi, 1; je 0x84a6e; xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00174f4b: shr esp, 0xf3; call dword ptr [edi - 1]; 
0x0011e3ff: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00139ed0: sldt word ptr [eax]; add esp, 0x18; pop ebx; ret; 
0x0011e3db: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x00192894: sldt word ptr [eax]; jne 0x192690; xor eax, eax; pop edi; ret; 
0x00022731: sldt word ptr [eax]; ret; 
0x00066886: sldt word ptr [eax]; sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0012f90e: sldt word ptr [ebx - 0x7f72e714]; mov ch, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0013102e: sldt word ptr [ebx - 0x7f72e714]; neg dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0007bb48: sldt word ptr [ecx + 0x1aa4b6c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x000c917d: sldt word ptr [ecx]; ret; 
0x00025021: stc; add al, 0xf; test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x0019a529: stc; add al, 0xf; test byte ptr [ebx - 0x76000004], dl; ret; 
0x0007cc8b: stc; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x000b46b5: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x0004ea45: stc; add byte ptr [ecx], bl; ret 0xba; 
0x00186392: stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0018e2dd: stc; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000fa2ad: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ceacb: stc; add dword ptr [ebp - 0x69f022b6], ecx; ret; 
0x00157c41: stc; add dword ptr [ebx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011d1a3: stc; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x001028e2: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010245f: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010cb9a: stc; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x001570e2: stc; add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0004856f: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001173b1: stc; call dword ptr [eax + 0x50]; 
0x0014433a: stc; call dword ptr [eax + 0x51]; 
0x0014cd56: stc; call dword ptr [eax + 0x52]; 
0x00030b74: stc; call dword ptr [eax + 0x53]; 
0x000cb997: stc; call dword ptr [eax + 0x55]; 
0x0002c359: stc; call dword ptr [eax + 0x56]; 
0x0003fbd8: stc; call dword ptr [eax + 0x57]; 
0x00024ca9: stc; call dword ptr [eax + 0x68]; 
0x0002170a: stc; call dword ptr [eax + 0x6a]; 
0x00154815: stc; call dword ptr [eax + 0x6a]; pop es; call 0x14f970; add esp, 0x1c; ret; 
0x001529b5: stc; call dword ptr [eax + 0x6a]; push es; call 0x14f970; add esp, 0x1c; ret; 
0x000f2e4d: stc; call dword ptr [eax - 0x17]; 
0x000218d0: stc; call dword ptr [eax - 0x18]; 
0x00088941: stc; call dword ptr [eax - 0x18]; aaa; outsd dx, dword ptr [esi]; cli; jmp dword ptr [esi - 0x70]; 
0x0008a812: stc; call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x000b9b56: stc; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x0014e179: stc; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x00043633: stc; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x00101336: stc; call dword ptr [eax - 0x18]; inc edx; in eax, 0xf2; jmp dword ptr [esi - 0x70]; 
0x001442f9: stc; call dword ptr [eax - 0x18]; jg 0x1442b4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000e6fb9: stc; call dword ptr [eax - 0x18]; jmp dword ptr [esi]; 
0x000df303: stc; call dword ptr [eax - 0x18]; jne 0xdf30e; cmc; jmp dword ptr [esi - 0x70]; 
0x0013dfb3: stc; call dword ptr [eax - 0x18]; lds ebx, ptr [eax]; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0014d8f0: stc; call dword ptr [eax - 0x18]; mov byte ptr [edi], bl; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0014aac6: stc; call dword ptr [eax - 0x18]; mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151dbe: stc; call dword ptr [eax - 0x18]; mov edx, 0xe8ffedda; push ebp; std; jmp dword ptr [esi - 0x70]; 
0x0014b591: stc; call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x0008e717: stc; call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x0013a116: stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x000258b6: stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x000b61b6: stc; call dword ptr [eax - 0x18]; ret 0xf796; 
0x00058916: stc; call dword ptr [eax - 0x18]; ret 0xfd7b; 
0x00117446: stc; call dword ptr [eax - 0x18]; ret 7; 
0x0011dfb5: stc; call dword ptr [eax - 0x18]; ret; 
0x000ffca6: stc; call dword ptr [eax - 0x18]; sar bl, cl; bnd jmp dword ptr [esi - 0x70]; 
0x0008a87b: stc; call dword ptr [eax - 0x18]; std; dec edi; cli; jmp dword ptr [esi - 0x70]; 
0x000895f2: stc; call dword ptr [eax - 0x18]; xchg byte ptr [edx - 6], ah; jmp dword ptr [esi - 0x70]; 
0x00118bd2: stc; call dword ptr [eax - 0x39]; 
0x001377db: stc; call dword ptr [eax - 0x42]; 
0x00021fa7: stc; call dword ptr [eax - 0x73]; 
0x0013a10f: stc; call dword ptr [eax - 0x73]; or ebx, 0x5c; stc; call dword ptr [eax - 0x18]; ret 0x123; 
0x0011743f: stc; call dword ptr [eax - 0x73]; xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x0007d736: stc; call dword ptr [eax - 0x75]; 
0x0006a216: stc; call dword ptr [eax - 0x77]; 
0x0002393c: stc; call dword ptr [eax - 1]; 
0x00169cf1: stc; call dword ptr [ebp + 0x50]; 
0x00093890: stc; call dword ptr [ebp + 0x51]; 
0x000577a1: stc; call dword ptr [ebp + 0x53]; 
0x00057954: stc; call dword ptr [ebp + 0x56]; 
0x00163980: stc; call dword ptr [ebp + 0x6a]; 
0x001374d0: stc; call dword ptr [ebp - 0x77]; 
0x0012a374: stc; call dword ptr [ebp - 1]; 
0x000589d7: stc; call dword ptr [ebx + 0x50]; 
0x001448a2: stc; call dword ptr [ebx - 0x18]; 
0x0014ee5b: stc; call dword ptr [ebx - 0x73]; 
0x000ba11b: stc; call dword ptr [ebx - 1]; 
0x00058ae1: stc; call dword ptr [ecx + 0x50]; 
0x0011d418: stc; call dword ptr [ecx + 0x51]; 
0x00080f46: stc; call dword ptr [ecx + 0x52]; 
0x00057fef: stc; call dword ptr [ecx + 0x53]; 
0x0015e5b0: stc; call dword ptr [ecx + 0x6a]; 
0x0013e046: stc; call dword ptr [ecx - 0x77]; 
0x000db057: stc; call dword ptr [ecx - 1]; 
0x0011974f: stc; call dword ptr [edi + 0x50]; 
0x0015ef75: stc; call dword ptr [edi + 0x52]; 
0x00169762: stc; call dword ptr [edi + 0x53]; 
0x00168f1e: stc; call dword ptr [edi + 0x55]; 
0x001688f1: stc; call dword ptr [edi + 0x56]; 
0x0013371c: stc; call dword ptr [edi - 0x73]; 
0x001196c7: stc; call dword ptr [edi - 0x7f]; 
0x000db0bd: stc; call dword ptr [edi - 1]; 
0x00024081: stc; call dword ptr [edx + 0x50]; 
0x000ea1cf: stc; call dword ptr [edx + 0x52]; 
0x00157711: stc; call dword ptr [edx + 0x6a]; 
0x0012ee17: stc; call dword ptr [edx - 0x17]; 
0x000227cb: stc; call dword ptr [edx - 0x73]; 
0x00117357: stc; call dword ptr [edx - 0x77]; 
0x000cc2e3: stc; call dword ptr [esi + 0x50]; 
0x001697bb: stc; call dword ptr [esi + 0x53]; 
0x0015cae8: stc; call dword ptr [esi + 0x57]; 
0x00047993: stc; call dword ptr [esi + 0x6a]; 
0x00144826: stc; call dword ptr [esi - 0x18]; 
0x00058d24: stc; call dword ptr [esi - 0x77]; 
0x0002f7bf: stc; call dword ptr [esi - 1]; 
0x000824e5: stc; call dword ptr gs:[0x10]; 
0x0011cc7f: stc; call ptr [ebx + 0x5e]; ret; 
0x001598af: stc; cli; jmp dword ptr [ebp - 0x77]; 
0x00070b49: stc; cli; jmp dword ptr [esi - 0x70]; 
0x00122276: stc; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0011e1f7: stc; dec dword ptr [eax - 0x6c72f7aa]; ret 0xf952; 
0x001039b7: stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0003fba2: stc; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0014209d: stc; dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax + 0x52]; 
0x0009ec61: stc; dec dword ptr [ebp - 0x66a3b70]; call dword ptr [edx - 0x73]; 
0x0009e99d: stc; dec dword ptr [ebp - 0x66acf70]; call dword ptr [edx - 0x73]; 
0x00090440: stc; dec dword ptr [ebp - 0x67c837d]; call dword ptr [eax + 0x68]; 
0x001379b0: stc; dec dword ptr [ebp - 0x68d4b57]; call dword ptr [eax + 0x55]; 
0x0013e040: stc; dec dword ptr [ebp - 0x6a28d7a]; call dword ptr [ecx - 0x77]; 
0x00121bd6: stc; dec dword ptr [ebp - 0x6aa3f53]; call dword ptr [eax - 0x18]; 
0x000f2bb7: stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000de2c6: stc; dec dword ptr [ebp - 0x6b91c80]; call dword ptr [ebx + 0x50]; 
0x00098a63: stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00096de5: stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x000f2e47: stc; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x00161e8e: stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00044964: stc; dec dword ptr [ebx - 0x1334b]; jmp dword ptr [ebp - 0x39]; 
0x00047ed5: stc; dec dword ptr [ebx - 0x1336e]; jmp dword ptr [esi - 0x77]; 
0x0003e7f4: stc; dec dword ptr [ebx - 0x13375]; jmp dword ptr [ebp - 0x39]; 
0x000bb0b6: stc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x00091955: stc; dec dword ptr [ebx - 0x7972778b]; dec eax; test cl, bh; call dword ptr [eax + 0x68]; 
0x00138a32: stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x00024446: stc; dec dword ptr [ecx - 0x48f0f7bd]; xchg esp, edx; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x00055b7c: stc; dec dword ptr [ecx - 0x6bf0ef88]; ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x0009a32e: stc; dec dword ptr [ecx - 0x72afdbe4]; test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x00056ea4: stc; dec dword ptr [ecx - 0x72f7db8c]; mov bl, 1; xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x00030175: stc; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0012f94a: stc; dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x00056eae: stc; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0002ee08: stc; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x00034ef4: stc; dec dword ptr [edi]; inc ebp; call 0x266e6; jmp dword ptr [esi - 0x70]; 
0x0010b126: stc; dec dword ptr [edi]; inc esp; ret 0x4489; 
0x0007c1b5: stc; dec dword ptr [edi]; inc esp; ret 0x568b; 
0x000d995e: stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000d98a6: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0011a6a3: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x001179b2: stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000512d7: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x001385d5: stc; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0008137e: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000832ac: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00099276: stc; inc dword ptr [ebx - 0x72aff33c]; sbb dword ptr [eax + 0x5b], -7; call dword ptr [eax + 0x6a]; 
0x001747d0: stc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00169e97: stc; inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0016e7e4: stc; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x00034e13: stc; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0010067c: stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0014696b: stc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00102e8f: stc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0004473f: stc; jmp dword ptr [ebp - 0x39]; 
0x00093a51: stc; jmp dword ptr [ebp - 0x5f]; 
0x0002ea1a: stc; jmp dword ptr [ebp - 0x75]; 
0x0011bf48: stc; jmp dword ptr [ebp - 0x77]; 
0x0011ac76: stc; jmp dword ptr [ecx]; 
0x001891ea: stc; jmp dword ptr [esi + 0xf]; 
0x0009e9bc: stc; jmp dword ptr [esi - 0x70]; 
0x00024450: stc; jmp dword ptr [esi - 0x77]; 
0x000f6a6b: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000d6787: stc; mov ebp, eax; mov esi, dword ptr [esp + 4]; mov eax, 0x197; call dword ptr gs:[0x10]; 
0x000d66b9: stc; mov ebx, 1; call dword ptr gs:[0x10]; 
0x00177604: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176fd4: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x001459f0: stc; or cl, byte ptr [edi]; xchg esp, eax; ret 0xd008; 
0x001138c9: stc; or dword ptr [ebx + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000b4c21: stc; pop edi; cmovg eax, edx; ret; 
0x00192792: stc; pop edi; ret; 
0x000b47de: stc; pop esi; ret; 
0x0013b10f: stc; pop esp; stc; call dword ptr [eax + 0x53]; 
0x00070c24: stc; push dword ptr [eax + ecx*2 - 0x77]; ret; 
0x00070ee3: stc; ret 0; 
0x000bb109: stc; scasb al, byte ptr es:[edi]; push ss; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00191961: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x00093709: stc; sub byte ptr [ecx], bl; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x000cda67: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xcda78; mov eax, edx; ret; 
0x0004db51: stc; xor byte ptr [edi], cl; test byte ptr [edi - 0x76fffffd], ah; ret; 
0x0009a0de: stc; xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x0018cdc6: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00187cc2: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0018fc3a: std; add al, 0x76; ret; 
0x00193f99: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000de62a: std; add byte ptr [eax], al; pop ebx; cmove eax, edx; ret; 
0x0004dbff: std; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x001920cf: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019a411: std; add dword ptr [ecx], ebx; shl byte ptr [esi - 0x7f], cl; ret 0x7fff; 
0x001887bd: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0002de3f: std; and bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015f6cc: std; bnd call dword ptr [ebp - 0x73]; 
0x00155a73: std; bnd call dword ptr [edx + 0x6a]; 
0x00160e56: std; call dword ptr [eax - 0x73]; 
0x001031bb: std; call dword ptr [ecx + 0x6a]; 
0x000f66c1: std; clc; call dword ptr [ecx + 0x6a]; 
0x000707c7: std; cli; jmp dword ptr [esi - 0x70]; 
0x0015b6c3: std; dec dword ptr [ebp - 0x69c1f7d]; call dword ptr [edx + 0x6a]; 
0x00157910: std; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x00058ba1: std; dec dword ptr [ebx + 0x39c8290f]; ret; 
0x00050ac3: std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00050b32: std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x689bb79]; call dword ptr [eax - 0x73]; 
0x001032a0: std; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb181: std; dec eax; stc; call dword ptr [eax + 0x56]; 
0x0008a87f: std; dec edi; cli; jmp dword ptr [esi - 0x70]; 
0x00061f7f: std; fdivp st(7); jmp dword ptr [ebp - 0x77]; 
0x00035c0d: std; fstp st(1); ret; 
0x00058b9f: std; idiv ch; dec dword ptr [ebx + 0x39c8290f]; ret; 
0x0012fdf5: std; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000d5ae1: std; inc dword ptr [ebx - 0x3616ef3c]; jecxz 0xd5ae9; call dword ptr [eax + 0x53]; 
0x00103166: std; inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0012ff3e: std; inc dword ptr [ebx - 0x3f7aef3c]; je 0x12ff50; add esp, 8; pop ebx; ret; 
0x0005891c: std; inc dword ptr [ebx - 0x72aff33c]; test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x0019d618: std; inc dword ptr [ecx + 0x889e6c3]; add byte ptr [ebx - 0x7c74f714], al; mov al, byte ptr [0x85000042]; sal byte ptr [ebp + eax - 0x18], 0x3e; ret 0xfff4; 
0x0019d34a: std; inc dword ptr [ecx + 0x88cb4c3]; add byte ptr [ebx + 0x194483], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0018f858: std; inc dword ptr [ecx + 0x967a6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0018f358: std; inc dword ptr [ecx + 0x96ca6c3]; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0004cbc1: std; jmp dword ptr [esi - 0x70]; 
0x00177608: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d5a3: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00176fd8: std; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00083b12: std; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x0018ea75: std; mov eax, 0; jne 0x18f336; pop ebx; ret; 
0x00191b8b: std; mov eax, 0; jne 0x191c60; pop ebx; ret; 
0x00184a4b: std; movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00087bd8: std; or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x000ac1df: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00085adc: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00080bf6: std; pop ds; pop edi; mov edx, ebp; pop ebp; ret; 
0x001927c2: std; pop edi; ret; 
0x000b3143: std; pop esi; pop edi; pop ebp; ret; 
0x000d82df: std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0013bef2: sti; adc al, 0xf; xchg esp, eax; ret; 
0x0013ca5f: sti; add al, 0x72; ret; 
0x0004fe66: sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000420c5: sti; add byte ptr [ecx], bl; ret 0xba; 
0x0002c51b: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00101caa: sti; add cl, byte ptr [edi]; xchg esp, eax; ret 0xff52; 
0x00165e3b: sti; add dword ptr [edi], ecx; test byte ptr [0x8b000001], bh; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x000ffcab: sti; bnd jmp dword ptr [esi - 0x70]; 
0x00125913: sti; call 0x16e4a1; add eax, 0x1006e7; mov eax, dword ptr [eax - 0xc8]; mov eax, dword ptr [eax + 0x24]; ret; 
0x00087763: sti; call 0x16e4a1; add eax, 0x19e897; mov eax, dword ptr [eax + 0x3a28]; ret; 
0x00080343: sti; call 0x16e4a1; add eax, 0x1a5cb7; mov eax, dword ptr [eax + 0xce0]; ret; 
0x000382a3: sti; call 0x16e4a1; add eax, 0x1edd57; mov eax, dword ptr [eax + 0x64]; ret; 
0x00038283: sti; call 0x16e4a1; add eax, 0x1edd77; mov eax, dword ptr [eax + 0x68]; ret; 
0x0002fee3: sti; call 0x16e4a1; add eax, 0x1f6117; mov eax, dword ptr [eax - 0x144]; add eax, dword ptr gs:[0]; ret; 
0x0002fec3: sti; call 0x16e4a1; add eax, 0x1f6137; mov eax, dword ptr [eax - 0xc]; add eax, dword ptr gs:[0]; ret; 
0x0002fea3: sti; call 0x16e4a1; add eax, 0x1f6157; mov eax, dword ptr [eax - 0x13c]; add eax, dword ptr gs:[0]; ret; 
0x0002b803: sti; call 0x16e4a1; add eax, 0x1fa7f7; mov eax, dword ptr [eax + 0x1014]; ret; 
0x00022743: sti; call 0x16e4a1; add eax, 0x2038b7; mov eax, dword ptr [eax + 0xff0]; ret; 
0x00022723: sti; call 0x16e4a1; add eax, 0x2038d7; mov eax, dword ptr [eax + 0xfec]; ret; 
0x00021dc3: sti; call 0x16e4a1; add eax, 0x204237; mov eax, dword ptr [eax - 0x134]; add eax, dword ptr gs:[0]; ret; 
0x00021743: sti; call 0x16e4a1; add eax, 0x2048b7; lea eax, [eax - 0x6921c]; ret; 
0x00021723: sti; call 0x16e4a1; add eax, 0x2048d7; lea eax, [eax - 0x69214]; ret; 
0x00143fe3: sti; call 0x16e4a1; add eax, 0xe2017; mov eax, dword ptr [eax - 0x14]; mov eax, dword ptr gs:[eax]; ret; 
0x00131413: sti; call 0x16e4a1; add eax, 0xf4be7; mov eax, dword ptr [eax - 0x114]; add eax, dword ptr gs:[0]; ret; 
0x0014b3a7: sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x000f5565: sti; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00081c43: sti; cmp dword ptr [esp + 4], 1; je 0x81c58; mov eax, dword ptr gs:[8]; mov byte ptr [eax + 0x4fe], 0; ret; 
0x000fd6f5: sti; dec byte ptr [edi]; test dword ptr [ebx], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x70373], cl; jmp dword ptr [ebp - 0x7d]; 
0x000df737: sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0007dab1: sti; dec dword ptr [ebp - 0x681a37b]; call dword ptr [eax - 0x73]; 
0x00079d0d: sti; dec dword ptr [ebp - 0x6820f7d]; call dword ptr [eax - 0x73]; 
0x0007815d: sti; dec dword ptr [ebp - 0x682e37a]; call dword ptr [eax - 0x73]; 
0x00099ea0: sti; dec dword ptr [ecx - 0x2917dbe4]; or bh, dh; jmp dword ptr [esi - 0x70]; 
0x0015c021: sti; dec edi; std; jmp dword ptr [esi - 0x70]; 
0x001179e0: sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x00035c03: sti; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0004012e: sti; idiv edi; call dword ptr [eax + 0x6a]; 
0x00160933: sti; in al, dx; call dword ptr [eax - 0x73]; 
0x000d68f3: sti; inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000f8c27: sti; inc dword ptr [ebx - 0x3b7cfefa]; adc byte ptr [ecx], al; ret; 
0x000f9a50: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0006601b: sti; jecxz 0x6601d; jmp eax; 
0x00020163: sti; jmp dword ptr [ebx + 0xc]; 
0x000dd17c: sti; jmp dword ptr [esi - 0x70]; 
0x001775c4: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00176f94: sti; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00083f7c: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0017b408: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d438: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001848e8: sti; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00184924: sti; mov dword ptr [edx - 5], ecx; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x001214a3: sti; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001214a3: sti; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000ddc43: sti; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000ddc43: sti; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00116a33: sti; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00116a33: sti; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x216d0; ret; 
0x000ddc63: sti; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000ddc63: sti; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x000ddf93: sti; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000ddf93: sti; mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x000de013: sti; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0011a243: sti; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0008f1b3: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0008f1b3: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x000ddc83: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000ddc83: sti; mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000ddcc3: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000ddcc3: sti; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000ddca3: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000ddca3: sti; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000ddce3: sti; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000ddce3: sti; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00121853: sti; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00121853: sti; mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x0007f683: sti; mov eax, 0xffffffff; mov edx, 0xffffffff; ret; 
0x0007eea3: sti; mov eax, 0xffffffff; ret; 
0x00154f73: sti; mov eax, 1; ret; 
0x001572e3: sti; mov eax, 2; ret; 
0x00081c83: sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x80], eax; ret; 
0x001848e2: sti; mov eax, dword ptr [eax - 4]; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; pop ebx; ret; 
0x00036d33: sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00176f13: sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00035a43: sti; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x001633b3: sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013cc83: sti; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0007b3b3: sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0002fc83: sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x00131093: sti; mov eax, dword ptr [esp + 4]; and eax, 0xffff; ror ax, 8; ret; 
0x00131083: sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008d483: sti; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x8d490; xor eax, eax; ret; 
0x0008cb23: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x00084003: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0008d4c3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0014ac73: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x001633f3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00080373: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016e043: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016e063: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x0016e0f3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x0016e0e3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0016e073: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x00090e33: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00113f03: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0007a613: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x0007a5c3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000d7d93: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0007b3c3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 4; and eax, 1; ret; 
0x0007b3e3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; shr eax, 5; and eax, 1; ret; 
0x001633d3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0016e053: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00083ac3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001029e3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00080033: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0016e003: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0002de73: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00080383: sti; mov eax, dword ptr [esp + 4]; ret; 
0x0007e3b3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0007a5d3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007a5f3: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00087203: sti; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0002fe33: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0002fe53: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008cba3: sti; mov eax, dword ptr gs:[8]; ret; 
0x00087ae3: sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00089fdb: sti; mov ecx, 7; mov esi, edx; call dword ptr gs:[0x10]; 
0x0009b0b3: sti; mov edx, 0xffffffff; bsf eax, dword ptr [esp + 4]; cmove eax, edx; add eax, 1; ret; 
0x00162ff3: sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003a8b3: sti; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00083cd3: sti; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x83cf0; ret; 
0x00121693: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x001213a3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x001214c3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00116b03: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x00121823: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000dc633: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0010a573: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x28; call dword ptr gs:[0x10]; 
0x001092c3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x00116923: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00107d93: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00116953: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x001216c3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0011ea73: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x00116e53: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x00121253: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00116eb3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00121663: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x000dc083: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x00121403: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000ddf33: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x001094d3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0011f4b3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000ddfe3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x0011a213: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x000f9773: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000f97c3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x000f97f3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010a513: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa; call dword ptr gs:[0x10]; 
0x001094a3: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0011ee73: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0011ee93: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x00121373: sti; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xfe; call dword ptr gs:[0x10]; 
0x001214f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x001216f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0011f263: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x001093a3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x00121723: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00121793: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x001217c3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x001217f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x00037773: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00107fd3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x27; call dword ptr gs:[0x10]; 
0x000ddf63: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x001092f3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x3f; call dword ptr gs:[0x10]; 
0x00116123: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0010a453: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x53; call dword ptr gs:[0x10]; 
0x00116e83: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00119ff3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00107de3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00116243: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x00121283: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x00108f53: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x0011a1b3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0011a1e3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x000f96e3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x000f9713: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0011eaa3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x001212b3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x001212e3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x00037da3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000ddd03: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x001215c3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0011cf73: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x0011cf03: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x0011cdd3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00107db3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xf; call dword ptr gs:[0x10]; 
0x0010a3e3: sti; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 9; call dword ptr gs:[0x10]; 
0x0017b457: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0017d477: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00184927: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; pop ebx; ret; 
0x00066ebc: sti; or cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000e9366: sti; or dh, byte ptr [edi + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009b14a: sti; out 0xff, eax; cmovne eax, edx; ret; 
0x000a15fb: sti; pop ebx; pop esi; sub eax, edi; pop edi; ret; 
0x000dcda3: sti; pop ecx; mov eax, 0xbe; int 0x80; 
0x001927b2: sti; pop edi; ret; 
0x000b5184: sti; push dword ptr [eax + edi*2 - 0x77]; fdiv st(7); ret; 
0x00145a98: sti; push dword ptr [esp + ebp - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000dc0b3: sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013bcf3: sti; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000d7551: sti; ret 3; 
0x00021493: sti; ret; 
0x000d251a: sti; sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x00154013: sti; sub esp, 0x18; push 0; call 0x14fa30; add esp, 0x1c; ret; 
0x00038083: sti; sub esp, 0x18; push 0; call 0x37930; add esp, 0x1c; ret; 
0x00153243: sti; sub esp, 0x18; push 0xa; call 0x14fa30; add esp, 0x1c; ret; 
0x00152ee3: sti; sub esp, 0x18; push 1; call 0x14fa30; add esp, 0x1c; ret; 
0x00152653: sti; sub esp, 0x18; push 2; call 0x14fa30; add esp, 0x1c; ret; 
0x001516d3: sti; sub esp, 0x18; push 3; call 0x14fa30; add esp, 0x1c; ret; 
0x001522b3: sti; sub esp, 0x18; push 4; call 0x14fa30; add esp, 0x1c; ret; 
0x00150143: sti; sub esp, 0x18; push 5; call 0x14fa30; add esp, 0x1c; ret; 
0x001529d3: sti; sub esp, 0x18; push 6; call 0x14fa30; add esp, 0x1c; ret; 
0x00154833: sti; sub esp, 0x18; push 7; call 0x14fa30; add esp, 0x1c; ret; 
0x001507b3: sti; sub esp, 0x18; push 8; call 0x14fa30; add esp, 0x1c; ret; 
0x001542d3: sti; sub esp, 0x18; push 9; call 0x14fa30; add esp, 0x1c; ret; 
0x0009a139: sti; xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x000844b9: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007f5d3: sti; xor eax, eax; ret; 
0x0007fc6a: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x00159529: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69d3d7d], cl; call dword ptr [eax - 1]; 
0x00166556: stosb byte ptr es:[edi], al; cld; jmp dword ptr [esi - 0x70]; 
0x00034c4e: stosb byte ptr es:[edi], al; das; stc; call dword ptr [eax + 0x53]; 
0x00100b5a: stosb byte ptr es:[edi], al; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00072f78: stosb byte ptr es:[edi], al; fdivr st(2); jmp dword ptr [esi - 0x70]; 
0x00136f92: stosb byte ptr es:[edi], al; insb byte ptr es:[edi], dx; cli; jmp dword ptr [esi - 0x3f]; 
0x000c79d2: stosb byte ptr es:[edi], al; jle 0xc79cb; dec dword ptr [ebx - 0x363f43]; dec dword ptr [ebp - 0x6674f79]; call dword ptr [eax - 0x73]; 
0x000b3db0: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0012ec52: stosb byte ptr es:[edi], al; pop ecx; clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e98c], cl; ret; 
0x000b3697: stosb byte ptr es:[edi], al; pop edi; ret; 
0x0003ac1d: stosb byte ptr es:[edi], al; pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0011d15b: stosb byte ptr es:[edi], al; push edx; stc; call dword ptr [eax + 0x57]; 
0x000220eb: stosb byte ptr es:[edi], al; ret; 
0x00146c9c: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x00144550: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0010329f: stosb byte ptr es:[edi], al; std; dec dword ptr [ecx - 0x473e7626]; rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00160932: stosb byte ptr es:[edi], al; sti; in al, dx; call dword ptr [eax - 0x73]; 
0x001765f8: stosb byte ptr es:[edi], al; sti; jmp dword ptr [esi - 0x70]; 
0x000dd998: stosb byte ptr es:[edi], al; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0005e77e: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0011a481: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0002f841: stosd dword ptr es:[edi], eax; cmpsd dword ptr [esi], dword ptr es:[edi]; push cs; add byte ptr [ebx + 0x51e910c4], al; or bh, bh; call dword ptr [eax - 0x73]; 
0x00167771: stosd dword ptr es:[edi], eax; cwde; cld; dec dword ptr [ebx - 0xef43]; dec dword ptr [ebp - 0x64c4379]; call dword ptr [eax - 0x73]; 
0x00091946: stosd dword ptr es:[edi], eax; inc eax; stc; call dword ptr [eax - 0x73]; 
0x00153f01: stosd dword ptr es:[edi], eax; lodsb al, byte ptr [esi]; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xe2e9; 
0x000b3dac: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b3693: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; pop edi; ret; 
0x00094291: stosd dword ptr es:[edi], eax; mov edi, 0xc483fff8; or al, 0x8d; add dword ptr [eax - 0x2b], -0x1a; call dword ptr [eax + 0x56]; 
0x0014b564: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000970cc: stosd dword ptr es:[edi], eax; pop ebx; pop esi; pop edi; ret; 
0x00102467: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0007ef11: stosd dword ptr es:[edi], eax; ret; 
0x00034e10: stosd dword ptr es:[edi], eax; ror byte ptr [ebx - 7], 1; inc dword ptr [ebx - 0x7c72f314]; mov ah, 0x2f; stc; call dword ptr [eax - 0x18]; 
0x00148090: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x00146c67: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00103165: stosd dword ptr es:[edi], eax; std; inc dword ptr [ebx - 0x3e760035]; mov edx, ebx; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0013141c: str word ptr [ebx - 0x11380]; jmp dword ptr [ebp + 3]; 
0x00047747: str word ptr [ecx]; ret 0x9f74; 
0x000c05cf: str word ptr [ecx]; ret 0xa074; 
0x0002272f: sub ah, 0xf; add byte ptr [eax], al; ret; 
0x000935d5: sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c0], edx; ret; 
0x00093585: sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c4], edx; ret; 
0x00093525: sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1c8], edx; ret; 
0x00093555: sub ah, 1; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0x1e4], edx; ret; 
0x0002b806: sub al, 0x14; add byte ptr [0x1fa7f7], al; mov eax, dword ptr [eax + 0x1014]; ret; 
0x0004c5e4: sub al, 0x24; add esp, 0x1c; ret; 
0x00090bb1: sub al, 0x24; call 0x20140; mov dword ptr [esp], edi; call esi; 
0x001564b3: sub al, 0x24; call dword ptr [eax + 0x10]; 
0x00139dda: sub al, 0x24; call ebx; 
0x00139ad6: sub al, 0x24; call esi; 
0x0016e4aa: sub al, 0x24; ret; 
0x0007abaf: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0015346d: sub al, 0x31; rol byte ptr [eax - 0x7bf0ffc6], 0x13; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001142c3: sub al, 0x31; ror byte ptr [ebx - 0x74bbdb8c], 0x5c; and al, 0x40; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000f5f2d: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00038a30: sub al, 0x3c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b57df: sub al, 0x50; lea eax, [esp + 0x34]; push eax; push dword ptr [ebp + 8]; call ebx; 
0x00137a4d: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x136f10; add esp, 0x2c; ret; 
0x0008d5ee: sub al, 0x52; call 0x87b00; add esp, 0x20; add esp, 0xc; ret; 
0x000819ac: sub al, 0x52; push ecx; push esi; call eax; 
0x0015dc7c: sub al, 0x53; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000b600f: sub al, 0x55; lea eax, [esp + 0x64]; push eax; push esi; call ebx; 
0x0015f6d3: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x0015a4c9: sub al, 0x56; call dword ptr [eax + 0xc]; 
0x0007ba16: sub al, 0x57; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0015c36e: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000b6c25: sub al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x00021f57: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00106bd1: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c51: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x0011715a: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x001181b6: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823b: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0008f15f: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0009307b: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c9b65: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000cb055: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d7196: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d72c6: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x0011af14: sub al, 0x69; ret; 
0x00120b7b: sub al, 0x6a; pushfd; call 0x107820; add esp, 0x20; add esp, 0xc; ret; 
0x00021fb5: sub al, 0x6e; stc; call dword ptr [eax - 0x18]; 
0x00191962: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000c89d5: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000cbd2a: sub al, 0x80; add byte ptr ds:[edi], cl; test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x0009919f: sub al, 0x80; mov esi, 0x3b58; add byte ptr [esp + ebx - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bc737a], cl; call dword ptr [ebx + 0x50]; 
0x0013f934: sub al, 0x81; les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00072162: sub al, 0x83; in al, dx; add al, 0x57; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00116bc6: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x00155d4a: sub al, 0x83; in al, dx; or al, 0x8b; inc edx; add al, 0x52; call dword ptr [eax + 0x10]; 
0x0007f63b: sub al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016b329: sub al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00021e52: sub al, 0x83; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008189e: sub al, 0x83; les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000fdd3b: sub al, 0x83; ret 0x8301; 
0x000e57b7: sub al, 0x83; ret 0x8801; 
0x0013d9ab: sub al, 0x83; ret 0x8902; 
0x00123243: sub al, 0x83; ret 0x8b03; 
0x00034af2: sub al, 0x83; ret 0xc702; 
0x000e813a: sub al, 0x83; ret; 
0x0015add6: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000e5621: sub al, 0x85; ror byte ptr [edi], 0x85; ret 8; 
0x0013779f: sub al, 0x89; adc byte ptr [ebp - 0x1ff7d], cl; jmp dword ptr [esi + 0x3d]; 
0x00033c48: sub al, 0x89; call 0x5d629aaa; ret; 
0x000b6ac1: sub al, 0x89; call 0x5d6ac923; ret; 
0x000f60b5: sub al, 0x89; call 0x5d6ebf17; ret; 
0x000f900f: sub al, 0x89; call 0x5d6eee71; ret; 
0x00157a86: sub al, 0x89; dec edx; xor al, 0x5b; ret; 
0x0003ea04: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00088048: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00092e83: sub al, 0x89; ret 0x408b; 
0x00033955: sub al, 0x89; ret 0x48d; 
0x000ecb7e: sub al, 0x89; ret; 
0x0015b0dd: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00115ccb: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00115d6b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000d939b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00145a9b: sub al, 0x8b; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000cdb40: sub al, 0x8d; test eax, edx; cmp eax, 0x8d500000; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0004047c: sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x000656e4: sub al, 0x8d; xchg dword ptr [eax], esp; jns 0x656e3; call dword ptr [eax - 0x73]; 
0x0006a72c: sub al, 0x8d; xchg dword ptr [eax], esp; jns 0x6a72b; call dword ptr [eax - 0x73]; 
0x00098a5e: sub al, 0x8d; xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x000beba4: sub al, 0x8d; xchg dword ptr [ecx + edi*4 - 7], eax; call dword ptr [eax + 0x56]; 
0x0004111d: sub al, 0x8d; xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000852b2: sub al, 0x8d; xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x000c34b0: sub al, 0x98; stc; call dword ptr [eax - 0x18]; 
0x00113167: sub al, 0xa0; stc; call dword ptr [eax - 0x18]; 
0x0011c6d7: sub al, 0xa0; stc; jmp dword ptr [ebp - 0x75]; 
0x00194813: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x00162a69: sub al, 0xb3; stc; call dword ptr [eax - 0x73]; 
0x0008f202: sub al, 0xb8; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0010739b: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00195538: sub al, 0xc1; call 0x248dde5c; xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00092d32: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ce6b7: sub al, 0xe8; add eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b58c6: sub al, 0xe8; and al, 0xdd; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c5c9: sub al, 0xe8; and dword ptr [edi], eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0013917f: sub al, 0xe8; cmp esp, dword ptr [edx]; add eax, dword ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00176b7e: sub al, 0xe8; fdivr qword ptr [edi - 0x27080005]; sbb eax, eax; add esp, 0x2c; ret; 
0x0019d44a: sub al, 0xe8; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000d15c9: sub al, 0xe8; int1; inc ebp; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c607: sub al, 0xe8; jecxz 0x3c611; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003c687: sub al, 0xe8; jecxz 0x3c696; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000b62e9: sub al, 0xe8; jno 0xb62f4; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00106caa: sub al, 0xe8; jo 0x106cb9; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00102a50: sub al, 0xe8; jp 0x102a5d; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012a36a: sub al, 0xe8; mov al, byte ptr [0x8dfffffe]; xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x000b62a7: sub al, 0xe8; mov bl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00092518: sub al, 0xe8; mov dl, 2; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004870f: sub al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012fdf1: sub al, 0xe8; pop ecx; and al, 0xfd; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00176bb4: sub al, 0xe8; push esi; ret 0xfffb; 
0x000e87a8: sub al, 0xe8; ret 0xfcb5; 
0x00153f87: sub al, 0xe8; ret; 
0x0003c549: sub al, 0xe8; rol dword ptr [ecx], 1; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000842c6: sub al, 0xe8; xor al, 0x38; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x000b6327: sub al, 0xe8; xor eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0015d839: sub al, 0xed; call dword ptr [eax - 0x73]; 
0x0002652d: sub al, 0xf6; ret 0x7501; 
0x000d7b6b: sub al, 0xf7; fmul dword ptr [ebx - 0x13369]; jmp dword ptr [ebp - 0x77]; 
0x0002c358: sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x000286ca: sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0002c0db: sub al, 0xf9; call dword ptr [eax - 1]; 
0x0002c0bd: sub al, 0xf9; call dword ptr [edx + 0x50]; 
0x0002ee07: sub al, 0xf9; dec dword ptr [ecx - 0xdb6b]; call dword ptr [eax - 0x39]; 
0x0011f2ef: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x000f6abe: sub al, 0xf; mov dh, 0xc0; ret; 
0x000416e7: sub al, 0xf; xchg ebp, eax; ret 0xb60f; 
0x00144468: sub al, 0xf; xchg ebp, eax; ret 0xd184; 
0x000445ac: sub al, 0xf; xchg ebp, eax; ret 0xd689; 
0x0002c2c9: sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x00138415: sub al, 0xf; xchg esp, eax; ret; 
0x00176bb0: sub al, 0xff; je 0x176bd8; sub al, 0xe8; push esi; ret 0xfffb; 
0x0008165c: sub al, 0xff; je 0x81684; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0013e3e6: sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0010739d: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120b02: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0003810c: sub al, 1; add byte ptr [eax], al; ret; 
0x00157d65: sub al, 1; ret 0x5689; 
0x00086ae1: sub al, 2; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00085cf3: sub al, 2; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000278d8: sub al, 3; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x00048500: sub al, 4; add byte ptr [eax], al; ret; 
0x00061d93: sub al, byte ptr [eax]; add byte ptr [ebx - 0x50f7b], cl; call ecx; 
0x0013bdb1: sub al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x00094b65: sub al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x00109efc: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015c9f2: sub al, byte ptr [esi - 3]; jmp dword ptr [esi - 0x70]; 
0x000db055: sub al, byte ptr [esi - 7]; call dword ptr [ecx - 1]; 
0x0019d92a: sub al, ch; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000ee652: sub al, ch; mov eax, 0x89ffff97; ret 0xe883; 
0x0003a428: sub al, ch; ret 0xfffe; 
0x0015a177: sub al, ch; ret; 
0x000cffe7: sub bh, 0xff; call dword ptr [edi - 0x18]; 
0x00043614: sub bh, 0xff; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x00107802: sub bh, bh; je 0x10782a; sub byte ptr [edx - 0x64], ch; call 0x107820; add esp, 0x2c; ret; 
0x00031970: sub bh, bh; je 0x31998; sub byte ptr [edx], ch; call 0x31900; add esp, 0x2c; ret; 
0x00077110: sub bh, bh; je 0x77138; sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0016ae7d: sub bh, bh; jne 0x16ae31; call eax; 
0x00154f3b: sub bh, bh; jo 0x154f53; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0013755f: sub bh, bh; xor byte ptr [ebx - 0x72efdbbc], cl; add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x0013788e: sub bh, bh; xor byte ptr [ebx - 0x72efdbbc], cl; sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x0008f274: sub bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0009c42e: sub bh, byte ptr [ecx]; sal byte ptr [ebp - 0xb], 1; mov eax, ecx; ret; 
0x000cddc3: sub bh, cl; call dword ptr [eax + 0x53]; 
0x000cc269: sub bh, cl; call dword ptr [eax + 0x56]; 
0x001386c0: sub bh, cl; call dword ptr [eax + 0x57]; 
0x0002371a: sub bh, cl; call dword ptr [eax - 0x18]; 
0x000315fb: sub bh, cl; call dword ptr [eax - 0x73]; 
0x00024080: sub bh, cl; call dword ptr [edx + 0x50]; 
0x0012f949: sub bh, cl; dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x0015a8d9: sub bl, ch; or al, 0x8d; je 0x15a905; add byte ptr [ecx], ch; ret; 
0x0017ed2a: sub byte ptr [0x1c030004], bh; mov edi, dword ptr [esi]; jmp ebx; 
0x0011f8aa: sub byte ptr [eax + 0x156], bh; call dword ptr gs:[0x10]; 
0x0003b98a: sub byte ptr [eax + 0x163], bh; call dword ptr gs:[0x10]; 
0x000723bb: sub byte ptr [eax + 0x19], 0; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00047bd9: sub byte ptr [eax + 0x25], bh; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000f5ccc: sub byte ptr [eax + 0x480f003b], al; ror byte ptr [eax - 0x7cefdbac], 1; rol dword ptr [ecx], 0x83; ret; 
0x0010d51a: sub byte ptr [eax + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x0007bd21: sub byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x00156d0e: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x001220de: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0011ed6e: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0011a0aa: sub byte ptr [eax + 0x90], bh; call dword ptr gs:[0x10]; 
0x0011501a: sub byte ptr [eax + 0x91], bh; call dword ptr gs:[0x10]; 
0x001150da: sub byte ptr [eax + 0x92], bh; call dword ptr gs:[0x10]; 
0x0010f73a: sub byte ptr [eax + 0xa8], bh; call dword ptr gs:[0x10]; 
0x0009098d: sub byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00108d65: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000844dd: sub byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0011d051: sub byte ptr [eax + 3], 0; add byte ptr [ebx - 0x76f7dbb4], cl; add dword ptr [eax + 1], edi; ret; 
0x0008f436: sub byte ptr [eax + 3], bh; add esp, 0xc; ret; 
0x001085ca: sub byte ptr [eax + 3], bh; call dword ptr gs:[0x10]; 
0x0010868a: sub byte ptr [eax + 4], bh; call dword ptr gs:[0x10]; 
0x0011d5ee: sub byte ptr [eax + 4], bh; pop ebx; pop esi; pop edi; ret; 
0x00158644: sub byte ptr [eax - 0x3b7d0000], ah; adc byte ptr [ebp - 0x7c648b40], al; in al, dx; add al, 0x83; ret; 
0x0012c666: sub byte ptr [eax - 0x5c], 0xf9; call dword ptr [eax - 0x75]; 
0x000b53d3: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x0016b6aa: sub byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edx; push esp; hlt; call dword ptr [eax - 0x73]; 
0x00153a36: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x153810; add esp, 0x2c; ret; 
0x0008776f: sub byte ptr [eax], 0x3a; add byte ptr [eax], al; ret; 
0x0008cea8: sub byte ptr [eax], 0x3a; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010cf2b: sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00080171: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007e92b: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00132908: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; dec dword ptr [ecx - 0x16e7dbbc]; mov ebp, 0xe8fffffe; jmp esi; 
0x00028a06: sub byte ptr [eax], al; add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x0010a57b: sub byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e6af3: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012285d: sub byte ptr [eax], cl; add byte ptr [eax], al; add byte ptr [eax + 0x66], bh; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x000c89ca: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x00139e7b: sub byte ptr [ebp - 0x6590b79], cl; call dword ptr [eax - 0x73]; 
0x00084694: sub byte ptr [ebp - 0x6818f80], cl; call dword ptr [eax - 0x18]; 
0x00025869: sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax + 0x68]; 
0x000257ab: sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x00150b3a: sub byte ptr [ebp - 0x69e3180], cl; call dword ptr [eax - 1]; 
0x00133717: sub byte ptr [ebp - 0x6a65a43], cl; call dword ptr [edi - 0x73]; 
0x000d8bf6: sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x00093a4c: sub byte ptr [ebp - 0x6bf1472], cl; jmp dword ptr [ebp - 0x5f]; 
0x00145f75: sub byte ptr [ebp - 0x78fafffe], al; add byte ptr [esi], cl; add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x00079d24: sub byte ptr [ebp - 7], bh; call dword ptr [eax - 0x18]; 
0x00095f1f: sub byte ptr [ebx + 0x1102454], cl; ret 0x48d; 
0x0002fc6f: sub byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x001138c7: sub byte ptr [ebx + 0x337409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0015ff48: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0011ae6e: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x00077114: sub byte ptr [ebx + 0x56182474], cl; call dword ptr [edi + 0x40]; 
0x0007f6d7: sub byte ptr [ebx + 0x565308ec], al; call dword ptr [edi + 0x18]; 
0x00075865: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000db8fc: sub byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x000263eb: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x000d9f34: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x00113449: sub byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00117156: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x0015a4fc: sub byte ptr [ebx + 0x8b08ec], al; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0015a64c: sub byte ptr [ebx + 0x8b0cec], al; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000d91d0: sub byte ptr [ebx + 0xfc08506], cl; dec esi; ret 0x4489; 
0x00161df2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00161df2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0014a554: sub byte ptr [ebx - 0x12], dl; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax + 0x68]; 
0x000a13b5: sub byte ptr [ebx - 0x13345], cl; jmp dword ptr [ebp - 0x75]; 
0x00127b94: sub byte ptr [ebx - 0x13350], cl; jmp dword ptr [ebp - 0x75]; 
0x0013f831: sub byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x75]; 
0x0013fd43: sub byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x0013fc8b: sub byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x75]; 
0x0013faab: sub byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x7d]; 
0x00133874: sub byte ptr [ebx - 0x17cfdba4], cl; ret 0xeec8; 
0x0004a885: sub byte ptr [ebx - 0x1e76e714], al; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x000814b6: sub byte ptr [ebx - 0x3b7ce3c0], cl; adc al, 0x5b; pop esi; jmp eax; 
0x000486fe: sub byte ptr [ebx - 0x6780], cl; jmp dword ptr [ebp - 1]; 
0x0010cb98: sub byte ptr [ebx - 0x6bf0fc07], al; ret; 
0x000933e6: sub byte ptr [ebx - 0x72c3db94], cl; pop dword ptr [eax - 0x23]; clc; jmp dword ptr [ebp - 1]; 
0x00093dc4: sub byte ptr [ebx - 0x72cbdbbc], cl; add byte ptr [ebx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000b6067: sub byte ptr [ebx - 0x72e3db8c], cl; xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00115247: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14d; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001153f7: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0x14e; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00102277: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb4; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x00102347: sub byte ptr [ebx - 0x74cfdba4], cl; dec esp; and al, 0x34; mov eax, 0xb5; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000f3c2f: sub byte ptr [ebx - 0x76f7db84], cl; ret 0xf889; 
0x000be290: sub byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x00034526: sub byte ptr [ebx - 0x7caaf33c], al; ret 0xff03; 
0x0013d9a7: sub byte ptr [ebx - 0x7cd3db84], cl; ret 0x8902; 
0x000c9c84: sub byte ptr [ebx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006b867: sub byte ptr [ecx + 0x208d8bc2], cl; idiv edi; dec dword ptr [ebx - 0x8e77b]; call dword ptr [ebx - 0x18]; 
0x000e8134: sub byte ptr [ecx + 0x246c8be9], cl; sub al, 0x83; ret; 
0x0009a0ad: sub byte ptr [ecx + 0x390c245c], cl; ret 0x840f; 
0x0015e867: sub byte ptr [ecx + 0x6a], dl; add al, 0x52; call dword ptr [eax + 0x14]; 
0x000f3e39: sub byte ptr [ecx - 0x170f7616], cl; sub eax, 0x89ffff40; ret 0xb60f; 
0x000cdb3c: sub byte ptr [ecx - 0x72d3dbbc], cl; test eax, edx; cmp eax, 0x8d500000; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0015ff44: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00122024: sub byte ptr [ecx - 0x74e7dbbc], cl; inc esp; and al, 0x54; mov dword ptr [esp + 0x1c], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0019a6d9: sub byte ptr [ecx - 0x76afdbac], cl; ret 0xb489; 
0x000775c7: sub byte ptr [ecx - 0x76bbdbbc], cl; ret; 
0x00116c31: sub byte ptr [ecx - 0x76f3dbbc], cl; ret 0x7c8d; 
0x000ee8cb: sub byte ptr [ecx - 0x7cd7dba4], cl; ret 0x3904; 
0x00065753: sub byte ptr [ecx - 0x8d36b], cl; dec dword ptr [ecx - 0x8b743]; dec dword ptr [ecx - 0x8c37b]; jmp dword ptr [ebp - 0x5f]; 
0x00108012: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00192bd4: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0009945b: sub byte ptr [ecx], al; je 0x99518; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000995f8: sub byte ptr [ecx], al; jne 0x995d0; sub esp, 0xc; push eax; call edx; 
0x00049378: sub byte ptr [ecx], al; ret; 
0x000bb0b4: sub byte ptr [ecx], al; stc; dec dword ptr [ebx - 0x7636cefd]; ret 0x4489; 
0x000c89c7: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0009370a: sub byte ptr [ecx], bl; add byte ptr [ebx - 0x72afef14], al; sbb byte ptr [eax + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x00170f3e: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0019ab2b: sub byte ptr [ecx], cl; ret 0x448b; 
0x000c8a07: sub byte ptr [edi + 0x5e], bl; ret; 
0x000cda68: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xcda78; mov eax, edx; ret; 
0x00176875: sub byte ptr [edi + edi*8 - 1], bh; add eax, 0xaf787; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x00057b86: sub byte ptr [edi - 0x18], dl; ret; 
0x00192dcc: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00093146: sub byte ptr [edi], cl; inc esp; idiv dword ptr [eax + 0x104]; call dword ptr gs:[0x10]; 
0x000f4b54: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0019a801: sub byte ptr [edi], cl; test byte ptr [esi - 0x76fffff0], dl; ret 0xea83; 
0x0007c3ca: sub byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x00152ec2: sub byte ptr [edx + 0x6a50fff9], 1; call 0x14f970; add esp, 0x1c; ret; 
0x000371b7: sub byte ptr [edx + 1], ch; push dword ptr [esp + 8]; call 0x37120; pop ecx; pop edx; ret; 
0x00107806: sub byte ptr [edx - 0x64], ch; call 0x107820; add esp, 0x2c; ret; 
0x00078200: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x00057594: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x73290; add esp, 0x2c; ret; 
0x00087770: sub byte ptr [edx], bh; add byte ptr [eax], al; ret; 
0x0008cea9: sub byte ptr [edx], bh; add byte ptr [eax], al; xor eax, eax; ret; 
0x00031974: sub byte ptr [edx], ch; call 0x31900; add esp, 0x2c; ret; 
0x0008d53c: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x87b00; add esp, 0x2c; ret; 
0x00110700: sub byte ptr [esi + 0x5f], bl; ret; 
0x00039283: sub byte ptr [esi - 0x75], dl; inc esp; and al, 0x20; call eax; 
0x0015e766: sub ch, bh; jmp dword ptr [esi - 0x70]; 
0x00035ea8: sub ch, bl; sbb byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0012397b: sub ch, byte ptr [ebx - 0x3a7efffc]; and dword ptr [esi], 0x31570010; call dword ptr [esi + 0x53]; 
0x00068ff3: sub ch, byte ptr [ecx]; ret; 
0x001542b2: sub cl, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00145d3a: sub cl, 8; idiv bh; dec dword ptr [ebx - 0x13379]; jmp dword ptr [ebp - 0x39]; 
0x0015ef74: sub cl, bh; call dword ptr [edi + 0x52]; 
0x00161e8d: sub cl, bh; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00119b1d: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0003a28d: sub cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x0005ffac: sub cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000baa52: sub cl, byte ptr [esi - 9]; dec dword ptr [ebx - 0x72cfdb84]; xchg esp, ebx; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c018c: sub cl, ch; leave; in eax, 0xff; dec dword ptr [ebx - 0x7ab3dbbc]; ror byte ptr [edi], 0x84; ret 0xffea; 
0x000992e8: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00041133: sub dh, byte ptr [eax]; stc; call dword ptr [eax - 0x18]; 
0x000e436c: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xe4389; mov eax, 1; ret; 
0x00161b93: sub dh, ch; call ecx; 
0x000994e4: sub dh, dh; ret 0x7502; 
0x001033e4: sub dh, dh; ret 0x8d01; 
0x0010cdc2: sub dh, dh; ret; 
0x0004b1a4: sub dl, byte ptr [eax - 0xa]; ret 0x7501; 
0x0014a652: sub dl, byte ptr [edx - 0x12]; dec dword ptr [ebp - 0x653137f]; call dword ptr [eax - 0x73]; 
0x0007326f: sub dl, dh; cli; jmp dword ptr [esi - 0x70]; 
0x000ea144: sub dword ptr [eax + 0x48], -7; call dword ptr [eax + 0x55]; 
0x0011cc7c: sub dword ptr [eax + 0x4a], -7; call ptr [ebx + 0x5e]; ret; 
0x000cd0e2: sub dword ptr [eax + 0x5000003d], -0x18; ret; 
0x00102e0d: sub dword ptr [eax + eax], eax; add dh, dh; ret 0xf80; 
0x000c34af: sub dword ptr [eax + ebx*4], -7; call dword ptr [eax - 0x18]; 
0x000cbb46: sub dword ptr [eax - 0x76000001], 0x10; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x0014a66b: sub dword ptr [eax - 7], esp; call dword ptr [eax - 0x18]; 
0x00079d23: sub dword ptr [eax], 0x7d; stc; call dword ptr [eax - 0x18]; 
0x001092cb: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013ccc6: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011e853: sub dword ptr [eax], edx; int1; dec dword ptr [ebp - 0x65db77d]; call dword ptr [eax - 0x73]; 
0x000d9c46: sub dword ptr [ebp - 0x77], esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00080f43: sub dword ptr [ebx + 0x3e], -7; call dword ptr [ecx + 0x52]; 
0x00074251: sub dword ptr [ebx + 0x575504ec], eax; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x000d6cd1: sub dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00143c46: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0008d64c: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0011f86e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x156; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0003b94e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x163; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011a06e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x90; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00114fde: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x91; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0011509e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0x92; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010f6fe: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 0xa8; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010858e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 3; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0010864e: sub dword ptr [ebx - 0x74dfdba4], ecx; dec esp; and al, 0x24; mov eax, 4; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0018f970: sub dword ptr [ebx - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x001189cb: sub dword ptr [ebx], 0x4b; stc; call dword ptr [eax - 0x18]; 
0x00144cbc: sub dword ptr [ebx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x000ea1cc: sub dword ptr [ecx + 0x32], -7; call dword ptr [edx + 0x52]; 
0x00132bd8: sub dword ptr [ecx + 0x59], -7; call dword ptr [eax - 0x18]; 
0x00107126: sub dword ptr [ecx + 0x9cc4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013517f: sub dword ptr [ecx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x0015ca37: sub dword ptr [ecx], 0x6afff964; add eax, 0xb4818d50; jb 0x15ca3d; call dword ptr [eax - 0x18]; 
0x00107847: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0009363c: sub dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0x93650; ret; 
0x0009367c: sub dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0x93690; ret; 
0x000936cc: sub dword ptr [ecx], ebx; add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x000f42ab: sub dword ptr [ecx], edi; ret 0xd075; 
0x0008fc29: sub dword ptr [ecx], esi; shr bl, cl; or eax, 0x438b9066; or al, 0x89; fiadd dword ptr [ebp - 0x76e58b40]; ret; 
0x00086317: sub dword ptr [ecx], esp; ret; 
0x00090464: sub dword ptr [edi + 0x40], -7; call dword ptr [eax - 0x18]; 
0x000e9f87: sub dword ptr [edi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x0007bb47: sub dword ptr [edi], ecx; add byte ptr [ecx + 0x1aa4b6c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0008709c: sub dword ptr [edi], edi; stc; call dword ptr [eax - 0x18]; 
0x00079d42: sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x001350af: sub dword ptr [edx + ecx*2], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x6f; bnd call dword ptr [eax - 0x73]; 
0x0014de43: sub dword ptr [edx - 0x373f0000], 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0007fc69: sub dword ptr [edx - 0x7d000000], -0x14; add al, 0x6a; add byte ptr [edx], ch; push ebx; call dword ptr [ebp + 0x2c]; 
0x00135180: sub dword ptr [edx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00106d73: sub dword ptr [edx], eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000ea255: sub dword ptr [esi + 0x48], -7; call dword ptr [eax + 0x55]; 
0x00024bc7: sub dword ptr [esi + 0x68fff92b], -0x16; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x00024c8a: sub dword ptr [esi + 0x68fff92b], 0x1e; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + ebp*2], -7; call dword ptr [eax - 0x18]; 
0x0015f9ce: sub eax, -0x80; pop ebx; pop esi; ret; 
0x000b290b: sub eax, 0x10; pop edi; ret; 
0x0019d073: sub eax, 0x1668fff9; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x2d], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0017ff36: sub eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x0011e8e2: sub eax, 0x5b08c483; ret; 
0x000dd4de: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000d251b: sub eax, 0x5fb8; add byte ptr [edi], cl; inc esp; ret; 
0x0002e9a1: sub eax, 0x7868fff9; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or byte ptr [edi], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00135768: sub eax, 0x8100038d; ret; 
0x0008fe68: sub eax, 0x81000de6; ret; 
0x000b49ed: sub eax, 0x81f6ffea; add dword ptr [eax], 0; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x00183068: sub eax, 0x81fffeb4; ret; 
0x0007de3a: sub eax, 0x83d8458b; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x000806b7: sub eax, 0x89000001; ret 0x468b; 
0x0003a462: sub eax, 0x8904c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000f3e3f: sub eax, 0x89ffff40; ret 0xb60f; 
0x00114e71: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000973a6: sub eax, 0x8b000013; je 0x973d1; sbb byte ptr [ebp - 0x66c937a], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00027b4f: sub eax, 0x8b00007d; jl 0x27b7a; cmp byte ptr [ebp - 0x6963f79], cl; call dword ptr [eax + 0x68]; 
0x0004434f: sub eax, 0x8bfffeb5; jl 0x4437a; and al, 0x8d; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0012c7cf: sub eax, 0x940fd789; ret 0x8966; 
0x0002e954: sub eax, 0xba68fff9; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x00104153: sub eax, 0xc4830000; adc byte ptr [ebp - 0x4e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x19f7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x7d]; 
0x0019d39b: sub eax, 0xc483ffe8; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000b4fa9: sub eax, 0xe580ffea; add cl, byte ptr [ebp - 0x91f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0007fd55: sub eax, 0xe8fffffe; ret 0xb12; 
0x000511ba: sub eax, 0xf901c8d; dec edi; ret; 
0x0002f538: sub eax, 0xffff883; inc esp; ret; 
0x00145121: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013d5f2: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0002c008: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0015f026: sub eax, 1; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0014bf75: sub eax, 1; pop edi; pop ebp; ret; 
0x0004acc8: sub eax, 1; ret; 
0x0009365c: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x1fc], eax; ret; 
0x0008f0e8: sub eax, 2; add esp, 0xc; ret; 
0x0011c13f: sub eax, dword ptr [0x14]; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0014df5a: sub eax, dword ptr [0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x0015ff59: sub eax, dword ptr [0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc9: sub eax, dword ptr [0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160039: sub eax, dword ptr [0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x0016009c: sub eax, dword ptr [0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600fc: sub eax, dword ptr [0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160169: sub eax, dword ptr [0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e9: sub eax, dword ptr [0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x001606d7: sub eax, dword ptr [0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071f: sub eax, dword ptr [0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x00161f20: sub eax, dword ptr [0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x00036476: sub eax, dword ptr [0x14]; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370bc: sub eax, dword ptr [0x14]; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x0003b40c: sub eax, dword ptr [0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45f: sub eax, dword ptr [0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x0007b330: sub eax, dword ptr [0x14]; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x000dc0b6: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b2f0: sub eax, dword ptr [ebx + 0x33ff0cec]; call esi; 
0x0006a098: sub eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00030781: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x0012a094: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x00083c34: sub eax, dword ptr [ebx - 0x17a8f314]; ret 0xfff9; 
0x0015f5c3: sub eax, dword ptr [ebx - 0x2776db3c]; pop ebx; pop esi; ret; 
0x00129c3f: sub eax, dword ptr [ecx + 0x1c]; cmp eax, edx; jb 0x129c50; mov eax, 1; ret; 
0x0007a6b3: sub eax, dword ptr [edx + 0x10]; ret; 
0x0007a575: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0007a583: sub eax, dword ptr [edx + 0x1c]; ret; 
0x00080a33: sub eax, dword ptr [edx + 0xc]; ret; 
0x0007a6a5: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0008003f: sub eax, dword ptr [edx + 8]; ret; 
0x00076156: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0002de7e: sub eax, dword ptr [edx]; ret; 
0x00157c63: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000b46ba: sub eax, dword ptr [esp + 4]; ret; 
0x0011c13e: sub eax, dword ptr gs:[0x14]; jne 0x11c14f; add esp, 0x418; pop ebx; ret; 
0x0014df59: sub eax, dword ptr gs:[0x14]; jne 0x14df66; add esp, 0x1c; ret; 
0x0015ff58: sub eax, dword ptr gs:[0x14]; jne 0x15ff65; add esp, 0x4c; ret; 
0x0015ffc8: sub eax, dword ptr gs:[0x14]; jne 0x15ffd5; add esp, 0x4c; ret; 
0x00160038: sub eax, dword ptr gs:[0x14]; jne 0x160045; add esp, 0x4c; ret; 
0x0016009b: sub eax, dword ptr gs:[0x14]; jne 0x1600a8; add esp, 0x4c; ret; 
0x001600fb: sub eax, dword ptr gs:[0x14]; jne 0x160108; add esp, 0x4c; ret; 
0x00160168: sub eax, dword ptr gs:[0x14]; jne 0x160175; add esp, 0x4c; ret; 
0x001601e8: sub eax, dword ptr gs:[0x14]; jne 0x1601f5; add esp, 0x4c; ret; 
0x001606d6: sub eax, dword ptr gs:[0x14]; jne 0x1606e3; add esp, 0x1c; ret; 
0x0016071e: sub eax, dword ptr gs:[0x14]; jne 0x160754; add esp, 0x1c; ret; 
0x00161f1f: sub eax, dword ptr gs:[0x14]; jne 0x161f2c; add esp, 0x2c; ret; 
0x00036475: sub eax, dword ptr gs:[0x14]; jne 0x36486; mov eax, edx; add esp, 0x1c; ret 4; 
0x000370bb: sub eax, dword ptr gs:[0x14]; jne 0x370c9; add esp, 0x18; pop ebx; ret; 
0x0003b40b: sub eax, dword ptr gs:[0x14]; jne 0x3b418; add esp, 0x1c; ret; 
0x0003b45e: sub eax, dword ptr gs:[0x14]; jne 0x3b46b; add esp, 0x1c; ret; 
0x0007b32f: sub eax, dword ptr gs:[0x14]; jne 0x7b34c; add esp, 0x28; pop ebx; ret; 
0x0013f465: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0018dcf9: sub eax, ecx; pop ebp; pop ebx; ret; 
0x00188e35: sub eax, ecx; pop ebp; ret; 
0x00157c5b: sub eax, ecx; pop ebx; pop esi; ret; 
0x0018b4ec: sub eax, ecx; pop ebx; ret; 
0x0018fbef: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x0018e661: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x0018f68b: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x0018e35d: sub eax, ecx; pop esi; pop edi; ret; 
0x0015836e: sub eax, ecx; push eax; push ebp; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00187688: sub eax, ecx; ret; 
0x000a16a7: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000a15fe: sub eax, edi; pop edi; ret; 
0x0016f7e9: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [ebp + 0x40]; 
0x00079138: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00083872: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000c2e51: sub eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001901df: sub eax, edx; pop edi; pop ebp; ret; 
0x00191709: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000c2d75: sub eax, edx; pop edi; ret; 
0x00076634: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0015824e: sub eax, edx; push eax; push esi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00075a76: sub eax, edx; ret; 
0x00036103: sub eax, edx; shr eax, 0x1f; ret; 
0x0007c723: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x000b33c2: sub eax, esi; pop ebx; pop esi; ret; 
0x0011ed80: sub eax, esi; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0015304c: sub ebp, 2; mov eax, ebp; pop ebp; ret; 
0x0015767b: sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x000a48ca: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a510a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xa4e61; pop ebx; ret; 
0x000a5022: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xa4e61; pop ebx; ret; 
0x000a5040: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xa4e61; pop ebx; ret; 
0x000a4890: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5060: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xa4e61; pop ebx; ret; 
0x000a4c54: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5084: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xa4e61; pop ebx; ret; 
0x000a4c84: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50b4: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xa4e61; pop ebx; ret; 
0x000a4cb4: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a50e4: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa4e61; pop ebx; ret; 
0x000a95c5: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xa92c1; pop ebx; ret; 
0x0014d5b0: sub ebx, 1; jne 0x14d540; pop ebx; pop esi; ret; 
0x000a4b16: sub ebx, 1; lea ecx, [edx + 1]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4ef6: sub ebx, 1; lea ecx, [edx + 1]; jne 0xa4e61; pop ebx; ret; 
0x000a4f18: sub ebx, 2; lea ecx, [edx + 2]; jne 0xa4e61; pop ebx; ret; 
0x000a4b5e: sub ebx, 3; lea ecx, [edx + 3]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4f3e: sub ebx, 3; lea ecx, [edx + 3]; jne 0xa4e61; pop ebx; ret; 
0x000a4f56: sub ebx, 4; lea ecx, [edx + 4]; jne 0xa4e61; pop ebx; ret; 
0x000a4b7c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4f7c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xa4e61; pop ebx; ret; 
0x000a4b9e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4f9e: sub ebx, 6; lea ecx, [edx + 6]; jne 0xa4e61; pop ebx; ret; 
0x000a4bbc: sub ebx, 7; lea ecx, [edx + 7]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a4fbc: sub ebx, 7; lea ecx, [edx + 7]; jne 0xa4e61; pop ebx; ret; 
0x000a4fda: sub ebx, 8; lea ecx, [edx + 8]; jne 0xa4e61; pop ebx; ret; 
0x000a947b: sub ebx, 8; lea ecx, [edx + 8]; jne 0xa92c1; pop ebx; ret; 
0x000a4be0: sub ebx, 9; lea ecx, [edx + 9]; jne 0xa4e60; pop edi; pop ebx; ret; 
0x000a5000: sub ebx, 9; lea ecx, [edx + 9]; jne 0xa4e61; pop ebx; ret; 
0x00144cbd: sub ebx, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0007f7c0: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x000759e0: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x00102928: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0004b275: sub ecx, 1; jae 0x4b270; mov eax, edx; pop ebx; pop esi; ret; 
0x00098b31: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00021dad: sub ecx, dword ptr [0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x000caa3d: sub ecx, dword ptr [0x14]; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x00168704: sub ecx, dword ptr [ebx - 0x15f7b]; dec dword ptr [ebx - 0x15b73]; jmp dword ptr [ebp - 0x77]; 
0x001189cc: sub ecx, dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x00099cf8: sub ecx, dword ptr [ecx + 0x5f5e5bc8]; pop ebp; ret; 
0x000fa951: sub ecx, dword ptr [edi - 0xd]; dec dword ptr [ebx - 0x7872dbc4]; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00157c55: sub ecx, dword ptr [esi + 0x2c]; add esp, 4; sub eax, ecx; pop ebx; pop esi; ret; 
0x00157a80: sub ecx, dword ptr [esp + 0xc]; mov dword ptr [edx + 0x2c], ebx; mov dword ptr [edx + 0x34], ecx; pop ebx; ret; 
0x00021dac: sub ecx, dword ptr gs:[0x14]; jne 0x21db9; add esp, 0x1c; ret; 
0x000caa3c: sub ecx, dword ptr gs:[0x14]; jne 0xcaa4a; add esp, 0x28; pop ebx; ret; 
0x00070abf: sub ecx, eax; cmp edx, ecx; jbe 0x70b18; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00073118: sub ecx, eax; cmp edx, ecx; jbe 0x73161; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00078b8c: sub ecx, eax; cmp edx, ecx; jbe 0x78d60; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee38: sub ecx, eax; cmp edx, ecx; jbe 0x7ee90; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00157d4a: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00035ddd: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003ba2d: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x001028e1: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010245e: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00022618: sub ecx, edi; call dword ptr [eax - 0x18]; 
0x00170545: sub ecx, edx; cmp eax, ecx; jbe 0x170620; sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x0017068e: sub ecx, edx; cmp eax, ecx; jbe 0x1706a0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00075163: sub ecx, edx; cmp eax, ecx; jbe 0x751a0; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b4e6: sub ecx, edx; cmp eax, ecx; jbe 0x7b510; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007d2e9: sub ecx, edx; cmp eax, ecx; jbe 0x7d418; sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x0007d48f: sub ecx, edx; cmp eax, ecx; jbe 0x7d4d0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0007eee3: sub ecx, edx; cmp eax, ecx; jbe 0x7ef10; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007f1d9: sub ecx, edx; cmp eax, ecx; jbe 0x7f288; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x000359ce: sub ecx, edx; not eax; and eax, ecx; ret; 
0x00035a2f: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0010d766: sub ecx, esi; jmp dword ptr [ebp - 0x77]; 
0x000b2764: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x00193e7b: sub edi, 0x10; jb 0x193f40; lea eax, [eax + 0xf]; pop edi; ret; 
0x000faa1e: sub edi, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0011d2d4: sub edi, 0x4f; stc; call dword ptr [eax + 0x57]; 
0x0011e59d: sub edi, 0x54; stc; call dword ptr [eax + 0x56]; 
0x00193ef0: sub edi, 0xa; jb 0x193f40; lea eax, [eax + 9]; pop edi; ret; 
0x00193f00: sub edi, 0xb; jb 0x193f40; lea eax, [eax + 0xa]; pop edi; ret; 
0x00193f10: sub edi, 0xd; jb 0x193f40; lea eax, [eax + 0xc]; pop edi; ret; 
0x00193f20: sub edi, 0xe; jb 0x193f40; lea eax, [eax + 0xd]; pop edi; ret; 
0x00193f30: sub edi, 0xf; jb 0x193f40; lea eax, [eax + 0xe]; pop edi; ret; 
0x00193e90: sub edi, 2; jb 0x193f40; lea eax, [eax + 1]; pop edi; ret; 
0x00193ea0: sub edi, 3; jb 0x193f40; lea eax, [eax + 2]; pop edi; ret; 
0x00193de8: sub edi, 4; jb 0x193f40; lea eax, [eax + 3]; pop edi; ret; 
0x00193eb0: sub edi, 5; jb 0x193f40; lea eax, [eax + 4]; pop edi; ret; 
0x00193ec0: sub edi, 6; jb 0x193f40; lea eax, [eax + 5]; pop edi; ret; 
0x00193ed0: sub edi, 7; jb 0x193f40; lea eax, [eax + 6]; pop edi; ret; 
0x00193e1b: sub edi, 8; jb 0x193f40; lea eax, [eax + 7]; pop edi; ret; 
0x00193ee0: sub edi, 9; jb 0x193f40; lea eax, [eax + 8]; pop edi; ret; 
0x00091953: sub edi, ebx; stc; dec dword ptr [ebx - 0x7972778b]; dec eax; test cl, bh; call dword ptr [eax + 0x68]; 
0x00024c66: sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00024cb4: sub edi, ecx; call dword ptr [eax - 0x73]; 
0x000c34d8: sub edi, ecx; jmp dword ptr [ebp - 0x75]; 
0x000b2f83: sub edx, 0x10; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x30]; ret; 
0x00192e2b: sub edx, 0x10; jb 0x192f00; lea eax, [edi + 0xf]; pop edi; ret; 
0x000b2f73: sub edx, 0x20; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x20]; ret; 
0x000b2f63: sub edx, 0x30; add edx, eax; jl 0xb2f90; lea eax, [ecx + eax + 0x10]; ret; 
0x000b2f53: sub edx, 0x40; add edx, eax; jl 0xb2f90; add eax, ecx; ret; 
0x00036420: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x00192eb0: sub edx, 0xa; jb 0x192f00; lea eax, [edi + 9]; pop edi; ret; 
0x00192ec0: sub edx, 0xb; jb 0x192f00; lea eax, [edi + 0xa]; pop edi; ret; 
0x00192e02: sub edx, 0xc; jb 0x192f00; lea eax, [edi + 0xb]; pop edi; ret; 
0x00192ed0: sub edx, 0xd; jb 0x192f00; lea eax, [edi + 0xc]; pop edi; ret; 
0x00192ee0: sub edx, 0xe; jb 0x192f00; lea eax, [edi + 0xd]; pop edi; ret; 
0x00192ef0: sub edx, 0xf; jb 0x192f00; lea eax, [edi + 0xe]; pop edi; ret; 
0x00192e50: sub edx, 2; jb 0x192f00; lea eax, [edi + 1]; pop edi; ret; 
0x00178329: sub edx, 2; je 0x178330; mov byte ptr [edi], al; pop edi; pop ebx; ret; 
0x00192e60: sub edx, 3; jb 0x192f00; lea eax, [edi + 2]; pop edi; ret; 
0x00192d97: sub edx, 4; jb 0x192f00; lea eax, [edi + 3]; pop edi; ret; 
0x00192e70: sub edx, 5; jb 0x192f00; lea eax, [edi + 4]; pop edi; ret; 
0x00192e80: sub edx, 6; jb 0x192f00; lea eax, [edi + 5]; pop edi; ret; 
0x00192e90: sub edx, 7; jb 0x192f00; lea eax, [edi + 6]; pop edi; ret; 
0x00192dc8: sub edx, 8; jb 0x192f00; lea eax, [edi + 7]; pop edi; ret; 
0x0009b6ad: sub edx, 8; jne 0x9b678; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00192ea0: sub edx, 9; jb 0x192f00; lea eax, [edi + 8]; pop edi; ret; 
0x0010357f: sub edx, dword ptr [0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x00103a25: sub edx, dword ptr [0x14]; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106185: sub edx, dword ptr [0x14]; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd3: sub edx, dword ptr [0x14]; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c53: sub edx, dword ptr [0x14]; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x0010a3be: sub edx, dword ptr [0x14]; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x001143d6: sub edx, dword ptr [0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115ce8: sub edx, dword ptr [0x14]; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d88: sub edx, dword ptr [0x14]; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115ff3: sub edx, dword ptr [0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x0011715c: sub edx, dword ptr [0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x001171cd: sub edx, dword ptr [0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x001181b8: sub edx, dword ptr [0x14]; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823d: sub edx, dword ptr [0x14]; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0011ae77: sub edx, dword ptr [0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x0011c940: sub edx, dword ptr [0x14]; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00121e0e: sub edx, dword ptr [0x14]; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121f33: sub edx, dword ptr [0x14]; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb3: sub edx, dword ptr [0x14]; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x0012221e: sub edx, dword ptr [0x14]; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x0012295e: sub edx, dword ptr [0x14]; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e3: sub edx, dword ptr [0x14]; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a6e: sub edx, dword ptr [0x14]; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122bc7: sub edx, dword ptr [0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x001232d1: sub edx, dword ptr [0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00130c63: sub edx, dword ptr [0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd3: sub edx, dword ptr [0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d84: sub edx, dword ptr [0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0014243d: sub edx, dword ptr [0x14]; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x00142499: sub edx, dword ptr [0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e5: sub edx, dword ptr [0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x00143d9c: sub edx, dword ptr [0x14]; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e3c: sub edx, dword ptr [0x14]; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143efc: sub edx, dword ptr [0x14]; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f9c: sub edx, dword ptr [0x14]; jne 0x143fcd; add esp, 0x11c; ret; 
0x0014422c: sub edx, dword ptr [0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x00147936: sub edx, dword ptr [0x14]; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba77: sub edx, dword ptr [0x14]; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x0015589a: sub edx, dword ptr [0x14]; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015b8bd: sub edx, dword ptr [0x14]; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb12: sub edx, dword ptr [0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015ec3c: sub edx, dword ptr [0x14]; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecdc: sub edx, dword ptr [0x14]; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015f02e: sub edx, dword ptr [0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a5: sub edx, dword ptr [0x14]; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015fee9: sub edx, dword ptr [0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x00161fd1: sub edx, dword ptr [0x14]; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c1: sub edx, dword ptr [0x14]; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162368: sub edx, dword ptr [0x14]; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623f8: sub edx, dword ptr [0x14]; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b7: sub edx, dword ptr [0x14]; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x0016251c: sub edx, dword ptr [0x14]; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625b8: sub edx, dword ptr [0x14]; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dd8: sub edx, dword ptr [0x14]; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e68: sub edx, dword ptr [0x14]; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162ef8: sub edx, dword ptr [0x14]; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f88: sub edx, dword ptr [0x14]; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x00163640: sub edx, dword ptr [0x14]; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x001636a0: sub edx, dword ptr [0x14]; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x00163709: sub edx, dword ptr [0x14]; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x00163769: sub edx, dword ptr [0x14]; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168155: sub edx, dword ptr [0x14]; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x0016992a: sub edx, dword ptr [0x14]; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a2: sub edx, dword ptr [0x14]; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016af65: sub edx, dword ptr [0x14]; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b126: sub edx, dword ptr [0x14]; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1c8: sub edx, dword ptr [0x14]; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85d: sub edx, dword ptr [0x14]; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016e0c0: sub edx, dword ptr [0x14]; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb7: sub edx, dword ptr [0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176713: sub edx, dword ptr [0x14]; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x00037baa: sub edx, dword ptr [0x14]; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d50: sub edx, dword ptr [0x14]; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038102: sub edx, dword ptr [0x14]; jne 0x38111; add esp, 0x12c; ret; 
0x00038722: sub edx, dword ptr [0x14]; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a2: sub edx, dword ptr [0x14]; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x0003882a: sub edx, dword ptr [0x14]; jne 0x38839; add esp, 0x9c; ret; 
0x0003aaaa: sub edx, dword ptr [0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abda: sub edx, dword ptr [0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aeab: sub edx, dword ptr [0x14]; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b4bc: sub edx, dword ptr [0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50f: sub edx, dword ptr [0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b55c: sub edx, dword ptr [0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5af: sub edx, dword ptr [0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000484f6: sub edx, dword ptr [0x14]; jne 0x48505; add esp, 0x42c; ret; 
0x00057d6a: sub edx, dword ptr [0x14]; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057de9: sub edx, dword ptr [0x14]; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x00058396: sub edx, dword ptr [0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x00081643: sub edx, dword ptr [0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817ab: sub edx, dword ptr [0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x0008597c: sub edx, dword ptr [0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008a208: sub edx, dword ptr [0x14]; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a6: sub edx, dword ptr [0x14]; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b62c: sub edx, dword ptr [0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba8c: sub edx, dword ptr [0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf88: sub edx, dword ptr [0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d8: sub edx, dword ptr [0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f161: sub edx, dword ptr [0x14]; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f3d1: sub edx, dword ptr [0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65d: sub edx, dword ptr [0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x0008f8cd: sub edx, dword ptr [0x14]; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000914f7: sub edx, dword ptr [0x14]; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092acf: sub edx, dword ptr [0x14]; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x0009307d: sub edx, dword ptr [0x14]; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c2f9c: sub edx, dword ptr [0x14]; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9a9c: sub edx, dword ptr [0x14]; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b1c: sub edx, dword ptr [0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b67: sub edx, dword ptr [0x14]; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bc7: sub edx, dword ptr [0x14]; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000cac93: sub edx, dword ptr [0x14]; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cb057: sub edx, dword ptr [0x14]; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d3570: sub edx, dword ptr [0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5c00: sub edx, dword ptr [0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d64: sub edx, dword ptr [0x14]; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f63: sub edx, dword ptr [0x14]; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d7113: sub edx, dword ptr [0x14]; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d7198: sub edx, dword ptr [0x14]; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d723f: sub edx, dword ptr [0x14]; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72c8: sub edx, dword ptr [0x14]; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d93b8: sub edx, dword ptr [0x14]; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a3: sub edx, dword ptr [0x14]; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000ddd74: sub edx, dword ptr [0x14]; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde14: sub edx, dword ptr [0x14]; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000df7a5: sub edx, dword ptr [0x14]; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e45: sub edx, dword ptr [0x14]; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf5: sub edx, dword ptr [0x14]; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b5: sub edx, dword ptr [0x14]; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x0008006a: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00080078: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00075a6c: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0010357e: sub edx, dword ptr gs:[0x14]; jne 0x103597; add esp, 0x1c; ret; 
0x00103a24: sub edx, dword ptr gs:[0x14]; jne 0x103a46; add esp, 0x78; pop ebx; ret; 
0x00106184: sub edx, dword ptr gs:[0x14]; jne 0x1061a6; add esp, 0x78; pop ebx; ret; 
0x00106bd2: sub edx, dword ptr gs:[0x14]; jne 0x106be0; add esp, 0x38; pop ebx; ret; 
0x00106c52: sub edx, dword ptr gs:[0x14]; jne 0x106c60; add esp, 0x38; pop ebx; ret; 
0x0010a3bd: sub edx, dword ptr gs:[0x14]; jne 0x10a3cd; movzx eax, al; add esp, 0x4c; ret; 
0x001143d5: sub edx, dword ptr gs:[0x14]; jne 0x1143e9; add esp, 0x1c; ret; 
0x00115ce7: sub edx, dword ptr gs:[0x14]; jne 0x115d32; add esp, 0x28; pop ebx; ret; 
0x00115d87: sub edx, dword ptr gs:[0x14]; jne 0x115dd2; add esp, 0x28; pop ebx; ret; 
0x00115ff2: sub edx, dword ptr gs:[0x14]; jne 0x115fff; add esp, 0x1c; ret; 
0x0011715b: sub edx, dword ptr gs:[0x14]; jne 0x117177; add esp, 0x3c; ret; 
0x001171cc: sub edx, dword ptr gs:[0x14]; jne 0x1171d9; add esp, 0x1c; ret; 
0x001181b7: sub edx, dword ptr gs:[0x14]; jne 0x1181c5; add esp, 0x38; pop ebx; ret; 
0x0011823c: sub edx, dword ptr gs:[0x14]; jne 0x11824a; add esp, 0x38; pop ebx; ret; 
0x0011ae76: sub edx, dword ptr gs:[0x14]; jne 0x11ae83; add esp, 0x1c; ret; 
0x0011c93f: sub edx, dword ptr gs:[0x14]; jne 0x11c95f; add esp, 0x1018; pop ebx; ret; 
0x00121e0d: sub edx, dword ptr gs:[0x14]; jne 0x121e32; add esp, 0x28; pop ebx; ret; 
0x00121f32: sub edx, dword ptr gs:[0x14]; jne 0x121f52; add esp, 0x18; pop ebx; ret; 
0x00121fb2: sub edx, dword ptr gs:[0x14]; jne 0x121fd2; add esp, 0x18; pop ebx; ret; 
0x0012221d: sub edx, dword ptr gs:[0x14]; jne 0x122242; add esp, 0x18; pop ebx; ret; 
0x0012295d: sub edx, dword ptr gs:[0x14]; jne 0x122982; add esp, 0x18; pop ebx; ret; 
0x001229e2: sub edx, dword ptr gs:[0x14]; jne 0x122a02; add esp, 0x18; pop ebx; ret; 
0x00122a6d: sub edx, dword ptr gs:[0x14]; jne 0x122a92; add esp, 0x28; pop ebx; ret; 
0x00122bc6: sub edx, dword ptr gs:[0x14]; jne 0x122bd3; add esp, 0x1c; ret; 
0x001232d0: sub edx, dword ptr gs:[0x14]; jne 0x1232e4; add esp, 0x7c; ret; 
0x00130c62: sub edx, dword ptr gs:[0x14]; jne 0x130c75; add esp, 0x2c; ret; 
0x00130cd2: sub edx, dword ptr gs:[0x14]; jne 0x130ce5; add esp, 0x2c; ret; 
0x00137d83: sub edx, dword ptr gs:[0x14]; jne 0x137d90; add esp, 0x2c; ret; 
0x0014243c: sub edx, dword ptr gs:[0x14]; jne 0x14245d; add esp, 0x18; pop ebx; ret; 
0x00142498: sub edx, dword ptr gs:[0x14]; jne 0x1424a5; add esp, 0x1c; ret; 
0x001424e4: sub edx, dword ptr gs:[0x14]; jne 0x1424f1; add esp, 0x1c; ret; 
0x00143d9b: sub edx, dword ptr gs:[0x14]; jne 0x143de4; add esp, 0x118; pop ebx; ret; 
0x00143e3b: sub edx, dword ptr gs:[0x14]; jne 0x143ea0; add esp, 0x118; pop ebx; ret; 
0x00143efb: sub edx, dword ptr gs:[0x14]; jne 0x143f4b; add esp, 0x118; pop ebx; ret; 
0x00143f9b: sub edx, dword ptr gs:[0x14]; jne 0x143fcd; add esp, 0x11c; ret; 
0x0014422b: sub edx, dword ptr gs:[0x14]; jne 0x14427c; add esp, 0x1c; ret; 
0x00147935: sub edx, dword ptr gs:[0x14]; jne 0x147945; movzx eax, ax; add esp, 0x2c; ret; 
0x0014ba76: sub edx, dword ptr gs:[0x14]; jne 0x14ba84; add esp, 0x28; pop ebx; ret; 
0x00155899: sub edx, dword ptr gs:[0x14]; jne 0x1558a7; add esp, 0x28; pop ebx; ret; 
0x0015b8bc: sub edx, dword ptr gs:[0x14]; jne 0x15b938; add esp, 0x18; pop ebx; ret; 
0x0015eb11: sub edx, dword ptr gs:[0x14]; jne 0x15eb27; add esp, 0x1c; ret; 
0x0015ec3b: sub edx, dword ptr gs:[0x14]; jne 0x15ec57; add esp, 0x28; pop ebx; ret; 
0x0015ecdb: sub edx, dword ptr gs:[0x14]; jne 0x15ecf7; add esp, 0x28; pop ebx; ret; 
0x0015f02d: sub edx, dword ptr gs:[0x14]; jne 0x15f03a; add esp, 0x1c; ret; 
0x0015f0a4: sub edx, dword ptr gs:[0x14]; jne 0x15f0bf; add esp, 0x18; pop ebx; ret; 
0x0015fee8: sub edx, dword ptr gs:[0x14]; jne 0x15fef5; add esp, 0x4c; ret; 
0x00161fd0: sub edx, dword ptr gs:[0x14]; jne 0x162039; add esp, 0x18; pop ebx; ret; 
0x001620c0: sub edx, dword ptr gs:[0x14]; jne 0x162129; add esp, 0x18; pop ebx; ret; 
0x00162367: sub edx, dword ptr gs:[0x14]; jne 0x1623bb; add esp, 0x18; pop ebx; ret; 
0x001623f7: sub edx, dword ptr gs:[0x14]; jne 0x16244b; add esp, 0x18; pop ebx; ret; 
0x001624b6: sub edx, dword ptr gs:[0x14]; jne 0x1624db; add esp, 0x18; pop ebx; ret; 
0x0016251b: sub edx, dword ptr gs:[0x14]; jne 0x16257b; add esp, 0x18; pop ebx; ret; 
0x001625b7: sub edx, dword ptr gs:[0x14]; jne 0x162619; add esp, 0x18; pop ebx; ret; 
0x00162dd7: sub edx, dword ptr gs:[0x14]; jne 0x162e2b; add esp, 0x18; pop ebx; ret; 
0x00162e67: sub edx, dword ptr gs:[0x14]; jne 0x162ebb; add esp, 0x18; pop ebx; ret; 
0x00162ef7: sub edx, dword ptr gs:[0x14]; jne 0x162f4b; add esp, 0x18; pop ebx; ret; 
0x00162f87: sub edx, dword ptr gs:[0x14]; jne 0x162fdb; add esp, 0x18; pop ebx; ret; 
0x0016363f: sub edx, dword ptr gs:[0x14]; jne 0x16364f; movzx eax, al; add esp, 0x1c; ret; 
0x0016369f: sub edx, dword ptr gs:[0x14]; jne 0x1636af; movzx eax, al; add esp, 0x1c; ret; 
0x00163708: sub edx, dword ptr gs:[0x14]; jne 0x163716; add esp, 0x18; pop ebx; ret; 
0x00163768: sub edx, dword ptr gs:[0x14]; jne 0x163776; add esp, 0x18; pop ebx; ret; 
0x00168154: sub edx, dword ptr gs:[0x14]; jne 0x16818c; add esp, 0x18; pop ebx; ret; 
0x00169929: sub edx, dword ptr gs:[0x14]; jne 0x169949; add esp, 0x18; pop ebx; ret; 
0x001699a1: sub edx, dword ptr gs:[0x14]; jne 0x1699b9; add esp, 0x18; pop ebx; ret; 
0x0016af64: sub edx, dword ptr gs:[0x14]; jne 0x16afa1; add esp, 0x28; pop ebx; ret; 
0x0016b125: sub edx, dword ptr gs:[0x14]; jne 0x16b14b; add esp, 0x28; pop ebx; ret; 
0x0016b1c7: sub edx, dword ptr gs:[0x14]; jne 0x16b1f4; add esp, 0x28; pop ebx; ret; 
0x0016b85c: sub edx, dword ptr gs:[0x14]; jne 0x16b86a; add esp, 0x28; pop ebx; ret; 
0x0016e0bf: sub edx, dword ptr gs:[0x14]; jne 0x16e0cd; add esp, 0x18; pop ebx; ret; 
0x00170bb6: sub edx, dword ptr gs:[0x14]; jne 0x170bc3; add esp, 0x1c; ret; 
0x00176712: sub edx, dword ptr gs:[0x14]; jne 0x176739; add esp, 0x18; pop ebx; ret; 
0x00037ba9: sub edx, dword ptr gs:[0x14]; jne 0x37bc7; add esp, 0x98; pop ebx; ret; 
0x00037d4f: sub edx, dword ptr gs:[0x14]; jne 0x37d8c; add esp, 0x28; pop ebx; ret; 
0x00038101: sub edx, dword ptr gs:[0x14]; jne 0x38111; add esp, 0x12c; ret; 
0x00038721: sub edx, dword ptr gs:[0x14]; jne 0x3873f; add esp, 0x98; pop ebx; ret; 
0x000387a1: sub edx, dword ptr gs:[0x14]; jne 0x387bf; add esp, 0x98; pop ebx; ret; 
0x00038829: sub edx, dword ptr gs:[0x14]; jne 0x38839; add esp, 0x9c; ret; 
0x0003aaa9: sub edx, dword ptr gs:[0x14]; jne 0x3aab6; add esp, 0x2c; ret; 
0x0003abd9: sub edx, dword ptr gs:[0x14]; jne 0x3abe6; add esp, 0x2c; ret; 
0x0003aeaa: sub edx, dword ptr gs:[0x14]; jne 0x3aeec; add esp, 0x18; pop ebx; ret; 
0x0003b4bb: sub edx, dword ptr gs:[0x14]; jne 0x3b4c8; add esp, 0x1c; ret; 
0x0003b50e: sub edx, dword ptr gs:[0x14]; jne 0x3b51b; add esp, 0x1c; ret; 
0x0003b55b: sub edx, dword ptr gs:[0x14]; jne 0x3b568; add esp, 0x1c; ret; 
0x0003b5ae: sub edx, dword ptr gs:[0x14]; jne 0x3b5bb; add esp, 0x1c; ret; 
0x000484f5: sub edx, dword ptr gs:[0x14]; jne 0x48505; add esp, 0x42c; ret; 
0x00057d69: sub edx, dword ptr gs:[0x14]; jne 0x57d7a; add esp, 0x1018; pop ebx; ret; 
0x00057de8: sub edx, dword ptr gs:[0x14]; jne 0x57df6; add esp, 0x78; pop ebx; ret; 
0x00058395: sub edx, dword ptr gs:[0x14]; jne 0x583af; add esp, 0x1c; ret; 
0x00081642: sub edx, dword ptr gs:[0x14]; jne 0x8166d; add esp, 0x2c; ret; 
0x000817aa: sub edx, dword ptr gs:[0x14]; jne 0x817db; add esp, 0x2c; ret; 
0x0008597b: sub edx, dword ptr gs:[0x14]; jne 0x85988; add esp, 0x2c; ret; 
0x0008a207: sub edx, dword ptr gs:[0x14]; jne 0x8a215; add esp, 0x28; pop ebx; ret; 
0x0008a2a5: sub edx, dword ptr gs:[0x14]; jne 0x8a2b3; add esp, 0x28; pop ebx; ret; 
0x0008b62b: sub edx, dword ptr gs:[0x14]; jne 0x8b638; add esp, 0x2c; ret; 
0x0008ba8b: sub edx, dword ptr gs:[0x14]; jne 0x8ba98; add esp, 0x2c; ret; 
0x0008bf87: sub edx, dword ptr gs:[0x14]; jne 0x8bf94; add esp, 0x2c; ret; 
0x0008c3d7: sub edx, dword ptr gs:[0x14]; jne 0x8c3e4; add esp, 0x2c; ret; 
0x0008f160: sub edx, dword ptr gs:[0x14]; jne 0x8f1a4; add esp, 0x38; pop ebx; ret; 
0x0008f3d0: sub edx, dword ptr gs:[0x14]; jne 0x8f3f7; add esp, 0x2c; ret; 
0x0008f65c: sub edx, dword ptr gs:[0x14]; jne 0x8f687; add esp, 0x2c; ret; 
0x0008f8cc: sub edx, dword ptr gs:[0x14]; jne 0x8f8f7; add esp, 0x18; pop ebx; ret; 
0x000914f6: sub edx, dword ptr gs:[0x14]; jne 0x91504; add esp, 0x28; pop ebx; ret; 
0x00092ace: sub edx, dword ptr gs:[0x14]; jne 0x92adc; add esp, 0x28; pop ebx; ret; 
0x0009307c: sub edx, dword ptr gs:[0x14]; jne 0x9308a; add esp, 0x38; pop ebx; ret; 
0x000c2f9b: sub edx, dword ptr gs:[0x14]; jne 0xc2fcc; add esp, 0x18; pop ebx; ret; 
0x000c9a9b: sub edx, dword ptr gs:[0x14]; jne 0xc9ab7; add esp, 0x28; pop ebx; ret; 
0x000c9b1b: sub edx, dword ptr gs:[0x14]; jne 0xc9b28; add esp, 0x1c; ret; 
0x000c9b66: sub edx, dword ptr gs:[0x14]; jne 0xc9b74; add esp, 0x38; pop ebx; ret; 
0x000c9bc6: sub edx, dword ptr gs:[0x14]; jne 0xc9bd4; add esp, 0x48; pop ebx; ret; 
0x000cac92: sub edx, dword ptr gs:[0x14]; jne 0xcacd2; add esp, 0x28; pop ebx; ret; 
0x000cb056: sub edx, dword ptr gs:[0x14]; jne 0xcb078; add esp, 0x38; pop ebx; ret; 
0x000d356f: sub edx, dword ptr gs:[0x14]; jne 0xd357c; add esp, 0x1c; ret; 
0x000d5bff: sub edx, dword ptr gs:[0x14]; jne 0xd5c0c; add esp, 0x1c; ret; 
0x000d5d63: sub edx, dword ptr gs:[0x14]; jne 0xd5da2; add esp, 0x28; pop ebx; ret; 
0x000d5f62: sub edx, dword ptr gs:[0x14]; jne 0xd5f70; add esp, 0x28; pop ebx; ret; 
0x000d7112: sub edx, dword ptr gs:[0x14]; jne 0xd7123; add esp, 0xe8; pop ebx; ret; 
0x000d7197: sub edx, dword ptr gs:[0x14]; jne 0xd71a5; add esp, 0x38; pop ebx; ret; 
0x000d723e: sub edx, dword ptr gs:[0x14]; jne 0xd724f; add esp, 0xe8; pop ebx; ret; 
0x000d72c7: sub edx, dword ptr gs:[0x14]; jne 0xd72d5; add esp, 0x38; pop ebx; ret; 
0x000d93b7: sub edx, dword ptr gs:[0x14]; jne 0xd9402; add esp, 0x28; pop ebx; ret; 
0x000dc1a2: sub edx, dword ptr gs:[0x14]; jne 0xdc253; add esp, 0x68; pop ebx; ret; 
0x000ddd73: sub edx, dword ptr gs:[0x14]; jne 0xdddc2; add esp, 0x28; pop ebx; ret; 
0x000dde13: sub edx, dword ptr gs:[0x14]; jne 0xdde62; add esp, 0x28; pop ebx; ret; 
0x000df7a4: sub edx, dword ptr gs:[0x14]; jne 0xdf7c6; add esp, 0x78; pop ebx; ret; 
0x000e1e44: sub edx, dword ptr gs:[0x14]; jne 0xe1e66; add esp, 0x78; pop ebx; ret; 
0x000f6cf4: sub edx, dword ptr gs:[0x14]; jne 0xf6d16; add esp, 0x78; pop ebx; ret; 
0x000f78b4: sub edx, dword ptr gs:[0x14]; jne 0xf78d6; add esp, 0x78; pop ebx; ret; 
0x000b2c83: sub edx, eax; jbe 0xb2cc0; add eax, edi; pop edi; ret; 
0x000b2c96: sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000b2ca6: sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000b2cb6: sub edx, eax; jbe 0xb2cc0; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0007dd3e: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00114d71: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000b29b0: sub edx, ecx; jbe 0xb29e0; add eax, ecx; ret; 
0x0007cd7e: sub edx, edi; pop edi; pop ebp; mov eax, edx; ret; 
0x0012a1e6: sub esi, 1; jae 0x12a1c0; add esp, 4; pop ebx; pop esi; ret; 
0x001502da: sub esi, 2; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00157b10: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00161ab3: sub esi, ebp; call ecx; 
0x00195154: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0008b063: sub esi, edi; ret; 
0x000889c9: sub esi, esp; call dword ptr [eax + 0x56]; 
0x000889b3: sub esi, esp; call dword ptr [eax - 0x73]; 
0x00109ae4: sub esp, -0x61; stc; call dword ptr [eax - 0x18]; 
0x00107f21: sub esp, -0x80; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0007c0d8: sub esp, -0x80; pop ebx; pop esi; pop edi; ret; 
0x000ddfc4: sub esp, 0x14; push 0; push 0; call 0xddf60; add esp, 0x1c; ret; 
0x0011eda4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x11edc0; add esp, 0x1c; ret; 
0x00048514: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x484c0; add esp, 0x1c; ret; 
0x0007fd70: sub esp, 0x14; push 1; call 0x7f7d0; add esp, 0x18; pop ebx; ret; 
0x00143cd4: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x143bb0; add esp, 0x1c; ret; 
0x0008aee4: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x8ad90; add esp, 0x1c; ret; 
0x00137a64: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x136d30; add esp, 0x1c; ret; 
0x0016f0a0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x16e930; add esp, 0x18; pop ebx; ret; 
0x0013cb20: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000792c0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x70550; add esp, 0x18; pop ebx; ret; 
0x001176a0: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0008cdce: sub esp, 0x18; lea eax, [eax + 0x3a60]; push eax; call 0x835b0; add esp, 0x1c; ret; 
0x0011ae0e: sub esp, 0x18; lea eax, [eax + 0x44e4]; push eax; call 0x11afa0; add esp, 0x1c; ret; 
0x0004a556: sub esp, 0x18; mov ecx, esp; mov ebx, 0x3001; mov eax, 0x180; call dword ptr gs:[0x10]; 
0x00154014: sub esp, 0x18; push 0; call 0x14fa30; add esp, 0x1c; ret; 
0x00038084: sub esp, 0x18; push 0; call 0x37930; add esp, 0x1c; ret; 
0x00153244: sub esp, 0x18; push 0xa; call 0x14fa30; add esp, 0x1c; ret; 
0x00152ee4: sub esp, 0x18; push 1; call 0x14fa30; add esp, 0x1c; ret; 
0x00152654: sub esp, 0x18; push 2; call 0x14fa30; add esp, 0x1c; ret; 
0x001516d4: sub esp, 0x18; push 3; call 0x14fa30; add esp, 0x1c; ret; 
0x001522b4: sub esp, 0x18; push 4; call 0x14fa30; add esp, 0x1c; ret; 
0x00150144: sub esp, 0x18; push 5; call 0x14fa30; add esp, 0x1c; ret; 
0x001529d4: sub esp, 0x18; push 6; call 0x14fa30; add esp, 0x1c; ret; 
0x00154834: sub esp, 0x18; push 7; call 0x14fa30; add esp, 0x1c; ret; 
0x001507b4: sub esp, 0x18; push 8; call 0x14fa30; add esp, 0x1c; ret; 
0x001542d4: sub esp, 0x18; push 9; call 0x14fa30; add esp, 0x1c; ret; 
0x00073b70: sub esp, 0x18; push ecx; call 0x75530; add esp, 0x1c; ret; 
0x000933e4: sub esp, 0x28; mov ebp, dword ptr [esp + 0x3c]; lea ecx, [edi - 0x722c0]; call dword ptr gs:[0x10]; 
0x0002da35: sub esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0002e84f: sub esp, 0x89000010; ret 0x858b; 
0x0011c974: sub esp, 0xc; call 0x11c6c0; test eax, eax; je 0x11c988; add esp, 0xc; ret; 
0x0014d9f0: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x0015da9a: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0015cefa: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0015a23d: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015ae4e: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0008ef2d: sub esp, 0xc; mov dword ptr [esp + 0x10], edx; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00075345: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0015e7ca: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0015a64d: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0015dc8f: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x00160fd9: sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x000dfdc0: sub esp, 0xc; mov eax, dword ptr [ebp - 0x19c]; push dword ptr [ebp - 0x198]; call dword ptr [eax + 0x14]; 
0x00103f18: sub esp, 0xc; mov eax, dword ptr [ebp - 0x1ac]; push dword ptr [ebp - 0x1a8]; call dword ptr [eax + 0x14]; 
0x001552cb: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x001573fa: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0014de3f: sub esp, 0xc; mov eax, dword ptr [ebx + 0xa2ac]; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00156070: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00155a83: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x001604d0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x001603c0: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x0015f6fd: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0015f0ff: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00155d4b: sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x0015535f: sub esp, 0xc; mov ecx, dword ptr [eax + 0x20]; push eax; call dword ptr [ecx + 0xc]; 
0x0015563c: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0015e9c4: sub esp, 0xc; mov ecx, dword ptr [edx + 4]; push edx; call dword ptr [ecx + 0x10]; 
0x000d8582: sub esp, 0xc; mov edi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x30]; push esi; call eax; 
0x001557e9: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000831fc: sub esp, 0xc; push 0; call 0x827f0; add esp, 0x1c; ret; 
0x000e0095: sub esp, 0xc; push dword ptr [ebp - 0x198]; mov eax, dword ptr [ebp - 0x19c]; call dword ptr [eax + 0x10]; 
0x00104305: sub esp, 0xc; push dword ptr [ebp - 0x1a8]; mov eax, dword ptr [ebp - 0x1ac]; call dword ptr [eax + 0x10]; 
0x00020f47: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x00124dcb: sub esp, 0xc; push dword ptr [ebx + 0x274]; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x0008425c: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0011b2f1: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x00099560: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00139acc: sub esp, 0xc; push eax; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00082aa4: sub esp, 0xc; push eax; call edx; 
0x0015d6b8: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001575de: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015d6cf: sub esp, 0xc; push ebp; call eax; 
0x0015c4d2: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00139dd0: sub esp, 0xc; push ebx; call 0x16b3c0; mov dword ptr [esp], ebp; call ebx; 
0x0002b7b2: sub esp, 0xc; push ebx; call 0x16b3c0; mov dword ptr [esp], esi; call ebx; 
0x00156053: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0007d495: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00075169: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0007b4ec: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007d2f3: sub esp, 0xc; push ebx; call dword ptr [esi + 0x44]; 
0x00022907: sub esp, 0xc; push ecx; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00022f97: sub esp, 0xc; push ecx; call 0x16b3c0; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x001564a6: sub esp, 0xc; push edi; call 0x109210; mov eax, dword ptr [ebp + 0x20]; mov dword ptr [esp], ebp; call dword ptr [eax + 0x10]; 
0x000d8d95: sub esp, 0xc; push edi; call 0x16b3c0; add esp, 0x10; mov eax, edi; call eax; 
0x000236c7: sub esp, 0xc; push edi; call 0x16b3c0; mov dword ptr [esp], ebx; call edi; 
0x001567e7: sub esp, 0xc; push edi; call eax; 
0x0019cbb4: sub esp, 0xc; push esi; call 0x16b3c0; add ebp, dword ptr [edi + 8]; mov dword ptr [esp], ebp; call esi; 
0x00139c2c: sub esp, 0xc; push esi; call 0x16b3c0; mov dword ptr [esp], ebp; call esi; 
0x00022794: sub esp, 0xc; push esi; call 0x16b3c0; mov dword ptr [esp], ebx; call esi; 
0x001554f2: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0007a0ed: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0007f1e3: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0017054f: sub esp, 0xc; push esi; call dword ptr [ebp + 0x44]; 
0x00070ac5: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007311e: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007ee3e: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00170694: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0002ddff: sub esp, 0xc; push esi; call eax; 
0x00121076: sub esp, 0xc; push esi; call edx; 
0x00121076: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0015c190: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001564f8: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00140589: sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0003a875: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000d5c24: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd5c38; add esp, 0xc; ret; 
0x000d5d04: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd5d18; add esp, 0xc; ret; 
0x00130ec6: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00036240: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x00066a71: sub esp, 4; mov dword ptr [ebp - 0x8ac], ecx; push ebx; push edi; push dword ptr [ebp - 0x87c]; call edx; 
0x00081b86: sub esp, 4; mov edx, dword ptr [edx]; push ebx; push eax; push ecx; call edx; 
0x001745eb: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00161df5: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0007fbf2: sub esp, 4; push 0; push 0; push ebx; call dword ptr [ebp + 0x2c]; 
0x000720f0: sub esp, 4; push 0x10; push dword ptr [esp + 8]; push ebx; call dword ptr [eax + 0x1c]; 
0x000741e0: sub esp, 4; push 0x10; push edi; push ebx; call dword ptr [eax + 0x1c]; 
0x00073060: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00072920: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00073e55: sub esp, 4; push dword ptr [ebp - 0x1c]; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x00039040: sub esp, 4; push dword ptr [esp + 0x10]; push ebp; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0012a58b: sub esp, 4; push dword ptr [esp + 0x18]; push 0; push 0x2000004; call eax; 
0x0016e653: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007105f: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007bba2: sub esp, 4; push dword ptr [esp + 0xc]; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00021670: sub esp, 4; push dword ptr [esp + 0xc]; push esi; push dword ptr [esp + 0x40]; call dword ptr [ebp]; 
0x0007cc8f: sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00077175: sub esp, 4; push eax; push edx; push dword ptr [esp + 0x18]; call ecx; 
0x0007c725: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x00038edc: sub esp, 4; push ebp; push dword ptr [esp + 0x30]; push esi; call edi; 
0x0007cb99: sub esp, 4; push ebp; push dword ptr [esp + 0x3c]; push edi; call dword ptr [esi + 0x20]; 
0x00069052: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [eax + 0x1c]; 
0x00068f67: sub esp, 4; push ebp; push dword ptr [esp + 0x44]; push edi; call dword ptr [ebx + 0x1c]; 
0x00069e56: sub esp, 4; push ebp; push eax; push esi; mov eax, dword ptr [esp + 0x1c]; call dword ptr [eax + 0x1c]; 
0x00038bd4: sub esp, 4; push ebp; push ebx; push esi; call edi; 
0x00074252: sub esp, 4; push ebp; push edi; push ebx; mov eax, dword ptr [esp + 0x10]; call dword ptr [eax + 0x1c]; 
0x00038bb0: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x1c]; call edi; 
0x00038b83: sub esp, 4; push ebp; push esi; push dword ptr [esp + 0x30]; call edi; 
0x00066889: sub esp, 4; push ebx; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x000654b0: sub esp, 4; push ebx; push dword ptr [esp + 0x14]; push ebp; call dword ptr [eax + 0x1c]; 
0x00071005: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0006cff9: sub esp, 4; push ebx; push dword ptr [esp + 0x24]; push ebp; call dword ptr [esi + 0x1c]; 
0x000660f5: sub esp, 4; push ebx; push eax; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x00068201: sub esp, 4; push ebx; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00072ed7: sub esp, 4; push ebx; push edi; push esi; call dword ptr [eax + 0x2c]; 
0x00066210: sub esp, 4; push ebx; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0006b158: sub esp, 4; push ebx; push esi; push dword ptr [ebp - 0x8a0]; call dword ptr [eax + 0x1c]; 
0x0006d3d9: sub esp, 4; push ebx; push esi; push ebp; call dword ptr [edi + 0x1c]; 
0x0011b220: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0016f77a: sub esp, 4; push ecx; push dword ptr [esp + 0xc]; push ebx; call dword ptr [ebp + 0x3c]; 
0x0006b6f1: sub esp, 4; push ecx; push edi; push dword ptr [ebp - 0x8a0]; call edx; 
0x0011b1e9: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0011b1fd: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0011b210: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00071336: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00072163: sub esp, 4; push edi; push dword ptr [esp + 8]; push ebx; call dword ptr [ebp + 0x1c]; 
0x00053346: sub esp, 4; push edi; push ebx; push dword ptr [ebp - 0x88]; call eax; 
0x0006e236: sub esp, 4; push edi; push esi; push ebp; call dword ptr [ebx + 0x1c]; 
0x0007b700: sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebp + 0x1c]; 
0x00067dbe: sub esp, 4; push esi; push dword ptr [esp + 0x28]; push edi; call dword ptr [ebx + 0x1c]; 
0x00073f23: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [edx + 0x1c]; 
0x0007b882: sub esp, 4; push esi; push ebp; push edi; call dword ptr [edx + 0x1c]; 
0x00100679: sub esp, 4; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0007dd3b: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0015f6ec: sub esp, 8; add ecx, 4; mov eax, dword ptr [edi + 4]; push ecx; push edi; call dword ptr [eax + 8]; 
0x0015bb50: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00118ef0: sub esp, 8; call 0x118b80; mov dword ptr [ebx + 0x4414], eax; add esp, 8; pop ebx; ret; 
0x00084055: sub esp, 8; cmp dword ptr [esp + 0x10], 0x20; je 0x84068; add esp, 8; pop ebx; ret; 
0x00035f80: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x0007c084: sub esp, 8; lea eax, [esp + 0x18]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0007bd1b: sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00076d21: sub esp, 8; lea eax, [esp + 0x40]; push eax; push dword ptr [esp + 0x18]; call dword ptr [edi + 0x48]; 
0x00070439: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000d5e90: sub esp, 8; lea ebp, [esp + 0xc]; push ebp; push ebx; call eax; 
0x0007efac: sub esp, 8; lea edi, [ecx + 1]; push eax; push edx; mov dword ptr [esp + 0x40], edx; call dword ptr [esi + 0xc]; 
0x001553e6: sub esp, 8; lea edi, [esp + 0x40]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000df7b8: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0015edb5: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x0007c3c4: sub esp, 8; lea edx, [esp + 0x28]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000d5ff2: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x00103a38: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00155f98: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000c9eff: sub esp, 8; mov dword ptr [esp + 0x6c], edi; push ebx; push ebp; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0015a4fd: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00155280: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016b138: sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0016b1d8: sub esp, 8; mov eax, dword ptr [ebx + 0x3a0]; push ecx; push edx; call dword ptr [eax + 0x28]; 
0x0015d171: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; lea edx, [esp + 0xac]; push edx; push esi; call dword ptr [eax + 4]; 
0x0015ba32: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00157a28: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x001579d8: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0015bab0: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x00160280: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016046f: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x00156de5: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00156d69: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00156e10: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00162714: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x00155406: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x0015529c: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00156e5a: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0007de3e: sub esp, 8; push -1; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x2c]; call dword ptr [eax + 0xc]; 
0x00076a93: sub esp, 8; push -1; push dword ptr [edi]; call dword ptr [eax + 0xc]; 
0x0015744d: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003a5c5: sub esp, 8; push 0; push edx; call edi; 
0x0007980a: sub esp, 8; push 0; push esi; call dword ptr [ebp + 8]; 
0x00070615: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0011b732: sub esp, 8; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; mov dword ptr [ebp - 0x30], edx; call eax; 
0x0011b66a: sub esp, 8; push dword ptr [ebx]; mov ebp, ebx; push esi; call edi; 
0x001552b2: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0015dc76: sub esp, 8; push dword ptr [esp + 0x2c]; push ebx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000582c8: sub esp, 8; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0015a515: sub esp, 8; push dword ptr [esp + 0x3c]; push esi; mov eax, dword ptr [esp + 0x40]; call eax; 
0x000995d0: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000e004c: sub esp, 8; push eax; push edi; call esi; 
0x001604b8: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0012d97c: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000758fa: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00099552: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000d5fb9: sub esp, 8; push edi; push ebx; call eax; 
0x00099463: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00138298: subps xmm7, xmm1; call dword ptr [eax - 0x18]; 
0x000a11cd: syscall; 
0x000ac4cd: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00192722: test ah, 0x20; jne 0x1927c0; lea eax, [edi - 4]; pop edi; ret; 
0x001932b2: test ah, 0x20; jne 0x193350; lea eax, [ecx + 0xc]; ret; 
0x001934f2: test ah, 0x20; jne 0x1935a0; add edx, 0xc; jl 0x1935d0; lea eax, [ecx + 0xc]; ret; 
0x00193909: test ah, 0x20; jne 0x1939c0; test ah, 0x40; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x00192266: test ah, 0x40; jne 0x192350; lea eax, [edi + 0xf]; pop edi; ret; 
0x00192c22: test ah, 0x40; jne 0x192d60; lea eax, [edi + 0xf]; pop edi; ret; 
0x00193912: test ah, 0x40; jne 0x1939d0; lea eax, [edx + 0xf]; ret; 
0x00194ad0: test ah, 0xf0; jne 0x194af0; lea eax, [edi - 8]; pop edi; ret; 
0x00194844: test ah, 0xf; jne 0x194860; test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x00194880: test ah, 1; jne 0x1948a0; lea eax, [ecx + 0xc]; ret; 
0x001926f9: test ah, 2; jne 0x192790; lea eax, [edi - 8]; pop edi; ret; 
0x00193289: test ah, 2; jne 0x193320; lea eax, [ecx + 8]; ret; 
0x001934c8: test ah, 2; jne 0x193570; add edx, 8; jl 0x1935d0; lea eax, [ecx + 8]; ret; 
0x001938e0: test ah, 2; jne 0x193990; test ah, 4; jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x00192bf9: test ah, 4; jne 0x192d30; lea eax, [edi + 0xb]; pop edi; ret; 
0x001938e9: test ah, 4; jne 0x1939a0; lea eax, [edx + 0xb]; ret; 
0x00153ca1: test ah, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cfbdbac], cl; ret 0x8902; 
0x0011d3f4: test ah, al; or eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sbb dword ptr [edx - 7], edx; call dword ptr [eax + 0x57]; 
0x00025024: test ah, dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3dbbc], cl; ret 0x8301; 
0x000f0719: test ah, dl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b26c4: test al, 0; add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x00193494: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x0010f73c: test al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001938c4: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0010f708: test al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0015a4c2: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x2c]; push esi; call dword ptr [eax + 0xc]; 
0x001926d0: test al, 0x20; jne 0x192760; lea eax, [edi - 0xc]; pop edi; ret; 
0x00193260: test al, 0x20; jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x00193490: test al, 0x20; jne 0x193540; add edx, 4; jl 0x1935d0; lea eax, [ecx + 4]; ret; 
0x001938b8: test al, 0x20; jne 0x193960; test al, 0x40; jne 0x193970; lea eax, [edx + 7]; ret; 
0x00192214: test al, 0x40; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x00192bd0: test al, 0x40; jne 0x192d00; lea eax, [edi + 7]; pop edi; ret; 
0x00193258: test al, 0x40; jne 0x193300; test al, 0x20; jne 0x1932f0; lea eax, [ecx + 4]; ret; 
0x001938c0: test al, 0x40; jne 0x193970; lea eax, [edx + 7]; ret; 
0x00119794: test al, 0x44; cld; inc dword ptr [ebx - 0x72affb14]; xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x0011d176: test al, 0x4c; stc; call dword ptr [eax + 0x57]; 
0x00079da4: test al, 0x5c; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00084211: test al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x00121a08: test al, 0x83; in al, dx; or byte ptr [ebp - 0x65d3f79], cl; call dword ptr [eax + 0x55]; 
0x001177c7: test al, 0x83; ret 0xbb03; 
0x0009fc2f: test al, 0x83; ret 0xf01; 
0x00156b9c: test al, 0x83; ret; 
0x00090fcf: test al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x00087bcf: test al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x27cc71b], al; or byte ptr [esi + ecx*4 - 0x15], dh; ret; 
0x0019ce6a: test al, 0x85; sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 8; call edx; 
0x00075364: test al, 0x88; add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0013c245: test al, 0x8b; inc ebp; mov esp, 0xffffffbf; dec dword ptr [ebx - 0x13350]; jmp dword ptr [ebp - 0x75]; 
0x00076742: test al, 0x8b; push ebp; les ecx, ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00076b21: test al, 0x8d; or byte ptr [eax], 0x7d; stc; call dword ptr [eax - 0x73]; 
0x0014a3fa: test al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x00151692: test al, 0xae; stc; call dword ptr [eax - 0x18]; 
0x0002d782: test al, 0xe8; cwde; cmp byte ptr [eax], dl; add byte ptr [ebp - 0x68e7379], cl; call dword ptr [eax - 0x73]; 
0x0016e60c: test al, 0xee; inc dword ptr [ebx - 0x247aef3c]; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x00194a05: test al, 0xf0; jne 0x194ac0; lea eax, [edi - 0x10]; pop edi; ret; 
0x0013de3d: test al, 0xf9; call dword ptr [eax - 0x18]; 
0x0013d257: test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0019476a: test al, 0xf; jne 0x194830; test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x000df736: test al, 0xfb; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017673b: test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00137442: test al, 0xfe; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [ebx - 0x77]; ret 0xb70f; 
0x0008b1f3: test al, 1; je 0x8b230; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00194874: test al, 1; jne 0x194890; lea eax, [ecx + 4]; ret; 
0x0008c4f4: test al, 1; jne 0x8c4ca; mov eax, 0x10; pop ebx; ret; 
0x001926ab: test al, 2; jne 0x192730; lea eax, [edi - 0x10]; pop edi; ret; 
0x001930db: test al, 2; jne 0x1932c0; mov eax, ecx; ret; 
0x001933e9: test al, 2; jne 0x193510; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x00193895: test al, 2; jne 0x193930; test al, 4; jne 0x193940; lea eax, [edx + 3]; ret; 
0x00192bad: test al, 4; jne 0x192cd0; lea eax, [edi + 3]; pop edi; ret; 
0x001930d3: test al, 4; jne 0x1932d0; test al, 2; jne 0x1932c0; mov eax, ecx; ret; 
0x0019389d: test al, 4; jne 0x193940; lea eax, [edx + 3]; ret; 
0x0004abb8: test al, al; add al, byte ptr [eax]; add byte ptr [eax], al; call 0x4ab70; add eax, ebx; jmp eax; 
0x0016891b: test al, al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x001518b3: test al, al; add byte ptr [eax], al; add byte ptr [ebx], al; je 0x1518df; cmp al, 0x89; ret; 
0x00194870: test al, al; je 0x194880; test al, 1; jne 0x194890; lea eax, [ecx + 4]; ret; 
0x0008d8cf: test al, al; je 0x8d8e0; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0013eca5: test al, al; jne 0x13ecb0; pop ebx; pop esi; pop edi; ret; 
0x0016e180: test al, al; jne 0x16e1a4; mov eax, 4; add esp, 0xc; ret; 
0x0019d7c6: test al, al; jne 0x19d7d0; add esp, 4; pop ebx; pop esi; ret; 
0x000b43a4: test al, al; jne 0xb439c; xor eax, eax; ret; 
0x000e4390: test al, al; jne 0xe4361; xor eax, eax; ret; 
0x000240a0: test al, dh; add byte ptr [eax], al; add byte ptr [ecx - 0x76ff7439], cl; ret 0xce80; 
0x0015dc8a: test al, dh; add eax, 0xec830000; or al, 0x8b; inc ebp; cmp al, 0x53; call dword ptr [eax + 0x10]; 
0x000cc1d4: test bh, al; add al, 0; add byte ptr [ebx - 0x7c72f714], al; cmp al, 0x45; stc; call dword ptr [eax + 0x56]; 
0x00138bd4: test bh, bh; jmp dword ptr [esi - 0x70]; 
0x0011d40f: test bh, ch; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6adc37d], cl; call dword ptr [ecx + 0x51]; 
0x0002d0e2: test bh, dh; call dword ptr [eax - 0x18]; 
0x0002ce70: test bh, dh; call dword ptr [ebp + 3]; 
0x0002dc9e: test bh, dh; call dword ptr [esi - 1]; 
0x000a59c4: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000418b3: test bl, 0x12; add byte ptr [ecx + 0x1e4749c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x00048b80: test bl, bl; add al, 0; add byte ptr [ecx], dh; rol byte ptr [ebx + 0x440ffff8], cl; ret 0x3c83; 
0x0007d650: test bl, bl; add dword ptr [eax], eax; add byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x000298fe: test bl, bl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x000e5619: test bl, cl; add al, 0; add byte ptr [ebx - 0x7ad3dbbc], cl; ror byte ptr [edi], 0x85; ret 8; 
0x00139708: test bl, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp + 3]; 
0x0014eabc: test bl, dl; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x00046cbf: test byte ptr [0x39000004], cl; ret; 
0x0002c0b2: test byte ptr [0x83000001], bl; in al, dx; or byte ptr [ebp - 0x6d38d6d], cl; call dword ptr [edx + 0x50]; 
0x0011d136: test byte ptr [0x83000005], ah; in al, dx; or byte ptr [ebp - 0x6b1e17d], cl; call dword ptr [eax + 0x57]; 
0x0008be55: test byte ptr [0x83ffffff], ah; in al, dx; or al, 0x8d; xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x00165e3e: test byte ptr [0x8b000001], bh; inc ebp; mov byte ptr [ecx], dh; jmp dword ptr [ebp - 0x39]; 
0x0008a43b: test byte ptr [0xb8000004], al; lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; mov esi, edx; call dword ptr gs:[0x10]; 
0x0002fc41: test byte ptr [eax + 0x200], dl; ret; 
0x0005e7ab: test byte ptr [eax + 0x2bffffb8], al; test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000fab4b: test byte ptr [eax + 0xf000004], dl; mov esi, 0x83df89ca; ret; 
0x000e9dcf: test byte ptr [eax + eax - 0x137d0000], bl; or byte ptr [ebp - 0x6c15b7d], cl; call dword ptr [eax + 0x55]; 
0x000cbd2f: test byte ptr [eax + eax - 0x137d0000], cl; or byte ptr [ebp - 0x6baf47d], cl; call dword ptr [eax + 0x56]; 
0x000fe698: test byte ptr [eax + eax - 0x7b750000], bl; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0015cadf: test byte ptr [eax + eax - 0x7c730000], ch; add cl, byte ptr [edx - 7]; call dword ptr [esi + 0x57]; 
0x000293cb: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x293f9; push dword ptr fs:[esp + 0x64]; call edi; 
0x0002a7c3: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a7f1; push dword ptr fs:[esp + 0x64]; call edi; 
0x0011edc6: test byte ptr [eax + eax], 0x81; ret 0x7237; 
0x00194041: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000ff33f: test byte ptr [eax + eax], bh; add byte ptr [ebx - 0x45b7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x00022f9d: test byte ptr [eax + eax], dl; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x40]; call ecx; 
0x00079727: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x189f7d], cl; call dword ptr [eax - 0x73]; 
0x001490ca: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x00149205: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b17], cl; ret 0x5052; 
0x0003866f: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c9767: test byte ptr [eax + edx*8], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000fe69e: test byte ptr [eax + edx*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00193ff1: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000962bb: test byte ptr [eax - 0x76fffffb], dl; ret 0x708d; 
0x00186395: test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x0011d3d9: test byte ptr [eax - 0x7cfffff5], al; in al, dx; or byte ptr [ebp - 0x6ae097d], cl; call dword ptr [eax + 0x57]; 
0x000fb7eb: test byte ptr [eax - 0x7cfffff9], dh; ret 0x8014; 
0x000f217b: test byte ptr [eax - 0x7cfffffe], al; rol byte ptr [ecx], 0x39; ret 0xe775; 
0x0018e5c5: test byte ptr [eax - 0x7d000000], ch; in eax, dx; or byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0012b203: test byte ptr [eax - 0x7d000000], dl; ret 0x8801; 
0x0012ed43: test byte ptr [eax - 7], bl; call dword ptr [ecx + 0x52]; 
0x0009a9d1: test byte ptr [eax*4 + 0x10974c0], ch; ret; 
0x0007e3b8: test byte ptr [eax], 0x80; jne 0x7e3c0; ret; 
0x0007a5d8: test byte ptr [eax], 4; sete al; movzx eax, al; ret; 
0x0007a5f8: test byte ptr [eax], 8; sete al; movzx eax, al; ret; 
0x00074b37: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x19bf7d], cl; call dword ptr [eax - 0x73]; 
0x000979db: test byte ptr [eax], ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x1637a], cl; jmp dword ptr [ebp - 0x75]; 
0x000871b6: test byte ptr [eax], al; add byte ptr [eax], al; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x000ddf3b: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114164: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [eax + 0x5402]; mov eax, edi; call dword ptr gs:[0x10]; 
0x001207f7: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x00120833: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fb8a7: test byte ptr [eax], dh; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x0002fe92: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0016b6a6: test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [eax], edx; push esp; hlt; call dword ptr [eax - 0x73]; 
0x00052709: test byte ptr [ebp + 0xb504], 0; add byte ptr [edi], cl; dec esi; ret 0xec83; 
0x0011d187: test byte ptr [ebp + eax - 0x137d0000], dl; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x00175b92: test byte ptr [ebp + eax], al; add byte ptr [ebx - 0x17aff314], al; pushal; ljmp 0x110:0xc483fff3; ret; 
0x0013aa3c: test byte ptr [ebp + edi*8 - 1], dh; call dword ptr [edx + 0x52]; 
0x0016482c: test byte ptr [ebp - 0x72b00000], ah; add dword ptr [esi + 0x62], -7; call dword ptr [eax + 0x6a]; 
0x0019a79e: test byte ptr [ebp - 0x76fffff6], bl; ret 0xea83; 
0x000ff5e6: test byte ptr [ebp - 0x76fffffc], ch; ret 0x44c7; 
0x0016c0b6: test byte ptr [ebp - 0x76ffffff], ah; ret 0xb60f; 
0x0011d20e: test byte ptr [ebp - 0x7cfffff9], cl; in al, dx; or byte ptr [ebp - 0x6b1a37d], cl; call dword ptr [eax + 0x57]; 
0x000cc25e: test byte ptr [ebp - 0x7cfffffd], bh; in al, dx; or byte ptr [ebp - 0x6d5a47d], cl; call dword ptr [eax + 0x56]; 
0x000dd9fe: test byte ptr [ebp - 0x7d000000], ah; ret; 
0x0009945e: test byte ptr [ebp - 0x7d000000], dh; in al, dx; or byte ptr [esi - 1], dl; jae 0x9948e; call eax; 
0x000995f6: test byte ptr [ebx + 0x28], 1; jne 0x995d0; sub esp, 0xc; push eax; call edx; 
0x0011a480: test byte ptr [ebx + 0x39000000], ch; ret; 
0x0011aa40: test byte ptr [ebx + 0x39000000], dh; ret; 
0x000225eb: test byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00082716: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x00022f18: test byte ptr [ebx + 0x6b000001], ah; ret 0x8b3c; 
0x000f47d2: test byte ptr [ebx + 0xf000001], ah; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000b27f0: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x00168f6f: test byte ptr [ebx + eax - 0x137d0000], cl; or byte ptr [ebp - 0x69a1645], cl; call dword ptr [edi + 0x55]; 
0x00040b17: test byte ptr [ebx + eax], dl; add byte ptr [ecx], bh; ret; 
0x000c76d6: test byte ptr [ebx + edi*8 - 1], dh; call dword ptr [eax + 0x6a]; 
0x0005454c: test byte ptr [ebx - 0x13b80], cl; jmp dword ptr [ebp - 0x75]; 
0x001570f5: test byte ptr [ebx - 0x264], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0006cb0f: test byte ptr [ebx - 0x49f00001], bl; push edi; or al, 0xf6; ret 0xf08; 
0x0005e77d: test byte ptr [ebx - 0x75000000], ch; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0019a52c: test byte ptr [ebx - 0x76000004], dl; ret; 
0x00156158: test byte ptr [ebx - 0x77000000], bl; ret; 
0x00065530: test byte ptr [ebx - 0x7b000000], cl; ror byte ptr [edi], 0x84; ret; 
0x001567e2: test byte ptr [ebx - 0x7c000002], al; in al, dx; or al, 0x57; call eax; 
0x00049793: test byte ptr [ebx - 0x7c00000f], ch; ret; 
0x00169790: test byte ptr [ebx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x69a076a], cl; call dword ptr [edx - 0x77]; 
0x000dd43e: test byte ptr [ebx - 0x7d000000], ch; ret 0x8904; 
0x0018e2e0: test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00168900: test byte ptr [ebx - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x699ea55], cl; call dword ptr [ebp + 0x56]; 
0x0018dcf3: test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4e6: test byte ptr [ebx - 0x86b80], al; sub eax, ecx; pop ebx; ret; 
0x0005464c: test byte ptr [ebx - 0xa343], cl; call dword ptr [edx + 0x6a]; 
0x00084412: test byte ptr [ebx - 0xe7fdbf4], -0x7f; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00168881: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00108a38: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x0015d6b0: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000f64f4: test byte ptr [ebx], al; pushal; cld; clc; call dword ptr [eax - 0x73]; 
0x000c4c10: test byte ptr [ebx], bh; adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0011d429: test byte ptr [ebx], bl; or al, 0; add byte ptr [ebp - 0x6ad9f7d], cl; call dword ptr [edx + 0x52]; 
0x0002c0d0: test byte ptr [ebx], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; js 0x2c108; stc; call dword ptr [eax - 1]; 
0x0002dc9b: test byte ptr [ebx], cl; inc eax; test bh, dh; call dword ptr [esi - 1]; 
0x00034de8: test byte ptr [ebx], dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; mov dh, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00153474: test byte ptr [ebx], dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; les esp, ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0009afba: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaeab0]; cmove eax, edx; ret; 
0x0012f28a: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaead0]; cmove eax, edx; ret; 
0x0009b09a: test byte ptr [ecx + 0x184], 1; lea edx, [edx - 0xaf0d0]; cmove eax, edx; ret; 
0x00164800: test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000b4a50: test byte ptr [ecx + 0x7d], 2; cmovne eax, edx; ret; 
0x0009a3f3: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x176f90]; cmovne eax, edx; ret; 
0x00099f43: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x179290]; cmovne eax, edx; ret; 
0x0009b193: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x17ec80]; cmovne eax, edx; ret; 
0x0009b143: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x1804f0]; cmovne eax, edx; ret; 
0x0009a483: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x183070]; cmovne eax, edx; ret; 
0x0009a043: test byte ptr [ecx + 0x7d], 2; lea edx, [edx - 0x1848c0]; cmovne eax, edx; ret; 
0x0009a080: test byte ptr [ecx + 0x7e], 0x10; cmovne eax, edx; ret; 
0x0008978d: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012a973: test byte ptr [ecx + edx*2 + 1], 0x40; cmovne eax, edx; pop ebx; ret; 
0x000e3432: test byte ptr [ecx - 0x44fffffa], al; das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x000e0db2: test byte ptr [ecx - 0x44fffffa], dl; das; add byte ptr [eax], al; add byte ptr [ebx - 0x46b73], cl; jmp dword ptr [esi - 0x77]; 
0x001775e1: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0004db7a: test byte ptr [ecx - 0x76fffffd], dl; ret; 
0x0011d301: test byte ptr [ecx - 0x7cfffff7], ch; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0007d72a: test byte ptr [ecx - 0x7cffffff], dh; in al, dx; or byte ptr [ebp - 0x6c19a7b], cl; call dword ptr [eax - 0x75]; 
0x000a152b: test byte ptr [ecx - 0x8a0], dl; ret; 
0x0013e425: test byte ptr [ecx - 0x8f7b], cl; dec dword ptr [ecx - 0x9773]; jmp dword ptr [ebp - 0x5f]; 
0x000a14fb: test byte ptr [ecx - 0x9c0], dl; ret; 
0x0006f38e: test byte ptr [ecx - 0xbe0], dl; ret; 
0x00103182: test byte ptr [ecx], 0; add byte ptr [ebp + 0xf840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x0009e455: test byte ptr [ecx], 0; add byte ptr [ebx + 0x29142454], cl; ret 0x8b90; 
0x0009a37c: test byte ptr [ecx], al; add byte ptr [eax], al; add al, 0x8d; xchg edx, eax; adc byte ptr [esi + 0x440fffe7], dh; ret 0x66c3; 
0x0009afbc: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaeaaf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f28c: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaeacf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0009b09c: test byte ptr [ecx], al; add byte ptr [eax], al; add dword ptr [ebp - 0xaf0cf6e], ecx; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00191ad8: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0013c3aa: test byte ptr [ecx], al; ret 0x3883; 
0x0014daca: test byte ptr [ecx], dh; add dword ptr [eax], eax; add byte ptr [ebp - 0x69f0b7d], cl; call dword ptr [eax - 0x73]; 
0x00057f5c: test byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x000a5a1a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0002289e: test byte ptr [edi + 0x6b000000], dl; ret 0x893c; 
0x0016aa68: test byte ptr [edi - 0x15], dl; call dword ptr [edx + 0x68]; 
0x0005e2f9: test byte ptr [edi - 0x74fffffe], ah; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x00170734: test byte ptr [edi - 0x75000000], dl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0004db54: test byte ptr [edi - 0x76fffffd], ah; ret; 
0x0016e7ed: test byte ptr [edi - 0x77000000], bl; ret 0xe283; 
0x0018e5ce: test byte ptr [edi - 0x7d000000], bl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00191773: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0005c75a: test byte ptr [edi], -0x61; ret 0xd629; 
0x000449f5: test byte ptr [edi], -0x6b; ret 0x5409; 
0x00060492: test byte ptr [edi], -0x6b; ret 0xff83; 
0x000f2f4f: test byte ptr [edi], -0x6c; ret 0xd008; 
0x0005944b: test byte ptr [edi], -0x7b; ret 9; 
0x000314cb: test byte ptr [edi], -0x7b; ret; 
0x0004fe63: test byte ptr [edi], -0x7b; sti; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000ac3e6: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000dc83a: test byte ptr [edi], 0x44; ret 0x8d50; 
0x00053a90: test byte ptr [edi], 0x49; ret; 
0x00145d1c: test byte ptr [edi], ah; idiv bh; dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x000a5a24: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0002d0df: test byte ptr [edi], al; pushal; test bh, dh; call dword ptr [eax - 0x18]; 
0x0011d244: test byte ptr [edi], bl; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; les ecx, ptr [esi - 7]; call dword ptr [eax + 0x57]; 
0x00033ad7: test byte ptr [edi], ch; add eax, dword ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00103189: test byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x13f7b], cl; dec dword ptr [ebx - 0x13348]; jmp dword ptr [ebp - 0x75]; 
0x000b4871: test byte ptr [edx + 0x185], 0x80; je 0xb4881; or dword ptr [eax + 0x3be0], 1; xor eax, eax; pop ebx; ret; 
0x001372df: test byte ptr [edx + eax - 0x137d0000], ch; or byte ptr [ebx - 0x72efdbbc], cl; cmp byte ptr [edx + 0x5b], 0xf9; call dword ptr [eax + 0x6a]; 
0x0005a611: test byte ptr [edx - 0x74ffffe1], ch; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0012f961: test byte ptr [edx - 0x76ffffff], bl; ret; 
0x0016bf86: test byte ptr [edx - 0x77000000], dh; ret 0xe283; 
0x0011d295: test byte ptr [edx - 0x7cfffff8], dl; in al, dx; or byte ptr [ebp - 0x6b0797d], cl; call dword ptr [eax + 0x57]; 
0x000e9c81: test byte ptr [edx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x6b7a97d], cl; call dword ptr [eax + 0x55]; 
0x00034c31: test byte ptr [edx - 0x7d000000], ch; in al, dx; or byte ptr [ebp - 0x6d05d7b], cl; call dword ptr [eax + 0x53]; 
0x001916d9: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x000a4b66: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x000fbe69: test byte ptr [edx], bh; add al, 0; add byte ptr [ebx - 0x6f37b], cl; jmp dword ptr [ebp - 0x7d]; 
0x0005d18a: test byte ptr [edx], dh; ret 0xffff; 
0x00026870: test byte ptr [esi + 0x29000003], dh; fmul dword ptr [ecx - 0x76fe743e]; ret; 
0x000e5855: test byte ptr [esi + 0xffffff7], ah; mov dh, 0x55; add byte ptr [ecx], bh; ret 0x840f; 
0x00170fa8: test byte ptr [esi - 0x2708000a], ah; sbb eax, eax; add esp, 0x1c; ret; 
0x0006b06f: test byte ptr [esi - 0x73660], al; lea eax, [esi + eax - 0x1bb381]; jmp eax; 
0x00066011: test byte ptr [esi - 0x73a60], al; lea eax, [esi + eax - 0x1c0419]; jmp eax; 
0x0007cc0a: test byte ptr [esi - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0019a803: test byte ptr [esi - 0x76fffff0], dl; ret 0xea83; 
0x000354af: test byte ptr [esi - 0x76fffffe], dl; ret 0x98eb; 
0x0014980a: test byte ptr [esi - 0x7c000002], al; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002e7fb: test byte ptr [esi - 0x7c000007], dh; in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x0002cf85: test byte ptr [esi - 0x7cffffff], bl; in al, dx; or byte ptr [ebp - 0x68d3379], cl; call dword ptr [eax + 0x56]; 
0x000b3dd1: test byte ptr [esi - 0x8ffffff], cl; ret 3; 
0x00023706: test byte ptr [esi - 7], ch; call dword ptr [eax - 0x73]; 
0x000227c9: test byte ptr [esi - 7], ch; call dword ptr [edx - 0x73]; 
0x0007f637: test byte ptr [esi], 0x80; jne 0x7f668; add esp, 4; pop ebx; pop esi; ret; 
0x00075340: test byte ptr [esi], 2; jne 0x753a8; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x0006b076: test byte ptr [esi], al; jg 0x6b0c6; in al, 0xff; jmp eax; 
0x00066018: test byte ptr [esi], al; out 0xfb, eax; jecxz 0x6601d; jmp eax; 
0x0002ce6d: test byte ptr [esi], bl; aas; test bh, dh; call dword ptr [ebp + 3]; 
0x000ca52f: test byte ptr [esp + ebp*8], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00046b71: test byte ptr [esp + ebx*4 - 0x77000000], cl; xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x0008df96: test byte ptr [esp + ebx*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000e7c45: test byte ptr [esp + ecx*2], ah; or byte ptr [eax], al; add byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0019a17a: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x940b; 
0x0004cfc7: test byte ptr [esp + ecx*4], ah; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000d1617: test byte ptr [esp + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xa165; 
0x00145a9d: test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d8beb: test byte ptr [esp + esi*2], ah; add al, 0; add byte ptr [ebx + 0x24448901], cl; sub byte ptr [ebp - 0x6ba6179], cl; call dword ptr [eax + 0x53]; 
0x000ca797: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; inc esp; and al, 0x5c; call eax; 
0x00090eae: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00151304: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x000f1991: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x17fbdbbc], cl; nop; jns 0xf199e; call dword ptr [eax - 1]; 
0x00102bbd: test byte ptr [esp], ah; add dword ptr [eax], eax; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x00187724: test ch, 0x40; jne 0x1876f0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00043b7f: test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001702c6: test ch, al; add byte ptr [eax], al; add byte ptr [ebx - 0x1337a], cl; jmp dword ptr [ebp - 0x39]; 
0x00193f98: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0005d040: test ch, bl; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x5ef63], cl; dec dword ptr [ebx - 0x5db73]; inc dword ptr [ecx]; ret; 
0x0011d388: test ch, ch; or al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; jb 0x11d3e5; stc; call dword ptr [eax + 0x57]; 
0x000a59ce: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00124c37: test ch, dl; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x8389; 
0x0004ddc1: test ch, dl; and al, byte ptr [eax]; add byte ptr [eax - 0x363743], al; jmp dword ptr [ebp + 0xf]; 
0x0018767b: test cl, 0x40; jne 0x1876f0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00092453: test cl, 0x40; jne 0x92478; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0011d4df: test cl, ah; or eax, 0x838d0000; push ebx; push esp; stc; call dword ptr [edx + 0x52]; 
0x0011d1a2: test cl, bh; add eax, 0xec830000; or byte ptr [ebp - 0x6b2997d], cl; call dword ptr [eax + 0x57]; 
0x0009193b: test cl, bh; call dword ptr [eax + 0x68]; 
0x0009194e: test cl, bh; call dword ptr [eax - 0x18]; 
0x0009147c: test cl, bh; call dword ptr [eax - 0x73]; 
0x0009388f: test cl, bh; call dword ptr [ebp + 0x51]; 
0x000b2872: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00077ab2: test cl, cl; add byte ptr [eax], al; add byte ptr [ebp + 0x4889044a], cl; adc byte ptr [ecx - 0x9ec74ce], cl; ret 0x7402; 
0x0003e351: test cl, cl; cmove eax, edx; add esp, 4; pop ebx; pop esi; ret; 
0x0010385b: test cl, cl; jne 0x10383e; xor eax, eax; pop ebx; ret; 
0x00105fbb: test cl, cl; jne 0x105f9e; xor eax, eax; pop ebx; ret; 
0x000a0a92: test cl, cl; jne 0xa0a88; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x000df5db: test cl, cl; jne 0xdf5be; xor eax, eax; pop ebx; ret; 
0x000e1c7b: test cl, cl; jne 0xe1c5e; xor eax, eax; pop ebx; ret; 
0x000f6b2b: test cl, cl; jne 0xf6b0e; xor eax, eax; pop ebx; ret; 
0x000f76eb: test cl, cl; jne 0xf76ce; xor eax, eax; pop ebx; ret; 
0x00191f35: test dh, 0x20; jne 0x191f80; test dh, 0x40; jne 0x191f84; add eax, 0xf; ret; 
0x00191f3a: test dh, 0x40; jne 0x191f84; add eax, 0xf; ret; 
0x00192187: test dh, 0x40; jne 0x192360; lea eax, [edi + 0xf]; pop edi; ret; 
0x00193d42: test dh, 0x40; jne 0x1940d1; add eax, 0xf; pop edi; ret; 
0x00194849: test dh, 0xf; jne 0x1948b0; lea eax, [ecx + 0xc]; ret; 
0x00191f1c: test dh, 2; jne 0x191f70; test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x00191f21: test dh, 4; jne 0x191f74; add eax, 0xb; ret; 
0x001921cd: test dh, 4; jne 0x192360; lea eax, [edi + 0xb]; pop edi; ret; 
0x00193d19: test dh, 4; jne 0x1940bd; add eax, 0xb; pop edi; ret; 
0x0005d0e5: test dh, ah; ret 0xffff; 
0x00193fde: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00197097: test dh, bl; add al, 0; add byte ptr [ebx - 0x7ac3dbbc], cl; ror byte ptr [edi], 0x84; ret; 
0x0011d531: test dh, dh; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x00194765: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0009856d: test dh, dl; add dword ptr [eax], eax; add byte ptr [ebx - 0x16379], cl; jmp dword ptr [ebp - 0x75]; 
0x00191ef5: test dl, 0x20; jne 0x191f60; test dl, 0x40; jne 0x191f64; add eax, 7; ret; 
0x00191efa: test dl, 0x40; jne 0x191f64; add eax, 7; ret; 
0x001920e4: test dl, 0x40; jne 0x192360; lea eax, [edi + 7]; pop edi; ret; 
0x00193cf2: test dl, 0x40; jne 0x1940a9; add eax, 7; pop edi; ret; 
0x00194772: test dl, 0xf; jne 0x1948b0; lea eax, [ecx + 4]; ret; 
0x00191ed6: test dl, 2; jne 0x191f50; test dl, 4; jne 0x191f54; add eax, 3; ret; 
0x00191edb: test dl, 4; jne 0x191f54; add eax, 3; ret; 
0x0019212a: test dl, 4; jne 0x192360; lea eax, [edi + 3]; pop edi; ret; 
0x00193ccc: test dl, 4; jne 0x194095; add eax, 3; pop edi; ret; 
0x0014dc8e: test dl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf00220], al; ret; 
0x00028612: test dl, bl; add byte ptr [eax], al; add byte ptr [ebx - 0x76dfdb8c], cl; ret 0x542b; 
0x0010cb91: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x67cd7bb], cl; add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0004f1fd: test dl, dh; idiv bh; inc dword ptr [ebx - 0x41f0fe18]; adc byte ptr [ebx - 0x362743], al; call dword ptr [eax]; 
0x0005b33e: test dl, dl; adc al, 0; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x000c8c05: test dl, dl; je 0xc8c20; mov cl, dl; and cl, 0xf; je 0xc8c30; ret; 
0x00034d48: test dl, dl; jne 0x34d29; ret; 
0x0009d7f2: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00024798: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0014da70: test dword ptr [0x44ec8100], ecx; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000a5047: test dword ptr [0x5bfffffe], edx; ret; 
0x000a4f1f: test dword ptr [0x5bffffff], edi; ret; 
0x000aab8e: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000faec6: test dword ptr [0x83fffffe], ecx; in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; adc byte ptr [edx], 0x49; stc; call dword ptr [eax + 0x56]; 
0x000a97b6: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a52d6: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a52b6: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x00077249: test dword ptr [eax + 0x29ffffe3], esp; ret 0xf989; 
0x0005edc2: test dword ptr [eax + 0x2bfffffb], ebp; test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x0006a8c1: test dword ptr [eax + 0x39fffff7], eax; ret; 
0x0005edc8: test dword ptr [eax + 0x39fffffb], edi; ret 0x1875; 
0x000ccde7: test dword ptr [eax + 0x45], eax; stc; call dword ptr [eax - 0x18]; 
0x000a4cbb: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000a4bc3: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000b2e6b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00047a6f: test dword ptr [eax + 0x6a000017], eax; add byte ptr [eax + 0x6a], dl; add ebp, eax; ret 0xfefa; 
0x000596ac: test dword ptr [eax + 0x6afffffb], edi; add dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [eax - 0x18], dl; ret 0x401; 
0x0008250c: test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0014b58e: test dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; out 0xf3, eax; bnd jmp dword ptr [esi - 0x70]; 
0x000ac17b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0018f0e1: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000aab6b: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0018e9e1: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x0019220f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1922e0; lea eax, [edi + 7]; pop edi; ret; 
0x000c8987: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x00108fff: test dword ptr [eax + eax - 0x3b7d0000], ebp; and al, 0x5b; pop esi; ret; 
0x000d62a7: test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0018e2d7: test dword ptr [eax + eax - 0x67d0000], esp; add byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00089e2b: test dword ptr [eax + eax*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0013dfa0: test dword ptr [eax + ebp*4], esi; stc; call dword ptr [eax - 0x73]; 
0x000aabef: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000aac37: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014b302: test dword ptr [eax - 0x53], edx; stc; call dword ptr [eax - 0x73]; 
0x001938bb: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x193970; lea eax, [edx + 7]; ret; 
0x000df2d4: test dword ptr [eax - 0x66], eax; stc; call dword ptr [eax - 0x73]; 
0x000df2f0: test dword ptr [eax - 0x66], ebx; stc; call dword ptr [eax - 0x73]; 
0x001938c3: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x001926d3: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x0005b344: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e2ff: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000ff2f0: test dword ptr [eax - 0x76000005], edx; ret 0x8589; 
0x0004eb49: test dword ptr [eax - 0x76000037], edi; ret 0xe283; 
0x001930bb: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x0004fa63: test dword ptr [eax - 0x7a000037], esi; ror byte ptr [edi], 0x8f; shl edi, 0xff; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x000ff069: test dword ptr [eax - 0x7c000005], ecx; in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000f5d4f: test dword ptr [eax - 0x7c000005], ecx; ret 0x8301; 
0x0005cce4: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000e1031: test dword ptr [eax - 0x7c000005], edx; in al, dx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00193493: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x000d617b: test dword ptr [eax - 0x7d000000], edx; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0015abff: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0018fea3: test dword ptr [eax - 0x7d000000], esi; ret 0x6610; 
0x000718f5: test dword ptr [eax], 0xec830000; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x000a4c5b: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00094388: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000c16a0: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x1a8b; 
0x000c1da5: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x28b; 
0x000c1c58: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3a8b; 
0x000c1a34: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x001094db: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006f387: test dword ptr [eax], eax; add byte ptr [eax], al; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x0002d95f: test dword ptr [eax], eax; add eax, 0x748dd375; add dh, dh; ret 0x7503; 
0x000d07a7: test dword ptr [eax], ebp; loope 0xd07aa; call dword ptr [edi + 0x57]; 
0x000844dc: test dword ptr [eax], ebp; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; call dword ptr gs:[0x10]; 
0x0006b871: test dword ptr [eax], ebx; idiv edi; call dword ptr [ebx - 0x18]; 
0x0006a7a2: test dword ptr [eax], ebx; idiv edi; dec dword ptr [ecx - 0x8d743]; jmp dword ptr [ebp - 0x5f]; 
0x000ac1c3: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e10ca: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x52]; 
0x000e3742: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x47363], cl; call dword ptr [esi + 0x52]; 
0x0013d255: test dword ptr [eax], ecx; test al, 0xf9; call dword ptr [eax - 0x73]; 
0x0006b43f: test dword ptr [eax], edi; idiv edi; call dword ptr [eax]; 
0x00066708: test dword ptr [eax], edi; idiv edi; call dword ptr [esi - 0x18]; 
0x0006bc5e: test dword ptr [eax], edi; idiv edi; dec dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0006bff3: test dword ptr [eax], edi; idiv edi; dec dword ptr [edx]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x00151621: test dword ptr [eax], edx; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0005edfa: test dword ptr [eax], esp; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000cdb49: test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x0007d733: test dword ptr [ebp + 0x3e], esp; stc; call dword ptr [eax - 0x75]; 
0x001904ce: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x0018f18c: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x0018efac: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x0018ea7c: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000ac226: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x0013653c: test dword ptr [ebp + 0x6afff95a], ebp; add eax, 0xb4858d50; jb 0x136542; call dword ptr [eax - 0x18]; 
0x0018edd6: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000aaf1f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000aaeef: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000a9756: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x001920c6: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x00193236: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00193466: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x00192726: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00025e1e: test dword ptr [ebp - 0x75000000], edx; je 0x25e4a; cmp al, 0x8d; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x0005af89: test dword ptr [ebp - 0x76000005], ebx; dec byte ptr [ebx - 0x59f43]; dec dword ptr [ecx - 0x59f7b]; dec dword ptr [ebx - 0x5a77b]; dec dword ptr [ecx - 0x60763]; jmp dword ptr [ebp - 0x75]; 
0x00084da6: test dword ptr [ebp - 0x77000000], esi; ret 0xca83; 
0x001931e6: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0019346e: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0011fb4d: test dword ptr [ebp - 0x7d000000], ecx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0011fc4d: test dword ptr [ebp - 0x7d000000], edx; les eax, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; ret; 
0x001934f6: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x0005e5bc: test dword ptr [ebp - 1], esp; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0011e885: test dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x001926ae: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019323e: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001364cc: test dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax + 0x53]; 
0x00096c92: test dword ptr [ebx + 0x39000001], ebx; ret; 
0x000b3b3c: test dword ptr [ebx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000ac438: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x0009a31c: test dword ptr [ebx + 0x6afff943], esi; add eax, 0xb4858d50; jb 0x9a322; call dword ptr [eax - 0x18]; 
0x000c88e0: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001920e8: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0018eba8: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000ac468: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aab50: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00080ed9: test dword ptr [ebx + eax], eax; add byte ptr [ebp + 0x52840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x736d], cl; jmp dword ptr [ebp - 0x75]; 
0x000a4b3f: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00141e44: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00141e3b: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000e36a9: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001739e9: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; xor cl, 0x47; stc; call dword ptr [eax - 0x18]; ret; 
0x00124973: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000e17e6: test dword ptr [ebx + edi*8 - 1], ebp; dec dword ptr [ecx]; ret 0x840f; 
0x00124931: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x00138a35: test dword ptr [ebx + edi*8 - 1], esi; call dword ptr [edi + 0x52]; 
0x000e0667: test dword ptr [ebx + edi*8 - 1], esi; inc dword ptr [eax]; add byte ptr [eax], al; add cl, ch; ret 3; 
0x00030172: test dword ptr [ebx + esi*2], edi; stc; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x00162a68: test dword ptr [ebx + esi*4], ebp; stc; call dword ptr [eax - 0x73]; 
0x000ab5f7: test dword ptr [ebx + esi*8 - 1], esi; jmp dword ptr [esi + 0xf]; 
0x001234eb: test dword ptr [ebx - 0x44ebdbb4], 0xd; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00055aa1: test dword ptr [ebx - 0x7c000009], ebp; ret; 
0x00193d1d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x0013b46e: test dword ptr [ebx - 0x7d000000], ebx; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00092f87: test dword ptr [ebx - 0x7d000000], edx; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016bc28: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00162afe: test dword ptr [ebx - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a9028: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00193cbe: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0011a9eb: test dword ptr [ebx - 7], ecx; call dword ptr [eax - 1]; 
0x00198ad9: test dword ptr [ebx], 0xf1c247c; xchg ebp, eax; ret 0xd789; 
0x0018efad: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000ac2d8: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00056eb8: test dword ptr [ebx], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x48903e8], al; and al, 0xf6; ret 0xf20; 
0x000a5190: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000fd6f8: test dword ptr [ebx], ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x70373], cl; jmp dword ptr [ebp - 0x7d]; 
0x000a51b0: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00058d21: test dword ptr [ebx], ecx; xor bh, cl; call dword ptr [esi - 0x77]; 
0x000ac1a0: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007daa8: test dword ptr [ebx], edi; stc; call dword ptr [eax - 0x18]; 
0x00058ade: test dword ptr [ecx + 0x32], eax; stc; call dword ptr [ecx + 0x50]; 
0x000defca: test dword ptr [ecx + 0x47], eax; stc; call dword ptr [eax - 0x18]; 
0x0018ecb0: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000a50bb: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000a4fc3: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000c89a2: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000aac12: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x00190442: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0019318a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000aad42: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac262: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c8927: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000ec937: test dword ptr [ecx + eax], ebx; add byte ptr [ebp - 0x74ffd98c], cl; inc esi; add al, 0x83; ret; 
0x000c88f7: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000fc71a: test dword ptr [ecx + edi*8 - 1], eax; call dword ptr [eax - 0x73]; 
0x000fcf15: test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x73]; 
0x000fc4d2: test dword ptr [ecx + edi*8 - 1], ebx; call dword ptr [eax - 0x75]; 
0x000fd6e2: test dword ptr [ecx + edi*8 - 1], ebx; inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x6fb7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00086ada: test dword ptr [ecx - 0x72000005], edi; lea ebp, [edx + eax]; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000be614: test dword ptr [ecx - 0x74ffffea], eax; xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x0018cdc0: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x00155b25: test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001238a8: test dword ptr [ecx - 0x7d000000], edx; les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00116052: test dword ptr [ecx - 0x7d000000], esp; in al, dx; or al, 0x89; ret; 
0x00193dda: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x0013348e: test dword ptr [ecx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00133622: test dword ptr [ecx - 7], ebx; call dword ptr [eax - 0x73]; 
0x00102e0c: test dword ptr [ecx], ebp; add al, 0; add dh, dh; ret 0xf80; 
0x000708ca: test dword ptr [ecx], ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7472f314], al; pushal; out 0xff, eax; call dword ptr [ecx + 0x52]; 
0x000ac3c2: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac2aa: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00058923: test dword ptr [edi + 0x32], ebx; stc; call dword ptr [eax + 0x56]; 
0x00058cdc: test dword ptr [edi + 0x32], ecx; stc; call dword ptr [ecx + 0x50]; 
0x000df300: test dword ptr [edi + 0x47], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a4fa5: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000c896c: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000ac64c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000ac61c: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000ac33c: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000ac244: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000ac67c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac36c: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aad1f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x0018ec25: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000d5459: test dword ptr [edi + edi*8 - 1], eax; call dword ptr [ebx - 1]; 
0x000d53f2: test dword ptr [edi + edi*8 - 1], eax; call dword ptr [esi - 1]; 
0x00125545: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x100d2f80]; call dword ptr [eax + 0x6a]; 
0x0013eb29: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0xa363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x00133dca: test dword ptr [edi + edi*8 - 1], eax; jmp dword ptr [ebp - 0x39]; 
0x00119474: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [eax - 0x18]; 
0x0013bca3: test dword ptr [edi + edi*8 - 1], ebp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x0013b9e9: test dword ptr [edi + edi*8 - 1], ebp; jmp dword ptr [esi - 0x77]; 
0x00166f0e: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x001647f6: test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [ebx + 0x55891445]; test byte ptr [ecx + 0x458b9045], cl; sbb byte ptr [ecx - 0x837b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0011959b: test dword ptr [edi + edi*8 - 1], ebx; jmp dword ptr [ebp - 0x77]; 
0x000defb4: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ebp - 0x665937b]; call dword ptr [eax - 0x73]; 
0x0005ad16: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ebx - 0x45773]; inc dword ptr [ebp - 0x74878a37]; test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00127b0a: test dword ptr [edi + edi*8 - 1], ecx; jmp dword ptr [ebp - 0x39]; 
0x000544a7: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x50]; 
0x001194cc: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax - 0x73]; 
0x00053c6d: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [edx - 0x73]; 
0x00164808: test dword ptr [edi + edi*8 - 1], edi; jmp dword ptr [ebp - 0x5f]; 
0x0013f007: test dword ptr [edi + edi*8 - 1], edi; push dword ptr [ecx]; fisttp dword ptr [ebx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x0013e604: test dword ptr [edi + edi*8 - 1], edx; call dword ptr [eax + 0x6a]; 
0x00166ede: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000de3c7: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15537b]; inc dword ptr [ebx - 0x7f72f714]; add al, 0x47; stc; call dword ptr [eax - 1]; 
0x00053a86: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ecx - 0x7a0fd628]; test byte ptr [edi], 0x49; ret; 
0x001193f1: test dword ptr [edi + edi*8 - 1], edx; jmp dword ptr [ebp - 0x5f]; 
0x0015c834: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax + 0x56]; 
0x001194b0: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax + 0x6a]; 
0x000decf1: test dword ptr [edi + edi*8 - 1], esi; call dword ptr [eax]; 
0x0013ed4d: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x5f]; 
0x0015c98b: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x0013e7e5: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [edi]; inc esp; ret; 
0x00067c4c: test dword ptr [edi + esi*8 - 0x137c0001], ecx; or al, 0x8d; and al, 0x78; stc; call dword ptr [eax - 0x18]; 
0x000659aa: test dword ptr [edi + esi*8 - 0x7cac0001], ecx; ret; 
0x0006a81a: test dword ptr [edi + esi*8 - 1], ebp; call dword ptr [ebx]; 
0x00066ec2: test dword ptr [edi + esi*8 - 1], esi; jmp dword ptr [edx]; 
0x0005cab9: test dword ptr [edi - 0x39fffff0], ebp; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000d641c: test dword ptr [edi - 0x48000000], edi; or eax, dword ptr [ecx]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x74]; mov edx, edi; call dword ptr gs:[0x10]; 
0x00058b60: test dword ptr [edi - 0x760006d2], eax; ret; 
0x00082c74: test dword ptr [edi - 0x77000000], eax; ret 0xca83; 
0x0018638c: test dword ptr [edi - 0x7cffffed], ebp; stc; add byte ptr [edi], cl; test byte ptr [eax - 0x7cffffed], dh; ret 0x8308; 
0x001934cc: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x000d5fd9: test dword ptr [edi - 0x7d000000], edx; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016216a: test dword ptr [edi - 0x7d000000], esp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000a911c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x00193e04: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x00191704: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0002a17d: test dword ptr [edi], 0x30182; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x00028d95: test dword ptr [edi], 0x31382; add byte ptr [ebx - 0x7cfbdba4], cl; ret; 
0x0017b4a1: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x0019a93d: test dword ptr [edi], 0xbd0f0000; ret 0xf083; 
0x0008ad02: test dword ptr [edi], 0xfffe3084; inc dword ptr [ebx - 0x7a72f314]; jo 0x8ad8e; stc; call dword ptr [eax - 0x18]; 
0x0008b517: test dword ptr [edi], 0xfffef284; inc dword ptr [ebx - 0x7872f314]; jo 0x8b5a3; stc; call dword ptr [eax - 0x18]; 
0x00082e70: test dword ptr [edi], 0xfffef584; inc dword ptr [ebx - 0x7872f314]; jo 0x82efc; stc; call dword ptr [eax - 0x18]; 
0x0008bc43: test dword ptr [edi], 0xffff2084; inc dword ptr [ebx - 0x7872f314]; jo 0x8bccf; stc; call dword ptr [eax - 0x18]; 
0x0008be53: test dword ptr [edi], 0xffff2584; inc dword ptr [ebx - 0x7872f314]; jo 0x8bedf; stc; call dword ptr [eax - 0x18]; 
0x00090dcc: test dword ptr [edi], 0xffff6d84; inc dword ptr [ebx - 0x7a72f314]; jo 0x90e58; stc; call dword ptr [eax - 0x18]; 
0x000ac6ac: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00058cc1: test dword ptr [edi], ebp; xor bh, cl; call dword ptr [eax + 0x56]; 
0x0007c0d3: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b80ec], al; pop edi; ret; 
0x000c890c: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000b5331: test dword ptr [edi], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0015c557: test dword ptr [edi], edi; in eax, dx; inc dword ptr [ebx - 0x72afef3c]; xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x000ac39c: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a8f94: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0011a427: test dword ptr [edx + 0x4b], edi; stc; call dword ptr [eax - 1]; 
0x0013dfb0: test dword ptr [edx + 0x5d], edx; stc; call dword ptr [eax - 0x18]; 
0x000a48d1: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000aae29: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000aadf9: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000aacf9: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000aab09: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x0013647e: test dword ptr [edx + 0x6afff95a], edi; add eax, 0xb4858d50; jb 0x136484; call dword ptr [eax - 0x18]; 
0x00099610: test dword ptr [edx + 0x79], ebx; clc; call ptr [ebx + 0x5e]; pop edi; ret; 
0x001933a9: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x1935d0; mov eax, ecx; ret; 
0x000a4c09: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000aaf49: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a4be7: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000a4c37: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000de370: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax + 0x53]; 
0x000de3cd: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebp - 0x6b8fb80], cl; call dword ptr [eax - 1]; 
0x000de511: test dword ptr [edx + ebp*8 - 0x137c0001], ebp; or byte ptr [ebx - 0x73], dl; xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000defba: test dword ptr [edx + ebx*4 - 7], ebp; call dword ptr [eax - 0x73]; 
0x0005d76d: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp + 0x31]; 
0x0005cabf: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0005ce9f: test dword ptr [edx + edi*8 - 1], ebx; inc dword ptr [eax - 0x7af0ffc1]; ret; 
0x0005a212: test dword ptr [edx + edi*8 - 1], ebx; jmp dword ptr [ebp - 0x77]; 
0x000597f2: test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0005cfbb: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13348]; dec dword ptr [ebx - 0x5a37b]; jmp dword ptr [ebp - 0x77]; 
0x00059b18: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00059391: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x00058f7c: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ecx - 0x56f4b]; dec dword ptr [ebx - 0x7780]; dec dword ptr [ecx - 0x5737b]; dec dword ptr [ebp - 0x5737b]; call dword ptr [eax - 0x77]; 
0x0005f3ca: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ecx - 0x5bf43]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x00058913: test dword ptr [edx + esi*2 - 0x17af0007], esi; ret 0xfd7b; 
0x00198787: test dword ptr [edx + esi*8 - 1], edx; call ebx; 
0x00058d41: test dword ptr [edx + esi], esp; stc; call dword ptr [esi - 0x77]; 
0x00069b24: test dword ptr [edx - 0x16000003], ebp; dec edi; jecxz 0x69b2c; jmp dword ptr [esi - 0x70]; 
0x00195c11: test dword ptr [edx - 0x76fffffe], edx; ret; 
0x0008bbf1: test dword ptr [edx - 0x77000000], edx; ret 0xf283; 
0x0008be01: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000ee849: test dword ptr [edx - 0x7c000006], esi; ret; 
0x000f0058: test dword ptr [edx - 0x7cfffff9], ebp; rol byte ptr [ecx], 0x83; ret 0x3b20; 
0x00048c39: test dword ptr [edx - 0x7cfffffc], esp; ret; 
0x00193ced: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x0007a3a0: test dword ptr [edx - 6], ebp; jmp dword ptr [esi - 0x70]; 
0x000aafa9: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x000262f9: test dword ptr [edx], ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x000c6cf5: test dword ptr [edx], ebx; add eax, dword ptr [eax]; add byte ptr [ebx - 0x36477b], al; jmp eax; 
0x000a4841: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000aac99: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000aaf79: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b3a31: test dword ptr [esi + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000a4ba5: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x000a47fd: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000aac55: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000aab2d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac285: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ac55f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0007da95: test dword ptr [esi + edi*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0002e2b8: test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx + 0x56]; 
0x0002e972: test dword ptr [esi + edi*8 - 1], eax; call dword ptr [ebx - 0x75]; 
0x000dfaf1: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [edi - 0x18]; 
0x000dffd3: test dword ptr [esi + edi*8 - 1], ebp; call dword ptr [esi - 0x18]; 
0x00103d71: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [edi - 0x18]; 
0x00104243: test dword ptr [esi + edi*8 - 1], ebx; call dword ptr [esi - 0x18]; 
0x0014a3dc: test dword ptr [esi + edi*8 - 1], ebx; dec dword ptr [ebx - 0x72f3dbac]; sbb byte ptr [eax - 0x54], 0xf9; call dword ptr [eax - 0x73]; 
0x000dfeda: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax + 0x56]; 
0x000e00d8: test dword ptr [esi + edi*8 - 1], edi; call dword ptr [eax - 0x75]; 
0x00052242: test dword ptr [esi + edi*8 - 1], edi; dec dword ptr [ebx - 0x49f07fbb]; push eax; or al, 0xf6; ret 0xf40; 
0x00104323: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [edi - 1]; 
0x0010434f: test dword ptr [esi + edi*8 - 1], edx; call dword ptr [esi - 1]; 
0x000e00b3: test dword ptr [esi + edi*8 - 1], esp; call dword ptr [edi - 1]; 
0x000e00df: test dword ptr [esi + edi*8 - 1], esp; call dword ptr [esi - 1]; 
0x0016e16f: test dword ptr [esi - 0x470014cf], ecx; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x001920b5: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001926fd: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x000fb738: test dword ptr [esi - 0x74ffffe8], edx; push esi; add al, 0xf7; ret 0xfffd; 
0x000257a3: test dword ptr [esi - 0x75000000], edx; jl 0x257cf; sub byte ptr [ebp - 0x6955f79], cl; call dword ptr [eax - 0x73]; 
0x00193d46: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x00193cf6: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x00114b11: test dword ptr [esi - 0x7d000000], ebx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000a9426: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000a8f1d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000530bd: test dword ptr [esi - 0x9fffffc], ebp; ret 0xf50; 
0x00193ce4: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x00193e0d: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x0019476d: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x000c79f7: test dword ptr [esi - 0xa], edi; dec dword ptr [ebx - 0x363f73]; dec dword ptr [ebp - 0x689bb7f]; call dword ptr [eax - 0x73]; 
0x0018f395: test dword ptr [esi], eax; inc ecx; bnd call dword ptr [ebx - 0x18]; 
0x0019211d: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000a4b1d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00058bd1: test dword ptr [esi], edx; xor bh, cl; call dword ptr [ebx + 0x50]; 
0x000aac75: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00089e97: test dword ptr [esp + edi*8 - 1], edx; jmp dword ptr [ebp - 0x39]; 
0x001029ad: test dx, 0xff00; jne 0x1029bd; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001564f7: test eax, 0x560cec83; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0011d0ec: test eax, 0x81000513; ret; 
0x000d72ec: test eax, 0x81000971; ret; 
0x000809ec: test eax, 0x81000eda; ret; 
0x0007e9ec: test eax, 0x81000efa; ret; 
0x000717ec: test eax, 0x81000fcc; ret; 
0x0011d302: test eax, 0x83000009; in al, dx; or byte ptr [ebp - 0x6afb77d], cl; call dword ptr [eax + 0x57]; 
0x0018cdc1: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x000eea93: test eax, 0x89ffff9c; clc; pop ebx; pop esi; pop edi; ret; 
0x000d9173: test eax, 0x8b00057e; jl 0xd919e; or byte ptr [ebp - 0x6667b79], cl; call dword ptr [eax - 0x73]; 
0x000411d3: test eax, 0x8bfffee6; jl 0x411fe; sub al, 0x8d; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0002f909: test eax, 0xc4830006; or al, 0x89; ret; 
0x001557fe: test eax, 0xc483ffec; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000dc48e: test eax, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0011c99b: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0011cd5c: test eax, eax; cmove eax, edx; ret; 
0x000832df: test eax, eax; cmovne eax, edx; ret; 
0x00114d73: test eax, eax; cmovns eax, edx; ret; 
0x00129f3c: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00115f98: test eax, eax; je 0x115f9d; ret; 
0x00118564: test eax, eax; je 0x11856a; mov dword ptr [eax], edx; ret; 
0x0011bcdc: test eax, eax; je 0x11bce4; test edx, edx; jne 0x11bce8; ret; 
0x0011bd00: test eax, eax; je 0x11bd08; test edx, edx; jne 0x11bd10; ret; 
0x0011c276: test eax, eax; je 0x11c2c0; call eax; 
0x0011c3b8: test eax, eax; je 0x11c458; call eax; 
0x0011c97c: test eax, eax; je 0x11c988; add esp, 0xc; ret; 
0x00121064: test eax, eax; je 0x121071; pop esi; pop ebx; jl 0x216d0; ret; 
0x0012d978: test eax, eax; je 0x12d9a0; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0012ff43: test eax, eax; je 0x12ff50; add esp, 8; pop ebx; ret; 
0x00139223: test eax, eax; je 0x139230; sub esp, 0xc; push esi; call eax; 
0x00139583: test eax, eax; je 0x139590; sub esp, 0xc; push esi; call eax; 
0x00149556: test eax, eax; je 0x149560; add esp, 8; pop ebx; ret; 
0x0014af33: test eax, eax; je 0x14af3c; cmp dword ptr [eax + 8], edx; jne 0x14af30; ret; 
0x0015503a: test eax, eax; je 0x155047; sub esp, 0xc; push esi; call eax; 
0x001552c3: test eax, eax; je 0x1553ad; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x00155508: test eax, eax; je 0x155515; sub esp, 0xc; push esi; call eax; 
0x001554eb: test eax, eax; je 0x155550; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00155638: test eax, eax; je 0x15564f; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x001557e5: test eax, eax; je 0x1557f6; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00155829: test eax, eax; je 0x155838; add esp, 8; pop ebx; ret; 
0x0015604c: test eax, eax; je 0x155fdd; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x001564f4: test eax, eax; je 0x1564a1; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00156517: test eax, eax; je 0x156524; sub esp, 0xc; push esi; call eax; 
0x001567df: test eax, eax; je 0x15666a; sub esp, 0xc; push edi; call eax; 
0x001568c0: test eax, eax; je 0x1568cd; sub esp, 0xc; push edi; call eax; 
0x001571a2: test eax, eax; je 0x1571af; sub esp, 0xc; push edi; call eax; 
0x001573f6: test eax, eax; je 0x157418; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x001575d6: test eax, eax; je 0x1576db; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0015793b: test eax, eax; je 0x157970; mov eax, ecx; pop ebx; ret; 
0x001579af: test eax, eax; je 0x157a00; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0015a239: test eax, eax; je 0x15a24c; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x0015ac1d: test eax, eax; je 0x15ac2a; sub esp, 0xc; push esi; call eax; 
0x0015ae4a: test eax, eax; je 0x15ae5a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0015c166: test eax, eax; je 0x15c173; sub esp, 0xc; push esi; call eax; 
0x0015c322: test eax, eax; je 0x15c32f; sub esp, 0xc; push edi; call eax; 
0x0015d6cb: test eax, eax; je 0x15d6d8; sub esp, 0xc; push ebp; call eax; 
0x0015da96: test eax, eax; je 0x15daa6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0015dc87: test eax, eax; je 0x15e27f; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push ebx; call dword ptr [eax + 0x10]; 
0x0015e4b9: test eax, eax; je 0x15e520; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0015f8bd: test eax, eax; je 0x15f8d0; add esp, 4; pop ebx; pop esi; ret; 
0x0016083a: test eax, eax; je 0x16084a; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00160f53: test eax, eax; je 0x160f63; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00160fd5: test eax, eax; je 0x161010; sub esp, 0xc; mov eax, dword ptr [ebp + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00162cdb: test eax, eax; je 0x162d10; mov eax, ecx; pop ebx; ret; 
0x00162d4b: test eax, eax; je 0x162d80; mov eax, ecx; pop ebx; ret; 
0x0002ddfb: test eax, eax; je 0x2de08; sub esp, 0xc; push esi; call eax; 
0x00037ec3: test eax, eax; je 0x37ed7; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0004869c: test eax, eax; je 0x486b0; add esp, 4; pop ebx; pop esi; ret; 
0x000710b8: test eax, eax; je 0x710d0; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007a9ec: test eax, eax; je 0x7aa20; mov eax, edx; pop ebx; pop esi; ret; 
0x0007ae90: test eax, eax; je 0x7aec8; mov eax, edx; pop ebx; ret; 
0x0007bb04: test eax, eax; je 0x7bb10; add esp, 4; pop ebx; pop esi; ret; 
0x0007f46a: test eax, eax; je 0x7f482; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008b34f: test eax, eax; je 0x8b365; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000996e0: test eax, eax; je 0x99712; pop ebx; pop esi; pop edi; ret; 
0x000b31d6: test eax, eax; je 0xb31f0; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000d5fb5: test eax, eax; je 0xd5fe8; sub esp, 8; push edi; push ebx; call eax; 
0x000d8137: test eax, eax; je 0xd8150; sub esp, 0xc; push esi; call eax; 
0x000dd15d: test eax, eax; je 0xdd163; call eax; 
0x0011ed7b: test eax, eax; jl 0x216d0; je 0x11ed86; ret; 
0x0010922a: test eax, eax; jne 0x109250; mov ebx, dword ptr [esp + 0x20]; mov eax, 6; call dword ptr gs:[0x10]; 
0x001093ea: test eax, eax; jne 0x109410; mov ebx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x24]; mov eax, 8; call dword ptr gs:[0x10]; 
0x0011313e: test eax, eax; jne 0x113150; add esp, 4; pop ebx; pop esi; ret; 
0x0011699a: test eax, eax; jne 0x1169c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x76; call dword ptr gs:[0x10]; 
0x00116a6a: test eax, eax; jne 0x116a90; mov ebx, dword ptr [esp + 0x20]; mov eax, 0x94; call dword ptr gs:[0x10]; 
0x0011774f: test eax, eax; jne 0x11770c; add esp, 0xc; ret; 
0x0011b2ed: test eax, eax; jne 0x11b31c; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0011c4d8: test eax, eax; jne 0x11c510; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012d544: test eax, eax; jne 0x12d534; add esp, 4; pop ebx; pop esi; ret; 
0x0012e93b: test eax, eax; jne 0x12e950; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x12e958; ret; 
0x00139564: test eax, eax; jne 0x139550; add esp, 4; pop ebx; pop esi; ret; 
0x00144d9f: test eax, eax; jne 0x144db0; pop ebx; pop esi; pop edi; ret; 
0x00144de5: test eax, eax; jne 0x144dd0; pop ebx; pop esi; pop edi; ret; 
0x0014a59e: test eax, eax; jne 0x14a5b0; add esp, 4; pop ebx; pop esi; ret; 
0x00155a7f: test eax, eax; jne 0x155aa0; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00155d47: test eax, eax; jne 0x155d77; sub esp, 0xc; mov eax, dword ptr [edx + 4]; push edx; call dword ptr [eax + 0x10]; 
0x00156a4b: test eax, eax; jne 0x156a58; add esp, 4; pop ebx; pop esi; ret; 
0x0016078f: test eax, eax; jne 0x160778; add esp, 8; pop ebx; ret; 
0x0016d0c8: test eax, eax; jne 0x16d0d0; pop ebx; pop esi; pop edi; ret; 
0x00192ca0: test eax, eax; jne 0x192d70; xor eax, eax; pop edi; ret; 
0x001935f8: test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x00193148: test eax, eax; jne 0x193380; xor eax, eax; ret; 
0x00193187: test eax, eax; jne 0x193400; xor eax, eax; ret; 
0x000374c8: test eax, eax; jne 0x374d8; add esp, 8; pop ebx; ret; 
0x00037757: test eax, eax; jne 0x37760; add esp, 8; pop ebx; ret; 
0x0003780a: test eax, eax; jne 0x37830; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb3; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0007f3ca: test eax, eax; jne 0x7f3c0; ret; 
0x00080018: test eax, eax; jne 0x80010; ret; 
0x000904fa: test eax, eax; jne 0x904f0; pop ebx; ret; 
0x00099593: test eax, eax; jne 0x99588; xor eax, eax; ret; 
0x00099651: test eax, eax; jne 0x99648; mov eax, ecx; ret; 
0x000b2c32: test eax, eax; jne 0xb2c90; xor eax, eax; pop edi; ret; 
0x000b2bf8: test eax, eax; jne 0xb2cb0; xor eax, eax; pop edi; ret; 
0x000b2ed8: test eax, eax; jne 0xb2f50; xor eax, eax; ret; 
0x000b2f07: test eax, eax; jne 0xb2f70; xor eax, eax; ret; 
0x000b331f: test eax, eax; jne 0xb3360; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000dc729: test eax, eax; jne 0xdc748; mov eax, 0x1d; call dword ptr gs:[0x10]; 
0x000dc7d7: test eax, eax; jne 0xdc7e0; add esp, 8; pop ebx; ret; 
0x000dcdc2: test eax, eax; jne 0xdcdc9; pop ecx; jmp ecx; 
0x00122b44: test eax, eax; js 0x122b50; add esp, 8; pop ebx; ret; 
0x00140581: test eax, eax; js 0x140096; sub esp, 0xc; push esi; mov edx, dword ptr [esp + 0x20]; call edx; 
0x0016808b: test eax, eax; js 0x168098; add esp, 4; pop ebx; pop esi; ret; 
0x00170983: test eax, eax; js 0x170990; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000789ae: test eax, eax; js 0x789b8; ret; 
0x0008cea3: test eax, eax; js 0x8ceb0; mov dword ptr [edx + 0x3a28], eax; xor eax, eax; ret; 
0x000f6ab7: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00047d03: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0014cd62: test eax, eax; sete al; add esp, 0xc; ret; 
0x001591c4: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x00157465: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x001579ea: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007a5ad: test eax, eax; setne dl; mov eax, edx; ret; 
0x00078051: test eax, ebp; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0016e21a: test eax, ebp; xor bl, ch; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x000a4b83: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000d9965: test eax, ebx; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x00162a6f: test eax, ebx; push edi; stc; call dword ptr [eax + 0x6a]; 
0x000aabb3: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a4c8b: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000cdb42: test eax, edx; cmp eax, 0x8d500000; test dword ptr [eax], esp; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000c3df7: test eax, edx; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000d98b3: test eax, esp; inc ebp; stc; call dword ptr [ecx + 0x50]; 
0x00089f79: test eax, esp; jg 0x89f76; call dword ptr [eax - 0x18]; 
0x00099523: test ebp, ebp; jne 0x99479; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x00137c23: test ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x00027f6b: test ebp, ecx; or dword ptr [eax], eax; add byte ptr [ebx - 0x76e3db8c], cl; ret 0xb60f; 
0x001920ce: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001887bc: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00061f7e: test ebp, edi; fdivp st(7); jmp dword ptr [ebp - 0x77]; 
0x000ac1de: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00047990: test ebp, edx; xor cl, bh; call dword ptr [esi + 0x6a]; 
0x000a8fc6: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000b2e46: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00056e45: test ebx, eax; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x55; or al, 0xf6; ret 0xf40; 
0x00143d2c: test ebx, ebx; jne 0x143cf8; mov eax, 1; pop ebx; ret; 
0x0016e612: test ebx, ebx; jne 0x16e620; add esp, 8; pop ebx; ret; 
0x001704ae: test ebx, ebx; jne 0x1704c0; add esp, 8; pop ebx; ret; 
0x0003a8a5: test ebx, ebx; jne 0x3a870; pop ebx; pop esi; pop edi; ret; 
0x0007db9e: test ebx, ebx; jne 0x7dbb0; add esp, 8; pop ebx; ret; 
0x0009d203: test ebx, ebx; jne 0x9d217; pop ebx; pop esi; pop edi; ret; 
0x00092ee4: test ebx, ebx; jns 0x92eec; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000dd2db: test ebx, ebx; js 0xdd330; mov eax, 0x166; lea ecx, [ebp - 0x6d179]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0004fe65: test ebx, edi; add al, byte ptr [eax]; add byte ptr [ebx - 0x364f7b], al; jmp eax; 
0x000ac308: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012f766: test ebx, esi; jmp dword ptr [esi - 0x70]; 
0x000b375b: test ecx, 0xff0000; je 0xb3764; inc eax; pop edi; ret; 
0x000c8942: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000a8cd2: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000ac5f2: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x00118536: test ecx, ecx; je 0x11853d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0012a8fc: test ecx, ecx; je 0x12a908; xor eax, eax; pop ebx; ret; 
0x0012e941: test ecx, ecx; je 0x12e958; ret; 
0x0008a438: test ecx, ecx; je 0x8a845; mov eax, 0xf0; mov ecx, 8; mov esi, edx; call dword ptr gs:[0x10]; 
0x000b3191: test ecx, ecx; je 0xb31a0; bsf ecx, ecx; add eax, ecx; ret; 
0x00126141: test ecx, ecx; jne 0x126150; mov eax, edx; pop ebx; pop esi; ret; 
0x001261ac: test ecx, ecx; jne 0x1261b8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126397: test ecx, ecx; jne 0x1263a0; mov eax, edx; pop ebx; pop esi; ret; 
0x001269ec: test ecx, ecx; jne 0x1269f8; mov eax, edx; pop ebx; pop esi; ret; 
0x00126a4c: test ecx, ecx; jne 0x126a58; mov eax, edx; pop ebx; pop esi; ret; 
0x00126c37: test ecx, ecx; jne 0x126c40; mov eax, edx; pop ebx; pop esi; ret; 
0x00156bf3: test ecx, ecx; jne 0x156c48; mov dword ptr [eax], 0; pop ebx; ret; 
0x0007834d: test ecx, ecx; jne 0x78360; mov eax, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], eax; cmovne eax, ecx; ret; 
0x000938d1: test ecx, ecx; jne 0x938e0; ret; 
0x00113f2c: test ecx, ecx; js 0x113f38; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000deb78: test ecx, ecx; js 0xdeb80; ret; 
0x00093d7a: test ecx, edi; call dword ptr [eax - 1]; 
0x0005ab9c: test edi, 0xfffa5085; call dword ptr [eax]; 
0x000a8ff4: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00163977: test edi, ebp; add byte ptr [eax], al; add byte ptr [ebp - 0x69ae97d], cl; call dword ptr [ebp + 0x6a]; 
0x00084113: test edi, ebp; add byte ptr [eax], al; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0005f5fc: test edi, ebp; in eax, 0xff; dec dword ptr [ebx - 0x5a77b]; jmp dword ptr [ebp - 0x75]; 
0x000a90ec: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00073a00: test edi, ecx; cli; jmp dword ptr [esi - 0x70]; 
0x000dc3b0: test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00058a22: test edi, edi; dec edx; stc; call dword ptr [eax + 0x56]; 
0x00193650: test edi, edi; je 0x1936b0; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00058527: test edi, edi; je 0x58560; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000b3010: test edi, edi; je 0xb3070; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0013011e: test edi, edi; jne 0x130130; pop ebx; pop esi; pop edi; ret; 
0x0019d1bd: test edi, edi; jne 0x19d190; pop ebx; pop esi; pop edi; ret; 
0x0009960d: test edi, edi; jne 0x20f6f; pop ebx; pop esi; pop edi; ret; 
0x000dc2ac: test edi, edi; mov edx, dword ptr [esp + 0x88]; mov ecx, ebp; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x000c3e16: test edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x001029ae: test edx, 0x975ff00; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0009a335: test edx, eax; inc ebx; stc; call dword ptr [eax + 0x57]; 
0x000c54b6: test edx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x363363], cl; dec dword ptr [ebx - 0x362f4b]; call dword ptr [edi - 1]; 
0x000aaec1: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b3251: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000aabd1: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ac201: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00133c48: test edx, edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x00089de7: test edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x000aafd9: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0011aee2: test edx, edx; je 0x11aef0; pop ebx; pop esi; pop edi; ret; 
0x0011f929: test edx, edx; je 0x11f960; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x001442c6: test edx, edx; je 0x1442d8; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00159306: test edx, edx; je 0x159310; add esp, 4; pop ebx; pop esi; ret; 
0x001593d6: test edx, edx; je 0x1593e0; add esp, 4; pop ebx; pop esi; ret; 
0x00159496: test edx, edx; je 0x1594a0; add esp, 4; pop ebx; pop esi; ret; 
0x0015f0fb: test edx, edx; je 0x15f10e; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0019ce6b: test edx, edx; je 0x19ce79; mov dword ptr [esp + 8], eax; call edx; 
0x0019cfbb: test edx, edx; je 0x19cfcc; sub esp, 0xc; push eax; call edx; 
0x00021414: test edx, edx; je 0x21419; ret; 
0x0002cbe7: test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x0002ccf9: test edx, edx; je 0x2ccff; call edx; 
0x00081cd6: test edx, edx; je 0x81ce8; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00081d6b: test edx, edx; je 0x81d80; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00082aa0: test edx, edx; je 0x82a80; sub esp, 0xc; push eax; call edx; 
0x0008306b: test edx, edx; je 0x830b0; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00083af9: test edx, edx; je 0x83b10; or eax, 2; mov dword ptr [ecx + 8], eax; xor eax, eax; ret; 
0x00083d4a: test edx, edx; je 0x83d88; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b2fb8: test edx, edx; je 0xb2f90; bsr ecx, edx; add eax, ecx; ret; 
0x000c8dd3: test edx, edx; je 0xc8de0; mov edx, dword ptr [eax]; cmp edx, ecx; jne 0xc8dd0; ret; 
0x000dcdbe: test edx, edx; je 0xdcdc9; test eax, eax; jne 0xdcdc9; pop ecx; jmp ecx; 
0x000dd1c3: test edx, edx; je 0xdd1a5; mov dword ptr [esp + 0xc], ecx; add ebx, 1; mov dword ptr [esp + 8], eax; call edx; 
0x000dd213: test edx, edx; je 0xdd1a5; mov dword ptr [esp + 0xc], ecx; mov dword ptr [esp + 8], eax; call edx; 
0x0011bce0: test edx, edx; jne 0x11bce8; ret; 
0x0011bd04: test edx, edx; jne 0x11bd10; ret; 
0x00163800: test edx, edx; jne 0x163810; add esp, 0xc; ret; 
0x00163850: test edx, edx; jne 0x163860; add esp, 0xc; ret; 
0x0016d01e: test edx, edx; jne 0x16d030; add esp, 4; pop ebx; pop esi; ret; 
0x0016d4b9: test edx, edx; jne 0x16d4c8; add esp, 8; pop ebx; ret; 
0x00193dae: test edx, edx; jne 0x193dc0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00057cdb: test edx, edx; jne 0x57ce8; add esp, 8; pop ebx; ret; 
0x00074e2a: test edx, edx; jne 0x74e20; ret; 
0x0007e5fa: test edx, edx; jne 0x7e5f0; ret; 
0x0008217d: test edx, edx; jne 0x82190; xend; xor eax, eax; add esp, 0xc; ret; 
0x00083a91: test edx, edx; jne 0x83ab0; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0008b0dc: test edx, edx; jne 0x8b0f0; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b6232: test edx, edx; jne 0xb6228; ret; 
0x000c8aa5: test edx, edx; jne 0xc8a98; mov eax, ecx; pop ebx; pop esi; ret; 
0x000c8e0a: test edx, edx; jne 0xc8e00; mov eax, ecx; pop ebx; ret; 
0x000ce66b: test edx, edx; jne 0xce678; add esp, 4; pop ebx; pop esi; ret; 
0x000d6c84: test edx, edx; jne 0xd6c5a; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00092dfc: test edx, edx; jns 0x92e05; lea eax, [edx + edx]; mov ebx, dword ptr [eax]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000d6008: test edx, edx; jns 0xd603b; mov eax, 0x193; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00038192: test edx, edx; sete al; ret; 
0x00094f81: test edx, esi; add al, byte ptr [eax]; add byte ptr [ebx - 0x15f6b], cl; jmp dword ptr [ebp - 0x75]; 
0x00127990: test edx, esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x1334a], cl; jmp dword ptr [ebp - 0x5f]; 
0x001211d6: test esi, 2; mov ebx, dword ptr [esp + 0x14]; cmovne edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0004e706: test esi, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x362f4b], cl; call dword ptr [edi - 1]; 
0x000b2b5d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000f11dd: test esi, ebp; or al, byte ptr [eax]; add byte ptr [ebp - 0x76dd8b40], al; ret 0xe283; 
0x000fb89f: test esi, ecx; adc eax, dword ptr [eax]; add byte ptr [eax + 0x30840f40], ch; or eax, 0xec830000; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x001920bd: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000a4b65: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001042b8: test esi, esi; je 0x1042ca; sub esp, 8; push eax; push edi; call esi; 
0x00106a28: test esi, esi; je 0x106a3a; sub esp, 8; push eax; push edi; call esi; 
0x000cd8a4: test esi, esi; je 0xcd918; mov ebx, dword ptr [esp + 0x50]; lea edx, [esp + 0x1c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e0048: test esi, esi; je 0xe005a; sub esp, 8; push eax; push edi; call esi; 
0x000e26d8: test esi, esi; je 0xe26ea; sub esp, 8; push eax; push edi; call esi; 
0x000f7598: test esi, esi; je 0xf75aa; sub esp, 8; push eax; push edi; call esi; 
0x000f8148: test esi, esi; je 0xf815a; sub esp, 8; push eax; push edi; call esi; 
0x0019cc7d: test esi, esi; jne 0x19cc64; add esp, 4; pop ebx; pop esi; ret; 
0x0019d32c: test esi, esi; jne 0x19d314; add esp, 4; pop ebx; pop esi; ret; 
0x0019d3ef: test esi, esi; jne 0x19d3d8; add esp, 4; pop ebx; pop esi; ret; 
0x00082548: test esi, esi; jne 0x82588; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000fdcfb: test esi, esi; jne 0xfdce0; pop ebx; pop esi; pop edi; ret; 
0x0018f895: test esi, esp; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x0018b695: test esi, esp; jle 0x18b68b; call dword ptr [ebx - 0x18]; 
0x000a4897: test esp, eax; add eax, 0x5b5f0000; ret; 
0x00193cc7: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00194913: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001920df: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0014b315: test esp, edi; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00058b6e: test esp, edi; xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x000c8957: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000219c1: test esp, esi; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x00102e15: test esp, esp; add eax, dword ptr [eax]; add dh, dh; ret 0xf02; 
0x00195204: tzcnt edx, edx; add eax, edx; ret; 
0x00195210: tzcnt edx, edx; mov eax, 0x20; add eax, edx; ret; 
0x0014418b: ud0; add byte ptr [ecx - 0x4517dbcc], cl; ret; 
0x0015fc19: ud1; ret; 
0x00020f3f: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x20f64; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0014489f: wait; add bl, byte ptr [edi - 7]; call dword ptr [ebx - 0x18]; 
0x00089504: wait; add byte ptr [eax], al; add byte ptr [ebp - 0x6c05879], cl; call dword ptr [eax - 0x73]; 
0x0008879b: wait; add byte ptr [eax], al; add byte ptr [ebp - 0x6c06079], cl; call dword ptr [eax - 0x73]; 
0x0013b46f: wait; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x00169791: wait; add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; clc; stc; call dword ptr [edx - 0x77]; 
0x00096c93: wait; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0012aa1d: wait; clc; inc dword ptr [ebx - 0x3f7cef3c]; sbb al, 0x89; loope 0x12a9b2; ret 0x25; 
0x00085d4c: wait; cli; dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x00094a95: wait; dec eax; add al, 0; add cl, ch; ret 0xfffd; 
0x0015c781: wait; dec eax; std; jmp dword ptr [esi - 0x70]; 
0x00130261: wait; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00096f55: wait; rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x000f8be6: wait; stc; call dword ptr [eax - 0x73]; 
0x0014a32c: wbinvd; ret; 
0x0004107a: wrmsr; stc; call dword ptr [eax - 0x18]; 
0x00068a01: xabort -1; add ecx, ebp; jmp ecx; 
0x000563b0: xchg ah, bh; jbe 0x563ad; call dword ptr [eax - 0x73]; 
0x0002e3f6: xchg ah, bh; jno 0x2e3f3; call dword ptr [eax - 0x18]; 
0x00028709: xchg ah, bh; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00157ad0: xchg ah, ch; dec dword ptr [ecx + 0x65e82434]; xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00157ad8: xchg ah, ch; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00138c58: xchg ah, cl; add al, byte ptr [eax]; add byte ptr [ecx], ch; ret 0xc031; 
0x000f8dcc: xchg ah, cl; wait; stc; call dword ptr [eax - 0x73]; 
0x000b606d: xchg ah, cl; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000218cd: xchg ah, dh; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x18]; 
0x000d8901: xchg ah, dh; jmp dword ptr [esi - 0x70]; 
0x00093e8f: xchg ah, dh; xchg cl, bh; call dword ptr [eax - 1]; 
0x000563c3: xchg ah, dl; jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x00028755: xchg ah, dl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00161d30: xchg al, ah; arpl cx, di; call dword ptr [eax - 0x73]; 
0x0008834a: xchg al, ah; jg 0x88347; call dword ptr [eax - 0x18]; 
0x00089089: xchg al, ah; jg 0x89086; call dword ptr [eax - 0x18]; 
0x00087079: xchg al, ah; stc; call dword ptr [eax - 0x18]; 
0x0015ed68: xchg al, ah; xor dh, bl; call dword ptr [eax - 0x48]; 
0x000ca95e: xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x001672e0: xchg al, al; stc; call dword ptr [eax - 0x18]; 
0x00137e22: xchg al, bl; inc ebx; stc; call dword ptr [eax + 0x6a]; 
0x00044302: xchg al, bl; jne 0x442ff; call dword ptr [eax - 0x18]; 
0x00161d4b: xchg al, bl; push edi; stc; call dword ptr [eax + 0x6a]; 
0x00146c9a: xchg al, bl; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x00044348: xchg al, ch; je 0x44345; call dword ptr [eax - 0x18]; 
0x000fd8ba: xchg al, ch; popfd; stc; call dword ptr [eax - 0x18]; 
0x0013cc5e: xchg al, cl; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0014aa91: xchg al, cl; lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00094d70: xchg al, dh; add dword ptr [eax], eax; add byte ptr [ebp + 0x1f40d], cl; add byte ptr [ecx], al; ret; 
0x000fb26e: xchg al, dl; cmp ch, ch; call dword ptr [eax + 0x6a]; 
0x0014d8ed: xchg al, dl; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000b6080: xchg al, dl; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00096de2: xchg al, dl; xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x00138386: xchg bh, ah; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0018cdcc: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000fd2f5: xchg bh, ch; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000718f4: xchg bh, dh; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x71908; push esi; call dword ptr [ebx + 0x1c]; 
0x000b61b3: xchg bh, dh; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000b61b3: xchg bh, dh; inc ebx; stc; call dword ptr [eax - 0x18]; ret 0xf796; 
0x00149c36: xchg bl, ah; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0007d2ee: xchg byte ptr [0x83000001], ah; in al, dx; or al, 0x53; call dword ptr [esi + 0x44]; 
0x0007bd16: xchg byte ptr [0x83000002], dl; in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00170450: xchg byte ptr [eax + 0x29ffffe3], ah; ret 0xc129; 
0x00065a2c: xchg byte ptr [eax + 0x3efff8c5], al; jmp esi; 
0x000dd156: xchg byte ptr [eax + 0x3f], ch; add byte ptr [eax], al; mov eax, dword ptr [eax]; test eax, eax; je 0xdd163; call eax; 
0x000fcf1c: xchg byte ptr [eax + 0x43], dh; in eax, dx; call dword ptr [eax + 0x6a]; 
0x0010961a: xchg byte ptr [eax + 0x4a], ch; stc; call dword ptr [eax - 0x18]; 
0x0011974c: xchg byte ptr [eax + 0x4b], dh; stc; call dword ptr [edi + 0x50]; 
0x0002b03c: xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00029d06: xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax + 0x68]; 
0x00029908: xchg byte ptr [eax + 0x69], ah; stc; call dword ptr [eax - 0x73]; 
0x00025f3c: xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax + 0x68]; 
0x00025e28: xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x00021fa4: xchg byte ptr [eax + 0x6e], dl; stc; call dword ptr [eax - 0x73]; 
0x00029c34: xchg byte ptr [eax + 0x70], bh; stc; call dword ptr [eax - 0x73]; 
0x00029c47: xchg byte ptr [eax + 0x70], cl; stc; call dword ptr [eax - 0x18]; 
0x000441d0: xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00064968: xchg byte ptr [eax + 0x78], ah; stc; call dword ptr [eax + 0x68]; 
0x00086190: xchg byte ptr [eax + 0x7f], bl; stc; call dword ptr [eax - 0x73]; 
0x00070edc: xchg byte ptr [eax + eax - 0x17aa0000], dl; stc; ret 0; 
0x00079285: xchg byte ptr [eax + eax - 0xf770000], ah; pop ebx; pop esi; pop edi; ret; 
0x000883dd: xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x0005b653: xchg byte ptr [eax + edi*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x000441e3: xchg byte ptr [eax + esi - 7], bh; call dword ptr [eax - 0x18]; 
0x0006b070: xchg byte ptr [eax - 0x72000737], ah; test byte ptr [esi], al; jg 0x6b0c6; in al, 0xff; jmp eax; 
0x00066012: xchg byte ptr [eax - 0x7200073b], ah; test byte ptr [esi], al; out 0xfb, eax; jecxz 0x6601d; jmp eax; 
0x00091939: xchg byte ptr [eax - 0x7c], cl; stc; call dword ptr [eax + 0x68]; 
0x00091995: xchg byte ptr [eax - 0x7c], cl; stc; call dword ptr [eax - 0x73]; 
0x00069846: xchg byte ptr [eax - 0x7cfffffd], ah; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0006f28b: xchg byte ptr [eax - 0x7d000000], dl; in al, dx; add al, 0xc1; clc; add dl, byte ptr [eax - 0x77]; ret; 
0x00089076: xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x0008b05b: xchg byte ptr [eax], ah; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0004441c: xchg byte ptr [eax], ah; jbe 0x44419; call dword ptr [eax - 0x18]; 
0x00029c6a: xchg byte ptr [eax], ah; jo 0x29c67; call dword ptr [eax - 0x18]; 
0x0002b072: xchg byte ptr [eax], ah; jo 0x2b06f; call dword ptr [eax - 0x18]; 
0x00161d44: xchg byte ptr [eax], ah; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00026303: xchg byte ptr [eax], ah; push -7; call dword ptr [eax - 0x73]; 
0x0006df17: xchg byte ptr [eax], ah; retf 0xfff8; add edx, ebx; jmp edx; 
0x0012128f: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001445c3: xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0016e9f3: xchg byte ptr [eax], bl; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000db0ba: xchg byte ptr [eax], bl; inc esi; stc; call dword ptr [edi - 1]; 
0x00113166: xchg byte ptr [eax], ch; stc; call dword ptr [eax - 0x18]; 
0x00118f49: xchg byte ptr [eax], dh; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x00146c65: xchg byte ptr [eax], dl; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x00044229: xchg byte ptr [ebp + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x00032932: xchg byte ptr [ebp - 0x74d98b40], al; inc edx; or al, 0x83; ret 0x8908; 
0x0007f1de: xchg byte ptr [ebp - 0x7d000000], ah; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0014efae: xchg byte ptr [ebx + 0x2a], bl; stc; call dword ptr [eax + 0x53]; 
0x00057a42: xchg byte ptr [ebx + 0x31], bh; stc; call dword ptr [eax + 0x53]; 
0x0014f44c: xchg byte ptr [ebx + 0x3f], al; stc; call dword ptr [eax - 0x18]; 
0x0014aaa4: xchg byte ptr [ebx + 0x60], dl; stc; call dword ptr [eax - 0x18]; 
0x00070610: xchg byte ptr [ebx + 1], ch; add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x001194f2: xchg byte ptr [ebx + ecx*2 - 7], dl; call dword ptr [eax - 0x75]; 
0x0009738b: xchg byte ptr [ebx + edx*4 - 7], ch; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0009757b: xchg byte ptr [ebx + edx*4 - 7], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x001646e8: xchg byte ptr [ebx + esi*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00054175: xchg byte ptr [ebx - 0x3f7c47ab], cl; add dword ptr [ecx], ebp; fidivr dword ptr [ecx]; ret 0xee7f; 
0x0006451a: xchg byte ptr [ebx - 0x5037b], cl; dec dword ptr [ebx - 0x5074b]; jmp dword ptr [ebp - 0x77]; 
0x0014b589: xchg byte ptr [ebx - 0x7a72f314], al; jo 0x14b60f; stc; call dword ptr [eax - 0x18]; 
0x0018f979: xchg byte ptr [ebx - 0x7cfffffe], al; ret 0x8310; 
0x0018e4d2: xchg byte ptr [ebx - 0x7cffffff], bl; ret 0x8310; 
0x00193d47: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00138365: xchg byte ptr [ebx], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00050c96: xchg byte ptr [ebx], al; push cs; add byte ptr [ebx - 0x365343], cl; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x00078154: xchg byte ptr [ebx], bh; stc; call dword ptr [eax - 0x18]; 
0x00088337: xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0013f328: xchg byte ptr [ecx + ebp*4], dh; stc; call dword ptr [ebp - 1]; 
0x00025f5f: xchg byte ptr [ecx + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x000c1d15: xchg byte ptr [ecx], bh; ret 0x8f0f; 
0x00033bfb: xchg byte ptr [edi + 0x2f], dh; stc; call dword ptr [eax - 1]; 
0x00064974: xchg byte ptr [edi + 0x32], ch; stc; call dword ptr [eax - 0x73]; 
0x0008910d: xchg byte ptr [edi + 0x68fff93f], ah; rol byte ptr [ecx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x000883d1: xchg byte ptr [edi + 0x68fff93f], bl; rol byte ptr [ecx], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x00029d76: xchg byte ptr [edi + ebp*2 - 7], dh; call dword ptr [eax - 0x18]; 
0x00025f2c: xchg byte ptr [edi + ebp*2], bh; stc; call dword ptr [eax - 0x18]; 
0x00025e3b: xchg byte ptr [edi + ebp*2], bl; stc; call dword ptr [eax - 0x18]; 
0x00119145: xchg byte ptr [edi + ebp], bh; stc; call dword ptr [eax - 1]; 
0x001083fe: xchg byte ptr [edi + ebx*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x000ca957: xchg byte ptr [edi - 0x72b00000], cl; xchg al, al; cmp al, 0xea; call dword ptr [eax - 0x73]; 
0x000681fc: xchg byte ptr [edi - 0x7cfffff0], bh; in al, dx; add al, 0x53; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00066bb6: xchg byte ptr [edi - 0x7cfffff5], bh; in al, dx; add al, 0x53; push dword ptr [ebp - 0x88c]; push dword ptr [ebp - 0x87c]; call dword ptr [edx + 0x1c]; 
0x0013cab1: xchg byte ptr [edi - 7], al; call dword ptr [eax - 0x18]; 
0x0011d29f: xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x0006d3d4: xchg byte ptr [edi], ah; adc dword ptr [eax], eax; add byte ptr [ebx + 0x565304ec], al; push ebp; call dword ptr [edi + 0x1c]; 
0x0018c48c: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006cff4: xchg byte ptr [edi], bh; sbb byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; je 0x6d024; and al, 0x55; call dword ptr [esi + 0x1c]; 
0x0018dbac: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018bd9c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0018d4bc: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00138297: xchg byte ptr [edi], cl; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000fd242: xchg byte ptr [edx + 0x49], ch; stc; call dword ptr [eax - 0x18]; 
0x00109da7: xchg byte ptr [edx + 0x4a], ch; stc; call dword ptr [eax - 0x18]; 
0x00118f42: xchg byte ptr [edx + 0x4b], cl; stc; call dword ptr [eax - 0x73]; 
0x0013e043: xchg byte ptr [edx + 0x5d], dh; stc; call dword ptr [ecx - 0x77]; 
0x00144067: xchg byte ptr [edx + 0x5e], bh; stc; call dword ptr [eax - 0x18]; 
0x0014aac3: xchg byte ptr [edx + 0x60], ah; stc; call dword ptr [eax - 0x18]; 
0x0014aac3: xchg byte ptr [edx + 0x60], ah; stc; call dword ptr [eax - 0x18]; mov dl, 0x4d; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000774b4: xchg byte ptr [edx + 0x6a000001], al; add dword ptr [edx], ebp; push 0; push dword ptr [esp + 0x18]; call dword ptr [ebx + 0x40]; 
0x000895f6: xchg byte ptr [edx - 6], ah; jmp dword ptr [esi - 0x70]; 
0x00138dfc: xchg byte ptr [edx], bh; pop esp; stc; call dword ptr [eax - 0x39]; 
0x000db054: xchg byte ptr [edx], ch; inc esi; stc; call dword ptr [ecx - 1]; 
0x000443d6: xchg byte ptr [esi + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x0011979d: xchg byte ptr [esi + 0x4b], bl; stc; call dword ptr [eax - 1]; 
0x00025e2f: xchg byte ptr [esi + 0x68fff92b], ch; ljmp 0x868d:0x50000002; sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0007a0e5: xchg byte ptr [esi + 1], dh; add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00021fb4: xchg byte ptr [esi + ebp*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0014d8dd: xchg byte ptr [esi + ebp*4], al; stc; call dword ptr [eax - 0x73]; 
0x000fd22f: xchg byte ptr [esi + ebx*4 - 7], al; call dword ptr [eax - 0x73]; 
0x000fdad5: xchg byte ptr [esi + ebx*4], bl; stc; call dword ptr [eax - 0x73]; 
0x0011d100: xchg byte ptr [esi + ecx - 0x137d0000], bl; or byte ptr [ebp - 0x6b42d7d], cl; call dword ptr [eax + 0x57]; 
0x000e7e2f: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x000563b7: xchg byte ptr [esi + esi*2 - 0x5b970007], dh; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, dl; jbe 0x563c0; call dword ptr [eax - 0x18]; 
0x0011916e: xchg byte ptr [esi - 0x10], bh; jmp dword ptr [esi - 0x70]; 
0x00119e24: xchg byte ptr [esi], bh; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00023718: xchg byte ptr [esi], cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0006762d: xchg byte ptr [esi], dl; add eax, 0xec830000; add al, 0x53; push edx; push dword ptr [ebp - 0x87c]; call dword ptr [ecx + 0x1c]; 
0x0009194c: xchg byte ptr [esp + eax*4], bl; stc; call dword ptr [eax - 0x18]; 
0x000286c8: xchg byte ptr [esp + ebp], bl; stc; call dword ptr [eax - 0x18]; 
0x0004dbfe: xchg ch, bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00137fcc: xchg ch, dh; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0016efd3: xchg ch, dl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0007cc8a: xchg cl, bh; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00093e91: xchg cl, bh; call dword ptr [eax - 1]; 
0x000861a3: xchg dh, bh; stc; call dword ptr [eax - 0x18]; 
0x00121a9b: xchg dh, cl; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00087072: xchg dh, cl; stc; call dword ptr [eax - 0x73]; 
0x00025f72: xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025ed0: xchg dh, dl; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00025f4f: xchg dl, al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00078589: xchg dl, bh; jmp dword ptr [esi - 0x70]; 
0x0016efcc: xchg dl, bl; xor cl, bh; call dword ptr [eax - 0x73]; 
0x000885c7: xchg dl, dl; aas; stc; call dword ptr [eax - 0x18]; 
0x0012975e: xchg dword ptr [0x89000002], ebx; ret; 
0x000b26c3: xchg dword ptr [eax + 0x1000000], ebp; clc; add eax, ecx; pop edi; ret; 
0x00073e42: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0x4d89; 
0x00070426: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0xd989; 
0x0007d570: xchg dword ptr [eax + 0x29ffffe3], esp; ret 0xf189; 
0x0014b487: xchg dword ptr [eax + 0x53], edx; bnd call dword ptr [ebx + 0x50]; 
0x001375b1: xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x001374cd: xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [ebp - 0x77]; 
0x00156af6: xchg dword ptr [eax + 0x6afffff9], edi; add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x00026e76: xchg dword ptr [eax + 0x70], ecx; stc; call dword ptr [eax - 0x18]; 
0x0004361d: xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004047e: xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0008265d: xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; 
0x0008a80f: xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; add di, di; jmp dword ptr [ebp - 0x39]; 
0x0008e714: xchg dword ptr [eax + 0x7e], esi; stc; call dword ptr [eax - 0x18]; popal; ret 0xfffe; 
0x0008ad24: xchg dword ptr [eax + 0xf0], edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x000656f9: xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00041033: xchg dword ptr [eax + esi - 7], edi; call dword ptr [eax - 0x18]; 
0x00124587: xchg dword ptr [eax - 0x1c], esi; out dx, eax; call dword ptr [eax - 0x18]; 
0x0008925f: xchg dword ptr [eax - 0x45000004], ebp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x0008852f: xchg dword ptr [eax - 0x45000004], esp; or dword ptr [eax], 0xa30f0000; ret 0x830f; 
0x00149f9e: xchg dword ptr [eax - 0x54], esi; stc; call dword ptr [eax - 0x73]; 
0x0013ddde: xchg dword ptr [eax - 0x58], esp; stc; call dword ptr [eax - 0x73]; 
0x001374a6: xchg dword ptr [eax - 0x5a], esp; stc; call dword ptr [eax - 0x73]; 
0x00125824: xchg dword ptr [eax - 0x5d], esi; stc; call dword ptr [eax - 0x73]; 
0x00100d81: xchg dword ptr [eax - 0x62], edx; stc; call dword ptr [eax - 0x18]; 
0x00100d71: xchg dword ptr [eax - 0x62], esi; stc; call dword ptr [eax - 0x73]; 
0x000fa96c: xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x18]; 
0x000fa94a: xchg dword ptr [eax - 0x63], esi; stc; call dword ptr [eax - 0x18]; 
0x000c38d6: xchg dword ptr [eax - 0x68], ebp; stc; call dword ptr [eax - 0x18]; 
0x0008906c: xchg dword ptr [eax - 0x74000003], esp; je 0x89098; or al, 0x8d; xchg byte ptr [eax - 0x7f], bh; stc; call dword ptr [eax - 0x73]; 
0x00058ec2: xchg dword ptr [eax - 0x7f000001], ebx; jns 0x58f10; add byte ptr [ecx - 0x57b4b], cl; jmp dword ptr [ebp - 0x75]; 
0x0008889d: xchg dword ptr [eax - 0x80], ebp; stc; call dword ptr [eax - 0x18]; 
0x000895ef: xchg dword ptr [eax - 0x80], ebp; stc; call dword ptr [eax - 0x18]; xchg byte ptr [edx - 6], ah; jmp dword ptr [esi - 0x70]; 
0x00193eb5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00193545: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x00192e75: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x00088c1e: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0016865e: xchg dword ptr [eax], eax; hlt; dec dword ptr [ebp - 0x13343]; dec dword ptr [ecx - 0xa77b]; dec dword ptr [ebp - 0xa77b]; call dword ptr [edi + 0x50]; 
0x000c9977: xchg dword ptr [eax], eax; insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x56]; 
0x00145f7a: xchg dword ptr [eax], eax; push cs; add byte ptr [ebx - 0x7d], dl; in al, dx; or byte ptr [ebx - 0x1368], cl; jmp dword ptr [ebp - 0x75]; 
0x0014454e: xchg dword ptr [eax], eax; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00174507: xchg dword ptr [eax], ebp; wait; stc; call dword ptr [eax - 0x73]; 
0x00082d18: xchg dword ptr [eax], ebx; add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00101e4c: xchg dword ptr [eax], ebx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0003e265: xchg dword ptr [eax], ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003a3d3: xchg dword ptr [eax], edx; je 0x3a3d0; call dword ptr [eax - 0x73]; 
0x0016b6ad: xchg dword ptr [eax], edx; push esp; hlt; call dword ptr [eax - 0x73]; 
0x0012e65a: xchg dword ptr [eax], esp; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x75]; 
0x00041010: xchg dword ptr [eax], esp; jbe 0x4100d; call dword ptr [eax - 0x18]; 
0x000474a7: xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050bf6: xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba92c: xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7cb: xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c0421: xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x000656e6: xchg dword ptr [eax], esp; jns 0x656e3; call dword ptr [eax - 0x73]; 
0x0006a72e: xchg dword ptr [eax], esp; jns 0x6a72b; call dword ptr [eax - 0x73]; 
0x00026e99: xchg dword ptr [eax], esp; jo 0x26e96; call dword ptr [eax - 0x18]; 
0x00027ba0: xchg dword ptr [eax], esp; jo 0x27b9d; call dword ptr [eax - 0x18]; 
0x0008e775: xchg dword ptr [eax], esp; xchg esi, esp; call dword ptr [ebx + 0x50]; 
0x000411cc: xchg dword ptr [eax], esp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000f2bb4: xchg dword ptr [ebp + 0x48], esi; stc; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x0014518c: xchg dword ptr [ebp + 0x5f], edx; stc; call dword ptr [eax - 0x18]; 
0x00047399: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c0f: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000ba9f9: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6a0: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c0487: xchg dword ptr [ebp + 0x68fff930], edi; dec ebp; add eax, 0x8d500000; xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x00047527: xchg dword ptr [ebp + 0x68fff930], edi; fadd dword ptr [0x8d500000]; xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x000473df: xchg dword ptr [ebp + 0x68fff930], edi; nop; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0004749b: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x474a4; call dword ptr [eax - 0x18]; 
0x00050bea: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0x50bf3; call dword ptr [eax - 0x18]; 
0x000ba920: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xba929; call dword ptr [eax - 0x18]; 
0x000bd7bf: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xbd7c8; call dword ptr [eax - 0x18]; 
0x000c0415: xchg dword ptr [ebp + 0x68fff930], edi; pop edi; add eax, 0x8d500000; xchg dword ptr [eax], esp; jbe 0xc041e; call dword ptr [eax - 0x18]; 
0x0004754a: xchg dword ptr [ebp + 0x68fff930], edi; pop esi; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00047478: xchg dword ptr [ebp + 0x68fff930], edi; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c7e: xchg dword ptr [ebp + 0x68fff930], edi; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8b7: xchg dword ptr [ebp + 0x68fff930], edi; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03f2: xchg dword ptr [ebp + 0x68fff930], edi; xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x000411ab: xchg dword ptr [ebp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0007e110: xchg dword ptr [ebx + 0x199c], eax; cmp eax, 1; jg 0x7e150; add esp, 8; pop ebx; ret; 
0x00145185: xchg dword ptr [ebx + 0x2a], ebx; stc; call dword ptr [eax - 0x73]; 
0x0012f947: xchg dword ptr [ebx + 0x2a], ebx; stc; dec dword ptr [ecx - 0x7872af05]; jno 0x12f992; stc; call dword ptr [eax - 0x18]; 
0x000cbf61: xchg dword ptr [ebx + 0x3d88], eax; cmp eax, 1; jg 0xcbf90; add esp, 8; pop ebx; ret; 
0x00086db6: xchg dword ptr [ebx + 0x3f], eax; stc; call dword ptr [eax - 0x18]; 
0x00087057: xchg dword ptr [ebx + 0x3f], edx; stc; call dword ptr [eax - 0x18]; 
0x000656ed: xchg dword ptr [ebx + 0x68fff932], esp; out dx, al; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + edi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x0004ba7a: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000905a8: xchg dword ptr [ebx + eax*4], esi; stc; call dword ptr [eax - 0x18]; 
0x001493fe: xchg dword ptr [ebx + ebp*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x0014807b: xchg dword ptr [ebx + ebp*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00149fb1: xchg dword ptr [ebx + ebp*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0014808e: xchg dword ptr [ebx + ebp*4], esp; stc; call dword ptr [eax - 0x18]; 
0x001379fd: xchg dword ptr [ebx + ebx*2 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00172a47: xchg dword ptr [ebx + ebx*4], edx; stc; call dword ptr [eax - 0x73]; 
0x00098a60: xchg dword ptr [ebx + edx*4], esi; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x0013f076: xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x000fbecb: xchg dword ptr [ebx - 0x6f37b], ecx; jmp dword ptr [ebp - 0x7d]; 
0x0008832d: xchg dword ptr [ebx - 0x74000003], esp; je 0x88359; or al, 0x8d; xchg byte ptr [ecx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x000fac93: xchg dword ptr [ebx], eax; dec ecx; stc; call dword ptr [eax + 0x56]; 
0x00108a30: xchg dword ptr [ebx], edi; add dword ptr [eax], eax; add byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x13349], cl; jmp dword ptr [ebp - 0x75]; 
0x00040491: xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; 
0x000b9b53: xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x00043630: xchg dword ptr [ecx + 0x30], edx; stc; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x0012f950: xchg dword ptr [ecx + 0x3f], esi; stc; call dword ptr [eax - 0x18]; 
0x000971ea: xchg dword ptr [ecx + 0x9000000], esp; ret; 
0x00088794: xchg dword ptr [ecx + eax*4 - 7], ebx; call dword ptr [eax + 0x68]; 
0x000887cc: xchg dword ptr [ecx + eax*4 - 7], ebx; call dword ptr [eax + 0x6a]; 
0x0008888a: xchg dword ptr [ecx + eax*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000b86b1: xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x0004a7bc: xchg dword ptr [ecx + eax], ebx; add byte ptr [ecx + 0x3c778bd4], cl; mov edi, dword ptr [edi + 0x38]; ret; 
0x000d1411: xchg dword ptr [ecx + ebx*4 - 7], eax; call dword ptr [eax - 0x73]; 
0x00065f7f: xchg dword ptr [ecx + edi*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x000beba6: xchg dword ptr [ecx + edi*4 - 7], eax; call dword ptr [eax + 0x56]; 
0x0015f1c4: xchg dword ptr [ecx + esi*4 - 7], esi; call dword ptr [ebx - 1]; 
0x0003fb9f: xchg dword ptr [ecx], eax; xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x0008709b: xchg dword ptr [ecx], ebp; aas; stc; call dword ptr [eax - 0x18]; 
0x00124ae3: xchg dword ptr [ecx], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0008bd4a: xchg dword ptr [ecx], esi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000870bd: xchg dword ptr [edi + 0x3f], ebx; stc; call dword ptr [eax - 0x18]; 
0x00127419: xchg dword ptr [edi + 0x56], esp; stc; call dword ptr [eax + 0x53]; 
0x00026f7d: xchg dword ptr [edi + ebp*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00025252: xchg dword ptr [edi + ebp*2], ebx; stc; call dword ptr [eax - 0x18]; 
0x0002534b: xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; 
0x000258b3: xchg dword ptr [edi + ebp*2], edi; stc; call dword ptr [eax - 0x18]; ret 0x9f; 
0x00085d31: xchg dword ptr [edi + edi*2 - 7], ebp; call dword ptr [eax + 0x68]; 
0x00086da3: xchg dword ptr [edi + edi*2 - 7], edi; call dword ptr [eax + 0x68]; 
0x00086fca: xchg dword ptr [edi + edi*2 - 7], edi; call dword ptr [eax - 0x73]; 
0x00086fbb: xchg dword ptr [edi + edi*2], edx; stc; call dword ptr [eax - 0x18]; 
0x000bf5e4: xchg dword ptr [edi + edx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00041079: xchg dword ptr [edi], ecx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00087807: xchg dword ptr [edi], edi; stc; call dword ptr [eax - 0x73]; 
0x0013ddee: xchg dword ptr [edi], esi; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0012bccf: xchg dword ptr [edi], esi; push edi; stc; call dword ptr [eax - 0x18]; 
0x000723ba: xchg dword ptr [edx + 0x1968], eax; cmp eax, 1; jg 0x723d0; ret; 
0x0007b38a: xchg dword ptr [edx + 0x197c], eax; cmp eax, 1; jg 0x7b3a0; ret; 
0x0008042a: xchg dword ptr [edx + 0x199c], eax; cmp eax, 1; jg 0x80440; ret; 
0x00086fdd: xchg dword ptr [edx + 0x47], ebp; stc; call dword ptr [eax - 0x18]; 
0x0014f94d: xchg dword ptr [edx + 4], eax; cmp eax, 1; jg 0x14f960; ret; 
0x000e4a28: xchg dword ptr [edx + eax], esi; add byte ptr [ebx - 0xaff7c74], cl; clc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000e0101: xchg dword ptr [edx + ebx*4 - 7], edi; call dword ptr [eax + 0x68]; 
0x000d6269: xchg dword ptr [edx - 0x73000000], edx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00152293: xchg dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x00152393: xchg dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x001522e7: xchg dword ptr [edx - 7], esp; jmp dword ptr [ebp - 0x75]; 
0x0005866d: xchg dword ptr [edx], eax; cmp eax, 1; jg 0x58678; ret; 
0x00041132: xchg dword ptr [edx], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000debd8: xchg dword ptr [edx], ebx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00100ed5: xchg dword ptr [edx], ecx; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0014581b: xchg dword ptr [edx], edi; das; stc; call dword ptr [eax + 0x56]; 
0x000410d2: xchg dword ptr [esi + 0x30], esp; stc; call dword ptr [eax - 0x18]; 
0x0016f0f1: xchg dword ptr [esi + 0x31], esi; stc; call dword ptr [eax + 0x6a]; 
0x000c393d: xchg dword ptr [esi + 0x44], ecx; stc; call dword ptr [eax - 0x18]; 
0x000baab4: xchg dword ptr [esi + 0x44], esp; stc; call dword ptr [eax - 0x18]; 
0x00165078: xchg dword ptr [esi + 0x5f], esp; stc; call dword ptr [eax - 0x18]; 
0x00025246: xchg dword ptr [esi + 0x68fff92b], ebp; ljmp 0x878d:0x50000002; sbb al, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x00101e39: xchg dword ptr [esi + ebx*4 - 7], edi; call dword ptr [eax - 0x73]; 
0x000fa8f3: xchg dword ptr [esi + ebx*4], esi; stc; call dword ptr [eax - 0x73]; 
0x001273ae: xchg dword ptr [esi + edx*2 - 7], ebp; call dword ptr [eax + 0x53]; 
0x000b5857: xchg dword ptr [esi + edx*4 - 7], edi; call dword ptr [eax - 0x73]; 
0x0003eab8: xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax + 0x68]; 
0x0004111f: xchg dword ptr [esi + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x00102078: xchg dword ptr [esi], ebp; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00107e9d: xchg dword ptr [esi], ebp; stc; call dword ptr [eax + 0x53]; 
0x0013761b: xchg dword ptr [esi], ebp; stc; call dword ptr [eax + 0x56]; 
0x000fe0a5: xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x000f2e45: xchg dword ptr [esi], ebp; stc; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x000d995c: xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000d98a4: xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x001179b0: xchg dword ptr [esi], ebp; stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x0002ea18: xchg dword ptr [esi], ebp; stc; jmp dword ptr [ebp - 0x75]; 
0x00086fff: xchg dword ptr [esi], ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x0015dab5: xchg dword ptr [esi], esp; in al, dx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0009147a: xchg dword ptr [esp + eax*4], eax; stc; call dword ptr [eax - 0x73]; 
0x000f9457: xchg dword ptr [esp + ebx*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000411ef: xchg dword ptr [esp + esi*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0003a2c7: xchg dword ptr [esp + esi*2], eax; stc; call dword ptr [eax - 0x73]; 
0x0016b757: xchg dword ptr [esp + esi*4], eax; stc; call dword ptr [eax + 0x6a]; 
0x0015c7bd: xchg dword ptr [esp], esp; stc; call dword ptr [eax + 0x53]; 
0x0015e7eb: xchg dword ptr [esp], esp; stc; call dword ptr [eax - 0x73]; 
0x000e010d: xchg eax, eax; inc edi; stc; call dword ptr [eax - 0x73]; 
0x000fa98e: xchg eax, eax; popfd; stc; call dword ptr [eax - 0x18]; 
0x000fa906: xchg eax, eax; pushfd; stc; call dword ptr [eax - 0x18]; 
0x00106ae1: xchg eax, eax; sahf; stc; call dword ptr [eax + 0x68]; 
0x0016778f: xchg eax, eax; stc; call dword ptr [eax - 0x18]; 
0x0016d7a4: xchg eax, ebp; jbe 0x16d7e0; cld; jmp dword ptr [esi - 0x70]; 
0x00040fed: xchg eax, ebp; je 0x40fea; call dword ptr [eax - 0x18]; 
0x00047484: xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c8a: xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8c3: xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03fe: xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x0013781d: xchg eax, ebp; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00041178: xchg eax, ebx; jne 0x41175; call dword ptr [eax - 0x18]; 
0x000473a5: xchg eax, ebx; jne 0x473a2; call dword ptr [eax - 0x18]; 
0x00050c1b: xchg eax, ebx; jne 0x50c18; call dword ptr [eax - 0x18]; 
0x000baa05: xchg eax, ebx; jne 0xbaa02; call dword ptr [eax - 0x18]; 
0x000bd6ac: xchg eax, ebx; jne 0xbd6a9; call dword ptr [eax - 0x18]; 
0x000c0493: xchg eax, ebx; jne 0xc0490; call dword ptr [eax - 0x18]; 
0x0013759a: xchg eax, ecx; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00151d71: xchg eax, ecx; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0002d79c: xchg eax, ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00149ff7: xchg eax, edi; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000fadae: xchg eax, edx; cmp ch, ch; call dword ptr [eax + 0x6a]; 
0x000e0114: xchg eax, edx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000b5867: xchg eax, edx; xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x00026e63: xchg eax, esi; jo 0x26e60; call dword ptr [eax - 0x73]; 
0x00026e86: xchg eax, esi; jo 0x26e83; call dword ptr [eax - 0x73]; 
0x00026ea9: xchg eax, esi; jo 0x26ea6; call dword ptr [eax - 0x73]; 
0x00026f12: xchg eax, esi; jo 0x26f0f; call dword ptr [eax - 0x73]; 
0x00026f6a: xchg eax, esi; jo 0x26f67; call dword ptr [eax - 0x73]; 
0x00026f8d: xchg eax, esi; jo 0x26f8a; call dword ptr [eax - 0x73]; 
0x0003eacb: xchg eax, esp; das; stc; call dword ptr [eax - 0x18]; 
0x0002535b: xchg eax, esp; push -7; call dword ptr [eax + 0x68]; 
0x0002523f: xchg eax, esp; push -7; call dword ptr [eax - 0x73]; 
0x001920c7: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0011fc4e: xchg ebp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x3776bb3c], al; pop ebx; pop esi; ret; 
0x00025e1f: xchg ebp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [eax + 0x6a], ah; stc; call dword ptr [eax - 0x73]; 
0x0014b321: xchg ebp, eax; and al, 0xad; stc; call dword ptr [edx - 0x73]; 
0x000e1503: xchg ebp, eax; cmp bl, 0xff; call dword ptr [ebx - 0x18]; 
0x000e09ac: xchg ebp, eax; cmp bl, 0xff; call dword ptr [edi - 1]; 
0x00041087: xchg ebp, eax; dec dword ptr [esi]; add byte ptr [ebx - 0x72d3db84], cl; xchg dword ptr [eax + 0x76], edx; stc; call dword ptr [eax - 0x73]; 
0x0008bb0a: xchg ebp, eax; inc edx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0004e34c: xchg ebp, eax; mov al, byte ptr [0x8bffffc9]; xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x000c63e1: xchg ebp, eax; mov eax, 0x31ffffc9; call dword ptr [eax - 0x73]; 
0x0005a617: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0005d184: xchg ebp, eax; mov eax, 0xffffffb; test byte ptr [edx], dh; ret 0xffff; 
0x0005b34a: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x0005e305: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x0008441b: xchg ebp, eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; call dword ptr gs:[0x10]; 
0x0011d4b4: xchg ebp, eax; push ebx; stc; call dword ptr [eax + 0x57]; 
0x0011af64: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0008cf75: xchg ebp, eax; ret 0x148d; 
0x00153ba2: xchg ebp, eax; ret 0x3a3c; 
0x00038441: xchg ebp, eax; ret 0x3d; 
0x0007f424: xchg ebp, eax; ret 0x40c7; 
0x0016220f: xchg ebp, eax; ret 0x48e9; 
0x00162b9f: xchg ebp, eax; ret 0x4ce9; 
0x00041840: xchg ebp, eax; ret 0x5409; 
0x000fa359: xchg ebp, eax; ret 0x548d; 
0x00196a65: xchg ebp, eax; ret 0x6c89; 
0x000bb45c: xchg ebp, eax; ret 0x6eb; 
0x00109693: xchg ebp, eax; ret 0x7c39; 
0x0005689c: xchg ebp, eax; ret 0x8366; 
0x0012a6a0: xchg ebp, eax; ret 0x8b52; 
0x0019a181: xchg ebp, eax; ret 0x940b; 
0x0003e5b8: xchg ebp, eax; ret 0x950f; 
0x000667b7: xchg ebp, eax; ret 0x9522; 
0x000b84f1: xchg ebp, eax; ret 0x9eb; 
0x000cbbc7: xchg ebp, eax; ret 0xb38b; 
0x000e5256: xchg ebp, eax; ret 0xb48d; 
0x000416e9: xchg ebp, eax; ret 0xb60f; 
0x0005a4e6: xchg ebp, eax; ret 0xbd83; 
0x000c4c1a: xchg ebp, eax; ret 0xbeb; 
0x0012a422: xchg ebp, eax; ret 0xc085; 
0x00198a98: xchg ebp, eax; ret 0xc208; 
0x0008c646: xchg ebp, eax; ret 0xc231; 
0x0015037d: xchg ebp, eax; ret 0xc483; 
0x00103729: xchg ebp, eax; ret 0xd009; 
0x0007a5b0: xchg ebp, eax; ret 0xd089; 
0x000fb74d: xchg ebp, eax; ret 0xd120; 
0x0014446a: xchg ebp, eax; ret 0xd184; 
0x00049ff8: xchg ebp, eax; ret 0xd189; 
0x000383fa: xchg ebp, eax; ret 0xd321; 
0x0019c874: xchg ebp, eax; ret 0xd589; 
0x000445ae: xchg ebp, eax; ret 0xd689; 
0x00198adf: xchg ebp, eax; ret 0xd789; 
0x000c0bc2: xchg ebp, eax; ret 0xd839; 
0x000971d9: xchg ebp, eax; ret 0xe083; 
0x00083de0: xchg ebp, eax; ret 0xe2c1; 
0x000416a0: xchg ebp, eax; ret 0xea81; 
0x00118dcb: xchg ebp, eax; ret 0xf980; 
0x000e0255: xchg ebp, eax; ret 0xf981; 
0x00153ba9: xchg ebp, eax; ret 0xfb89; 
0x00060494: xchg ebp, eax; ret 0xff83; 
0x0003545f: xchg ebp, eax; ret; 
0x000e93a0: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0013e3dd: xchg ebp, eax; rol byte ptr [ebx - 0x4614fb40], 0xe8; aaa; sub al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0011f2eb: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0011f2aa: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x001591c7: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0007dbc2: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x00157468: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0015860d: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0008d986: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0008b4f8: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001625e6: xchg ebp, eax; ror byte ptr [ecx + 0x1b803], 0; add bl, ch; ret 0xb48d; 
0x0004cfce: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x000f9aea: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0004e352: xchg ebp, eax; ror cl, 0xff; call dword ptr [eax - 0x73]; 
0x000c7943: xchg ebp, eax; ror cl, 0xff; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x000b56b2: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x0009e983: xchg ebp, eax; stc; call dword ptr [edx - 0x73]; 
0x000d995b: xchg ebp, eax; xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0x8d50; 
0x000d98a3: xchg ebp, eax; xchg dword ptr [esi], ebp; stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0006735c: xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x0006744e: xchg ebp, eax; xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00137cd3: xchg ebp, ecx; dec eax; stc; call dword ptr [eax - 0x77]; 
0x00158919: xchg ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00100e87: xchg ebp, esp; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0011e1d7: xchg ebx, eax; adc byte ptr [edx + 0x408bfff6], ah; jl 0x11e169; push esi; add al, 0x89; ret 0xe8c1; 
0x0014da10: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000a9029: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00025f6c: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dh, dh; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000824d9: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [eax + 0x1a6], bh; xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00092f88: xchg ebx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00168924: xchg ebx, eax; clc; stc; call dword ptr [edx - 0x77]; 
0x0011c6b5: xchg ebx, eax; dec ebx; stc; call dword ptr [eax - 0x18]; 
0x0013966b: xchg ebx, eax; inc eax; dec ebx; add byte ptr [eax], al; push edx; call eax; 
0x0013f074: xchg ebx, eax; inc ebp; xchg dword ptr [ebx - 0x68f0f008], eax; ret; 
0x0002c0bb: xchg ebx, eax; jb 0x2c0ea; stc; call dword ptr [edx + 0x50]; 
0x00138a2f: xchg ebx, eax; js 0x138a89; stc; dec dword ptr [ecx - 0x48b7b]; call dword ptr [edi + 0x52]; 
0x001469c4: xchg ebx, eax; mov al, byte ptr [0x3efff90d]; jmp ebx; 
0x001170d9: xchg ebx, eax; pmuludq mm7, mm7; add esp, 0x10; add esp, 0xc; ret; 
0x000f5563: xchg ebx, eax; push 0x1fff8fb; fnstcw word ptr [esi]; jmp ecx; 
0x00139574: xchg ebx, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x000dc749: xchg ebx, eax; push esp; cli; dec dword ptr [ecx + 0x1db8c2]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011d52f: xchg ebx, eax; pushal; test dh, dh; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0011d8f3: xchg ebx, eax; rcr byte ptr [ebx], 1; cmc; dec dword ptr [ebx + 0x8080]; add byte ptr [ecx - 0x6c72fbaa], cl; ret 0xf94d; 
0x00155df9: xchg ebx, eax; ret 0; 
0x0011d902: xchg ebx, eax; ret 0xf94d; 
0x0011dbf2: xchg ebx, eax; ret 0xf94f; 
0x0011e1fd: xchg ebx, eax; ret 0xf952; 
0x00048369: xchg ebx, eax; ret 6; 
0x0011dbfe: xchg ebx, eax; rol byte ptr [ecx + 0x408bfff6], 1; jl 0x11db90; push esi; add al, 0x89; ret 0xe8c1; 
0x00097347: xchg ebx, eax; rol byte ptr [edi], 0; add byte ptr [ebx + 0x3908245c], cl; ror dword ptr [edi], cl; xchg ebp, eax; ret 0xe083; 
0x00093a17: xchg ebx, eax; stc; call dword ptr [edx - 0x73]; 
0x00098a62: xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x00096de4: xchg ebx, eax; stc; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x0014da6f: xchg ebx, eax; test dword ptr [0x44ec8100], ecx; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001396f2: xchg ebx, eax; xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0006497c: xchg ebx, eax; xor bh, cl; call dword ptr [eax - 0x18]; 
0x000cba2f: xchg ebx, ebp; inc esp; stc; call dword ptr [eax + 0x55]; 
0x0008a859: xchg ebx, ecx; aas; stc; call dword ptr [eax - 0x18]; 
0x00097572: xchg ecx, eax; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x72e7db8c], cl; xchg byte ptr [ebx + edx*4 - 7], cl; dec dword ptr [ebp - 0x6bf3a6a]; call dword ptr [eax - 0x73]; 
0x001238a9: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b60c4], al; pop edi; ret; 
0x00024bb7: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x72c3dba4], cl; add dword ptr [eax], 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00170ea0: xchg ecx, eax; bnd jmp dword ptr [esi - 0x70]; 
0x00071a28: xchg ecx, eax; in al, dx; cli; jmp dword ptr [esi - 0x70]; 
0x000df2e5: xchg ecx, eax; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00070e67: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00051aee: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000d3414: xchg ecx, eax; out 0xff, eax; call dword ptr [eax + 0x51]; 
0x00126fa5: xchg ecx, eax; out dx, eax; jmp dword ptr [ebp - 0x77]; 
0x00073ea6: xchg ecx, eax; retf; cli; jmp dword ptr [esi - 0x70]; 
0x000f2b15: xchg ecx, eax; sar dl, 0xf8; dec dword ptr [ecx + 0x3ecb01d0]; jmp ebx; 
0x001179df: xchg ecx, eax; sti; dec edx; stc; call dword ptr [edx + 0x50]; 
0x001179af: xchg ecx, eax; xchg dword ptr [esi], ebp; stc; inc dword ptr [ebp - 0x17f88b40]; mov dword ptr [0x89fffffd], eax; ret 0x4c8b; 
0x000213ee: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x0017f4c1: xchg ecx, eax; xor eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000cb5f8: xchg ecx, ebx; inc esp; stc; call dword ptr [eax + 0x53]; 
0x000cb994: xchg ecx, ebx; inc esp; stc; call dword ptr [eax + 0x55]; 
0x00041056: xchg ecx, esi; das; stc; call dword ptr [eax - 0x18]; 
0x00124967: xchg edi, eax; add al, byte ptr fs:[eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00079d3c: xchg edi, eax; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub dword ptr [edx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x000d5fda: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0019014d: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d6563: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbea], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d66b4: xchg edi, eax; add dword ptr [eax], eax; add byte ptr [ecx + 0x1bbf9], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015770f: xchg edi, eax; arpl cx, di; call dword ptr [edx + 0x6a]; 
0x0008776a: xchg edi, eax; call 0x80937789; sub byte ptr [edx], bh; add byte ptr [eax], al; ret; 
0x0015f9ee: xchg edi, eax; call dword ptr [eax - 0x73]; add dword ptr [eax + 0x500000a4], -0x18; jb 0x15f9b5; bnd jmp dword ptr [ebp - 0x75]; 
0x0016a585: xchg edi, eax; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00162685: xchg edi, eax; idiv edi; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; mov eax, 1; ret; 
0x00161e8b: xchg edi, eax; je 0x161eb6; stc; dec dword ptr [ebx + 0x52530446]; push esi; call dword ptr [eax + 0xc]; 
0x00098a66: xchg edi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x000993f9: xchg edi, eax; mov eax, 0x89fffffe; inc esp; and al, 0xc; call dword ptr [edx]; 
0x000b3d42: xchg edi, eax; mov esi, edx; ret; 
0x00056138: xchg edi, eax; mov esp, 0x89fffffe; ret; 
0x0002d4a2: xchg edi, eax; mov gs, word ptr [ecx + edi*8]; call dword ptr [edx + 0x50]; 
0x00072509: xchg edi, eax; nop; ret; 
0x000ac245: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0002407e: xchg edi, eax; pop ebx; sub bh, cl; call dword ptr [edx + 0x50]; 
0x001442f7: xchg edi, eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x00139214: xchg edi, eax; push esi; pop esp; stc; call dword ptr [edx + 0x50]; 
0x00159d71: xchg edi, eax; ret 0x4bd; 
0x00159d65: xchg edi, eax; ret 0xa75; 
0x000c7386: xchg edi, eax; ret 0xbd39; 
0x00149798: xchg edi, eax; ret 0xd008; 
0x00028e62: xchg edi, eax; ret 0xd184; 
0x0003fe07: xchg edi, eax; ret 0xd284; 
0x00050498: xchg edi, eax; ret 0xf039; 
0x0013e7b0: xchg edi, eax; ret 0xf839; 
0x000ba476: xchg edi, eax; ret; 
0x001252ee: xchg edi, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x0017476a: xchg edi, eax; sbb byte ptr [ebx], cl; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x000c17df: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000bf5e6: xchg edi, eax; stc; call dword ptr [eax - 0x73]; 
0x000c14fe: xchg edi, eax; stc; call dword ptr [edx - 0x73]; 
0x0015790f: xchg edi, eax; std; dec dword ptr [ebp - 0x69c2c7d]; call dword ptr [edx + 0x6a]; 
0x0002c357: xchg edi, eax; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x0013f006: xchg edi, eax; test dword ptr [edi + edi*8 - 1], edi; push dword ptr [ecx]; fisttp dword ptr [ebx - 0x834b]; jmp dword ptr [esi - 0x7f]; 
0x00044326: xchg edi, eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0003eac4: xchg edi, eax; xor cl, bh; call dword ptr [eax - 0x73]; 
0x00085d44: xchg edi, ebx; stc; call dword ptr [eax - 0x18]; 
0x000f9380: xchg edi, ecx; dec eax; stc; call dword ptr [eax - 0x73]; 
0x0007a326: xchg edi, edi; jmp dword ptr [ecx]; 
0x000c3960: xchg edi, esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0017687a: xchg edi, esi; or al, byte ptr [eax]; mov eax, dword ptr [eax - 0x134]; mov dword ptr gs:[eax], 0x26; mov eax, 0xffffffff; ret; 
0x0012a371: xchg edi, esp; push esi; stc; call dword ptr [ebp - 1]; 
0x0009b148: xchg edx, eax; adc bl, bh; out 0xff, eax; cmovne eax, edx; ret; 
0x0009b198: xchg edx, eax; adc byte ptr [ebx], 0xe8; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009a382: xchg edx, eax; adc byte ptr [esi + 0x440fffe7], dh; ret 0x66c3; 
0x0009b2a0: xchg edx, eax; adc byte ptr [esi - 0xa], 0xff; cmovne eax, edx; ret; 
0x0010d963: xchg edx, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x1337d], cl; jmp dword ptr [ebp - 0x75]; 
0x0009a4d2: xchg edx, eax; add bh, 0xe8; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0014e285: xchg edx, eax; add byte ptr [eax], al; add bh, al; or dword ptr [eax + 0x92], 0; add byte ptr [eax], al; call esi; 
0x0014e28c: xchg edx, eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002f7b7: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x00124758: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4f763], cl; dec dword ptr [ebx - 0x4fb73]; jmp dword ptr [ebp - 1]; 
0x0009b05d: xchg edx, eax; and al, dl; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x000cdab4: xchg edx, eax; and byte ptr [edx + ebp*8], bh; call dword ptr [ecx + 0x52]; 
0x00070fbe: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0011d233: xchg edx, eax; dec esi; stc; call dword ptr [eax + 0x57]; 
0x000b5489: xchg edx, eax; in al, dx; cmp eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0009a048: xchg edx, eax; inc eax; mov bh, 0xe7; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009148e: xchg edx, eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0009b1e0: xchg edx, eax; inc eax; xor esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000832aa: xchg edx, eax; into; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0012f1fd: xchg edx, eax; jo 0x12f27c; cmc; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00099f92: xchg edx, eax; jo 0x99f5b; call 0xc24daf99; ret; 
0x00099f48: xchg edx, eax; jo 0x99fb8; call 0xc24eaf4f; ret; 
0x0009a3f8: xchg edx, eax; jo 0x9a38b; call 0xc24eb3ff; ret; 
0x0009aef2: xchg edx, eax; jo 0x9aebe; call 0xc24dbef9; ret; 
0x0009b260: xchg edx, eax; jo 0x9b294; idiv bh; cmovne eax, edx; ret; 
0x0009af30: xchg edx, eax; mov al, 0xa5; idiv bh; cmovne eax, edx; ret; 
0x000441ea: xchg edx, eax; mov dh, 0xfe; dec dword ptr [ebx - 0x72dbdb84]; xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0015a1c1: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x0009a488: xchg edx, eax; nop; iretd; out 0xff, eax; cmovne eax, edx; ret; 
0x0009af7d: xchg edx, eax; nop; jl 0x9af76; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x00048e42: xchg edx, eax; or al, byte ptr [eax]; add byte ptr [ebx - 0x72ebdbac], cl; je 0x48e74; add byte ptr [eax - 0x7c40fb73], dl; ret; 
0x0011d296: xchg edx, eax; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; xchg byte ptr [edi - 7], cl; call dword ptr [eax + 0x57]; 
0x00139b37: xchg edx, eax; pop esp; stc; call dword ptr [eax - 1]; 
0x001396f3: xchg edx, eax; pop esp; stc; call dword ptr [edx + 0x50]; 
0x0009afc2: xchg edx, eax; push eax; adc eax, 0x440ffff5; ret 0x66c3; 
0x0009b36d: xchg edx, eax; push eax; cmp al, 0xf5; dec dword ptr [edi]; inc esp; ret 0xc35b; 
0x0009a440: xchg edx, eax; push eax; pop ss; idiv bh; cmovne eax, edx; ret; 
0x0009b220: xchg edx, eax; push eax; push esi; idiv bh; cmovne eax, edx; ret; 
0x0017104a: xchg edx, eax; push esi; clc; jmp dword ptr [esi - 0x70]; 
0x0009cb42: xchg edx, eax; pushal; shr eax, 1; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0004aa8f: xchg edx, eax; ret 0x1e89; 
0x0004b441: xchg edx, eax; ret 0x689; 
0x00190026: xchg edx, eax; ret 0xb60f; 
0x000cda83: xchg edx, eax; ret 0xc281; 
0x0004a98f: xchg edx, eax; ret 0xe89; 
0x000a12f2: xchg edx, eax; ror ah, 1; call 0xc24e22f9; ret; 
0x000738b8: xchg edx, eax; sar dl, 1; jmp dword ptr [esi - 0x70]; 
0x0009b00d: xchg edx, eax; sbb byte ptr [ebp + esi*8 - 1], 0xf; inc esp; ret 0xc35b; 
0x0002536e: xchg edx, eax; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0012f292: xchg edx, eax; xor byte ptr [0x440ffff5], dl; ret 0x66c3; 
0x0009b0a2: xchg edx, eax; xor byte ptr [edi], cl; cmc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0012f1ad: xchg edx, eax; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x00087081: xchg edx, edi; dec dword ptr [ebx - 0x7872dbc4]; jl 0x8710a; stc; call dword ptr [eax - 0x73]; 
0x000887a7: xchg edx, edx; aas; stc; call dword ptr [eax - 0x18]; 
0x001244ca: xchg edx, esi; push ebp; stc; call dword ptr [eax - 0x18]; 
0x00155a65: xchg esi, eax; add ch, 0xf3; call dword ptr [edx - 0x73]; 
0x000d5dbc: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00058357: xchg esi, eax; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000fbd00: xchg esi, eax; and byte ptr [ebx], bh; in eax, dx; call dword ptr [edx + 0x6a]; 
0x00169799: xchg esi, eax; clc; stc; call dword ptr [edx - 0x77]; 
0x0003a2d7: xchg esi, eax; das; stc; call dword ptr [eax - 0x18]; 
0x0010aff3: xchg esi, eax; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00117354: xchg esi, eax; in al, 0x4a; stc; call dword ptr [edx - 0x77]; 
0x00072077: xchg esi, eax; in al, 0x7c; stc; jmp dword ptr [ebp - 0x75]; 
0x001173ae: xchg esi, eax; in eax, dx; dec edx; stc; call dword ptr [eax + 0x50]; 
0x00050ae6: xchg esi, eax; in eax, dx; std; dec dword ptr [ebx - 0x365343]; dec dword ptr [ebp - 0x6896779]; call dword ptr [eax - 0x73]; 
0x0012c90d: xchg esi, eax; inc eax; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edx + 0x50]; 
0x000c70db: xchg esi, eax; jecxz 0xc70dd; dec dword ptr [ebx - 0x363f63]; dec dword ptr [ebp - 0x36176b]; dec dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x00096de8: xchg esi, eax; lds eax, ptr [eax - 7]; call dword ptr [eax - 0x73]; 
0x0009933b: xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax - 0x148]; call dword ptr [eax]; 
0x000442e6: xchg esi, eax; mov ch, 0xfe; dec dword ptr [ebx - 0x72dbdb8c]; xchg byte ptr [eax + 0x76], ch; stc; call dword ptr [eax - 0x73]; 
0x00078735: xchg esi, eax; movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00117373: xchg esi, eax; pop ds; dec esp; stc; call dword ptr [edx - 0x77]; 
0x0014153c: xchg esi, eax; pop ebp; stc; call dword ptr [eax - 0x73]; 
0x00194a5d: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0012c9d5: xchg esi, eax; pop esi; push edi; stc; call dword ptr [edx + 0x50]; 
0x0013bba3: xchg esi, eax; ret 0x5522; 
0x0009a0d4: xchg esi, eax; ret 0xb60f; 
0x000c37ab: xchg esi, eax; ret 0xc085; 
0x0013d647: xchg esi, eax; ret 0xd008; 
0x000c37e7: xchg esi, eax; ret 0xd284; 
0x0013bb2e: xchg esi, eax; ret 0xf983; 
0x0002c51e: xchg esi, eax; ret; 
0x00155a71: xchg esi, eax; sar ch, 0xf2; call dword ptr [edx + 0x6a]; 
0x000b5be9: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000b5686: xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x00085cf2: xchg esi, eax; sub al, 2; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00086daf: xchg esi, ebp; stc; call dword ptr [eax - 0x73]; 
0x0008bfcd: xchg esi, ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x6174; 
0x00152c50: xchg esi, ecx; popal; stc; call dword ptr [eax + 0x53]; 
0x0012e6ce: xchg esi, ecx; push edi; stc; call dword ptr [ebx + 0x50]; 
0x00085d3d: xchg esi, ecx; stc; call dword ptr [eax - 0x73]; 
0x0012e683: xchg esi, edx; push edi; stc; call dword ptr [eax - 1]; 
0x0008897a: xchg esi, edx; sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x114], edx; ret; 
0x00025309: xchg esi, edx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00122555: xchg esi, esi; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0011d6d5: xchg esi, esi; dec dword ptr [ebx + 0x56897c40]; add al, 0x89; ret 0xe8c1; 
0x0008e777: xchg esi, esp; call dword ptr [ebx + 0x50]; 
0x0006e018: xchg esp, eax; add al, byte ptr [eax]; add byte ptr [ebx - 0x3eb3dbbc], cl; clc; add ch, byte ptr [ecx]; ret; 
0x000213ef: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d62a8: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0008411a: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00037a96: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x00108a16: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x982494], cl; add byte ptr [eax], al; mov esi, ebp; call dword ptr gs:[0x10]; 
0x00120a67: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0008b3d7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00070e5f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000bb93d: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00145a9f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00199e6c: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00070edd: xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi - 0x18], dl; stc; ret 0; 
0x000583d6: xchg esp, eax; add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0011d188: xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ed7d], cl; call dword ptr [eax + 0x57]; 
0x0015caa3: xchg esp, eax; and al, 0x34; add al, 0; add byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x0015dc40: xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0019a18b: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x000b8a0b: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00046b78: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add cl, ch; ret; 
0x000be61a: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x000dc2af: xchg esp, eax; and al, 0x88; add byte ptr [eax], al; add byte ptr [ecx - 0xfbbf017], cl; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00148ca6: xchg esp, eax; and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x77]; 
0x000bb93b: xchg esp, eax; and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret; 
0x00107f38: xchg esp, eax; and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00108b49: xchg esp, eax; and al, 0x98; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000bc3cb: xchg esp, eax; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fe13], al; ret; 
0x000bc6a0: xchg esp, eax; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xffee; 
0x0015a4e3: xchg esp, eax; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x000733d6: xchg esp, eax; and al, 0xd0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a5720c4], al; call dword ptr [edi + 0x56]; 
0x00157443: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000c37f3: xchg esp, eax; cwde; stc; call dword ptr [eax - 0x73]; 
0x00101474: xchg esp, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x000664bb: xchg esp, eax; idiv edi; call dword ptr [ecx + 0x6a]; 
0x0006735d: xchg esp, eax; idiv edi; call dword ptr [esi + 0x6a]; 
0x0006744f: xchg esp, eax; idiv edi; call dword ptr [esi - 0x18]; 
0x00066456: xchg esp, eax; idiv edi; dec dword ptr [ecx - 0x87773]; call dword ptr [ebx + 0x52]; 
0x000667b2: xchg esp, eax; idiv edi; dec dword ptr [edi]; xchg ebp, eax; ret 0x9522; 
0x0018b4e2: xchg esp, eax; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86b80]; sub eax, ecx; pop ebx; ret; 
0x0018dcf6: xchg esp, eax; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x0018b4e9: xchg esp, eax; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000290ff: xchg esp, eax; jo 0x290fb; call dword ptr [eax - 0x73]; 
0x00029145: xchg esp, eax; jo 0x29141; call dword ptr [eax - 0x73]; 
0x000291d1: xchg esp, eax; jo 0x291cd; call dword ptr [eax - 0x73]; 
0x000343f9: xchg esp, eax; mov bl, 0; je 0x343f6; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0002ccf3: xchg esp, eax; mov ebx, 0xfffffc5c; test edx, edx; je 0x2ccff; call edx; 
0x0002cbe1: xchg esp, eax; mov ebx, 0xfffffc60; test edx, edx; je 0x2cbf5; mov dword ptr [esp + 0xc], eax; call edx; 
0x00146967: xchg esp, eax; mov edx, dword ptr [eax + 0x1fff90d]; fidivr dword ptr [esi]; jmp edx; 
0x0014534d: xchg esp, eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0003a3e3: xchg esp, eax; popal; stc; call dword ptr [eax - 0x18]; 
0x0012ceb4: xchg esp, eax; push edi; stc; call dword ptr [eax - 1]; 
0x000c7b1f: xchg esp, eax; push es; add byte ptr [ebx - 0x363f6b], cl; dec dword ptr [ebp - 0x6674f7e]; call dword ptr [eax - 0x73]; 
0x0016e626: xchg esp, eax; ret 0x1389; 
0x0012c7cc: xchg esp, eax; ret 0x2d3c; 
0x0002c50e: xchg esp, eax; ret 0x3a3c; 
0x000f5027: xchg esp, eax; ret 0x3f8b; 
0x0012a039: xchg esp, eax; ret 0x4483; 
0x001097a6: xchg esp, eax; ret 0x4c33; 
0x0010cc41: xchg esp, eax; ret 0x4f8b; 
0x00066ea2: xchg esp, eax; ret 0x5352; 
0x000e5146: xchg esp, eax; ret 0x5422; 
0x000ca64e: xchg esp, eax; ret 0x5438; 
0x001428bf: xchg esp, eax; ret 0x5484; 
0x0002c5d3: xchg esp, eax; ret 0x5f3c; 
0x000fb15c: xchg esp, eax; ret 0x6889; 
0x000b659a: xchg esp, eax; ret 0x7c83; 
0x0006ee52: xchg esp, eax; ret 0x7f3c; 
0x000c4c74: xchg esp, eax; ret 0x8589; 
0x0012c7d3: xchg esp, eax; ret 0x8966; 
0x00145684: xchg esp, eax; ret 0x93c; 
0x000fb729: xchg esp, eax; ret 0x9588; 
0x0007806f: xchg esp, eax; ret 0x9e3b; 
0x001456be: xchg esp, eax; ret 0xa3c; 
0x0009a13c: xchg esp, eax; ret 0xb60f; 
0x000ca4e1: xchg esp, eax; ret 0xc031; 
0x00147004: xchg esp, eax; ret 0xc083; 
0x001291f4: xchg esp, eax; ret 0xc084; 
0x00034779: xchg esp, eax; ret 0xc085; 
0x00170f3a: xchg esp, eax; ret 0xc483; 
0x000a0d6a: xchg esp, eax; ret 0xc739; 
0x0002c2cb: xchg esp, eax; ret 0xca08; 
0x00070670: xchg esp, eax; ret 0xd008; 
0x0007064f: xchg esp, eax; ret 0xd009; 
0x000bf979: xchg esp, eax; ret 0xd020; 
0x0004387d: xchg esp, eax; ret 0xd120; 
0x000ebe16: xchg esp, eax; ret 0xd201; 
0x000ca7ed: xchg esp, eax; ret 0xd338; 
0x001415ee: xchg esp, eax; ret 0xdaf7; 
0x000bb4a9: xchg esp, eax; ret 0xde89; 
0x000f0ed0: xchg esp, eax; ret 0xe2c1; 
0x00153f0c: xchg esp, eax; ret 0xe2e9; 
0x0005ff64: xchg esp, eax; ret 0xf883; 
0x000df8da: xchg esp, eax; ret 0xf8c1; 
0x0009a0e1: xchg esp, eax; ret 0xfa01; 
0x00068e13: xchg esp, eax; ret 0xff52; 
0x00095c36: xchg esp, eax; ret 0xff85; 
0x0002c513: xchg esp, eax; ret; 
0x0013eca3: xchg esp, eax; rol byte ptr [eax + eax*8 + 0x5e5b0775], 0x5f; ret; 
0x0019d7c4: xchg esp, eax; rol byte ptr [eax + eax*8 - 0x3b7cf98b], 4; pop ebx; pop esi; ret; 
0x0012b28a: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x000f6aba: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0008f214: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00047d06: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0012ea71: xchg esp, eax; rol dword ptr [ebp - 0x278a760a], 0xf; sahf; ret 0xd108; 
0x00055b82: xchg esp, eax; ror byte ptr [ecx + 0xfc0840a], 0x85; ret; 
0x0008f0e3: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00037156: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x001701e7: xchg esp, eax; sar byte ptr [ebx], 0x9e; sar dh, 0xff; dec dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x00099986: xchg esp, eax; stc; call dword ptr [eax + 0x68]; 
0x0015e5c5: xchg esp, eax; stc; call dword ptr [eax - 0x73]; 
0x0006df16: xchg esp, eax; xchg byte ptr [eax], ah; retf 0xfff8; add edx, ebx; jmp edx; 
0x0018ffdc: xchg esp, eax; xor ah, byte ptr [eax - 0x76000722]; ret; 
0x000b9b40: xchg esp, ebx; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000ffca3: xchg esp, ecx; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x000ffca3: xchg esp, ecx; dec ecx; stc; call dword ptr [eax - 0x18]; sar bl, cl; bnd jmp dword ptr [esi - 0x70]; 
0x0002c7f1: xchg esp, ecx; jb 0x2c7ee; call dword ptr [eax + 0x56]; 
0x0002cf8e: xchg esp, ecx; jb 0x2cf8b; call dword ptr [eax + 0x56]; 
0x00026ebc: xchg esp, edi; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000279bf: xchg esp, edx; jo 0x279bc; call dword ptr [eax - 0x73]; 
0x000279e7: xchg esp, edx; jo 0x279e4; call dword ptr [eax - 0x73]; 
0x00027b12: xchg esp, edx; jo 0x27b0f; call dword ptr [eax - 0x73]; 
0x00027b6a: xchg esp, edx; jo 0x27b67; call dword ptr [eax - 0x73]; 
0x00027b8d: xchg esp, edx; jo 0x27b8a; call dword ptr [eax - 0x73]; 
0x00027bb0: xchg esp, edx; jo 0x27bad; call dword ptr [eax - 0x73]; 
0x0002444d: xchg esp, edx; outsb dx, byte ptr [esi]; stc; jmp dword ptr [esi - 0x77]; 
0x00026f25: xchg esp, edx; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00176237: xchg esp, edx; sahf; stc; call dword ptr [eax - 0x73]; 
0x00139e7d: xchg esp, esi; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00139fec: xchg esp, esi; inc dword ptr [ebx - 0x769aef3c]; pop ebx; pop esi; pop edi; ret; 
0x00130d46: xchg esp, esi; jmp dword ptr [esi - 0x70]; 
0x00151d5e: xchg esp, esi; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x000bd699: xchg esp, esi; xchg esi, eax; stc; call dword ptr [eax - 0x73]; 
0x000e41da: xchg esp, esp; inc edi; stc; call dword ptr [eax - 0x18]; 
0x00082181: xend; xor eax, eax; add esp, 0xc; ret; 
0x0011ee7b: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000c97be: xlatb; add byte ptr [ecx], bh; ret; 
0x00102080: xlatb; dec dword ptr [ebx - 0x7872dbc4]; cwde; sahf; stc; call dword ptr [eax - 0x73]; 
0x0015cb68: xlatb; dec dword ptr [ecx - 0x7c72dbfc]; inc ebx; stc; call dword ptr [esi + 0x57]; 
0x0002172a: xlatb; dec eax; and byte ptr [eax], al; lea eax, [eax - 0x69214]; ret; 
0x000a59c5: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00083e53: xlatb; jae 0x83e20; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000b324c: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x00193085: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000b2e41: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000cda7f: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001773cd: xlatb; movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; pop ebx; ret; 
0x00122c05: xlatb; out dx, eax; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x001175d8: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00129bba: xlatb; push esi; stc; call dword ptr [eax - 1]; 
0x00129b6d: xlatb; push esi; stc; call dword ptr [edx + 0x50]; 
0x00192b62: xlatb; ret 0x498d; 
0x000b2a68: xlatb; ret 0xc085; 
0x000a19a6: xlatb; ret; 
0x001949ac: xlatb; retf 0xf66; xlatb; ret; 
0x000b32ff: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x00193146: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b2c30: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000b2f05: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000b2ed6: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00193185: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x00192c9e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000b2bf6: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x00193da9: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x193dc0; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000b2e72: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x001935f4: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x193220; xor eax, eax; ret; 
0x00160939: xlatb; stc; call dword ptr [eax - 0x73]; 
0x0010d765: xlatb; sub ecx, esi; jmp dword ptr [ebp - 0x77]; 
0x00130d45: xlatb; xchg esp, esi; jmp dword ptr [esi - 0x70]; 
0x0013dd45: xlatb; xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x0013aeeb: xor ah, 0x5c; stc; call dword ptr [eax + 0x53]; 
0x0002195e: xor ah, 0x6d; stc; call dword ptr [eax - 0x18]; 
0x000984da: xor ah, 0xff; jmp dword ptr [esi - 0x70]; 
0x0018ffdd: xor ah, byte ptr [eax - 0x76000722]; ret; 
0x0011edd1: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001754d7: xor al, 0; out dx, al; call dword ptr [eax + 0x6a]; 
0x00081e43: xor al, 0x19; add byte ptr [eax], al; ret; 
0x000e9567: xor al, 0x24; call 0x20140; add esp, 0x14; pop ebx; pop esi; ret; 
0x00155025: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002b7bc: xor al, 0x24; call ebx; 
0x00139186: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0016e4a6: xor al, 0x24; ret; 
0x0012e9d7: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0004be97: xor al, 0x29; ret 0x5489; 
0x00054d27: xor al, 0x2b; jl 0x54d4f; cmp byte ptr [ebx - 0x7bf00008], al; ret; 
0x000b4d1b: xor al, 0x2d; ljmp 0:0x8381f6ff; add byte ptr [edi + ecx], al; inc ebp; ret 0x66c3; 
0x0012319b: xor al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0002407a: xor al, 0x31; ror byte ptr [ebp - 0x6d5a469], cl; call dword ptr [edx + 0x50]; 
0x000842c8: xor al, 0x38; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x000c8a02: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0010984e: xor al, 0x39; ret 0xc389; 
0x0019d715: xor al, 0x43; add byte ptr [eax], al; call 0x20140; add esp, 0x18; pop ebx; ret; 
0x000de51b: xor al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00078205: xor al, 0x50; call ebx; 
0x000b5776: xor al, 0x50; push dword ptr [ebp + 8]; call ebx; 
0x000b53d8: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000b59c4: xor al, 0x50; push edi; call esi; 
0x000b59bb: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push edi; call esi; 
0x001305c9: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x74900; add esp, 0x2c; ret; 
0x0012f609: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x79920; add esp, 0x2c; ret; 
0x001561c0: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0012ac39: xor al, 0x56; stc; call dword ptr [eax - 1]; 
0x00135249: xor al, 0x5a; stc; call dword ptr [eax - 0x18]; 
0x0016b32c: xor al, 0x5b; pop esi; jmp eax; 
0x00113de7: xor al, 0x5b; pop esi; pop edi; ret; 
0x0003a97c: xor al, 0x5b; pop esi; ret 4; 
0x000dc863: xor al, 0x5b; pop esi; ret; 
0x00157a89: xor al, 0x5b; ret; 
0x0003a815: xor al, 0x74; stc; call dword ptr [eax - 0x18]; 
0x000c8a05: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x0013e29a: xor al, 0x7f; int1; call dword ptr [eax - 0x73]; 
0x001697b3: xor al, 0x83; in al, dx; or byte ptr [ebp - 0x69a164a], cl; call dword ptr [esi + 0x53]; 
0x0003aa2a: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00037d57: xor al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00025213: xor al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00071dc7: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00143721: xor al, 0x83; ret 0x8501; 
0x0007d153: xor al, 0x83; ret 0x8901; 
0x00029c1f: xor al, 0x83; ret 0x8904; 
0x00029663: xor al, 0x83; ret 0xc704; 
0x00170103: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x5675; 
0x000905a9: xor al, 0x83; stc; call dword ptr [eax - 0x18]; 
0x0010849c: xor al, 0x89; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00113283: xor al, 0x89; dec eax; push eax; mov dword ptr [eax + 0x54], edx; xor eax, eax; ret; 
0x001151a6: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115356: xor al, 0x89; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00123359: xor al, 0x89; inc esp; and al, 8; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011527c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x0011542c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x0010210c: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021dc: xor al, 0x89; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x000ecbb2: xor al, 0x89; je 0xecbda; cmp al, 0x29; ret 0x448b; 
0x0009852d: xor al, 0x89; ret; 
0x00077a1c: xor al, 0x8b; adc esi, esi; ret 0xf08; 
0x0011c4db: xor al, 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x000cd723: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x0011fb16: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000d5e38: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0015fed8: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00093dc8: xor al, 0x8d; add byte ptr [ebx], 0x41; stc; call dword ptr [eax - 0x18]; 
0x000f9918: xor al, 0x8d; dec esp; and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00176944: xor al, 0x8d; jl 0x17696c; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00151d5c: xor al, 0x8d; xchg esp, esi; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x001375a8: xor al, 0x8f; out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax + 0x57], edi; stc; call dword ptr [eax + 0x6a]; 
0x00098a61: xor al, 0x93; stc; dec dword ptr [ebp - 0x6bf3a69]; call dword ptr [eax - 0x73]; 
0x0012f1a4: xor al, 0x9e; cmc; inc dword ptr [ebx - 0x6d72fe1d]; xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x000fa8f4: xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0013dfa1: xor al, 0xa8; stc; call dword ptr [eax - 0x73]; 
0x0013f329: xor al, 0xa9; stc; call dword ptr [ebp - 1]; 
0x0014a502: xor al, 0xab; stc; call dword ptr [eax - 0x18]; 
0x000d78c8: xor al, 0xae; cli; jmp dword ptr [esi - 0x70]; 
0x0011f4f7: xor al, 0xb8; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f697: xor al, 0xb8; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f5c7: xor al, 0xb8; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00123f76: xor al, 0xb8; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001020e0: xor al, 0xb8; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021b0: xor al, 0xb8; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000dc588: xor al, 0xb8; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001226a3: xor al, 0xe8; aaa; cmc; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00122328: xor al, 0xe8; mov dl, 0xf8; cmc; dec dword ptr [ebp - 0x76fbdbb4]; ret 0x448b; 
0x00122273: xor al, 0xe8; stc; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x00122553: xor al, 0xe8; xchg esi, esi; cmc; dec dword ptr [ebp - 0x76f3dbb4]; ret 0x448b; 
0x0012cca0: xor al, 0xef; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0015eb63: xor al, 0xf3; call dword ptr [edx - 0x73]; 
0x0009af59: xor al, 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0014da9a: xor al, 0xf9; call dword ptr [eax + 0x52]; 
0x000d912c: xor al, 0xf9; call dword ptr [eax - 0x18]; 
0x0002274f: xor al, 0xf; add byte ptr [eax], al; ret; 
0x0002fe1e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0002fdfe: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x0002fdde: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0002fd5e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0002fd9e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x0002fcfe: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0002fd7e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0002fd3e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0002fcbe: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x0002fd1e: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x0002fdbe: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x0002fcde: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0003d65f: xor al, 0xf; scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x000b5b1e: xor al, 0xff; je 0xb5b46; inc eax; push edi; call esi; 
0x000c88f8: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0010a6d7: xor al, 1; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00038b73: xor al, 1; push esi; call edi; 
0x000fdb54: xor al, 3; add byte ptr [ebx - 0x6e373], cl; dec dword ptr [ebx - 0x1137f]; jmp dword ptr [ebp - 0x39]; 
0x0015caa5: xor al, 4; add byte ptr [eax], al; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0005138f: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0011e403: xor al, al; or eax, ecx; ret; 
0x000aaf7a: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x0015baaf: xor al, byte ptr [ebx + 0x438b08ec]; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x000d8947: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x00123042: xor al, byte ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000d7431: xor al, byte ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x00157655: xor al, byte ptr [ebx - 0x72affb14]; cmp dword ptr [eax + 0x57], -7; call dword ptr [eax + 0x6a]; 
0x00107f3f: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015abfa: xor al, byte ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00057543: xor al, ch; aaa; pop es; add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x000c9cd5: xor al, ch; aad 0x22; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000586e2: xor al, ch; cwde; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9c35: xor al, ch; jne 0xc9c5c; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9d22: xor al, ch; mov byte ptr [edx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00057693: xor al, ch; out 0x17, eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00133878: xor al, ch; ret 0xeec8; 
0x000ef9e8: xor al, ch; ret 0xfff1; 
0x000d9f87: xor al, ch; ret; 
0x000c9c82: xor al, ch; sub byte ptr [ebx], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001294f9: xor al, dh; call dword ptr [eax - 1]; 
0x000b5694: xor bh, 0x43; stc; call dword ptr [eax - 0x18]; 
0x00131034: xor bh, 0x58; stc; call dword ptr [eax - 0x18]; 
0x000a529c: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x0014ead3: xor bh, al; inc esp; ret 4; 
0x0013ddda: xor bh, bh; dec dword ptr [ebp - 0x6579f79]; call dword ptr [eax - 0x73]; 
0x00022562: xor bh, bh; jae 0x2256a; call esi; 
0x000817ce: xor bh, bh; je 0x817f6; cmp al, 0x51; call eax; 
0x0013dd46: xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x0010ac39: xor bh, bh; jne 0x10ac49; call dword ptr [ebp + 0x24]; 
0x0010af11: xor bh, bh; jne 0x10af21; call dword ptr [ebp + 0x24]; 
0x0010af82: xor bh, bh; jne 0x10af92; call dword ptr [ebp + 0x24]; 
0x0010bc69: xor bh, bh; jne 0x10bc79; call dword ptr [ebp + 0x24]; 
0x0010bf41: xor bh, bh; jne 0x10bf51; call dword ptr [ebp + 0x24]; 
0x0010bfb2: xor bh, bh; jne 0x10bfc2; call dword ptr [ebp + 0x24]; 
0x001127e9: xor bh, bh; jne 0x1127f9; call dword ptr [ebp + 0x24]; 
0x00112ac1: xor bh, bh; jne 0x112ad1; call dword ptr [ebp + 0x24]; 
0x00112b32: xor bh, bh; jne 0x112b42; call dword ptr [ebp + 0x24]; 
0x000b2571: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x0008f7bc: xor bh, byte ptr [eax + 3]; add esp, 0xc; ret; 
0x0002afc2: xor bh, byte ptr [ecx]; ret; 
0x00058925: xor bh, cl; call dword ptr [eax + 0x56]; 
0x0005b668: xor bh, cl; call dword ptr [eax - 0x18]; 
0x00064976: xor bh, cl; call dword ptr [eax - 0x73]; 
0x00058bd3: xor bh, cl; call dword ptr [ebx + 0x50]; 
0x00058ae0: xor bh, cl; call dword ptr [ecx + 0x50]; 
0x000ea1ce: xor bh, cl; call dword ptr [edx + 0x52]; 
0x00058d23: xor bh, cl; call dword ptr [esi - 0x77]; 
0x00035bc0: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0016e21c: xor bl, ch; inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0002ff46: xor byte ptr [0x200], al; mov dword ptr gs:[ecx], eax; pop ebx; ret; 
0x0012f293: xor byte ptr [0x440ffff5], dl; ret 0x66c3; 
0x000b4fa8: xor byte ptr [0xe580ffea], ch; add cl, byte ptr [ebp - 0x91f1f6e]; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000fb8a8: xor byte ptr [0xec830000], cl; or byte ptr [ebp - 0x67343], cl; call dword ptr [edi - 1]; 
0x0010806f: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001081b3: xor byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; mov edx, edi; call dword ptr gs:[0x10]; 
0x00114796: xor byte ptr [eax + 0x154], bh; mov dword ptr [esp + 0x18], edx; mov esi, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009b037: xor byte ptr [eax + 0x26], 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x0012f1d7: xor byte ptr [eax + 0x34], 0xf5; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x000fc4df: xor byte ptr [eax + 0x43], 0xed; call dword ptr [eax + 0x6a]; 
0x00142e93: xor byte ptr [eax + 0x64bbfd5f], cl; add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x0008226c: xor byte ptr [eax + 0x7e], 0xf9; call dword ptr [eax - 0x18]; 
0x00115ccf: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x00115d6f: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x000d939f: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x000de0c4: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x000de174: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x000ddd5b: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x000dddfb: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x00108eb7: xor byte ptr [eax + 0xdd], bh; mov ecx, esi; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00044342: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg al, ch; je 0x44345; call dword ptr [eax - 0x18]; 
0x00040fe7: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x40fea; call dword ptr [eax - 0x18]; 
0x0004747e: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x47481; call dword ptr [eax - 0x18]; 
0x00050c84: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0x50c87; call dword ptr [eax - 0x18]; 
0x000ba8bd: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xba8c0; call dword ptr [eax - 0x18]; 
0x000c03f8: xor byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebp; je 0xc03fb; call dword ptr [eax - 0x18]; 
0x000d5b35: xor byte ptr [eax - 0x17], dl; cdq; loope 0xd5b3a; call dword ptr [ecx + 0x52]; 
0x000d5b3f: xor byte ptr [eax - 0x17], dl; hlt; out 0xff, al; call dword ptr [ecx + 0x52]; 
0x000b5684: xor byte ptr [eax - 0x6a], 0xf9; call dword ptr [eax - 0x73]; 
0x0009c42b: xor byte ptr [eax - 1], 0x2a; cmp eax, edx; jne 0x9c428; mov eax, ecx; ret; 
0x00085c61: xor byte ptr [eax - 3], 0xe5; call dword ptr [eax - 0x73]; 
0x0009b347: xor byte ptr [eax], 0x2e; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00102c25: xor byte ptr [eax], 0xcd; in eax, dx; call dword ptr [eax - 0x73]; 
0x0004a55d: xor byte ptr [eax], al; add byte ptr [eax + 0x180], bh; call dword ptr gs:[0x10]; 
0x000f58c7: xor byte ptr [eax], al; add byte ptr [eax], al; add al, al; call 0xfe1ddd4; xchg esp, eax; ret 0xd020; 
0x00147766: xor byte ptr [eax], al; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0015f537: xor byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000b2570: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0007f639: xor byte ptr [ebp + 0x2c], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000c89f0: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00071065: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x00023f8b: xor byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000accc0: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000bd697: xor byte ptr [ebp - 0x6690b79], cl; call dword ptr [eax - 0x73]; 
0x000bc932: xor byte ptr [ebp - 0x6690b7f], cl; call dword ptr [eax - 0x73]; 
0x000b9b3e: xor byte ptr [ebp - 0x6692379], cl; call dword ptr [eax - 0x73]; 
0x000ba987: xor byte ptr [ebp - 0x689bb79], cl; call dword ptr [eax - 0x73]; 
0x000bd746: xor byte ptr [ebp - 0x689bb7f], cl; call dword ptr [eax - 0x73]; 
0x00139b34: xor byte ptr [ebp - 0x6a36d80], cl; call dword ptr [eax - 1]; 
0x0011c2ca: xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax + 0x6a]; 
0x0011be83: xor byte ptr [ebp - 0x6a4607d], cl; call dword ptr [eax - 1]; 
0x0011c462: xor byte ptr [ebp - 0x6a99c7d], cl; call dword ptr [eax + 0x6a]; 
0x00109618: xor byte ptr [ebp - 0x6b5977a], cl; call dword ptr [eax - 0x18]; 
0x000f2bb2: xor byte ptr [ebp - 0x6b78a79], cl; dec dword ptr [ebp - 0x6b7af71]; call dword ptr [eax - 0x77]; 
0x000daf00: xor byte ptr [ebp - 0x6b9fe7d], cl; call dword ptr [eax + 0x56]; 
0x000d8c51: xor byte ptr [ebp - 0x6ba4d7b], cl; call dword ptr [eax + 0x53]; 
0x000cf793: xor byte ptr [ebp - 0x6ba8580], cl; call dword ptr [eax + 0x56]; 
0x000cf8bb: xor byte ptr [ebp - 0x6ba8e80], cl; call dword ptr [eax + 0x56]; 
0x000f2e42: xor byte ptr [ebp - 0x6d17879], cl; dec dword ptr [ebp - 0x6c15b71]; call dword ptr [eax - 0x17]; 
0x0002f7b2: xor byte ptr [ebp - 0x6d77f040], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6a8877d], cl; call dword ptr [esi - 1]; 
0x0002fc3f: xor byte ptr [ebx + 0x2009084], cl; add byte ptr [eax], al; ret; 
0x00160ee6: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0010cf25: xor byte ptr [ebx + 0x4d8110c4], al; sub byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x13380], cl; jmp dword ptr [ebp - 0x39]; 
0x00157d6a: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x0006b6f0: xor byte ptr [ebx + 0x575104ec], al; push dword ptr [ebp - 0x8a0]; call edx; 
0x000b2126: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000aece1: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x00075a25: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024787: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00035b1e: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0012b9ee: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x000298bf: xor byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x00078058: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000d5e8f: xor byte ptr [ebx + 0x6c8d08ec], al; and al, 0xc; push ebp; push ebx; call eax; 
0x0016326d: xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00079cec: xor byte ptr [ebx + 0xb], dh; add byte ptr [ebp - 0x6820f7d], cl; call dword ptr [eax - 0x73]; 
0x0003d65b: xor byte ptr [ebx + 0xf342454], cl; scasd eax, dword ptr es:[edi]; fmul dword ptr [ebx - 0x50f0dbfc]; ret 0xc301; 
0x000b9c40: xor byte ptr [ebx - 0x13379], cl; jmp dword ptr [ebp - 0x39]; 
0x00143597: xor byte ptr [ebx - 0x1337b], cl; jmp dword ptr [ebp - 0x39]; 
0x000577f9: xor byte ptr [ebx - 0x1337d], cl; dec dword ptr [ebx - 0xd34d]; dec dword ptr [ebx - 0xb755]; jmp dword ptr [ebp - 0x75]; 
0x000bca55: xor byte ptr [ebx - 0x1337f], cl; jmp dword ptr [ebp - 0x39]; 
0x00147573: xor byte ptr [ebx - 0x17b3dba4], cl; ret; 
0x00161d74: xor byte ptr [ebx - 0x17e7dba4], cl; ret 0xebe3; 
0x0004dbb0: xor byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0005edf0: xor byte ptr [ebx - 0x4577b], cl; inc dword ptr [ebp + 0x20850fc0]; add al, byte ptr [eax]; add byte ptr [ebx - 0x59b7b], cl; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x39]; 
0x000ff19f: xor byte ptr [ebx - 0x46f7b], cl; jmp dword ptr [ebp - 0x7d]; 
0x001087cf: xor byte ptr [ebx - 0x47c3db84], cl; mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f4f3: xor byte ptr [ebx - 0x47cbdbb4], cl; add byte ptr [ecx], al; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f693: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0011f5c3: xor byte ptr [ebx - 0x47cbdbb4], cl; cmp eax, dword ptr [ecx]; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x001020dc: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ah, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x001021ac: xor byte ptr [ebx - 0x47cbdbb4], cl; mov ch, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; call dword ptr gs:[0x10]; 
0x000dc584: xor byte ptr [ebx - 0x47cbdbb4], cl; sbb al, 1; add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov esi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000ddd57: xor byte ptr [ebx - 0x47cfdba4], cl; aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c3c2b: xor byte ptr [ebx - 0x677b], cl; jmp dword ptr [ebp - 0x75]; 
0x001262e9: xor byte ptr [ebx - 0x677d], cl; jmp dword ptr [ebp - 0x75]; 
0x0003fe02: xor byte ptr [ebx - 0x68f0f606], al; ret 0xd284; 
0x00123f6a: xor byte ptr [ebx - 0x72c7dbac], cl; je 0x123f96; or byte ptr [ebx - 0x47cbdb84], cl; jne 0x123f7a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f9914: xor byte ptr [ebx - 0x72cbdb8c], cl; dec esp; and al, 0xc; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x00176940: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x17696c; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00137561: xor byte ptr [ebx - 0x72efdbbc], cl; add byte ptr [edx], 0x4a; stc; call dword ptr [eax + 0x6a]; 
0x00137890: xor byte ptr [ebx - 0x72efdbbc], cl; sbb cl, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x00077a18: xor byte ptr [ebx - 0x74cbdb8c], cl; adc esi, esi; ret 0xf08; 
0x00108498: xor byte ptr [ebx - 0x76cbdbb4], cl; cli; mov dword ptr [esp + 8], eax; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001151a2: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115352: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 0xc; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00115278: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14d; call dword ptr gs:[0x10]; 
0x00115428: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0x14e; call dword ptr gs:[0x10]; 
0x00102108: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb4; call dword ptr gs:[0x10]; 
0x001021d8: xor byte ptr [ebx - 0x76cbdbb4], cl; inc esp; and al, 8; mov edx, dword ptr [esp + 0x38]; mov eax, 0xb5; call dword ptr gs:[0x10]; 
0x00145816: xor byte ptr [ebx - 0x7872f714], al; cmp ch, byte ptr [edi]; stc; call dword ptr [eax + 0x56]; 
0x00048e3d: xor byte ptr [ebx - 0x78f0f607], al; ret 0xa; 
0x000e7113: xor byte ptr [ebx - 0x7bf0d208], al; ret; 
0x0007a2ba: xor byte ptr [ebx - 6], ch; jmp dword ptr [esi - 0x70]; 
0x001377d8: xor byte ptr [ebx], 0x5b; stc; call dword ptr [eax - 0x42]; 
0x001080ad: xor byte ptr [ecx + 0x244489ea], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x001081fd: xor byte ptr [ecx + 0x244489fa], cl; or byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x0019553f: xor byte ptr [ecx + 0x24748bf1], cl; or al, 9; ret; 
0x00075a20: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000267b2: xor byte ptr [ecx + 0x310c2454], cl; fisttp dword ptr [ecx - 0x76bfdbbc]; ret 0xb60f; 
0x000fe46a: xor byte ptr [ecx + 0x36cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00122404: xor byte ptr [ecx + 0x448b2404], cl; and al, 0x38; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cf8bd: xor byte ptr [ecx + 0x45], 0xf9; call dword ptr [eax + 0x56]; 
0x001473c9: xor byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ca9d4: xor byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0008d356: xor byte ptr [ecx + 0x90c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001145a4: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x0015ce4a: xor byte ptr [ecx + esi*8], 0xff; add esp, 0x18; pop ebx; ret; 
0x000d5aae: xor byte ptr [ecx - 0x17], dl; ret 0xffe5; 
0x0008fd5a: xor byte ptr [ecx - 0x3b7c0001], 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00096f50: xor byte ptr [ecx - 0x6472c7ab], cl; rol byte ptr [edi], 0; add byte ptr [ecx], bh; fisttp qword ptr [ebp - 0x6af0f798]; ret; 
0x00108ef0: xor byte ptr [ecx - 0x7615760f], cl; inc esp; and al, 8; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0015ac36: xor byte ptr [ecx - 0xd], cl; call dword ptr [eax + 0x55]; 
0x0014e176: xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x0014e176: xor byte ptr [ecx], 0x61; stc; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x0016e512: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x0008b105: xor byte ptr [ecx], 0xc0; ret; 
0x0010a492: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b2f65: xor byte ptr [ecx], al; ret 0x267c; 
0x000c89ed: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000e876c: xor byte ptr [ecx], bh; ret 0x4e0f; 
0x0014ea7c: xor byte ptr [ecx], bh; ret 0x840f; 
0x000e92c6: xor byte ptr [ecx], bh; ret; 
0x000f5f42: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x001640d9: xor byte ptr [ecx], ch; ret 0x5356; 
0x0004bfda: xor byte ptr [ecx], ch; ret 0x5489; 
0x00125c72: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0012661a: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x000de869: xor byte ptr [ecx], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x00118f4a: xor byte ptr [ecx], dh; stc; call dword ptr [eax - 0x18]; 
0x000512d5: xor byte ptr [ecx], dh; stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x000f4e95: xor byte ptr [edi + 0x48], 0xf9; call dword ptr [eax - 1]; 
0x000ab590: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a16d4: xor byte ptr [edi + 0x5e], bl; ret; 
0x00097f14: xor byte ptr [edi + 2], 0; add dh, dh; ret; 
0x0016ee26: xor byte ptr [edi - 0x18], dl; jae 0x16ee62; int1; jmp dword ptr [ebp - 0x75]; 
0x000f5b8a: xor byte ptr [edi - 0x18], dl; jmp dword ptr [esi - 1]; 
0x00058ad5: xor byte ptr [edi - 1], 0xff; inc dword ptr [ebx - 0x7a72fb14]; inc ecx; xor bh, cl; call dword ptr [ecx + 0x50]; 
0x0009b0a3: xor byte ptr [edi], cl; cmc; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000b2cb2: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000a5166: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000c4c0e: xor byte ptr [edi], cl; test byte ptr [ebx], bh; adc dword ptr [eax], eax; add byte ptr [ebp + 0xff189ff], al; xchg ebp, eax; ret 0xbeb; 
0x0004db52: xor byte ptr [edi], cl; test byte ptr [edi - 0x76fffffd], ah; ret; 
0x001097a4: xor byte ptr [edi], cl; xchg esp, eax; ret 0x4c33; 
0x0009a13a: xor byte ptr [edi], cl; xchg esp, eax; ret 0xb60f; 
0x00034777: xor byte ptr [edi], cl; xchg esp, eax; ret 0xc085; 
0x0009a0df: xor byte ptr [edi], cl; xchg esp, eax; ret 0xfa01; 
0x0009a168: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000818bf: xor byte ptr [edx + 0x51], dl; call eax; 
0x00115e17: xor byte ptr [edx - 1], bh; mov eax, 0xd0; mov ebx, edx; call dword ptr gs:[0x10]; 
0x00115ee7: xor byte ptr [edx - 1], bh; mov eax, 0xd2; mov ebx, edx; call dword ptr gs:[0x10]; 
0x0002e95e: xor byte ptr [edx], 0x2d; stc; call dword ptr [eax - 0x18]; 
0x0005b667: xor byte ptr [edx], 0xf9; call dword ptr [eax - 0x18]; 
0x00085ced: xor byte ptr [edx], al; add byte ptr [eax], al; lea edx, [esi + 0x22c]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0019314c: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0003e2b9: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x41b60; add esp, 0x1c; ret; 
0x0003e319: xor byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x44d50; add esp, 0x1c; ret; 
0x000b6124: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push esi; call ebx; 
0x0018e8e1: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x00192b5f: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000b2b7b: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000db147: xor byte ptr [esi - 0x15], dl; call dword ptr [eax - 0x18]; 
0x0012f1ae: xor byte ptr [esi*8 - 0x3dbbf001], bh; pop ebx; ret; 
0x0009b348: xor byte ptr [esi], ch; cmc; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00192e06: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x0015cf16: xor ch, ah; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000b3056: xor ch, ch; add eax, ecx; pop edi; ret; 
0x00102c26: xor ch, cl; in eax, dx; call dword ptr [eax - 0x73]; 
0x000e103a: xor cl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001739f2: xor cl, 0x47; stc; call dword ptr [eax - 0x18]; ret; 
0x000826b8: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008274a: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008274a: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x00084416: xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x00083f87: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0008492a: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008ad22: xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x001094c0: xor cl, 0xff; ret; 
0x0003fbd7: xor cl, bh; call dword ptr [eax + 0x57]; 
0x00040493: xor cl, bh; call dword ptr [eax - 0x18]; 
0x000b9b55: xor cl, bh; call dword ptr [eax - 0x18]; and bl, byte ptr [ebp - 9]; jmp dword ptr [esi - 0x70]; 
0x00043632: xor cl, bh; call dword ptr [eax - 0x18]; inc ebp; ret 0xfffe; 
0x0003eac6: xor cl, bh; call dword ptr [eax - 0x73]; 
0x00047992: xor cl, bh; call dword ptr [esi + 0x6a]; 
0x0003fba1: xor cl, bh; dec dword ptr [ebp - 0x35f49]; call dword ptr [esi + 0x6a]; 
0x00056ead: xor cl, bh; dec dword ptr [ecx - 0x9ebdb8c]; ret 0xf50; 
0x0011ac65: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x00031387: xor cl, byte ptr [eax]; add byte ptr [ebx - 0x3f7cef3c], al; sbb al, 0x89; loope 0x3131c; ret; 
0x000a109a: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x0009b3b1: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000a0fe2: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0005b1ec: xor cl, ch; push 0x83fffff4; in al, dx; or al, 0x89; lea ecx, [edx + edi*8 - 1]; call dword ptr [ecx - 0x18]; 
0x0005d5cf: xor cl, ch; sar esi, 0xff; dec dword ptr [ebx - 0x59b7b]; dec dword ptr [ebx - 0x5a34b]; dec dword ptr [ebx - 0x13380]; jmp dword ptr [ebp - 0x77]; 
0x000d3412: xor cl, ch; xchg ecx, eax; out 0xff, eax; call dword ptr [eax + 0x51]; 
0x000b1733: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x00154812: xor dh, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00154912: xor dh, 0x62; stc; call dword ptr [eax - 0x18]; 
0x000a979c: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00155c55: xor dh, bh; bnd call dword ptr [ecx - 0x73]; 
0x0015ed6a: xor dh, bl; call dword ptr [eax - 0x48]; 
0x0015ec05: xor dh, bl; call dword ptr [edx - 0x73]; 
0x0015f06b: xor dh, bl; call dword ptr [edx - 0x75]; 
0x00169fea: xor dh, byte ptr [eax - 4]; jmp dword ptr [esi - 0x70]; 
0x001495fd: xor dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0013b8ea: xor dl, byte ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x0019cc0b: xor dword ptr [0xc483ffe8], esi; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000889c7: xor dword ptr [eax + 0x29], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x0015eb61: xor dword ptr [eax + 0x34], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0007b1ca: xor dword ptr [eax + 0x4e], 0xffffffe5; call dword ptr [eax - 0x73]; 
0x00127726: xor dword ptr [eax + 0x56], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0012789c: xor dword ptr [eax + 0x56], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000942e1: xor dword ptr [eax - 0x2a], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x00094251: xor dword ptr [eax - 0x2b], 0xffffffe6; call dword ptr [eax + 0x56]; 
0x000485c9: xor dword ptr [eax - 0x39ffffe8], 4; or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000fde60: xor dword ptr [eax - 0x62], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0015a4dd: xor dword ptr [eax - 0x73000000], 0xffffff94; and al, 0xac; add byte ptr [eax], al; add byte ptr [edx + 0x56], dl; call dword ptr [eax + 4]; 
0x0013de38: xor dword ptr [eax - 0x73], edx; adc byte ptr [eax + ebp*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000e64ff: xor dword ptr [eax - 0xa], 0xfffffff8; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000cc2e0: xor dword ptr [eax], 0xffffff99; stc; call dword ptr [esi + 0x50]; 
0x001265f5: xor dword ptr [ebp - 0x76ea8b37], eax; ret; 
0x000745e7: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x001683e2: xor dword ptr [ebx + 0x5e5b14c4], eax; ret; 
0x0016bf0b: xor dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x001147c0: xor dword ptr [ebx + 0x5e5b20c4], eax; pop edi; ret; 
0x0007105e: xor dword ptr [ebx + 0x74ff04ec], eax; and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00127f5f: xor dword ptr [ebx - 0x1334a], ecx; jmp dword ptr [ebp - 0x75]; 
0x0011442e: xor dword ptr [ebx - 0x47dfdba4], ecx; add byte ptr ss:[eax], al; add byte ptr [ecx + 0x5409], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00023b34: xor dword ptr [ebx], 0x2a; stc; call dword ptr [eax - 0x18]; 
0x000875bb: xor dword ptr [ecx + 0x3f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002f62b: xor dword ptr [ecx + 0x5f5e5b10], ecx; ret; 
0x0004b4f6: xor dword ptr [ecx - 0x387cccfc], ecx; add al, 0x83; ret; 
0x0014e177: xor dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; 
0x0014e177: xor dword ptr [ecx - 7], esp; call dword ptr [eax - 0x18]; call dword ptr [esi]; 
0x0010a4f7: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ac2ab: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00094d7f: xor dword ptr [ecx], edi; ret; 
0x00144337: xor dword ptr [edi + 0x2d], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x000fa8eb: xor dword ptr [edi + 3], esp; add byte ptr [ebx - 0x7872dbc4], cl; xor al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x0015f9d9: xor dword ptr [edi + edi*8], 0xffffffff; inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000db501: xor dword ptr [edi + edi], 0; add byte ptr [eax - 0x73], dl; cmp dword ptr [edi + edi], 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax], 0x71; bnd call dword ptr [eax - 0x73]; 
0x0002b14b: xor dword ptr [edi], eax; add byte ptr [ebx - 0x72bbdb8c], cl; xchg byte ptr [eax + 0x68], ah; stc; call dword ptr [eax - 0x73]; 
0x00080fb1: xor dword ptr [edx + 0x3e], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x0011d391: xor dword ptr [edx + 0x51], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x00135248: xor dword ptr [edx + ebx*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0015ca40: xor dword ptr [edx + esi*2 - 0x17af0007], 0xffed3a95; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000fdd51: xor dword ptr [edx + esi*2 - 0x17af0007], 0xfff32784; add esp, 0x18; pop ebx; ret; 
0x0012bdff: xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x57]; 
0x0011c127: xor dword ptr [esi + 0x57], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x000fa99d: xor dword ptr [esi + ebx*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0003a814: xor dword ptr [esp + esi*2], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00190242: xor eax, 0x1c030003; mov edi, dword ptr [esi]; jmp ebx; 
0x0017f4a4: xor eax, 0x1c030004; mov edi, dword ptr [esi]; jmp ebx; 
0x000e436a: xor eax, 0x4742a3c; cmp al, 0x3f; jne 0xe4389; mov eax, 1; ret; 
0x00117443: xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00117443: xor eax, 0x4a; stc; call dword ptr [eax - 0x18]; ret 7; 
0x0007e11a: xor eax, 0x5b08c483; ret; 
0x0008148b: xor eax, 0x5b14c483; pop esi; ret; 
0x00169a5a: xor eax, 0x642f03c7; jbe 0x1699e5; in al, dx; add al, 0x83; ret; 
0x00079cf1: xor eax, 0x7d; stc; call dword ptr [eax - 0x73]; 
0x0013e1ca: xor eax, 0x7f; int1; call dword ptr [eax - 0x73]; 
0x00156a67: xor eax, 0x830000bc; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00117037: xor eax, 0x83fff410; les edx, ptr [eax]; add esp, 0xc; ret; 
0x000871b3: xor eax, 0x84828b; add byte ptr [eax], al; and eax, 0x10; jne 0x871c8; add esp, 0xc; ret; 
0x0008df02: xor eax, 0x8908ec83; ret; 
0x0010f887: xor eax, 0xbf000001; or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0012073a: xor eax, 0xc244c8d; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x001208ba: xor eax, 0xc244c8d; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012b319: xor eax, 0xc4830000; or al, 0x50; push dword ptr [esp + 8]; push 0x2000003; call dword ptr [ebp + 0x14]; 
0x0019cc0c: xor eax, 0xc483ffe8; sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0015c560: xor eax, 0xffffffb0; stc; call dword ptr [eax - 0x73]; 
0x0012e995: xor eax, dword ptr [0x18]; call eax; 
0x000218c1: xor eax, dword ptr [0x18]; jmp eax; 
0x0013e178: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e244: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a87c: xor eax, dword ptr [0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002194c: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x0014de4c: xor eax, dword ptr [0x18]; push eax; call edx; 
0x0012e9c4: xor eax, dword ptr [0x18]; push esi; call eax; 
0x0011692b: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00033aac: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0012fcec: xor eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x00155f75: xor eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000d686f: xor eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000eca89: xor eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0008fa64: xor eax, dword ptr [ecx + 0x124c4]; add byte ptr [ebx + 0x5e], bl; ret; 
0x00108b50: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b6329: xor eax, dword ptr [edi]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012e994: xor eax, dword ptr gs:[0x18]; call eax; 
0x000218c0: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013e177: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013e243: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003a87b: xor eax, dword ptr gs:[0x18]; mov dword ptr gs:[edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0002194b: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x0014de4b: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x0012e9c3: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0011a7a7: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003b6d7: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00082184: xor eax, eax; add esp, 0xc; ret; 
0x00035032: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003b756: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000e7e38: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xe7e50; pop ebx; pop esi; ret; 
0x000d5c27: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd5c38; add esp, 0xc; ret; 
0x000d5d07: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xd5d18; add esp, 0xc; ret; 
0x001946b3: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1946c0; pop ebx; ret; 
0x000de86a: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000de885: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a14f3: xor eax, eax; cmp edx, 0x40; ja 0xa1501; mov eax, dword ptr [ecx + edx*4 - 0x9c0]; ret; 
0x000a1523: xor eax, eax; cmp edx, 0x40; ja 0xa1531; mov eax, dword ptr [ecx + edx*4 - 0x8a0]; ret; 
0x0006f383: xor eax, eax; cmp edx, 0x85; ja 0x6f394; mov eax, dword ptr [ecx + edx*4 - 0xbe0]; ret; 
0x000de835: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x00081bd2: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x00147966: xor eax, eax; cmp word ptr [ecx + 2], si; je 0x147978; pop ebx; pop esi; ret; 
0x0011c916: xor eax, eax; lea edx, [esp + 0xc]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00113ed1: xor eax, eax; mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x000754a5: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00083bb4: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000a0aba: xor eax, eax; mov dword ptr [esi], edx; pop ebx; pop esi; ret; 
0x001071b4: xor eax, eax; mov eax, 0x17f; call dword ptr gs:[0x10]; 
0x001140da: xor eax, eax; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000d7c42: xor eax, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000f990f: xor eax, eax; mov ebx, dword ptr [esp + 0x30]; mov esi, dword ptr [esp + 0x34]; lea ecx, [esp + 0xc]; mov eax, 0x1a7; call dword ptr gs:[0x10]; 
0x0011fc0e: xor eax, eax; mov ebx, dword ptr [esp + 0x50]; mov edx, dword ptr [esp + 0x54]; lea ecx, [esp + 0x1c]; mov eax, 0x19a; call dword ptr gs:[0x10]; 
0x00124478: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x124488; ret; 
0x000cd71e: xor eax, eax; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; mov eax, 0x69; call dword ptr gs:[0x10]; 
0x001148be: xor eax, eax; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; mov eax, 0x4d; call dword ptr gs:[0x10]; 
0x00047bd4: xor eax, eax; mov esi, dword ptr [esp + 0x28]; mov eax, 0x25; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x001142c4: xor eax, eax; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0018e672: xor eax, eax; pop ebp; ret; 
0x00083969: xor eax, eax; pop ebx; pop edi; ret; 
0x0012e9ee: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00021a94: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003a806: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00039eff: xor eax, eax; pop ebx; pop esi; ret; 
0x0003713a: xor eax, eax; pop ebx; ret; 
0x0018fc01: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x0018f6a0: xor eax, eax; pop edi; pop ebx; ret; 
0x000c88c4: xor eax, eax; pop edi; pop esi; ret; 
0x000b2770: xor eax, eax; pop edi; ret; 
0x0003ba4a: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x0004a9c0: xor eax, eax; pop esi; pop edi; ret; 
0x00083836: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00034d50: xor eax, eax; ret; 
0x000dc3ae: xor eax, eax; test edi, edi; cmove esi, eax; mov eax, 0x72; call dword ptr gs:[0x10]; 
0x00038190: xor eax, eax; test edx, edx; sete al; ret; 
0x00195202: xor eax, eax; tzcnt edx, edx; add eax, edx; ret; 
0x00035ddf: xor eax, ecx; shr eax, 0x1f; ret; 
0x00034d43: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x34d29; ret; 
0x0003b3bf: xor eax, edx; ret; 
0x00023b35: xor ebp, dword ptr [edx]; stc; call dword ptr [eax - 0x18]; 
0x0019cde3: xor ebp, eax; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009d818: xor ebp, eax; ret 0xfffe; 
0x00121071: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0009afe9: xor ebp, esi; dec dword ptr [ebx + 0x18499]; add dh, dh; ret; 
0x00149b49: xor ebx, dword ptr [ebp - 0x12]; dec dword ptr [ebp - 0x653537d]; call dword ptr [eax + 0x68]; 
0x001377d9: xor ebx, dword ptr [ebx - 7]; call dword ptr [eax - 0x42]; 
0x000cadd9: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000cadd9: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xcadf0; pop ebx; ret; 
0x00021540: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00085ff5: xor ebx, ebx; lea esi, [esi]; nop; mov eax, edx; call dword ptr gs:[0x10]; 
0x000866c6: xor ebx, ebx; mov byte ptr [esp + 0x4b], 0; lea ecx, [ecx - 0x72600]; mov esi, 8; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00102bba: xor ebx, ebx; mov dword ptr [esp + 0x124], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0017048c: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00114867: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov esi, ebx; call dword ptr gs:[0x10]; 
0x00130ec9: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0015eae6: xor ebx, esi; call dword ptr [edx - 0x75]; 
0x00138642: xor ecx, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001092e0: xor ecx, 0xffffffff; ret; 
0x00142c54: xor ecx, dword ptr [ebx - 0x1337a]; jmp dword ptr [ebp - 0x39]; 
0x0013d34c: xor ecx, dword ptr [ebx - 0x1337d]; jmp dword ptr [ebp - 0x39]; 
0x000dfe2a: xor ecx, dword ptr [ebx - 0x18f7b]; dec dword ptr [ebx - 0x13368]; jmp dword ptr [ebp - 0x75]; 
0x0010409a: xor ecx, dword ptr [ebx - 0x19f7b]; dec dword ptr [ebx - 0x13368]; jmp dword ptr [ebp - 0x75]; 
0x001138cc: xor ecx, dword ptr [ebx - 0x47dfdba4]; fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011f92c: xor ecx, dword ptr [ebx - 0x47f3dba4]; js 0x11f935; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005afd0: xor ecx, dword ptr [ebx - 0x5db7b]; dec dword ptr [ecx + 0x29008bfa]; ret 0x953b; 
0x0014b3a1: xor ecx, dword ptr [ebx - 0x76acfb95]; sti; call 0x20140; mov dword ptr [esp], ebp; call esi; 
0x0002f640: xor ecx, dword ptr [ebx - 0xb68]; jmp dword ptr [ebp - 0x77]; 
0x000bb104: xor ecx, dword ptr [ebx]; add byte ptr [ecx + 0x16aef9c7], al; add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x77]; ret; 
0x0013b4a3: xor ecx, dword ptr [ecx - 0x17b00000]; ret; 
0x000a0bcc: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x0008b96b: xor ecx, dword ptr [ecx - 0x76f3dbac]; ret 0xca81; 
0x00073cc8: xor ecx, ebp; cli; jmp dword ptr [esi - 0x70]; 
0x00030484: xor ecx, ecx; call 0x2ff60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x00109369: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00109369: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x109380; pop ebx; ret; 
0x0014e09f: xor ecx, ecx; cmp eax, 2; jne 0x14e0c0; mov eax, ecx; ret; 
0x0008d4ad: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000d5db9: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000882ba: xor ecx, ecx; mov eax, 0xf0; mov ebx, ebp; mov esi, ecx; call dword ptr gs:[0x10]; 
0x001495fe: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0004a5b0: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00083c9f: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00157939: xor ecx, ecx; test eax, eax; je 0x157970; mov eax, ecx; pop ebx; ret; 
0x00162cd9: xor ecx, ecx; test eax, eax; je 0x162d10; mov eax, ecx; pop ebx; ret; 
0x00162d49: xor ecx, ecx; test eax, eax; je 0x162d80; mov eax, ecx; pop ebx; ret; 
0x00057a44: xor ecx, edi; call dword ptr [eax + 0x53]; 
0x0016f0f3: xor ecx, edi; call dword ptr [eax + 0x6a]; 
0x00051be3: xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0006a215: xor ecx, edi; call dword ptr [eax - 0x77]; 
0x00057efc: xor ecx, edi; call dword ptr [eax - 1]; 
0x00058b70: xor ecx, edi; call dword ptr [ebx + 0x50]; 
0x00057fee: xor ecx, edi; call dword ptr [ecx + 0x53]; 
0x000512d6: xor ecx, edi; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5126d; ret 0x40c7; 
0x000b5bc7: xor edi, 0x43; stc; call dword ptr [eax - 0x18]; 
0x0010d9f7: xor edi, dword ptr [ecx]; ret; 
0x001597a0: xor edi, edi; je 0x1597c8; adc byte ptr [ecx - 0x59b1739], cl; cli; jmp dword ptr [ebp - 0x77]; 
0x0019dbf6: xor edi, edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000f6c86: xor edi, edx; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000213c9: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x000ccde4: xor edx, dword ptr [eax - 0x73]; test dword ptr [eax + 0x45], eax; stc; call dword ptr [eax - 0x18]; 
0x000213c8: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1978], edx; ret; 
0x00157a19: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00082551: xor edx, edx; call dword ptr gs:[0x10]; 
0x00153428: xor edx, edx; cmp byte ptr [eax], 0; cmove eax, edx; pop ebx; pop esi; ret; 
0x000dc0d1: xor edx, edx; cmp eax, -1; cmove eax, edx; pop ebx; ret; 
0x000cda7b: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0013014e: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x00105f10: xor edx, edx; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004a5e9: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00087aea: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0007aa15: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0007aebd: xor edx, edx; mov dword ptr [ebx], eax; mov eax, edx; pop ebx; ret; 
0x0008b17a: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x00102eeb: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00086747: xor edx, edx; mov eax, 0xaf; mov ebx, 2; mov esi, 8; call dword ptr gs:[0x10]; 
0x00086a37: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008a7c4: xor edx, edx; mov eax, 0xf0; mov ecx, 7; mov dword ptr [ebx + 4], 0; mov esi, edx; call dword ptr gs:[0x10]; 
0x000920b6: xor edx, edx; mov eax, 1; call 0x92020; mov dword ptr [esp], esi; call ebx; 
0x00125297: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x125170; add esp, 4; ret; 
0x00088a18: xor edx, edx; mov eax, edx; ret; 
0x00086089: xor edx, edx; mov ecx, 0x80; mov eax, edi; mov esi, edx; call dword ptr gs:[0x10]; 
0x00087e25: xor edx, edx; mov ecx, dword ptr [esp + 8]; mov esi, 8; call dword ptr gs:[0x10]; 
0x00102c78: xor edx, edx; mov ecx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000824e2: xor edx, edx; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00086013: xor edx, edx; mov esi, 0x53053053; lea ebx, [eax + 0x520]; mov eax, 0x182; call dword ptr gs:[0x10]; 
0x0012d5ae: xor edx, edx; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000a0df0: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x0003d7ea: xor edx, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003ba2b: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00092451: xor edx, edx; test cl, 0x40; jne 0x92478; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00129f3a: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0007a5ab: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x0008ad20: xor edx, edx; xor cl, 0x87; mov eax, 0xf0; mov esi, edx; call dword ptr gs:[0x10]; 
0x0011d3e2: xor esi, 0x51; stc; call dword ptr [eax + 0x57]; 
0x0008d7c8: xor esi, dword ptr [ebp + 5]; xor eax, eax; pop ebx; pop esi; ret; 
0x0014b562: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00090da3: xor esi, dword ptr [ebp - 0x66]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00158b0c: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x00158b0e: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x00082e54: xor esi, esi; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00168880: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0008978c: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00082637: xor esi, esi; call dword ptr gs:[0x10]; 
0x0007bc08: xor esi, esi; cdq; push edx; push eax; push ebx; call dword ptr [ecx + 0x40]; 
0x0009b1e2: xor esi, esi; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0008306f: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00082cc6: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00084a58: xor esi, esi; mov eax, edi; call dword ptr gs:[0x10]; 
0x00124131: xor esi, esi; mov ebx, 0x18; or dh, 1; call dword ptr gs:[0x10]; 
0x001235e1: xor esi, esi; mov ebx, 0xe; or dh, 1; call dword ptr gs:[0x10]; 
0x00082715: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00082715: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008b911: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000844b6: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000881a3: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00084411: xor esi, esi; mov ecx, dword ptr [esp]; xor cl, 0x81; mov dword ptr [ebp + edx*4 + 8], 0; mov edx, 0x7fffffff; call dword ptr gs:[0x10]; 
0x001709d4: xor esi, esi; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00083ed5: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000849ce: xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00084e93: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00084be3: xor esi, esi; mov edx, eax; mov eax, edi; or edx, 2; call dword ptr gs:[0x10]; 
0x0008471f: xor esi, esi; or eax, 2; mov edx, eax; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000b3490: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0008b300: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008273f: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000eb9ca: xor esi, esi; ret 0x7404; 
0x00193dcc: xor esi, esi; ret 0xf01; 
0x000826b6: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00084c6c: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014dad0: xor esp, 0x60; stc; call dword ptr [eax - 0x73]; 
0x0019513c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0012abf7: xorps xmm7, xmm1; call dword ptr [eax - 1]; 

44618 gadgets found
