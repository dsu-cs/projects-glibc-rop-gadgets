


Gadgets
=======


0x001262f4: aaa; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x001470fd: aaa; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0002abb0: aaa; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2abb3; call dword ptr [eax - 0x18]; 
0x0002b8fb: aaa; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2b8fe; call dword ptr [eax - 0x18]; 
0x0002dc11: aaa; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2dc14; call dword ptr [eax - 0x18]; 
0x0002e3b4: aaa; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2e3b7; call dword ptr [eax - 0x18]; 
0x0002f112: aaa; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2f115; call dword ptr [eax - 0x18]; 
0x0009c9cf: aaa; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017ff8c: aaa; add esp, 0x18; pop ebx; ret; 
0x0009ad23: aaa; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000c3ad4: aaa; call ebx; 
0x000c3a2e: aaa; call esi; 
0x000bdcd6: aaa; cdq; or al, 0; add ecx, 0x10d29a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0011f4d5: aaa; cld; idiv bh; add esp, 0x2c; ret; 
0x000804f9: aaa; cli; jmp dword ptr [esi - 0x70]; 
0x00151bd5: aaa; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00040421: aaa; das; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x000415ca: aaa; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c4895: aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x000c0fd6: aaa; or al, 0; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00063225: aaa; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0008ff00: aaa; pop ebx; pop esi; pop edi; ret; 
0x00185bcd: aaa; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0015216e: aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00126316: aaa; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00060adf: aaa; ret; 
0x001516d5: aaa; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000944a1: aaa; test byte ptr [edx + 0x80], 0x10; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x0005afd5: aaa; xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000fd919: aad 0; add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0010c5ee: aad 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a73ef: aad 0; add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x00039eda: aad 0x2e; stc; call dword ptr [eax + 0x53]; 
0x001261c4: aad 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00136735: aad 0x55; stc; call dword ptr [eax - 0x18]; 
0x00164782: aad 0x61; stc; call dword ptr [eax - 0x18]; 
0x00164923: aad 0x61; stc; call dword ptr [eax - 0x73]; 
0x000c49d7: aad 0x6b; pop es; add byte ptr [ebp - 0x663ff7b], cl; call dword ptr [eax - 0x73]; 
0x0013d641: aad 0x72; and esp, dword ptr [esi - 0x7d]; jns 0x13d64a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x00134caa: aad 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000620b1: aad 0x83; ret 0x101; 
0x000ac192: aad 0x83; ret 0x3801; 
0x00159e42: aad 0x83; ret 0xeb18; 
0x000fd1d4: aad 0x89; fnstcw word ptr [ecx]; ret; 
0x0009a752: aad 0x89; ret 0xe083; 
0x0005a67e: aad 0x89; ret 0xe889; 
0x001b0099: aad 0x89; ret; 
0x000c1021: aad 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0005ac17: aad 0xb4; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x00168c37: aad 0xb6; in al, dx; call dword ptr [edx + 0x52]; 
0x0005dfde: aad 0xd; add byte ptr [ebx - 0x8b6b], cl; dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x00177ca3: aad 0xeb; call dword ptr [eax - 0x73]; 
0x00189f14: aad 0xef; jmp dword ptr [esi - 0x70]; 
0x0018796e: aad 0xf8; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x00059258: aad 0xff; dec dword ptr [ebx - 0x36377b]; jmp dword ptr [ebp - 0x75]; 
0x00051842: aad 1; ret 0xd889; 
0x00079880: aad 4; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x0011462e: aam 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d9c38: aam 0; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000d498e: aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x001253af: aam 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00125664: aam 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x0012738e: aam 0x50; stc; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x000846af: aam 0x52; push ebx; push esi; call eax; 
0x000e9e45: aam 0x56; call eax; 
0x0002484c: aam 0x59; stc; call dword ptr [eax - 0x18]; 
0x00030766: aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x000afcd2: aam 0x83; ret 0x3901; 
0x0015b83b: aam 0x83; ret 0x8014; 
0x000af293: aam 0x83; ret 0xf01; 
0x0005cbeb: aam 0x83; ret; 
0x000fe9d5: aam 0x89; jl 0xfe9fd; or al, 0xe9; ret 0xfffb; 
0x000278c7: aam 0x89; ret; 
0x00027515: aam 0x8d; xchg byte ptr [eax + esi*2], ah; stc; call dword ptr [eax - 0x73]; 
0x000f7311: aam 0xa0; stc; call dword ptr [eax - 0x73]; 
0x0010e403: aam 0xa1; stc; call dword ptr [eax - 0x73]; 
0x000efed8: aam 0xb6; add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000d8c38: aam 0xb6; cmc; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x00178167: aam 0xb8; stc; call dword ptr [edx + 0x6a]; 
0x000bdca2: aam 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000273bb: aam 0xe8; lahf; ret 9; 
0x0008543a: aam 0xea; stc; jmp dword ptr [esi - 0x70]; 
0x00165d65: aam 0xeb; jmp dword ptr [ebp - 0x75]; 
0x0018de6b: aam 0xf7; jmp dword ptr [esi - 0x70]; 
0x000da06b: aam 0xf; lahf; ret; 
0x000d39de: aam 0xf; mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0015e193: aam 0xfd; jmp dword ptr [esi - 0x70]; 
0x001ad971: aam 0xff; dec dword ptr [ebx - 0x74f7dbbc]; je 0x1ad99f; js 0x1ad9b6; ret; 
0x00172353: aam 0xff; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000c38b8: aam 1; add byte ptr [eax], al; ret; 
0x000d3743: aam 1; ret 0x1689; 
0x000d3509: aam 1; ret 0x5389; 
0x0017a36d: aas; adc bh, ah; jmp dword ptr [esi - 0x70]; 
0x000a460b: aas; adc dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*2], ecx; stc; call dword ptr [eax - 0x18]; 
0x001958fb: aas; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001147c1: aas; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010ba35: aas; add byte ptr [eax], al; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x000912a0: aas; add byte ptr [eax], al; ja 0x912b0; ret; 
0x001a8012: aas; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0010ba7e: aas; add byte ptr [eax], al; push eax; call 0x8fc80; call dword ptr [esi]; 
0x00086f6d: aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0008cf25: aas; add eax, dword ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x001977a3: aas; and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194b23: aas; dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019006e: aas; dec edx; stc; call dword ptr [eax + 0x53]; 
0x000aca59: aas; idiv bh; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000aca99: aas; idiv bh; and ch, 2; lea edx, [edx - 0x17a854]; cmove eax, edx; ret; 
0x0013c1bd: aas; imul edi, eax, -1; add esp, 0x18; pop ebx; ret; 
0x000f0f8c: aas; inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x001a7fb2: aas; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000fad42: aas; jne 0xfad59; mov eax, 1; ret; 
0x0009f910: aas; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000bb45d: aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00141242: aas; out dx, eax; call dword ptr [ebx + 0x50]; 
0x00140a84: aas; pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x001935a3: aas; pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017dffd: aas; ret; 
0x001a1b7d: aas; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000fdd63: aas; stc; call dword ptr [eax + 0x55]; 
0x00087400: aas; stc; call dword ptr [eax + 0x56]; 
0x0012a3b5: aas; stc; call dword ptr [eax + 0x6a]; 
0x00106f28: aas; stc; call dword ptr [eax - 0x17]; 
0x00092e66: aas; stc; call dword ptr [eax - 0x18]; 
0x00092e5f: aas; stc; call dword ptr [eax - 0x73]; 
0x00088ff0: aas; stc; call dword ptr [eax - 0x75]; 
0x0008e31c: aas; stc; call dword ptr [ecx + 0x52]; 
0x00092ed9: aas; stc; call dword ptr [edx + 0x50]; 
0x0008e977: aas; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0002757f: aas; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000617d9: aas; xor edi, ecx; call dword ptr [eax + 0x51]; 
0x0002484b: adc ah, 0x59; stc; call dword ptr [eax - 0x18]; 
0x000c38b7: adc ah, 1; add byte ptr [eax], al; ret; 
0x000b99fd: adc ah, bl; or al, 0; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a3f72: adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x000a6a6e: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a4fcd: adc al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6b], esi; stc; call dword ptr [eax - 0x18]; 
0x0010b11d: adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0005194b: adc al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f0ef1: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0ef1: adc al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0010c2f7: adc al, 0; add byte ptr [eax], al; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c39a: adc al, 0; add byte ptr [eax], al; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c607: adc al, 0; add byte ptr [eax], al; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e573: adc al, 0; add byte ptr [eax], al; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x00113468: adc al, 0; add byte ptr [eax], al; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x0011ec5e: adc al, 0; add byte ptr [eax], al; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00120c92: adc al, 0; add byte ptr [eax], al; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d12: adc al, 0; add byte ptr [eax], al; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00121f76: adc al, 0; add byte ptr [eax], al; jne 0x121f87; add esp, 0x1c; ret; 
0x00123611: adc al, 0; add byte ptr [eax], al; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x00124057: adc al, 0; add byte ptr [eax], al; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x00124486: adc al, 0; add byte ptr [eax], al; jne 0x124490; add esp, 0x1c; ret; 
0x00124f1d: adc al, 0; add byte ptr [eax], al; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125c19: adc al, 0; add byte ptr [eax], al; jne 0x125c23; add esp, 0x1c; ret; 
0x00129c2a: adc al, 0; add byte ptr [eax], al; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cca: adc al, 0; add byte ptr [eax], al; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012b7a5: adc al, 0; add byte ptr [eax], al; jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc3c: adc al, 0; add byte ptr [eax], al; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f149: adc al, 0; add byte ptr [eax], al; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1b1: adc al, 0; add byte ptr [eax], al; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f230: adc al, 0; add byte ptr [eax], al; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2a9: adc al, 0; add byte ptr [eax], al; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f315: adc al, 0; add byte ptr [eax], al; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f395: adc al, 0; add byte ptr [eax], al; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f680: adc al, 0; add byte ptr [eax], al; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f781: adc al, 0; add byte ptr [eax], al; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7f1: adc al, 0; add byte ptr [eax], al; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbd9: adc al, 0; add byte ptr [eax], al; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc41: adc al, 0; add byte ptr [eax], al; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fcc9: adc al, 0; add byte ptr [eax], al; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd41: adc al, 0; add byte ptr [eax], al; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffb0: adc al, 0; add byte ptr [eax], al; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c7: adc al, 0; add byte ptr [eax], al; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130135: adc al, 0; add byte ptr [eax], al; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301c0: adc al, 0; add byte ptr [eax], al; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302c8: adc al, 0; add byte ptr [eax], al; jne 0x1302d2; add esp, 0x7c; ret; 
0x00130357: adc al, 0; add byte ptr [eax], al; jne 0x130361; add esp, 0x1c; ret; 
0x0013ae35: adc al, 0; add byte ptr [eax], al; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c085: adc al, 0; add byte ptr [eax], al; jne 0x13c095; add esp, 0x2c; ret; 
0x001465a2: adc al, 0; add byte ptr [eax], al; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465ea: adc al, 0; add byte ptr [eax], al; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146639: adc al, 0; add byte ptr [eax], al; jne 0x146643; add esp, 0x1c; ret; 
0x0014851e: adc al, 0; add byte ptr [eax], al; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485be: adc al, 0; add byte ptr [eax], al; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x0014867e: adc al, 0; add byte ptr [eax], al; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x0014871e: adc al, 0; add byte ptr [eax], al; jne 0x14874d; add esp, 0x11c; ret; 
0x00148c43: adc al, 0; add byte ptr [eax], al; jne 0x148c8c; add esp, 0x1c; ret; 
0x0014c876: adc al, 0; add byte ptr [eax], al; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f26: adc al, 0; add byte ptr [eax], al; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x00154934: adc al, 0; add byte ptr [eax], al; jne 0x15493e; add esp, 0x1c; ret; 
0x0016cdab: adc al, 0; add byte ptr [eax], al; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00172c59: adc al, 0; add byte ptr [eax], al; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e12: adc al, 0; add byte ptr [eax], al; jne 0x175e27; add esp, 0x1c; ret; 
0x00175f3e: adc al, 0; add byte ptr [eax], al; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fde: adc al, 0; add byte ptr [eax], al; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x00176322: adc al, 0; add byte ptr [eax], al; jne 0x176337; add esp, 0x1c; ret; 
0x001763a5: adc al, 0; add byte ptr [eax], al; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x00177248: adc al, 0; add byte ptr [eax], al; jne 0x177252; add esp, 0x4c; ret; 
0x001772b8: adc al, 0; add byte ptr [eax], al; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177328: adc al, 0; add byte ptr [eax], al; jne 0x177332; add esp, 0x4c; ret; 
0x00177398: adc al, 0; add byte ptr [eax], al; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773fb: adc al, 0; add byte ptr [eax], al; jne 0x177405; add esp, 0x4c; ret; 
0x0017745b: adc al, 0; add byte ptr [eax], al; jne 0x177465; add esp, 0x4c; ret; 
0x001774c8: adc al, 0; add byte ptr [eax], al; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177548: adc al, 0; add byte ptr [eax], al; jne 0x177552; add esp, 0x4c; ret; 
0x00177a39: adc al, 0; add byte ptr [eax], al; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a88: adc al, 0; add byte ptr [eax], al; jne 0x177abc; add esp, 0x1c; ret; 
0x00179222: adc al, 0; add byte ptr [eax], al; jne 0x17922c; add esp, 0x2c; ret; 
0x001792d4: adc al, 0; add byte ptr [eax], al; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c4: adc al, 0; add byte ptr [eax], al; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x0017969b: adc al, 0; add byte ptr [eax], al; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x0017973b: adc al, 0; add byte ptr [eax], al; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f9: adc al, 0; add byte ptr [eax], al; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x0017987d: adc al, 0; add byte ptr [eax], al; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x00179911: adc al, 0; add byte ptr [eax], al; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a14b: adc al, 0; add byte ptr [eax], al; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1eb: adc al, 0; add byte ptr [eax], al; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a28b: adc al, 0; add byte ptr [eax], al; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a32b: adc al, 0; add byte ptr [eax], al; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa22: adc al, 0; add byte ptr [eax], al; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa82: adc al, 0; add byte ptr [eax], al; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aaec: adc al, 0; add byte ptr [eax], al; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab9c: adc al, 0; add byte ptr [eax], al; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff87: adc al, 0; add byte ptr [eax], al; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x00180481: adc al, 0; add byte ptr [eax], al; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x0018103b: adc al, 0; add byte ptr [eax], al; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x001848cd: adc al, 0; add byte ptr [eax], al; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x00187211: adc al, 0; add byte ptr [eax], al; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a9: adc al, 0; add byte ptr [eax], al; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190254: adc al, 0; add byte ptr [eax], al; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001905cb: adc al, 0; add byte ptr [eax], al; jne 0x1905d5; add esp, 0x2c; ret; 
0x000254fd: adc al, 0; add byte ptr [eax], al; jne 0x25507; add esp, 0x1c; ret; 
0x0003b079: adc al, 0; add byte ptr [eax], al; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e8: adc al, 0; add byte ptr [eax], al; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003d07b: adc al, 0; add byte ptr [eax], al; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d220: adc al, 0; add byte ptr [eax], al; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d633: adc al, 0; add byte ptr [eax], al; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dad3: adc al, 0; add byte ptr [eax], al; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db53: adc al, 0; add byte ptr [eax], al; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbdc: adc al, 0; add byte ptr [eax], al; jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003e1ba: adc al, 0; add byte ptr [eax], al; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0003f28c: adc al, 0; add byte ptr [eax], al; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39f: adc al, 0; add byte ptr [eax], al; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0004090f: adc al, 0; add byte ptr [eax], al; jne 0x40919; add esp, 0x1c; ret; 
0x00040b3c: adc al, 0; add byte ptr [eax], al; jne 0x40b46; add esp, 0x1c; ret; 
0x00040cfa: adc al, 0; add byte ptr [eax], al; jne 0x40d04; add esp, 0x2c; ret; 
0x00040e0c: adc al, 0; add byte ptr [eax], al; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8f: adc al, 0; add byte ptr [eax], al; jne 0x40e99; add esp, 0x1c; ret; 
0x00041ead: adc al, 0; add byte ptr [eax], al; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x000535aa: adc al, 0; add byte ptr [eax], al; jne 0x535b4; add esp, 0x2c; ret; 
0x0005ae28: adc al, 0; add byte ptr [eax], al; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0005f705: adc al, 0; add byte ptr [eax], al; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x0006163c: adc al, 0; add byte ptr [eax], al; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c3: adc al, 0; add byte ptr [eax], al; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x00087e32: adc al, 0; add byte ptr [eax], al; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x00092a9d: adc al, 0; add byte ptr [eax], al; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f9: adc al, 0; add byte ptr [eax], al; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097689: adc al, 0; add byte ptr [eax], al; jne 0x97693; add esp, 0x2c; ret; 
0x0009893d: adc al, 0; add byte ptr [eax], al; jne 0x98947; add esp, 0x2c; ret; 
0x00098dad: adc al, 0; add byte ptr [eax], al; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c9: adc al, 0; add byte ptr [eax], al; jne 0x992d3; add esp, 0x2c; ret; 
0x00099719: adc al, 0; add byte ptr [eax], al; jne 0x99723; add esp, 0x2c; ret; 
0x0009c636: adc al, 0; add byte ptr [eax], al; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c4: adc al, 0; add byte ptr [eax], al; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb30: adc al, 0; add byte ptr [eax], al; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd90: adc al, 0; add byte ptr [eax], al; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009eb76: adc al, 0; add byte ptr [eax], al; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff3e: adc al, 0; add byte ptr [eax], al; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000a04fe: adc al, 0; add byte ptr [eax], al; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000c656d: adc al, 0; add byte ptr [eax], al; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dabea: adc al, 0; add byte ptr [eax], al; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac6e: adc al, 0; add byte ptr [eax], al; jne 0xdac78; add esp, 0x1c; ret; 
0x000dacb8: adc al, 0; add byte ptr [eax], al; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad1a: adc al, 0; add byte ptr [eax], al; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dbfbe: adc al, 0; add byte ptr [eax], al; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x000dc233: adc al, 0; add byte ptr [eax], al; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc5b7: adc al, 0; add byte ptr [eax], al; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000e54f2: adc al, 0; add byte ptr [eax], al; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79b2: adc al, 0; add byte ptr [eax], al; jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b26: adc al, 0; add byte ptr [eax], al; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d44: adc al, 0; add byte ptr [eax], al; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e8b6a: adc al, 0; add byte ptr [eax], al; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bdc: adc al, 0; add byte ptr [eax], al; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c80: adc al, 0; add byte ptr [eax], al; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000efebf: adc al, 0; add byte ptr [eax], al; jne 0xefed7; add esp, 0x1c; ret; 
0x000f11f8: adc al, 0; add byte ptr [eax], al; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d08: adc al, 0; add byte ptr [eax], al; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af8: adc al, 0; add byte ptr [eax], al; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7628: adc al, 0; add byte ptr [eax], al; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8438: adc al, 0; add byte ptr [eax], al; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x00124eeb: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00053412: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00115758: adc al, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000f5a5b: adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00074189: adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000571cc: adc al, 0; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0017588c: adc al, 0; add byte ptr [ecx - 0x757c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x0003d7a7: adc al, 0; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d787: adc al, 0; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000fba1d: adc al, 0; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x0002a109: adc al, 0x11; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0017054b: adc al, 0x11; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x170540; pop ebx; ret; 
0x00166e07: adc al, 0x18; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00034c56: adc al, 0x18; pop ebx; pop esi; ret; 
0x000875ed: adc al, 0x19; ret 0xc889; 
0x000552fd: adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00187602: adc al, 0x24; ret; 
0x0016c8f1: adc al, 0x24; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0016c90d: adc al, 0x24; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0015b552: adc al, 0x28; add byte ptr [eax], al; add byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffc; 
0x00130244: adc al, 0x29; ret 0xca39; 
0x00097071: adc al, 0x29; ret; 
0x000859a7: adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x00031fe5: adc al, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x001347c9: adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x001966ce: adc al, 0x34; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001856ae: adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x0009dae9: adc al, 0x39; or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00090373: adc al, 0x39; ret 0x1074; 
0x00031d3d: adc al, 0x39; ret 0x4d0f; 
0x00171514: adc al, 0x39; ret 0x4e0f; 
0x00052c6d: adc al, 0x39; ret 0x4e74; 
0x000718df: adc al, 0x39; ret 0x840f; 
0x0002ce9d: adc al, 0x39; ret 0x850f; 
0x0003e656: adc al, 0x39; ret; 
0x00169708: adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x000a08fa: adc al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0011ae42: adc al, 0x50; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011b436: adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011b7db: adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0011b6b2: adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0005f864: adc al, 0x50; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016c44e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; 
0x0016c44e: adc al, 0x50; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x001262fa: adc al, 0x51; stc; call dword ptr [edx + 0x52]; 
0x000f120e: adc al, 0x52; push eax; call dword ptr [ecx + 0x20]; 
0x0016d4cc: adc al, 0x52; push ebx; call dword ptr [eax + 0x14]; 
0x0016d0b2: adc al, 0x53; call dword ptr [eax + 0x10]; 
0x001775e9: adc al, 0x53; call dword ptr [eax]; 
0x00152824: adc al, 0x55; call edi; 
0x0016c799: adc al, 0x56; call dword ptr [eax + 4]; 
0x0008eec4: adc al, 0x56; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001368b9: adc al, 0x56; stc; call dword ptr [eax + 0x56]; 
0x001235f8: adc al, 0x56; stc; call dword ptr [eax + 0x6a]; 
0x000ea268: adc al, 0x5a; cli; jmp dword ptr [esi - 0x70]; 
0x00131e42: adc al, 0x5b; pop edi; ret; 
0x000b059d: adc al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00040a5a: adc al, 0x5b; pop esi; pop edi; ret; 
0x00030108: adc al, 0x5b; pop esi; ret; 
0x00188aa8: adc al, 0x5e; out dx, eax; jmp dword ptr [ecx]; 
0x00081850: adc al, 0x5e; pop edi; jmp eax; 
0x000ba2e3: adc al, 0x5f; pop esi; pop ebx; ret; 
0x0010c426: adc al, 0x6a; add byte ptr [edx], ch; call 0x10c3f0; add esp, 0x1c; ret; 
0x0017ff20: adc al, 0x6a; add cl, byte ptr [ebp - 0x6996c80]; call dword ptr [eax - 0x18]; 
0x000a6df7: adc al, 0x6a; add dword ptr [ebx - 0x72cbdba4], ecx; and dword ptr [edi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x0016eeb7: adc al, 0x72; ret 0x4889; 
0x00182ba7: adc al, 0x73; out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00186127: adc al, 0x75; push es; pop ebx; ret; 
0x0009a912: adc al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00155fd4: adc al, 0x81; les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00187662: adc al, 0x81; setne al; movzx eax, al; ret; 
0x0009118b: adc al, 0x83; clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00041b2a: adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x000dfd21: adc al, 0x83; jle 0xdfd35; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0016de25: adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00087e37: adc al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x00116ee8: adc al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00051986: adc al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008df9c: adc al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000871f7: adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0005a08a: adc al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016fcda: adc al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000a9f65: adc al, 0x83; ret 0x8301; 
0x0002cb11: adc al, 0x83; ret 0x8904; 
0x00097b94: adc al, 0x83; ret; 
0x00028484: adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a4c44: adc al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x00184135: adc al, 0x85; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x0010d292: adc al, 0x85; test byte ptr [edi], -0x6c; ret 0xff85; 
0x00080a3f: adc al, 0x88; sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00079800: adc al, 0x89; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000ad89d: adc al, 0x89; call 0x5d6a36ff; ret; 
0x0017a5e0: adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x000a1538: adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c755d: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00150129: adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001b06db: adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000e7fe4: adc al, 0x89; inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x00179a57: adc al, 0x89; je 0x179a7f; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0003c6ff: adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x000f0968: adc al, 0x89; push ebx; adc al, 0x8d; and byte ptr [ebx + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x0008e13c: adc al, 0x89; push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00059f9e: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x001229fd: adc al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ec8b3: adc al, 0x89; ret 0x2db9; 
0x0007a9b4: adc al, 0x89; ret 0x4489; 
0x000fccb4: adc al, 0x89; ret 0x478b; 
0x001443cf: adc al, 0x89; ret 0x689; 
0x0003e7eb: adc al, 0x89; ret 0x748b; 
0x0013fcd6: adc al, 0x89; ret 0x998b; 
0x000946e7: adc al, 0x89; ret 0xa165; 
0x0002bd8e: adc al, 0x89; ret 0xb60f; 
0x0014339a: adc al, 0x89; ret 0xc085; 
0x0009a1f7: adc al, 0x89; ret 0xc389; 
0x0014f266: adc al, 0x89; ret 0xc985; 
0x00189717: adc al, 0x89; ret 0xca29; 
0x0009a19b: adc al, 0x89; ret 0xca83; 
0x0009a157: adc al, 0x89; ret 0xe283; 
0x0009a314: adc al, 0x89; ret 0xfbd1; 
0x0003a5f9: adc al, 0x89; ret; 
0x00145f84: adc al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00089a48: adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x0011ff69: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e979: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea59: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b69: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127529: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a89: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b9: adc al, 0x8b; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0014eb9f: adc al, 0x8b; dec esp; ret 0x3904; 
0x0016de22: adc al, 0x8b; inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000980db: adc al, 0x8b; inc ebx; or al, 0x89; ret 0xe281; 
0x00024d50: adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0013019d: adc al, 0x8b; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c1436: adc al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdfb0: adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x0014cc2c: adc al, 0x8b; jl 0x14cc54; adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x00157b92: adc al, 0x8b; or cl, ch; ret 0xfffe; 
0x0018de91: adc al, 0x8b; pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x00129462: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214ab: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e62: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed22: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb52: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e852: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9b2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e812: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6e2: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea22: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d682: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d32: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127702: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b22: adc al, 0x8b; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc7f: adc al, 0x8b; pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012142b: adc al, 0x8b; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0004075d: adc al, 0x8b; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00089c2b: adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x001895bb: adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00130394: adc al, 0x8b; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0011f301: adc al, 0x8b; push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0006139a: adc al, 0x8b; push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00190402: adc al, 0x8b; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130882: adc al, 0x8b; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00109d86: adc al, 0x8b; push esp; ret; 
0x00169ff0: adc al, 0x8d; adc byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016b770: adc al, 0x8d; adc byte ptr [ebx + 0x6a50fff9], 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x00141154: adc al, 0x8d; adc dword ptr [ecx + 0x59], -7; dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x00024792: adc al, 0x8d; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x0008f841: adc al, 0x8d; add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x000c50f3: adc al, 0x8d; add al, 0x98; pop ebx; pop esi; ret; 
0x0016bcf0: adc al, 0x8d; and byte ptr [eax + 0x50fff963], 0x6a; pop es; call 0x153e50; add esp, 0x1c; ret; 
0x000f096b: adc al, 0x8d; and byte ptr [ebx + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x00168c90: adc al, 0x8d; cmp ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x00140f7d: adc al, 0x8d; cmp al, 0x58; stc; call dword ptr [eax + 0x6a]; 
0x0016b090: adc al, 0x8d; cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x00140a81: adc al, 0x8d; cmp byte ptr [edi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0015b18e: adc al, 0x8d; cmp byte ptr [esi + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x0011b720: adc al, 0x8d; cmp dl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0009b4dc: adc al, 0x8d; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00140fa4: adc al, 0x8d; or byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0008068b: adc al, 0x8d; pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x00140f28: adc al, 0x8d; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x0016a670: adc al, 0x8d; sbb byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x001411cf: adc al, 0x8d; sub al, 0xab; stc; dec dword ptr [ebp - 0x68b934e]; call dword ptr [eax + 0x56]; 
0x0016aa10: adc al, 0x8d; sub byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x00024761: adc al, 0x8d; sub byte ptr [ecx + 0x59], 0xf9; call dword ptr [eax - 1]; 
0x0015326e: adc al, 0x8d; sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x00039eea: adc al, 0x8d; test ebp, ebx; stc; call dword ptr [eax + 0x53]; 
0x000a2a18: adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2b2d: adc al, 0x8d; xchg byte ptr [ecx + ebx*4], ch; stc; call dword ptr [eax - 0x73]; 
0x00157f08: adc al, 0x8d; xchg dword ptr [eax], ecx; mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x0017cfae: adc al, 0x8d; xchg dword ptr [eax], ecx; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00140ec8: adc al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x00141274: adc al, 0x8d; xchg dword ptr [ecx], esp; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x000f0b6e: adc al, 0x8d; xchg dword ptr [edi + 0x47], ebp; stc; call dword ptr [eax - 0x73]; 
0x00140c54: adc al, 0x8d; xchg dword ptr [esp + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0010987f: adc al, 0x8d; xchg ecx, eax; dec ecx; dec eax; stc; call dword ptr [edx - 1]; 
0x00128109: adc al, 0x8d; xchg ecx, eax; je 0x128161; stc; call dword ptr [edx + 0x50]; 
0x00173aea: adc al, 0x8d; xchg esi, ecx; stc; call dword ptr [eax + 0x53]; 
0x00140f07: adc al, 0x8d; xor byte ptr [edi + 0x59], 0xf9; call dword ptr [eax + 0x6a]; 
0x001849dc: adc al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000fad44: adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x0008fc3c: adc al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000e7c93: adc al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003e05a: adc al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000bbcf9: adc al, 0xb9; or al, 0; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012d3d6: adc al, 0xb; cmp edx, 0x26; je 0x12d433; pop ebx; pop esi; ret; 
0x000ba5f9: adc al, 0xd0; or al, 0; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a61f8: adc al, 0xe1; clc; dec dword ptr [ebp - 0x6670f7b]; call dword ptr [eax - 0x73]; 
0x000ffee2: adc al, 0xe8; call 0x840ffec0; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x000900e3: adc al, 0xe8; cmpsd dword ptr [esi], dword ptr es:[edi]; xor cl, bh; jmp dword ptr [ebp - 0x39]; 
0x00116ec1: adc al, 0xe8; leave; ret 0xfff0; 
0x0012ffea: adc al, 0xe8; or eax, 0x81000576; ret; 
0x0007f7ea: adc al, 0xe8; or eax, 0x8100107e; ret; 
0x0014fca3: adc al, 0xe8; out dx, eax; xor al, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0014fda3: adc al, 0xe8; out dx, eax; xor ebp, ebp; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0009482a: adc al, 0xe8; pushal; ret; 
0x001770d0: adc al, 0xe8; ret 0xeac0; 
0x0003a348: adc al, 0xe8; ret 0xee3; 
0x00093977: adc al, 0xe8; ret; 
0x000a3fa6: adc al, 0xe9; inc ebx; add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x00168811: adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x0008750a: adc al, 0xeb; ret; 
0x00121315: adc al, 0xf6; ret 0x7540; 
0x000a5c7f: adc al, 0xf6; ret 0xf04; 
0x000e1447: adc al, 0xf; inc edx; ret 0x4c80; 
0x000436db: adc al, 0xf; mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00048c1d: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0011580d: adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000d9c35: adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000fb82b: adc al, 0xf; xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00171155: adc al, 0xf; xchg edx, eax; ret 0xd689; 
0x0010d3f3: adc al, 0xf; xchg esp, eax; ret 0xd789; 
0x0013de6b: adc al, 0xf; xchg esp, eax; ret; 
0x00092e6c: adc al, 0xfa; dec dword ptr [ebx - 0x72fbdb84]; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x0018a0b5: adc al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000f1b61: adc al, 0xfc; add cl, ch; ret 0xfff9; 
0x0012bf16: adc al, 0xff; je 0x12bf3e; sbb byte ptr [edx], ch; call 0x12c160; add esp, 0x1c; ret; 
0x00168d60: adc al, 0xff; je 0x168d88; and al, 0x89; ret; 
0x0016cc09: adc al, 0xff; je 0x16cc31; adc al, 0xff; je 0x16cc35; je 0x16cc63; call dword ptr [ecx]; 
0x0016cc0d: adc al, 0xff; je 0x16cc35; je 0x16cc63; call dword ptr [ecx]; 
0x0017fef0: adc al, 0xff; je 0x17ff18; sbb byte ptr [ebp - 0x6996c80], cl; call dword ptr [eax - 0x18]; 
0x00024d4c: adc al, 0xff; je 0x24d74; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0003f34a: adc al, 0xff; je 0x3f372; sbb byte ptr [eax + 0x50], dl; call 0x3f3b0; add esp, 0x1c; ret; 
0x000e629d: adc al, 0xff; je 0xe62c5; xor byte ptr [ecx], ch; ret; 
0x0007ed93: adc al, 0xff; jne 0x7eda3; push esi; call dword ptr [ebx + 0x2c]; 
0x001489c6: adc al, 1; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x0003ce71: adc al, 1; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x000c38a7: adc al, 1; add byte ptr [eax], al; ret; 
0x000ac2c5: adc al, 1; cmp edx, ebx; je 0xac2c0; pop ebx; ret; 
0x0017a3fd: adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x000e79dc: adc al, 1; je 0xe79e8; add esp, 0xc; ret; 
0x000e7acc: adc al, 1; je 0xe7ad8; add esp, 0xc; ret; 
0x000fd1f2: adc al, 1; ret 0xd089; 
0x001998d5: adc al, 1; retf 0xc801; call 0x1875fd; add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988f5: adc al, 1; retf 0xc801; call 0x1875fd; add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000903bc: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000902c1: adc al, 2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x001987ef: adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019895c: adc al, 4; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0017a75a: adc al, 4; mov eax, 1; ret; 
0x0017f9d2: adc al, 5; add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00148cef: adc al, 8; pop ebx; mov eax, edx; ret; 
0x00131799: adc al, 9; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000651f5: adc al, ah; add edi, dword ptr [esi + eax*4 - 0x73f94]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064cf5: adc al, ah; add edi, dword ptr [esi + eax*4 - 0x74094]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00065171: adc al, ah; mov edx, dword ptr [esp + 0x4c]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0004c480: adc al, bl; mov byte ptr [eax], dh; ret 0xfff9; 
0x00198b12: adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a2b3d: adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; 
0x000a2b3d: adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; ret; 
0x000c556a: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011f2ca: adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0006b877: adc al, byte ptr [eax]; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x0007411b: adc al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x0003c8ce: adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x0011456d: adc al, byte ptr [eax]; push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001145dd: adc al, byte ptr [eax]; push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001131e5: adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115c38: adc al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0006244d: adc al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0016fc34: adc al, byte ptr [ebx + 0x5e5b4cc4]; pop edi; pop ebp; ret; 
0x00115d34: adc al, byte ptr [ebx + 0x5e5b60c4]; pop edi; ret; 
0x0003dd54: adc al, byte ptr [ecx + 0x220c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000bab6a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacca: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000c06dd: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b952a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b968a: adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab8a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bacea: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b954a: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96aa: adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000babaa: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b956a: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ca: adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa39: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2a: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9419: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ea: adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b63b2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd2: adc al, byte ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b63f2: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2012: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b6412: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2032: adc al, byte ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6162: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7f8d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001aa822: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0523: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b9d: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4bc7: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1fc2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bacc2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9682: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bace2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b96a2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000bad02: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b96c2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000bad22: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b96e2: adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b6432: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b2052: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6452: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2072: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6472: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2092: adc al, byte ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000a19ce: adc al, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000bde32: adc al, byte ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1285: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde22: adc al, byte ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba152: adc al, byte ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bbcf7: adc al, ch; adc al, 0xb9; or al, 0; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f7: adc al, ch; adc al, 0xd0; or al, 0; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001721ba: adc al, ch; cmp eax, 0x81000154; ret; 
0x000fadba: adc al, ch; cmp eax, 0x810008c8; ret; 
0x000abcba: adc al, ch; cmp eax, 0x81000db9; ret; 
0x000bbd26: adc al, ch; in eax, 0xb8; or al, 0; add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba626: adc al, ch; in eax, 0xcf; or al, 0; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0015da3a: adc al, ch; mov ebp, 0x8100029b; ret; 
0x000e913a: adc al, ch; mov ebp, 0x810009e4; ret; 
0x0010addd: adc al, ch; mov ebp, 0xffff84d; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00134d60: adc al, ch; or bh, byte ptr [esi - 9]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00172bea: adc al, ch; or eax, 0x8100014a; ret; 
0x001471ea: adc al, ch; or eax, 0x81000404; ret; 
0x0013acea: adc al, ch; or eax, 0x810004c9; ret; 
0x001255ea: adc al, ch; or eax, 0x81000620; ret; 
0x00081dea: adc al, ch; or eax, 0x81001058; ret; 
0x0015079f: adc al, ch; pop ebx; jp 0x150798; jmp dword ptr [ebp - 0x75]; 
0x00135397: adc al, ch; ret; 
0x001733da: adc al, ch; sbb eax, 0x81000142; ret; 
0x00154bda: adc al, ch; sbb eax, 0x8100032a; ret; 
0x000908da: adc al, ch; sbb eax, 0x81000f6d; ret; 
0x000859da: adc al, ch; sbb eax, 0x8100101c; ret; 
0x000817da: adc al, ch; sbb eax, 0x8100105e; ret; 
0x001892da: adc al, ch; sbb eax, 0x81ffffe3; ret; 
0x000c105c: adc al, ch; scasd eax, dword ptr es:[edi]; or al, 0; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001345ca: adc al, ch; sub eax, 0x81000530; ret; 
0x000c2445: adc al, dh; ret; 
0x00157942: adc bh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x0017a36e: adc bh, ah; jmp dword ptr [esi - 0x70]; 
0x00190627: adc bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00148430: adc bh, al; inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00085f87: adc bh, al; inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x001963d5: adc bh, bh; inc dword ptr [ecx + 0x43488c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014b1c4: adc bh, bh; je 0x14b1ec; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0016c795: adc bh, bh; je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00160cdb: adc bh, bh; xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001579ab: adc bh, bh; xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0018a39e: adc bh, bl; jmp dword ptr [esi - 0x70]; 
0x000908b9: adc bh, byte ptr [eax + 0x16]; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x000a6a1c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a441c: adc bh, byte ptr [ecx]; ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x0018df06: adc bh, ch; or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0002538d: adc bh, dh; fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x000ffd2c: adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0010735a: adc bh, dh; ret 0x30f; 
0x0003bd24: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bf63: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003bd19: adc bl, bl; insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0012847d: adc bl, byte ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000bb962: adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00144e42: adc bl, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001a388d: adc bl, byte ptr [esi + 0x5d]; pop ebx; xor eax, eax; ret; 
0x0008f738: adc bl, ch; fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x0008d9cc: adc bl, ch; mov al, byte ptr [0x832c838d]; stc; call dword ptr [eax - 0x73]; 
0x00175c7c: adc bl, ch; mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0009a492: adc bl, ch; ret 0x768d; 
0x0012a86d: adc bl, ch; ret 0x868d; 
0x0008ff2f: adc bl, ch; ret 0xb68d; 
0x001422d2: adc bl, ch; ret 0xd6e8; 
0x00025485: adc bl, ch; ret; 
0x001539eb: adc bl, ch; ror byte ptr [ebp - 0x64cff70], 1; call dword ptr [edx - 0x73]; 
0x000a750d: adc bl, ch; sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0016d3c6: adc bl, ch; shr al, 0xe2; loope 0x16d3c9; jmp dword ptr [esi - 0x70]; 
0x0017a73e: adc bl, ch; shr al, cl; push 0xe; cld; jmp dword ptr [esi - 0x70]; 
0x000bdf86: adc bl, dh; movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf47: adc bl, dh; movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be108: adc bl, dh; movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be008: adc bl, dh; movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0013a185: adc byte ptr [0x3ff], bh; ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x000c4787: adc byte ptr [0x440f0000], bh; ret 0x4489; 
0x0003bbe7: adc byte ptr [0x80000000], ah; ret; 
0x00129466: adc byte ptr [eax + 0x101], bh; call dword ptr gs:[0x10]; 
0x001214af: adc byte ptr [eax + 0x127], bh; call dword ptr gs:[0x10]; 
0x001213ab: adc byte ptr [eax + 0x127], bh; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00114e66: adc byte ptr [eax + 0x12a], bh; call dword ptr gs:[0x10]; 
0x0011ed26: adc byte ptr [eax + 0x12f], bh; call dword ptr gs:[0x10]; 
0x0012eb56: adc byte ptr [eax + 0x155], bh; call dword ptr gs:[0x10]; 
0x0012e7d6: adc byte ptr [eax + 0x15], bh; call dword ptr gs:[0x10]; 
0x0012e856: adc byte ptr [eax + 0x1ad], bh; call dword ptr gs:[0x10]; 
0x0012e5f6: adc byte ptr [eax + 0x1af], bh; call dword ptr gs:[0x10]; 
0x0012c928: adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012e9b6: adc byte ptr [eax + 0x1b8], bh; call dword ptr gs:[0x10]; 
0x0012e816: adc byte ptr [eax + 0x1ba], bh; call dword ptr gs:[0x10]; 
0x0012132b: adc byte ptr [eax + 0x27b880ce], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x0012bc6f: adc byte ptr [eax + 0x3e], bh; call dword ptr gs:[0x10]; 
0x000c1433: adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdfad: adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000c14b7: adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be031: adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000afccc: adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000bba44: adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0008c371: adc byte ptr [eax + 0x528b3e42], cl; xor al, 0x85; sal byte ptr [ebp - 0x1c], cl; ret; 
0x000ba2e0: adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000ba364: adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ba464: adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00169ff2: adc byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016a0f2: adc byte ptr [eax + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016a0f2: adc byte ptr [eax + 0x63], 0xf9; call dword ptr [eax - 0x18]; ret; 
0x00034bef: adc byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x001279bf: adc byte ptr [eax + 0x6a], 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x0015281d: adc byte ptr [eax + 0x6a], dl; add bh, bh; je 0x152848; adc al, 0x55; call edi; 
0x0012e6e6: adc byte ptr [eax + 0x80], bh; call dword ptr gs:[0x10]; 
0x0012ea26: adc byte ptr [eax + 0xa7], bh; call dword ptr gs:[0x10]; 
0x0012d686: adc byte ptr [eax + 0xac], bh; call dword ptr gs:[0x10]; 
0x00129d36: adc byte ptr [eax + 0xe2], bh; call dword ptr gs:[0x10]; 
0x00127706: adc byte ptr [eax + 0xe3], bh; call dword ptr gs:[0x10]; 
0x00123b26: adc byte ptr [eax + 0xe4], bh; call dword ptr gs:[0x10]; 
0x0009863b: adc byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00091b55: adc byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x000923f7: adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092dae: adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e79f8: adc byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x00123d22: adc byte ptr [eax + 1], bh; add esp, 8; pop ebx; ret; 
0x0007cfb3: adc byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0016f820: adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x0013145f: adc byte ptr [eax + 1], bh; ret; 
0x0005bb71: adc byte ptr [eax + eax*8 + 0x5d8b2a74], al; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0009ad7e: adc byte ptr [eax + eax*8 - 0x3fcef28c], al; add esp, 8; pop ebx; ret; 
0x0003f3b8: adc byte ptr [eax + eax], 0x81; ret; 
0x000cc137: adc byte ptr [eax - 0x18], dl; ret 0x679; 
0x00024f50: adc byte ptr [eax - 0x27], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00081144: adc byte ptr [eax - 0x3b7cc1ba], cl; add al, 0x5b; pop esi; ret; 
0x0007c77b: adc byte ptr [eax - 0x3b7cc1bd], cl; adc al, 0x5b; pop esi; ret; 
0x0008f3b7: adc byte ptr [eax - 0x3f000000], 0xe8; or eax, dword ptr [ebx - 0x7d76fe20]; or byte ptr [ebx], bl; add byte ptr [eax], al; ret; 
0x0017389b: adc byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x00122fc4: adc byte ptr [eax - 0x73], dl; sbb dword ptr [ecx + 0x4a], -7; call dword ptr [eax - 1]; 
0x0013939e: adc byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x001867a2: adc byte ptr [eax - 0x73], dl; xchg dword ptr [eax + ecx*4], ecx; hlt; call dword ptr [eax - 0x18]; 
0x0009ab90: adc byte ptr [eax - 0x76f48aff], ch; ret 0xca83; 
0x000c364e: adc byte ptr [eax - 0x80], al; stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x00085964: adc byte ptr [eax - 0xf76c1ba], cl; pop ebx; pop esi; pop edi; ret; 
0x0013ca8a: adc byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fde6c: adc byte ptr [eax - 7], cl; call dword ptr [eax + 0x55]; 
0x0009f8cf: adc byte ptr [eax], 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00125c72: adc byte ptr [eax], 0x46; add byte ptr [eax], al; push eax; call 0x125d90; add esp, 0x1c; ret; 
0x000c3881: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3891: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c38a1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38b1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38c1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38d1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38e1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38f1: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3901: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3911: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c3921: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c3871: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00131fff: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00124334: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00124850: adc byte ptr [eax], 1; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x00091617: adc byte ptr [eax], ah; je 0x91628; add esp, 4; pop ebx; pop esi; ret; 
0x000c2475: adc byte ptr [eax], ah; ret; 
0x000a482a: adc byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg edx, ebx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0005ae6c: adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x0003dec7: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009aaa1: adc byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x001210ce: adc byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009a970: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, ecx; ret; 
0x000437d6: adc byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000e7b8c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, -0x26; jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00114580: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145f0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147d0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ece0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f200: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f61e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ffac: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206c0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bcc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fcc: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221d0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x00122220: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f50: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012aa00: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd8c: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0e0: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d257: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d360: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e210: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e420: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0003cd11: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x00061350: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5ac: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000a0354: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc36e: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x0010c298: adc byte ptr [eax], al; add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0016e0ba: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016dff2: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e00a: adc byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0003ccd2: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b9e: adc byte ptr [eax], al; add byte ptr [eax], al; mov ebx, edx; ret; 
0x000fba90: adc byte ptr [eax], al; add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x00120f9e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000eaf45: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0008fc9e: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00099839: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x00043194: adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001a96eb: adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0009c69c: adc byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00090f76: adc byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d5a52: adc byte ptr [eax], al; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x8eb; 
0x001262f5: adc byte ptr [eax], al; add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x001262db: adc byte ptr [eax], al; add byte ptr [ebp - 0x6af0f7d], cl; call dword ptr [ecx + 0x51]; 
0x000a463b: adc byte ptr [eax], al; add byte ptr [ebp - 0x6be6e79], cl; call dword ptr [eax - 0x73]; 
0x0002714b: adc byte ptr [eax], al; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x0011ebd1: adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a24be: adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00133210: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00061dca: adc byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00116c90: adc byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x000281fa: adc byte ptr [eax], al; add byte ptr [edx + 0x50], dl; call 0x98690; add esp, 0x1c; ret; 
0x0007c872: adc byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x001050de: adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000c295b: adc byte ptr [eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000bb127: adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000baff0: adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00027160: adc byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0012d24d: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012d24d: adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x00131ffc: adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0012e1fd: adc byte ptr [eax], al; push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e40d: adc byte ptr [eax], al; push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d34d: adc byte ptr [eax], al; push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d0cd: adc byte ptr [eax], al; push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012db23: adc byte ptr [eax], al; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00199624: adc byte ptr [eax], bh; ret 0x840f; 
0x0016e121: adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0014800f: adc byte ptr [eax], cl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0011ebd0: adc byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c2465: adc byte ptr [eax], dl; ret; 
0x000c4782: adc byte ptr [ebp + 0x10928dc0], al; cmp eax, 0x440f0000; ret 0x4489; 
0x001263a5: adc byte ptr [ebp + 0x18840fc0], al; or al, 0; add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x00126057: adc byte ptr [ebp + 0x28840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x0008a77d: adc byte ptr [ebp + 0x292e78c0], al; ret; 
0x000c53da: adc byte ptr [ebp + 0x29d975db], al; ret; 
0x00173809: adc byte ptr [ebp + 0x2d840fc0], al; adc ebx, ebp; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x00035a6f: adc byte ptr [ebp + 0x2e], 0xf9; call dword ptr [eax - 0x18]; 
0x0009065a: adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x00076df6: adc byte ptr [ebp + 0x35850fdb], al; or al, 0; add byte ptr [ecx], bh; ret 0x840f; 
0x0013da38: adc byte ptr [ebp + 0x36880ff6], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x001262ef: adc byte ptr [ebp + 0x37840fc0], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x00027baa: adc byte ptr [ebp + 0x3840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x0010cd25: adc byte ptr [ebp + 0x391678db], al; fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x000c6cc1: adc byte ptr [ebp + 0x391a74db], al; ret; 
0x0012853f: adc byte ptr [ebp + 0x391c74c0], al; ret; 
0x000c6c38: adc byte ptr [ebp + 0x392374db], al; ret; 
0x00154516: adc byte ptr [ebp + 0x39840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; sub byte ptr [esi - 7], bl; call dword ptr [eax - 0x73]; 
0x0012608d: adc byte ptr [ebp + 0x3a840fc0], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x00079762: adc byte ptr [ebp + 0x47899804], cl; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x00087f7f: adc byte ptr [ebp + 0x4889014a], cl; add al, 0xf; mov dh, 2; ret; 
0x0016efc1: adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0007d9e4: adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x00089594: adc byte ptr [ebp + 0x5b0774c0], al; pop esi; pop edi; ret; 
0x00036b3c: adc byte ptr [ebp + 0x5bcf75ff], al; pop esi; pop edi; ret; 
0x0015da6a: adc byte ptr [ebp + 0x5be175f6], al; pop esi; pop edi; ret; 
0x0013f040: adc byte ptr [ebp + 0x5e5b3e04], cl; pop edi; ret; 
0x0010b215: adc byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x0012a941: adc byte ptr [ebp + 0x5e5bf865], cl; pop ebp; ret; 
0x000bb93d: adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000bb95f: adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000bb99d: adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000bba21: adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000bbb31: adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x0012614a: adc byte ptr [ebp + 0x6c840fc0], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x001544f6: adc byte ptr [ebp + 0x71840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; int 0x5d; stc; call dword ptr [eax - 1]; 
0x00126239: adc byte ptr [ebp + 0x74840fc0], al; or eax, dword ptr [eax]; add byte ptr [ebp - 0x6afff7d], cl; call dword ptr [edx + 0x52]; 
0x000dd8fa: adc byte ptr [ebp + 0x7d840fc0], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x000a6d27: adc byte ptr [ebp + 0x94c81], cl; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000944a8: adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x00150110: adc byte ptr [ebp + 0xf0974c0], al; lahf; ret; 
0x0008f70c: adc byte ptr [ebp + 0xf0f75d2], al; add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x000fb053: adc byte ptr [ebp + 0xf1c2444], cl; inc esp; ret 0x4c89; 
0x00041df5: adc byte ptr [ebp + 0xff089c0], al; dec eax; ret 0x9387; 
0x0009b050: adc byte ptr [ebp - 0x165c8a40], al; ret; 
0x0016cc6b: adc byte ptr [ebp - 0x167a8b40], al; ret 0xfffe; 
0x000a00b6: adc byte ptr [ebp - 0x19c5037d], cl; call dword ptr [eax - 0x73]; 
0x00095d8d: adc byte ptr [ebp - 0x1a71037d], cl; call dword ptr [eax - 0x73]; 
0x0009504a: adc byte ptr [ebp - 0x1a7f1380], cl; call dword ptr [eax - 0x73]; 
0x000b8743: adc byte ptr [ebp - 0x1b160fa5], cl; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000a8a34: adc byte ptr [ebp - 0x1c7bf040], al; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x00181d77: adc byte ptr [ebp - 0x1f7bf040], al; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; into; stc; call dword ptr [ecx - 0x77]; 
0x00030352: adc byte ptr [ebp - 0x20cd437d], cl; call dword ptr [eax - 1]; 
0x00058431: adc byte ptr [ebp - 0x35f34b], cl; call dword ptr [eax - 0x48]; 
0x0016709e: adc byte ptr [ebp - 0x367bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x001260de: adc byte ptr [ebp - 0x367bf040], al; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x0012638b: adc byte ptr [ebp - 0x387bf040], al; or al, 0; add byte ptr [ebp - 0x6ad4c7d], cl; call dword ptr [ecx + 0x51]; 
0x0012621f: adc byte ptr [ebp - 0x387bf040], al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6b0357d], cl; call dword ptr [ecx + 0x51]; 
0x00126165: adc byte ptr [ebp - 0x397bf040], al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; cmp cl, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x001047b1: adc byte ptr [ebp - 0x3a7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0016edfc: adc byte ptr [ebp - 0x3d6af040], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016e894: adc byte ptr [ebp - 0x3f6af040], al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x00155601: adc byte ptr [ebp - 0x3f6bf040], al; add esp, 0xc; ret; 
0x00181507: adc byte ptr [ebp - 0x3f7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x00149be4: adc byte ptr [ebp - 0x3f7c7eec], cl; add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x00033098: adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x00145911: adc byte ptr [ebp - 0x48f0f3a8], cl; jmp dword ptr [esi - 0x77]; 
0x001814ec: adc byte ptr [ebp - 0x4c7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov cl, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x00175750: adc byte ptr [ebp - 0x587bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x001262d5: adc byte ptr [ebp - 0x5f7bf040], al; adc byte ptr [eax], al; add byte ptr [ebp - 0x6af0f7d], cl; call dword ptr [ecx + 0x51]; 
0x00155110: adc byte ptr [ebp - 0x5f7bf040], al; add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x001759a1: adc byte ptr [ebp - 0x607af040], al; out dx, eax; ljmp 0x8908:0x24748bff; ret; 
0x0015d4b7: adc byte ptr [ebp - 0x64a5b79], cl; call dword ptr [eax - 0x73]; 
0x0015d5f2: adc byte ptr [ebp - 0x64a837a], cl; call dword ptr [eax - 0x73]; 
0x00098cd4: adc byte ptr [ebp - 0x67c3b80], cl; call dword ptr [eax - 0x18]; 
0x00082026: adc byte ptr [ebp - 0x67cd37d], cl; call dword ptr [eax - 0x73]; 
0x00030a91: adc byte ptr [ebp - 0x697bf040], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; je 0x30a9b; call dword ptr [eax + 0x56]; 
0x0017ad1f: adc byte ptr [ebp - 0x69a3f7a], cl; call dword ptr [eax - 0x73]; 
0x00175adb: adc byte ptr [ebp - 0x69b3179], cl; call dword ptr [eax - 0x73]; 
0x0017912a: adc byte ptr [ebp - 0x69b7579], cl; call dword ptr [eax - 0x73]; 
0x00179bc6: adc byte ptr [ebp - 0x69b757d], cl; call dword ptr [eax - 0x73]; 
0x00160b96: adc byte ptr [ebp - 0x69fa36e], cl; call dword ptr [edx + 0x50]; 
0x00160c3a: adc byte ptr [ebp - 0x69fa380], cl; call dword ptr [eax - 1]; 
0x00153206: adc byte ptr [ebp - 0x6a21e68], cl; call dword ptr [ebx - 0x73]; 
0x00140fd2: adc byte ptr [ebp - 0x6a67680], cl; call dword ptr [eax + 0x6a]; 
0x00116e30: adc byte ptr [ebp - 0x6b60480], cl; call dword ptr [eax - 0x18]; 
0x0011135c: adc byte ptr [ebp - 0x6b65d80], cl; call dword ptr [eax + 0x6a]; 
0x0011133d: adc byte ptr [ebp - 0x6b67779], cl; call dword ptr [eax - 0x73]; 
0x00088fec: adc byte ptr [ebp - 0x6c0e87d], cl; call dword ptr [eax - 0x75]; 
0x00060835: adc byte ptr [ebp - 0x6cd847d], cl; call dword ptr [ecx + 0x50]; 
0x0014158c: adc byte ptr [ebp - 0x6cf9c6a], cl; call dword ptr [edx - 0x46]; 
0x0015330a: adc byte ptr [ebp - 0x6d69879], cl; call dword ptr [eax + 0x53]; 
0x00174f85: adc byte ptr [ebp - 0x6d7bf040], al; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016c9fa: adc byte ptr [ebp - 0x6e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0008514e: adc byte ptr [ebp - 0x6e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x0009b3e6: adc byte ptr [ebp - 0x72c28b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0016d46b: adc byte ptr [ebp - 0x74738b40], al; inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x000f8eea: adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000f1caa: adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0012d3a8: adc byte ptr [ebp - 0x74cc8b2e], al; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x001009de: adc byte ptr [ebp - 0x74d28740], al; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0010e924: adc byte ptr [ebp - 0x74dd8b40], al; jns 0x8dcad4f6; sbb dword ptr [eax], -0x5e; stc; call dword ptr [eax - 0x73]; 
0x000fb27a: adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax + 0x53]; 
0x0017a134: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x00179684: adc byte ptr [ebp - 0x74efdbb4], cl; inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x001a941d: adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x000e8707: adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00034cc7: adc byte ptr [ebp - 0x76238a40], al; ret; 
0x00181ac4: adc byte ptr [ebp - 0x76388a40], al; ret 0x838b; 
0x0014338e: adc byte ptr [ebp - 0x7677f040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0013b26e: adc byte ptr [ebp - 0x767bf040], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00153c1c: adc byte ptr [ebp - 0x76cc8b40], al; ret 0x488d; 
0x001314a5: adc byte ptr [ebp - 0x76e78b40], al; ret; 
0x0003de11: adc byte ptr [ebp - 0x785a371], cl; jmp dword ptr [ebp - 1]; 
0x001a24b7: adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019d3b3: adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000b39ec: adc byte ptr [ebp - 0x7af0efb6], cl; mov al, byte ptr [0x5b5f0000]; ret; 
0x0008cb04: adc byte ptr [ebp - 0x7af78a2e], al; ror byte ptr [edi], 0x84; push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00160663: adc byte ptr [ebp - 0x7c178a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00177b06: adc byte ptr [ebp - 0x7c1a8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0004050b: adc byte ptr [ebp - 0x7c1b8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025ffc: adc byte ptr [ebp - 0x7c1c8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00170727: adc byte ptr [ebp - 0x7c208b40], al; in al, dx; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x0016fa79: adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x000c5445: adc byte ptr [ebp - 0x7c298a25], al; les ecx, ptr [ecx + ebp]; ret; 
0x0016d233: adc byte ptr [ebp - 0x7c388b40], al; ret; 
0x00028023: adc byte ptr [ebp - 0x7c478a40], al; in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x0016c634: adc byte ptr [ebp - 0x7c4d8b40], al; in al, dx; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x00190060: adc byte ptr [ebp - 0x7c548b40], al; in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [edi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x0016df98: adc byte ptr [ebp - 0x7c578b40], al; ret; 
0x0016d913: adc byte ptr [ebp - 0x7c5b8b40], al; in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016dde9: adc byte ptr [ebp - 0x7c5e8b40], al; ret; 
0x000fb297: adc byte ptr [ebp - 0x7c6b8a40], al; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fdc53: adc byte ptr [ebp - 0x7c878b40], al; in al, dx; or byte ptr [ebp - 0x6b7d77d], cl; call dword ptr [eax + 0x55]; 
0x000fdd58: adc byte ptr [ebp - 0x7c998b40], al; in al, dx; or byte ptr [ebp - 0x6c0a97d], cl; call dword ptr [eax + 0x55]; 
0x00173afa: adc byte ptr [ebp - 0x7c9e8a40], al; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x0014c72f: adc byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014bb3f: adc byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0012b6ad: adc byte ptr [ebp - 0x7cc18b40], al; ret; 
0x00173496: adc byte ptr [ebp - 0x7cc28b40], al; in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00178358: adc byte ptr [ebp - 0x7cc98b40], al; in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0015ac29: adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6beb379], cl; call dword ptr [eax + 0x53]; 
0x001244e2: adc byte ptr [ebp - 0x7cd38740], al; in al, dx; add al, 0x89; ret; 
0x00184062: adc byte ptr [ebp - 0x7cd68b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x001707e2: adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x001840e9: adc byte ptr [ebp - 0x7cdd8b25], al; in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000337e4: adc byte ptr [ebp - 0x7ce08b40], al; in al, dx; or byte ptr [ebp - 0x68b9b7b], cl; call dword ptr [eax + 0x56]; 
0x00135678: adc byte ptr [ebp - 0x7ce48b40], al; ret; 
0x00139b4b: adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x0016faac: adc byte ptr [ebp - 0x7ce58b40], al; in al, dx; add al, 0x83; ret; 
0x001555ea: adc byte ptr [ebp - 0x7ce78b2e], al; in al, dx; or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x001146cd: adc byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012b71d: adc byte ptr [ebp - 0x7cf18b40], al; ret; 
0x00062036: adc byte ptr [ebp - 0x7cf28a40], al; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0003c977: adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00186498: adc byte ptr [ebp - 0x7cf48a2e], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00042468: adc byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001877a1: adc byte ptr [ebp - 0x7cf58a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0016de4a: adc byte ptr [ebp - 0x7cf68a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001602f2: adc byte ptr [ebp - 0x7cf68b40], al; in al, dx; or al, 0x56; call eax; 
0x0013acb2: adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0012f6d3: adc byte ptr [ebp - 0x7cf78740], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003cc96: adc byte ptr [ebp - 0x7cfa8a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00038130: adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x00122d53: adc byte ptr [ebp - 0x7e7bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014e27b: adc byte ptr [ebp - 0x87bf001], al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x0016c592: adc byte ptr [ebp - 0xd09737d], cl; call dword ptr [eax - 0x73]; 
0x00160112: adc byte ptr [ebp - 0xdcd437d], cl; call dword ptr [eax - 0x73]; 
0x001260ec: adc byte ptr [ebp - 7], cl; call dword ptr [eax + 0x55]; 
0x00038985: adc byte ptr [ebp - 7], dh; call dword ptr [edx - 0x77]; 
0x0017fe8a: adc byte ptr [ebx + 0x1074fff8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000a7545: adc byte ptr [ebx + 0x10], dh; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa7540; xor eax, eax; ret; 
0x001763f8: adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00088833: adc byte ptr [ebx + 0x120245c], cl; ret; 
0x000cd3bf: adc byte ptr [ebx + 0x12e957e8], al; idiv bh; call dword ptr [edi + 0x6a]; 
0x000452cd: adc byte ptr [ebx + 0x130244c], cl; ret 0x448b; 
0x00045097: adc byte ptr [ebx + 0x130244c], cl; ret 0xb60f; 
0x000ea243: adc byte ptr [ebx + 0x177f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x00123445: adc byte ptr [ebx + 0x1b483], cl; add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x0009843f: adc byte ptr [ebx + 0x1b7501fa], al; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0016ef4b: adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000e994d: adc byte ptr [ebx + 0x1d7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x000e943c: adc byte ptr [ebx + 0x1e7f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041cd3: adc byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0018010a: adc byte ptr [ebx + 0x207f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00094671: adc byte ptr [ebx + 0x217f01fa], al; add esp, 0x18; pop ebx; ret; 
0x001802a0: adc byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018007e: adc byte ptr [ebx + 0x247f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0008e79e: adc byte ptr [ebx + 0x2890853], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00170ef9: adc byte ptr [ebx + 0x2914244c], cl; ret 0xca39; 
0x0006ed9c: adc byte ptr [ebx + 0x291c245c], cl; ret; 
0x0009869a: adc byte ptr [ebx + 0x2e28310], cl; je 0x986b0; xor eax, eax; add esp, 0xc; ret; 
0x00159a3e: adc byte ptr [ebx + 0x311c2454], cl; dec dword ptr [ebx + 0x392c244c]; ret; 
0x000aa155: adc byte ptr [ebx + 0x39082444], cl; ret; 
0x000e90ed: adc byte ptr [ebx + 0x390c245c], cl; ret 0x470f; 
0x00149a5e: adc byte ptr [ebx + 0x3910244c], cl; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000fc85f: adc byte ptr [ebx + 0x39202454], cl; ret; 
0x0003f281: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f394: adc byte ptr [ebx + 0x448b10c4], al; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x00175ac7: adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001769ed: adc byte ptr [ebx + 0x478b0cec], al; add al, 0x57; call dword ptr [eax + 0x10]; 
0x00153e2e: adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x00189e24: adc byte ptr [ebx + 0x4c48303], cl; pop ebx; pop esi; jmp eax; 
0x001763fd: adc byte ptr [ebx + 0x508b0cec], al; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0017a138: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 0x24]; 
0x00179688: adc byte ptr [ebx + 0x52510442], cl; call dword ptr [eax + 4]; 
0x00136bac: adc byte ptr [ebx + 0x56], 0xf9; call dword ptr [eax - 0x75]; 
0x000a25c5: adc byte ptr [ebx + 0x574fff8], al; add esp, 0xc; ret; 
0x000c22b2: adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000c11e8: adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x00186120: adc byte ptr [ebx + 0x5c8b0038], al; and al, 0x14; jne 0x186130; pop ebx; ret; 
0x000bddb5: adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x00083275: adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0003a2bc: adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000260f8: adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00025017: adc byte ptr [ebx + 0x5e5b04c4], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000acbb7: adc byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a1e63: adc byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003c21e: adc byte ptr [ebx + 0x5e5b18c4], al; pop edi; ret; 
0x00027687: adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008e294: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x000a56cb: adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0009274c: adc byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0002a3a8: adc byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x0016e51e: adc byte ptr [ebx + 0x5e], bl; jmp eax; 
0x00034215: adc byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0002fa94: adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009d376: adc byte ptr [ebx + 0x5e], bl; ret; 
0x001377e7: adc byte ptr [ebx + 0x5f890c40], cl; or al, 0x89; ret 0x4589; 
0x000ef7a7: adc byte ptr [ebx + 0x6189f], cl; add byte ptr [ebp + 0x61887], cl; add byte ptr [ecx], bh; ret; 
0x00177a31: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x0003f284: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f397: adc byte ptr [ebx + 0x650c2444], cl; sub eax, dword ptr [0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x000254f5: adc byte ptr [ebx + 0x650c244c], cl; sub ecx, dword ptr [0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x0012bc34: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0018a0a1: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00040907: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b34: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e04: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e87: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x000dac66: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54ea: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79aa: adc byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x0017921a: adc byte ptr [ebx + 0x651c2444], cl; sub eax, dword ptr [0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x0013ae2d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07d: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c3: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00040cf2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a2: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a95: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x00097681: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098935: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da5: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c1: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099711: adc byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x001772b0: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177320: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177390: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f3: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177453: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c0: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177540: adc byte ptr [ebx + 0x653c2444], cl; sub eax, dword ptr [0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x00177240: adc byte ptr [ebx + 0x653c2454], cl; sub edx, dword ptr [0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x0010cdaa: adc byte ptr [ebx + 0x66082444], cl; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00117657: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001190f7: adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x000a29a0: adc byte ptr [ebx + 0x6808ec], al; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0016b772: adc byte ptr [ebx + 0x6a50fff9], 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x0013c204: adc byte ptr [ebx + 0x73e90cc4], al; mov edi, ecx; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00123752: adc byte ptr [ebx + 0x74c08500], cl; inc edi; call eax; 
0x0017a839: adc byte ptr [ebx + 0xc], dh; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0009869c: adc byte ptr [ebx + 0xe7402e2], al; xor eax, eax; add esp, 0xc; ret; 
0x00095557: adc byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00048c19: adc byte ptr [ebx + 0xf142454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00063581: adc byte ptr [ebx + 0xf2c244c], cl; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00176d7f: adc byte ptr [ebx + 5], bl; nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00176e0f: adc byte ptr [ebx + 5], bl; xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000404bd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x748d; 
0x001802dd: adc byte ptr [ebx - 0x14f3dbbc], cl; ret 0x838b; 
0x0016634d: adc byte ptr [ebx - 0x14f3dbbc], cl; ret; 
0x00094cb2: adc byte ptr [ebx - 0x17aaf314], al; hlt; ret 8; 
0x001163e3: adc byte ptr [ebx - 0x17c3dbbc], cl; ret; 
0x00184283: adc byte ptr [ebx - 0x2776cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x0016e776: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; jmp eax; 
0x0016e91a: adc byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d5b4a: adc byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x00083272: adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x0016d0ac: adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x00149c90: adc byte ptr [ebx - 0x3b7cfe18], al; add al, 0x5b; pop esi; ret; 
0x0016c545: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16c556; sub esp, 0xc; push esi; call eax; 
0x0016ca18: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16ca29; sub esp, 0xc; push esi; call eax; 
0x0016d933: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16d944; sub esp, 0xc; push edi; call eax; 
0x00171fa9: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x171fba; sub esp, 0xc; push esi; call eax; 
0x0017366d: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x17367e; sub esp, 0xc; push edi; call eax; 
0x00174a17: adc byte ptr [ebx - 0x3f7ae3c0], cl; je 0x174a28; sub esp, 0xc; push ebp; call eax; 
0x000984bb: adc byte ptr [ebx - 0x3f7af7bd], cl; je 0x984d5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a7547: adc byte ptr [ebx - 0x3f7afbc0], cl; jne 0xa7540; xor eax, eax; ret; 
0x001353ef: adc byte ptr [ebx - 0x3f7c2bb3], cl; sbb al, 0x89; out 0x89, al; ret; 
0x00090bca: adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0009d29f: adc byte ptr [ebx - 0x3fe6fe08], al; add esp, 4; pop ebx; pop esi; ret; 
0x00125b6d: adc byte ptr [ebx - 0x47f3dba4], cl; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e5bd: adc byte ptr [ebx - 0x47f3dba4], cl; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012752d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a8d: adc byte ptr [ebx - 0x47f3dba4], cl; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e97d: adc byte ptr [ebx - 0x47f3dba4], cl; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ff6d: adc byte ptr [ebx - 0x47f3dba4], cl; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00077d4d: adc byte ptr [ebx - 0x4f36b], cl; inc dword ptr [ebp - 0x5b7bf040]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000791ea: adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000c1059: adc byte ptr [ebx - 0x5017ef40], al; or al, 0; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000696f2: adc byte ptr [ebx - 0x58b6b], cl; inc dword ptr [ebp + 0xfc389c0]; test byte ptr [esi], dl; cmp byte ptr [eax], al; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000cc0b7: adc byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x00044875: adc byte ptr [ebx - 0x6216dbf4], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00149344: adc byte ptr [ebx - 0x6272f314], al; jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x00149318: adc byte ptr [ebx - 0x6272f314], al; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00149370: adc byte ptr [ebx - 0x6272f314], al; mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x0009b66d: adc byte ptr [ebx - 0x69f00208], al; ret; 
0x00048672: adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0016731a: adc byte ptr [ebx - 0x6bf00008], al; ret 0xd1e9; 
0x0007d099: adc byte ptr [ebx - 0x6bf00008], al; ret; 
0x0017a9c5: adc byte ptr [ebx - 0x6bf0fe08], al; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00061ccb: adc byte ptr [ebx - 0x6c72f714], al; jge 0x61d03; stc; call dword ptr [esi + 0x52]; 
0x000a6dd4: adc byte ptr [ebx - 0x70f0fe08], al; stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x001368b2: adc byte ptr [ebx - 0x72affb14], al; adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x56]; 
0x00136875: adc byte ptr [ebx - 0x72affb14], al; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x56]; 
0x00112e5f: adc byte ptr [ebx - 0x748bdbac], cl; jl 0x112e8b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112df4; ret; 
0x001895b4: adc byte ptr [ebx - 0x74dfdb8c], cl; inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x00089c24: adc byte ptr [ebx - 0x74dfdba4], cl; inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00089a44: adc byte ptr [ebx - 0x74ebdb8c], cl; adc esi, esi; ret 0xf08; 
0x00040759: adc byte ptr [ebx - 0x74ebdbac], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000980d7: adc byte ptr [ebx - 0x74ebdbb4], cl; inc ebx; or al, 0x89; ret 0xe281; 
0x0012ec44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e714: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f234: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c04: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114804: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e624: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e684: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114674: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e914: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e794: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e454: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128664: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e534: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e564: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c264: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e884: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf34: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec94: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e24: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f44: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f14: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114624: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127934: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127854: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127554: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127584: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab4: adc byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00179a22: adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x00179a5b: adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008184c: adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008199c: adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00089a0c: adc byte ptr [ebx - 0x75], bl; inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x001057fa: adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x000e06bb: adc byte ptr [ebx - 0x76c3dbb4], cl; ret; 
0x00046324: adc byte ptr [ebx - 0x76cfdbb4], cl; ret 0xb60f; 
0x0004677b: adc byte ptr [ebx - 0x76cfdbb4], cl; ret 0xc031; 
0x0011f6c3: adc byte ptr [ebx - 0x76e7db8c], cl; retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0011f03b: adc byte ptr [ebx - 0x76ebdbb4], cl; ret; 
0x000a31ed: adc byte ptr [ebx - 0x76f3db84], cl; ret 0xfa29; 
0x0017fb5a: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0x408d; 
0x000963b6: adc byte ptr [ebx - 0x76f3dbb4], cl; ret 0xe283; 
0x0004080a: adc byte ptr [ebx - 0x76f7dbb4], cl; ret 0xc085; 
0x0010cf19: adc byte ptr [ebx - 0x76fbdbbc], cl; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000822f7: adc byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000b42a3: adc byte ptr [ebx - 0x79f0ef15], al; cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0014a17c: adc byte ptr [ebx - 0x7a72f714], al; insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x52]; 
0x00069aec: adc byte ptr [ebx - 0x7af00008], al; ret; 
0x0011ce72: adc byte ptr [ebx - 0x7af3dbac], cl; ror byte ptr [edi], 0x84; ret 0xfffc; 
0x00123c76: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5676a], cl; call dword ptr [edx - 0x77]; 
0x00123c95: adc byte ptr [ebx - 0x7af3dbac], cl; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5646a], cl; call dword ptr [edx - 0x77]; 
0x001810cb: adc byte ptr [ebx - 0x7af7dbac], cl; sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x000744ef: adc byte ptr [ebx - 0x7bf00008], al; cmp ebx, dword ptr [eax + eax]; add byte ptr [ecx], al; ret; 
0x00143c92: adc byte ptr [ebx - 0x7c2c76ed], cl; ret 0x8303; 
0x0016a2f9: adc byte ptr [ebx - 0x7c72f714], al; js 0x16a363; stc; call dword ptr [eax + 0x51]; 
0x0016b979: adc byte ptr [ebx - 0x7c72f714], al; js 0x16b9e3; stc; call dword ptr [eax + 0x51]; 
0x0018066a: adc byte ptr [ebx - 0x7c72f714], al; mov cl, 0x66; stc; call dword ptr [ebp + 0x50]; 
0x0006127d: adc byte ptr [ebx - 0x7cf3dbbc], cl; les ebx, ptr [eax]; pop ebx; ret; 
0x00041e3d: adc byte ptr [ebx - 0x7cf3dbbc], cl; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005c4a6: adc byte ptr [ebx - 0x876b], cl; inc dword ptr [ecx]; ret 0x5589; 
0x00144ea8: adc byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x0007f9b0: adc byte ptr [ebx], bh; push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x0016f07a: adc byte ptr [ebx], ch; inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00087507: adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x00095337: adc byte ptr [ecx + 0x10eb8c1], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008af0e: adc byte ptr [ecx + 0x29042444], cl; ret 0x48b; 
0x000ab4a7: adc byte ptr [ecx + 0x3118244c], cl; rol byte ptr [ecx], cl; ret; 
0x000aae93: adc byte ptr [ecx + 0x3118244c], cl; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000ab767: adc byte ptr [ecx + 0x3118247c], cl; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x00188c85: adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x0008851d: adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0016d5e6: adc byte ptr [ecx + 0x4438bc6], cl; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x000c1517: adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be074: adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000c1547: adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be094: adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x00087997: adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000bbab4: adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00080865: adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x000ea2cb: adc byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000e84c8: adc byte ptr [ecx + 0x4f8b184e], cl; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000864ec: adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017a169: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax + 0x20]; 
0x001792f9: adc byte ptr [ecx + 0x52], dl; call dword ptr [eax]; 
0x00080691: adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0008e19b: adc byte ptr [ecx + 0x5b0c244c], cl; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x0007f822: adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x001873d9: adc byte ptr [ecx + 0x5bd08930], cl; pop esi; ret; 
0x0005bf48: adc byte ptr [ecx + 0x5bf08903], cl; pop esi; pop edi; ret; 
0x000a75da: adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x00086258: adc byte ptr [ecx + 0x5e5b0450], cl; ret; 
0x000dd14b: adc byte ptr [ecx + 0x5e5b0470], cl; pop edi; ret; 
0x0009d373: adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x00040a57: adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x0005b780: adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x000ba3a4: adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ba3c4: adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x00185066: adc byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0013d074: adc byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0003ca8d: adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0014ae74: adc byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0007a038: adc byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x0011132b: adc byte ptr [ecx + 0x74ff85f8], cl; add eax, 0x75003f80; sbb eax, 0x8b056a50; jl 0x111361; adc byte ptr [ebp - 0x6b67779], cl; call dword ptr [eax - 0x73]; 
0x0005b656: adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0013fc9f: adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x001108b9: adc byte ptr [ecx + 0xfc08507], cl; test ah, bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x000390f7: adc byte ptr [ecx + 0xfc085c1], cl; test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x00084906: adc byte ptr [ecx + 0xfc085c7], cl; test byte ptr [eax - 0x7d000000], al; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00186f7e: adc byte ptr [ecx + 0xfc085d8], cl; inc esp; ret 0x178b; 
0x001227c9: adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x0013ba2f: adc byte ptr [ecx - 0x16f3dbb4], cl; daa; test al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0013b9cf: adc byte ptr [ecx - 0x16f3dbb4], cl; mov bh, 0xa4; hlt; jmp dword ptr [esi - 0x70]; 
0x0013b9ff: adc byte ptr [ecx - 0x16f3dbb4], cl; out 0xa6, eax; hlt; jmp dword ptr [esi - 0x70]; 
0x00056890: adc byte ptr [ecx - 0x362743], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x000d5e77: adc byte ptr [ecx - 0x366b6b], cl; push dword ptr [ecx]; rol byte ptr [ebx - 0x363343], cl; call dword ptr [eax]; 
0x0005ae72: adc byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x000f1df5: adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012a020: adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017a5d5: adc byte ptr [ecx - 0x537672e8], cl; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00066629: adc byte ptr [ecx - 0x58f43], cl; inc dword ptr [eax - 0x76ffb987]; lea ebx, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x000f1d0e: adc byte ptr [ecx - 0x5eb7b], cl; call dword ptr [esi - 0x18]; 
0x000f8f4e: adc byte ptr [ecx - 0x5fb7b], cl; call dword ptr [esi - 0x18]; 
0x00148d60: adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x001234f4: adc byte ptr [ecx - 0x73], dl; mov esp, dword ptr [ecx + ebx*2 - 7]; call dword ptr [ecx + 0x50]; 
0x0007c578: adc byte ptr [ecx - 0x74f3dbb4], cl; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000e3a24: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x448b; 
0x000e50bb: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0x7e9; 
0x000e5066: adc byte ptr [ecx - 0x76bfdbbc], cl; ret 0xcae9; 
0x0002e06b: adc byte ptr [ecx - 0x76c3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000a3868: adc byte ptr [ecx - 0x76d7db84], cl; ret 0xc6eb; 
0x00096dda: adc byte ptr [ecx - 0x76efdbb4], cl; ret 0xc74; 
0x0018fe70: adc byte ptr [ecx - 0x76f7dbbc], cl; fcomp dword ptr [ebx - 0x17]; and ecx, ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0012edc0: adc byte ptr [ecx - 0x7a3fce3e], cl; sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x00047a80: adc byte ptr [ecx - 0x7ab3dbbc], cl; ror byte ptr [edi], 0x84; ret 0x29; 
0x001009d3: adc byte ptr [ecx - 0x7c27d608], cl; ret; 
0x000a70cf: adc byte ptr [ecx - 0x7c3fcef0], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x00102733: adc byte ptr [ecx - 0x7cefdba4], cl; ret 0x3904; 
0x00083340: adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x0016d479: adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x16d491; push ebx; call dword ptr [esi + 0x14]; 
0x0005bfc3: adc byte ptr [ecx - 0xa743], cl; dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x00032ea6: adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0005becb: adc byte ptr [ecx - 0xf766efc], cl; pop ebx; pop esi; pop edi; ret; 
0x00083c4d: adc byte ptr [ecx], ah; ret 0xfa83; 
0x000c3882: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3892: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c38a2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38b2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38c2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38d2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38e2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38f2: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3902: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3912: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c3922: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c3872: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00132000: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00124335: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00124851: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x0011452a: adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001482ee: adc byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00186802: adc byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0011454e: adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1816: adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001032ec: adc byte ptr [ecx], al; ret 0x448b; 
0x00082efe: adc byte ptr [ecx], al; ret 0x562b; 
0x000c2025: adc byte ptr [ecx], al; ret 0x67c; 
0x00146aa5: adc byte ptr [ecx], al; ret 0x6fe9; 
0x000a36e3: adc byte ptr [ecx], al; ret 0xfa01; 
0x000800ee: adc byte ptr [ecx], al; ret; 
0x001969d6: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968d1: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949c6: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948c1: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929c6: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928c1: adc byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016eeb2: adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x0010bec7: adc byte ptr [ecx], bh; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00089c2e: adc byte ptr [ecx], bh; ret 0x2773; 
0x001895be: adc byte ptr [ecx], bh; ret 0x4d72; 
0x00150ba5: adc byte ptr [ecx], bh; ret 0x6674; 
0x0004b745: adc byte ptr [ecx], bh; ret 0x840f; 
0x000a3f22: adc byte ptr [ecx], bh; ret 0x850f; 
0x000713dc: adc byte ptr [ecx], bh; ret 0x8c0f; 
0x0014f065: adc byte ptr [ecx], bh; ret 0xea75; 
0x00024c3f: adc byte ptr [ecx], bh; ret; 
0x00149a62: adc byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x0008d317: adc byte ptr [ecx], bh; sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000c54ed: adc byte ptr [ecx], bh; sal dword ptr [ebp + 0x18], 1; ret; 
0x00081c77: adc byte ptr [ecx], bh; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ad1f7: adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000a7611: adc byte ptr [ecx], ch; ret 0x408b; 
0x000ddae3: adc byte ptr [ecx], ch; ret 0x880f; 
0x00042150: adc byte ptr [ecx], ch; ret 0xc269; 
0x000a8c45: adc byte ptr [ecx], ch; ret 0xc8d; 
0x001a85e9: adc byte ptr [ecx], ch; ret 0xe183; 
0x0008ab20: adc byte ptr [ecx], ch; ret 0xfa39; 
0x00038b61: adc byte ptr [ecx], ch; ret; 
0x000b99f9: adc byte ptr [ecx], ch; retf 0x10e8; fmul qword ptr [eax + eax]; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb029: adc byte ptr [ecx], ch; retf 0xe0e8; lds ecx, ptr [eax + eax]; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1017: adc byte ptr [ecx], ch; retf 0xf2e8; or al, 0; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001350f4: adc byte ptr [ecx], cl; ret; 
0x001abefd: adc byte ptr [ecx], dh; fld xword ptr [ecx]; ret 0xe2c1; 
0x000853fd: adc byte ptr [ecx], dh; fucomi st(1); ret; 
0x0013ca20: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00081d73: adc byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016fd43: adc byte ptr [ecx], dh; ret; 
0x001347ee: adc byte ptr [ecx], dh; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0016ee27: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x001380ec: adc byte ptr [ecx], dh; rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x000300b7: adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x000b800f: adc byte ptr [edi + 0x5b], bl; ret; 
0x000ba25d: adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b07ea: adc byte ptr [edi + 0x5e], bl; ret; 
0x00174f7b: adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00191bc7: adc byte ptr [edi], cl; adc dl, 0x84; cli; jmp dword ptr [esi - 0x70]; 
0x00194697: adc byte ptr [edi], cl; add byte ptr [edx], 0x5a; cli; jmp dword ptr [esi - 0x70]; 
0x00192697: adc byte ptr [edi], cl; add byte ptr [edx], 0x7a; cli; jmp dword ptr [esi - 0x70]; 
0x00190c97: adc byte ptr [edi], cl; add byte ptr [edx], 0x94; cli; jmp dword ptr [esi - 0x70]; 
0x001988d7: adc byte ptr [edi], cl; add dl, 0x17; cli; jmp dword ptr [esi - 0x70]; 
0x00196677: adc byte ptr [edi], cl; and byte ptr [edx], 0x3a; cli; jmp dword ptr [esi - 0x70]; 
0x001998b7: adc byte ptr [edi], cl; and dl, 7; cli; jmp dword ptr [esi - 0x70]; 
0x001a94ed: adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x00070ba2: adc byte ptr [edi], cl; dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000b0440: adc byte ptr [edi], cl; inc edi; ret 0x5350; 
0x000abca3: adc byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x00181412: adc byte ptr [edi], cl; mov bh, 0x99; insb byte ptr es:[edi], dx; test eax, 0x728d0000; jmp dword ptr [esi - 0x7d]; 
0x0004360f: adc byte ptr [edi], cl; mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x0004866b: adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00047bc7: adc byte ptr [edi], cl; mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000c0ff5: adc byte ptr [edi], cl; mov esp, 0x6613e8d2; or al, 0; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1d42: adc byte ptr [edi], cl; mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000bdcf5: adc byte ptr [edi], cl; mov esp, 0x9913e8d2; or al, 0; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb008: adc byte ptr [edi], cl; mov esp, 0xc600e8d2; or al, 0; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99d8: adc byte ptr [edi], cl; mov esp, 0xdc30e8d2; or al, 0; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017e8f3: adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x001a84bd: adc byte ptr [edi], cl; or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x0010d55c: adc byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffc], ah; ret 0xf20; 
0x00148a39: adc byte ptr [edi], cl; test dword ptr [eax - 0x7cffffff], eax; in al, dx; or al, 0x8d; sbb dword ptr [ebx + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x001a91ee: adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x000bb480: adc byte ptr [edi], cl; test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b9e0d: adc byte ptr [edi], cl; test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001a9472: adc byte ptr [edi], cl; test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x000b39ef: adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x001a9352: adc byte ptr [edi], cl; test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x000d5cde: adc byte ptr [edi], cl; test ebx, ecx; or al, 0; add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x000d9c20: adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b7de0: adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001a774b: adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a5043: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a3bbc: adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x001441f1: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x001af2d5: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc209; 
0x000a4a6c: adc byte ptr [edi], cl; xchg ebp, eax; ret 0xe683; 
0x00149ff4: adc byte ptr [edi], cl; xchg esp, eax; ret 0xa3c; 
0x00047bce: adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000c8572: adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0013d54c: adc byte ptr [edi], cl; xchg esp, eax; ret; 
0x001918a7: adc byte ptr [edi], cl; xor dl, 0x87; cli; jmp dword ptr [esi - 0x70]; 
0x0019a8a7: adc byte ptr [edi], cl; xor dl, 0xf7; stc; jmp dword ptr [esi - 0x70]; 
0x001797d9: adc byte ptr [edx + 0x51], dl; call dword ptr [eax + 4]; 
0x00179811: adc byte ptr [edx + 0x51], dl; call dword ptr [eax]; 
0x00179edf: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x20]; 
0x00172e6b: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 0x24]; 
0x00179509: adc byte ptr [edx + 0x53], dl; call dword ptr [eax + 4]; 
0x0017949e: adc byte ptr [edx + 0x53], dl; call dword ptr [eax]; 
0x0013d18e: adc byte ptr [edx + 0x56], dl; call eax; 
0x0013d0b1: adc byte ptr [edx + 0x57], dl; call eax; 
0x0003e286: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x4d950; add esp, 0x1c; ret; 
0x0003e2c6: adc byte ptr [edx + 0xa], ch; push 0; push dword ptr [esp + 0x1c]; call 0x51680; add esp, 0x1c; ret; 
0x001256b8: adc byte ptr [edx + 1], bh; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0007c536: adc byte ptr [edx + 1], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x00035236: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x18]; push 0; call 0x351e0; add esp, 0x1c; ret; 
0x00035216: adc byte ptr [edx + 5], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x0016de86: adc byte ptr [edx + 8], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1799b0; add esp, 0x1c; ret; 
0x00159756: adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0005bad9: adc byte ptr [edx - 7], bh; call dword ptr [eax - 0x18]; 
0x00129406: adc byte ptr [edx], bh; adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010e4f6: adc byte ptr [edx], ch; push dword ptr [esp + 0x18]; push -1; call 0x10e8a0; add esp, 0x1c; ret; 
0x0003d996: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d920; add esp, 0x1c; ret; 
0x0007f4c6: adc byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x0016c88e: adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x000819a0: adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00144f12: adc byte ptr [esi + 0x5f], bl; pop ebp; ret; 
0x001a3f87: adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a1243: adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001a80ea: adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001a8102: adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1cdd: adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000fe3a9: adc byte ptr [esi + ecx - 0x77], dh; ret 0xef89; 
0x0014cc30: adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x000c14e8: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000be055: adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x000bba65: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ba385: adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00185a31: adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00125c73: adc byte ptr [esi], al; add byte ptr [eax - 0x18], dl; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00031fe4: adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x0014d75f: adc ch, byte ptr [ecx]; ret 0xd101; 
0x000445cb: adc cl, byte ptr [0x44830000]; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x000b9d8a: adc cl, byte ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00087fbd: adc cl, byte ptr [ebp + 0x4889014a]; add al, 0xf; mov dh, 2; ret; 
0x00143219: adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00168813: adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000a92b5: adc cl, byte ptr [ebp - 0x971c37e]; inc dword ptr [eax - 0x6d72fd1b]; or al, 0x5b; call 0xc24ea2c7; ret; 
0x000aca55: adc cl, byte ptr [ebp - 0x9c0d37e]; inc dword ptr [eax - 0x6d72fd1b]; sbb al, 0x58; call 0xc24eda67; ret; 
0x000a9d65: adc cl, byte ptr [ebp - 0x9e5e37e]; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x57; call 0xc24ead77; ret; 
0x000acb15: adc cl, byte ptr [ebp - 0x9ffd37e]; inc dword ptr [eax - 0x6d72fd1b]; insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x000aaa75: adc cl, byte ptr [ebp - 0xa14437e]; inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0x65; call 0xc24eba87; ret; 
0x0013ae82: adc cl, byte ptr [ebp - 0xaa7837e]; inc dword ptr [ebx - 0x6d72fe1d]; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x0009b2dd: adc cl, byte ptr [ebx + 0x144a3908]; je 0x9b2f0; ret; 
0x0013145d: adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a1535: adc cl, byte ptr [ecx + 0x4b891459]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000b62d6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6436: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef6: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2056: adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6456: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2076: adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6476: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2096: adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000432dd: adc cl, byte ptr [edi]; mov ebp, 0x1ff183ca; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0016ef92: adc cl, byte ptr [edi]; retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000bdeb6: adc cl, byte ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00171ad7: adc cl, ch; cmp dh, 0xff; call dword ptr [ecx + 0x51]; 
0x00171ad7: adc cl, ch; cmp dh, 0xff; call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00168c46: adc cl, ch; mov al, byte ptr [0x8dfffff8]; xchg dword ptr [eax - 0x4a], eax; stc; call dword ptr [eax - 0x73]; 
0x000302e4: adc cl, ch; push 0x8dffffff; add dword ptr [eax], 0x73; stc; call dword ptr [eax - 0x73]; 
0x00064040: adc cl, ch; ret 0xffeb; 
0x0006f56e: adc cl, ch; ret 0xfffa; 
0x00107931: adc cl, ch; ret 0xfffb; 
0x0014d434: adc cl, ch; ret 0xfffe; 
0x00034530: adc cl, ch; ret; 
0x0010d9ae: adc cl, ch; sar ebx, 0xff; call dword ptr [eax + 0x50]; 
0x0017471f: adc cl, ch; test eax, 0x51fffffe; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0010c59a: adc dh, al; add al, byte ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00068966: adc dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0014e9d5: adc dh, byte ptr [ecx]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0005b79c: adc dh, dh; add ah, byte ptr [eax]; je 0x5b7b0; add esp, 0xc; ret; 
0x0007958c: adc dh, dh; add ah, byte ptr [eax]; je 0x795a0; add esp, 0xc; ret; 
0x000d3271: adc dh, dh; dec dword ptr [ebp - 0x661cf7d]; call dword ptr [eax - 0x73]; 
0x000a5c29: adc dh, dh; ret 0xf02; 
0x00153389: adc dh, dh; ret 0xf20; 
0x0005ed72: adc dh, dh; ret 0xf40; 
0x0013f446: adc dh, dh; ret; 
0x00191bc9: adc dl, 0x84; cli; jmp dword ptr [esi - 0x70]; 
0x000a0d43: adc dl, byte ptr [eax + 0x34c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d93: adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc3: adc dl, byte ptr [eax + 0x3549089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a33: adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a0a13: adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a0d13: adc dl, byte ptr [eax + 0x3709089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac3: adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0d73: adc dl, byte ptr [eax + 0x3c749089]; add byte ptr [eax], al; ret; 
0x0013fd03: adc dl, byte ptr [ebx - 0x18]; cmpsb byte ptr [esi], byte ptr es:[edi]; pop ss; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000b99e4: adc dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9ae6: adc dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bdd64: adc dl, dl; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000dee56: adc dword ptr [0x68fff946], -0x16; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dee37: adc dword ptr [0x68fff946], -0xf; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x0012c6fb: adc dword ptr [eax + 0x174ffef], ecx; ret; 
0x001469a0: adc dword ptr [eax + 0x40], -7; call dword ptr [eax + 0x56]; 
0x001649f0: adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x0008d9e3: adc dword ptr [eax + 0x50fff93e], -0x18; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x000a31e5: adc dword ptr [eax + 3], 0; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x00198c1c: adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017054c: adc dword ptr [eax - 0x27c600b0], ecx; jne 0x170540; pop ebx; ret; 
0x0012ba93: adc dword ptr [eax - 0x5b], -7; call dword ptr [eax - 0x18]; 
0x001586e0: adc dword ptr [eax - 0x5f], 0; add byte ptr [eax - 0x73], dl; or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x000ebedb: adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; 
0x000edc13: adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x000eafb1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000613d1: adc dword ptr [eax - 1], edi; pop ebx; pop esi; pop edi; ret; 
0x00040789: adc dword ptr [eax - 1], edi; pop ebx; pop esi; ret; 
0x0003cd31: adc dword ptr [eax - 1], edi; pop ebx; ret; 
0x00024f30: adc dword ptr [eax - 1], edi; ret; 
0x0007bcc3: adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x000fde6b: adc dword ptr [eax], 0x48; stc; call dword ptr [eax + 0x55]; 
0x001260eb: adc dword ptr [eax], 0x4d; stc; call dword ptr [eax + 0x55]; 
0x000a460c: adc dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*2], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a4860: adc dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, esp; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00074181: adc dword ptr [eax], eax; add byte ptr [ebp - 0x77bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00180695: adc dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00110ad5: adc dword ptr [eax], eax; add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], esi; stc; call dword ptr [eax + 0x68]; 
0x00044776: adc dword ptr [eax], eax; add byte ptr [ebx - 0x7cb3dbbc], cl; rol byte ptr [ecx], 0x39; ret 0x8c0f; 
0x00031e55: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x00031def: adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x000b9ae7: adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b99c0: adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012484d: adc dword ptr [eax], eax; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x0013efbc: adc dword ptr [eax], eax; pop ebx; ret; 
0x0011f60d: adc dword ptr [eax], eax; push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011ff9d: adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122afd: adc dword ptr [eax], eax; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120bbd: adc dword ptr [eax], eax; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001221bd: adc dword ptr [eax], eax; push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012cd7d: adc dword ptr [eax], eax; push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120fbd: adc dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011eccd: adc dword ptr [eax], eax; push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00129408: adc dword ptr [eax], eax; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff13: adc dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001202b8: adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0015b833: adc dword ptr [ebp + 0x39e074c9], eax; or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x000846c5: adc dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x000c10fc: adc dword ptr [ebp + 0xc], esp; add byte ptr [ecx + 0x109f74c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001229f8: adc dword ptr [ebp + 8], esi; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0009a2c4: adc dword ptr [ebp + eax*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x000fe14a: adc dword ptr [ebp - 0x637af001], eax; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x0008fb69: adc dword ptr [ebp - 0xb], esi; and eax, 0x39; cmp eax, 8; je 0x8fb78; add esp, 0xc; ret; 
0x000908b7: adc dword ptr [ebx + 0x16b812], ecx; add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0016e8ff: adc dword ptr [ebx + 0x26a0000], 0x68; pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0016f403: adc dword ptr [ebx + 0x29342454], ecx; ret 0xfa01; 
0x00094bf6: adc dword ptr [ebx + 0x40], -7; call dword ptr [eax + 0x6a]; 
0x0012609a: adc dword ptr [ebx + 0x4c], -7; call dword ptr [eax + 0x55]; 
0x0008f2ee: adc dword ptr [ebx + 0x54890450], ecx; and al, 4; jmp dword ptr [eax]; 
0x00155297: adc dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0007961e: adc dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x0012064e: adc dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0013f0c3: adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000fbc26: adc dword ptr [ebx + 0x5e], ebx; ret; 
0x001aba82: adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00160f42: adc dword ptr [ebx - 0x17acf314], eax; les edi, ptr [ecx]; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00160d93: adc dword ptr [ebx - 0x17aff314], eax; jae 0x160dd6; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x000390c8: adc dword ptr [ebx - 0x3e7ccf16], eax; add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x0016d1fe: adc dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x001a3f1e: adc dword ptr [ebx - 0x48], ebx; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a3f29; neg eax; ret; 
0x000c2f32: adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000327eb: adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000efb51: adc dword ptr [ecx + 0x47], -7; call dword ptr [eax - 0x18]; 
0x00141156: adc dword ptr [ecx + 0x59], -7; dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x000a391f: adc dword ptr [ecx + 0x68fff941], 0x2f; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x6e; stc; call dword ptr [eax - 0x18]; 
0x001262f9: adc dword ptr [ecx + edx*2], -7; call dword ptr [edx + 0x52]; 
0x001b2f05: adc dword ptr [ecx - 0x7cfbee84], ecx; ret 0x3908; 
0x001aba7f: adc dword ptr [ecx - 0x7cfbee94], ecx; ret 0x3908; 
0x000280c6: adc dword ptr [ecx], eax; ret 0xc083; 
0x0007188e: adc dword ptr [ecx], eax; ret; 
0x000a2614: adc dword ptr [ecx], edi; ret 0x1d73; 
0x0013e874: adc dword ptr [ecx], edi; ret 0x460f; 
0x000b9ac8: adc dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9b67: adc dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ff0ae: adc dword ptr [ecx], esi; rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x000bb940: adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0009a1ac: adc dword ptr [edi + eax*8 - 0x15], esi; out 0x89, eax; ret 0xe283; 
0x000fe2b4: adc dword ptr [edi], 0x33; stc; call dword ptr [edx + 0x52]; 
0x00088fee: adc dword ptr [edi], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x0004a44c: adc dword ptr [edi], ecx; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002dbfb: adc dword ptr [edi], esp; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + esi*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x000903bb: adc dword ptr [edx + eax], 0x10000; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00068965: adc dword ptr [edx], 0x33; stc; call dword ptr [eax - 0x18]; 
0x00144e41: adc dword ptr [edx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00142f83: adc dword ptr [edx], eax; out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x000fdd61: adc dword ptr [esi + 0x3f], -7; call dword ptr [eax + 0x55]; 
0x001368b8: adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x56]; 
0x001235f7: adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x6a]; 
0x000b3e51: adc dword ptr [esi - 0x77], esp; push ecx; add al, 0x5b; ret; 
0x0017d514: adc dword ptr [esi - 7], esp; call dword ptr [eax - 0x18]; 
0x000fe0bc: adc dword ptr [esi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x0013687b: adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x56]; 
0x00024794: adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x0002485f: adc dword ptr [esi], 0x56; stc; call dword ptr [edi + 0x57]; 
0x00162493: adc dword ptr [esi], 0x61; stc; call dword ptr [eax - 0x18]; 
0x000fb5d4: adc dword ptr [esi], esp; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb734: adc dword ptr [esi], esp; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000fba3f: adc dword ptr [esi], esp; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x000c2f31: adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0015a653: adc eax, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x0009fba1: adc eax, -0x77; stc; call dword ptr [eax - 0x18]; 
0x00187708: adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001489c0: adc eax, 0; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x0003dec6: adc eax, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e7b8b: adc eax, 0x10; cmp eax, -0x26; jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0011457f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145ef: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147cf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ecdf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f1ff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f61d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ffab: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206bf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bcb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fcb: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221cf: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x0012221f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f4f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012a9ff: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd8b: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0df: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d256: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d35f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e20f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e41f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0003cd10: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x0006134f: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5ab: adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000a0353: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc36d: adc eax, 0x10; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x0010c297: adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003ccd1: adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b9d: adc eax, 0x10; mov ebx, edx; ret; 
0x000fba8f: adc eax, 0x10; neg eax; pop ebx; ret; 
0x00120f9d: adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x000eaf44: adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0008fc9d: adc eax, 0x10; pop ebx; pop esi; ret; 
0x0013dc52: adc eax, 0x10; pop ebx; ret; 
0x0009c69b: adc eax, 0x10; ret; 
0x0010c2f6: adc eax, 0x14; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c399: adc eax, 0x14; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c606: adc eax, 0x14; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e572: adc eax, 0x14; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x00113467: adc eax, 0x14; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x0011ec5d: adc eax, 0x14; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00120c91: adc eax, 0x14; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d11: adc eax, 0x14; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00121f75: adc eax, 0x14; jne 0x121f87; add esp, 0x1c; ret; 
0x00124056: adc eax, 0x14; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x00124485: adc eax, 0x14; jne 0x124490; add esp, 0x1c; ret; 
0x00124f1c: adc eax, 0x14; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125c18: adc eax, 0x14; jne 0x125c23; add esp, 0x1c; ret; 
0x00129c29: adc eax, 0x14; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cc9: adc eax, 0x14; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012b7a4: adc eax, 0x14; jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc3b: adc eax, 0x14; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f148: adc eax, 0x14; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1b0: adc eax, 0x14; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f22f: adc eax, 0x14; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2a8: adc eax, 0x14; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f314: adc eax, 0x14; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f394: adc eax, 0x14; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f67f: adc eax, 0x14; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f780: adc eax, 0x14; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7f0: adc eax, 0x14; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbd8: adc eax, 0x14; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc40: adc eax, 0x14; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fcc8: adc eax, 0x14; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd40: adc eax, 0x14; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffaf: adc eax, 0x14; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c6: adc eax, 0x14; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130134: adc eax, 0x14; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301bf: adc eax, 0x14; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302c7: adc eax, 0x14; jne 0x1302d2; add esp, 0x7c; ret; 
0x00130356: adc eax, 0x14; jne 0x130361; add esp, 0x1c; ret; 
0x0013ae34: adc eax, 0x14; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c084: adc eax, 0x14; jne 0x13c095; add esp, 0x2c; ret; 
0x001465a1: adc eax, 0x14; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465e9: adc eax, 0x14; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146638: adc eax, 0x14; jne 0x146643; add esp, 0x1c; ret; 
0x0014851d: adc eax, 0x14; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485bd: adc eax, 0x14; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x0014867d: adc eax, 0x14; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x0014871d: adc eax, 0x14; jne 0x14874d; add esp, 0x11c; ret; 
0x00148c42: adc eax, 0x14; jne 0x148c8c; add esp, 0x1c; ret; 
0x0014c875: adc eax, 0x14; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f25: adc eax, 0x14; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x0016cdaa: adc eax, 0x14; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00172c58: adc eax, 0x14; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e11: adc eax, 0x14; jne 0x175e27; add esp, 0x1c; ret; 
0x00175f3d: adc eax, 0x14; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fdd: adc eax, 0x14; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x00176321: adc eax, 0x14; jne 0x176337; add esp, 0x1c; ret; 
0x001763a4: adc eax, 0x14; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x00177247: adc eax, 0x14; jne 0x177252; add esp, 0x4c; ret; 
0x001792d3: adc eax, 0x14; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c3: adc eax, 0x14; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x0017969a: adc eax, 0x14; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x0017973a: adc eax, 0x14; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f8: adc eax, 0x14; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x0017987c: adc eax, 0x14; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x00179910: adc eax, 0x14; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a14a: adc eax, 0x14; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1ea: adc eax, 0x14; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a28a: adc eax, 0x14; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a32a: adc eax, 0x14; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa21: adc eax, 0x14; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa81: adc eax, 0x14; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aaeb: adc eax, 0x14; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab9b: adc eax, 0x14; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff86: adc eax, 0x14; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x00180480: adc eax, 0x14; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x0018103a: adc eax, 0x14; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x001848cc: adc eax, 0x14; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x00187210: adc eax, 0x14; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a8: adc eax, 0x14; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190253: adc eax, 0x14; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001905ca: adc eax, 0x14; jne 0x1905d5; add esp, 0x2c; ret; 
0x0003d07a: adc eax, 0x14; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d21f: adc eax, 0x14; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d632: adc eax, 0x14; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dad2: adc eax, 0x14; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db52: adc eax, 0x14; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbdb: adc eax, 0x14; jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003e1b9: adc eax, 0x14; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0004090e: adc eax, 0x14; jne 0x40919; add esp, 0x1c; ret; 
0x00040b3b: adc eax, 0x14; jne 0x40b46; add esp, 0x1c; ret; 
0x00040cf9: adc eax, 0x14; jne 0x40d04; add esp, 0x2c; ret; 
0x00040e0b: adc eax, 0x14; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8e: adc eax, 0x14; jne 0x40e99; add esp, 0x1c; ret; 
0x00041eac: adc eax, 0x14; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x000535a9: adc eax, 0x14; jne 0x535b4; add esp, 0x2c; ret; 
0x0005ae27: adc eax, 0x14; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0006163b: adc eax, 0x14; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c2: adc eax, 0x14; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x00092a9c: adc eax, 0x14; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f8: adc eax, 0x14; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097688: adc eax, 0x14; jne 0x97693; add esp, 0x2c; ret; 
0x0009893c: adc eax, 0x14; jne 0x98947; add esp, 0x2c; ret; 
0x00098dac: adc eax, 0x14; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c8: adc eax, 0x14; jne 0x992d3; add esp, 0x2c; ret; 
0x00099718: adc eax, 0x14; jne 0x99723; add esp, 0x2c; ret; 
0x0009c635: adc eax, 0x14; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c3: adc eax, 0x14; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2f: adc eax, 0x14; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd8f: adc eax, 0x14; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009eb75: adc eax, 0x14; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff3d: adc eax, 0x14; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000a04fd: adc eax, 0x14; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000c656c: adc eax, 0x14; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dabe9: adc eax, 0x14; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac6d: adc eax, 0x14; jne 0xdac78; add esp, 0x1c; ret; 
0x000dacb7: adc eax, 0x14; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad19: adc eax, 0x14; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dc232: adc eax, 0x14; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc5b6: adc eax, 0x14; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000e54f1: adc eax, 0x14; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79b1: adc eax, 0x14; jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b25: adc eax, 0x14; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d43: adc eax, 0x14; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e8b69: adc eax, 0x14; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bdb: adc eax, 0x14; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c7f: adc eax, 0x14; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000efebe: adc eax, 0x14; jne 0xefed7; add esp, 0x1c; ret; 
0x000f11f7: adc eax, 0x14; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d07: adc eax, 0x14; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af7: adc eax, 0x14; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7627: adc eax, 0x14; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8437: adc eax, 0x14; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x001228aa: adc eax, 0x14ba; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x00024a9a: adc eax, 0x18; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x0002703e: adc eax, 0x241c8900; call edi; 
0x000260db: adc eax, 0x241c8900; call esi; 
0x0002624e: adc eax, 0x241c8900; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268f8: adc eax, 0x241c8900; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0002f7b8: adc eax, 0x24348900; call ebx; 
0x000c1aba: adc eax, 0x29c0bc0f; ret 0x860f; 
0x001928cd: adc eax, 0x300046d; sbb al, 0x8b; jmp ebx; 
0x0013ec64: adc eax, 0x3900768d; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x0017a3ba: adc eax, 0x4189c229; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x000649ad: adc eax, 0x508d0000; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x00080c36: adc eax, 0x5b20c483; pop esi; pop edi; ret; 
0x0012ee11: adc eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x000faf99: adc eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000a75bf: adc eax, 0x5bfff7ce; pop esi; pop edi; ret; 
0x000b4168: adc eax, 0x5bfffffe; ret; 
0x00095e00: adc eax, 0x68; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000dee38: adc eax, 0x68fff946; int1; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000dee57: adc eax, 0x68fff946; ljmp 0x838d:0x50000002; dec ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0008f190: adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008f1c7: adc eax, 0x78; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008fb13: adc eax, 0x78; pop ebx; ret; 
0x0008f279: adc eax, 0x7c; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x0008f24b: adc eax, 0x7c; pop ebx; ret; 
0x0019a9e4: adc eax, 0x81fffecc; ret; 
0x001999e4: adc eax, 0x81fffedc; ret; 
0x00197de4: adc eax, 0x81fffef8; ret; 
0x001972e4: adc eax, 0x81ffff03; ret; 
0x00195ce4: adc eax, 0x81ffff19; ret; 
0x00193ce4: adc eax, 0x81ffff39; ret; 
0x00034be7: adc eax, 0x822b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x0007c63a: adc eax, 0x824448b; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034bc7: adc eax, 0x824b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba7: adc eax, 0x826b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0016de67: adc eax, 0x830000bc; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x000afefc: adc eax, 0x8300768d; ret 0x8b20; 
0x00029824: adc eax, 0x8301c083; ret 0x8901; 
0x000a96f4: adc eax, 0x83e87401; ret 0x8b01; 
0x00160a67: adc eax, 0x83fff2f2; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00042497: adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x000910c6: adc eax, 0x8908418b; ret; 
0x00026086: adc eax, 0x8b050016; insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0005d878: adc eax, 0x8bffffef; test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x0007383a: adc eax, 0x8d8b0000; call 0x8a07383e; ret; 
0x00026066: adc eax, 0xab050016; insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x001a201e: adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0017631a: adc eax, 0xc24548b; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x00030a4b: adc eax, 0xc7c78100; ret; 
0x0002f807: adc eax, 0xd60b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000a4ce5: adc eax, 0xe9d38900; imul edi, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x000d9bba: adc eax, 0xf390e8b; jne 0xd9d10; pop edi; pop esi; ret; 
0x00198a0b: adc eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003ddd6: adc eax, dword ptr [eax]; add byte ptr [eax - 0x18], dl; int1; scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x000a4e3d: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx*4 - 0x17af0007], edi; ret; 
0x000a4e1a: adc eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x43], ecx; stc; call dword ptr [eax - 0x18]; 
0x000f215b: adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001a226e: adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00077d59: adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000c12ec: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde79: adc eax, dword ptr [eax]; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c130c: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde99: adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1289: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde26: adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12cd: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde5a: adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c132e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdebb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c134e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdedb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c136e: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdefb: adc eax, dword ptr [eax]; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010c1e3: adc eax, dword ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091301: adc eax, dword ptr [ebp - 0x74cd8b2e]; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000e9547: adc eax, dword ptr [ebx + 0x237f01fa]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016cb4f: adc eax, dword ptr [ebx + 0x488b0cec]; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x00025d32: adc eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0016f9d0: adc eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x001767a8: adc eax, dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000a0a69: adc eax, dword ptr [ebx - 0x177c0f20]; add ecx, eax; call 0x1ca8d7a; mov dword ptr [edx + 0x388], eax; ret; 
0x00027036: adc eax, dword ptr [ebx - 0x17a8f314]; rcr al, 1; adc eax, 0x241c8900; call edi; 
0x000260d3: adc eax, dword ptr [ebx - 0x17a9f314]; xor ebp, eax; adc eax, 0x241c8900; call esi; 
0x001aa18c: adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b3ec6: adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b3ed6: adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b3ee6: adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b3ef6: adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x00125c79: adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b3e82: adc eax, dword ptr [ecx]; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3ea2: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eb2: adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e92: adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ec2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ed2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ee2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3ef2: adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3e72: adc eax, dword ptr [ecx]; pop ebx; ret; 
0x000a7353: adc eax, dword ptr [ecx]; ret 0x1089; 
0x000ba546: adc eax, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ba556: adc eax, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ba4e2: adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000bb836: adc eax, dword ptr [edi]; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ba169: adc eax, dword ptr [edi]; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba1a9: adc eax, dword ptr [edi]; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba1c9: adc eax, dword ptr [edi]; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba18a: adc eax, dword ptr [edi]; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ba542: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba1eb: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba552: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba20b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba22b: adc eax, dword ptr [edi]; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba156: adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000bab6f: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000baccf: adc eax, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000c06e2: adc eax, dword ptr [edx + 5]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b952f: adc eax, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b968f: adc eax, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000bab8f: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bacef: adc eax, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000c0702: adc eax, dword ptr [edx + 6]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b954f: adc eax, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b96af: adc eax, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000babaf: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0f: adc eax, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000c0722: adc eax, dword ptr [edx + 7]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b956f: adc eax, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b96cf: adc eax, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000baa3e: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2f: adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b941e: adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b96ef: adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b90ab: adc eax, dword ptr [edx]; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6166: adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a6: adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b7f91: adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd7a9: adc eax, dword ptr [edx]; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd7c9: adc eax, dword ptr [edx]; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b6279: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b63b9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1e99: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1fd9: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c08f2: adc eax, dword ptr [edx]; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b62b9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63f9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1ed9: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b2019: adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b61a9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b6419: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7fc9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3bd9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1de9: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b4b52: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b2039: adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd7e9: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd809: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001aa826: adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0527: adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3ba1: adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da6: adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b4bcb: adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000b1fc6: adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000b629a: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63da: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1eba: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1ffa: adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b62db: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1efb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b205b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b62fb: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f1b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b207b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b631b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f3b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4afe: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b209b: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b8006: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c057a: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c16: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6ca: adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000bab66: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9526: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9686: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab86: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9546: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad06: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9566: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa35: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad26: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9415: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e6: adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x0005ab2c: adc eax, edi; add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x001261c3: adc ebp, 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00136734: adc ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x00164781: adc ebp, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00164922: adc ebp, 0x61; stc; call dword ptr [eax - 0x73]; 
0x000c1452: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfcf: adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1472: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfef: adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014ff73: adc ebx, dword ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0008c6a0: adc ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000bdcfa: adc ebx, dword ptr [ecx - 0x3e7efff4]; jbe 0xbdcd4; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb980: adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d9cfc: adc ebx, dword ptr [edi + 0x5e]; ret; 
0x000c1163: adc ebx, dword ptr [edi + 0xc030010]; cdq; jmp ecx; 
0x000ba2ff: adc ebx, dword ptr [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000bb9ff: adc ebx, dword ptr [edi + 0xf]; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ba31f: adc ebx, dword ptr [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x0017380f: adc ebx, ebp; inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x001831cb: adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x0015e30f: adc ebx, ebp; ret 0xb68d; 
0x000665d8: adc ecx, dword ptr [eax + 0x5f5e5b08]; ret; 
0x000c1332: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdebf: adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1352: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdedf: adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1372: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdeff: adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000a61eb: adc ecx, dword ptr [eax + eax]; add byte ptr [eax - 0x73], dl; test edx, edx; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0005d68b: adc ecx, dword ptr [ebp + 0x7ff49794]; clc; call dword ptr [edx + 0x51]; 
0x000bb4f3: adc ecx, dword ptr [ebp - 0x7af0ec81]; mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0013f4fb: adc ecx, dword ptr [ebp - 0x7cf3f7b4]; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x00091d41: adc ecx, dword ptr [ecx + 0x3e8c1d0]; je 0x91d78; mov eax, edi; call dword ptr gs:[0x10]; 
0x00072c79: adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x000ea329: adc ecx, dword ptr [ecx - 0x16fbdbbc]; lodsd eax, dword ptr [esi]; xor al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000e8d89: adc ecx, dword ptr [ecx - 0x16fbdbbc]; std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000864b9: adc ecx, dword ptr [ecx - 0x3b7cfbad]; add al, 0x5b; pop esi; ret; 
0x000bb8cf: adc ecx, dword ptr [edi + 5]; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ba1ef: adc ecx, dword ptr [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ba20f: adc ecx, dword ptr [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x000ba22f: adc ecx, dword ptr [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x0014a865: adc ecx, dword ptr [edi]; mov dh, 0x53; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00144cc4: adc ecx, dword ptr [edi]; mov edi, 0x39fe5f4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000bb4f6: adc ecx, dword ptr [edi]; test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x00091c95: adc ecx, dword ptr [edi]; xchg esp, eax; ret 0xc689; 
0x000b62df: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643f: adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b1eff: adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b205f: adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b62ff: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645f: adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b1f1f: adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b207f: adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b631f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647f: adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b1f3f: adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b4b02: adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000b209f: adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b800a: adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c094e: adc ecx, dword ptr [edx + 8]; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000c057e: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c1a: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6ce: adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0013ee2e: adc ecx, eax; call 0x1fc7138; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0002cd0a: adc ecx, ebp; ret 0xfffc; 
0x00156763: adc edi, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x00161c51: adc edi, 0x60; stc; call dword ptr [eax - 0x18]; 
0x00161e04: adc edi, 0x60; stc; call dword ptr [eax - 0x73]; 
0x0014071f: adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0018a27e: adc edi, ebx; jmp dword ptr [esi - 0x70]; 
0x00040a93: adc edx, 0; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00025391: adc edx, 0; neg edx; ret; 
0x00122ade: adc edx, 0; ret; 
0x0010e412: adc edx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x00126013: adc edx, 0x4c; stc; call dword ptr [eax + 0x55]; 
0x000c14b5: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be02f: adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1515: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be072: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1545: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be092: adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1492: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be00f: adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c14e6: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be053: adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000fba1c: adc edx, dword ptr [eax + eax]; mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x000b99bf: adc edx, dword ptr [ecx]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bba1f: adc edx, dword ptr [edi + 0x10]; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ba362: adc edx, dword ptr [edi + 0x10]; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba3a2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba3c2: adc edx, dword ptr [edi + 0x10]; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba383: adc edx, dword ptr [edi + 0x10]; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba33f: adc edx, dword ptr [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x0008ef45: adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x001131c9: adc edx, esi; jmp dword ptr [esi - 0x70]; 
0x0008f5ca: adc esi, dword ptr [ebp + 0x43]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009b9b7: adc esi, dword ptr [ebp + 0xe]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009bcff: adc esi, dword ptr [ebp + 0xe]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00083344: adc esi, esi; ret 0x7502; 
0x00149a7a: adc esi, esi; ret 0x75df; 
0x000832aa: adc esi, esi; ret 0xf08; 
0x0013ab24: adc esi, esi; ret 0xf20; 
0x00178166: adc esp, -0x48; stc; call dword ptr [edx + 0x6a]; 
0x0010e402: adc esp, -0x5f; stc; call dword ptr [eax - 0x73]; 
0x001253ae: adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; 
0x00125663: adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x000c0ffa: adc esp, dword ptr [esi + 0xc]; add byte ptr [ecx + 0x109ff6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00161fe5: adc esp, ebp; jmp dword ptr [ebp - 0x75]; 
0x0009e2f7: adc esp, esi; call dword ptr [edi + 0x50]; 
0x0003df00: add ah, 0x75; stc; call dword ptr [eax - 0x18]; 
0x0008f843: add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x000923a2: add ah, 0x83; stc; call dword ptr [eax - 0x18]; ret; 
0x00137ddc: add ah, 0xa8; stc; call dword ptr [eax + 0x6a]; 
0x00109d97: add ah, bh; dec dword ptr [ecx]; retf 0x5489; ret; 
0x0017b54b: add ah, bh; jmp dword ptr [esi - 0x70]; 
0x001232a7: add ah, bl; mov al, 0xc4; ret 0xfff9; 
0x0005b79e: add ah, byte ptr [eax]; je 0x5b7b0; add esp, 0xc; ret; 
0x0007958e: add ah, byte ptr [eax]; je 0x795a0; add esp, 0xc; ret; 
0x00134b0b: add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000e997a: add ah, byte ptr [ebx - 6]; jmp dword ptr [esi - 0x70]; 
0x00146faa: add ah, byte ptr [ecx]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0004aa76: add ah, byte ptr [edx]; add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], esi; ret 0xfff9; 
0x000bab67: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9527: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9687: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab87: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9547: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad07: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9567: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa36: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad27: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9416: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e7: add ah, byte ptr [esi + 0xf]; adc al, byte ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b62dc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; lea eax, [edx + 0xc]; ret; 
0x000b1efc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edi; pop edi; ret; 
0x000b205c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 5]; mov eax, edx; ret; 
0x000b62fc: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; lea eax, [edx + 0xd]; ret; 
0x000b1f1c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edi; pop edi; ret; 
0x000b207c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 6]; mov eax, edx; ret; 
0x000b631c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; lea eax, [edx + 0xe]; ret; 
0x000b1f3c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edi; pop edi; ret; 
0x000b4aff: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; pop ebx; ret; 
0x000b209c: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 7]; mov eax, edx; ret; 
0x000b8007: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c057b: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c17: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6cb: add ah, byte ptr [esi + 0xf]; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x0014b1cc: add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x000c2cb0: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2d19: add ah, byte ptr [esi - 0x5b]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000b6383: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b1fa3: add ah, byte ptr [esi - 0x75]; inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000ba105: add ah, byte ptr [esi - 0x77]; js 0x5e6aa365; pop ebx; ret; 
0x0003d54d: add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0012c7a8: add ah, byte ptr [esi]; je 0x12c7d6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x000ea4ef: add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x0017409b: add al, 0; add al, ch; sbb eax, 0x8900002c; ret; 
0x00160ce1: add al, 0; add bh, bh; je 0x160d0b; or al, 0x55; call edi; 
0x000a3fd9: add al, 0; add bl, ch; ret 0x9066; 
0x0009306f: add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x001649eb: add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x000ebed6: add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; 
0x000edc0e: add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x001622eb: add al, 0; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x5d], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x00059c27: add al, 0; add byte ptr [eax - 0x73], dl; xchg al, ah; jbe 0x59c29; call dword ptr [eax - 0x18]; 
0x00062b8b: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x18]; 
0x00059d2a: add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + esi*2 - 7], ah; call dword ptr [eax - 0x18]; 
0x0004a557: add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x0004a3f2: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4a3f4; call dword ptr [eax - 0x18]; 
0x0004d70b: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4d70d; call dword ptr [eax - 0x18]; 
0x000513e1: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x513e3; call dword ptr [eax - 0x18]; 
0x000cab9b: add al, 0; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0xcab9d; call dword ptr [eax - 0x18]; 
0x000a1100: add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x00091390: add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0018566f: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x21eb; 
0x00055b49: add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00115230: add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001872d5: add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x000a0187: add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00023002: add al, 0; add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x001a960e: add al, 0; add byte ptr [eax], al; pop edi; ret; 
0x000792ec: add al, 0; add byte ptr [eax], al; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x00080adc: add al, 0; add byte ptr [eax], al; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x000d9f81: add al, 0; add byte ptr [eax], al; ret; 
0x000a1f5f: add al, 0; add byte ptr [ebp + 0x46850fd2], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x0016c166: add al, 0; add byte ptr [ebp - 0x69d617d], cl; call dword ptr [eax - 0x18]; 
0x00124e03: add al, 0; add byte ptr [ebp - 0x6b53680], cl; jmp dword ptr [ebp - 0x75]; 
0x00078a58: add al, 0; add byte ptr [ebp - 0x6cce27a], cl; call dword ptr [eax - 0x73]; 
0x00173df2: add al, 0; add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x000a6de1: add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00145291: add al, 0; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00174f8b: add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000233fe: add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005abe1: add al, 0; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010d5a1: add al, 0; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00058829: add al, 0; add byte ptr [ebx - 0x365f7b], al; jmp eax; 
0x0011e257: add al, 0; add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00126027: add al, 0; add byte ptr [ebx - 0x7c72f714], al; pop esi; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00050d29: add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x000a4a09: add al, 0; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x00132bd0: add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000f1de7: add al, 0; add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012a17a: add al, 0; add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x001578c0: add al, 0; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001578cb: add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001390bf: add al, 0; add byte ptr [ecx], al; call eax; 
0x0007144a: add al, 0; add byte ptr [ecx], al; ret; 
0x00145263: add al, 0; add byte ptr [ecx], bh; ret 0x1988; 
0x00177874: add al, 0; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00066b75: add al, 0; add byte ptr [ecx], bh; ret; 
0x000aa287: add al, 0; add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0013c2af: add al, 0; add byte ptr [ecx], ch; ret 0xc031; 
0x000ba0cb: add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00134fcc: add al, 0; add byte ptr [edx], al; call eax; 
0x00083ae5: add al, 0; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x000f17fb: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8a3b: add al, 0; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x0010d572: add al, 0; add dh, dh; ret 0xf02; 
0x0010d560: add al, 0; add dh, dh; ret 0xf20; 
0x0010d569: add al, 0; add dh, dh; ret 0xf80; 
0x0014c12e: add al, 0; add dh, dh; ret; 
0x0013ceb7: add al, 0; add eax, 0xfff5b; mov eax, dword ptr [eax + 0xc8]; add eax, dword ptr gs:[0]; ret; 
0x00190cc9: add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001926c3: add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192728: add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00042c05: add al, 0; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000407c1: add al, 0; add esp, 0x2c; ret; 
0x0003d7e7: add al, 0; je 0x3d800; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000ac686: add al, 0; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000ac5c6: add al, 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000efeda: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efeda: add al, 0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000ed001: add al, 0; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00189f94: add al, 0x11; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00155296: add al, 0x11; add esp, 4; pop ebx; pop esi; ret; 
0x0008f168: add al, 0x11; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x000613d0: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00040788: add al, 0x11; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cd30: add al, 0x11; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f2f: add al, 0x11; mov eax, 0xffffffff; ret; 
0x000b99be: add al, 0x13; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a1b38: add al, 0x16; clc; inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a0546: add al, 0x1b; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00054f94: add al, 0x24; add eax, 0xd; add esp, 4; jmp eax; 
0x0005528a: add al, 0x24; add esp, 0xc; ret; 
0x0003c533: add al, 0x24; add esp, 4; ret; 
0x0003c293: add al, 0x24; add esp, 8; ret; 
0x001864b2: add al, 0x24; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00175ace: add al, 0x24; call dword ptr [edx + 0x10]; 
0x0015792b: add al, 0x24; call eax; 
0x000a08ce: add al, 0x24; call esi; 
0x000552bd: add al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00033d47: add al, 0x24; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x0003c49a: add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00053701: add al, 0x24; ret; 
0x00079a78: add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x001475fc: add al, 0x29; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0005e07c: add al, 0x29; fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00079768: add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0008af12: add al, 0x29; ret 0x48b; 
0x00089767: add al, 0x29; ret 0x5052; 
0x00172586: add al, 0x29; ret 0xd285; 
0x00185284: add al, 0x29; ret 0xea39; 
0x0008342c: add al, 0x29; ret 0xfac1; 
0x000317d6: add al, 0x29; ret; 
0x000f23c3: add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00134993: add al, 0x2b; inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x00035480: add al, 0x2b; inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00185109: add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x00186e13: add al, 0x2b; inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x0017683e: add al, 0x30; add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x0004a43e: add al, 0x30; stc; call dword ptr [eax - 0x18]; 
0x00080199: add al, 0x31; pop esi; pop edi; pop ebp; ret; 
0x00042054: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0008d3c7: add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016fd32: add al, 0x31; ret 0xd889; 
0x00153e27: add al, 0x31; rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x153e38; ret; 
0x000a9ca2: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a9c72: add al, 0x31; rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x00131447: add al, 0x31; ror byte ptr [ebx + 0x3980044a], 0; je 0x131458; ret; 
0x000d9fc7: add al, 0x31; ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x000df25a: add al, 0x31; sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0010d672: add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001470fc: add al, 0x37; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000ac23e: add al, 0x39; fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x000ac1fa: add al, 0x39; fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x000dca2a: add al, 0x39; ret 0x45c7; 
0x00094a97: add al, 0x39; ret 0x6f72; 
0x001b0e45: add al, 0x39; ret 0x774; 
0x00099886: add al, 0x39; ret 0x840f; 
0x001ae858: add al, 0x39; ret 0x850f; 
0x000d3db9: add al, 0x39; ret 0x8f0f; 
0x00188c89: add al, 0x39; ret 0x9174; 
0x00185052: add al, 0x39; ret 0xc919; 
0x000c9bcc: add al, 0x39; ret 0xee72; 
0x00100834: add al, 0x39; ret 0xf775; 
0x000483e8: add al, 0x39; ret; 
0x0008dd09: add al, 0x39; retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000c5505: add al, 0x39; retf 0x474; test edx, edx; jne 0xc5500; ret; 
0x00060070: add al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xb60f; 
0x00055cc8: add al, 0x39; sal dword ptr [ebp - 0xd], 0x8b; push esi; or al, 0xf7; ret 0; 
0x000fbb97: add al, 0x3b; push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000fad40: add al, 0x3c; aas; jne 0xfad59; mov eax, 1; ret; 
0x0013f042: add al, 0x3e; pop ebx; pop esi; pop edi; ret; 
0x000fe154: add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000f2eea: add al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0010e43c: add al, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0010e43c: add al, 0x49; stc; call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x001a59a2: add al, 0x4a; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00034864: add al, 0x50; and eax, 0x1000; ret; 
0x00034834: add al, 0x50; and eax, 0x100; ret; 
0x00034804: add al, 0x50; and eax, 0x2000; ret; 
0x00034744: add al, 0x50; and eax, 0x200; ret; 
0x000347a4: add al, 0x50; and eax, 0x4000; ret; 
0x000346b4: add al, 0x50; and eax, 0x400; ret; 
0x00034774: add al, 0x50; and eax, 0x8000; ret; 
0x00034714: add al, 0x50; and eax, 0x800; ret; 
0x00034914: add al, 0x50; and eax, 1; ret; 
0x000346e4: add al, 0x50; and eax, 2; ret; 
0x000347d4: add al, 0x50; and eax, 4; ret; 
0x00034684: add al, 0x50; and eax, 8; ret; 
0x0016cb55: add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016ccfe: add al, 0x50; call dword ptr [edx + 0x10]; 
0x00175b5c: add al, 0x50; call dword ptr [edx + 0x14]; 
0x00154440: add al, 0x50; call edi; 
0x00179c13: add al, 0x50; push dword ptr [esp + 0x1c]; call 0x179a80; add esp, 0x1c; ret; 
0x0005accd: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66570; add esp, 0x1c; ret; 
0x00080b5d: add al, 0x50; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c10; add esp, 0x1c; ret; 
0x00024de1: add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008aa92: add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x001799fc: add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a35: add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x00083b4c: add al, 0x50; push edx; push esi; call ecx; 
0x0012ab29: add al, 0x51; push 3; push ebx; call edx; 
0x00173dfb: add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0008a0c5: add al, 0x51; push eax; push esi; call edx; 
0x001769e5: add al, 0x51; push edi; call dword ptr [eax + 8]; 
0x0017a13b: add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x0017968b: add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x00084570: add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0008ad0a: add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0016eddd: add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ee1c: add al, 0x52; push ebx; call dword ptr [eax]; 
0x0016cf90: add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016d153: add al, 0x53; call dword ptr [eax]; 
0x0007eb56: add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c5c7: add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079947: add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00179ad3: add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x00042573: add al, 0x53; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00024ea2: add al, 0x55; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x000884ce: add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x000390c4: add al, 0x56; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0007e454: add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00088280: add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00080031: add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00088400: add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00172e55: add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0007da62: add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080378: add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x001769f3: add al, 0x57; call dword ptr [eax + 0x10]; 
0x0012aad1: add al, 0x57; push 0; push ebx; call esi; 
0x0012aae5: add al, 0x57; push 1; push ebx; call esi; 
0x0012aaf8: add al, 0x57; push 2; push ebx; call esi; 
0x0007ff3a: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c937: add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0013ccf6: add al, 0x58; stc; call dword ptr [eax - 0x18]; 
0x0016d4a8: add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00125290: add al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00083278: add al, 0x5b; pop esi; jmp eax; 
0x001481fc: add al, 0x5b; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x0018937b: add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0003a2bf: add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0005b581: add al, 0x5b; pop esi; pop edi; ret; 
0x00026003: add al, 0x5b; pop esi; ret; 
0x0002501a: add al, 0x5b; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0003cd1b: add al, 0x5b; ret; 
0x001a35bb: add al, 0x5d; pop ebx; ret; 
0x0014ff54: add al, 0x5d; stc; call dword ptr [eax - 0x18]; 
0x001a35c2: add al, 0x5e; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0009121b: add al, 0x5e; pop edi; ret; 
0x00198e60: add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f5a: add al, 0x5f; call 0x1875fd; add ebx, 0x42b7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f0a: add al, 0x5f; call 0x1875fd; add ebx, 0x4494f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f0a: add al, 0x5f; call 0x1875fd; add ebx, 0x466cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00134a30: add al, 0x5f; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0009773c: add al, 0x5f; pop ebp; ret; 
0x000b7f63: add al, 0x5f; pop ebx; ret; 
0x000ba129: add al, 0x5f; pop esi; pop ebx; ret; 
0x000b623c: add al, 0x5f; ret; 
0x00120f9a: add al, 0x65; call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0008f1c4: add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x000dffee: add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x0010cee7: add al, 0x66; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000b6247: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6387: add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000c060a: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e77: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000b1fa7: add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000bab09: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000bac69: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b94c9: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b9629: add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0013cee8: add al, 0x66; rol eax, 8; ret; 
0x0007d9e2: add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008cf2b: add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00140f22: add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x00137442: add al, 0x6a; add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x00137d25: add al, 0x6a; add eax, 0x5632808d; stc; call dword ptr [eax - 0x75]; 
0x00136ba8: add al, 0x6a; add eax, 0x5653808d; stc; call dword ptr [eax - 0x75]; 
0x000efe6c: add al, 0x6a; add eax, 0x6c818d50; je 0xefe6e; call dword ptr [eax - 0x18]; 
0x0016eb24: add al, 0x6a; add eax, 0x6c838d50; je 0x16eb26; call dword ptr [eax - 0x18]; 
0x000606ae: add al, 0x6a; add eax, 0x6c838d50; je 0x606b0; call dword ptr [eax - 0x18]; 
0x00060b1c: add al, 0x6a; add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x000acd92: add al, 0x6a; add eax, 0x6c838d50; je 0xacd94; call dword ptr [eax - 0x18]; 
0x00139384: add al, 0x6a; add eax, 0x6e6c868d; stc; call dword ptr [eax - 0x75]; 
0x0013948c: add al, 0x6a; add eax, 0x6e6c878d; stc; call dword ptr [eax - 0x75]; 
0x000f0416: add al, 0x6a; add eax, 0x9fb8838d; stc; call dword ptr [eax - 0x73]; 
0x00137190: add al, 0x6a; add eax, 0xa88c808d; stc; call dword ptr [eax - 0x75]; 
0x00137dd8: add al, 0x6a; add eax, 0xa8c4808d; stc; call dword ptr [eax + 0x6a]; 
0x0010b070: add al, 0x6a; add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x001791c7: add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001791c7: add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017adbf: add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x00025def: add al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x0007f9b3: add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00028482: add al, 0x74; adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x001b06d9: add al, 0x74; adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x00029822: add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00066d7f: add al, 0x74; and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0009e6ee: add al, 0x74; fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x000fba7d: add al, 0x74; push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000405fb: add al, 0x74; ret 0xffb8; 
0x00029202: add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000a23d0: add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x000fbb9a: add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000d4c8d: add al, 0x75; daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x001a75b3: add al, 0x75; dec esi; add eax, 0xb; ret; 
0x001396c9: add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0017f6e9: add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x001a530b: add al, 0x76; ret; 
0x00117655: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001190f5: add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0002b7d3: add al, 0x77; xor byte ptr [ecx], cl; ret; 
0x0005dfd2: add al, 0x7b; stc; call dword ptr [eax - 0x18]; 
0x00079351: add al, 0x7e; stc; call dword ptr [eax - 0x18]; 
0x000349b9: add al, 0x7f; setbe al; ret; 
0x0013144c: add al, 0x80; cmp dword ptr [eax], eax; je 0x131458; ret; 
0x000919d3: add al, 0x80; int1; add edi, 0x8704; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a0e02: add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x000db674: add al, 0x81; les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000d5c8a: add al, 0x81; ret 0; 
0x00087ee7: add al, 0x83; and bh, cl; ret; 
0x000e09f5: add al, 0x83; call 0xf17462c; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e1204: add al, 0x83; call 0xf174e3b; xchg dword ptr [eax - 0x7c000012], edx; ret; 
0x0008f3a2: add al, 0x83; cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x0009d410: add al, 0x83; cmp dword ptr [edx], eax; je 0x9d3d2; pop ebx; pop esi; ret; 
0x0016c86f: add al, 0x83; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x0016d472: add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0005c59e: add al, 0x83; in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x0016acf5: add al, 0x83; in al, dx; or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x57]; 
0x00175e58: add al, 0x83; in al, dx; or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0016e284: add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0017a757: add al, 0x83; inc eax; adc al, 4; mov eax, 1; ret; 
0x00095ca3: add al, 0x83; inc edx; add al, 1; add esp, 0xc; ret; 
0x00035483: add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00179332: add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x000251cb: add al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00148cea: add al, 0x83; les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0003009d: add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001b44e7: add al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000a7c9f: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x0003f305: add al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008c9bc: add al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00084c6d: add al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00079ee9: add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d0af: add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0019b94d: add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x0019884d: add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x000c819e: add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x000c316c: add al, 0x83; out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c316f: add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000911a3: add al, 0x83; pushal; or bl, bh; xor eax, eax; ret; 
0x001733b4: add al, 0x83; rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00184876: add al, 0x83; ret 0x105; 
0x00103f96: add al, 0x83; ret 0x3904; 
0x001aba83: add al, 0x83; ret 0x3908; 
0x0013f624: add al, 0x83; ret 0x8108; 
0x0002f3c6: add al, 0x83; ret 0x8301; 
0x0005c682: add al, 0x83; ret 0x8304; 
0x000da05a: add al, 0x83; ret 0x8310; 
0x000c2e43: add al, 0x83; ret 0x8404; 
0x000547ca: add al, 0x83; ret 0x8501; 
0x000c7582: add al, 0x83; ret 0x8504; 
0x00138045: add al, 0x83; ret 0x8518; 
0x00047983: add al, 0x83; ret 0x8901; 
0x00053d44: add al, 0x83; ret 0x8904; 
0x000c2bd1: add al, 0x83; ret 0x8b04; 
0x000542ed: add al, 0x83; ret 0x8d04; 
0x000e66d1: add al, 0x83; ret 0x930; 
0x001b0f84: add al, 0x83; ret 0xc104; 
0x001ae71c: add al, 0x83; ret 0xd104; 
0x001ab511: add al, 0x83; ret 0xd304; 
0x00100282: add al, 0x83; ret 0xe804; 
0x00031253: add al, 0x83; ret; 
0x000c5502: add al, 0x83; rol byte ptr [ecx + edi], 0xca; je 0xc550e; test edx, edx; jne 0xc5500; ret; 
0x00029208: add al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x0002e075: add al, 0x83; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000afef7: add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x000ffd2f: add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x0014f284: add al, 0x83; ror byte ptr [eax], 0x83; ret 0x8908; 
0x0016c448: add al, 0x83; shr byte ptr [eax], 0xff; jo 0x16c463; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000d9ff5: add al, 0x85; leave; jne 0xd9fd8; add eax, 1; ret; 
0x00026cf2: add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x000a3ad4: add al, 0x85; ror byte ptr [edi], cl; test byte ptr [ebx], al; add eax, 0x5a8d0000; or dh, dh; ret; 
0x000983fb: add al, 0x85; sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x0012b5cf: add al, 0x85; sal byte ptr [ebp + 4], cl; ret; 
0x0012b5f3: add al, 0x85; sal byte ptr [ebp + 8], cl; ret; 
0x00150402: add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x001498f4: add al, 0x85; sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x000da0e9: add al, 0x85; sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x000c5509: add al, 0x85; sal byte ptr [ebp - 0xe], cl; ret; 
0x000431c7: add al, 0x85; sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x001274b3: add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00142ed7: add al, 0x85; sal byte ptr [esp + ecx - 0x17], 0x6f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000e7de7: add al, 0x85; sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00153e2c: add al, 0x87; adc byte ptr [ebx + 0x47f01fa], al; ret; 
0x000919d8: add al, 0x87; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000c2f2f: add al, 0x88; adc dword ptr fs:[ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b1e66: add al, 0x88; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b6236: add al, 0x88; inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x0002a493: add al, 0x88; inc esp; sbb eax, 0x83028b00; ret; 
0x0005bac0: add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000552fb: add al, 0x89; adc al, 0x24; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00072c77: add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x00175acc: add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x0008fd52: add al, 0x89; add al, bh; sub dword ptr [esi + eax], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000ac697: add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000cdd00: add al, 0x89; add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000c05ec: add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000b1e69: add al, 0x89; clc; pop edi; ret; 
0x0011bd21: add al, 0x89; dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x1220f36d], cl; call dword ptr [edx - 0x73]; 
0x0013c634: add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0017a082: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a05e: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed6e: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed92: add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0016e779: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013f15e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013302f: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00094d7e: add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00098152: add al, 0x89; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0016ef48: add al, 0x89; inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010c8d6: add al, 0x89; inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0008333d: add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000b93c7: add al, 0x89; inc edx; add al, 0x89; clc; pop edi; ret; 
0x000b9606: add al, 0x89; inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b9666: add al, 0x89; inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000bac36: add al, 0x89; inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x00059f98: add al, 0x89; inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00079575: add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008953e: add al, 0x89; inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x000e8132: add al, 0x89; inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000ba124: add al, 0x89; js 0x5e6aa583; pop ebx; ret; 
0x0010cf45: add al, 0x89; nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010cf1d: add al, 0x89; nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c122a: add al, 0x89; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bdde4: add al, 0x89; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x0008187a: add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x000ba135: add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x0008068e: add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x000810e3: add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0011bd24: add al, 0x89; push eax; or byte ptr [ebp - 0x1220f36d], cl; call dword ptr [edx - 0x73]; 
0x0016efc4: add al, 0x89; push ebx; adc bl, ch; ret; 
0x001346dd: add al, 0x89; push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x001836bb: add al, 0x89; push ecx; or al, 0x39; ret 0x820f; 
0x00172dcf: add al, 0x89; push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0008f1fc: add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000ac58c: add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0015318e: add al, 0x89; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x00179841: add al, 0x89; ret 0x18b; 
0x0007098d: add al, 0x89; ret 0x5d8d; 
0x000707c7: add al, 0x89; ret 0x6b8b; 
0x00111149: add al, 0x89; ret 0x7c8b; 
0x001385f2: add al, 0x89; ret 0x8589; 
0x0006101a: add al, 0x89; ret 0xca29; 
0x00060fa4: add al, 0x89; ret 0xda29; 
0x0012ad7c: add al, 0x89; ret 0xe083; 
0x0009e743: add al, 0x89; ret 0xe281; 
0x0009d56a: add al, 0x89; ret 0xe283; 
0x00126415: add al, 0x89; ret 0xeac1; 
0x001aa857: add al, 0x89; ret 0xead1; 
0x00073256: add al, 0x89; ret 0xfb83; 
0x0003c3cf: add al, 0x89; ret 0xff25; 
0x00090564: add al, 0x89; ret; 
0x000b40bb: add al, 0x89; rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb3f81; pop ebx; ret; 
0x0003dee7: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000409d7: add al, 0x89; sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0009db56: add al, 0x89; stc; call dword ptr [eax - 0x73]; 
0x000b9609: add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b94a9: add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x0003d4fd: add al, 0x8a; setne al; movzx eax, al; ret; 
0x00107358: add al, 0x8b; adc bh, dh; ret 0x30f; 
0x00092dac: add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000a0d41: add al, 0x8b; adc dl, byte ptr [eax + 0x34c9089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d91: add al, 0x8b; adc dl, byte ptr [eax + 0x3509089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc1: add al, 0x8b; adc dl, byte ptr [eax + 0x3549089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a31: add al, 0x8b; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a0a11: add al, 0x8b; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a0d11: add al, 0x8b; adc dl, byte ptr [eax + 0x3709089]; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac1: add al, 0x8b; adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0d71: add al, 0x8b; adc dl, byte ptr [eax + 0x3c749089]; add byte ptr [eax], al; ret; 
0x0008ef43: add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x0018717b: add al, 0x8b; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000871a7: add al, 0x8b; add byte ptr [0x200], ah; ret; 
0x000a0a52: add al, 0x8b; add byte ptr [0x3fc], bh; jbe 0xa0a60; ret; 
0x00087157: add al, 0x8b; add byte ptr [0x804], ah; ret; 
0x000a0a92: add al, 0x8b; add byte ptr [0xffff], bh; jbe 0xa0aa0; ret; 
0x000a0cd2: add al, 0x8b; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009adc7: add al, 0x8b; add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03ab05d; ret; 
0x00034961: add al, 0x8b; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00034991: add al, 0x8b; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000813d9: add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000c05d2: add al, 0x8b; add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x000bd722: add al, 0x8b; add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x0009dad1: add al, 0x8b; and ah, 0x3b; add byte ptr [eax], al; test eax, eax; jne 0x9dae7; ret; 
0x000810af: add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000316c9: add al, 0x8b; dec esp; ret; 
0x00034b4b: add al, 0x8b; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x00187197: add al, 0x8b; inc eax; dec esp; ret; 
0x00121aa7: add al, 0x8b; inc eax; or byte ptr [0x100f], ah; ret; 
0x001398d2: add al, 0x8b; inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00187237: add al, 0x8b; inc eax; pop eax; ret; 
0x001871c7: add al, 0x8b; inc eax; pop esp; ret; 
0x001871b7: add al, 0x8b; inc eax; push eax; ret; 
0x00187247: add al, 0x8b; inc eax; push esp; ret; 
0x00178263: add al, 0x8b; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x0005bb78: add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0008ec1a: add al, 0x8b; inc ebx; or bh, bh; je 0x8ec45; xor byte ptr [edx + 0x51], dl; call eax; 
0x0010d822: add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x000b9669: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b9509: add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000bac89: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b9649: add al, 0x8b; inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0016ea3a: add al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16ea4e; push edi; call dword ptr [eax + 0x10]; 
0x0006f75b: add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0008dd47: add al, 0x8b; inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0012f65d: add al, 0x8b; inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f2f2: add al, 0x8b; inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c124e: add al, 0x8b; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0003c3ee: add al, 0x8b; inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00090dba: add al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000bddfb: add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00034301: add al, 0x8b; inc esp; nop; inc eax; ret; 
0x00141588: add al, 0x8b; je 0x1415b0; adc byte ptr [ebp - 0x6cf9c6a], cl; call dword ptr [edx - 0x46]; 
0x0005bc9b: add al, 0x8b; je 0x5bcc3; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x000e73f8: add al, 0x8b; je 0xe7420; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000838ef: add al, 0x8b; jl 0x83917; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0013982f: add al, 0x8b; jns 0x13983b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00106bb9: add al, 0x8b; mov esp, 0xf8f92c96; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x001a0c67: add al, 0x8b; mov word ptr [ebx - 0x86474], cs; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0014c1f7: add al, 0x8b; pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014c125: add al, 0x8b; pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x0014c49a: add al, 0x8b; pop eax; or dh, dh; ret; 
0x00172c6a: add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x00070fde: add al, 0x8b; pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x000a0c42: add al, 0x8b; push edx; or al, 0x83; ret; 
0x000a1142: add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x001799f9: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a32: add al, 0x8b; push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x0008aa18: add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0018de8d: add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0016d4c8: add al, 0x8b; push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0010b54a: add al, 0x8b; push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017a777: add al, 0x8b; push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114547: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017ac4f: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00091097: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef7: add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00124260: add al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0008d337: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187157: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031487: add al, 0x8b; push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x001503f1: add al, 0x8b; sub byte ptr [eax - 0x7affffb2], 0xc0; jne 0x150407; ret; 
0x00027f9c: add al, 0x8b; test dword ptr [eax + esi*2 - 7], esp; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x0017155f: add al, 0x8b; xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x001508a7: add al, 0x8b; xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0008d2fa: add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8d318; ret; 
0x000547c3: add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0007098a: add al, 0x8d; dec edx; add al, 0x89; ret 0x5d8d; 
0x0017a165: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001792f5: add al, 0x8d; dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x000e812e: add al, 0x8d; dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000542b6: add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x000b6239: add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000ac63c: add al, 0x8d; inc edx; pop es; pop ebx; pop esi; ret; 
0x000ba9ea: add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000bac39: add al, 0x8d; inc edx; pop es; ret; 
0x000434d8: add al, 0x8d; inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x0013f893: add al, 0x8d; inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x0016ed79: add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0013cf6f: add al, 0x8d; mov gs, word ptr [eax]; pop eax; stc; dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x00030232: add al, 0x8d; or dword ptr [edx + esi], 0xffffffdf; call dword ptr [esi + 0x50]; 
0x00186e16: add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x000434f7: add al, 0x8d; push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x00179edb: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00172e67: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00179505: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017949a: add al, 0x8d; push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001797d5: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017980d: add al, 0x8d; push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x00179b19: add al, 0x8d; push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x00179ec5: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00179485: add al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x00179859: add al, 0x8d; push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x000a24b1: add al, 0x8d; sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x0010d1ae: add al, 0x8d; test al, 0x6c; push es; in eax, dx; call dword ptr [ebp + 0x6a]; 
0x0014149f: add al, 0x8d; test dword ptr [ebx + 0x30], esp; stc; call dword ptr [eax - 0x77]; 
0x0013fe82: add al, 0x8d; test dword ptr [ecx + 0x6afff958], ebp; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x000a23d5: add al, 0x8d; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x000a818a: add al, 0x8d; test dword ptr [esi + 0x6afff944], edx; add eax, 0x6c858d50; je 0xa8192; call dword ptr [eax - 0x18]; 
0x0012a52a: add al, 0x8d; xchg ah, ah; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edi - 0x7f]; 
0x000dbeb8: add al, 0x8d; xchg al, bh; cmp eax, 0x8d500000; xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x000256f2: add al, 0x8d; xchg al, bl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000479c5: add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000a1c99: add al, 0x8d; xchg dword ptr [eax], esi; inc edx; stc; call dword ptr [eax + 0x53]; 
0x00150975: add al, 0x8d; xchg dword ptr [edx + edi - 0xf], ecx; call dword ptr [ebx + 0x50]; 
0x00092e4f: add al, 0x8d; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x000aa8dd: add al, 0x8d; xchg edx, eax; or al, 0xa8; idiv bh; cmovne eax, edx; ret; 
0x000a927d: add al, 0x8d; xchg edx, eax; sbb al, 0xb2; idiv bh; cmovne eax, edx; ret; 
0x000a9c4d: add al, 0x8d; xchg edx, eax; sub al, 0xbf; idiv bh; cmovne eax, edx; ret; 
0x0018715d: add al, 0x90; mov eax, dword ptr [eax]; ret; 
0x0018717d: add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000c7a7d: add al, 0x90; pop edi; pop ebp; ret; 
0x000348a7: add al, 0x90; ret; 
0x0005becd: add al, 0x91; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c50f5: add al, 0x98; pop ebx; pop esi; ret; 
0x0003f23b: add al, 0x99; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0003d449: add al, 0x9a; xor eax, eax; pop ebx; ret; 
0x00099833: add al, 0xa8; add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x0009511f: add al, 0xa8; add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x0016c6f2: add al, 0xb8; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a065f: add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b8d2: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0017a75b: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000fba22: add al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfba30; ret; 
0x00120b95: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120b95: add al, 0xb8; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0010c3f9: add al, 0xb8; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012db75: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012db75: add al, 0xb8; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e949: add al, 0xb8; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001210c7: add al, 0xb8; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000eff19: add al, 0xb8; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129da5: add al, 0xb8; jae 0x129da9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ea85: add al, 0xb8; je 0x12ea89; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ebe9: add al, 0xb8; jge 0x12ebee; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ec15: add al, 0xb8; jle 0x12ec1a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e485: add al, 0xb8; jno 0x12e489; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129919: add al, 0xb8; jns 0x12991d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010e4b5: add al, 0xb8; jp 0x10e4b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00091477: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a14: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099919: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4a: add al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012d515: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d515: add al, 0xb8; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e8e9: add al, 0xb8; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001145b5: add al, 0xb8; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7e06: add al, 0xb8; or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001153a9: add al, 0xb8; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a7162: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009115b: add al, 0xb8; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x000ea515: add al, 0xb8; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114795: add al, 0xb8; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0ec5: add al, 0xb8; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114be5: add al, 0xb8; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e4a9: add al, 0xb8; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001229a5: add al, 0xb8; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120eaf: add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00150b09: add al, 0xbd; sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00054f91: add al, 0xc0; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00081d32: add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000649b5: add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x000ac5e7: add al, 0xc6; inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00071b63: add al, 0xc7; inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071b73: add al, 0xc7; inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071b93: add al, 0xc7; inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071ba3: add al, 0xc7; inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071c13: add al, 0xc7; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00071bb3: add al, 0xc7; inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070e61: add al, 0xc7; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00126fe8: add al, 0xd0; call 0x88145072; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x0003bc91: add al, 0xd9; loope 0x3bc8b; les eax, ptr [edx]; je 0x3bc9b; fchs; ret; 
0x0003c031: add al, 0xd9; loope 0x3c02b; les eax, ptr [edx]; je 0x3c03b; fchs; ret; 
0x0003c52e: add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003bf67: add al, 0xd9; std; fstp st(1); ret; 
0x00055302: add al, 0xdb; sub al, 0x24; add esp, 0x1c; ret; 
0x00055288: add al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x000a0f28: add al, 0xdf; or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0014661d: add al, 0xe8; mov ebp, 0x89fffffd; ret 0xffb8; 
0x0014c7c3: add al, 0xe8; xchg dword ptr [eax + eax], esi; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014bbc3: add al, 0xe8; xchg dword ptr [eax], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000ea2fd: add al, 0xe9; fnsave dword ptr [esp + edi*8]; jmp dword ptr [esi - 0x70]; 
0x0018a0dd: add al, 0xe9; lodsd eax, dword ptr [esi]; or edx, esi; jmp dword ptr [esi - 0x70]; 
0x000ea32d: add al, 0xe9; lodsd eax, dword ptr [esi]; xor al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000956eb: add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x00172abf: add al, 0xe9; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000826cd: add al, 0xe9; popfd; ljmp 0x2674:0x8d2effff; add byte ptr [eax - 1], bh; ret; 
0x000e8d8d: add al, 0xe9; std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x00104987: add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x000a8f78: add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00130ddb: add al, 0xe; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x000291fa: add al, 0xeb; or byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00023e64: add al, 0xeb; ret 0x44e8; 
0x00023f6e: add al, 0xeb; ret; 
0x0009529e: add al, 0xeb; xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009a943: add al, 0xf0; dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x000bbd2e: add al, 0xf2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016d145: add al, 0xf3; call dword ptr [edx - 0x73]; 
0x0010491c: add al, 0xf6; ret 0x7401; 
0x00060190: add al, 0xf6; ret 0xf50; 
0x000a4372: add al, 0xf6; ret; 
0x00094609: add al, 0xf7; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c3172: add al, 0xf7; ret 0; 
0x0015b770: add al, 0xf7; ret 0xfffd; 
0x00103463: add al, 0xf7; ret; 
0x0011cad9: add al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0012463b: add al, 0xf; dec edi; ret; 
0x000acbe3: add al, 0xf; inc esp; ret 0x66c3; 
0x0010cda7: add al, 0xf; mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0003ea3e: add al, 0xf; mov bh, 0x83; das; inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00034861: add al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034831: add al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034801: add al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034741: add al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x000347a1: add al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x000346b1: add al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034771: add al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034711: add al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034911: add al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x000346e1: add al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x000347d1: add al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x00034681: add al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x0008beaa: add al, 0xf; mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x0008bce5: add al, 0xf; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00087167: add al, 0xf; mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00087187: add al, 0xf; mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00087ef7: add al, 0xf; mov dh, 0; shr al, 4; and eax, 1; ret; 
0x00087f17: add al, 0xf; mov dh, 0; shr al, 5; and eax, 1; ret; 
0x0008c6f5: add al, 0xf; mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00134660: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016fa33: add al, 0xf; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00087f85: add al, 0xf; mov dh, 2; ret; 
0x000db21f: add al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001a3a47: add al, 0xf; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x0004157a: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x0004142a: add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x00041b2d: add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x001b09f4: add al, 0xf; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x0015b824: add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x000dfff3: add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x001a8ae4: add al, 0xf; test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a938b: add al, 0xf; test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x000d9bd5: add al, 0xf; test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b391b: add al, 0xf; test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000bb29c: add al, 0xf; test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00054173: add al, 0xf; xchg edx, eax; ret 0x789; 
0x000542b9: add al, 0xf; xchg edx, eax; ret; 
0x00155bde: add al, 0xf; xchg esp, eax; ret 0x448b; 
0x0005ae9e: add al, 0xf; xchg esp, eax; ret 0x48b; 
0x0009c5c1: add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0002f2b9: add al, 0xf; xor byte ptr [eax - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0017c6ea: add al, 0xfc; add cl, ch; ret 0xfffc; 
0x0016ed9a: add al, 0xff; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0008f200: add al, 0xff; and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x00197185: add al, 0xff; inc dword ptr [ecx + 0x42958c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016edef: add al, 0xff; je 0x16ee17; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ee3d: add al, 0xff; je 0x16ee65; sbb al, 0x53; call dword ptr [eax]; 
0x000413dd: add al, 0xff; je 0x41405; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041492: add al, 0xff; je 0x414ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0004150a: add al, 0xff; je 0x41532; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000415c2: add al, 0xff; je 0x415ea; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007c621: add al, 0xff; je 0x7c649; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0014b12e: add al, 0xff; jmp dword ptr [esi - 0x70]; 
0x0007ed90: add al, 0xff; jne 0x7eda8; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00184af6: add al, 0xff; push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017a08a: add al, 0xff; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x001844b5: add al, 0xff; xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00162f8d: add al, 0xff; xor byte ptr [ebp - 0x69ebe7a], cl; call dword ptr [eax + 0x6a]; 
0x00123940: add al, 0xff; xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; 
0x00123940: add al, 0xff; xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x001237a8: add al, 0xff; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax + 0x6a]; 
0x00188aa3: add al, 0xff; xor byte ptr [esi - 0x18], dl; adc al, 0x5e; out dx, eax; jmp dword ptr [ecx]; 
0x00185bc9: add al, 0xff; xor edi, edi; aaa; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00184b71: add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000e9356: add al, 1; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x000916c3: add al, 1; add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x000a05ee: add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000db952: add al, 1; add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000d9c08: add al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000dbae7: add al, 1; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000c3779: add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00095ca6: add al, 1; add esp, 0xc; ret; 
0x0005ac72: add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0012a4c9: add al, 1; fcom dword ptr [eax - 0x73]; xchg bl, ch; push ebx; stc; call dword ptr [eax + 0x57]; 
0x000a0347: add al, 1; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a03bb: add al, 1; fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000348df: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003489f: add al, 1; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00122b2e: add al, 1; or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0002582e: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084e46: add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00117676: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d3a5: add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0016f080: add al, 1; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000aa416: add al, 1; ret 0x78e9; 
0x0016f167: add al, 1; ret 0xc129; 
0x000c81a4: add al, 1; ret; 
0x001aa87a: add al, 1; shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000e92fe: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00124306: add al, 2; add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0003d54c: add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003bc71: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0003c33f: add al, 2; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00032e6c: add al, 2; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000342fc: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003498c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003495c: add al, 2; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003485c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003482c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347fc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003473c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003479c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346ac: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003476c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003470c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003490c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346dc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347cc: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003467c: add al, 2; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0009bd5e: add al, 2; or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000eb586: add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003d45e: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c9de: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00125dd6: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007c7cd: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a62be: add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001489cc: add al, 2; ret; 
0x00087504: add al, 3; inc ecx; adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x00199af2: add al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008715b: add al, 8; add byte ptr [eax], al; ret; 
0x000409bf: add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003fcfa: add al, 9; ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x0008716a: add al, al; call 0x1e8f473; xor eax, 1; ret; 
0x0008718a: add al, al; call 0x1e8f494; xor eax, 1; ret; 
0x00087efa: add al, al; call 0x1e90205; ret; 
0x00087f1a: add al, al; call 0x1e90226; ret; 
0x0013f98c: add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013fc9b: add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x000fd96a: add al, bh; jmp dword ptr [esi + 0xb]; 
0x0008fd54: add al, bh; sub dword ptr [esi + eax], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000ba09a: add al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x00145290: add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00145262: add al, byte ptr [eax + eax]; add byte ptr [ecx], bh; ret 0x1988; 
0x000eb7ae: add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x001a77af: add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a779e: add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00093d3e: add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00092dfc: add al, byte ptr [eax]; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x001a7747: add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000b80d8: add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a7758: add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a7769: add al, byte ptr [eax]; add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000d32c1: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x65; stc; call dword ptr [eax - 0x18]; 
0x0005dfcc: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [ebx + edi*2], -7; call dword ptr [eax - 0x18]; 
0x000d3264: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x0014f906: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x18]; 
0x0005dff6: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; and byte ptr [ebx + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000dee1f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + eax*2], -7; call dword ptr [eax - 0x18]; 
0x00153b23: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or byte ptr [ebx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x000dee5d: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dee3e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000dee3e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; ret 0xf554; 
0x0014f783: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x00029bdf: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, dl; jo 0x29be1; call dword ptr [eax - 0x18]; 
0x000a2a91: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x71], ah; stc; call dword ptr [eax - 0x18]; 
0x000a20bf: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], al; stc; call dword ptr [eax - 0x18]; 
0x0005dfa7: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0011b82b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx], al; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0005e01b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], cl; call dword ptr [eax - 0x18]; 
0x0014d033: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x000a2a6e: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4], dh; stc; call dword ptr [eax - 0x18]; 
0x0011b85b: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000a19c8: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], dl; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00029ab9: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002c641: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00183a16: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edx; stc; call dword ptr [eax - 0x18]; 
0x00028869: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2886b; call dword ptr [eax - 0x18]; 
0x00028f5c: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x28f5e; call dword ptr [eax - 0x18]; 
0x00029478: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2947a; call dword ptr [eax - 0x18]; 
0x0002abd9: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2abdb; call dword ptr [eax - 0x18]; 
0x0002dafa: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2dafc; call dword ptr [eax - 0x18]; 
0x0002e3dd: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2e3df; call dword ptr [eax - 0x18]; 
0x0002f04f: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2f051; call dword ptr [eax - 0x18]; 
0x000287e2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000d32a2: add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xor eax, 0xffffff9d; stc; call dword ptr [eax - 0x18]; 
0x00149bee: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0018858d: add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x00090224: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00084b10: add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00174c16: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174246: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00171589: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00172196: add al, byte ptr [eax]; add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001872e1: add al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00042d56: add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x0009864f: add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000799be: add al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x0004257b: add al, byte ptr [eax]; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0013185a: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0013087b: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00093c43: add al, byte ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00042d26: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e07: add al, byte ptr [eax]; add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0016e507: add al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000d9f61: add al, byte ptr [eax]; add byte ptr [eax], al; ret; 
0x00124f87: add al, byte ptr [eax]; add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x000e9300: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00124308: add al, byte ptr [eax]; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x0010d6d7: add al, byte ptr [eax]; add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0008fbd4: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fc43: add al, byte ptr [eax]; add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00092df6: add al, byte ptr [eax]; add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0010d90e: add al, byte ptr [eax]; add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00137eab: add al, byte ptr [eax]; add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x0009c523: add al, byte ptr [eax]; add byte ptr [ebp - 0x1a09337d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009c52f: add al, byte ptr [eax]; add byte ptr [ebp - 0x1a0a737d], cl; call dword ptr [ecx + 0x50]; 
0x00075373: add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00060662: add al, byte ptr [eax]; add byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax + 0x68]; 
0x0014f8b6: add al, byte ptr [eax]; add byte ptr [ebp - 0x6a3797e], cl; call dword ptr [eax - 0x73]; 
0x0009d9d4: add al, byte ptr [eax]; add byte ptr [ebp - 0x6beea7f], cl; call dword ptr [eax - 0x73]; 
0x000a3fa9: add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x0014d528: add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x0002eaf3: add al, byte ptr [eax]; add byte ptr [ebx + 0x39082444], cl; ret; 
0x0014d7d6: add al, byte ptr [eax]; add byte ptr [ebx + 0x391c245c], cl; fmul dword ptr [edi]; pop dword ptr [ebx + 0x29000002]; ret; 
0x0014cfb3: add al, byte ptr [eax]; add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00088612: add al, byte ptr [eax]; add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000956e3: add al, byte ptr [eax]; add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000d311a: add al, byte ptr [eax]; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0005e626: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003dd58: add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007b929: add al, byte ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00086ad3: add al, byte ptr [eax]; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00027299: add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; sti; ret 9; 
0x0009c2eb: add al, byte ptr [eax]; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000d69b9: add al, byte ptr [eax]; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x0010dec5: add al, byte ptr [eax]; add byte ptr [ebx - 0x3976c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000607a6: add al, byte ptr [eax]; add byte ptr [ebx - 0x46ab746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0006a1f0: add al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0002a83b: add al, byte ptr [eax]; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00093085: add al, byte ptr [eax]; add byte ptr [ebx - 0x7874f314], al; sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x0014a585: add al, byte ptr [eax]; add byte ptr [ebx - 0x7a72f314], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00050d1d: add al, byte ptr [eax]; add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], 0x84; or dword ptr [eax + eax], eax; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x000dd900: add al, byte ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x0015a381: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x0002cb0b: add al, byte ptr [eax]; add byte ptr [ebx - 0x7cebdbac], cl; ret 0x8904; 
0x0008e76c: add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00034c52: add al, byte ptr [eax]; add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x00132e50: add al, byte ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000c5fb1: add al, byte ptr [eax]; add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x0004927e: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481af: add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x000903bd: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x000902c2: add al, byte ptr [eax]; add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00139173: add al, byte ptr [eax]; add byte ptr [ecx], al; call edx; 
0x000c1ac3: add al, byte ptr [eax]; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x000fef33: add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00097045: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x0008c7ee: add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014d7e2: add al, byte ptr [eax]; add byte ptr [ecx], ch; ret; 
0x0004d145: add al, byte ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b3c87: add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00104f5d: add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009848a: add al, byte ptr [eax]; add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x0014d426: add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00185a2b: add al, byte ptr [eax]; add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00104f26: add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x0005183d: add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x001351f2: add al, byte ptr [eax]; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00189897: add al, byte ptr [eax]; add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x0014c9e9: add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x0005cf6c: add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x0014c200: add al, byte ptr [eax]; add dh, dh; ret; 
0x000f1a60: add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000a0e0c: add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00061279: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00157925: add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00157aba: add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x0005ab09: add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x000614d0: add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0013f85f: add al, byte ptr [eax]; jne 0x13f869; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x00160f4a: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00160bb4: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call edi; 
0x00160d9b: add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00160256: add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000ac571: add al, byte ptr [eax]; mov eax, edx; pop ebx; pop esi; ret; 
0x0010c59c: add al, byte ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00114bdd: add al, byte ptr [eax]; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0013f693: add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000ac5a7: add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x00086296: add al, byte ptr [eax]; pop ebx; ret; 
0x0009a2b8: add al, byte ptr [ebp + 0x39b475ff]; ret 0xd574; 
0x00147373: add al, byte ptr [ebp - 0x76c28b37]; ret; 
0x0017236f: add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x00080161: add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x00090de1: add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0008bf48: add al, byte ptr [ebx + 0x5a8d08ec]; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x0013eefe: add al, byte ptr [ebx + 0x5e5b04c4]; pop edi; pop ebp; ret; 
0x0008e7a3: add al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x001322f6: add al, byte ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0008013a: add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009215c: add al, byte ptr [ebx + 0xe7403f8]; pop ebx; pop esi; pop edi; ret; 
0x00090ea3: add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013dac1: add al, byte ptr [ebx - 0x68f0f008]; ret; 
0x0018413b: add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x000df245: add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00038c61: add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000afeb3: add al, byte ptr [ecx]; jne 0xafea0; pop ebx; pop esi; pop edi; ret; 
0x0004894d: add al, byte ptr [ecx]; ret 0x448b; 
0x0002fb9b: add al, byte ptr [ecx]; ret 0x9539; 
0x000e40db: add al, byte ptr [ecx]; ret 0xd329; 
0x000e6662: add al, byte ptr [ecx]; ret 0xd729; 
0x000d6a13: add al, byte ptr [ecx]; ret 0xd889; 
0x000cf2e2: add al, byte ptr [ecx]; ret; 
0x0008e98a: add al, byte ptr [edi - 7]; jmp dword ptr [esi - 0x70]; 
0x0005b8f6: add al, byte ptr [edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000d9ef4: add al, byte ptr [edx + edx*8 - 0x2e77e88c]; and cl, 0xf; je 0xd9f20; ret; 
0x001a77ae: add al, byte ptr ds:[eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x0007b928: add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000b9abf: add al, ch; dec esp; fisttp dword ptr [eax + eax]; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015e3af: add al, ch; fisttp dword ptr [ebp - 0x14]; jmp dword ptr [ebp - 0x75]; 
0x0013bb2f: add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00167409: add al, ch; inc ecx; retf 0xfffe; add esp, 0x1c; ret; 
0x000c109f: add al, ch; insb byte ptr es:[edi], dx; or al, 0; add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00130f89: add al, ch; jle 0x130ff3; add eax, 0x85c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x0012394b: add al, ch; jmp dword ptr [ebp - 0xb]; 
0x000a80f0: add al, ch; lcall 0x10c4, 0x83fff7b0; add esp, 8; pop ebx; ret; 
0x001741f0: add al, ch; lcall 0x18c4, 0x83ffeaef; pop ebx; ret; 
0x000e7ae0: add al, ch; ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x0019133f: add al, ch; mov eax, 0x81ffff62; ret; 
0x0004243e: add al, ch; mov ecx, 0x81001451; ret; 
0x0009463b: add al, ch; mov esp, 0x81000f2f; ret; 
0x0002a106: add al, ch; movsb byte ptr es:[edi], byte ptr [esi]; adc al, 0x11; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x000bb0ff: add al, ch; or al, 0xc5; or al, 0; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003a5ee: add al, ch; or al, 0xd6; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x000fb0e5: add al, ch; push cs; lds ecx, ptr [eax]; add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000c396c: add al, ch; push ds; clc; cmc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000813f7: add al, ch; ret; 
0x0017409d: add al, ch; sbb eax, 0x8900002c; ret; 
0x001926cf: add al, ch; sub byte ptr [edi - 1], cl; inc dword ptr [ecx + 0x470cbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015e5ef: add al, ch; wait; dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0014084f: add al, ch; wait; push es; sti; jmp dword ptr [esi - 0x3f]; 
0x0008015e: add al, cl; stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0008f6ad: add al, dh; cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a5d40: add al, dh; dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a655b: add al, dh; dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a139a: add al, dh; dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000ac665: add al, dh; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x0009f8cd: add bh, al; adc byte ptr [eax], 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00084e44: add bh, al; add al, 1; or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x00117674: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d3a3: add bh, al; add al, 1; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0003d54a: add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x000eb584: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x0003c9dc: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00125dd4: add bh, al; add al, 2; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0018858b: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x00084b0e: add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0007dacd: add bh, al; add byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x0016e087: add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x000a517f: add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00079eb6: add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00180ed1: add bh, al; add ebp, dword ptr [edi]; jbe 0x180e5c; in al, dx; add al, 0x83; ret; 
0x0008d807: add bh, al; cmp byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x00142c0f: add bh, al; inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x0015b54f: add bh, al; inc ecx; adc al, 0x28; add byte ptr [eax], al; add byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffc; 
0x00055b46: add bh, al; inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000a10fd: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x000d838f: add bh, al; inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0012cd54: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011522d: add bh, al; inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000593b9: add bh, al; inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0015980f: add bh, al; inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00169872: add bh, al; inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008b8e1: add bh, al; inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00070dfb: add bh, al; inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0007117b: add bh, al; inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00023329: add bh, al; inc esp; and al, 0x18; and byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000707f8: add bh, al; inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x000643f7: add bh, al; inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x000704f2: add bh, al; inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000709bb: add bh, al; inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0009f9f4: add bh, al; inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0007dc71: add bh, al; or byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x00154d31: add bh, al; sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x00154e41: add bh, al; sbb dword ptr [eax], 0x5f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00154ca9: add bh, al; sbb eax, -0x71; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00154ec9: add bh, al; sbb eax, 0x4e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000f2097: add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x000c2912: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000c276e: add bh, bh; add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x001975a5: add bh, bh; inc dword ptr [ecx + 0x42538c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019737e: add bh, bh; inc dword ptr [ecx + 0x4275fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003f1f5: add bh, bh; jae 0x3f1fd; call eax; 
0x0010e4f8: add bh, bh; je 0x10e520; sbb byte ptr [edx - 1], ch; call 0x10e8a0; add esp, 0x1c; ret; 
0x0011b7de: add bh, bh; je 0x11b806; xor bh, bh; jbe 0x11b7f2; call dword ptr [esi + 0x24]; 
0x0011c90e: add bh, bh; je 0x11c936; xor bh, bh; jbe 0x11c922; call dword ptr [esi + 0x24]; 
0x0011da7e: add bh, bh; je 0x11daa6; xor bh, bh; jbe 0x11da92; call dword ptr [esi + 0x24]; 
0x00127a9c: add bh, bh; je 0x127ac4; sbb al, 0xe8; mov bl, byte ptr [ebx + esi*8 + 0x1cc483ff]; ret; 
0x00138183: add bh, bh; je 0x1381ab; and al, ch; ret; 
0x001469a8: add bh, bh; je 0x1469d0; sub al, ch; mov esi, 0x89ffff4b; ret 0x2eb8; 
0x00152820: add bh, bh; je 0x152848; adc al, 0x55; call edi; 
0x0015d2eb: add bh, bh; je 0x15d313; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00160ce3: add bh, bh; je 0x160d0b; or al, 0x55; call edi; 
0x00177718: add bh, bh; je 0x177740; sbb al, 0x53; call eax; 
0x0003b0c0: add bh, bh; jg 0x3b045; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x00174f33: add bh, bh; jne 0x174f87; push edi; call dword ptr [eax + 0x14]; 
0x000846ac: add bh, bh; jne 0x84684; push edx; push ebx; push esi; call eax; 
0x0017328a: add bh, bh; ljmp 0xec83:0x10c483ff; or al, 0x31; call dword ptr [esi - 0x18]; 
0x000a78bb: add bh, bh; mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x00190c7e: add bh, bh; nop; jl 0x190c86; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009b358: add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x0003367d: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0x33690; add esp, 0x1c; ret; 
0x000abd1d: add bh, bh; xor al, 2; push dword ptr [esp + 0x1c]; call 0xabd30; add esp, 0x1c; ret; 
0x0005b120: add bh, bh; xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x00123451: add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x00060624: add bh, byte ptr [eax + 1]; ret; 
0x0007391c: add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x0013f545: add bh, byte ptr [ecx]; rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x0002e078: add bh, byte ptr [ecx]; ret 0x820f; 
0x0003115d: add bh, byte ptr [ecx]; ret 0xf072; 
0x0002cc07: add bh, byte ptr [ecx]; ret; 
0x0010e399: add bh, byte ptr [ecx]; ror byte ptr [edi], 1; dec edi; ret 0xbce9; 
0x00180811: add bh, byte ptr [edi + 0xc]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0019269a: add bh, byte ptr [edx - 6]; jmp dword ptr [esi - 0x70]; 
0x00111f47: add bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0013332e: add bh, cl; jmp dword ptr [ebp - 0x75]; 
0x000ba70d: add bh, cl; or al, 0; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a5d39: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a6554: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a1393: add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x0008f164: add bh, dh; fmul dword ptr [ecx - 0x3b7ceefc]; or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000c922b: add bh, dh; in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x0009a74a: add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000d6a09: add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x0009716f: add bh, dh; ret 0; 
0x000c2365: add bh, dh; ret 0x3f; 
0x00190d78: add bh, dh; ret 0xf; 
0x000c2da1: add bh, dh; ret 3; 
0x001b0253: add bh, dh; ret; 
0x000e7b7f: add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0eeb: add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0efb: add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000efefb: add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efeeb: add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x00129229: add bl, bl; test al, 0x1c; ret 0xfff9; 
0x00129212: add bl, bl; test al, 0xc; ret 0xfff9; 
0x000ac4c8: add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0008187e: add bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0008dd10: add bl, byte ptr [ebx + 0x5e]; ret; 
0x000ba10b: add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x00198d40: add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00192c6a: add bl, byte ptr [edi - 0x18]; mov word ptr [ecx - 1], cs; inc dword ptr [ecx + 0x4696fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019469a: add bl, byte ptr [edx - 6]; jmp dword ptr [esi - 0x70]; 
0x000801d5: add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x000819ee: add bl, byte ptr [esi + 0x5f]; ret; 
0x001aa647: add bl, byte ptr [esi - 0x7d]; ret 0x8308; 
0x0016d334: add bl, ch; fucomi st(0); je 0x16d31c; cld; jmp dword ptr [esi - 0x70]; 
0x00181056: add bl, ch; fucomi st(0); push edx; movsd dword ptr es:[edi], dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x000ea4e5: add bl, ch; or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0008d60c: add bl, ch; rcl byte ptr [eax - 0x4e1f00d], cl; mov eax, 0xffffffff; mov edx, eax; ret; 
0x00149bf2: add bl, ch; ret 0x148d; 
0x00188591: add bl, ch; ret 0x748d; 
0x00079656: add bl, ch; ret 0x9066; 
0x00085f8e: add bl, ch; ret; 
0x0016f3a3: add bl, ch; shr eax, 5; ret 0xfffc; 
0x000a72c9: add bl, ch; xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00043867: add bl, dh; bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000b61df: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b1e1f: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b20af: add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bdf0f: add bl, dh; movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15cf: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be10c: add bl, dh; movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c156f: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ac: add bl, dh; movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c158f: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0cc: add bl, dh; movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15af: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ec: add bl, dh; movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba55f: add bl, dh; movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000ba56f: add bl, dh; movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x001164da: add bl, dl; call 0x29134564; ret; 
0x00117f8a: add bl, dl; call 0x29136014; ret; 
0x00119a2a: add bl, dl; call 0x29137ab4; ret; 
0x00131ff8: add byte ptr [0x10ae1b], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00095d38: add byte ptr [0x1a70db], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d18: add byte ptr [0x1a70fb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00094b58: add byte ptr [0x1a82bb], al; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008f378: add byte ptr [0x1ada9b], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008f358: add byte ptr [0x1adabb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f338: add byte ptr [0x1adadb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f318: add byte ptr [0x1adafb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008d678: add byte ptr [0x1af79b], al; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d7a8: add byte ptr [0x1ff66b], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d788: add byte ptr [0x1ff68b], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x001a7fcf: add byte ptr [0x1ff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000871a9: add byte ptr [0x200], ah; ret; 
0x00034be8: add byte ptr [0x20822b], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bc8: add byte ptr [0x20824b], al; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba8: add byte ptr [0x20826b], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002f808: add byte ptr [0x20d60b], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00026088: add byte ptr [0x216d8b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026068: add byte ptr [0x216dab], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025518: add byte ptr [0x2178fb], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024f98: add byte ptr [0x217e7b], al; lea eax, [eax - 0x69094]; ret; 
0x00024f78: add byte ptr [0x217e9b], al; lea eax, [eax - 0x6908c]; ret; 
0x00024b08: add byte ptr [0x21830b], al; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x000a0a54: add byte ptr [0x3fc], bh; jbe 0xa0a60; ret; 
0x00087159: add byte ptr [0x804], ah; ret; 
0x0017158c: add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001503e8: add byte ptr [0xeca2b], al; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x0009830d: add byte ptr [0xf000dff], ah; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001a7eea: add byte ptr [0xff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0013ceb8: add byte ptr [0xfff5b], al; mov eax, dword ptr [eax + 0xc8]; add eax, dword ptr gs:[0]; ret; 
0x001a7f21: add byte ptr [0xfff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000649b7: add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x001a7f5a: add byte ptr [0xffff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000a0a94: add byte ptr [0xffff], bh; jbe 0xa0aa0; ret; 
0x0012789d: add byte ptr [0xfffff000], ah; or eax, edx; ret; 
0x0010c1f8: add byte ptr [0xfffff000], bh; ja 0x10c208; pop ebx; pop esi; ret; 
0x001131f6: add byte ptr [0xfffff000], bh; ja 0x113208; pop ebx; pop esi; ret; 
0x00114583: add byte ptr [0xfffff000], bh; ja 0x114590; pop ebx; ret; 
0x001145f3: add byte ptr [0xfffff000], bh; ja 0x114600; pop ebx; ret; 
0x001147d3: add byte ptr [0xfffff000], bh; ja 0x1147e0; pop ebx; ret; 
0x00115c49: add byte ptr [0xfffff000], bh; ja 0x115c58; pop ebx; pop esi; ret; 
0x0011ece3: add byte ptr [0xfffff000], bh; ja 0x11ecf0; pop ebx; ret; 
0x0011f203: add byte ptr [0xfffff000], bh; ja 0x11f210; pop ebx; ret; 
0x0011f621: add byte ptr [0xfffff000], bh; ja 0x11f630; pop ebx; ret; 
0x0011ff28: add byte ptr [0xfffff000], bh; ja 0x11ff38; pop ebx; pop esi; ret; 
0x0011ffaf: add byte ptr [0xfffff000], bh; ja 0x11ffc0; pop ebx; ret; 
0x0012000d: add byte ptr [0xfffff000], bh; ja 0x120020; pop ebx; pop esi; pop edi; ret; 
0x0012006d: add byte ptr [0xfffff000], bh; ja 0x120080; pop ebx; pop esi; pop edi; ret; 
0x001202c9: add byte ptr [0xfffff000], bh; ja 0x1202d8; pop ebx; pop esi; ret; 
0x001206c3: add byte ptr [0xfffff000], bh; ja 0x1206d0; pop ebx; ret; 
0x00120bcf: add byte ptr [0xfffff000], bh; ja 0x120be0; pop ebx; ret; 
0x00120fcf: add byte ptr [0xfffff000], bh; ja 0x120fe0; pop ebx; ret; 
0x0012133f: add byte ptr [0xfffff000], bh; ja 0x121360; pop ebx; pop esi; pop edi; ret; 
0x001213bc: add byte ptr [0xfffff000], bh; ja 0x1213e0; pop ebx; pop esi; pop edi; ret; 
0x0012143e: add byte ptr [0xfffff000], bh; ja 0x121460; pop ebx; pop esi; pop edi; ret; 
0x001214bb: add byte ptr [0xfffff000], bh; ja 0x1214e0; pop ebx; pop esi; pop edi; ret; 
0x00121588: add byte ptr [0xfffff000], bh; ja 0x121598; pop ebx; pop esi; ret; 
0x00121838: add byte ptr [0xfffff000], bh; ja 0x121848; pop ebx; pop esi; ret; 
0x001221d3: add byte ptr [0xfffff000], bh; ja 0x1221e0; pop ebx; ret; 
0x00122223: add byte ptr [0xfffff000], bh; ja 0x122230; pop ebx; ret; 
0x00122339: add byte ptr [0xfffff000], bh; ja 0x122348; pop ebx; pop esi; pop edi; ret; 
0x00122399: add byte ptr [0xfffff000], bh; ja 0x1223a8; pop ebx; pop esi; pop edi; ret; 
0x00123f53: add byte ptr [0xfffff000], bh; ja 0x123f60; pop ebx; ret; 
0x00123fa8: add byte ptr [0xfffff000], bh; ja 0x123fb8; pop ebx; pop esi; ret; 
0x001274e8: add byte ptr [0xfffff000], bh; ja 0x1274f8; pop ebx; pop esi; ret; 
0x0012941a: add byte ptr [0xfffff000], bh; ja 0x129428; pop ebx; pop esi; ret; 
0x0012aa03: add byte ptr [0xfffff000], bh; ja 0x12aa10; pop ebx; ret; 
0x0012aa58: add byte ptr [0xfffff000], bh; ja 0x12aa68; pop ebx; pop esi; ret; 
0x0012cd8f: add byte ptr [0xfffff000], bh; ja 0x12cda0; pop ebx; ret; 
0x0012d0e3: add byte ptr [0xfffff000], bh; ja 0x12d0f0; pop ebx; ret; 
0x0012d25a: add byte ptr [0xfffff000], bh; ja 0x12d268; ret; 
0x0012d363: add byte ptr [0xfffff000], bh; ja 0x12d370; pop ebx; ret; 
0x0012d5b2: add byte ptr [0xfffff000], bh; ja 0x12d5d8; pop ebx; pop esi; pop edi; ret; 
0x0012d86d: add byte ptr [0xfffff000], bh; ja 0x12d880; pop ebx; pop esi; pop edi; ret; 
0x0012da7d: add byte ptr [0xfffff000], bh; ja 0x12da90; pop ebx; pop esi; pop edi; ret; 
0x0012dadd: add byte ptr [0xfffff000], bh; ja 0x12daf0; pop ebx; pop esi; pop edi; ret; 
0x0012db38: add byte ptr [0xfffff000], bh; ja 0x12db48; pop ebx; pop esi; ret; 
0x0012dc8e: add byte ptr [0xfffff000], bh; ja 0x12dca0; pop ebx; pop esi; pop edi; ret; 
0x0012e213: add byte ptr [0xfffff000], bh; ja 0x12e220; pop ebx; ret; 
0x0012e423: add byte ptr [0xfffff000], bh; ja 0x12e430; pop ebx; ret; 
0x0018df19: add byte ptr [0xfffff000], bh; ja 0x18df28; pop ebx; pop esi; ret; 
0x0003cd14: add byte ptr [0xfffff000], bh; ja 0x3cd20; pop ebx; ret; 
0x00040768: add byte ptr [0xfffff000], bh; ja 0x40778; pop ebx; pop esi; ret; 
0x00061353: add byte ptr [0xfffff000], bh; ja 0x61360; pop ebx; ret; 
0x000613ad: add byte ptr [0xfffff000], bh; ja 0x613c0; pop ebx; pop esi; pop edi; ret; 
0x000901cc: add byte ptr [0xfffff000], bh; ja 0x901e0; pop ebx; pop esi; pop edi; ret; 
0x00098513: add byte ptr [0xfffff000], bh; ja 0x98520; pop ebx; pop esi; pop edi; ret; 
0x0009f5af: add byte ptr [0xfffff000], bh; ja 0x9f5c0; pop ebx; ret; 
0x0009fc38: add byte ptr [0xfffff000], bh; ja 0x9fc48; pop ebx; pop esi; ret; 
0x000a0357: add byte ptr [0xfffff000], bh; ja 0xa0368; pop ebx; ret; 
0x000dc371: add byte ptr [0xfffff000], bh; ja 0xdc380; pop ebx; ret; 
0x000e9102: add byte ptr [0xfffff000], bh; ja 0xe9110; pop ebx; pop esi; ret; 
0x0010c29b: add byte ptr [0xfffff001], bh; jae 0x24f10; ret; 
0x0013f99f: add byte ptr [0xffffff], ah; ret; 
0x0009aa9f: add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x00176cfe: add byte ptr [eax + 0x10c838b], dl; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x001aa80e: add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3e6e: add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009f917: add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012c8a7: add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012d24e: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x0012d24e: add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x00114ce5: add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114ae6: add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e7c8e: add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0009139f: add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00092c2f: add byte ptr [eax + 0x16], bh; ret; 
0x000bd6df: add byte ptr [eax + 0x18a017a], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bd71f: add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000e7f65: add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0007dacf: add byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x0016d32e: add byte ptr [eax + 0x1b8], dl; add bl, ch; fucomi st(0); je 0x16d31c; cld; jmp dword ptr [esi - 0x70]; 
0x00114c76: add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000b0530: add byte ptr [eax + 0x1e8850f], 0; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x000fb5cc: add byte ptr [eax + 0x20], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000c11bf: add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x001ae08e: add byte ptr [eax + 0x2444b60f], dl; and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x000b632e: add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000babbe: add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x00134457: add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0012428e: add byte ptr [eax + 0x35c808b], dl; add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00121d0e: add byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x000a0a9f: add byte ptr [eax + 0x3908289], dl; add byte ptr [eax], al; ret; 
0x0009116e: add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000fb6a7: add byte ptr [eax + 0x40], bh; ret; 
0x000c13ad: add byte ptr [eax + 0x448b1070], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdf27: add byte ptr [eax + 0x448b1070], cl; and al, 8; pop esi; ret; 
0x001733bd: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x001733bd: add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00104a6e: add byte ptr [eax + 0x568bd689], dl; or byte ptr [ecx], bh; ret 0x474; 
0x0015d948: add byte ptr [eax + 0x56], dl; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0016db2d: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016e595: add byte ptr [eax + 0x5a], bl; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016dc2b: add byte ptr [eax + 0x5a], bl; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000ba47f: add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000436ee: add byte ptr [eax + 0x5bc2bd0f], dl; xor eax, 0x1f; ret; 
0x00114bde: add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000ba4ae: add byte ptr [eax + 0x5e5f1789], dl; pop ebx; ret; 
0x00091193: add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000ba49e: add byte ptr [eax + 0x5fff5789], dl; pop esi; pop ebx; ret; 
0x000b633e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b1f5e: add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000df1bf: add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x00127aba: add byte ptr [eax + 0x6a0000], al; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x0008bb1e: add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0012e3af: add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0014da95: add byte ptr [eax + 0x6a], dl; add eax, ebp; ret 0xf9a2; 
0x0012d2ef: add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d076: add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00130443: add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0013048f: add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013105e: add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x001987fe: add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a77b1: add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a77a0: add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x001a778f: add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00040569: add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00131907: add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00093d40: add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00092dfe: add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0003cb5b: add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbfe: add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093071: add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0009df43: add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009a7e3: add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001a96b5: add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000952a7: add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001a9648: add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a96ab: add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000919dd: add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000958d5: add byte ptr [eax + 0xf0], bh; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00096686: add byte ptr [eax + 0xf0], bh; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009e416: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000903ed: add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000977eb: add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009880c: add byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009203f: add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095713: add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000901b4: add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009802e: add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014916e: add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x000bd78f: add byte ptr [eax + 0xf66087a], cl; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00095f1e: add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d9f0f: add byte ptr [eax + 0xfe580f5], cl; je 0xd9f30; add eax, 2; ret; 
0x0009c707: add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000fb72c: add byte ptr [eax + 1], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x0019ce2f: add byte ptr [eax + 1], bh; ja 0x19ce39; neg eax; ret; 
0x001a3a6f: add byte ptr [eax + 1], bh; ja 0x1a3a79; neg eax; ret; 
0x000d9d3f: add byte ptr [eax + 1], bh; jg 0xd9d49; neg eax; ret; 
0x00176840: add byte ptr [eax + 1], bh; pop ebx; pop esi; pop edi; ret; 
0x000a7557: add byte ptr [eax + 1], bh; ret; 
0x00042ddf: add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x001872df: add byte ptr [eax + 2], bh; add esp, 0xc; ret; 
0x00094b97: add byte ptr [eax + 3], bh; ret; 
0x001a960c: add byte ptr [eax + 4], bh; pop edi; ret; 
0x0013dd0f: add byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x001a9665: add byte ptr [eax + 8], bh; pop edi; ret; 
0x001a9edf: add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x00190e6e: add byte ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00160ce0: add byte ptr [eax + eax], al; add bh, bh; je 0x160d0b; or al, 0x55; call edi; 
0x001649ea: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x001622ea: add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x5d], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x00132bcf: add byte ptr [eax + eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0012a179: add byte ptr [eax + eax], al; add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x00177873: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x0006710c: add byte ptr [eax + eax], al; add byte ptr [ecx], bh; ret; 
0x0013c2ae: add byte ptr [eax + eax], al; add byte ptr [ecx], ch; ret 0xc031; 
0x0013f3de: add byte ptr [eax + eax], cl; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016e089: add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x001213a5: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001214a5: add byte ptr [eax + ebp - 0x75], dh; dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0015487d: add byte ptr [eax - 0x12b7b], cl; call dword ptr [edx - 0x18]; 
0x001367e4: add byte ptr [eax - 0x17af0007], ch; and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x001a7749: add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00125c76: add byte ptr [eax - 0x18], dl; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003ddd8: add byte ptr [eax - 0x18], dl; int1; scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x0015a8ef: add byte ptr [eax - 0x18], dl; lcall 0x10c4, 0x83ffec88; add esp, 8; pop ebx; ret; 
0x0016c59f: add byte ptr [eax - 0x18], dl; ljmp 0x18c4:0x83fff2c0; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x00093fd7: add byte ptr [eax - 0x18], dl; ret 0xffbb; 
0x00058dde: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; call dword ptr [eax - 1]; 
0x00058388: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000d6ffd: add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x0013c01e: add byte ptr [eax - 0x1f8418], dl; jmp dword ptr [esi - 0x70]; 
0x00132eef: add byte ptr [eax - 0x27770000], al; pop ebx; pop esi; pop edi; ret; 
0x000b7d02: add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a775a: add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a776b: add byte ptr [eax - 0x37af0c0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x00122ad8: add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x00098114: add byte ptr [eax - 0x3b7c3fcf], dl; add al, 0x5b; pop esi; ret; 
0x0010d4fe: add byte ptr [eax - 0x3c7c2677], dl; add esi, esi; ret 0xf04; 
0x000c6dbe: add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x0010082e: add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001a3d4e: add byte ptr [eax - 0x3fcea0a2], dl; pop ebp; ret; 
0x001a7b4e: add byte ptr [eax - 0x3fcea1a5], dl; pop edi; ret; 
0x001a9dd9: add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x000a715e: add byte ptr [eax - 0x47fb3b7d], dl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014a6e9: add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x0002f7fe: add byte ptr [eax - 0x4e1f00d], dl; call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0008be4e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x0008d69e: add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016c69e: add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x00092b6e: add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000de7a7: add byte ptr [eax - 0x54], ch; ret 0xf0; 
0x0014bd1f: add byte ptr [eax - 0x6bf0d106], al; ret 0xc083; 
0x000c1d0e: add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012a59e: add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00122c4e: add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [edi], ch; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00123c5e: add byte ptr [eax - 0x72f7137d], dl; xchg esi, eax; xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x000300b4: add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x00031fe1: add byte ptr [eax - 0x73], dl; adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x001649ed: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x0008d9e0: add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x50fff93e], -0x18; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x001586dd: add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x5f], 0; add byte ptr [eax - 0x73], dl; or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x000ebed8: add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; 
0x000edc10: add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x000327e8: add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x00144e3e: add byte ptr [eax - 0x73], dl; adc dword ptr [edx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x0015a650: add byte ptr [eax - 0x73], dl; adc eax, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x00136731: add byte ptr [eax - 0x73], dl; adc ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x001622ed: add byte ptr [eax - 0x73], dl; add dword ptr [eax - 0x5d], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x001367e0: add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x58; stc; call dword ptr [eax - 0x18]; 
0x000d32c3: add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x65; stc; call dword ptr [eax - 0x18]; 
0x000a3928: add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x6e; stc; call dword ptr [eax - 0x18]; 
0x0005dfce: add byte ptr [eax - 0x73], dl; add dword ptr [ebx + edi*2], -7; call dword ptr [eax - 0x18]; 
0x0017ca34: add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x63; stc; call dword ptr [eax + 0x6a]; 
0x000d3266: add byte ptr [eax - 0x73], dl; add eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x00136777: add byte ptr [eax - 0x73], dl; add ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x0013679a: add byte ptr [eax - 0x73], dl; add ecx, 0x55; stc; call dword ptr [eax - 0x18]; 
0x0014f381: add byte ptr [eax - 0x73], dl; add esp, -0x51; stc; call dword ptr [eax - 0x18]; 
0x001367bd: add byte ptr [eax - 0x73], dl; add esp, -0x59; stc; call dword ptr [eax - 0x18]; 
0x0014f908: add byte ptr [eax - 0x73], dl; and byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x18]; 
0x0005dff8: add byte ptr [eax - 0x73], dl; and byte ptr [ebx + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0015a5ee: add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x0015a683: add byte ptr [eax - 0x73], dl; and dword ptr [eax], 0xffffffb5; stc; call dword ptr [eax - 0x18]; 
0x001659d9: add byte ptr [eax - 0x73], dl; and dword ptr [ebp - 0x72b00000], 0xffffff83; in al, dx; dec ebx; int1; call dword ptr [eax - 0x73]; 
0x001764c0: add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00032006: add byte ptr [eax - 0x73], dl; cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0005adaf: add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x0005e0db: add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x000609bf: add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x001507e7: add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + esi*4], -7; call dword ptr [eax - 0x18]; 
0x000dee21: add byte ptr [eax - 0x73], dl; cmp dword ptr [esi + eax*2], -7; call dword ptr [eax - 0x18]; 
0x0015a6b6: add byte ptr [eax - 0x73], dl; cmp eax, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x0016defc: add byte ptr [eax - 0x73], dl; inc ebx; or al, 0x83; ret; 
0x00153b25: add byte ptr [eax - 0x73], dl; or byte ptr [ebx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x0013d1d7: add byte ptr [eax - 0x73], dl; or byte ptr [ecx + eax], 0xf0; call dword ptr [eax - 0x73]; 
0x000dee5f: add byte ptr [eax - 0x73], dl; or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0013d107: add byte ptr [eax - 0x73], dl; or dword ptr [ecx + eax], 0xfffffff0; call dword ptr [eax - 0x73]; 
0x001630f0: add byte ptr [eax - 0x73], dl; or dword ptr [edx + ecx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0005e042: add byte ptr [eax - 0x73], dl; or eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x001497db: add byte ptr [eax - 0x73], dl; or ebp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00161c47: add byte ptr [eax - 0x73], dl; or esp, 0x48; int1; call dword ptr [eax - 0x73]; 
0x001586e4: add byte ptr [eax - 0x73], dl; or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x000c50a9: add byte ptr [eax - 0x73], dl; sbb byte ptr [edx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000dee40: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000dee40: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; ret 0xf554; 
0x000a3904: add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x6f], -7; call dword ptr [eax - 0x18]; 
0x000de498: add byte ptr [eax - 0x73], dl; sbb dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x00163034: add byte ptr [eax - 0x73], dl; sbb dword ptr [esp], -0xe; call dword ptr [eax - 0x18]; 
0x0014f785: add byte ptr [eax - 0x73], dl; sub al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x000c5086: add byte ptr [eax - 0x73], dl; sub cl, 0x44; stc; call dword ptr [eax - 0x18]; 
0x00146692: add byte ptr [eax - 0x73], dl; sub esp, -0x53; stc; call dword ptr [eax + 0x6a]; 
0x00156690: add byte ptr [eax - 0x73], dl; sub esp, 0x46; int1; call dword ptr [eax - 0x73]; 
0x001659e0: add byte ptr [eax - 0x73], dl; sub esp, 0x4b; int1; call dword ptr [eax - 0x73]; 
0x001622f4: add byte ptr [eax - 0x73], dl; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x001649f4: add byte ptr [eax - 0x73], dl; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x000972f6: add byte ptr [eax - 0x73], dl; test dword ptr [ebp + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000a61ee: add byte ptr [eax - 0x73], dl; test edx, edx; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000dbebe: add byte ptr [eax - 0x73], dl; xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x00095c61: add byte ptr [eax - 0x73], dl; xchg ah, bl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00059c29: add byte ptr [eax - 0x73], dl; xchg al, ah; jbe 0x59c29; call dword ptr [eax - 0x18]; 
0x0013eda1: add byte ptr [eax - 0x73], dl; xchg al, ah; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x00059dc0: add byte ptr [eax - 0x73], dl; xchg al, ch; das; stc; call dword ptr [eax - 0x18]; 
0x000893df: add byte ptr [eax - 0x73], dl; xchg al, ch; stc; call dword ptr [eax - 0x18]; 
0x000a67dc: add byte ptr [eax - 0x73], dl; xchg al, dh; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00029be1: add byte ptr [eax - 0x73], dl; xchg al, dl; jo 0x29be1; call dword ptr [eax - 0x18]; 
0x000a2a93: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax - 0x71], ah; stc; call dword ptr [eax - 0x18]; 
0x0013f386: add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000a20c1: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], al; stc; call dword ptr [eax - 0x18]; 
0x000a2b3f: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; 
0x000a2b3f: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; ret; 
0x000959e6: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00062b8d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x18]; 
0x00027527: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x0005dfa9: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x0011b82d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx], al; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0005e01d: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], cl; call dword ptr [eax - 0x18]; 
0x00059c73: add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx], bl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0014d035: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebp*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x000df327: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebx*8 - 0x17], bl; call dword ptr [eax - 0x73]; 
0x000a2a70: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ecx*4], dh; stc; call dword ptr [eax - 0x18]; 
0x00059d2c: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + esi*2 - 7], ah; call dword ptr [eax - 0x18]; 
0x00059c98: add byte ptr [eax - 0x73], dl; xchg byte ptr [edi], ch; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00112229: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], cl; stc; call dword ptr [eax - 0x18]; 
0x0017ef9d: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x66], ch; stc; call dword ptr [eax - 0x18]; 
0x00029bbe: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0011b85d: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00027085: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000a19ca: add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], dl; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00027557: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x000e2ff6: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x46], bh; stc; call dword ptr [eax - 0x18]; 
0x0017df36: add byte ptr [eax - 0x73], dl; xchg byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x00059bda: add byte ptr [eax - 0x73], dl; xchg ch, cl; das; stc; call dword ptr [eax - 0x18]; 
0x0002a121: add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00029abb: add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0009339f: add byte ptr [eax - 0x73], dl; xchg dl, cl; aas; stc; call dword ptr [eax - 0x18]; 
0x00089431: add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x0002ac63: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], ebp; stc; call dword ptr [eax - 0x18]; 
0x0004a43a: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + esi], eax; stc; call dword ptr [eax - 0x18]; 
0x0015d9d9: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4b], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a6a70: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a4fcf: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x6b], esi; stc; call dword ptr [eax - 0x18]; 
0x0009d1cd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x78], ebp; stc; call dword ptr [eax - 0x18]; 
0x0002c643: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0004a1df: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0x4a1df; call dword ptr [eax - 0x18]; 
0x0004d534: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0x4d534; call dword ptr [eax - 0x18]; 
0x00051219: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0x51219; call dword ptr [eax - 0x18]; 
0x00059956: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0x59956; call dword ptr [eax - 0x18]; 
0x000d11d0: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0xd11d0; call dword ptr [eax - 0x18]; 
0x000d8ac2: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebx; js 0xd8ac2; call dword ptr [eax - 0x18]; 
0x0002abb3: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2abb3; call dword ptr [eax - 0x18]; 
0x0002b8fe: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2b8fe; call dword ptr [eax - 0x18]; 
0x0002dc14: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2dc14; call dword ptr [eax - 0x18]; 
0x0002e3b7: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2e3b7; call dword ptr [eax - 0x18]; 
0x0002f115: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2f115; call dword ptr [eax - 0x18]; 
0x0002aca9: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2aca9; call dword ptr [eax - 0x18]; 
0x0002dbf1: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2dbf1; call dword ptr [eax - 0x18]; 
0x0002e402: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2e402; call dword ptr [eax - 0x18]; 
0x0002f0dd: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2f0dd; call dword ptr [eax - 0x18]; 
0x000699ea: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x000a532f: add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000a460e: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + eax*2], ecx; stc; call dword ptr [eax - 0x18]; 
0x000c7116: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x001537f3: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x00094369: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00183a3b: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebp; stc; call dword ptr [eax - 0x18]; 
0x0014ff6f: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x001693e8: add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], esp; stc; call dword ptr [eax - 0x18]; 
0x00183a81: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x67], eax; stc; call dword ptr [eax - 0x18]; 
0x0009f03c: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0017be12: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0004a4cd: add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0017e110: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; call dword ptr [eax + 0x6a]; 
0x0017e5a1: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0004a559: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x001693c5: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0004a513: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00094347: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ebx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x001537d0: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0002757b: add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0004a4aa: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x30], eax; stc; call dword ptr [eax - 0x18]; 
0x00111cc0: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x0017b063: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x63], esi; stc; call dword ptr [eax + 0x6a]; 
0x000a4e3f: add byte ptr [eax - 0x73], dl; xchg dword ptr [edx*4 - 0x17af0007], edi; ret; 
0x0009eb0e: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x41], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a4e1c: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x43], ecx; stc; call dword ptr [eax - 0x18]; 
0x001106eb: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x49], edx; stc; call dword ptr [eax - 0x18]; 
0x0004a536: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00183a18: add byte ptr [eax - 0x73], dl; xchg dword ptr [esi], edx; stc; call dword ptr [eax - 0x18]; 
0x001131be: add byte ptr [eax - 0x73], dl; xchg eax, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004a4f0: add byte ptr [eax - 0x73], dl; xchg eax, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x00168c5d: add byte ptr [eax - 0x73], dl; xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00169399: add byte ptr [eax - 0x73], dl; xchg eax, edi; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0004a487: add byte ptr [eax - 0x73], dl; xchg eax, edx; ja 0x4a487; call dword ptr [eax - 0x18]; 
0x0004d62f: add byte ptr [eax - 0x73], dl; xchg eax, edx; ja 0x4d62f; call dword ptr [eax - 0x18]; 
0x00051495: add byte ptr [eax - 0x73], dl; xchg eax, edx; ja 0x51495; call dword ptr [eax - 0x18]; 
0x00059d07: add byte ptr [eax - 0x73], dl; xchg eax, edx; ja 0x59d07; call dword ptr [eax - 0x18]; 
0x000d12d4: add byte ptr [eax - 0x73], dl; xchg eax, edx; ja 0xd12d4; call dword ptr [eax - 0x18]; 
0x0002886b: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2886b; call dword ptr [eax - 0x18]; 
0x00028f5e: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x28f5e; call dword ptr [eax - 0x18]; 
0x0002947a: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2947a; call dword ptr [eax - 0x18]; 
0x0002abdb: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2abdb; call dword ptr [eax - 0x18]; 
0x0002dafc: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2dafc; call dword ptr [eax - 0x18]; 
0x0002e3df: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2e3df; call dword ptr [eax - 0x18]; 
0x0002f051: add byte ptr [eax - 0x73], dl; xchg eax, edx; jo 0x2f051; call dword ptr [eax - 0x18]; 
0x0004a3f4: add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4a3f4; call dword ptr [eax - 0x18]; 
0x0004d70d: add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4d70d; call dword ptr [eax - 0x18]; 
0x000513e3: add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x513e3; call dword ptr [eax - 0x18]; 
0x000cab9d: add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0xcab9d; call dword ptr [eax - 0x18]; 
0x000a56b1: add byte ptr [eax - 0x73], dl; xchg eax, esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000942e1: add byte ptr [eax - 0x73], dl; xchg ebp, ebx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0004a3d1: add byte ptr [eax - 0x73], dl; xchg ebp, ecx; das; stc; call dword ptr [eax - 0x18]; 
0x000943be: add byte ptr [eax - 0x73], dl; xchg ebp, esi; aas; stc; call dword ptr [eax - 0x18]; 
0x0015d4c9: add byte ptr [eax - 0x73], dl; xchg ebx, ebp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x0004a417: add byte ptr [eax - 0x73], dl; xchg edx, eax; das; stc; call dword ptr [eax - 0x18]; 
0x00094325: add byte ptr [eax - 0x73], dl; xchg edx, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x000a482c: add byte ptr [eax - 0x73], dl; xchg edx, ebx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000287e4: add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002b98c: add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002ab90: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2ab90; call dword ptr [eax - 0x18]; 
0x0002b81b: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2b81b; call dword ptr [eax - 0x18]; 
0x0002db65: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2db65; call dword ptr [eax - 0x18]; 
0x0002f074: add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2f074; call dword ptr [eax - 0x18]; 
0x0003136c: add byte ptr [eax - 0x73], dl; xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00183a5e: add byte ptr [eax - 0x73], dl; xchg esp, edi; stc; call dword ptr [eax - 0x18]; 
0x000a4862: add byte ptr [eax - 0x73], dl; xchg esp, esp; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0014f80b: add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0003205a: add byte ptr [eax - 0x73], dl; xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0015a95b: add byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x001503b0: add byte ptr [eax - 0x73], dl; xor dword ptr [edx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x000d32a4: add byte ptr [eax - 0x73], dl; xor eax, 0xffffff9d; stc; call dword ptr [eax - 0x18]; 
0x0013cb07: add byte ptr [eax - 0x73], dl; xor edx, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x00115751: add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0007c9be: add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056ea7: add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x36536b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00135603: add byte ptr [eax - 0x75], dl; inc ebp; mov esp, 0x558e808d; stc; call dword ptr [eax - 1]; 
0x0015cf4d: add byte ptr [eax - 0x75], dl; je 0x15cf76; sbb al, 0x8d; xchg byte ptr [eax + 0x5f], dh; stc; call dword ptr [eax - 0x18]; 
0x000f037e: add byte ptr [eax - 0x7663ba75], dl; jecxz 0xf0309; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x00090230: add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b3e4e: add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x00090195: add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x00187c5e: add byte ptr [eax - 0x76f3137d], dl; ret; 
0x00155118: add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x000b052e: add byte ptr [eax - 0x7af07f80], 0xe8; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0018659c: add byte ptr [eax - 0x7af0cf06], al; ret; 
0x001108c3: add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x0009876f: add byte ptr [eax - 0x7c308bfc], ch; in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00042e34: add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x00178dbe: add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x001495fe: add byte ptr [eax - 0x7cdf387d], dl; ret 0x3901; 
0x000c4383: add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0007dc1b: add byte ptr [eax - 0x7cffffe6], 0xf8; add dword ptr [edi + 0xb], edi; ret; 
0x0009a99c: add byte ptr [eax - 0x7d000000], 0xe0; cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00031d90: add byte ptr [eax - 0x7f72fff8], al; je 0x31e0b; stc; call dword ptr [eax - 0x18]; 
0x0013a94e: add byte ptr [eax - 0x8b418], dl; jmp dword ptr [esi - 0x70]; 
0x0005c701: add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0013adce: add byte ptr [eax - 0xd3418], dl; jmp dword ptr [esi - 0x70]; 
0x00084987: add byte ptr [eax - 0xf76c1ba], cl; pop ebx; pop esi; pop edi; ret; 
0x00025833: add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x000eb56a: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009b2ab: add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00087523: add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d463: add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c9e3: add byte ptr [eax - 1], bh; ret; 
0x00025d73: add byte ptr [eax - 1], dl; jae 0x25d7c; call edi; 
0x00127aed: add byte ptr [eax - 1], dl; je 0x127b16; sbb al, 0xe8; cmp byte ptr [ebx + esi*8 + 0x10c483ff], bl; add esp, 0xc; ret; 
0x0002a302: add byte ptr [eax - 1], dl; je 0x2a32b; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002aec0: add byte ptr [eax - 1], dl; je 0x2aee9; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002bb67: add byte ptr [eax - 1], dl; je 0x2bb90; push 0x682474ff; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002d1d1: add byte ptr [eax - 1], dl; je 0x2d1fa; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002e67e: add byte ptr [eax - 1], dl; je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x0009465c: add byte ptr [eax - 1], dl; je 0x94685; sub al, 0xe8; stc; ret; 
0x00126244: add byte ptr [eax - 7], dl; call dword ptr [edx + 0x52]; 
0x0008d5cc: add byte ptr [eax], 0; add al, ch; ret; 
0x001b0250: add byte ptr [eax], 0; add bh, dh; ret; 
0x000c750a: add byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0009022d: add byte ptr [eax], 0; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x00090192: add byte ptr [eax], 0; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x0002a2ff: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2a32b; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002d1ce: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2d1fa; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002e67b: add byte ptr [eax], 0; add byte ptr [eax - 1], dl; je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x000944a4: add byte ptr [eax], 0; add byte ptr [eax], dl; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x0015c099: add byte ptr [eax], 0; add byte ptr [ebp - 0x6e77f02e], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0009a148: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a258: add byte ptr [eax], 0; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x0015a31c: add byte ptr [eax], 0; add byte ptr [ebx - 0x7cefdb8c], cl; ret 0x8301; 
0x001b1e8a: add byte ptr [eax], 0; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0013f62c: add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0008fbcf: add byte ptr [eax], 0; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009a14e: add byte ptr [eax], 0; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a25e: add byte ptr [eax], 0; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x001b0cca: add byte ptr [eax], 0; add cl, ch; ret; 
0x00095c47: add byte ptr [eax], 0; add cl, ch; sbb eax, 0x8dffffff; xchg al, dl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001b079c: add byte ptr [eax], 0; add dh, dh; ret 0x7407; 
0x00100fd1: add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x0010112d: add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x00132ef0: add byte ptr [eax], 0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00127abb: add byte ptr [eax], 0; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00034778: add byte ptr [eax], 0; ret; 
0x0005adac: add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000c9522: add byte ptr [eax], 0xc1; stc; call dword ptr [eax + 0x53]; 
0x0004aac6: add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x00034807: add byte ptr [eax], ah; add byte ptr [eax], al; ret; 
0x0016118c: add byte ptr [eax], ah; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000944a6: add byte ptr [eax], al; adc byte ptr [ebp + 0xd], dh; xor eax, eax; add esp, 0xc; ret; 
0x000ea4ed: add byte ptr [eax], al; add ah, dh; mov eax, edx; call dword ptr gs:[0x10]; 
0x0013f98a: add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013fc99: add byte ptr [eax], al; add al, al; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0014d424: add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00130f87: add byte ptr [eax], al; add al, ch; jle 0x130ff3; add eax, 0x85c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x001741ee: add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeaef; pop ebx; ret; 
0x0019133d: add byte ptr [eax], al; add al, ch; mov eax, 0x81ffff62; ret; 
0x00094639: add byte ptr [eax], al; add al, ch; mov esp, 0x81000f2f; ret; 
0x0008d5cd: add byte ptr [eax], al; add al, ch; ret; 
0x0003d548: add byte ptr [eax], al; add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x00188589: add byte ptr [eax], al; add bh, al; add al, byte ptr [eax]; add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x0007dacb: add byte ptr [eax], al; add bh, al; add byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x000a517d: add byte ptr [eax], al; add bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00079eb4: add byte ptr [eax], al; add bh, al; add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008d805: add byte ptr [eax], al; add bh, al; cmp byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x0007dc6f: add byte ptr [eax], al; add bh, al; or byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x00154d2f: add byte ptr [eax], al; add bh, al; sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x000f2095: add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x00177716: add byte ptr [eax], al; add bh, bh; je 0x177740; sbb al, 0x53; call eax; 
0x00174f31: add byte ptr [eax], al; add bh, bh; jne 0x174f87; push edi; call dword ptr [eax + 0x14]; 
0x000a5d37: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a6552: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a1391: add byte ptr [eax], al; add bh, dh; fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x001ae109: add byte ptr [eax], al; add bh, dh; ret 0; 
0x000c2363: add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001b0251: add byte ptr [eax], al; add bh, dh; ret; 
0x000f0ee9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0ef9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000efef9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efee9: add byte ptr [eax], al; add bl, al; nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x0012931d: add byte ptr [eax], al; add bl, bl; test al, 0x1c; ret 0xfff9; 
0x0016d332: add byte ptr [eax], al; add bl, ch; fucomi st(0); je 0x16d31c; cld; jmp dword ptr [esi - 0x70]; 
0x0008d60a: add byte ptr [eax], al; add bl, ch; rcl byte ptr [eax - 0x4e1f00d], cl; mov eax, 0xffffffff; mov edx, eax; ret; 
0x00149bf0: add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x0018858f: add byte ptr [eax], al; add bl, ch; ret 0x748d; 
0x00079654: add byte ptr [eax], al; add bl, ch; ret 0x9066; 
0x00085f8c: add byte ptr [eax], al; add bl, ch; ret; 
0x0016f3a1: add byte ptr [eax], al; add bl, ch; shr eax, 5; ret 0xfffc; 
0x001aa83d: add byte ptr [eax], al; add bl, dh; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x001164d8: add byte ptr [eax], al; add bl, dl; call 0x29134564; ret; 
0x00117f88: add byte ptr [eax], al; add bl, dl; call 0x29136014; ret; 
0x00119a28: add byte ptr [eax], al; add bl, dl; call 0x29137ab4; ret; 
0x0017158a: add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a7ee8: add byte ptr [eax], al; add byte ptr [0xff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f1f: add byte ptr [eax], al; add byte ptr [0xfff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f58: add byte ptr [eax], al; add byte ptr [0xffff], ah; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0010c1f6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x10c208; pop ebx; pop esi; ret; 
0x001131f4: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x113208; pop ebx; pop esi; ret; 
0x00114581: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114590; pop ebx; ret; 
0x001145f1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x114600; pop ebx; ret; 
0x001147d1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1147e0; pop ebx; ret; 
0x00115c47: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x115c58; pop ebx; pop esi; ret; 
0x0011ece1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11ecf0; pop ebx; ret; 
0x0011f201: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11f210; pop ebx; ret; 
0x0011f61f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11f630; pop ebx; ret; 
0x0011ff26: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11ff38; pop ebx; pop esi; ret; 
0x0011ffad: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x11ffc0; pop ebx; ret; 
0x001202c7: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1202d8; pop ebx; pop esi; ret; 
0x001206c1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1206d0; pop ebx; ret; 
0x00120bcd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120be0; pop ebx; ret; 
0x00120fcd: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x120fe0; pop ebx; ret; 
0x00121586: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121598; pop ebx; pop esi; ret; 
0x00121836: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x121848; pop ebx; pop esi; ret; 
0x001221d1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1221e0; pop ebx; ret; 
0x00122221: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x122230; pop ebx; ret; 
0x00123f51: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123f60; pop ebx; ret; 
0x00123fa6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x123fb8; pop ebx; pop esi; ret; 
0x001274e6: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x1274f8; pop ebx; pop esi; ret; 
0x00129418: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x129428; pop ebx; pop esi; ret; 
0x0012aa01: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12aa10; pop ebx; ret; 
0x0012aa56: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12aa68; pop ebx; pop esi; ret; 
0x0012cd8d: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12cda0; pop ebx; ret; 
0x0012d0e1: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12d0f0; pop ebx; ret; 
0x0012d258: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12d268; ret; 
0x0012d361: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12d370; pop ebx; ret; 
0x0012db36: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12db48; pop ebx; pop esi; ret; 
0x0012e211: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12e220; pop ebx; ret; 
0x0012e421: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x12e430; pop ebx; ret; 
0x0018df17: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x18df28; pop ebx; pop esi; ret; 
0x0003cd12: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x3cd20; pop ebx; ret; 
0x00040766: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x40778; pop ebx; pop esi; ret; 
0x00061351: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x61360; pop ebx; ret; 
0x0009f5ad: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9f5c0; pop ebx; ret; 
0x0009fc36: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0x9fc48; pop ebx; pop esi; ret; 
0x000a0355: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xa0368; pop ebx; ret; 
0x000dc36f: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xdc380; pop ebx; ret; 
0x000e9100: add byte ptr [eax], al; add byte ptr [0xfffff000], bh; ja 0xe9110; pop ebx; pop esi; ret; 
0x0010c299: add byte ptr [eax], al; add byte ptr [0xfffff001], bh; jae 0x24f10; ret; 
0x0013f99d: add byte ptr [eax], al; add byte ptr [0xffffff], ah; ret; 
0x001aa80c: add byte ptr [eax], al; add byte ptr [eax + 0x1120f66], dl; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3e6c: add byte ptr [eax], al; add byte ptr [eax + 0x1130f66], dl; pop ebx; ret; 
0x0009f915: add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114ce3: add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114ae4: add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x000e7c8c: add byte ptr [eax], al; add byte ptr [eax + 0x14244c8d], dl; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00189e65: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000983e5: add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x000e7f63: add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x00114c74: add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000fb5ca: add byte ptr [eax], al; add byte ptr [eax + 0x20], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000c11bd: add byte ptr [eax], al; add byte ptr [eax + 0x24448b38], cl; or al, 0x5b; pop esi; ret; 
0x001ae08c: add byte ptr [eax], al; add byte ptr [eax + 0x2444b60f], dl; and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x000b632c: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; lea eax, [edx]; ret; 
0x000babbc: add byte ptr [eax], al; add byte ptr [eax + 0x288018a], dl; mov eax, edx; ret; 
0x00134455: add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x0009116c: add byte ptr [eax], al; add byte ptr [eax + 0x40084983], dl; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00104a6c: add byte ptr [eax], al; add byte ptr [eax + 0x568bd689], dl; or byte ptr [ecx], bh; ret 0x474; 
0x000436ec: add byte ptr [eax], al; add byte ptr [eax + 0x5bc2bd0f], dl; xor eax, 0x1f; ret; 
0x00091191: add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x000b633c: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b1f5c: add byte ptr [eax], al; add byte ptr [eax + 0x66018b66], dl; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0008bb1c: add byte ptr [eax], al; add byte ptr [eax + 0x6a08ec83], dl; call dword ptr [esi - 0x18]; 
0x0012e3ad: add byte ptr [eax], al; add byte ptr [eax + 0x6a], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0014da93: add byte ptr [eax], al; add byte ptr [eax + 0x6a], dl; add eax, ebp; ret 0xf9a2; 
0x0012d2ed: add byte ptr [eax], al; add byte ptr [eax + 0x6b], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d074: add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00130441: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0013048d: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013105c: add byte ptr [eax], al; add byte ptr [eax + 0x75], bh; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x001987fc: add byte ptr [eax], al; add byte ptr [eax + 0x7608f983], dl; fcomi st(7); ret 1; 
0x001a778d: add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x00040567: add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00131905: add byte ptr [eax], al; add byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0009df41: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009a7e1: add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x001a96b3: add byte ptr [eax], al; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000952a5: add byte ptr [eax], al; add byte ptr [eax + 0xe0], bh; call dword ptr gs:[0x10]; 
0x001a9646: add byte ptr [eax], al; add byte ptr [eax + 0xf00067a], al; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a96a9: add byte ptr [eax], al; add byte ptr [eax + 0xf000b7a], al; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x000919db: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0009e414: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009203d: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000901b2: add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009802c: add byte ptr [eax], al; add byte ptr [eax + 0xf0b8], dl; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0014916c: add byte ptr [eax], al; add byte ptr [eax + 0xf2cfa80], dl; xchg ebp, eax; ret; 
0x00095f1c: add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000d9f0d: add byte ptr [eax], al; add byte ptr [eax + 0xfe580f5], cl; je 0xd9f30; add eax, 2; ret; 
0x0009c705: add byte ptr [eax], al; add byte ptr [eax + 1], bh; add esp, 0xc; ret; 
0x000fb72a: add byte ptr [eax], al; add byte ptr [eax + 1], bh; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000a7555: add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x001a960a: add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x001a9663: add byte ptr [eax], al; add byte ptr [eax + 8], bh; pop edi; ret; 
0x00058ddc: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; call dword ptr [eax - 1]; 
0x00058386: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000d6ffb: add byte ptr [eax], al; add byte ptr [eax - 0x1c], ch; sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x0013c01c: add byte ptr [eax], al; add byte ptr [eax - 0x1f8418], dl; jmp dword ptr [esi - 0x70]; 
0x00122ad6: add byte ptr [eax], al; add byte ptr [eax - 0x37fea1a5], al; adc edx, 0; ret; 
0x0010d4fc: add byte ptr [eax], al; add byte ptr [eax - 0x3c7c2677], dl; add esi, esi; ret 0xf04; 
0x000c6dbc: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf775], dl; add al, 0x83; ret 0x8b04; 
0x0010082c: add byte ptr [eax], al; add byte ptr [eax - 0x3f7cf7fd], dl; add al, 0x39; ret 0xf775; 
0x001a9dd7: add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x0014a6e7: add byte ptr [eax], al; add byte ptr [eax - 0x48], al; add byte ptr [edi], cl; inc esp; ret; 
0x0008be4c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, 0xffffffff; ret; 
0x0008d69c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0016c69c: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; ret; 
0x0017a7ac: add byte ptr [eax], al; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x000c1d0c: add byte ptr [eax], al; add byte ptr [eax - 0x723f43f1], dl; inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x0012a59c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00122c4c: add byte ptr [eax], al; add byte ptr [eax - 0x72f3137d], dl; xchg byte ptr [edi], ch; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000300b2: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc byte ptr [edi + 0x2b], 0xf9; call dword ptr [eax - 0x18]; 
0x0008d9de: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x50fff93e], -0x18; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x000327e6: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x000c50a7: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sbb byte ptr [edx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x000c5084: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; sub cl, 0x44; stc; call dword ptr [eax - 0x18]; 
0x00095c5f: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, bl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x0013f384: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [eax], bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x000df325: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebx*8 - 0x17], bl; call dword ptr [eax - 0x73]; 
0x00112227: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x49], cl; stc; call dword ptr [eax - 0x18]; 
0x0017ef9b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x66], ch; stc; call dword ptr [eax - 0x18]; 
0x00027083: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0017df34: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x0009339d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dl, cl; aas; stc; call dword ptr [eax - 0x18]; 
0x0009d1cb: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x78], ebp; stc; call dword ptr [eax - 0x18]; 
0x000c7114: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0014ff6d: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], edx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x0009f03a: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], edi; stc; call dword ptr [eax - 0x18]; 
0x001537ce: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00111cbe: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x0009eb0c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + 0x41], ebx; stc; call dword ptr [eax - 0x18]; 
0x00168c5b: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00094323: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg edx, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x00183a5c: add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, edi; stc; call dword ptr [eax - 0x18]; 
0x0007c9bc: add byte ptr [eax], al; add byte ptr [eax - 0x74f7137d], dl; pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x00056ea5: add byte ptr [eax], al; add byte ptr [eax - 0x75], dl; add cl, byte ptr [ecx - 0x36536b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x000f037c: add byte ptr [eax], al; add byte ptr [eax - 0x7663ba75], dl; jecxz 0xf0309; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0009022e: add byte ptr [eax], al; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000b3e4c: add byte ptr [eax], al; add byte ptr [eax - 0x7699ee77], dl; push ecx; add al, 0x5b; ret; 
0x00090193: add byte ptr [eax], al; add byte ptr [eax - 0x76c58bc0], ch; ret 0xe283; 
0x00187c5c: add byte ptr [eax], al; add byte ptr [eax - 0x76f3137d], dl; ret; 
0x00155116: add byte ptr [eax], al; add byte ptr [eax - 0x7af000c1], al; ret 0; 
0x0018659a: add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x001108c1: add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x00042e32: add byte ptr [eax], al; add byte ptr [eax - 0x7c3642f1], al; int1; pop ds; shr eax, cl; ret; 
0x00178dbc: add byte ptr [eax], al; add byte ptr [eax - 0x7ccd49f1], dl; ret 0x8301; 
0x001495fc: add byte ptr [eax], al; add byte ptr [eax - 0x7cdf387d], dl; ret 0x3901; 
0x000c4381: add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x0013a94c: add byte ptr [eax], al; add byte ptr [eax - 0x8b418], dl; jmp dword ptr [esi - 0x70]; 
0x0013adcc: add byte ptr [eax], al; add byte ptr [eax - 0xd3418], dl; jmp dword ptr [esi - 0x70]; 
0x00025831: add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x0009b2a9: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; pop edi; ret; 
0x00087521: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d461: add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c9e1: add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002a300: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2a32b; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002bb65: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2bb90; push 0x682474ff; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002d1cf: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2d1fa; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002e67c: add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x0004aac4: add byte ptr [eax], al; add byte ptr [eax], 0xf; xchg ebp, eax; ret 0xea83; 
0x0007dac9: add byte ptr [eax], al; add byte ptr [eax], al; add bh, al; add byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x0007dc6d: add byte ptr [eax], al; add byte ptr [eax], al; add bh, al; or byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x00085f8a: add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x00190629: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00080d89: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x00030369: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0008ae5e: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00154cae: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0002300a: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0007dc6c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1a88], 0; ret; 
0x0008d80c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x000a08f2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x3c14], 0; ret; 
0x001542d6: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0007dac8: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a80], 0; ret; 
0x00087e88: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a94], 0; ret; 
0x0008d788: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x000a51b4: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008fd59: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0016e80b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0007dad2: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00080d8b: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x0014fa1c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000dd7bd: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00155005: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a51b5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00153b09: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00090226: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x000a1aa4: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x000a5181: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000db1fd: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0007dc15: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1a8082], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0008d7b5: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi + 0x1ab482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x000dca2f: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x0016e80c: add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0015ea15: add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x001a96fc: add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a8bfc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1a8c50; lea eax, [ecx + 0xa]; ret; 
0x001a8c0c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1a8c50; lea eax, [ecx + 0xb]; ret; 
0x001a8c1c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1a8c50; lea eax, [ecx + 0xd]; ret; 
0x001a8c2c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x001a8c3c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1a8c50; lea eax, [ecx + 0xf]; ret; 
0x001a8b8c: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1a8c50; lea eax, [ecx + 1]; ret; 
0x001a8bdc: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x001a8bec: add byte ptr [eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1a8c50; lea eax, [ecx + 9]; ret; 
0x000984ce: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00079eb9: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003036b: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0002604c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00153af4: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x0009758c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bd7c: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0008ae60: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00062044: add byte ptr [eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0013f99c: add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c1cfc: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c244c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c1d1c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1cec: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c246c: add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1fcc: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fdc: add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x001946cc: add byte ptr [eax], al; add byte ptr [eax], al; call 0x1875fd; add ebx, 0x4534b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00091530: add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00154cb0: add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00095350: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; add esp, 8; pop ebx; ret; 
0x00099f1b: add byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; ret; 
0x000908c2: add byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0009daef: add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x0009840c: add byte ptr [eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x98420; mov eax, 0x16; ret; 
0x0008d62c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017923c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0018722c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008d65c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; ret; 
0x0008c57c: add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea4ec: add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x0002300c: add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x000645f6: add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000704f7: add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x000643fc: add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x000709c0: add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x001a4273: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a49f0; pop ebx; ret; 
0x001a40ac: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a4a06; pop ebx; ret; 
0x001a59eb: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a5c30; pop ebx; ret; 
0x001a70a5: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a72d0; pop ebx; ret; 
0x001a7162: add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a72f0; pop ebx; ret; 
0x001a9ecc: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001aa14c: add byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000a040c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012dd94: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010c01c: add byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x001a96f5: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d9f28: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a7179: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016c479: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00040709: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008c575: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001a89a8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89b8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89c8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89d8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89e8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a8948: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a8958: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a8968: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a8978: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a8988: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8998: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a7999: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a79a9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a79b9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a79c9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a79d9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a7918: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a7929: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a7939: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a7949: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a7959: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a7969: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a7979: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a7989: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a7df9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7de9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7dd9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dc9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7e69: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a7e59: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a7e49: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001aa159: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a7e39: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a7e29: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a7e19: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a7e09: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a7908: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a9008: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a9018: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a9028: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a9038: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8fa8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fb8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fc8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fd8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fe8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ff8: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b3df6: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x001a9e99: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b3e08: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x001a79e9: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d9f38: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f07: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f97: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d9f47: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de7: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1a87: add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000bdd9c: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3dfc: add byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x00090f68: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000799b7: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0007dc6e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1a88], 0; ret; 
0x0008d804: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1ab8], 0; mov dword ptr [eax + 0x1abc], 0; ret; 
0x0008d80e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x000a08f4: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x3c14], 0; ret; 
0x00091391: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x001542d8: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x0008c425: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0010b565: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099e6a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0014e932: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0010b55e: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008c42c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x00090f6f: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0016e0c1: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x00176aec: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003d38a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016e004: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016e09c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e0ac: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0005ae6d: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00182c1c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009d37c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x000b3e5c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b3e2c: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0007daca: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a80], 0; ret; 
0x00087e8a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1a94], 0; ret; 
0x0008d78a: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x00187709: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0005ad50: add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x00189e64: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x000983e4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0012e3ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2ec: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00040566: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00131904: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000952a4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000919da: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009203c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0019062a: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009c704: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000a7554: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; ret; 
0x001489c1: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x0010bc1c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bb5f; call eax; 
0x0010bcd4: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bbb2; call eax; 
0x0010bc7c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bb5f; call eax; 
0x0016c888: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x001aa7fc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00179274: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001a95ac: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001a9efc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c095c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001a84cc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000931dc: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4a8c: add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0012d06c: add byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00091524: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009da45: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bec]; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012d721: add byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000645ec: add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp eax; 
0x001aa83c: add byte ptr [eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3e9c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eac: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e8c: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ebc: add byte ptr [eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0013fcac: add byte ptr [eax], al; add byte ptr [eax], al; movzx eax, dl; ret; 
0x0019cd8c: add byte ptr [eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000c245a: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1fba: add byte ptr [eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008be4b: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0016c46a: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0017a7ab: add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000e7c8b: add byte ptr [eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0009b2ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00071b8a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0009107b: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x0008735a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f5a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000944ca: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9f6a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9f7a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9f8a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9f9a: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9faa: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x00154aab: add byte ptr [eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000b3e6b: add byte ptr [eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a58ea: add byte ptr [eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00042f7a: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x000424db: add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000817a3: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000a51b6: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0008fd5b: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x001a3f2c: add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x00040bbd: add byte ptr [eax], al; add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011f6e4: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000b9bdc: add byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00115231: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000be11c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x001aa08c: add byte ptr [eax], al; add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x0017833d: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0016e80d: add byte ptr [eax], al; add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00174f30: add byte ptr [eax], al; add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x00025527: add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008c784: add byte ptr [eax], al; add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x0008d374: add byte ptr [eax], al; add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0016d44c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00175ccc: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a74c4: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x000a757c: add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0007dc16: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1a80], eax; cmp eax, 1; jg 0x7dc30; ret; 
0x0008d7b6: add byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edx + 0x1ab4], eax; cmp eax, 1; jg 0x8d7d0; ret; 
0x000e872c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00043224: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a4d6c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000c210c: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0003d390: add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013494c: add byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00198b1d: add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x000944a5: add byte ptr [eax], al; add byte ptr [eax], dl; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x0005ae29: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x001a49da: add byte ptr [eax], al; add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x00180482: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000efec0: add byte ptr [eax], al; add byte ptr [ebp + 0x12], dh; add esp, 0x1c; ret; 
0x00175f3f: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0005f706: add byte ptr [eax], al; add byte ptr [ebp + 0x13], dh; add esp, 0x78; pop ebx; ret; 
0x00087e33: add byte ptr [eax], al; add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x00175e91: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003d07c: add byte ptr [eax], al; add byte ptr [ebp + 0x16], dh; add esp, 0x98; pop ebx; ret; 
0x0009aa4d: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086193: add byte ptr [eax], al; add byte ptr [ebp + 0x17], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x0018103c: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0011f1b1: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000f11f9: add byte ptr [eax], al; add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000d9d3a: add byte ptr [eax], al; add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x000dc5b8: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x38; pop ebx; ret; 
0x0012012e: add byte ptr [eax], al; add byte ptr [ebp + 0x1b], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00124f1e: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x001797fa: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000a09a6: add byte ptr [eax], al; add byte ptr [ebp + 0x1c], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00190255: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x18; pop ebx; ret; 
0x00091919: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c8c5: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x2c; ret; 
0x0005abd9: add byte ptr [eax], al; add byte ptr [ebp + 0x1d], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x0012f316: add byte ptr [eax], al; add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x0009cd91: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x000def83: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009cb31: add byte ptr [eax], al; add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x00122753: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012f681: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x0012f231: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x001224b1: add byte ptr [eax], al; add byte ptr [ebp + 0x23], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001aed5d: add byte ptr [eax], al; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001a96f6: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x00179236: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008c576: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x001a5916: add byte ptr [eax], al; add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x000622c1: add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0014871f: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x000c656e: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x18; pop ebx; ret; 
0x000deeeb: add byte ptr [eax], al; add byte ptr [ebp + 0x29], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003dbd6: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3dbe9; add esp, 0x9c; ret; 
0x001a72c0: add byte ptr [eax], al; add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x00177a89: add byte ptr [eax], al; add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x0018020f: add byte ptr [eax], al; add byte ptr [ebp + 0x30], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016f36f: add byte ptr [eax], al; add byte ptr [ebp + 0x32], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d391: add byte ptr [eax], al; add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017987e: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x18; pop ebx; ret; 
0x0009ba6a: add byte ptr [eax], al; add byte ptr [ebp + 0x34], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d221: add byte ptr [eax], al; add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x0009c9cb: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017ff88: add byte ptr [eax], al; add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x00146e46: add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x00041eae: add byte ptr [eax], al; add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x000a1102: add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011534d: add byte ptr [eax], al; add byte ptr [ebp + 0x3a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0017969c: add byte ptr [eax], al; add byte ptr [ebp + 0x3b], dh; add esp, 0x18; pop ebx; ret; 
0x00179912: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; add esp, 0x18; pop ebx; ret; 
0x001a5bee: add byte ptr [eax], al; add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x000df28a: add byte ptr [eax], al; add byte ptr [ebp + 0x3ecc8a], cl; add byte ptr [ebp - 0x1620a36e], cl; call dword ptr [ecx + 0x52]; 
0x0014851f: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000dc234: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x28; pop ebx; ret; 
0x001154e6: add byte ptr [eax], al; add byte ptr [ebp + 0x40], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0008eb5e: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0003cf57: add byte ptr [eax], al; add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001144c9: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00148c44: add byte ptr [eax], al; add byte ptr [ebp + 0x43], dh; add esp, 0x1c; ret; 
0x00184103: add byte ptr [eax], al; add byte ptr [ebp + 0x44], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00142c14: add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00100c1a: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007de2a: add byte ptr [eax], al; add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x001a49a6: add byte ptr [eax], al; add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x001a794a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001aa15a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001a7e2a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001a7dea: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a79ba: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001a7dca: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a79da: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a796a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001a7e1a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001a7e4a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001a7e3a: add byte ptr [eax], al; add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x0014867f: add byte ptr [eax], al; add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x0008e9f0: add byte ptr [eax], al; add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0010c39b: add byte ptr [eax], al; add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0009bb0b: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c637: add byte ptr [eax], al; add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x0010c2f8: add byte ptr [eax], al; add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x0009cf10: add byte ptr [eax], al; add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00175b53: add byte ptr [eax], al; add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0013d0ab: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013d188: add byte ptr [eax], al; add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x0010c490: add byte ptr [eax], al; add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x001141bc: add byte ptr [eax], al; add byte ptr [ebp + 0x56], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x00189775: add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000ea470: add byte ptr [eax], al; add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011eafe: add byte ptr [eax], al; add byte ptr [ebp + 0x58], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x001210ab: add byte ptr [eax], al; add byte ptr [ebp + 0x59], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001485bf: add byte ptr [eax], al; add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x000dc2e9: add byte ptr [eax], al; add byte ptr [ebp + 0x5d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120f9f: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x001792d5: add byte ptr [eax], al; add byte ptr [ebp + 0x5f], dh; add esp, 0x18; pop ebx; ret; 
0x000b3e09: add byte ptr [eax], al; add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0013d1ac: add byte ptr [eax], al; add byte ptr [ebp + 0x69], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00179fa9: add byte ptr [eax], al; add byte ptr [ebp + 0x6e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00172c5a: add byte ptr [eax], al; add byte ptr [ebp + 0x77], dh; add esp, 0x18; pop ebx; ret; 
0x000dca22: add byte ptr [eax], al; add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x00179ead: add byte ptr [eax], al; add byte ptr [ebp + 0x7d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000815d9: add byte ptr [eax], al; add byte ptr [ebp + 0x84b8], cl; add cl, al; cli; or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0003cb63: add byte ptr [eax], al; add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013ae36: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x000e8d25: add byte ptr [eax], al; add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x001ae687: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add bh, dh; ret 0; 
0x001a7787: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a4387: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000a1197: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x000a5597: add byte ptr [eax], al; add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x00121f77: add byte ptr [eax], al; add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x000908bc: add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x001465a3: add byte ptr [eax], al; add byte ptr [ebp + 0xc], dh; add esp, 0x18; pop ebx; ret; 
0x0012281d: add byte ptr [eax], al; add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00115cc4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001203a4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ac4: add byte ptr [eax], al; add byte ptr [ebp + 0xe], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0004368a: add byte ptr [eax], al; add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x0009703a: add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00175e13: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x1c; ret; 
0x000dabeb: add byte ptr [eax], al; add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000a717a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x0016c47a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x0004070a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0008d68a: add byte ptr [eax], al; add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x00025521: add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x000254fe: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x00040cfb: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012b7a6: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x00177249: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x001302c9: add byte ptr [eax], al; add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003c5e9: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x000975fa: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000a04ff: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000dad1b: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x000616c4: add byte ptr [eax], al; add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008f465: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d979: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120f46: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017a970: add byte ptr [eax], al; add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x000df449: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0003dbdd: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0017aa23: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011ec5f: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014c877: add byte ptr [eax], al; add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x0006163d: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003d634: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x00123612: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x000e8b6b: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003b07a: add byte ptr [eax], al; add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003ce6a: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c934: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0005588f: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a6c94: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003cffe: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a5c22: add byte ptr [eax], al; add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0009a74e: add byte ptr [eax], al; add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x00167342: add byte ptr [eax], al; add byte ptr [ebp - 0x137c79c4], cl; or al, 0x83; mov byte ptr [edx*2 + 0x28245c8b], 0xe8; dec eax; ret 0xfff5; 
0x0002bdba: add byte ptr [eax], al; add byte ptr [ebp - 0x157cff8a], cl; add dword ptr [ecx], edi; ret 0xc73; 
0x001581d4: add byte ptr [eax], al; add byte ptr [ebp - 0x23687240], al; sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00024ac0: add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000d8afb: add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001a9e9a: add byte ptr [eax], al; add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x0008628e: add byte ptr [eax], al; add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x00134199: add byte ptr [eax], al; add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00124f88: add byte ptr [eax], al; add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x001a79ea: add byte ptr [eax], al; add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x00151cba: add byte ptr [eax], al; add byte ptr [ebp - 0x41f0ff8a], cl; ret 0xe883; 
0x0012d037: add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002981a: add byte ptr [eax], al; add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x000a7dc9: add byte ptr [eax], al; add byte ptr [ebp - 0x665f380], cl; call dword ptr [eax + 0x68]; 
0x000a78c0: add byte ptr [eax], al; add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x0014ee44: add byte ptr [eax], al; add byte ptr [ebp - 0x6a3797d], cl; call dword ptr [eax - 0x73]; 
0x0014eca3: add byte ptr [eax], al; add byte ptr [ebp - 0x6a4087d], cl; call dword ptr [eax - 0x73]; 
0x0006076d: add byte ptr [eax], al; add byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [ebp + 0x50]; 
0x0011eab1: add byte ptr [eax], al; add byte ptr [ebp - 0x6b5d17a], cl; call dword ptr [eax - 0x18]; 
0x0003a11c: add byte ptr [eax], al; add byte ptr [ebp - 0x6b9f655], cl; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x0009efd1: add byte ptr [eax], al; add byte ptr [ebp - 0x6be8879], cl; call dword ptr [eax - 0x73]; 
0x00096984: add byte ptr [eax], al; add byte ptr [ebp - 0x6bf8c7a], cl; call dword ptr [eax - 0x73]; 
0x00095b6a: add byte ptr [eax], al; add byte ptr [ebp - 0x6bf947a], cl; call dword ptr [eax - 0x73]; 
0x0015c09a: add byte ptr [eax], al; add byte ptr [ebp - 0x6e77f02e], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00116d9d: add byte ptr [eax], al; add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00080d8d: add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001a8989: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001a89d9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001a8979: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001a9039: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001a8fd9: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a7909: add byte ptr [eax], al; add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0010c51a: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c46a: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5e2: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2d2: add byte ptr [eax], al; add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00129ca5: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c05: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c375: add byte ptr [eax], al; add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00103f89: add byte ptr [eax], al; add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x00083898: add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00187703: add byte ptr [eax], al; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0009a8a2: add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e7b9e: add byte ptr [eax], al; add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x000c7679: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret 0xc189; 
0x000920b9: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret 0xe283; 
0x0012f999: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret 0xe2c1; 
0x000acef9: add byte ptr [eax], al; add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x0009e6e5: add byte ptr [eax], al; add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x000b423d: add byte ptr [eax], al; add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x0012ede0: add byte ptr [eax], al; add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x00061cc5: add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x00111109: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00123d59: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6a0367d], cl; call dword ptr [eax - 0x73]; 
0x000ab799: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x0004ea79: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x000536d9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000ffbf9: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x001a3539: add byte ptr [eax], al; add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x00198c29: add byte ptr [eax], al; add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x001a7579: add byte ptr [eax], al; add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x00177c25: add byte ptr [eax], al; add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x00172265: add byte ptr [eax], al; add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x0015ad62: add byte ptr [eax], al; add byte ptr [ebp - 0xe36d379], cl; call dword ptr [eax + 0x6a]; 
0x0015b2a6: add byte ptr [eax], al; add byte ptr [ebp - 0xe36d37a], cl; call dword ptr [eax + 0x6a]; 
0x0010c292: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b98: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x0013dc4d: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009c696: add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0014de38: add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x000707b0: add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0009b4d1: add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000802ed: add byte ptr [eax], al; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x00116582: add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00124330: add byte ptr [eax], al; add byte ptr [ebx + 0x11080], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00109435: add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x0018369d: add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0xcdb8; 
0x000a5f2a: add byte ptr [eax], al; add byte ptr [ebx + 0x1202444], cl; ret 0x728d; 
0x000342f2: add byte ptr [eax], al; add byte ptr [ebx + 0x17880], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032e62: add byte ptr [eax], al; add byte ptr [ebx + 0x17880], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x00176d8d: add byte ptr [eax], al; add byte ptr [ebx + 0x19883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00176e1d: add byte ptr [eax], al; add byte ptr [ebx + 0x1a883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a856d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a958d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a8c2d: add byte ptr [eax], al; add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005b8cd: add byte ptr [eax], al; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00115948: add byte ptr [eax], al; add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000e4b96: add byte ptr [eax], al; add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006f4b7: add byte ptr [eax], al; add byte ptr [ebx + 0x2964247c], cl; ret; 
0x001228ad: add byte ptr [eax], al; add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001a855d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a957d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a8c1d: add byte ptr [eax], al; add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x00094275: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c44: add byte ptr [eax], al; add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x001abef7: add byte ptr [eax], al; add byte ptr [ebx + 0x31102474], cl; fld xword ptr [ecx]; ret 0xe2c1; 
0x0015d630: add byte ptr [eax], al; add byte ptr [ebx + 0x31642454], cl; imul cl; leave; in eax, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0012e372: add byte ptr [eax], al; add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2b2: add byte ptr [eax], al; add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ca613: add byte ptr [eax], al; add byte ptr [ebx + 0x39082444], cl; ret; 
0x00051853: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006f7c2: add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000a9665: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x000713d6: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x000528fb: add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x0012462f: add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x00109932: add byte ptr [eax], al; add byte ptr [ebx + 0x39782444], cl; ret 0x4f0f; 
0x001a854d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a956d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a8c0d: add byte ptr [eax], al; add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0013198d: add byte ptr [eax], al; add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000a3bdf: add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x000880bc: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f87c: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x0007c8bb: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00085052: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x427bf037], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0008546c: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007e4cb: add byte ptr [eax], al; add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x0016ee35: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x16ee65; sbb al, 0x53; call dword ptr [eax]; 
0x001777dc: add byte ptr [eax], al; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17780c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016d44d: add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0004250f: add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x000a6ddb: add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x000d3db0: add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00044138: add byte ptr [eax], al; add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x0013803d: add byte ptr [eax], al; add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001a853d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001a955d: add byte ptr [eax], al; add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x001a8bfd: add byte ptr [eax], al; add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00179275: add byte ptr [eax], al; add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00172197: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174c17: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174247: add byte ptr [eax], al; add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00155bd5: add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001773e6: add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x001755b9: add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x000a0c3d: add byte ptr [eax], al; add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012dc34: add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x00034858: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034828: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347f8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034738: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034798: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346a8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034768: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034708: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034908: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346d8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347c8: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034678: add byte ptr [eax], al; add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008aa8d: add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0007cb85: add byte ptr [eax], al; add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0008aa13: add byte ptr [eax], al; add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x001769e0: add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x000884c9: add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000a438d: add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x001a852d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001a954d: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001a8bed: add byte ptr [eax], al; add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007d1b5: add byte ptr [eax], al; add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0002604d: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000e7dba: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0003dec8: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000a0400: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0011edce: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x0016cefb: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0016d027: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x000d4aa2: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0010e687: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x0010e79e: add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0011ff7b: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000d9da4: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x00103132: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0015048a: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x001398fd: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0002c15f: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x001aae82: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00024bec: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007cfb6: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005b8d5: add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001a95ad: add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x00131e3d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00153af5: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00144f0d: add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003cf5f: add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x000fba86: add byte ptr [eax], al; add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000435ba: add byte ptr [eax], al; add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008d194: add byte ptr [eax], al; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0016c889: add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001a851d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001a953d: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001a8bdd: add byte ptr [eax], al; add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x001464d4: add byte ptr [eax], al; add byte ptr [ebx + 0x7422373c], al; ret; 
0x000fb72f: add byte ptr [eax], al; add byte ptr [ebx + 0x7426113c], al; or bh, byte ptr [eax - 1]; ret; 
0x00134fbf: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x0016c7be: add byte ptr [eax], al; add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000a08a1: add byte ptr [eax], al; add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0009a149: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a259: add byte ptr [eax], al; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x00090228: add byte ptr [eax], al; add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0012d06d: add byte ptr [eax], al; add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0005af96: add byte ptr [eax], al; add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x000348db: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003489b: add byte ptr [eax], al; add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0012374d: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1237a0; call eax; 
0x00123891: add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x123938; call eax; 
0x0012d14c: add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00121d2f: add byte ptr [eax], al; add byte ptr [ebx + 0xa0bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009115e: add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x001149b4: add byte ptr [eax], al; add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x001149bb: add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a857d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a959d: add byte ptr [eax], al; add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009840d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001a8c3d: add byte ptr [eax], al; add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00114cdc: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114c6d: add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0012c190: add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e7b8d: add byte ptr [eax], al; add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00175ab9: add byte ptr [eax], al; add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00130446: add byte ptr [eax], al; add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010a793: add byte ptr [eax], al; add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x0010d3ed: add byte ptr [eax], al; add byte ptr [ebx + 0xf142444], cl; xchg esp, eax; ret 0xd789; 
0x000fb4cf: add byte ptr [eax], al; add byte ptr [ebx + 0xf26033c], al; test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x0005fd35: add byte ptr [eax], al; add byte ptr [ebx + 0xf282474], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x001893b5: add byte ptr [eax], al; add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x00093c3f: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d6d3: add byte ptr [eax], al; add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0019048c: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x0013093e: add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000ea8fd: add byte ptr [eax], al; add byte ptr [ebx - 0x1097f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x00175756: add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00189351: add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0016ca00: add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0010d6df: add byte ptr [eax], al; add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x001afde7: add byte ptr [eax], al; add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x001add1a: add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0015b554: add byte ptr [eax], al; add byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffc; 
0x000a119d: add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00087fcd: add byte ptr [eax], al; add byte ptr [ebx - 0x17afe714], al; xchg dword ptr [ebx], edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00085154: add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x0011870d: add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; xchg dword ptr [esi - 0x3b7c0006], ebp; adc byte ptr [ecx], bh; ret; 
0x00175e37: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000117; ret; 
0x00176c3a: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; mov edx, 0x81000109; ret; 
0x0010bd49: add byte ptr [eax], al; add byte ptr [ebx - 0x18], dl; stosd dword ptr es:[edi], eax; mov eax, 0xc3810007; ret 0x1310; 
0x000c385e: add byte ptr [eax], al; add byte ptr [ebx - 0x1c9b7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0012264c: add byte ptr [eax], al; add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x00094d79: add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x0017946d: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x001256bb: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00153189: add byte ptr [eax], al; add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x001086c2: add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000d814d: add byte ptr [eax], al; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0005770d: add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0005897a: add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000d61bd: add byte ptr [eax], al; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x000571bd: add byte ptr [eax], al; add byte ptr [ebx - 0x36337b], cl; inc dword ptr [eax - 0x7af09a07]; add dword ptr [eax + eax], edx; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000575ad: add byte ptr [eax], al; add byte ptr [ebx - 0x363743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x000d7fe0: add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36334b]; call dword ptr [edi - 1]; 
0x00070a30: add byte ptr [eax], al; add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x000711f0: add byte ptr [eax], al; add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0005362f: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000260f3: add byte ptr [eax], al; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0005c67d: add byte ptr [eax], al; add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x0008f27b: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8f290; ret; 
0x0010bc7d: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bb5f; call eax; 
0x0010bc1d: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bb5f; call eax; 
0x0010bcd5: add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bbb2; call eax; 
0x00062045: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00040d3c: add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00169cde: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0c7f4], cl; ret 0x44f6; 
0x00140018: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x0016ae4e: add byte ptr [eax], al; add byte ptr [ebx - 0x41f0e7f4], cl; ret 0x44f6; 
0x000f2f7d: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000f2cdb: add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x0003cd02: add byte ptr [eax], al; add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000606df: add byte ptr [eax], al; add byte ptr [ebx - 0x4713746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00061a25: add byte ptr [eax], al; add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x00140695: add byte ptr [eax], al; add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x0013179d: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000756fd: add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000733ed: add byte ptr [eax], al; add byte ptr [ebx - 0x53b73], cl; jmp dword ptr [ebp - 0x5f]; 
0x001814f2: add byte ptr [eax], al; add byte ptr [ebx - 0x5472f714], al; mov cl, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x000696e0: add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x000699fd: add byte ptr [eax], al; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000f198a: add byte ptr [eax], al; add byte ptr [ebx - 0x5b37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f8bca: add byte ptr [eax], al; add byte ptr [ebx - 0x5c37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x0009930f: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000986f9: add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001810b2: add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x0004992b: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000ca02e: add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0018150d: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x00030184: add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x001607f4: add byte ptr [eax], al; add byte ptr [ebx - 0x6e72f714], al; cwde; pushal; stc; call dword ptr [edx + 0x50]; 
0x0007c430: add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00177825: add byte ptr [eax], al; add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000a1642: add byte ptr [eax], al; add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x00062b75: add byte ptr [eax], al; add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x0006eb5d: add byte ptr [eax], al; add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x6eb62; call dword ptr [eax - 0x73]; 
0x000547bd: add byte ptr [eax], al; add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000491b3: add byte ptr [eax], al; add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001a8b8d: add byte ptr [eax], al; add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0012d722: add byte ptr [eax], al; add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000d0664: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c9ce4: add byte ptr [eax], al; add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0013038e: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x001903fc: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013087c: add byte ptr [eax], al; add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012d0d2: add byte ptr [eax], al; add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x00061342: add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000500f4: add byte ptr [eax], al; add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x00105bd8: add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x001b2992: add byte ptr [eax], al; add byte ptr [ebx - 0x76d3dbbc], cl; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x0002c4c2: add byte ptr [eax], al; add byte ptr [ebx - 0x76dbdb84], cl; ret 0xfa29; 
0x0013e496: add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0009a195: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00143394: add byte ptr [eax], al; add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0014f5bd: add byte ptr [eax], al; add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x001b299d: add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x000b1d6d: add byte ptr [eax], al; add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x0017a550: add byte ptr [eax], al; add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000fd91b: add byte ptr [eax], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000405f3: add byte ptr [eax], al; add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x00175ad6: add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; into; stc; call dword ptr [eax - 0x73]; 
0x000eb805: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00030b9d: add byte ptr [eax], al; add byte ptr [ebx - 0x7872f314], al; mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0012a525: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; in al, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0016cfa5: add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; ret; 
0x00167513: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; test dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x00039ed2: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; aad 0x2e; stc; call dword ptr [eax + 0x53]; 
0x0013fdd5: add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; sub ecx, edi; call dword ptr [eax + 0x53]; 
0x001552d8: add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0017a999: add byte ptr [eax], al; add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0010d28c: add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x001555e4: add byte ptr [eax], al; add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x0017f201: add byte ptr [eax], al; add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x0004aa78: add byte ptr [eax], al; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], esi; ret 0xfff9; 
0x00114ed1: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0f107], al; ret; 
0x001a9650: add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000a6f84: add byte ptr [eax], al; add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000eaba8: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000eacc8: add byte ptr [eax], al; add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x0011bd4d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; das; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000ed975: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000dd33d: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; clc; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x000301a2: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x000a24ac: add byte ptr [eax], al; add byte ptr [ebx - 0x7c72fb14], al; pop esi; inc edx; stc; call dword ptr [eax + 0x56]; 
0x000500ff: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000d066f: add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000491bd: add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9cef: add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0002d455: add byte ptr [eax], al; add byte ptr [ebx - 0x7ccbdbbc], cl; ret 0xc704; 
0x0010f33d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0014da65: add byte ptr [eax], al; add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001ab6af: add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x0015a31d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdb8c], cl; ret 0x8301; 
0x001670a4: add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0011124d: add byte ptr [eax], al; add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x0005c4c2: add byte ptr [eax], al; add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x0005c1fd: add byte ptr [eax], al; add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0017c18f: add byte ptr [eax], al; add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007c932: add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7c944; push esi; call dword ptr [ebx + 0x1c]; 
0x0007ee7a: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a73f0: add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa741e; call eax; 
0x00024e9d: add byte ptr [eax], al; add byte ptr [ebx - 0xaafb14], al; je 0x24ecb; inc eax; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x0007eb51: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7eb3f; push esi; call dword ptr [eax + 0x2c]; 
0x0007ebe2: add byte ptr [eax], al; add byte ptr [ebx - 0xacfb14], al; jne 0x7ebd0; push esi; call dword ptr [eax + 0x2c]; 
0x000a757d: add byte ptr [eax], al; add byte ptr [ebx - 0xaff714], al; jae 0xa75ab; call edx; 
0x00142d35: add byte ptr [eax], al; add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000acca3: add byte ptr [eax], al; add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00129978: add byte ptr [eax], al; add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00173f44: add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008d375: add byte ptr [eax], al; add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x001b1e8b: add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0013044b: add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124eec: add byte ptr [eax], al; add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001210ca: add byte ptr [eax], al; add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x00115759: add byte ptr [eax], al; add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000a24cf: add byte ptr [eax], al; add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x000fb5b4: add byte ptr [eax], al; add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xfb620; ret; 
0x000c8e32: add byte ptr [eax], al; add byte ptr [ecx + 0x24448bc2], cl; and byte ptr [ecx], bh; ror byte ptr [edi], 1; mov cs, word ptr [edi - 0x76ffffeb]; ret; 
0x000652a1: add byte ptr [eax], al; add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0012ed59: add byte ptr [eax], al; add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x000ea406: add byte ptr [eax], al; add byte ptr [ecx + 0x31282474], cl; not byte ptr [ebp - 0x18]; fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00178f67: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x2a; cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; call ecx; 
0x00178e87: add byte ptr [eax], al; add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0xa; cmpsd dword ptr [esi], dword ptr es:[edi]; hlt; call ecx; 
0x00175e4c: add byte ptr [eax], al; add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x000b3e5d: add byte ptr [eax], al; add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x000626a4: add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006e564: add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x00129575: add byte ptr [eax], al; add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x0009129a: add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x00069b2e: add byte ptr [eax], al; add byte ptr [ecx + 0x40f63914], cl; jmp dword ptr [eax]; 
0x00108b5f: add byte ptr [eax], al; add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x0005ae6e: add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000278bf: add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x0007c743: add byte ptr [eax], al; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00121d35: add byte ptr [eax], al; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0007c580: add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000bb21d: add byte ptr [eax], al; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x0007c7d0: add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00093067: add byte ptr [eax], al; add byte ptr [ecx + 0x74888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x0012ccc6: add byte ptr [eax], al; add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x0012c8af: add byte ptr [eax], al; add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x000985a1: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008fbcb: add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000903c1: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00093223: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00184783: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009863e: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903f0: add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960cb: add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000a1aa6: add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x0003b8cb: add byte ptr [eax], al; add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x0007c73d: add byte ptr [eax], al; add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00175c49: add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000ea46b: add byte ptr [eax], al; add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00098032: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00189edc: add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097b27: add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000977ee: add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000544a2: add byte ptr [eax], al; add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00173903: add byte ptr [eax], al; add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x001ac7d9: add byte ptr [eax], al; add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x00095e02: add byte ptr [eax], al; add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x000986ec: add byte ptr [eax], al; add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00058e15: add byte ptr [eax], al; add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x363763]; call dword ptr [eax - 0x73]; 
0x00059684: add byte ptr [eax], al; add byte ptr [ecx - 0x362773], cl; dec dword ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x000d7d19: add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d870a: add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x00058b15: add byte ptr [eax], al; add byte ptr [ecx - 0x36336b], cl; call dword ptr [eax - 0x75]; 
0x0017a47b: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0017a43b: add byte ptr [eax], al; add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x00155292: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0005ac83: add byte ptr [eax], al; add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x00099823: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x00091392: add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0003da22: add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130943: add byte ptr [eax], al; add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x13094d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000754cf: add byte ptr [eax], al; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0006a679: add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x0008f192: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8f19c; add byte ptr [eax], al; ret; 
0x0008f1c9: add byte ptr [eax], al; add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8f1d3; add byte ptr [eax], al; ret; 
0x0002f83c: add byte ptr [eax], al; add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x001690d4: add byte ptr [eax], al; add byte ptr [ecx - 0x72a7dbbc], cl; cmp esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0004f14d: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501c0: add byte ptr [eax], al; add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x0003fa79: add byte ptr [eax], al; add byte ptr [ecx - 0x72bbdbbc], cl; test esp, edi; sub eax, esp; call dword ptr [eax - 0x73]; 
0x00027b84: add byte ptr [eax], al; add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x00187e6b: add byte ptr [eax], al; add byte ptr [ecx - 0x72cfdbbc], cl; jl 0x187e99; xor byte ptr [edi - 0x18], dl; jl 0x187e6b; jmp dword ptr [ebp - 0x75]; 
0x00049273: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481a4: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004b660: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6dc: add byte ptr [eax], al; add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x0003f829: add byte ptr [eax], al; add byte ptr [ecx - 0x72d7dbbc], cl; and dword ptr [edx], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x0005e1ef: add byte ptr [eax], al; add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0012c2a8: add byte ptr [eax], al; add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008f188: add byte ptr [eax], al; add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0012de4f: add byte ptr [eax], al; add byte ptr [ecx - 0x74c3db8c], cl; je 0x12de7d; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00150b0c: add byte ptr [eax], al; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x000e9225: add byte ptr [eax], al; add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x00122789: add byte ptr [eax], al; add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x000a8a3a: add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0008b166: add byte ptr [eax], al; add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x000db8c2: add byte ptr [eax], al; add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x000726c6: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cfdcf: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000d0760: add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a26ba: add byte ptr [eax], al; add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x0016cdd6: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009df46: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c8c67: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000ccf71: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000cc5ad: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x000c9dd4: add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x0009bc25: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x0004b66b: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e7: add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x00173456: add byte ptr [eax], al; add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x000a559d: add byte ptr [eax], al; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x000a15e5: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x00041a1e: add byte ptr [eax], al; add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x00094728: add byte ptr [eax], al; add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000ccbb6: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x0017158f: add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00131491: add byte ptr [eax], al; add byte ptr [ecx - 0x78721bbb], cl; add dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x001248a9: add byte ptr [eax], al; add byte ptr [ecx - 0x79721bbb], cl; les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x0016723d: add byte ptr [eax], al; add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x000298e5: add byte ptr [eax], al; add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x000e033d: add byte ptr [eax], al; add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00186fd8: add byte ptr [eax], al; add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x001708d9: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x00185e7d: add byte ptr [eax], al; add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8d01; 
0x0016c869: add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x000cf02a: add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c8668: add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00040bbe: add byte ptr [eax], al; add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00142887: add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010dc64: add byte ptr [eax], al; add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000973f9: add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x0017e9e4: add byte ptr [eax], al; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d4de5: add byte ptr [eax], al; add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x0003f1ef: add byte ptr [eax], al; add byte ptr [ecx - 0xffc2ac], cl; jae 0x3f1fd; call eax; 
0x000c3369: add byte ptr [eax], al; add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x000c35a6: add byte ptr [eax], al; add byte ptr [ecx], ah; ret 0x2474; 
0x00091215: add byte ptr [eax], al; add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x000c1771: add byte ptr [eax], al; add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013e59a: add byte ptr [eax], al; add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a1c1a: add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x00185671: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x21eb; 
0x00101f46: add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x0006358b: add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x000cd361: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000ca23f: add byte ptr [eax], al; add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x001b1e08: add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x0015b81f: add byte ptr [eax], al; add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x0011b959: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x00027af8: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x420f; 
0x0004d4ee: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x000dcc03: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x470f; 
0x00122fab: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00099a74: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6574; 
0x00099318: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x6974; 
0x0009898b: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x7e74; 
0x001431eb: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00098702: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00097e37: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x850f; 
0x00150bfb: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xa875; 
0x000a9e96: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a9f53: add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0003e86c: add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001323d8: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x00153c4d: add byte ptr [eax], al; add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010e278: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0004a2fc: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0013ebca: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x00159abc: add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000db1ff: add byte ptr [eax], al; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fd1d0: add byte ptr [eax], al; add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x00100f11: add byte ptr [eax], al; add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x000d4313: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000570f9: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x000e351e: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000e6b73: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e4455: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000a36ca: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x48d; 
0x0004d399: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000e4efb: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000d3124: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x000e1f08: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x0004a279: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f627: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd089; 
0x000dc791: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000adbb7: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd301; 
0x000aeb95: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd601; 
0x000aae77: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd701; 
0x00025263: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e7499: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000dfb74: add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x000306c6: add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x000e383b: add byte ptr [eax], al; add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x001ade85: add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00099c1b: add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000931d3: add byte ptr [eax], al; add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000901b7: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x00098643: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0009147a: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903f5: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00189ee1: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091ba1: add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095716: add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a62c1: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00094ea4: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a6398: add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00137fd5: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ebp - 0x74698a0a], cl; cmp dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x0004aabd: add byte ptr [eax], al; add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x00094f07: add byte ptr [eax], al; add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00090e13: add byte ptr [eax], al; add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0010d6d8: add byte ptr [eax], al; add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00131061: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00097da9: add byte ptr [eax], al; add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0007dc17: add byte ptr [eax], al; add byte ptr [edi + 0x1a8082], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0008d7b7: add byte ptr [eax], al; add byte ptr [edi + 0x1ab482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003f5f6: add byte ptr [eax], al; add byte ptr [edi + 0x1fa8317], al; jg 0x3f6c0; call eax; 
0x000250b1: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00154bc0: add byte ptr [eax], al; add byte ptr [edi + 0x5d], bl; ret; 
0x000b9bdd: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9c24: add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0011f6e5: add byte ptr [eax], al; add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d9d42: add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x001a0d22: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0019e672: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a4d82: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0019ce32: add byte ptr [eax], al; add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a5908: add byte ptr [eax], al; add byte ptr [edi + 3], bh; neg eax; ret; 
0x001a5c33: add byte ptr [eax], al; add byte ptr [edi + 8], bh; neg eax; ret; 
0x000d9d12: add byte ptr [eax], al; add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x000a7124: add byte ptr [eax], al; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x000e4fa5: add byte ptr [eax], al; add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x0005712a: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0x48d; 
0x00144cce: add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret; 
0x0009dbef: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003e878: add byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret; 
0x00104cb9: add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0012797c: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009daf0: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000e8224: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x00091196: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dca31: add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00099f1c: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x00095295: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x000a0cf3: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x0009a800: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x00095351: add byte ptr [eax], al; add byte ptr [edi], cl; inc edi; ret 0xc483; 
0x0013f62d: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0004272d: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x748d; 
0x000daa40: add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x00043736: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000a8e46: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000316bf: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x0017fa39: add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret; 
0x00042e08: add byte ptr [eax], al; add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0010ace2: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0013f095: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0013fcad: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00042d27: add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x000c1924: add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000c1cfd: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000bdd0d: add byte ptr [eax], al; add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x00042dba: add byte ptr [eax], al; add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000c566b: add byte ptr [eax], al; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x0018511a: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x001850d1: add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x001a47ad: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a40ad: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a5b6a: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x001a4858: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a4678: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a4148: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x001a44a2: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00110ca5: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffff1], esp; jl 0x110cd5; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x001a4274: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x001a437c: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a5ade: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0016d021: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a42f1: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x0011edc8: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010e574: add byte ptr [eax], al; add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x000419df: add byte ptr [eax], al; add byte ptr [edi], cl; test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0010dff1: add byte ptr [eax], al; add byte ptr [edi], cl; test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x0010e681: add byte ptr [eax], al; add byte ptr [edi], cl; test ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x0010e798: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0019e86d: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x001a4f5d: add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; salc; int1; call dword ptr [ebx - 0x18]; 
0x0008c3cd: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00055a31: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00067c8f: add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0004699f: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x38e9; 
0x0007b986: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b970: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x001a574f: add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fb628: add byte ptr [eax], al; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0016c7f7: add byte ptr [eax], al; add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0009880f: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a17: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b58: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bda: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c01: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092174: add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000901be: add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00184788: add byte ptr [eax], al; add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00150485: add byte ptr [eax], al; add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008fc8c: add byte ptr [eax], al; add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000923fa: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097da4: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd5: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009999a: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4d: add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fbd0: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fc3f: add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001318df: add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0008e97d: add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x000c2db0: add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0017833e: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0008a4ed: add byte ptr [eax], al; add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0016e80e: add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00053d7a: add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000b3e9d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3ead: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e8d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ebd: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x001a560d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00190d6d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000c1c0f: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000c1ee8: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1f0d: add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x00094280: add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003cb5e: add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cc01: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093062: add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c245b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1fbb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0018718b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016c46b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000b1f4b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009b2eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x00071b8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000915eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x0008735b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f5b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x000944cb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d9f6b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d9f7b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d9f8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d9f9b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d9fab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017a07b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016ed8b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000912ab: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x000e7bbb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000b648b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b3e7b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x001a58eb: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e9e3b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00042f7b: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x000a25db: add byte ptr [eax], al; add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0013de65: add byte ptr [eax], al; add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x001a75d8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001a9f08: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8f98: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x000d9f48: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x000b3de8: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x000c1a88: add byte ptr [eax], al; add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x0009a14f: add byte ptr [eax], al; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a25f: add byte ptr [eax], al; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x00049dc3: add byte ptr [eax], al; add ch, bl; test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0008f3b9: add byte ptr [eax], al; add cl, al; call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x000a4417: add byte ptr [eax], al; add cl, al; call 0xfda7d32; inc edi; ret 0xc083; 
0x000a45d5: add byte ptr [eax], al; add cl, al; call 0xfda7ef0; inc edi; ret 0xc083; 
0x000a6a17: add byte ptr [eax], al; add cl, al; call 0xfdaa332; inc edi; ret 0x508d; 
0x000815df: add byte ptr [eax], al; add cl, al; cli; or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0007c70a: add byte ptr [eax], al; add cl, al; ret 0x6509; 
0x00024a9c: add byte ptr [eax], al; add cl, al; ret 0x8909; 
0x0012b970: add byte ptr [eax], al; add cl, al; ret 0xf009; 
0x000a31fa: add byte ptr [eax], al; add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x000e78f6: add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x000d06f6: add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x00189426: add byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x001b3779: add byte ptr [eax], al; add cl, ch; jmp esi; 
0x0004a1c2: add byte ptr [eax], al; add cl, ch; mov ebp, 0x8bffffef; jl 0x4a1f1; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0006a210: add byte ptr [eax], al; add cl, ch; ret 0xffd8; 
0x001ad083: add byte ptr [eax], al; add cl, ch; ret 0xffdf; 
0x00039d33: add byte ptr [eax], al; add cl, ch; ret 0xfff8; 
0x0010681e: add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009c228: add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x00049dca: add byte ptr [eax], al; add cl, ch; ret; 
0x00067aaf: add byte ptr [eax], al; add cl, ch; sal esi, 0xff; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x00095c48: add byte ptr [eax], al; add cl, ch; sbb eax, 0x8dffffff; xchg al, dl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0018baf4: add byte ptr [eax], al; add cl, ch; sub bh, 0xff; dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006b814: add byte ptr [eax], al; add cl, ch; test dl, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x00043c60: add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x000fe150: add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001a8906: add byte ptr [eax], al; add dh, dh; les eax, ptr [edx]; jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a892f: add byte ptr [eax], al; add dh, dh; les esp, ptr [eax]; jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x001b079d: add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x0007c30d: add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x001a6d6b: add byte ptr [eax], al; add dh, dh; ret 0x7501; 
0x000322b3: add byte ptr [eax], al; add dh, dh; ret 0x7503; 
0x000bc0ad: add byte ptr [eax], al; add dh, dh; ret 0x7510; 
0x00100fd2: add byte ptr [eax], al; add dh, dh; ret 0x7540; 
0x0005e6a2: add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x0009b461: add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000419e5: add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x001a944c: add byte ptr [eax], al; add dh, dh; ret 0xf04; 
0x0014e281: add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x001a9ddf: add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001a934d: add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001a9476: add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x0010112e: add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0005e1fa: add byte ptr [eax], al; add dh, dh; ret; 
0x000903be: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000902c3: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a0d1f: add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a9c0b: add byte ptr [eax], al; add dword ptr [ebp - 0xabaf36e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0007db76: add byte ptr [eax], al; add dword ptr [ebx + 0x1a84], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008d716: add byte ptr [eax], al; add dword ptr [ebx + 0x1ab8], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0007db7c: add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00091216: add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x00153304: add byte ptr [eax], al; add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x00174c18: add byte ptr [eax], al; add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174248: add byte ptr [eax], al; add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017158b: add byte ptr [eax], al; add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a9390: add byte ptr [eax], al; add eax, 0xb; pop edi; ret; 
0x001a93b9: add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x001a96fe: add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a9343: add byte ptr [eax], al; add eax, 3; pop edi; ret; 
0x001a9369: add byte ptr [eax], al; add eax, 7; pop edi; ret; 
0x00172198: add byte ptr [eax], al; add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00131b9d: add byte ptr [eax], al; add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00025522: add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000c1772: add byte ptr [eax], al; add eax, edi; add eax, ecx; pop edi; ret; 
0x000903fd: add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001769e1: add byte ptr [eax], al; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x001a8a2c: add byte ptr [eax], al; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x001a8bfe: add byte ptr [eax], al; add edx, 0xa; jl 0x1a8c50; lea eax, [ecx + 0xa]; ret; 
0x001a8c0e: add byte ptr [eax], al; add edx, 0xb; jl 0x1a8c50; lea eax, [ecx + 0xb]; ret; 
0x001a8b79: add byte ptr [eax], al; add edx, 0xc; jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8c1e: add byte ptr [eax], al; add edx, 0xd; jl 0x1a8c50; lea eax, [ecx + 0xd]; ret; 
0x001a8c2e: add byte ptr [eax], al; add edx, 0xe; jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x001a8c3e: add byte ptr [eax], al; add edx, 0xf; jl 0x1a8c50; lea eax, [ecx + 0xf]; ret; 
0x001a8b8e: add byte ptr [eax], al; add edx, 1; jl 0x1a8c50; lea eax, [ecx + 1]; ret; 
0x00146377: add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x001a8b16: add byte ptr [eax], al; add edx, 4; jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x001a8bde: add byte ptr [eax], al; add edx, 7; jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x001a8b4f: add byte ptr [eax], al; add edx, 8; jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8bee: add byte ptr [eax], al; add edx, 9; jl 0x1a8c50; lea eax, [ecx + 9]; ret; 
0x00040b6b: add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000260f4: add byte ptr [eax], al; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000984d0: add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000e79f4: add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012374e: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x1237a0; call eax; 
0x00123892: add byte ptr [eax], al; add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x123938; call eax; 
0x00025812: add byte ptr [eax], al; add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00085a3a: add byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00144f0e: add byte ptr [eax], al; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x000c50ef: add byte ptr [eax], al; add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x0017946e: add byte ptr [eax], al; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00131e3e: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x0003dec9: add byte ptr [eax], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00042510: add byte ptr [eax], al; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0012264d: add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0003036d: add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00033688: add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009189a: add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x0016014b: add byte ptr [eax], al; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0008426f: add byte ptr [eax], al; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0011edcf: add byte ptr [eax], al; add esp, 0x24; pop ebx; pop esi; ret; 
0x00122ef2: add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000351fc: add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0016cefc: add byte ptr [eax], al; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0016d028: add byte ptr [eax], al; add esp, 0x34; pop ebx; pop esi; ret; 
0x000c39d5: add byte ptr [eax], al; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0010e688: add byte ptr [eax], al; add esp, 0x54; pop ebx; pop esi; ret; 
0x0010e79f: add byte ptr [eax], al; add esp, 0x64; pop ebx; pop esi; ret; 
0x0010e57b: add byte ptr [eax], al; add esp, 0x68; pop ebx; ret; 
0x000916c5: add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x00175c4a: add byte ptr [eax], al; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0013706e: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013756b: add byte ptr [eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x00135d0f: add byte ptr [eax], al; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00135ae3: add byte ptr [eax], al; add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005b7ba: add byte ptr [eax], al; add esp, 0xc; ret; 
0x00054f99: add byte ptr [eax], al; add esp, 4; jmp eax; 
0x0009b9f2: add byte ptr [eax], al; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005b8ce: add byte ptr [eax], al; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x00094d7a: add byte ptr [eax], al; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015318a: add byte ptr [eax], al; add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x000acca4: add byte ptr [eax], al; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0002604e: add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00153af6: add byte ptr [eax], al; add esp, 4; pop esi; pop edi; ret; 
0x00040d3d: add byte ptr [eax], al; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009758e: add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bd7e: add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x001256bc: add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003c343: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00062046: add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00132047: add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0009a99f: add byte ptr [eax], al; and eax, 0x39; cmp eax, 8; je 0x9a9aa; ret; 
0x001a7eb8: add byte ptr [eax], al; and eax, 0xf; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7ee9: add byte ptr [eax], al; and eax, 0xff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f20: add byte ptr [eax], al; and eax, 0xfff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f59: add byte ptr [eax], al; and eax, 0xffff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0012789c: add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x0013f99e: add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x001a7f6e: add byte ptr [eax], al; and eax, 1; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00034b8d: add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000c1cfe: add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c244e: add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c1d1e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1cee: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c246e: add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c102e: add byte ptr [eax], al; bsf edx, edx; call 0x187611; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd2e: add byte ptr [eax], al; bsf edx, edx; call 0x187611; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c18a3: add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c1fce: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fde: add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00042d58: add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x0009be35: add byte ptr [eax], al; call 0x10bf90; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0016cd46: add byte ptr [eax], al; call 0x124450; mov dword ptr [ebx + 0xa68c], eax; add esp, 8; pop ebx; ret; 
0x00030330: add byte ptr [eax], al; call 0x12b5e0; add esp, 0x1c; ret; 
0x001946ce: add byte ptr [eax], al; call 0x1875fd; add ebx, 0x4534b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926ce: add byte ptr [eax], al; call 0x1875fd; add ebx, 0x470cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019133e: add byte ptr [eax], al; call 0x1875fd; add ebx, 0x4801b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190e64: add byte ptr [eax], al; call 0x1875fd; add ebx, 0x482f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000c109e: add byte ptr [eax], al; call 0x187611; add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb0fe: add byte ptr [eax], al; call 0x187611; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9abe: add byte ptr [eax], al; call 0x187611; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a80ef: add byte ptr [eax], al; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000c396b: add byte ptr [eax], al; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x000388f3: add byte ptr [eax], al; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00127de6: add byte ptr [eax], al; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x001600e6: add byte ptr [eax], al; call 0x23198; mov dword ptr [ebx + 0xa280], eax; add esp, 0x18; pop ebx; ret; 
0x00053740: add byte ptr [eax], al; call 0x53700; jmp eax; 
0x0009f75b: add byte ptr [eax], al; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x0016d921: add byte ptr [eax], al; call dword ptr [eax + 0x10]; 
0x00190c7d: add byte ptr [eax], al; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x000a72d8: add byte ptr [eax], al; call dword ptr [eax]; 
0x00023330: add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d252: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0003cd0c: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x000a034f: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x0010c293: add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003cccd: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b99: add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000eaf40: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0013dc4e: add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009c697: add byte ptr [eax], al; call dword ptr gs:[0x10]; ret; 
0x0003f602: add byte ptr [eax], al; call eax; 
0x001877ef: add byte ptr [eax], al; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0010b990: add byte ptr [eax], al; call ecx; 
0x00154cb2: add byte ptr [eax], al; call esi; 
0x00095352: add byte ptr [eax], al; cmova eax, edx; add esp, 8; pop ebx; ret; 
0x000a0cf4: add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x00099f1d: add byte ptr [eax], al; cmova eax, edx; ret; 
0x000e8f47: add byte ptr [eax], al; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013f62e: add byte ptr [eax], al; cmovb eax, edx; ret; 
0x0009a972: add byte ptr [eax], al; cmove eax, ecx; ret; 
0x00043737: add byte ptr [eax], al; cmove eax, edx; ret; 
0x00091197: add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000794ef: add byte ptr [eax], al; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012797d: add byte ptr [eax], al; cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0014a6e8: add byte ptr [eax], al; cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000b7d01: add byte ptr [eax], al; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x001a96aa: add byte ptr [eax], al; cmp byte ptr [edx + 0xb], 0; je 0x1a9732; mov eax, 0xc; pop edi; ret; 
0x001a4142: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a7218: add byte ptr [eax], al; cmp ch, bh; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x000fb4d0: add byte ptr [eax], al; cmp dword ptr [ebx + eax], 0x26; jne 0xfb570; mov eax, edx; pop ebx; ret; 
0x00024abb: add byte ptr [eax], al; cmp dword ptr [ecx + 0x94], edx; jne 0x24a92; ret; 
0x000fb5d0: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb730: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000fba3b: add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x000e7b8e: add byte ptr [eax], al; cmp eax, -0x26; jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010c1f7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x10c208; pop ebx; pop esi; ret; 
0x001131f5: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x113208; pop ebx; pop esi; ret; 
0x00114582: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145f2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147d2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x00115c48: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x115c58; pop ebx; pop esi; ret; 
0x0011ece2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f202: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f620: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ff27: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ff38; pop ebx; pop esi; ret; 
0x0011ffae: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001202c8: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1202d8; pop ebx; pop esi; ret; 
0x001206c2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bce: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fce: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x00121587: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121598; pop ebx; pop esi; ret; 
0x00121837: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x121848; pop ebx; pop esi; ret; 
0x001221d2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x00122222: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f52: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x00123fa7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x123fb8; pop ebx; pop esi; ret; 
0x001274e7: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x1274f8; pop ebx; pop esi; ret; 
0x00129419: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x129428; pop ebx; pop esi; ret; 
0x0012aa02: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012aa57: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12aa68; pop ebx; pop esi; ret; 
0x0012cd8e: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0e2: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d259: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d362: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012db37: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12db48; pop ebx; pop esi; ret; 
0x0012e212: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e422: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0018df18: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x18df28; pop ebx; pop esi; ret; 
0x0003cd13: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x00040767: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x40778; pop ebx; pop esi; ret; 
0x00061352: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5ae: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x0009fc37: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0x9fc48; pop ebx; pop esi; ret; 
0x000a0356: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc370: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x000e9101: add byte ptr [eax], al; cmp eax, 0xfffff000; ja 0xe9110; pop ebx; pop esi; ret; 
0x0010c29a: add byte ptr [eax], al; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0010ba36: add byte ptr [eax], al; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x00129fc6: add byte ptr [eax], al; cmp eax, 1; jg 0x129fd8; add esp, 8; pop ebx; ret; 
0x00154f5c: add byte ptr [eax], al; cmp eax, 1; jg 0x154f88; add esp, 8; pop ebx; ret; 
0x0017ffff: add byte ptr [eax], al; cmp eax, 1; jg 0x180028; add esp, 8; pop ebx; ret; 
0x0018017f: add byte ptr [eax], al; cmp eax, 1; jg 0x1801a8; add esp, 8; pop ebx; ret; 
0x0007dc1e: add byte ptr [eax], al; cmp eax, 1; jg 0x7dc30; ret; 
0x0008d7be: add byte ptr [eax], al; cmp eax, 1; jg 0x8d7d0; ret; 
0x000dd575: add byte ptr [eax], al; cmp eax, 1; jg 0xdd5a0; add esp, 8; pop ebx; ret; 
0x0012bb5a: add byte ptr [eax], al; cmp ecx, 1; jg 0x12bb90; add esp, 8; pop ebx; ret; 
0x0012d2b3: add byte ptr [eax], al; cmp edi, 1; je 0x12d2f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012e373: add byte ptr [eax], al; cmp edi, 1; je 0x12e3b0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0009129b: add byte ptr [eax], al; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x000fb5b5: add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x0009840e: add byte ptr [eax], al; cmp edx, 1; je 0x98420; mov eax, 0x16; ret; 
0x00061230: add byte ptr [eax], al; cmp edx, 1; jg 0x61268; add esp, 0x18; pop ebx; ret; 
0x0009115f: add byte ptr [eax], al; cmp edx, 2; jbe 0x91170; ret; 
0x001323d9: add byte ptr [eax], al; cmp edx, ecx; jb 0x1323e3; cmp ecx, edx; sbb eax, eax; ret; 
0x00184a95: add byte ptr [eax], al; cmp edx, ecx; jb 0x184a9f; cmp ecx, edx; sbb eax, eax; ret; 
0x00153c4e: add byte ptr [eax], al; cmp edx, ecx; jne 0x153c40; add esp, 8; pop ebx; ret; 
0x00154d25: add byte ptr [eax], al; das; je 0x154d8e; mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154dad: add byte ptr [eax], al; das; je 0x154e16; mov byte ptr [ebx + 0x6f68], 0; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00024f6e: add byte ptr [eax], al; endbr32; call 0x187605; add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x0008d62e: add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017923e: add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0019061e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0018722e: add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008d65e: add byte ptr [eax], al; endbr32; ret; 
0x0008c57e: add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea4ee: add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c276d: add byte ptr [eax], al; inc dword ptr [eax]; je 0xc2774; inc eax; pop edi; ret; 
0x00098448: add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003cac3: add byte ptr [eax], al; int 0x80; 
0x0010e4d4: add byte ptr [eax], al; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0013a189: add byte ptr [eax], al; ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x00187b1c: add byte ptr [eax], al; ja 0x187d20; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00189152: add byte ptr [eax], al; ja 0x189238; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x001892ab: add byte ptr [eax], al; ja 0x1892c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0019ce33: add byte ptr [eax], al; ja 0x19ce39; neg eax; ret; 
0x0019e673: add byte ptr [eax], al; ja 0x19e679; neg eax; pop ebp; ret; 
0x001a0d23: add byte ptr [eax], al; ja 0x1a0d29; neg eax; add esp, 4; pop ebx; ret; 
0x001a3a73: add byte ptr [eax], al; ja 0x1a3a79; neg eax; ret; 
0x001a3d63: add byte ptr [eax], al; ja 0x1a3d69; neg eax; pop ebp; ret; 
0x001a3f23: add byte ptr [eax], al; ja 0x1a3f29; neg eax; ret; 
0x001a4a0a: add byte ptr [eax], al; ja 0x1a4a10; neg eax; ret; 
0x001a4d83: add byte ptr [eax], al; ja 0x1a4d89; neg eax; pop edi; pop ebx; ret; 
0x001a5c7b: add byte ptr [eax], al; ja 0x1a5c81; neg eax; ret; 
0x001a72f4: add byte ptr [eax], al; ja 0x1a72fa; neg eax; ret; 
0x0018735e: add byte ptr [eax], al; ja 0x249d8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007b924: add byte ptr [eax], al; ja 0x7bb90; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007beb1: add byte ptr [eax], al; ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee75: add byte ptr [eax], al; ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000813bf: add byte ptr [eax], al; ja 0x813f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081b91: add byte ptr [eax], al; ja 0x81bc0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00082ce2: add byte ptr [eax], al; ja 0x83070; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008509a: add byte ptr [eax], al; ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00086ace: add byte ptr [eax], al; ja 0x86d80; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00088013: add byte ptr [eax], al; ja 0x88040; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088ba6: add byte ptr [eax], al; ja 0x88cd0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00088d3c: add byte ptr [eax], al; ja 0x88d80; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00089886: add byte ptr [eax], al; ja 0x898f0; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0008bde5: add byte ptr [eax], al; ja 0x8be40; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008be8f: add byte ptr [eax], al; ja 0x8beb8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c187: add byte ptr [eax], al; ja 0x8c238; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008c684: add byte ptr [eax], al; ja 0x8c6c0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000912a1: add byte ptr [eax], al; ja 0x912b0; ret; 
0x0013203f: add byte ptr [eax], al; jae 0x13204e; mov eax, dword ptr [ecx + 0x47f4]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000a0a58: add byte ptr [eax], al; jbe 0xa0a60; ret; 
0x000a0a98: add byte ptr [eax], al; jbe 0xa0aa0; ret; 
0x000fb74c: add byte ptr [eax], al; je 0xfb742; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x001a5909: add byte ptr [eax], al; jg 0x1a5910; neg eax; ret; 
0x001a5c34: add byte ptr [eax], al; jg 0x1a5c40; neg eax; ret; 
0x001a9d34: add byte ptr [eax], al; jg 0x1a9d40; neg eax; ret; 
0x000d9d13: add byte ptr [eax], al; jg 0xd9d20; neg eax; pop edi; pop esi; ret; 
0x000d9d43: add byte ptr [eax], al; jg 0xd9d49; neg eax; ret; 
0x0002300e: add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00023004: add byte ptr [eax], al; jmp dword ptr [ebx + 8]; 
0x00025025: add byte ptr [eax], al; jmp eax; 
0x000704f9: add byte ptr [eax], al; jmp ebx; 
0x000643fe: add byte ptr [eax], al; jmp ecx; 
0x000707ff: add byte ptr [eax], al; jmp edx; 
0x0010c2f9: add byte ptr [eax], al; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c39c: add byte ptr [eax], al; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c491: add byte ptr [eax], al; jne 0x10c4e9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c541: add byte ptr [eax], al; jne 0x10c599; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c609: add byte ptr [eax], al; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e575: add byte ptr [eax], al; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x0010e682: add byte ptr [eax], al; jne 0x10e74b; add esp, 0x54; pop ebx; pop esi; ret; 
0x0010e799: add byte ptr [eax], al; jne 0x10e863; add esp, 0x64; pop ebx; pop esi; ret; 
0x0011346a: add byte ptr [eax], al; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x001141bd: add byte ptr [eax], al; jne 0x114217; add esp, 0x34; pop ebx; pop esi; ret; 
0x001144ca: add byte ptr [eax], al; jne 0x114511; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011534e: add byte ptr [eax], al; jne 0x11538c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001154e7: add byte ptr [eax], al; jne 0x11552b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115ac5: add byte ptr [eax], al; jne 0x115ad7; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115cc5: add byte ptr [eax], al; jne 0x115cd7; add esp, 0x54; pop ebx; pop esi; ret; 
0x0011eaff: add byte ptr [eax], al; jne 0x11eb5b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011ec60: add byte ptr [eax], al; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x0011edc9: add byte ptr [eax], al; jne 0x11ee7b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011ef09: add byte ptr [eax], al; jne 0x11efbb; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f1b2: add byte ptr [eax], al; jne 0x11f1ce; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011febc: add byte ptr [eax], al; jne 0x11fec6; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012012f: add byte ptr [eax], al; jne 0x12014e; add esp, 0x74; pop ebx; pop esi; ret; 
0x00120345: add byte ptr [eax], al; jne 0x120357; add esp, 0x54; pop ebx; pop esi; ret; 
0x001203a5: add byte ptr [eax], al; jne 0x1203b7; add esp, 0x64; pop ebx; pop esi; ret; 
0x00120c94: add byte ptr [eax], al; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d14: add byte ptr [eax], al; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00120f47: add byte ptr [eax], al; jne 0x120f51; add esp, 0x34; pop ebx; pop esi; ret; 
0x001210ac: add byte ptr [eax], al; jne 0x121109; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012115c: add byte ptr [eax], al; jne 0x1211b9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00121f78: add byte ptr [eax], al; jne 0x121f87; add esp, 0x1c; ret; 
0x001224b2: add byte ptr [eax], al; jne 0x1224d9; add esp, 0x54; pop ebx; pop esi; ret; 
0x001225aa: add byte ptr [eax], al; jne 0x1225d1; add esp, 0x54; pop ebx; pop esi; ret; 
0x00122647: add byte ptr [eax], al; jne 0x1226dc; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00122754: add byte ptr [eax], al; jne 0x12277b; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012281e: add byte ptr [eax], al; jne 0x12282f; add esp, 0x54; pop ebx; pop esi; ret; 
0x00123613: add byte ptr [eax], al; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x00124059: add byte ptr [eax], al; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x001240ea: add byte ptr [eax], al; jne 0x1240f4; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012417d: add byte ptr [eax], al; jne 0x124187; add esp, 0x34; pop ebx; pop esi; ret; 
0x00124488: add byte ptr [eax], al; jne 0x124490; add esp, 0x1c; ret; 
0x00124f1f: add byte ptr [eax], al; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125c1b: add byte ptr [eax], al; jne 0x125c23; add esp, 0x1c; ret; 
0x001277ae: add byte ptr [eax], al; jne 0x1277b8; add esp, 0x34; pop ebx; pop esi; ret; 
0x00129b84: add byte ptr [eax], al; jne 0x129bab; add esp, 0x14; pop ebx; pop esi; ret; 
0x00129c2c: add byte ptr [eax], al; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129ccc: add byte ptr [eax], al; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012b7a7: add byte ptr [eax], al; jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc3e: add byte ptr [eax], al; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012bd4b: add byte ptr [eax], al; jne 0x12bd55; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012ce8c: add byte ptr [eax], al; jne 0x12ce96; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012f14b: add byte ptr [eax], al; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1b3: add byte ptr [eax], al; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f232: add byte ptr [eax], al; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2ab: add byte ptr [eax], al; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f317: add byte ptr [eax], al; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f397: add byte ptr [eax], al; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f682: add byte ptr [eax], al; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f783: add byte ptr [eax], al; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7f3: add byte ptr [eax], al; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbdb: add byte ptr [eax], al; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc43: add byte ptr [eax], al; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fccb: add byte ptr [eax], al; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd43: add byte ptr [eax], al; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffb2: add byte ptr [eax], al; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c9: add byte ptr [eax], al; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130137: add byte ptr [eax], al; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301c2: add byte ptr [eax], al; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302ca: add byte ptr [eax], al; jne 0x1302d2; add esp, 0x7c; ret; 
0x00130359: add byte ptr [eax], al; jne 0x130361; add esp, 0x1c; ret; 
0x00137eac: add byte ptr [eax], al; jne 0x137ee0; pop ebx; pop esi; pop edi; ret; 
0x0013ae37: add byte ptr [eax], al; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c087: add byte ptr [eax], al; jne 0x13c095; add esp, 0x2c; ret; 
0x0013d1ad: add byte ptr [eax], al; jne 0x13d21a; add esp, 0x14; pop ebx; pop esi; ret; 
0x001465a4: add byte ptr [eax], al; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465ec: add byte ptr [eax], al; jne 0x1465f4; add esp, 0x1c; ret; 
0x0014663b: add byte ptr [eax], al; jne 0x146643; add esp, 0x1c; ret; 
0x00148520: add byte ptr [eax], al; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485c0: add byte ptr [eax], al; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x00148680: add byte ptr [eax], al; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x00148720: add byte ptr [eax], al; jne 0x14874d; add esp, 0x11c; ret; 
0x00148c45: add byte ptr [eax], al; jne 0x148c8c; add esp, 0x1c; ret; 
0x0014c878: add byte ptr [eax], al; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f28: add byte ptr [eax], al; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x00154936: add byte ptr [eax], al; jne 0x15493e; add esp, 0x1c; ret; 
0x0016cdad: add byte ptr [eax], al; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x0016d022: add byte ptr [eax], al; jne 0x16d0c3; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016d392: add byte ptr [eax], al; jne 0x16d3c9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016f370: add byte ptr [eax], al; jne 0x16f3a6; add esp, 0x14; pop ebx; pop esi; ret; 
0x00172c5b: add byte ptr [eax], al; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e14: add byte ptr [eax], al; jne 0x175e27; add esp, 0x1c; ret; 
0x00175e92: add byte ptr [eax], al; jne 0x175eac; add esp, 0x74; pop ebx; pop edi; ret; 
0x00175f40: add byte ptr [eax], al; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fe0: add byte ptr [eax], al; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x00176324: add byte ptr [eax], al; jne 0x176337; add esp, 0x1c; ret; 
0x001763a7: add byte ptr [eax], al; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x0017724a: add byte ptr [eax], al; jne 0x177252; add esp, 0x4c; ret; 
0x001772ba: add byte ptr [eax], al; jne 0x1772c2; add esp, 0x4c; ret; 
0x0017732a: add byte ptr [eax], al; jne 0x177332; add esp, 0x4c; ret; 
0x0017739a: add byte ptr [eax], al; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773fd: add byte ptr [eax], al; jne 0x177405; add esp, 0x4c; ret; 
0x0017745d: add byte ptr [eax], al; jne 0x177465; add esp, 0x4c; ret; 
0x001774ca: add byte ptr [eax], al; jne 0x1774d2; add esp, 0x4c; ret; 
0x0017754a: add byte ptr [eax], al; jne 0x177552; add esp, 0x4c; ret; 
0x0017793f: add byte ptr [eax], al; jne 0x17794c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00177a3b: add byte ptr [eax], al; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a8a: add byte ptr [eax], al; jne 0x177abc; add esp, 0x1c; ret; 
0x00179224: add byte ptr [eax], al; jne 0x17922c; add esp, 0x2c; ret; 
0x001792d6: add byte ptr [eax], al; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c6: add byte ptr [eax], al; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x0017969d: add byte ptr [eax], al; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x0017973d: add byte ptr [eax], al; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797fb: add byte ptr [eax], al; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x0017987f: add byte ptr [eax], al; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x00179913: add byte ptr [eax], al; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x00179eae: add byte ptr [eax], al; jne 0x179f2f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00179faa: add byte ptr [eax], al; jne 0x17a01c; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a14d: add byte ptr [eax], al; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1ed: add byte ptr [eax], al; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a28d: add byte ptr [eax], al; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a32d: add byte ptr [eax], al; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017a971: add byte ptr [eax], al; jne 0x17a97b; add esp, 0x54; pop ebx; pop esi; ret; 
0x0017aa24: add byte ptr [eax], al; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa84: add byte ptr [eax], al; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aaee: add byte ptr [eax], al; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab9e: add byte ptr [eax], al; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff89: add byte ptr [eax], al; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x00180210: add byte ptr [eax], al; jne 0x180244; add esp, 0x14; pop ebx; pop esi; ret; 
0x00180360: add byte ptr [eax], al; jne 0x180394; add esp, 0x14; pop ebx; pop esi; ret; 
0x00180483: add byte ptr [eax], al; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x0018103d: add byte ptr [eax], al; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x00184104: add byte ptr [eax], al; jne 0x18414c; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001848cf: add byte ptr [eax], al; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x00187213: add byte ptr [eax], al; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0ab: add byte ptr [eax], al; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190256: add byte ptr [eax], al; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001902f1: add byte ptr [eax], al; jne 0x1902fb; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019036b: add byte ptr [eax], al; jne 0x190375; add esp, 0x14; pop ebx; pop esi; ret; 
0x001905cd: add byte ptr [eax], al; jne 0x1905d5; add esp, 0x2c; ret; 
0x001a4275: add byte ptr [eax], al; jne 0x1a49f0; pop ebx; ret; 
0x001a40ae: add byte ptr [eax], al; jne 0x1a4a06; pop ebx; ret; 
0x001a59ed: add byte ptr [eax], al; jne 0x1a5c30; pop ebx; ret; 
0x001a70a7: add byte ptr [eax], al; jne 0x1a72d0; pop ebx; ret; 
0x001a7164: add byte ptr [eax], al; jne 0x1a72f0; pop ebx; ret; 
0x001a7eee: add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00024ac1: add byte ptr [eax], al; jne 0x24a92; ret; 
0x000254ff: add byte ptr [eax], al; jne 0x25507; add esp, 0x1c; ret; 
0x0003b07b: add byte ptr [eax], al; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5ea: add byte ptr [eax], al; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003c935: add byte ptr [eax], al; jne 0x3c942; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003ce6b: add byte ptr [eax], al; jne 0x3ce78; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003ceeb: add byte ptr [eax], al; jne 0x3cef8; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cf58: add byte ptr [eax], al; jne 0x3cf9e; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003cfff: add byte ptr [eax], al; jne 0x3d00c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003d07d: add byte ptr [eax], al; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d222: add byte ptr [eax], al; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d635: add byte ptr [eax], al; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003d97a: add byte ptr [eax], al; jne 0x3d984; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003dad5: add byte ptr [eax], al; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db55: add byte ptr [eax], al; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbde: add byte ptr [eax], al; jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003e1bc: add byte ptr [eax], al; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0003f28e: add byte ptr [eax], al; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f3a1: add byte ptr [eax], al; jne 0x3f3a9; add esp, 0x1c; ret; 
0x00040911: add byte ptr [eax], al; jne 0x40919; add esp, 0x1c; ret; 
0x00040b3e: add byte ptr [eax], al; jne 0x40b46; add esp, 0x1c; ret; 
0x00040cfc: add byte ptr [eax], al; jne 0x40d04; add esp, 0x2c; ret; 
0x00040e0e: add byte ptr [eax], al; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e91: add byte ptr [eax], al; jne 0x40e99; add esp, 0x1c; ret; 
0x00041eaf: add byte ptr [eax], al; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x000535ac: add byte ptr [eax], al; jne 0x535b4; add esp, 0x2c; ret; 
0x00055890: add byte ptr [eax], al; jne 0x5589d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005591e: add byte ptr [eax], al; jne 0x5592b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059e27: add byte ptr [eax], al; jne 0x59e34; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005abda: add byte ptr [eax], al; jne 0x5abfb; add esp, 0x434; pop ebx; pop esi; ret; 
0x0005ae2a: add byte ptr [eax], al; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0005f707: add byte ptr [eax], al; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x0006163e: add byte ptr [eax], al; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c5: add byte ptr [eax], al; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x0007f1f9: add byte ptr [eax], al; jne 0x7f203; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086194: add byte ptr [eax], al; jne 0x861af; add esp, 0x824; pop ebx; pop esi; ret; 
0x00087e34: add byte ptr [eax], al; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x0008e888: add byte ptr [eax], al; jne 0x8e892; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e9f1: add byte ptr [eax], al; jne 0x8ea3d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008eb5f: add byte ptr [eax], al; jne 0x8eba5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008f466: add byte ptr [eax], al; jne 0x8f470; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009191a: add byte ptr [eax], al; jne 0x9193b; add esp, 0x24; pop ebx; pop esi; ret; 
0x00092a9f: add byte ptr [eax], al; jne 0x92aa7; add esp, 0x2c; ret; 
0x00094e96: add byte ptr [eax], al; jne 0x94ea0; mov eax, edx; pop ebx; pop esi; ret; 
0x00095194: add byte ptr [eax], al; jne 0x951a0; xor eax, eax; pop ebx; ret; 
0x00095dd1: add byte ptr [eax], al; jne 0x95ddb; add esp, 0x14; pop ebx; pop esi; ret; 
0x000975fb: add byte ptr [eax], al; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x0009768b: add byte ptr [eax], al; jne 0x97693; add esp, 0x2c; ret; 
0x0009893f: add byte ptr [eax], al; jne 0x98947; add esp, 0x2c; ret; 
0x00098daf: add byte ptr [eax], al; jne 0x98db7; add esp, 0x2c; ret; 
0x000992cb: add byte ptr [eax], al; jne 0x992d3; add esp, 0x2c; ret; 
0x0009971b: add byte ptr [eax], al; jne 0x99723; add esp, 0x2c; ret; 
0x0009aa4e: add byte ptr [eax], al; jne 0x9aa69; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009ba6b: add byte ptr [eax], al; jne 0x9baa3; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009bb0c: add byte ptr [eax], al; jne 0x9bb5b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c638: add byte ptr [eax], al; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c6: add byte ptr [eax], al; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009c9cc: add byte ptr [eax], al; jne 0x9ca07; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009cb32: add byte ptr [eax], al; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd92: add byte ptr [eax], al; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009cf11: add byte ptr [eax], al; jne 0x9cf62; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009cfcc: add byte ptr [eax], al; jne 0x9d01b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009eb78: add byte ptr [eax], al; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009fdd2: add byte ptr [eax], al; jne 0x9fddc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009ff40: add byte ptr [eax], al; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000a0500: add byte ptr [eax], al; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000a09a7: add byte ptr [eax], al; jne 0xa09c7; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a6c95: add byte ptr [eax], al; jne 0xa6ca2; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000c656f: add byte ptr [eax], al; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000d8e37: add byte ptr [eax], al; jne 0xd8e44; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8ec0: add byte ptr [eax], al; jne 0xd8ecd; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8f4e: add byte ptr [eax], al; jne 0xd8f5b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000dabec: add byte ptr [eax], al; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac70: add byte ptr [eax], al; jne 0xdac78; add esp, 0x1c; ret; 
0x000dacba: add byte ptr [eax], al; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad1c: add byte ptr [eax], al; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dbfc0: add byte ptr [eax], al; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x000dc235: add byte ptr [eax], al; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc2ea: add byte ptr [eax], al; jne 0xdc34b; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc5b9: add byte ptr [eax], al; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000deeec: add byte ptr [eax], al; jne 0xdef19; add esp, 0x24; pop ebx; pop esi; ret; 
0x000def84: add byte ptr [eax], al; jne 0xdefa9; add esp, 0x24; pop ebx; pop esi; ret; 
0x000df44a: add byte ptr [eax], al; jne 0xdf455; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000e54f4: add byte ptr [eax], al; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79b4: add byte ptr [eax], al; jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b28: add byte ptr [eax], al; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d46: add byte ptr [eax], al; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e8b6c: add byte ptr [eax], al; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bde: add byte ptr [eax], al; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c82: add byte ptr [eax], al; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000e8d26: add byte ptr [eax], al; jne 0xe8d34; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000efec1: add byte ptr [eax], al; jne 0xefed7; add esp, 0x1c; ret; 
0x000f11fa: add byte ptr [eax], al; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d0a: add byte ptr [eax], al; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4afa: add byte ptr [eax], al; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f762a: add byte ptr [eax], al; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f843a: add byte ptr [eax], al; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x00032e39: add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x001a94c9: add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x001a94f2: add byte ptr [eax], al; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a9507: add byte ptr [eax], al; lea eax, [eax + 1]; pop edi; ret; 
0x001a9517: add byte ptr [eax], al; lea eax, [eax + 2]; pop edi; ret; 
0x001a945f: add byte ptr [eax], al; lea eax, [eax + 3]; pop edi; ret; 
0x001a9527: add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a9492: add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x00054f8e: add byte ptr [eax], al; lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x001a8939: add byte ptr [eax], al; lea eax, [ecx + 0xc]; ret; 
0x001a8b97: add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001a8ba7: add byte ptr [eax], al; lea eax, [ecx + 2]; ret; 
0x001a8bb7: add byte ptr [eax], al; lea eax, [ecx + 3]; ret; 
0x001a88e6: add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001a8bc7: add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a8910: add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a7864: add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a781e: add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a84e7: add byte ptr [eax], al; lea eax, [edi + 1]; pop edi; ret; 
0x001a84f7: add byte ptr [eax], al; lea eax, [edi + 2]; pop edi; ret; 
0x001a77c1: add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x001a8507: add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001a777b: add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a7d41: add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a7d66: add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a7db9: add byte ptr [eax], al; lea eax, [edi - 4]; pop edi; ret; 
0x001a7d90: add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x001a8f60: add byte ptr [eax], al; lea eax, [edx + 0xb]; ret; 
0x001a8f89: add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x001a8f13: add byte ptr [eax], al; lea eax, [edx + 3]; ret; 
0x001a8f36: add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x0015d940: add byte ptr [eax], al; lea eax, [esp + 0x9a4]; push eax; push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0018478e: add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000ea471: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00093006: add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00176ae2: add byte ptr [eax], al; lea ecx, [eax + 0xa7ec]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x000eb521: add byte ptr [eax], al; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00173df3: add byte ptr [eax], al; lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00175b54: add byte ptr [eax], al; lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000a040e: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012dd96: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e80be: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0012d038: add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0010c01e: add byte ptr [eax], al; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000ea419: add byte ptr [eax], al; lea edi, [eax + 0x68]; mov eax, 0x78; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x00092df7: add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0013d0ac: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d189: add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000a0025: add byte ptr [eax], al; lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115950: add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003cb64: add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001a96f7: add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d9f2a: add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a717b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016c47b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0017a78b: add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0004070b: add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008c577: add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001a89aa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89ba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89ca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89da: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89ea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a894a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a895a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a896a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a897a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a898a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec8: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a899a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a799b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a79ab: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a79bb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a79cb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a79db: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a791a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a792b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a793b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a794b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a795b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a796b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a797b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a798b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a7dfb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7deb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7ddb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dcb: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7e6b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a7e5b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a7e4b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001aa15b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a7e3b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a7e2b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a7e1b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a7e0b: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a790a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a900a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a901a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a902a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a903a: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8faa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fba: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fca: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fda: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fea: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ffa: add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000bdd98: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3df8: add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000b3e3a: add byte ptr [eax], al; lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x0019ce2a: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; ja 0x19ce39; neg eax; ret; 
0x000d9d3b: add byte ptr [eax], al; lea esi, [esi]; mov eax, 1; jg 0xd9d49; neg eax; ret; 
0x001aa7f8: add byte ptr [eax], al; lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x001a9e9b: add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b3e1b: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3e0a: add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b20ab: add byte ptr [eax], al; lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000313d2: add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x001aa088: add byte ptr [eax], al; lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x001a79eb: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d9f3a: add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d9: add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f09: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f99: add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x001a9770: add byte ptr [eax], al; lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a3a69: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ja 0x1a3a79; neg eax; ret; 
0x000d9f49: add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de9: add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x00177729: add byte ptr [eax], al; lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d9d29: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c1a89: add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0008f6ac: add byte ptr [eax], al; lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x000a5d3f: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a655a: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a1399: add byte ptr [eax], al; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000b61fe: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b1e3e: add byte ptr [eax], al; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000409bc: add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000c11be: add byte ptr [eax], al; mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdd9e: add byte ptr [eax], al; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3dfe: add byte ptr [eax], al; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000a1a0a: add byte ptr [eax], al; mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x00093907: add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000d9f0e: add byte ptr [eax], al; mov ch, dh; and ch, 0xf; je 0xd9f30; add eax, 2; ret; 
0x00090f6a: add byte ptr [eax], al; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x000799b9: add byte ptr [eax], al; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x000799c0: add byte ptr [eax], al; mov dword ptr [eax + 0x18], edx; ret; 
0x0007dc70: add byte ptr [eax], al; mov dword ptr [eax + 0x1a88], 0; ret; 
0x0008d806: add byte ptr [eax], al; mov dword ptr [eax + 0x1ab8], 0; mov dword ptr [eax + 0x1abc], 0; ret; 
0x0008d810: add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x0008f189: add byte ptr [eax], al; mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008f193: add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000a0d19: add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a08f6: add byte ptr [eax], al; mov dword ptr [eax + 0x3c14], 0; ret; 
0x00090f63: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004255b: add byte ptr [eax], al; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009da53: add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x0008f1ca: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0017a47c: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017a43c: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00091393: add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x001542da: add byte ptr [eax], al; mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x001542e0: add byte ptr [eax], al; mov dword ptr [eax + 0xfc], edx; ret; 
0x0014e92d: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0008c427: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016e0bc: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0010b567: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099e6c: add byte ptr [eax], al; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013f3e1: add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016dff4: add byte ptr [eax], al; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e04a: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016e00c: add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016e01f: add byte ptr [eax], al; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0014e934: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0010b560: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008c42e: add byte ptr [eax], al; mov dword ptr [eax + 8], 0; ret; 
0x00090f71: add byte ptr [eax], al; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005bbcc: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x0016dffb: add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x000d4de6: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x00171564: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x00095e03: add byte ptr [eax], al; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00034c53: add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00176aee: add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x0003d38c: add byte ptr [eax], al; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016e006: add byte ptr [eax], al; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016e09e: add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e0ae: add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x0008e76d: add byte ptr [eax], al; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0005ae6f: add byte ptr [eax], al; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00095d68: add byte ptr [eax], al; mov dword ptr [eax], edx; ret; 
0x0003f1f0: add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00154ec8: add byte ptr [eax], al; mov dword ptr [ebx + 0x4ed8], 0; call esi; 
0x00154e40: add byte ptr [eax], al; mov dword ptr [ebx + 0x5f18], 0; call esi; 
0x00154db8: add byte ptr [eax], al; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00154d30: add byte ptr [eax], al; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154ca8: add byte ptr [eax], al; mov dword ptr [ebx + 0x8fd8], 0; call esi; 
0x00182c1e: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00146370: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x00183ede: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008e7c0: add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00183f31: add byte ptr [eax], al; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001844ba: add byte ptr [eax], al; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0009d37e: add byte ptr [eax], al; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0017a3c3: add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00174312: add byte ptr [eax], al; mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x0003d3a2: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00117673: add byte ptr [eax], al; mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x00084e43: add byte ptr [eax], al; mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x00155293: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00024f2c: add byte ptr [eax], al; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00079eb5: add byte ptr [eax], al; mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012c6ee: add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x000b3e5e: add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b3e2e: add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x000973fa: add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0007dacc: add byte ptr [eax], al; mov dword ptr [edx + 0x1a80], 0; ret; 
0x00087e8c: add byte ptr [eax], al; mov dword ptr [edx + 0x1a94], 0; ret; 
0x0008d78c: add byte ptr [eax], al; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x00099824: add byte ptr [eax], al; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0009da4d: add byte ptr [eax], al; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0011522c: add byte ptr [eax], al; mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x0005ac84: add byte ptr [eax], al; mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00125dd3: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013aa3b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c9db: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0018770b: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003d549: add byte ptr [eax], al; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x00084b0d: add byte ptr [eax], al; mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x0005ad52: add byte ptr [eax], al; mov dword ptr [edx], 0; ret; 
0x00094b8e: add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000f0d28: add byte ptr [eax], al; mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x00040bc6: add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00169871: add byte ptr [eax], al; mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008b8e0: add byte ptr [eax], al; mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0015980e: add byte ptr [eax], al; mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016c036: add byte ptr [eax], al; mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00124eed: add byte ptr [eax], al; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dbae2: add byte ptr [eax], al; mov dword ptr [esp + 0x104], edi; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00070dfa: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 0; jmp edx; 
0x0007117a: add byte ptr [eax], al; mov dword ptr [esp + 0x14], 1; jmp edx; 
0x000e7fec: add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x00053414: add byte ptr [eax], al; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00023328: add byte ptr [eax], al; mov dword ptr [esp + 0x18], 0x20; call dword ptr gs:[0x10]; 
0x00130944: add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0011575a: add byte ptr [eax], al; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000dee8e: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd3f: add byte ptr [eax], al; mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000707f7: add byte ptr [eax], al; mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003da23: add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000643f6: add byte ptr [eax], al; mov dword ptr [esp + 0x24], 0; jmp ecx; 
0x0009df47: add byte ptr [eax], al; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009a8d6: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000a017d: add byte ptr [eax], al; mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000704f1: add byte ptr [eax], al; mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x0009a8e1: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000db954: add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000709ba: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x0012de50: add byte ptr [eax], al; mov dword ptr [esp + 0x3c], esi; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009f9f3: add byte ptr [eax], al; mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x001223ee: add byte ptr [eax], al; mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012c2a9: add byte ptr [eax], al; mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012c2b3: add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000a738c: add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0010bfcf: add byte ptr [eax], al; mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00070e5c: add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0007c680: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; jmp eax; 
0x0016c86a: add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00171590: add byte ptr [eax], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000951f3: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007c581: add byte ptr [eax], al; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000bddae: add byte ptr [eax], al; mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009f916: add byte ptr [eax], al; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114ce4: add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114ae5: add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x00189e66: add byte ptr [eax], al; mov eax, 0x16; pop ebx; ret; 
0x000983e6: add byte ptr [eax], al; mov eax, 0x16; ret; 
0x000e7f64: add byte ptr [eax], al; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00114c75: add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000fb5cb: add byte ptr [eax], al; mov eax, 0x20; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x00121d0d: add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00091192: add byte ptr [eax], al; mov eax, 0x5f; cmovne eax, edx; ret; 
0x0012e3ae: add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2ee: add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d075: add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00130442: add byte ptr [eax], al; mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0013048e: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013105d: add byte ptr [eax], al; mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00040568: add byte ptr [eax], al; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00131906: add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00093d3f: add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00092dfd: add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003cb5a: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbfd: add byte ptr [eax], al; mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093070: add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009df42: add byte ptr [eax], al; mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0009a7e2: add byte ptr [eax], al; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x001a96b4: add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x000952a6: add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x000919dc: add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009e415: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000977ea: add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009203e: add byte ptr [eax], al; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00095712: add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000901b3: add byte ptr [eax], al; mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00025832: add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0009b2aa: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00087522: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003d462: add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c9e2: add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0009c706: add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x000fb72b: add byte ptr [eax], al; mov eax, 1; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000a7556: add byte ptr [eax], al; mov eax, 1; ret; 
0x001a960b: add byte ptr [eax], al; mov eax, 4; pop edi; ret; 
0x001a9664: add byte ptr [eax], al; mov eax, 8; pop edi; ret; 
0x00124331: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x00032e63: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x178]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000342f3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x178]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000c3884: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3894: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x001489c3: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x000c38a4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38b4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38c4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38d4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38e4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38f4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3904: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3914: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c3924: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c3874: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00132002: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x00124337: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016e875: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0008f27c: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x00053630: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x001842b7: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0008f3b4: add byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1b08], eax; ret; 
0x0003d543: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xa0]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x00124853: add byte ptr [eax], al; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x0010bc1e: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bb5f; call eax; 
0x0010bcd6: add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bbb2; call eax; 
0x0010bc7e: add byte ptr [eax], al; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bb5f; call eax; 
0x00175aba: add byte ptr [eax], al; mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00171f8c: add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00086ad4: add byte ptr [eax], al; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0016c88a: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0016ca01: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00176d8e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x198]; pop ebx; pop esi; pop edi; ret; 
0x00176e1e: add byte ptr [eax], al; mov eax, dword ptr [ebx + 0x1a8]; pop ebx; pop esi; pop edi; ret; 
0x001876fe: add byte ptr [eax], al; mov eax, dword ptr [ecx + 0xa0]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x000348dc: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003489c: add byte ptr [eax], al; mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000b612e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b1d6e: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x001aa7fe: add byte ptr [eax], al; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00174a03: add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0009a999: add byte ptr [eax], al; mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9a9aa; ret; 
0x00179276: add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00032e69: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000342f9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00034859: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034829: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347f9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034739: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034799: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346a9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034769: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034709: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034909: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346d9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347c9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034679: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001489c9: add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x00090346: add byte ptr [eax], al; mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00175757: add byte ptr [eax], al; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x001323aa: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x0016c52d: add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x001a95ae: add byte ptr [eax], al; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0010cdec: add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00176ae8: add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00122dc2: add byte ptr [eax], al; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00132bd1: add byte ptr [eax], al; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003d807: add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c095e: add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000bb21e: add byte ptr [eax], al; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001a84ce: add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000931de: add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x001813ad: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x0015046c: add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x000b4a8e: add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0019232f: add byte ptr [eax], al; mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0008714b: add byte ptr [eax], al; mov eax, edx; ret; 
0x00061dcb: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0017f9d4: add byte ptr [eax], al; mov eax, esi; pop ebx; pop esi; ret; 
0x00121d3b: add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00115761: add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0012dc35: add byte ptr [eax], al; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x00130447: add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00121332: add byte ptr [eax], al; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00129979: add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00093c40: add byte ptr [eax], al; mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d6d4: add byte ptr [eax], al; mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0019048d: add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0013093f: add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012c8ab: add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000707b1: add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0013179e: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0013172d: add byte ptr [eax], al; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000a028e: add byte ptr [eax], al; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0011f309: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0012d471: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012d1e4: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0011e258: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012e020: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012d06e: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012c191: add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009f5a3: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fba87: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0003cd03: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011f613: add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00124ee6: add byte ptr [eax], al; mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000232bf: add byte ptr [eax], al; mov ebx, ebp; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000958d9: add byte ptr [eax], al; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009668a: add byte ptr [eax], al; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003ccd4: add byte ptr [eax], al; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120ba0: add byte ptr [eax], al; mov ebx, edx; ret; 
0x000a002e: add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001210cb: add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00121d36: add byte ptr [eax], al; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012c8b0: add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000985a2: add byte ptr [eax], al; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fbcc: add byte ptr [eax], al; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000903c2: add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00093224: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00184784: add byte ptr [eax], al; mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009863f: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903f1: add byte ptr [eax], al; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960cc: add byte ptr [eax], al; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000ea46c: add byte ptr [eax], al; mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0010d678: add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c336a: add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x00098033: add byte ptr [eax], al; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x00189edd: add byte ptr [eax], al; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097b28: add byte ptr [eax], al; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000977ef: add byte ptr [eax], al; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007c431: add byte ptr [eax], al; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0010d6e0: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0013185c: add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00091526: add byte ptr [eax], al; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009da47: add byte ptr [eax], al; mov ecx, dword ptr [edx + 0x3bec]; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0012d0d3: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0013038f: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x001903fd: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013087d: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00070daf: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0012d723: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0011f001: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fa17: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00061343: add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dc363: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00094276: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c45: add byte ptr [eax], al; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009e212: add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a03c3: add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009f91b: add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ea421: add byte ptr [eax], al; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x00121d30: add byte ptr [eax], al; mov edi, dword ptr [ebp + 0xa0]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00130f41: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000650d8: add byte ptr [eax], al; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00064720: add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000645ee: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp eax; 
0x0006459e: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp eax; 
0x000652a2: add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x000fb611: add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb629: add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x00098810: add byte ptr [eax], al; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a18: add byte ptr [eax], al; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b59: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bdb: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c02: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092175: add byte ptr [eax], al; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000901bf: add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x00184789: add byte ptr [eax], al; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00150486: add byte ptr [eax], al; mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008fc8d: add byte ptr [eax], al; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000923fb: add byte ptr [eax], al; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097da5: add byte ptr [eax], al; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd6: add byte ptr [eax], al; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009999b: add byte ptr [eax], al; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4e: add byte ptr [eax], al; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fbd1: add byte ptr [eax], al; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fc40: add byte ptr [eax], al; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001318e0: add byte ptr [eax], al; mov edx, 8; call dword ptr gs:[0x10]; 
0x001773e7: add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0010a916: add byte ptr [eax], al; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000fba35: add byte ptr [eax], al; mov edx, dword ptr [edx + 0xa0]; cmp dword ptr [ecx + edx], 0x26; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x0012d26d: add byte ptr [eax], al; mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000986ae: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x14]; call 0x98540; xor eax, eax; add esp, 0xc; ret; 
0x0017a99a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17a9b0; add esp, 0xc; ret; 
0x0017ab0a: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17ab20; add esp, 0xc; ret; 
0x00120614: add byte ptr [eax], al; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001149b5: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114cdd: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114c6e: add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00124294: add byte ptr [eax], al; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00187704: add byte ptr [eax], al; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003cc07: add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093068: add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000df1c3: add byte ptr [eax], al; mov edx, esi; call dword ptr gs:[0x10]; 
0x00094281: add byte ptr [eax], al; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003cb5f: add byte ptr [eax], al; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cc02: add byte ptr [eax], al; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093063: add byte ptr [eax], al; mov esi, 8; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00115949: add byte ptr [eax], al; mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012d14d: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001149bc: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114c7a: add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0012df8d: add byte ptr [eax], al; mov esi, edi; call dword ptr gs:[0x10]; 
0x0013044c: add byte ptr [eax], al; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x000960d1: add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x001220ab: add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000ac596: add byte ptr [eax], al; mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x001aa83e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bdf0e: add byte ptr [eax], al; movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba56e: add byte ptr [eax], al; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3e9e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eae: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e8e: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ebe: add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000ba4de: add byte ptr [eax], al; movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba4ee: add byte ptr [eax], al; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b615e: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b1d9e: add byte ptr [eax], al; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0013fcae: add byte ptr [eax], al; movzx eax, dl; ret; 
0x0019e557: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019cd8e: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019e577: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0019e597: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019e5b7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019e5d7: add byte ptr [eax], al; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0019e537: add byte ptr [eax], al; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x00042d28: add byte ptr [eax], al; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e09: add byte ptr [eax], al; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00071bd2: add byte ptr [eax], al; movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003cd2b: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012d273: add byte ptr [eax], al; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024f24: add byte ptr [eax], al; neg eax; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000fba92: add byte ptr [eax], al; neg eax; pop ebx; ret; 
0x0008e245: add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x000c1d0d: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c245c: add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1fbc: add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000436ed: add byte ptr [eax], al; nop; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x0008be4d: add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0008d69d: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0018718c: add byte ptr [eax], al; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016c46c: add byte ptr [eax], al; nop; endbr32; ret; 
0x0017a7ad: add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000d4cad: add byte ptr [eax], al; nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d4c9d: add byte ptr [eax], al; nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000e7c8d: add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000336dd: add byte ptr [eax], al; nop; lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x000b632d: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b1f4c: add byte ptr [eax], al; nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b633d: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b1f5d: add byte ptr [eax], al; nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x0009b2ec: add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x000b3e4d: add byte ptr [eax], al; nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x00071b8c: add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0009107d: add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x0008735c: add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009802d: add byte ptr [eax], al; nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d9f5c: add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000944cc: add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9f6c: add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9f7c: add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9f8c: add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9f9c: add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9fac: add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x0017a07c: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016ed8c: add byte ptr [eax], al; nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000912ac: add byte ptr [eax], al; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00154aad: add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000e7bbc: add byte ptr [eax], al; nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000b648c: add byte ptr [eax], al; nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b3e7c: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3e6d: add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001aa80d: add byte ptr [eax], al; nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0009116d: add byte ptr [eax], al; nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x001a58ec: add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x000e9e3c: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f17fc: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8a3c: add byte ptr [eax], al; nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00042f7c: add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x000424dd: add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000ac3ad: add byte ptr [eax], al; nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000e7b7e: add byte ptr [eax], al; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009555d: add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0013fca3: add byte ptr [eax], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013f991: add byte ptr [eax], al; or byte ptr [edi], 0x45; ret 0x2ec3; 
0x00042e33: add byte ptr [eax], al; or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c34d9: add byte ptr [eax], al; or cl, cl; jne 0xc34e1; xor eax, eax; ret; 
0x00115750: add byte ptr [eax], al; or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0006061e: add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00092377: add byte ptr [eax], al; or edx, 2; call dword ptr gs:[0x10]; 
0x000c1c36: add byte ptr [eax], al; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1f0e: add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x00120fa0: add byte ptr [eax], al; pop ebp; pop edi; pop ebx; ret; 
0x000eaf47: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00040574: add byte ptr [eax], al; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; xor eax, eax; ret; 
0x00090849: add byte ptr [eax], al; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x000793f2: add byte ptr [eax], al; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a5c2e: add byte ptr [eax], al; pop ebx; mov eax, 1; jg 0x1a5c40; neg eax; ret; 
0x0017a551: add byte ptr [eax], al; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0005bf80: add byte ptr [eax], al; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x001893b6: add byte ptr [eax], al; pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0003ce73: add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x0011ff7c: add byte ptr [eax], al; pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000d9da5: add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x00103133: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x0015048b: add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x001398fe: add byte ptr [eax], al; pop ebx; pop esi; pop ebp; ret; 
0x0002c160: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x001aae83: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000233ff: add byte ptr [eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003dd59: add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00024b76: add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003d085: add byte ptr [eax], al; pop ebx; ret; 
0x00042f70: add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001228ae: add byte ptr [eax], al; pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0010b682: add byte ptr [eax], al; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a3f2e: add byte ptr [eax], al; pop ebx; xor eax, eax; ret; 
0x00040bbf: add byte ptr [eax], al; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x0011f6e6: add byte ptr [eax], al; pop edi; cmova eax, edx; ret; 
0x000250b2: add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00154bc1: add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x000b3920: add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b9bde: add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000d9bc3: add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001a9610: add byte ptr [eax], al; pop edi; ret; 
0x0016c7f8: add byte ptr [eax], al; pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00053d7b: add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000be11e: add byte ptr [eax], al; pop esi; ret; 
0x000c29d0: add byte ptr [eax], al; pop esi; xor eax, eax; pop ebx; ret; 
0x001aa08e: add byte ptr [eax], al; pop esi; xor eax, eax; pop edi; ret; 
0x00127abc: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00189898: add byte ptr [eax], al; push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x0017833f: add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008a4ee: add byte ptr [eax], al; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x000838af: add byte ptr [eax], al; push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0016e80f: add byte ptr [eax], al; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00178b6a: add byte ptr [eax], al; push 0x2260; push dword ptr [esp + 0x1c]; call 0x1788a0; add esp, 0x1c; ret; 
0x0008a332: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083e82: add byte ptr [eax], al; push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083c39: add byte ptr [eax], al; push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x000792ef: add byte ptr [eax], al; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0005b020: add byte ptr [eax], al; push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080adf: add byte ptr [eax], al; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x00080b40: add byte ptr [eax], al; push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x001396fa: add byte ptr [eax], al; push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x137e50; add esp, 0x1c; ret; 
0x00174f32: add byte ptr [eax], al; push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x0017182e: add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0003367c: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x33690; add esp, 0x1c; ret; 
0x000abd1c: add byte ptr [eax], al; push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xabd30; add esp, 0x1c; ret; 
0x000839ff: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0016c8a6: add byte ptr [eax], al; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00121fee: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1274c0; add esp, 0x1c; ret; 
0x00178b6f: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1788a0; add esp, 0x1c; ret; 
0x00090d1a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x90c40; add esp, 0x18; pop ebx; ret; 
0x0009103e: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x90f80; add esp, 0x1c; ret; 
0x00099f4a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x99ef0; add esp, 0x18; pop ebx; ret; 
0x0013b158: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0013c248: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x00085d6a: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7eab0; add esp, 0x1c; ret; 
0x000dbae9: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00177717: add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x00171834: add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00121fc4: add byte ptr [eax], al; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00171850: add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0015d2ea: add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0008a168: add byte ptr [eax], al; push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00160ce2: add byte ptr [eax], al; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x0018976f: add byte ptr [eax], al; push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0008a16f: add byte ptr [eax], al; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x00125c75: add byte ptr [eax], al; push eax; call 0x125d90; add esp, 0x1c; ret; 
0x0007dc37: add byte ptr [eax], al; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x0010ba7f: add byte ptr [eax], al; push eax; call 0x8fc80; call dword ptr [esi]; 
0x0009a115: add byte ptr [eax], al; push eax; call 0x90b90; add esp, 0x1c; ret; 
0x0003ddd7: add byte ptr [eax], al; push eax; call 0x98dd0; add esp, 0x1c; ret; 
0x00154807: add byte ptr [eax], al; push eax; call edx; 
0x00125c45: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x125ca0; add esp, 0x1c; ret; 
0x0013c775: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x13c790; add esp, 0x1c; ret; 
0x0013cab5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x13cad0; add esp, 0x1c; ret; 
0x000409f5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x40a10; add esp, 0x1c; ret; 
0x00042cc5: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x1c]; call 0x42ce0; add esp, 0x1c; ret; 
0x0002a301: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x0002aebf: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e67d: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call esi; 
0x0002d1d0: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb66: add byte ptr [eax], al; push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x001733bc: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001733bc: add byte ptr [eax], al; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0015d947: add byte ptr [eax], al; push eax; push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0003b8d3: add byte ptr [eax], al; push eax; ret; 
0x00189776: add byte ptr [eax], al; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x001755ba: add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0003de09: add byte ptr [eax], al; push ebx; xor ebx, ebx; mov edx, dword ptr [esp + 0x10]; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x0008fc92: add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009308f: add byte ptr [eax], al; push edx; call eax; 
0x000281fb: add byte ptr [eax], al; push edx; push eax; call 0x98690; add esp, 0x1c; ret; 
0x00174f4b: add byte ptr [eax], al; push edx; push edi; call dword ptr [eax + 4]; 
0x0016e831: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x10]; 
0x000815bc: add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x001398c8: add byte ptr [eax], al; push esi; call eax; 
0x0016dbf0: add byte ptr [eax], al; push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0010e393: add byte ptr [eax], al; pushal; add cl, al; call 0xfe11c9f; dec edi; ret 0xbce9; 
0x00024aa6: add byte ptr [eax], al; ret; 
0x0013f98b: add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0013fc9a: add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00024b6d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; pop ebx; pop esi; ret; 
0x00024a9d: add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x001547fd: add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x00172389: add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000fb6f1: add byte ptr [eax], al; setne al; ret; 
0x00186804: add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008f3ba: add byte ptr [eax], al; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1b08], eax; ret; 
0x0018271c: add byte ptr [eax], al; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010ce87: add byte ptr [eax], al; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0012360c: add byte ptr [eax], al; sub eax, dword ptr gs:[0x14]; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x000c3429: add byte ptr [eax], al; sub eax, edx; ret; 
0x0008c786: add byte ptr [eax], al; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00081c86: add byte ptr [eax], al; sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0005af97: add byte ptr [eax], al; sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0003bddc: add byte ptr [eax], al; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x001a94e9: add byte ptr [eax], al; sub edi, 0x10; jb 0x1a95b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a955e: add byte ptr [eax], al; sub edi, 0xa; jb 0x1a95b0; lea eax, [eax + 9]; pop edi; ret; 
0x001a956e: add byte ptr [eax], al; sub edi, 0xb; jb 0x1a95b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a957e: add byte ptr [eax], al; sub edi, 0xd; jb 0x1a95b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a958e: add byte ptr [eax], al; sub edi, 0xe; jb 0x1a95b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a959e: add byte ptr [eax], al; sub edi, 0xf; jb 0x1a95b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a94fe: add byte ptr [eax], al; sub edi, 2; jb 0x1a95b0; lea eax, [eax + 1]; pop edi; ret; 
0x001a9456: add byte ptr [eax], al; sub edi, 4; jb 0x1a95b0; lea eax, [eax + 3]; pop edi; ret; 
0x001a953e: add byte ptr [eax], al; sub edi, 7; jb 0x1a95b0; lea eax, [eax + 6]; pop edi; ret; 
0x001a9489: add byte ptr [eax], al; sub edi, 8; jb 0x1a95b0; lea eax, [eax + 7]; pop edi; ret; 
0x001a954e: add byte ptr [eax], al; sub edi, 9; jb 0x1a95b0; lea eax, [eax + 8]; pop edi; ret; 
0x001a84b9: add byte ptr [eax], al; sub edx, 0x10; jb 0x1a8590; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a853e: add byte ptr [eax], al; sub edx, 0xa; jb 0x1a8590; lea eax, [edi + 9]; pop edi; ret; 
0x001a854e: add byte ptr [eax], al; sub edx, 0xb; jb 0x1a8590; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a8490: add byte ptr [eax], al; sub edx, 0xc; jb 0x1a8590; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a855e: add byte ptr [eax], al; sub edx, 0xd; jb 0x1a8590; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a856e: add byte ptr [eax], al; sub edx, 0xe; jb 0x1a8590; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a857e: add byte ptr [eax], al; sub edx, 0xf; jb 0x1a8590; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a8425: add byte ptr [eax], al; sub edx, 4; jb 0x1a8590; lea eax, [edi + 3]; pop edi; ret; 
0x001a851e: add byte ptr [eax], al; sub edx, 7; jb 0x1a8590; lea eax, [edi + 6]; pop edi; ret; 
0x001a8456: add byte ptr [eax], al; sub edx, 8; jb 0x1a8590; lea eax, [edi + 7]; pop edi; ret; 
0x001a852e: add byte ptr [eax], al; sub edx, 9; jb 0x1a8590; lea eax, [edi + 8]; pop edi; ret; 
0x0008d376: add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00124f18: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00148519: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485b9: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x00148679: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x00148719: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14874d; add esp, 0x11c; ret; 
0x0003d076: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d62e: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dace: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db4e: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbd7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3dbe9; add esp, 0x9c; ret; 
0x00061637: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000e8b65: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bd7: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c7b: add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x00087fce: add byte ptr [eax], al; sub esp, 0x18; push eax; call 0x8bb60; add esp, 0x1c; ret; 
0x000a08a2: add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00174f8c: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x0016c7d8: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016d44e: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00093086: add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [edi + 0x228]; push edx; call eax; 
0x000907da: add byte ptr [eax], al; sub esp, 0xc; push 0; call 0x8fd70; add esp, 0x1c; ret; 
0x00175cce: add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x0016ea0c: add byte ptr [eax], al; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00088bac: add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00171f92: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0008c18d: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007beb7: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee7b: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00189158: add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000a74c6: add byte ptr [eax], al; sub esp, 0xc; push esi; call eax; 
0x0008cf27: add byte ptr [eax], al; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x000802ee: add byte ptr [eax], al; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007ed8c: add byte ptr [eax], al; sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00134fc0: add byte ptr [eax], al; sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x0008aa8e: add byte ptr [eax], al; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00024e9e: add byte ptr [eax], al; sub esp, 4; push ebp; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x000884ca: add byte ptr [eax], al; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007eb52: add byte ptr [eax], al; sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c933: add byte ptr [eax], al; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007e450: add byte ptr [eax], al; sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00089e5a: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00088613: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008376e: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b7a1: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008891d: add byte ptr [eax], al; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00189726: add byte ptr [eax], al; sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x001744bf: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00171847: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00172e09: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016ee36: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x001777dd: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016e187: add byte ptr [eax], al; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00082ce8: add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0016e87b: add byte ptr [eax], al; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0007b92a: add byte ptr [eax], al; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0016c7bf: add byte ptr [eax], al; sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000a757e: add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x00177826: add byte ptr [eax], al; sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0003f52e: add byte ptr [eax], al; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x000a73f1: add byte ptr [eax], al; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x001a7db0: add byte ptr [eax], al; test ah, 0x20; jne 0x1a7e50; lea eax, [edi - 4]; pop edi; ret; 
0x001a8930: add byte ptr [eax], al; test ah, 0x20; jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x001a78f4: add byte ptr [eax], al; test ah, 0x40; jne 0x1a79e0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a82b0: add byte ptr [eax], al; test ah, 0x40; jne 0x1a83f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a8f80: add byte ptr [eax], al; test ah, 0x40; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001a7d87: add byte ptr [eax], al; test ah, 2; jne 0x1a7e20; lea eax, [edi - 8]; pop edi; ret; 
0x001a8907: add byte ptr [eax], al; test ah, 2; jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a8287: add byte ptr [eax], al; test ah, 4; jne 0x1a83c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a8f57: add byte ptr [eax], al; test ah, 4; jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x001a7d5e: add byte ptr [eax], al; test al, 0x20; jne 0x1a7df0; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a88de: add byte ptr [eax], al; test al, 0x20; jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a78a2: add byte ptr [eax], al; test al, 0x40; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a825e: add byte ptr [eax], al; test al, 0x40; jne 0x1a8390; lea eax, [edi + 7]; pop edi; ret; 
0x001a8f2e: add byte ptr [eax], al; test al, 0x40; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001aa073: add byte ptr [eax], al; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a7d39: add byte ptr [eax], al; test al, 2; jne 0x1a7dc0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a8759: add byte ptr [eax], al; test al, 2; jne 0x1a8940; mov eax, ecx; ret; 
0x001a823b: add byte ptr [eax], al; test al, 4; jne 0x1a8360; lea eax, [edi + 3]; pop edi; ret; 
0x001a8f0b: add byte ptr [eax], al; test al, 4; jne 0x1a8fb0; lea eax, [edx + 3]; ret; 
0x001a9387: add byte ptr [eax], al; test dh, 4; jne 0x1a972d; add eax, 0xb; pop edi; ret; 
0x001a7772: add byte ptr [eax], al; test dl, 0x40; jne 0x1a79f0; lea eax, [edi + 7]; pop edi; ret; 
0x001a9360: add byte ptr [eax], al; test dl, 0x40; jne 0x1a9719; add eax, 7; pop edi; ret; 
0x001a9de0: add byte ptr [eax], al; test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x001a77b8: add byte ptr [eax], al; test dl, 4; jne 0x1a79f0; lea eax, [edi + 3]; pop edi; ret; 
0x001a933a: add byte ptr [eax], al; test dl, 4; jne 0x1a9705; add eax, 3; pop edi; ret; 
0x00124f89: add byte ptr [eax], al; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0014e904: add byte ptr [eax], al; test eax, eax; je 0x14e910; add esp, 0x18; pop ebx; ret; 
0x0016cd37: add byte ptr [eax], al; test eax, eax; je 0x16cd48; add esp, 8; pop ebx; ret; 
0x001842bd: add byte ptr [eax], al; test eax, eax; je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0007c676: add byte ptr [eax], al; test eax, eax; je 0x7c690; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007dade: add byte ptr [eax], al; test eax, eax; je 0x7daf0; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x0007dbfe: add byte ptr [eax], al; test eax, eax; je 0x7dc10; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x00087e9e: add byte ptr [eax], al; test eax, eax; je 0x87eb0; sub eax, 1; mov dword ptr [edx + 0x1a98], eax; ret; 
0x0008d79e: add byte ptr [eax], al; test eax, eax; je 0x8d7b0; sub eax, 1; mov dword ptr [edx + 0x1ab8], eax; ret; 
0x0010c2d3: add byte ptr [eax], al; test eax, eax; jne 0x10c308; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c376: add byte ptr [eax], al; test eax, eax; jne 0x10c3a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c46b: add byte ptr [eax], al; test eax, eax; jne 0x10c4a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c51b: add byte ptr [eax], al; test eax, eax; jne 0x10c550; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c5e3: add byte ptr [eax], al; test eax, eax; jne 0x10c618; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x00129c06: add byte ptr [eax], al; test eax, eax; jne 0x129c38; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00129ca6: add byte ptr [eax], al; test eax, eax; jne 0x129cd8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x001503f6: add byte ptr [eax], al; test eax, eax; jne 0x150407; ret; 
0x0009dad6: add byte ptr [eax], al; test eax, eax; jne 0x9dae7; ret; 
0x00170572: add byte ptr [eax], al; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0008628f: add byte ptr [eax], al; test ecx, ecx; je 0x86298; mov byte ptr [edx], 0; pop ebx; ret; 
0x000a0df3: add byte ptr [eax], al; test ecx, ecx; jne 0xa0e00; add esp, 8; pop ebx; ret; 
0x000fba26: add byte ptr [eax], al; test ecx, ecx; js 0xfba30; ret; 
0x00024b12: add byte ptr [eax], al; test edx, edx; je 0x24b19; ret; 
0x0004368b: add byte ptr [eax], al; test edx, edx; je 0x43697; bsr eax, edx; xor eax, 0x1f; ret; 
0x000436ab: add byte ptr [eax], al; test edx, edx; je 0x436b7; bsr eax, edx; xor eax, 0x1f; ret; 
0x000908bd: add byte ptr [eax], al; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0003f5f7: add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x0007dc18: add byte ptr [eax], al; xchg dword ptr [edx + 0x1a80], eax; cmp eax, 1; jg 0x7dc30; ret; 
0x0008d7b8: add byte ptr [eax], al; xchg dword ptr [edx + 0x1ab4], eax; cmp eax, 1; jg 0x8d7d0; ret; 
0x00098423: add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x0009140c: add byte ptr [eax], al; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091ba9: add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014c906: add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000e872e: add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00147d5e: add byte ptr [eax], al; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a62c2: add byte ptr [eax], al; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00043226: add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a4d6e: add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000d9ba2: add byte ptr [eax], al; xor eax, eax; pop edi; pop esi; ret; 
0x000c1cae: add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000a6399: add byte ptr [eax], al; xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x00090e14: add byte ptr [eax], al; xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003d392: add byte ptr [eax], al; xor eax, eax; ret; 
0x00041c7d: add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x000940ad: add byte ptr [eax], al; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00124ef4: add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00024d78: add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000931d4: add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x001222a4: add byte ptr [eax], al; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a967: add byte ptr [eax], al; xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00095717: add byte ptr [eax], al; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000435bb: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x435c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000435db: add byte ptr [eax], al; xor edx, 0xffffffff; je 0x435e8; bsr eax, edx; xor eax, 0x1f; ret; 
0x0003dec0: add byte ptr [eax], al; xor edx, edx; call dword ptr gs:[0x10]; 
0x00094f08: add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0010d6d9: add byte ptr [eax], al; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0013494e: add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00094ea5: add byte ptr [eax], al; xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00042de3: add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x000405c9: add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000977f4: add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003e05e: add byte ptr [eax], al; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x00097daa: add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fbd6: add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091eb7: add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x20]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00097b2d: add byte ptr [eax], al; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000999a0: add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000901b8: add byte ptr [eax], al; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00098644: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0009147b: add byte ptr [eax], al; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903f6: add byte ptr [eax], al; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00189ee2: add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091ba2: add byte ptr [eax], al; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00130493: add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00131062: add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0008fc45: add byte ptr [eax], al; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091f53: add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00198b1f: add byte ptr [eax], bh; ret 0x840f; 
0x00159df1: add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x001a4143: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a7219: add byte ptr [eax], bh; std; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x001649e8: add byte ptr [eax], ch; add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x0012c98f: add byte ptr [eax], ch; add byte ptr [ecx], al; add byte ptr [ebp - 0x6ab4d62], cl; call dword ptr [ebx - 0x18]; 
0x00034717: add byte ptr [eax], cl; add byte ptr [eax], al; ret; 
0x000a29a6: add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000c34da: add byte ptr [eax], cl; leave; jne 0xc34e1; xor eax, eax; ret; 
0x000eb52a: add byte ptr [eax], dl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00034867: add byte ptr [eax], dl; add byte ptr [eax], al; ret; 
0x001b1e91: add byte ptr [eax], dl; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x000475a4: add byte ptr [eax], dl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x000944a7: add byte ptr [eax], dl; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x0005ae2b: add byte ptr [ebp + 0x11], dh; add esp, 0x1c; ret; 
0x001a49dc: add byte ptr [ebp + 0x11], dh; pop ebx; ret; 
0x00180484: add byte ptr [ebp + 0x12], dh; add esp, 0x18; pop ebx; ret; 
0x000efec2: add byte ptr [ebp + 0x12], dh; add esp, 0x1c; ret; 
0x0003dd52: add byte ptr [ebp + 0x12], dh; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x00115d32: add byte ptr [ebp + 0x12], dh; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x000d4cf3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x936c4]; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000a92b3: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x971c4]; and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca53: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9c0d4]; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000a9d63: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9e5e4]; and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000acb13: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0x9ffd4]; and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x000aaa73: add byte ptr [ebp + 0x12], dh; lea eax, [edx - 0xa1444]; and ch, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x0003ddd2: add byte ptr [ebp + 0x138c80], cl; add byte ptr [eax - 0x18], dl; int1; scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x00175f41: add byte ptr [ebp + 0x13], dh; add esp, 0x28; pop ebx; ret; 
0x0005f708: add byte ptr [ebp + 0x13], dh; add esp, 0x78; pop ebx; ret; 
0x00087e35: add byte ptr [ebp + 0x14], dh; add esp, 0x28; pop ebx; ret; 
0x0016fcd8: add byte ptr [ebp + 0x14], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00080c34: add byte ptr [ebp + 0x15], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00175e93: add byte ptr [ebp + 0x16], dh; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003d07e: add byte ptr [ebp + 0x16], dh; add esp, 0x98; pop ebx; ret; 
0x0009aa4f: add byte ptr [ebp + 0x17], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086195: add byte ptr [ebp + 0x17], dh; add esp, 0x824; pop ebx; pop esi; ret; 
0x0018103e: add byte ptr [ebp + 0x18], dh; add esp, 0x18; pop ebx; ret; 
0x0011f1b3: add byte ptr [ebp + 0x18], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x000f11fb: add byte ptr [ebp + 0x18], dh; add esp, 0x78; pop ebx; ret; 
0x000b942c: add byte ptr [ebp + 0x18a0076], cl; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x00086467: add byte ptr [ebp + 0x1a], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x000d9d3c: add byte ptr [ebp + 0x1b80076], cl; add byte ptr [eax], al; add byte ptr [edi + 2], bh; neg eax; ret; 
0x000dc5ba: add byte ptr [ebp + 0x1b], dh; add esp, 0x38; pop ebx; ret; 
0x00120130: add byte ptr [ebp + 0x1b], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x00124f20: add byte ptr [ebp + 0x1c], dh; add esp, 0x1018; pop ebx; ret; 
0x001797fc: add byte ptr [ebp + 0x1c], dh; add esp, 0x18; pop ebx; ret; 
0x000a09a8: add byte ptr [ebp + 0x1c], dh; add esp, 0xb4; pop ebx; pop esi; ret; 
0x00190257: add byte ptr [ebp + 0x1d], dh; add esp, 0x18; pop ebx; ret; 
0x0009191b: add byte ptr [ebp + 0x1d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009c8c7: add byte ptr [ebp + 0x1d], dh; add esp, 0x2c; ret; 
0x0005abdb: add byte ptr [ebp + 0x1d], dh; add esp, 0x434; pop ebx; pop esi; ret; 
0x0008638c: add byte ptr [ebp + 0x1d], dh; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0012f318: add byte ptr [ebp + 0x1e], dh; add esp, 0x18; pop ebx; ret; 
0x001768c0: add byte ptr [ebp + 0x20], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017a71d: add byte ptr [ebp + 0x21], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009cd93: add byte ptr [ebp + 0x21], dh; add esp, 0x18; pop ebx; ret; 
0x0013dcff: add byte ptr [ebp + 0x21], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000def85: add byte ptr [ebp + 0x21], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009cb33: add byte ptr [ebp + 0x21], dh; add esp, 0x2c; ret; 
0x00092df8: add byte ptr [ebp + 0x22096], cl; add byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x00092f02: add byte ptr [ebp + 0x22], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00122755: add byte ptr [ebp + 0x23], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012f683: add byte ptr [ebp + 0x23], dh; add esp, 0x18; pop ebx; ret; 
0x0012f233: add byte ptr [ebp + 0x23], dh; add esp, 0x28; pop ebx; ret; 
0x001224b3: add byte ptr [ebp + 0x23], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00079335: add byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00135217: add byte ptr [ebp + 0x244c89c0], al; or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x001aed5f: add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x001b0e7f: add byte ptr [ebp + 0x24548bdb], al; sbb byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0011e1b4: add byte ptr [ebp + 0x24], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00121f11: add byte ptr [ebp + 0x25], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00130e68: add byte ptr [ebp + 0x26], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001152c6: add byte ptr [ebp + 0x26], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x001a96f8: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x00179238: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008c578: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x001a5918: add byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; xor eax, eax; ret; 
0x0012cfcf: add byte ptr [ebp + 0x27], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0018407e: add byte ptr [ebp + 0x28], dh; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x000622c3: add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x00148721: add byte ptr [ebp + 0x29], dh; add esp, 0x11c; ret; 
0x000c6570: add byte ptr [ebp + 0x29], dh; add esp, 0x18; pop ebx; ret; 
0x000deeed: add byte ptr [ebp + 0x29], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009a813: add byte ptr [ebp + 0x29], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012d463: add byte ptr [ebp + 0x2a], dh; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00124f19: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x0014851a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485ba: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x0014867a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x0014871a: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14874d; add esp, 0x11c; ret; 
0x0003d077: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d62f: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dacf: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db4f: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbd8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x3dbe9; add esp, 0x9c; ret; 
0x00061638: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000e8b66: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bd8: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c7c: add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x0012360d: add byte ptr [ebp + 0x2b], ah; add eax, 0x14; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x001a72c2: add byte ptr [ebp + 0x2b], dh; pop ebx; ret; 
0x0016f2e6: add byte ptr [ebp + 0x2d], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00183e5d: add byte ptr [ebp + 0x2e], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00177a8b: add byte ptr [ebp + 0x2e], dh; add esp, 0x1c; ret; 
0x0012378c: add byte ptr [ebp + 0x2f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010d910: add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002fa8f: add byte ptr [ebp + 0x30], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00180211: add byte ptr [ebp + 0x30], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00137ead: add byte ptr [ebp + 0x30], dh; pop ebx; pop esi; pop edi; ret; 
0x00061067: add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0016f371: add byte ptr [ebp + 0x32], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d393: add byte ptr [ebp + 0x33], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000255a0: add byte ptr [ebp + 0x33], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000e833d: add byte ptr [ebp + 0x33], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0017f9cd: add byte ptr [ebp + 0x33], dh; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x000e926e: add byte ptr [ebp + 0x33], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00179880: add byte ptr [ebp + 0x34], dh; add esp, 0x18; pop ebx; ret; 
0x001222ca: add byte ptr [ebp + 0x34], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009ba6c: add byte ptr [ebp + 0x34], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003d223: add byte ptr [ebp + 0x36], dh; add esp, 0x28; pop ebx; ret; 
0x00063220: add byte ptr [ebp + 0x37840fdb], al; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0009c9cd: add byte ptr [ebp + 0x37], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017ff8a: add byte ptr [ebp + 0x37], dh; add esp, 0x18; pop ebx; ret; 
0x0009ad21: add byte ptr [ebp + 0x37], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009449f: add byte ptr [ebp + 0x37], dh; test byte ptr [edx + 0x80], 0x10; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x000a1ba1: add byte ptr [ebp + 0x38], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00146e48: add byte ptr [ebp + 0x396374ed], al; ret; 
0x00041eb0: add byte ptr [ebp + 0x39], dh; add esp, 0x18; pop ebx; ret; 
0x000a1104: add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x0011534f: add byte ptr [ebp + 0x3a], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0017969e: add byte ptr [ebp + 0x3b], dh; add esp, 0x18; pop ebx; ret; 
0x0007db62: add byte ptr [ebp + 0x3b], dh; mov dword ptr [ebx + 0x1a88], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008d702: add byte ptr [ebp + 0x3b], dh; mov dword ptr [ebx + 0x1abc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00120785: add byte ptr [ebp + 0x3c], dh; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x000c4d2d: add byte ptr [ebp + 0x3d2892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0017f8a5: add byte ptr [ebp + 0x3d], dh; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00179914: add byte ptr [ebp + 0x3d], dh; add esp, 0x18; pop ebx; ret; 
0x001243ff: add byte ptr [ebp + 0x3d], dh; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x001a5bf0: add byte ptr [ebp + 0x3d], dh; pop ebx; ret; 
0x00146392: add byte ptr [ebp + 0x3e], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000df28c: add byte ptr [ebp + 0x3ecc8a], cl; add byte ptr [ebp - 0x1620a36e], cl; call dword ptr [ecx + 0x52]; 
0x00148521: add byte ptr [ebp + 0x40], dh; add esp, 0x118; pop ebx; ret; 
0x000dc236: add byte ptr [ebp + 0x40], dh; add esp, 0x28; pop ebx; ret; 
0x001154e8: add byte ptr [ebp + 0x40], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0008eb60: add byte ptr [ebp + 0x42], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb07f: add byte ptr [ebp + 0x42], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003cf59: add byte ptr [ebp + 0x42], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x00185106: add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x001144cb: add byte ptr [ebp + 0x43], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x00148c46: add byte ptr [ebp + 0x43], dh; add esp, 0x1c; ret; 
0x001760a1: add byte ptr [ebp + 0x43], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013f924: add byte ptr [ebp + 0x44], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00184105: add byte ptr [ebp + 0x44], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00142c16: add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x00100c1c: add byte ptr [ebp + 0x458b0076], cl; add al, 0x83; ret; 
0x0007de2c: add byte ptr [ebp + 0x458b0076], cl; cmp byte ptr [ecx], bh; ret; 
0x00127c69: add byte ptr [ebp + 0x45], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001a49a8: add byte ptr [ebp + 0x45], dh; pop ebx; ret; 
0x000a1f61: add byte ptr [ebp + 0x46850fd2], al; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x001a794c: add byte ptr [ebp + 0x478d0076], cl; add al, 0x5f; ret; 
0x001aa15c: add byte ptr [ebp + 0x478d0076], cl; cld; pop edi; ret; 
0x001a7e2c: add byte ptr [ebp + 0x478d0076], cl; cli; pop edi; ret; 
0x001a7dec: add byte ptr [ebp + 0x478d0076], cl; cmc; pop edi; ret; 
0x001a79bc: add byte ptr [ebp + 0x478d0076], cl; or al, 0x5f; ret; 
0x001a7dcc: add byte ptr [ebp + 0x478d0076], cl; pop edi; ret; 
0x001a79dc: add byte ptr [ebp + 0x478d0076], cl; push cs; pop edi; ret; 
0x001a796c: add byte ptr [ebp + 0x478d0076], cl; push es; pop edi; ret; 
0x001a7e1c: add byte ptr [ebp + 0x478d0076], cl; stc; pop edi; ret; 
0x001a7e4c: add byte ptr [ebp + 0x478d0076], cl; std; pop edi; ret; 
0x001a7e3c: add byte ptr [ebp + 0x478d0076], cl; sti; pop edi; ret; 
0x00148681: add byte ptr [ebp + 0x47], dh; add esp, 0x118; pop ebx; ret; 
0x00127d4e: add byte ptr [ebp + 0x48], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008e9f2: add byte ptr [ebp + 0x48], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000d4981: add byte ptr [ebp + 0x48b0170], cl; xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x0010c39d: add byte ptr [ebp + 0x49], dh; add esp, 0x28; pop ebx; ret; 
0x0009bb0d: add byte ptr [ebp + 0x4b], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c639: add byte ptr [ebp + 0x4b], dh; add esp, 0x38; pop ebx; ret; 
0x0010c2fa: add byte ptr [ebp + 0x4c], dh; add esp, 0x28; pop ebx; ret; 
0x0009cf12: add byte ptr [ebp + 0x4d], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x0012d2df: add byte ptr [ebp + 0x4e], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000ec638: add byte ptr [ebp + 0x4f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0007f11b: add byte ptr [ebp + 0x50], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00175b55: add byte ptr [ebp + 0x5128244c], cl; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000c5233: add byte ptr [ebp + 0x5144244c], cl; push dword ptr [edi + 8]; call ebx; 
0x0013d0ad: add byte ptr [ebp + 0x52102454], cl; push edi; call eax; 
0x0013d18a: add byte ptr [ebp + 0x52102454], cl; push esi; call eax; 
0x0010c492: add byte ptr [ebp + 0x54], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x000649af: add byte ptr [ebp + 0x55890150], cl; add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x001141be: add byte ptr [ebp + 0x56], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012d05f: add byte ptr [ebp + 0x56], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0011ebcb: add byte ptr [ebp + 0x57], dh; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0007e934: add byte ptr [ebp + 0x57], dl; push ebx; call dword ptr [esi + 0x24]; 
0x00189777: add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x000ea472: add byte ptr [ebp + 0x58896c58], cl; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0011eb00: add byte ptr [ebp + 0x58], dh; add esp, 0xe4; pop ebx; pop esi; ret; 
0x00128b15: add byte ptr [ebp + 0x59], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001210ad: add byte ptr [ebp + 0x59], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x000c1a0b: add byte ptr [ebp + 0x5b002674], cl; pop esi; pop edi; xor eax, eax; ret; 
0x000313d3: add byte ptr [ebp + 0x5b002674], cl; ret; 
0x001398f7: add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001485c1: add byte ptr [ebp + 0x5c], dh; add esp, 0x118; pop ebx; ret; 
0x000dc2eb: add byte ptr [ebp + 0x5d], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012c92f: add byte ptr [ebp + 0x5e0974c0], 0x5b; jl 0x24f10; ret; 
0x000fbc37: add byte ptr [ebp + 0x5e5b0141], cl; ret; 
0x0002743f: add byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x00120fa1: add byte ptr [ebp + 0x5f], bl; pop ebx; ret; 
0x000534aa: add byte ptr [ebp + 0x5f], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001792d7: add byte ptr [ebp + 0x5f], dh; add esp, 0x18; pop ebx; ret; 
0x000ef7ad: add byte ptr [ebp + 0x61887], cl; add byte ptr [ecx], bh; ret; 
0x000e8e93: add byte ptr [ebp + 0x62], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000b3e0b: add byte ptr [ebp + 0x66002674], cl; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0013d1ae: add byte ptr [ebp + 0x69], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012999f: add byte ptr [ebp + 0x6d], dh; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00179fab: add byte ptr [ebp + 0x6e], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x001a3f3b: add byte ptr [ebp + 0x72002674], cl; push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000a58a8: add byte ptr [ebp + 0x77840fc9], al; add dword ptr [eax], eax; add byte ptr [ebp + 0x94c8b], cl; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x00172c5c: add byte ptr [ebp + 0x77], dh; add esp, 0x18; pop ebx; ret; 
0x0017649e: add byte ptr [ebp + 0x79], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0010c010: add byte ptr [ebp + 0x7c], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000dca24: add byte ptr [ebp + 0x7d890875], cl; add al, 0x39; ret 0x45c7; 
0x00179eaf: add byte ptr [ebp + 0x7d], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009a145: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a255: add byte ptr [ebp + 0x8088], cl; add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x000815db: add byte ptr [ebp + 0x84b8], cl; add cl, al; cli; or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x000a5c75: add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x000a58b0: add byte ptr [ebp + 0x94c8b], cl; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x0015d941: add byte ptr [ebp + 0x9a42484], cl; add byte ptr [eax], al; push eax; push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0003cb65: add byte ptr [ebp + 0xa02494], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00176ae3: add byte ptr [ebp + 0xa7ec88], cl; add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x000a4ffb: add byte ptr [ebp + 0xa], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001482e9: add byte ptr [ebp + 0xa], dh; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x000a7d84: add byte ptr [ebp + 0xa], dh; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0013ae38: add byte ptr [ebp + 0xa], dh; add esp, 0x2c; ret; 
0x0014800a: add byte ptr [ebp + 0xa], dh; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x0009f700: add byte ptr [ebp + 0xa], dh; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0012c148: add byte ptr [ebp + 0xa], dh; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x000e8d27: add byte ptr [ebp + 0xa], dh; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x00035173: add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x001ae689: add byte ptr [ebp + 0xb6], cl; add bh, dh; ret 0; 
0x001a7789: add byte ptr [ebp + 0xb6], cl; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a4389: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x000a1199: add byte ptr [ebp + 0xb6], cl; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x000a5599: add byte ptr [ebp + 0xb6], cl; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x00121f79: add byte ptr [ebp + 0xb], dh; add esp, 0x1c; ret; 
0x000908be: add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x001465a5: add byte ptr [ebp + 0xc], dh; add esp, 0x18; pop ebx; ret; 
0x0012281f: add byte ptr [ebp + 0xd], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00040c10: add byte ptr [ebp + 0xd], dh; add esp, 4; pop ebx; pop esi; ret; 
0x001762ad: add byte ptr [ebp + 0xe], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00115cc6: add byte ptr [ebp + 0xe], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x001203a6: add byte ptr [ebp + 0xe], dh; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ac6: add byte ptr [ebp + 0xe], dh; add esp, 0x74; pop ebx; pop esi; ret; 
0x0004368c: add byte ptr [ebp + 0xf0674d2], al; mov ebp, 0x1ff083c2; ret; 
0x0009703c: add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00175e15: add byte ptr [ebp + 0xf], dh; add esp, 0x1c; ret; 
0x000dabed: add byte ptr [ebp + 0xf], dh; add esp, 0x28; pop ebx; ret; 
0x000c84a6: add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x000d5a54: add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x8eb; 
0x000b20ac: add byte ptr [ebp + 0xff30076], cl; outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000a717c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 0xffffffff; ret; 
0x0016c47c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, 1; ret; 
0x0017a78c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0004070c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; ret; 
0x0008d68c: add byte ptr [ebp + 0xff30076], cl; push ds; sti; xor eax, eax; ret; 
0x00025523: add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00025500: add byte ptr [ebp + 4], dh; add esp, 0x1c; ret; 
0x00040cfd: add byte ptr [ebp + 4], dh; add esp, 0x2c; ret; 
0x0012b7a8: add byte ptr [ebp + 4], dh; add esp, 0x3c; ret; 
0x0017724b: add byte ptr [ebp + 4], dh; add esp, 0x4c; ret; 
0x001302cb: add byte ptr [ebp + 4], dh; add esp, 0x7c; ret; 
0x0003c5eb: add byte ptr [ebp + 5], dh; add esp, 0x18; pop ebx; ret; 
0x000975fc: add byte ptr [ebp + 5], dh; add esp, 0x28; pop ebx; ret; 
0x000a0501: add byte ptr [ebp + 5], dh; add esp, 0x38; pop ebx; ret; 
0x000dad1d: add byte ptr [ebp + 5], dh; add esp, 0x48; pop ebx; ret; 
0x000616c6: add byte ptr [ebp + 5], dh; add esp, 0x78; pop ebx; ret; 
0x0008f467: add byte ptr [ebp + 6], dh; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d97b: add byte ptr [ebp + 6], dh; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120f48: add byte ptr [ebp + 6], dh; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017a972: add byte ptr [ebp + 6], dh; add esp, 0x54; pop ebx; pop esi; ret; 
0x00094e97: add byte ptr [ebp + 6], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x0013f860: add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0008f0f2: add byte ptr [ebp + 7], dh; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00092b60: add byte ptr [ebp + 7], dh; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000df44b: add byte ptr [ebp + 7], dh; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0012420f: add byte ptr [ebp + 7], dh; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012f61a: add byte ptr [ebp + 7], dh; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003dbdf: add byte ptr [ebp + 7], dh; add esp, 0x9c; ret; 
0x0017aa25: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x1c; ret; 
0x0011ec61: add byte ptr [ebp + 7], dh; movzx eax, al; add esp, 0x4c; ret; 
0x0014c879: add byte ptr [ebp + 7], dh; movzx eax, ax; add esp, 0x2c; ret; 
0x0006163f: add byte ptr [ebp + 8], dh; add esp, 0x1018; pop ebx; ret; 
0x0003d636: add byte ptr [ebp + 8], dh; add esp, 0x128; pop ebx; ret; 
0x00123614: add byte ptr [ebp + 8], dh; add esp, 0x418; pop ebx; ret; 
0x00125063: add byte ptr [ebp + 8], dh; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e8b6d: add byte ptr [ebp + 8], dh; add esp, 0xe8; pop ebx; ret; 
0x0003b07c: add byte ptr [ebp + 8], dh; mov eax, edx; add esp, 0x1c; ret 4; 
0x00095195: add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x0003ce6c: add byte ptr [ebp + 9], dh; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003c936: add byte ptr [ebp + 9], dh; add esp, 0x124; pop ebx; pop esi; ret; 
0x00055891: add byte ptr [ebp + 9], dh; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000a6c96: add byte ptr [ebp + 9], dh; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x0003d000: add byte ptr [ebp + 9], dh; add esp, 0x94; pop ebx; pop edi; ret; 
0x001a5c24: add byte ptr [ebp + 9], dh; pop ebx; ret; 
0x0009a750: add byte ptr [ebp + edx*8 - 0x77], dh; ret 0xe083; 
0x001328b5: add byte ptr [ebp - 0x10aa9379], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0003ad1b: add byte ptr [ebp - 0x1116feba], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00167344: add byte ptr [ebp - 0x137c79c4], cl; or al, 0x83; mov byte ptr [edx*2 + 0x28245c8b], 0xe8; dec eax; ret 0xfff5; 
0x00071dcb: add byte ptr [ebp - 0x157cf7bd], cl; xor byte ptr [ebx - 0x78f0f606], al; cmp eax, 0x89fffff2; ret 0xc083; 
0x0002bdbc: add byte ptr [ebp - 0x157cff8a], cl; add dword ptr [ecx], edi; ret 0xc73; 
0x000df292: add byte ptr [ebp - 0x1620a36e], cl; call dword ptr [ecx + 0x52]; 
0x000a1aae: add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x0009c525: add byte ptr [ebp - 0x1a09337d], cl; jmp dword ptr [ebp - 0x5d]; 
0x0009c531: add byte ptr [ebp - 0x1a0a737d], cl; call dword ptr [ecx + 0x50]; 
0x001581d6: add byte ptr [ebp - 0x23687240], al; sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00127ecc: add byte ptr [ebp - 0x268afea6], cl; mov eax, esi; pop ebx; pop esi; ret; 
0x00024ac2: add byte ptr [ebp - 0x33], dh; ret; 
0x000d8afd: add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x001a9e9c: add byte ptr [ebp - 0x3776ff8a], cl; ret; 
0x001a9f7f: add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00150b9f: add byte ptr [ebp - 0x387cfeba], cl; adc byte ptr [ecx], bh; ret 0x6674; 
0x00086290: add byte ptr [ebp - 0x39fc8b37], al; add al, byte ptr [eax]; pop ebx; ret; 
0x0013419b: add byte ptr [ebp - 0x39ffd98c], cl; inc edx; jmp dword ptr [eax]; 
0x00124f8a: add byte ptr [ebp - 0x3dbbf040], al; add esp, 0xc; ret; 
0x00170573: add byte ptr [ebp - 0x3f6af040], al; add esp, 0x1c; movzx eax, al; ret; 
0x001a79ec: add byte ptr [ebp - 0x3fceff8a], cl; pop edi; ret; 
0x00151cbc: add byte ptr [ebp - 0x41f0ff8a], cl; ret 0xe883; 
0x000f215d: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5a5d: add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0009a89b: add byte ptr [ebp - 0x46dfdbac], cl; pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x00129a51: add byte ptr [ebp - 0x47c58a40], al; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129971: add byte ptr [ebp - 0x47c58a40], al; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00115951: add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0026: add byte ptr [ebp - 0x47e7dbac], cl; add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012d039: add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0019ce2b: add byte ptr [ebp - 0x47ffd98c], cl; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19ce39; neg eax; ret; 
0x0007418b: add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x001620a7: add byte ptr [ebp - 0x4f7af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00155bcf: add byte ptr [ebp - 0x577af025], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0002981c: add byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00176ae9: add byte ptr [ebp - 0x5f], ah; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + edx], ecx; ret; 
0x00155083: add byte ptr [ebp - 0x64c5f7a], cl; call dword ptr [eax - 0x73]; 
0x0012ed63: add byte ptr [ebp - 0x659d379], cl; call dword ptr [eax - 0x18]; 
0x0010dff9: add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x000c49da: add byte ptr [ebp - 0x663ff7b], cl; call dword ptr [eax - 0x73]; 
0x000c4746: add byte ptr [ebp - 0x6640b7e], cl; call dword ptr [eax - 0x73]; 
0x000a7dcb: add byte ptr [ebp - 0x665f380], cl; call dword ptr [eax + 0x68]; 
0x000a78c2: add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x000a3916: add byte ptr [ebp - 0x666b77d], cl; call dword ptr [eax - 0x73]; 
0x000843d3: add byte ptr [ebp - 0x67caf7a], cl; call dword ptr [eax - 0x73]; 
0x0005b9b0: add byte ptr [ebp - 0x6861f7a], cl; call dword ptr [eax - 0x73]; 
0x00031d93: add byte ptr [ebp - 0x68c8b80], cl; call dword ptr [eax - 0x18]; 
0x0003135a: add byte ptr [ebp - 0x68ce379], cl; call dword ptr [eax - 0x73]; 
0x00027569: add byte ptr [ebp - 0x68fdb79], cl; call dword ptr [eax - 0x73]; 
0x00025e08: add byte ptr [ebp - 0x68ffb7f], cl; call dword ptr [eax - 0x73]; 
0x00024f55: add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00060664: add byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax + 0x68]; 
0x0016c168: add byte ptr [ebp - 0x69d617d], cl; call dword ptr [eax - 0x18]; 
0x0014ee46: add byte ptr [ebp - 0x6a3797d], cl; call dword ptr [eax - 0x73]; 
0x0014f8b8: add byte ptr [ebp - 0x6a3797e], cl; call dword ptr [eax - 0x73]; 
0x0014eca5: add byte ptr [ebp - 0x6a4087d], cl; call dword ptr [eax - 0x73]; 
0x0006076f: add byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [ebp + 0x50]; 
0x0002485d: add byte ptr [ebp - 0x6a9e97d], cl; call dword ptr [edi + 0x57]; 
0x0012c994: add byte ptr [ebp - 0x6ab4d62], cl; call dword ptr [ebx - 0x18]; 
0x001263ad: add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x00126393: add byte ptr [ebp - 0x6ad4c7d], cl; call dword ptr [ecx + 0x51]; 
0x001262f7: add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x001262dd: add byte ptr [ebp - 0x6af0f7d], cl; call dword ptr [ecx + 0x51]; 
0x0012738b: add byte ptr [ebp - 0x6af2b6d], cl; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x00126d73: add byte ptr [ebp - 0x6aff76d], cl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x00126241: add byte ptr [ebp - 0x6afff7d], cl; call dword ptr [edx + 0x52]; 
0x00126227: add byte ptr [ebp - 0x6b0357d], cl; call dword ptr [ecx + 0x51]; 
0x00124e05: add byte ptr [ebp - 0x6b53680], cl; jmp dword ptr [ebp - 0x75]; 
0x0011eab3: add byte ptr [ebp - 0x6b5d17a], cl; call dword ptr [eax - 0x18]; 
0x00110ae7: add byte ptr [ebp - 0x6b6cc79], cl; call dword ptr [eax - 0x73]; 
0x000f1d8b: add byte ptr [ebp - 0x6b87079], cl; call dword ptr [eax - 0x73]; 
0x0003a11e: add byte ptr [ebp - 0x6b9f655], cl; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x000a463d: add byte ptr [ebp - 0x6be6e79], cl; call dword ptr [eax - 0x73]; 
0x000a5d62: add byte ptr [ebp - 0x6be6e7b], cl; call dword ptr [eax - 0x73]; 
0x0009efd3: add byte ptr [ebp - 0x6be8879], cl; call dword ptr [eax - 0x73]; 
0x0009d9d6: add byte ptr [ebp - 0x6beea7f], cl; call dword ptr [eax - 0x73]; 
0x00096986: add byte ptr [ebp - 0x6bf8c7a], cl; call dword ptr [eax - 0x73]; 
0x00095b6c: add byte ptr [ebp - 0x6bf947a], cl; call dword ptr [eax - 0x73]; 
0x00093fb0: add byte ptr [ebp - 0x6c04579], cl; call dword ptr [eax - 0x73]; 
0x00092e5b: add byte ptr [ebp - 0x6c07f79], cl; call dword ptr [eax - 0x73]; 
0x00078a5a: add byte ptr [ebp - 0x6cce27a], cl; call dword ptr [eax - 0x73]; 
0x0018841f: add byte ptr [ebp - 0x6cd4179], cl; call dword ptr [eax + 0x6a]; 
0x000479d1: add byte ptr [ebp - 0x6cfab79], cl; call dword ptr [eax - 0x73]; 
0x0004e913: add byte ptr [ebp - 0x6cfb579], cl; call dword ptr [eax - 0x73]; 
0x0002888d: add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029bfe: add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x0002ced8: add byte ptr [ebp - 0x6d5457f], cl; call dword ptr [eax - 0x73]; 
0x0015c09c: add byte ptr [ebp - 0x6e77f02e], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00116d9f: add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x00080d8f: add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001a898b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; pop es; ret; 
0x001a89db: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push cs; ret; 
0x001a897b: add byte ptr [ebp - 0x72ffd98c], cl; inc ecx; push es; ret; 
0x001a903b: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push cs; ret; 
0x001a8fdb: add byte ptr [ebp - 0x72ffd98c], cl; inc edx; push es; ret; 
0x001a790b: add byte ptr [ebp - 0x72ffd98c], cl; pop es; pop edi; ret; 
0x0010c51c: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c46c: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5e4: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2d4: add byte ptr [ebp - 0x74d08a40], al; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x00129ca7: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c07: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c377: add byte ptr [ebp - 0x74d38a40], al; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00173df4: add byte ptr [ebp - 0x74d7dbb4], cl; push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x000a31e9: add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x00103f8b: add byte ptr [ebp - 0x74ffd98c], cl; or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x0008389a: add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00187705: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001489bd: add byte ptr [ebp - 0x75], ah; adc eax, 0; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x00124ee7: add byte ptr [ebp - 0x75], ah; sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a8a4: add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x000e7ba0: add byte ptr [ebp - 0x76e48b40], al; ret 0xf75b; 
0x0008e220: add byte ptr [ebp - 0x76ec8b40], al; dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x001842be: add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x000287bb: add byte ptr [ebp - 0x76ffd98c], cl; ret 0x29e9; 
0x000c767b: add byte ptr [ebp - 0x76ffd98c], cl; ret 0xc189; 
0x000920bb: add byte ptr [ebp - 0x76ffd98c], cl; ret 0xe283; 
0x0012f99b: add byte ptr [ebp - 0x76ffd98c], cl; ret 0xe2c1; 
0x000acefb: add byte ptr [ebp - 0x76ffd98c], cl; ret; 
0x000a25ef: add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00074183: add byte ptr [ebp - 0x77bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000ba47b: add byte ptr [ebp - 0x77ffd98c], cl; pop ss; pop edi; pop esi; pop ebx; ret; 
0x0008cdf6: add byte ptr [ebp - 0x7c1a8a0a], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0009e6e7: add byte ptr [ebp - 0x7c228b40], al; clc; add al, 0x74; fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x00144e68: add byte ptr [ebp - 0x7cbb8b40], al; in al, dx; add al, 0x89; ret; 
0x0014c7c8: add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x0014bbc8: add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x000b423f: add byte ptr [ebp - 0x7cc78a40], al; ret; 
0x000e7d93: add byte ptr [ebp - 0x7ccf8b40], al; in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x00138527: add byte ptr [ebp - 0x7cdb8b40], al; in al, dx; or byte ptr [ebx - 1], dl; jae 0x138563; call eax; 
0x0012ede2: add byte ptr [ebp - 0x7ce18b2e], al; in al, dx; or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x0002714d: add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x00061cc7: add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x0014f93d: add byte ptr [ebp - 0x7cf18a40], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00148cd5: add byte ptr [ebp - 0x7cf18b2e], al; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0005ad5f: add byte ptr [ebp - 0x7cf38b40], al; call 0x448366b; ret; 
0x0016cd38: add byte ptr [ebp - 0x7cf48b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000a0df4: add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x001706b5: add byte ptr [ebp - 0x7cf98b2e], al; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014e905: add byte ptr [ebp - 0x7cf98b40], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0011110b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or al, 0x83; ret; 
0x00123d5b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebp - 0x6a0367d], cl; call dword ptr [eax - 0x73]; 
0x0016c78b: add byte ptr [ebp - 0x7cffd98c], cl; in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000a3fab: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x000ab79b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x0004ea7b: add byte ptr [ebp - 0x7cffd98c], cl; ret 0xf01; 
0x000536db: add byte ptr [ebp - 0x7cffd98c], cl; ret; 
0x000ffbfb: add byte ptr [ebp - 0x7cffd98c], cl; rol byte ptr [ecx], 0x39; ret; 
0x001a353b: add byte ptr [ebp - 0x7cffd98c], cl; ror byte ptr [eax], 0x83; ret 0x8308; 
0x00198c2b: add byte ptr [ebp - 0x7effd98c], cl; ret; 
0x001050d2: add byte ptr [ebp - 0x8d68b40], al; shr byte ptr [eax - 0x5f7bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x001a757b: add byte ptr [ebp - 0x9ffd98c], cl; ret 0x7510; 
0x000a9b15: add byte ptr [ebp - 0xaaf237e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013aeb5: add byte ptr [ebp - 0xaaf337e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a9b65: add byte ptr [ebp - 0xab2437e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013af05: add byte ptr [ebp - 0xab2537e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a92e5: add byte ptr [ebp - 0xab5637e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013ae65: add byte ptr [ebp - 0xab5737e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00177c27: add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x00172267: add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x0015ad64: add byte ptr [ebp - 0xe36d379], cl; call dword ptr [eax + 0x6a]; 
0x0015b2a8: add byte ptr [ebp - 0xe36d37a], cl; call dword ptr [eax + 0x6a]; 
0x0012d253: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0003cd0d: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x000a0350: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x0010c294: add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003ccce: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b9a: add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000eaf41: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0013dc4f: add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009c698: add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x0014de3a: add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x000707b2: add byte ptr [ebx + 0x100955c], cl; ret; 
0x0012344b: add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x0009b4d3: add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x0007d9df: add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0016c6ef: add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00116584: add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00124332: add byte ptr [ebx + 0x11080], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x0012484e: add byte ptr [ebx + 0x11082], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x00194719: add byte ptr [ebx + 0x11740fe7], al; call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00192719: add byte ptr [ebx + 0x11740fe7], al; call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00109437: add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x0018369f: add byte ptr [ebx + 0x1182454], cl; ret 0xcdb8; 
0x000a5f2c: add byte ptr [ebx + 0x1202444], cl; ret 0x728d; 
0x00081fc0: add byte ptr [ebx + 0x1282444], cl; ret 0xe852; 
0x00182958: add byte ptr [ebx + 0x1442474], cl; ret; 
0x000342f4: add byte ptr [ebx + 0x17880], cl; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032e64: add byte ptr [ebx + 0x17880], cl; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x00176c67: add byte ptr [ebx + 0x17c83], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014eeb1: add byte ptr [ebx + 0x197f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00176d8f: add byte ptr [ebx + 0x19883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00061061: add byte ptr [ebx + 0x1a4c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0007db77: add byte ptr [ebx + 0x1a8483], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00176e1f: add byte ptr [ebx + 0x1a883], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008d717: add byte ptr [ebx + 0x1ab883], al; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x001a856f: add byte ptr [ebx + 0x1b720eea], al; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a958f: add byte ptr [ebx + 0x1b720eef], al; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a8c2f: add byte ptr [ebx + 0x1b7c0ec2], al; lea eax, [ecx + 0xe]; ret; 
0x0005b8cf: add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007cfb0: add byte ptr [ebx + 0x1b810c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00115762: add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011594a: add byte ptr [ebx + 0x1bc24b4], cl; add byte ptr [eax], al; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0019a92e: add byte ptr [ebx + 0x1c740fe7], al; call 0x1875fd; add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019992e: add byte ptr [ebx + 0x1c740fe7], al; call 0x1875fd; add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019894e: add byte ptr [ebx + 0x1c740fe7], al; call 0x1875fd; add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0014d52a: add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x00034bcd: add byte ptr [ebx + 0x1d880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0019670b: add byte ptr [ebx + 0x1f740fe7], al; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00184e03: add byte ptr [ebx + 0x1f7f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x0010bda2: add byte ptr [ebx + 0x207f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00041e02: add byte ptr [ebx + 0x207f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x00186221: add byte ptr [ebx + 0x217f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00180000: add byte ptr [ebx + 0x227f01f8], al; add esp, 8; pop ebx; ret; 
0x00040480: add byte ptr [ebx + 0x227f01fa], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016e876: add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x000dd576: add byte ptr [ebx + 0x247f01f8], al; add esp, 8; pop ebx; ret; 
0x00154f5d: add byte ptr [ebx + 0x257f01f8], al; add esp, 8; pop ebx; ret; 
0x00042bcb: add byte ptr [ebx + 0x277f01f8], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00092bad: add byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x0006061f: add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x001475f8: add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000e4b98: add byte ptr [ebx + 0x290c247c], cl; retf 0x490f; ret 0x1c8d; 
0x0006f4b9: add byte ptr [ebx + 0x2964247c], cl; ret; 
0x001228af: add byte ptr [ebx + 0x29], bl; ret 0xc085; 
0x001a855f: add byte ptr [ebx + 0x2b720dea], al; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a957f: add byte ptr [ebx + 0x2b720def], al; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a8c1f: add byte ptr [ebx + 0x2b7c0dc2], al; lea eax, [ecx + 0xd]; ret; 
0x0012bb5b: add byte ptr [ebx + 0x2f7f01f9], al; add esp, 8; pop ebx; ret; 
0x00094277: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c46: add byte ptr [ebx + 0x3108244c], cl; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0011f614: add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x001abef9: add byte ptr [ebx + 0x31102474], cl; fld xword ptr [ecx]; ret 0xe2c1; 
0x0015d632: add byte ptr [ebx + 0x31642454], cl; imul cl; leave; in eax, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00061231: add byte ptr [ebx + 0x317f01fa], al; add esp, 0x18; pop ebx; ret; 
0x00040c8e: add byte ptr [ebx + 0x34408b00], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000f2f75: add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x0012e374: add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2b4: add byte ptr [ebx + 0x367401ff], al; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0008fefb: add byte ptr [ebx + 0x377f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x00084b1f: add byte ptr [ebx + 0x389cfe0], al; pop ebx; pop esi; pop edi; ret; 
0x0002eaf5: add byte ptr [ebx + 0x39082444], cl; ret; 
0x0002a71e: add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0006f7c4: add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000a473e: add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a9667: add byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x000713d8: add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x000528fd: add byte ptr [ebx + 0x39102444], cl; ret; 
0x00171510: add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x0014d7d8: add byte ptr [ebx + 0x391c245c], cl; fmul dword ptr [edi]; pop dword ptr [ebx + 0x29000002]; ret; 
0x000a6de3: add byte ptr [ebx + 0x39242444], cl; ret; 
0x00145293: add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x00124631: add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x0014cfb5: add byte ptr [ebx + 0x396604ec], al; ret 0x470f; 
0x00109934: add byte ptr [ebx + 0x39782444], cl; ret 0x4f0f; 
0x001842b8: add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x001a854f: add byte ptr [ebx + 0x3b720bea], al; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a956f: add byte ptr [ebx + 0x3b720bef], al; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a8c0f: add byte ptr [ebx + 0x3b7c0bc2], al; lea eax, [ecx + 0xb]; ret; 
0x0010ba37: add byte ptr [ebx + 0x3b7f01f8], al; call dword ptr [esi]; 
0x0013198f: add byte ptr [ebx + 0x3f096], cl; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x00088517: add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x000a3be1: add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x000880be: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f87e: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x0007c8bd: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00085054: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x427bf037], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0008546e: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x000803f3: add byte ptr [ebx + 0x428b4856], cl; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x0007e4cd: add byte ptr [ebx + 0x428b4857], cl; or byte ptr [ebp + 0x393074c9], al; ret; 
0x0010d81f: add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016c78f: add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00172e4f: add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016ee37: add byte ptr [ebx + 0x438b08ec], al; add al, 0xff; je 0x16ee65; sbb al, 0x53; call dword ptr [eax]; 
0x001775df: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x001777de: add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17780c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x001744c0: add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0016d44f: add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00071dc8: add byte ptr [ebx + 0x438d0055], cl; or byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x00042511: add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x0008fcfe: add byte ptr [ebx + 0x4408b08], cl; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x62c], 0; ret; 
0x0003305f: add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000a6ddd: add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00041e3a: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006127a: add byte ptr [ebx + 0x448b10c4], al; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000d3db2: add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00089e5b: add byte ptr [ebx + 0x448d08ec], al; and al, 0x28; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00088614: add byte ptr [ebx + 0x448d08ec], al; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008376f: add byte ptr [ebx + 0x448d08ec], al; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b7a2: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008891e: add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000a1f69: add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x0004413a: add byte ptr [ebx + 0x450ffffa], al; ret 0x4489; 
0x000a4a05: add byte ptr [ebx + 0x45480], cl; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x000956e5: add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x00174f8d: add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00090347: add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000bdddf: add byte ptr [ebx + 0x470880e], cl; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0003a5f3: add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x000348e2: add byte ptr [ebx + 0x48b2440], cl; nop; ret; 
0x000348a2: add byte ptr [ebx + 0x48b2c40], cl; nop; ret; 
0x000feddc: add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000c50f0: add byte ptr [ebx + 0x48d14c4], al; cwde; pop ebx; pop esi; ret; 
0x000d430b: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d311c: add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x0013803f: add byte ptr [ebx + 0x4a8b01c0], al; add al, 0x83; ret 0x8518; 
0x001a853f: add byte ptr [ebx + 0x4b720aea], al; lea eax, [edi + 9]; pop edi; ret; 
0x001a955f: add byte ptr [ebx + 0x4b720aef], al; lea eax, [eax + 9]; pop edi; ret; 
0x001a8bff: add byte ptr [ebx + 0x4b7c0ac2], al; lea eax, [ecx + 0xa]; ret; 
0x00179277: add byte ptr [ebx + 0x4c890442], cl; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x00172199: add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174c19: add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00174249: add byte ptr [ebx + 0x4c894cc0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00155bd7: add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0010d27f: add byte ptr [ebx + 0x4e8d0234], cl; ljmp 0xf184:0xfefe183; add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x000d9c5f: add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x001773e8: add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x0017186d: add byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x001755bb: add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x00120886: add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x000a113f: add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a0c3f: add byte ptr [ebx + 0x528b046a], cl; or al, 0x83; ret; 
0x0012dc36: add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x000342fa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003498a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003495a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003485a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003482a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347fa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003473a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003479a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346aa: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003476a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003470a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003490a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346da: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347ca: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003467a: add byte ptr [ebx + 0x548b0204], cl; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0009055d: add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00040cef: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x0005359f: add byte ptr [ebx + 0x548b10c4], al; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00095274: add byte ptr [ebx + 0x548b684f], cl; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000f1207: add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00189727: add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000f8447: add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008aa8f: add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x00135ae4: add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0007cb87: add byte ptr [ebx + 0x568901ea], al; add al, 0x39; ret; 
0x0008aa15: add byte ptr [ebx + 0x568b0446], cl; or byte ptr [ecx], ch; ret 0xfa39; 
0x00135d10: add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x001769e2: add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x000884cb: add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x00160741: add byte ptr [ebx + 0x597f01f8], al; add esp, 4; pop ebx; pop esi; ret; 
0x00154431: add byte ptr [ebx + 0x597f01f8], al; pop ebx; pop esi; pop edi; ret; 
0x000a438f: add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x00172c67: add byte ptr [ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x000c128a: add byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x0012be83: add byte ptr [ebx + 0x5b108916], cl; pop esi; pop edi; ret; 
0x001a852f: add byte ptr [ebx + 0x5b7209ea], al; lea eax, [edi + 8]; pop edi; ret; 
0x001a954f: add byte ptr [ebx + 0x5b7209ef], al; lea eax, [eax + 8]; pop edi; ret; 
0x001a8bef: add byte ptr [ebx + 0x5b7c09c2], al; lea eax, [ecx + 9]; ret; 
0x0007d1b7: add byte ptr [ebx + 0x5d8b08ec], al; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000bde27: add byte ptr [ebx + 0x5e082444], cl; ret; 
0x0014820e: add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0002604f: add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00178def: add byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x00143a35: add byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x0003ecf9: add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00085a3b: add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0003deca: add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008fe3d: add byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00030419: add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00084270: add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0011edd0: add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x000234ca: add byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0016cefd: add byte ptr [ebx + 0x5e5b30c4], al; pop edi; ret; 
0x0016d029: add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x00026e66: add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c39d6: add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00047548: add byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0010e689: add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x000c45c0: add byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0010e7a0: add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0002f335: add byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x0007b81a: add byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x00092da3: add byte ptr [ebx + 0x5e8b1845], cl; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0011ff7d: add byte ptr [ebx + 0x5e], bl; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000d9da6: add byte ptr [ebx + 0x5e], bl; mov eax, ecx; ret; 
0x00103134: add byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; ret; 
0x0015048c: add byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x001398ff: add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x00114e72: add byte ptr [ebx + 0x5e], bl; pop edi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0002c161: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; jmp eax; 
0x001aae84: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00023400: add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003dd5a: add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c1a0f: add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x00024b77: add byte ptr [ebx + 0x5e], bl; ret; 
0x001a95af: add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x00131e3f: add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x00153af7: add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00144f0f: add byte ptr [ebx + 0x5f5e10c4], al; pop ebp; ret; 
0x0003ce74: add byte ptr [ebx + 0x5f], bl; ret; 
0x000fba88: add byte ptr [ebx + 0x6508245c], cl; call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x000b1f9f: add byte ptr [ebx + 0x66028901], cl; mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000435bc: add byte ptr [ebx + 0x674fff2], al; bsr eax, edx; xor eax, 0x1f; ret; 
0x000a0cd4: add byte ptr [ebx + 0x67650f8], al; ret; 
0x0009aff7: add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x0003e6fd: add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008cf28: add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0016e87c: add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0007b92b: add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000907db: add byte ptr [ebx + 0x6a0cec], al; call 0x8fd70; add esp, 0x1c; ret; 
0x0016c88b: add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x001a851f: add byte ptr [ebx + 0x6b7207ea], al; lea eax, [edi + 6]; pop edi; ret; 
0x001a953f: add byte ptr [ebx + 0x6b7207ef], al; lea eax, [eax + 6]; pop edi; ret; 
0x001a8bdf: add byte ptr [ebx + 0x6b7c07c2], al; lea eax, [ecx + 7]; ret; 
0x001882a0: add byte ptr [ebx + 0x73ff0cec], al; cmp al, ch; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001464d6: add byte ptr [ebx + 0x7422373c], al; ret; 
0x0012c7a5: add byte ptr [ebx + 0x7426023c], al; sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x000fb731: add byte ptr [ebx + 0x7426113c], al; or bh, byte ptr [eax - 1]; ret; 
0x00134fc1: add byte ptr [ebx + 0x74ff04ec], al; and al, 0x1c; push 0; push 0x2000004; call eax; 
0x0016c7c0: add byte ptr [ebx + 0x74ff08ec], al; and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x001883cf: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x187ac0; add esp, 0x18; pop ebx; ret; 
0x00042fff: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x0010be7f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00085a5f: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x1c; call 0x7b8c0; add esp, 0x18; pop ebx; ret; 
0x00127daf: add byte ptr [ebx + 0x74ff14ec], al; and al, 0x20; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00186123: add byte ptr [ebx + 0x7514245c], cl; push es; pop ebx; ret; 
0x000358f6: add byte ptr [ebx + 0x758b10c4], al; mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x0007ed8d: add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7eda3; push esi; call dword ptr [ebx + 0x2c]; 
0x001a8bcf: add byte ptr [ebx + 0x7b7c06c2], al; lea eax, [ecx + 6]; ret; 
0x000c856a: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000cb6ea: add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000a08a3: add byte ptr [ebx + 0x7c8b28ec], al; and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00089df0: add byte ptr [ebx + 0x7e39087e], cl; or al, 0xf; test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x0009a14b: add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a25b: add byte ptr [ebx + 0x8080], cl; add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x0009022a: add byte ptr [ebx + 0x8087], cl; add byte ptr [eax - 0x768c8af0], ch; ret 0xca83; 
0x0012d06f: add byte ptr [ebx + 0x84249c], cl; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0005af98: add byte ptr [ebx + 0x88901e9], al; mov eax, edx; add esp, 0xc; ret; 
0x000348dd: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003489d: add byte ptr [ebx + 0x8b0104], cl; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00032e6a: add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0012374f: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1237a0; call eax; 
0x00123893: add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x123938; call eax; 
0x00174f5c: add byte ptr [ebx + 0x8ec8306], cl; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016c7a8: add byte ptr [ebx + 0x8ec8307], cl; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00034bed: add byte ptr [ebx + 0x9080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0008f3b5: add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x00034bad: add byte ptr [ebx + 0x9880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0012d14e: add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003d544: add byte ptr [ebx + 0xa080], cl; add bh, al; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0002551d: add byte ptr [ebx + 0xa080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001876ff: add byte ptr [ebx + 0xa081], cl; add byte ptr [ebp - 0x75], ah; adc eax, 0; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00121d31: add byte ptr [ebx + 0xa0bd], cl; add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00091160: add byte ptr [ebx + 0xa7602fa], al; ret; 
0x001149b6: add byte ptr [ebx + 0xa82494], cl; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x001149bd: add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a857f: add byte ptr [ebx + 0xb720fea], al; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a959f: add byte ptr [ebx + 0xb720fef], al; lea eax, [eax + 0xe]; pop edi; ret; 
0x0009840f: add byte ptr [ebx + 0xb7401fa], al; mov eax, 0x16; ret; 
0x001a8c3f: add byte ptr [ebx + 0xb7c0fc2], al; lea eax, [ecx + 0xf]; ret; 
0x00129fc7: add byte ptr [ebx + 0xb7f01f8], al; add esp, 8; pop ebx; ret; 
0x0007dc1f: add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00114cde: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114c6f: add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x00132040: add byte ptr [ebx + 0xb], dh; mov eax, dword ptr [ecx + 0x47f4]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00114c7b: add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c192: add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000e7b8f: add byte ptr [ebx + 0xc75daf8], al; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0010cf3c: add byte ptr [ebx + 0xc7702fa], al; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0013cebd: add byte ptr [ebx + 0xc880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00033d45: add byte ptr [ebx + 0xc892404], cl; mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33d59; call eax; 
0x00044872: add byte ptr [ebx + 0xc8b10c4], al; and al, 0xe9; popfd; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00175abb: add byte ptr [ebx + 0xcec8300], cl; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0005ada6: add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00130448: add byte ptr [ebx + 0xe], bh; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0010a795: add byte ptr [ebx + 0xf00903c], al; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x0010d3ef: add byte ptr [ebx + 0xf142444], cl; xchg esp, eax; ret 0xd789; 
0x00115809: add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000fb4d1: add byte ptr [ebx + 0xf26033c], al; test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x0005fd37: add byte ptr [ebx + 0xf282474], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x000658fe: add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x001a1240: add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001893b7: add byte ptr [ebx + 0xf], bl; mov dh, 2; pop esi; pop edi; ret; 
0x00093c41: add byte ptr [ebx + 2], bh; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d6d5: add byte ptr [ebx + 2], bh; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0019048e: add byte ptr [ebx + 3], bh; call dword ptr gs:[0x10]; 
0x00130940: add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012c8ac: add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0002439e: add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x24373; call dword ptr [ebp - 0x38]; 
0x000ea8ff: add byte ptr [ebx - 0x1097f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x00086ad5: add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x00174a04: add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00175758: add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00089761: add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0016ca02: add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00183452: add byte ptr [ebx - 0x137d0000], ch; or al, 0x8d; or dword ptr [ebx + edi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0010d6e1: add byte ptr [ebx - 0x14373], cl; jmp dword ptr [ebp - 1]; 
0x0010d5a3: add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x001afde9: add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x001add1c: add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x0015b556: add byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffc; 
0x000a119f: add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x00137fe3: add byte ptr [ebx - 0x17701500], cl; ret; 
0x00137ae1: add byte ptr [ebx - 0x17a8f314], al; inc ebp; ret; 
0x0003308c: add byte ptr [ebx - 0x17a8f314], al; or al, byte ptr [0xc4830009]; adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x0014078f: add byte ptr [ebx - 0x17aaf314], al; mov bh, 0x3e; std; jmp dword ptr [ebp - 0x5f]; 
0x00087fcf: add byte ptr [ebx - 0x17afe714], al; xchg dword ptr [ebx], edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00085156: add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x0002729b: add byte ptr [ebx - 0x17aff314], al; sti; ret 9; 
0x0011870f: add byte ptr [ebx - 0x17aff314], al; xchg dword ptr [esi - 0x3b7c0006], ebp; adc byte ptr [ecx], bh; ret; 
0x00175e39: add byte ptr [ebx - 0x18], dl; mov ebp, 0x81000117; ret; 
0x00176c3c: add byte ptr [ebx - 0x18], dl; mov edx, 0x81000109; ret; 
0x0010bd4b: add byte ptr [ebx - 0x18], dl; stosd dword ptr es:[edi], eax; mov eax, 0xc3810007; ret 0x1310; 
0x0003827b: add byte ptr [ebx - 0x1c763], cl; inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000c3860: add byte ptr [ebx - 0x1c9b7d74], cl; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00031fee: add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x68cab7e]; call dword ptr [eax - 0x73]; 
0x000d39e4: add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x0010e0a0: add byte ptr [ebx - 0x24f6c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0008f735: add byte ptr [ebx - 0x2614ef3c], al; nop; nop; nop; endbr32; ret; 
0x00024f4d: add byte ptr [ebx - 0x2697ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00025813: add byte ptr [ebx - 0x2708ef3c], al; sbb eax, eax; add esp, 0xc; ret; 
0x00122c01: add byte ptr [ebx - 0x27768f3c], al; pop ebx; pop esi; pop edi; ret; 
0x00122ef3: add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0012264e: add byte ptr [ebx - 0x2776e73c], al; pop ebx; ret; 
0x00157abb: add byte ptr [ebx - 0x2776ef3c], al; call eax; 
0x000c64ac: add byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00127ba1: add byte ptr [ebx - 0x2776f73c], al; pop ebx; ret; 
0x00094d7b: add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x00090657: add byte ptr [ebx - 0x2d7aefa9], cl; je 0x90698; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00088698: add byte ptr [ebx - 0x2d7c0040], al; jmp dword ptr [ecx]; 
0x0010d66f: add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009adc9: add byte ptr [ebx - 0x2ef7dbac], cl; call 0xc03ab05d; ret; 
0x0017946f: add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0013d071: add byte ptr [ebx - 0x2f76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x001256bd: add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x0015318b: add byte ptr [ebx - 0x2f76fb3c], al; pop ebx; pop edi; ret; 
0x001086c4: add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000590af: add byte ptr [ebx - 0x35ff7b], al; jmp eax; 
0x000579b6: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d723e: add byte ptr [ebx - 0x361f7b], cl; dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000586b1: add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x000d7b18: add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00057e48: add byte ptr [ebx - 0x362743], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x000567e9: add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0005897c: add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000d73c1: add byte ptr [ebx - 0x362f43], cl; dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x000d5cd7: add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x000571bf: add byte ptr [ebx - 0x36337b], cl; inc dword ptr [eax - 0x7af09a07]; add dword ptr [eax + eax], edx; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000575af: add byte ptr [ebx - 0x363743], cl; dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x00059c11: add byte ptr [ebx - 0x36374b], cl; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00058de3: add byte ptr [ebx - 0x363763], cl; call dword ptr [eax - 1]; 
0x0005838d: add byte ptr [ebx - 0x363763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000574d5: add byte ptr [ebx - 0x36377b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d7fe2: add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36334b]; call dword ptr [edi - 1]; 
0x000d8cd4: add byte ptr [ebx - 0x364b43], cl; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x000d7002: add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x000d6076: add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000582be: add byte ptr [ebx - 0x36537b], al; call dword ptr [eax]; 
0x0005882b: add byte ptr [ebx - 0x365f7b], al; jmp eax; 
0x000d67af: add byte ptr [ebx - 0x366b7b], cl; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x000d62d8: add byte ptr [ebx - 0x366f7b], cl; inc dword ptr [ebx - 0x7bf0cfc8]; ret; 
0x00115b3e: add byte ptr [ebx - 0x37769f3c], al; pop ebx; pop esi; pop edi; ret; 
0x00070a32: add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x000711f2: add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0010dec7: add byte ptr [ebx - 0x3976c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000fd547: add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x00040c90: add byte ptr [ebx - 0x3b7ccbc0], cl; add al, 0x5b; pop esi; ret; 
0x000260f5: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x0016e917: add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0004318d: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000430fb: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004315f: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000430cd: add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x0005c67f: add byte ptr [ebx - 0x3d7cfbb6], cl; add al, 0x83; ret; 
0x00091d3f: add byte ptr [ebx - 0x3e2f76ed], cl; call 0x8938914d; clc; call dword ptr gs:[0x10]; 
0x0008f27d: add byte ptr [ebx - 0x3f7adbc0], cl; jne 0x8f290; ret; 
0x00124338: add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00177b03: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x177af0; add esp, 8; pop ebx; ret; 
0x0003c974: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc93: add byte ptr [ebx - 0x3f7aef3c], al; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x0012f6d0: add byte ptr [ebx - 0x3f7aef3c], al; js 0x12f6e0; add esp, 8; pop ebx; ret; 
0x00124854: add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x0010bc7f: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bb5f; call eax; 
0x0010bcbf: add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bbb2; call eax; 
0x0010bc1f: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bb5f; call eax; 
0x0010bcd7: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bbb2; call eax; 
0x001503ff: add byte ptr [ebx - 0x3f7afbc0], cl; je 0x15040c; cmp dword ptr [eax + 8], edx; jne 0x150400; ret; 
0x00094621: add byte ptr [ebx - 0x3fceef3c], al; add esp, 4; pop ebx; pop esi; ret; 
0x00042c06: add byte ptr [ebx - 0x3fceef3c], al; add esp, 8; pop ebx; ret; 
0x000945b9: add byte ptr [ebx - 0x3fceef3c], al; pop ebx; pop esi; pop edi; ret; 
0x00062047: add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00040d3e: add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x00060bf8: add byte ptr [ebx - 0x3fe6fe08], al; add esp, 0x1c; ret; 
0x00169ce0: add byte ptr [ebx - 0x41f0c7f4], cl; ret 0x44f6; 
0x0014001a: add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x0016809a: add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x0016ae50: add byte ptr [ebx - 0x41f0e7f4], cl; ret 0x44f6; 
0x000ac2bf: add byte ptr [ebx - 0x41f0fe40], al; adc al, 1; cmp edx, ebx; je 0xac2c0; pop ebx; ret; 
0x00190ebf: add byte ptr [ebx - 0x42], dh; call 0x1875fd; add ebx, 0x48299; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0006875d: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00069a6f: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00069c0d: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00069dff: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x000684d5: add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x00146147: add byte ptr [ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x0006dc55: add byte ptr [ebx - 0x45763], cl; inc dword ptr [ebx + 0x13e910c4]; ret; 
0x000607a8: add byte ptr [ebx - 0x46ab746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000fac3c: add byte ptr [ebx - 0x46f43], cl; dec dword ptr [ebp - 0x65f0779]; call dword ptr [eax - 0x73]; 
0x000f2f7f: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x000f2cdd: add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi - 1]; 
0x0003cd04: add byte ptr [ebx - 0x46f7dba4], cl; or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000606e1: add byte ptr [ebx - 0x4713746c], cl; clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00061a27: add byte ptr [ebx - 0x47afdb8c], cl; call dword ptr [ebx - 0x59]; 
0x0011e259: add byte ptr [ebx - 0x47dfdba4], cl; mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000fba1e: add byte ptr [ebx - 0x47fbdbb4], cl; add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfba30; ret; 
0x001a5c2f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a5c40; neg eax; ret; 
0x001a9d2f: add byte ptr [ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a9d40; neg eax; ret; 
0x0009084a: add byte ptr [ebx - 0x48], bl; or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0010ca4f: add byte ptr [ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0009a187: add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0006133e: add byte ptr [ebx - 0x48], dl; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011456e: add byte ptr [ebx - 0x48], dl; and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f60e: add byte ptr [ebx - 0x48], dl; dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x0012cd7e: add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012d0ce: add byte ptr [ebx - 0x48], dl; lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d34e: add byte ptr [ebx - 0x48], dl; les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003ccfe: add byte ptr [ebx - 0x48], dl; mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001221be: add byte ptr [ebx - 0x48], dl; mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120bbe: add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ecce: add byte ptr [ebx - 0x48], dl; or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e40e: add byte ptr [ebx - 0x48], dl; ret; 
0x001145de: add byte ptr [ebx - 0x48], dl; sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0011ff9e: add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122afe: add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012e1fe: add byte ptr [ebx - 0x48], dl; xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00140697: add byte ptr [ebx - 0x48f0fb14], al; ret; 
0x0013179f: add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x00072d3b: add byte ptr [ebx - 0x4ff73], cl; jmp dword ptr [ebp - 0x75]; 
0x00073656: add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007411d: add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00077d5b: add byte ptr [ebx - 0x51773], cl; call ecx; 
0x000757f3: add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x000733ef: add byte ptr [ebx - 0x53b73], cl; jmp dword ptr [ebp - 0x5f]; 
0x001814f4: add byte ptr [ebx - 0x5472f714], al; mov cl, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x00160a2c: add byte ptr [ebx - 0x57cdf3c], al; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00180107: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0009466e: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x0018007b: add byte ptr [ebx - 0x57cef3c], al; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x0012d3d4: add byte ptr [ebx - 0x57cf4ec], cl; je 0x12d433; pop ebx; pop esi; ret; 
0x000696e2: add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00069e71: add byte ptr [ebx - 0x58f63], cl; inc dword ptr [ebx - 0x7c72f314]; adc dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0006706f: add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00067cbf: add byte ptr [ebx - 0x59743], al; call dword ptr [eax]; 
0x00114007: add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65da779]; call dword ptr [eax + 0x68]; 
0x000f48a7: add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x00069f7e: add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x000f198c: add byte ptr [ebx - 0x5b37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f8fd7: add byte ptr [ebx - 0x5bb43], cl; dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x000f8bcc: add byte ptr [ebx - 0x5c37b], cl; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x00069702: add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000fc25e: add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x0006c37d: add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x00099311: add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000986fb: add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00121333: add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x001810b4: add byte ptr [ebx - 0x6972f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x00111575: add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x000ec3bf: add byte ptr [ebx - 0x6bf0a301], al; ret; 
0x0005089e: add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004992d: add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000ca030: add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0018150f: add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x00030186: add byte ptr [ebx - 0x6c72f714], al; jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x0016074f: add byte ptr [ebx - 0x6c72f714], al; pop esp; pushal; stc; call dword ptr [edx + 0x50]; 
0x001607f6: add byte ptr [ebx - 0x6e72f714], al; cwde; pushal; stc; call dword ptr [edx + 0x50]; 
0x0007c432: add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000a0ecb: add byte ptr [ebx - 0x6f72f314], al; js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x001ab094: add byte ptr [ebx - 0x71f08b06], al; ret; 
0x00093bda: add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x00177827: add byte ptr [ebx - 0x72acf714], al; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0002c577: add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [edx + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x00028f6b: add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x0002c59a: add byte ptr [ebx - 0x72b3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002c08e: add byte ptr [ebx - 0x72b3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x000caab5: add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0002ac70: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x0002a83d: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002db4f: add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [edx + esi*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b84b: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002887d: add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002b1cf: add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002a10b: add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0002e37e: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax + 0x68]; 
0x0002e0c9: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0002e3a1: add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00152e98: add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0005147f: add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x000c74b7: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7153: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4ccb: add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000a1644: add byte ptr [ebx - 0x72e3dba4], cl; push ebx; or dh, dh; ret 0xf0f; 
0x0009679a: add byte ptr [ebx - 0x72e3dba4], cl; sub esp, -0x7a; stc; call dword ptr [eax - 0x73]; 
0x000c504d: add byte ptr [ebx - 0x72e3dbac], cl; or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x0004a44e: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x0004d619: add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x00062b77: add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x0006eb5f: add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x6eb62; call dword ptr [eax - 0x73]; 
0x00116e2c: add byte ptr [ebx - 0x72efdbbc], cl; cmp bl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0008666a: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [ebx + eax*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00110ad7: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], esi; stc; call dword ptr [eax + 0x68]; 
0x001106d5: add byte ptr [ebx - 0x72f7db84], cl; xchg dword ptr [edx], esi; stc; call dword ptr [eax - 0x73]; 
0x000547bf: add byte ptr [ebx - 0x72fb6984], cl; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00092e4b: add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x000b7f5c: add byte ptr [ebx - 0x72fd76ff], cl; inc edx; add al, 0x5f; pop ebx; ret; 
0x000491b5: add byte ptr [ebx - 0x7374dbfc], cl; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x001a8bbf: add byte ptr [ebx - 0x73f0fa3e], al; xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a8b8f: add byte ptr [ebx - 0x73f0fe3e], al; mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x001a8a2d: add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00181d7f: add byte ptr [ebx - 0x7472f714], al; into; stc; call dword ptr [ecx - 0x77]; 
0x000a0657: add byte ptr [ebx - 0x749bdbb4], cl; je 0xa0683; add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d724: add byte ptr [ebx - 0x749bdbb4], cl; pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012e021: add byte ptr [ebx - 0x749fdba4], cl; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000df09f: add byte ptr [ebx - 0x749fdba4], cl; push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00120615: add byte ptr [ebx - 0x74c7dbac], cl; jl 0x120641; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x00090327: add byte ptr [ebx - 0x74dbdbbc], cl; pop eax; or al, 0xe8; mov esp, 0x3900060b; ret; 
0x000d0666: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000c9ce6: add byte ptr [ebx - 0x74dfdbbc], cl; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x00130390: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x001903fe: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013087e: add byte ptr [ebx - 0x74ebdbb4], cl; push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012d0d4: add byte ptr [ebx - 0x74efdbb4], cl; pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x001323ab: add byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x132250; add esp, 4; ret; 
0x0015b769: add byte ptr [ebx - 0x74f3db84], cl; push edi; add al, 0xf7; ret 0xfffd; 
0x00061344: add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00131457: add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a31df: add byte ptr [ebx - 0x74f7db84], cl; adc dword ptr [eax + 3], 0; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x000500f6: add byte ptr [ebx - 0x74f7dbbc], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000a0a2d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3589089]; add byte ptr [eax], al; ret; 
0x000a0a0d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x000a0abd: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3949089]; add byte ptr [eax], al; ret; 
0x000a0d6d: add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x3c749089]; add byte ptr [eax], al; ret; 
0x001503ed: add byte ptr [ebx - 0x74fbdbac], cl; sub byte ptr [eax - 0x7affffb2], 0xc0; jne 0x150407; ret; 
0x0009dacd: add byte ptr [ebx - 0x74fbdbb4], cl; and ah, 0x3b; add byte ptr [eax], al; test eax, eax; jne 0x9dae7; ret; 
0x000a0a4e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0x3fc], bh; jbe 0xa0a60; ret; 
0x000a0a8e: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [0xffff], bh; jbe 0xa0aa0; ret; 
0x000a0cce: add byte ptr [ebx - 0x74fbdbbc], cl; add byte ptr [ebx + 0x67650f8], al; ret; 
0x0014c121: add byte ptr [ebx - 0x74fbdbbc], cl; pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x001131e6: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00040754: add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115c39: add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00166e05: add byte ptr [ebx - 0x76a4e7ec], cl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000531bc: add byte ptr [ebx - 0x76a8eb3c], al; ret; 
0x00079882: add byte ptr [ebx - 0x76aff33c], al; ret; 
0x00070db0: add byte ptr [ebx - 0x76b3dbb4], cl; dec esp; and al, 4; jmp eax; 
0x0013da40: add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00105bda: add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x001b2994: add byte ptr [ebx - 0x76d3dbbc], cl; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x0002c4c4: add byte ptr [ebx - 0x76dbdb84], cl; ret 0xfa29; 
0x000aa23a: add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x0013e498: add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x0016c52e: add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0009a197: add byte ptr [ebx - 0x76ebdb84], cl; ret 0xca83; 
0x00143396: add byte ptr [ebx - 0x76ebdbbc], cl; ret 0xc085; 
0x0014f5bf: add byte ptr [ebx - 0x76efdb94], cl; ret 0x7e8d; 
0x0004955d: add byte ptr [ebx - 0x76efdbb4], cl; ret 0x1b8; 
0x000952ba: add byte ptr [ebx - 0x76f3dbac], cl; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00124295: add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x001b299f: add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x000b3b6c: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; pop ebx; ret; 
0x000b1d6f: add byte ptr [ebx - 0x76fd76ff], cl; clc; pop edi; ret; 
0x0007a035: add byte ptr [ebx - 0x776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000ac129: add byte ptr [ebx - 0x77], bl; clc; pop esi; pop edi; pop ebp; ret; 
0x00091147: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0017a552: add byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00079cbd: add byte ptr [ebx - 0x77], dl; ret; 
0x000405f5: add byte ptr [ebx - 0x77cc7fc], cl; add al, 0x74; ret 0xffb8; 
0x000744ec: add byte ptr [ebx - 0x77cef3c], al; dec dword ptr [edi]; test byte ptr [ebx], bh; sbb al, 0; add byte ptr [ecx], al; ret; 
0x00086098: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x001142ed: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f725: add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00175ad8: add byte ptr [ebx - 0x7872ef3c], al; into; stc; call dword ptr [eax - 0x73]; 
0x000eb807: add byte ptr [ebx - 0x7872f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00030b9f: add byte ptr [ebx - 0x7872f314], al; mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x00030a99: add byte ptr [ebx - 0x7872f714], al; je 0x30a9b; call dword ptr [eax + 0x56]; 
0x0009f94f: add byte ptr [ebx - 0x7872f714], al; pop esp; sub esi, esp; call dword ptr [eax - 0x73]; 
0x000a1c96: add byte ptr [ebx - 0x7872fb14], al; xor byte ptr [edx - 7], al; call dword ptr [eax + 0x53]; 
0x00093087: add byte ptr [ebx - 0x7874f314], al; sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x0012a527: add byte ptr [ebx - 0x7972fb14], al; in al, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0016cfa7: add byte ptr [ebx - 0x7972fb14], al; ret; 
0x000d5ce4: add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x001a91f4: add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0014a587: add byte ptr [ebx - 0x7a72f314], al; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00167515: add byte ptr [ebx - 0x7a72f314], al; test dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x00039ed4: add byte ptr [ebx - 0x7a72f714], al; aad 0x2e; stc; call dword ptr [eax + 0x53]; 
0x0013fdd7: add byte ptr [ebx - 0x7a72f714], al; sub ecx, edi; call dword ptr [eax + 0x53]; 
0x001552da: add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x00050d1f: add byte ptr [ebx - 0x7adfdbbc], cl; ror byte ptr [edi], 0x84; or dword ptr [eax + eax], eax; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0017a99b: add byte ptr [ebx - 0x7ae7dbac], cl; sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0010d28e: add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x001555e6: add byte ptr [ebx - 0x7aefdbac], cl; sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x0017f203: add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x0004aa7a: add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], esi; ret 0xfff9; 
0x00043f6f: add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x00034963: add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00034993: add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00114ed3: add byte ptr [ebx - 0x7bf0f107], al; ret; 
0x000b09d7: add byte ptr [ebx - 0x7bf0f108], al; call dword ptr [eax]; 
0x001a5104: add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a9652: add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0003e563: add byte ptr [ebx - 0x7bf0fe08], al; ret; 
0x001a4ba3: add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x000a6f86: add byte ptr [ebx - 0x7c0f20], al; or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000eabaa: add byte ptr [ebx - 0x7c3976e6], cl; ret 0x8304; 
0x000eacca: add byte ptr [ebx - 0x7c3e76c6], cl; ret 0x8304; 
0x000dd963: add byte ptr [ebx - 0x7c72f314], 0xf; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0003f167: add byte ptr [ebx - 0x7c72f314], al; and byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x0011bd4f: add byte ptr [ebx - 0x7c72f314], al; das; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001694c5: add byte ptr [ebx - 0x7c72f314], al; inc edx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x000ed977: add byte ptr [ebx - 0x7c72f314], al; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00183455: add byte ptr [ebx - 0x7c72f314], al; or al, 0xbb; stc; call dword ptr [eax - 0x18]; 
0x00148a3f: add byte ptr [ebx - 0x7c72f314], al; sbb al, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x0015451e: add byte ptr [ebx - 0x7c72f314], al; sub byte ptr [esi - 7], bl; call dword ptr [eax - 0x73]; 
0x000345a6: add byte ptr [ebx - 0x7c72f33c], al; xor byte ptr [esi], ch; stc; call dword ptr [eax + 0x57]; 
0x001261be: add byte ptr [ebx - 0x7c72f714], al; aad 0x4e; stc; call dword ptr [eax + 0x55]; 
0x001260e6: add byte ptr [ebx - 0x7c72f714], al; adc byte ptr [ebp - 7], cl; call dword ptr [eax + 0x55]; 
0x000dd33f: add byte ptr [ebx - 0x7c72f714], al; clc; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x0012616d: add byte ptr [ebx - 0x7c72f714], al; cmp cl, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x00126101: add byte ptr [ebx - 0x7c72f714], al; inc esi; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x001544fe: add byte ptr [ebx - 0x7c72f714], al; int 0x5d; stc; call dword ptr [eax - 1]; 
0x001260cb: add byte ptr [ebx - 0x7c72f714], al; iretd; dec esp; stc; call dword ptr [eax + 0x55]; 
0x0012611c: add byte ptr [ebx - 0x7c72f714], al; js 0x126171; stc; call dword ptr [eax + 0x55]; 
0x00123d5f: add byte ptr [ebx - 0x7c72f714], al; leave; pop edi; stc; call dword ptr [eax - 0x73]; 
0x00126152: add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x00126188: add byte ptr [ebx - 0x7c72f714], al; outsd dx, dword ptr [esi]; dec esi; stc; call dword ptr [eax + 0x55]; 
0x00126029: add byte ptr [ebx - 0x7c72f714], al; pop esi; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00126044: add byte ptr [ebx - 0x7c72f714], al; pop esp; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x00126095: add byte ptr [ebx - 0x7c72f714], al; push ebx; dec esp; stc; call dword ptr [eax + 0x55]; 
0x000fe0b7: add byte ptr [ebx - 0x7c72f714], al; push ss; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000dd902: add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax + 0x56]; 
0x00125657: add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x000301a4: add byte ptr [ebx - 0x7c72f714], al; test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x0009b76f: add byte ptr [ebx - 0x7c72fb14], al; in al, dx; in al, 0xe5; call dword ptr [eax - 0x73]; 
0x000a24ae: add byte ptr [ebx - 0x7c72fb14], al; pop esi; inc edx; stc; call dword ptr [eax + 0x56]; 
0x00171848: add byte ptr [ebx - 0x7c74f714], al; mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00050101: add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x000d0671: add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000491bf: add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9cf1: add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0012f9e6: add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x00044778: add byte ptr [ebx - 0x7cb3dbbc], cl; rol byte ptr [ecx], 0x39; ret 0x8c0f; 
0x0002d457: add byte ptr [ebx - 0x7ccbdbbc], cl; ret 0xc704; 
0x000b0537: add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x00050d2b: add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0010f33f: add byte ptr [ebx - 0x7cdfdbbc], cl; ret; 
0x0015a3b3: add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x0014da67: add byte ptr [ebx - 0x7ce3dbac], cl; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001ab6b1: add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x00116da7: add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0015a383: add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x0002cb0d: add byte ptr [ebx - 0x7cebdbac], cl; ret 0x8904; 
0x0015a31f: add byte ptr [ebx - 0x7cefdb8c], cl; ret 0x8301; 
0x001670a6: add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x0015a35f: add byte ptr [ebx - 0x7cefdbbc], cl; ret 0x3901; 
0x0005f3e0: add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x00102972: add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x001046ff: add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00106e0a: add byte ptr [ebx - 0x7cf7dbbc], cl; ret; 
0x00103f8f: add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004781f: add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0008f39e: add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x0009119f: add byte ptr [ebx - 0x7cfbdbbc], cl; pushal; or bl, bh; xor eax, eax; ret; 
0x001a948a: add byte ptr [ebx - 0x7df0f711], al; sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x000db8cf: add byte ptr [ebx - 0x7ecfdba4], cl; ret; 
0x0009c4ef: add byte ptr [ebx - 0x7f72e714], al; dec eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0013a0af: add byte ptr [ebx - 0x7f72e714], al; jnp 0x13a10e; stc; call dword ptr [eax - 0x18]; 
0x0003defb: add byte ptr [ebx - 0x7f72e714], al; les esi, ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0013b5bf: add byte ptr [ebx - 0x7f72e714], al; lodsb al, byte ptr [esi]; push edi; stc; call dword ptr [eax - 0x18]; 
0x0016aa0d: add byte ptr [ebx - 0x7f72eb14], al; insd dword ptr es:[edi], dx; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016b08d: add byte ptr [ebx - 0x7f72eb14], al; jns 0x16b0f8; stc; call dword ptr [eax + 0x6a]; 
0x0016a66d: add byte ptr [ebx - 0x7f72eb14], al; pop esi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00169fed: add byte ptr [ebx - 0x7f72eb14], al; push eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x001673fd: add byte ptr [ebx - 0x7f72eb14], al; test dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016b49d: add byte ptr [ebx - 0x7f72eb14], al; xchg dword ptr [ebx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016b76d: add byte ptr [ebx - 0x7f72eb14], al; xchg esp, eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0008d5c7: add byte ptr [ebx - 0x7f97f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x0016e90a: add byte ptr [ebx - 0x7f], dl; ret; 
0x0005c4c4: add byte ptr [ebx - 0x8b63], cl; dec dword ptr [edi]; dec esi; ret 0xec83; 
0x0005dfe0: add byte ptr [ebx - 0x8b6b], cl; dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x0005c1ff: add byte ptr [ebx - 0x9343], cl; dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x00082ce9: add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0017c191: add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000fb831: add byte ptr [ebx - 0xa1f7944], cl; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0007c934: add byte ptr [ebx - 0xa8fb14], al; jne 0x7c944; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d08b: add byte ptr [ebx - 0xa8fb14], al; jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0007ee7c: add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x000a73f2: add byte ptr [ebx - 0xa9f714], al; jae 0xa741e; call eax; 
0x0007e451: add byte ptr [ebx - 0xa9fb14], al; jne 0x7e461; push edx; call dword ptr [ebx + 0x1c]; 
0x00024e9f: add byte ptr [ebx - 0xaafb14], al; je 0x24ecb; inc eax; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x0007eb53: add byte ptr [ebx - 0xacfb14], al; jne 0x7eb3f; push esi; call dword ptr [eax + 0x2c]; 
0x0007ebe4: add byte ptr [ebx - 0xacfb14], al; jne 0x7ebd0; push esi; call dword ptr [eax + 0x2c]; 
0x0003f52f: add byte ptr [ebx - 0xaef714], al; je 0x3f55b; dec esp; call eax; 
0x0013706f: add byte ptr [ebx - 0xaff33c], al; jne 0x13702b; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013756c: add byte ptr [ebx - 0xaff33c], al; jne 0x137518; push ebx; call dword ptr [esi + 0x14]; 
0x000a757f: add byte ptr [ebx - 0xaff714], al; jae 0xa75ab; call edx; 
0x00142d37: add byte ptr [ebx - 0xbb7b], cl; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0009f943: add byte ptr [ebx - 0xf767f14], al; pop ebx; pop esi; pop edi; ret; 
0x0017c98d: add byte ptr [ebx - 0xf76cf3c], al; pop ebx; pop esi; pop edi; ret; 
0x00122f3f: add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x000c549c: add byte ptr [ebx - 0xf76eb3c], al; pop ebx; pop esi; ret; 
0x0014ae71: add byte ptr [ebx - 0xf76ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x000acca5: add byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x000ebb1e: add byte ptr [ebx - 0xfd77c4c], cl; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0012997a: add byte ptr [ebx - 1], bh; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0010f71b: add byte ptr [ebx - 1], dl; je 0x10f744; push 0x107aae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00029143: add byte ptr [ebx - 1], dl; je 0x2916c; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002970d: add byte ptr [ebx - 1], dl; je 0x29736; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x000302ec: add byte ptr [ebx - 7], dh; call dword ptr [eax - 0x73]; 
0x001844b8: add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x00034b8e: add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x00131e3b: add byte ptr [ebx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5b14c4], al; ret; 
0x000b99c1: add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9ae8: add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c295c: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00190cca: add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001926c4: add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192729: add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00173f46: add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x0008d377: add byte ptr [ebx], ch; push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x001b1e8d: add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0013044d: add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00124eee: add byte ptr [ecx + 0x100c249c], cl; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dbae3: add byte ptr [ecx + 0x10424bc], cl; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000c2956: add byte ptr [ecx + 0x1087a1c3], al; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00086253: add byte ptr [ecx + 0x10890848], cl; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x000c16b0: add byte ptr [ecx + 0x1099c3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c11a5: add byte ptr [ecx + 0x109ecec1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1180: add byte ptr [ecx + 0x109ef3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1160: add byte ptr [ecx + 0x109f13c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1143: add byte ptr [ecx + 0x109f30c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c10a4: add byte ptr [ecx + 0x109f4fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c1116: add byte ptr [ecx + 0x109f5dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1086: add byte ptr [ecx + 0x109f6dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c10ff: add byte ptr [ecx + 0x109f74c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c10e4: add byte ptr [ecx + 0x109f8fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1061: add byte ptr [ecx + 0x109f92c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c10c2: add byte ptr [ecx + 0x109fb1c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1037: add byte ptr [ecx + 0x109fbcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c101e: add byte ptr [ecx + 0x109fd5c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0ffd: add byte ptr [ecx + 0x109ff6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001210cc: add byte ptr [ecx + 0x10], bh; call dword ptr gs:[0x10]; 
0x000c0fd9: add byte ptr [ecx + 0x10a01ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0fbb: add byte ptr [ecx + 0x10a038c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c0f38: add byte ptr [ecx + 0x10a0bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00130f8e: add byte ptr [ecx + 0x10be85c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0013086e: add byte ptr [ecx + 0x10c5a5c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0013037e: add byte ptr [ecx + 0x10ca95c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x000bdd86: add byte ptr [ecx + 0x10d1edc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdd61: add byte ptr [ecx + 0x10d212c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdd37: add byte ptr [ecx + 0x10d23cc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdd1e: add byte ptr [ecx + 0x10d255c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdcfd: add byte ptr [ecx + 0x10d276c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdcd9: add byte ptr [ecx + 0x10d29ac1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdcbb: add byte ptr [ecx + 0x10d2b8c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdc9f: add byte ptr [ecx + 0x10d2d4c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012e408: add byte ptr [ecx + 0x10ea0bc2], al; add byte ptr [ebx - 0x48], dl; ret; 
0x000bbe10: add byte ptr [ecx + 0x10f08fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bbd2b: add byte ptr [ecx + 0x10f204c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bbd18: add byte ptr [ecx + 0x10f217c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bbcfc: add byte ptr [ecx + 0x10f233c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0012d248: add byte ptr [ecx + 0x10fbcbc2], al; add byte ptr [eax + 0x123], bh; call dword ptr gs:[0x10]; 
0x000bb205: add byte ptr [ecx + 0x10fc9ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb1e0: add byte ptr [ecx + 0x10fcbfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb1c0: add byte ptr [ecx + 0x10fcdfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb1a3: add byte ptr [ecx + 0x10fcfcc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb104: add byte ptr [ecx + 0x10fd1bc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bb176: add byte ptr [ecx + 0x10fd29c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb15f: add byte ptr [ecx + 0x10fd40c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb144: add byte ptr [ecx + 0x10fd5bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb122: add byte ptr [ecx + 0x10fd7dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb030: add byte ptr [ecx + 0x10fdefc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bb010: add byte ptr [ecx + 0x10fe0fc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bafeb: add byte ptr [ecx + 0x10fe34c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000ba710: add byte ptr [ecx + 0x11062fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba62b: add byte ptr [ecx + 0x1107a4c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba618: add byte ptr [ecx + 0x1107b7c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000ba5fc: add byte ptr [ecx + 0x1107d3c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9bc5: add byte ptr [ecx + 0x11117ac1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9ba0: add byte ptr [ecx + 0x11119fc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9b80: add byte ptr [ecx + 0x1111bfc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9b63: add byte ptr [ecx + 0x1111dcc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9ac4: add byte ptr [ecx + 0x1111fbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b9b36: add byte ptr [ecx + 0x111209c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9b1f: add byte ptr [ecx + 0x111220c1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9b04: add byte ptr [ecx + 0x11123bc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9ae2: add byte ptr [ecx + 0x11125dc1], al; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000b9a00: add byte ptr [ecx + 0x1112bfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b99e0: add byte ptr [ecx + 0x1112dfc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000b99bb: add byte ptr [ecx + 0x111304c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00124848: add byte ptr [ecx + 0x1185cbc2], al; add byte ptr [ebx + 0x11082], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x00123bfd: add byte ptr [ecx + 0x119216c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00122af8: add byte ptr [ecx + 0x11a31bc2], al; add byte ptr [ebx - 0x48], dl; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00120bb8: add byte ptr [ecx + 0x11c25bc2], al; add byte ptr [ebx - 0x48], dl; or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00180691: add byte ptr [ecx + 0x11ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011ff98: add byte ptr [ecx + 0x11ce7bc2], al; add byte ptr [ebx - 0x48], dl; sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00115c33: add byte ptr [ecx + 0x1271e0c6], al; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001131e0: add byte ptr [ecx + 0x129c33c6], al; add byte ptr [ebx - 0x75], dl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000fd434: add byte ptr [ecx + 0x13f9dfc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000fb0ea: add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x001544c2: add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004b168: add byte ptr [ecx + 0x14cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00187034: add byte ptr [ecx + 0x15cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001811c6: add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x001434fe: add byte ptr [ecx + 0x16cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0011575b: add byte ptr [ecx + 0x18c24ac], cl; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x000dae9f: add byte ptr [ecx + 0x18e85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000a1e35: add byte ptr [ecx + 0x19afdec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0011592d: add byte ptr [ecx + 0x19cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008f398: add byte ptr [ecx + 0x1ada7bc2], al; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x0008848b: add byte ptr [ecx + 0x1b4988c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00079cb7: add byte ptr [ecx + 0x1c315cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a24d1: add byte ptr [ecx + 0x1c829f2], cl; lds ebp, ptr [ecx]; ret 0x4589; 
0x0006105b: add byte ptr [ecx + 0x1dbdb8c3], al; add byte ptr [ebx + 0x1a4c83], cl; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00033705: add byte ptr [ecx + 0x20970ec5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000fb5b6: add byte ptr [ecx + 0x23683efa], al; xchg ecx, eax; jne 0xfb620; ret; 
0x000c8e34: add byte ptr [ecx + 0x24448bc2], cl; and byte ptr [ecx], bh; ror byte ptr [edi], 1; mov cs, word ptr [edi - 0x76ffffeb]; ret; 
0x000652a3: add byte ptr [ecx + 0x2444c7cf], cl; inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000873f6: add byte ptr [ecx + 0x247c8beb], cl; or al, 0x8d; xchg dword ptr [ecx], ecx; aas; stc; call dword ptr [eax + 0x56]; 
0x000f0d29: add byte ptr [ecx + 0x24c4830a], cl; pop ebx; pop esi; ret; 
0x001844bb: add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0014cd15: add byte ptr [ecx + 0x2bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0012ed5b: add byte ptr [ecx + 0x31242444], cl; shr byte ptr [edx], 0x8d; xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x000ea408: add byte ptr [ecx + 0x31282474], cl; not byte ptr [ebp - 0x18]; fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00178f69: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0x2a; cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; call ecx; 
0x00178e89: add byte ptr [ecx + 0x31382444], cl; rcl byte ptr [edi - 0x18], 0xa; cmpsd dword ptr [esi], dword ptr es:[edi]; hlt; call ecx; 
0x00175e4e: add byte ptr [ecx + 0x316c2444], cl; ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x000b3e5f: add byte ptr [ecx + 0x3518911], cl; pop ebx; ret; 
0x0010451d: add byte ptr [ecx + 0x388cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000626a6: add byte ptr [ecx + 0x391c246c], cl; ret; 
0x0006e566: add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000a4a0b: add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x00129577: add byte ptr [ecx + 0x39d8f7f0], cl; ret; 
0x0002cc2f: add byte ptr [ecx + 0x39f7890f], cl; ret; 
0x0009129c: add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x00069b30: add byte ptr [ecx + 0x40f63914], cl; jmp dword ptr [eax]; 
0x00108b61: add byte ptr [ecx + 0x43b60fc6], cl; add al, 0x89; ret 0xe283; 
0x000ac687: add byte ptr [ecx + 0x4428d02], cl; pop ebx; pop esi; ret; 
0x000c12ed: add byte ptr [ecx + 0x448b0750], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bde7a: add byte ptr [ecx + 0x448b0750], cl; and al, 8; pop esi; ret; 
0x000c130d: add byte ptr [ecx + 0x448b0850], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bde9a: add byte ptr [ecx + 0x448b0850], cl; and al, 8; pop esi; ret; 
0x000c13ed: add byte ptr [ecx + 0x448b0f48], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdf6a: add byte ptr [ecx + 0x448b0f48], cl; and al, 8; pop esi; ret; 
0x000c140d: add byte ptr [ecx + 0x448b1048], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdf8a: add byte ptr [ecx + 0x448b1048], cl; and al, 8; pop esi; ret; 
0x00160257: add byte ptr [ecx + 0x448b2434], cl; and al, 0x2c; call eax; 
0x00041862: add byte ptr [ecx + 0x44cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005ae70: add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x000b3e3f: add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000278c1: add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x00047ca8: add byte ptr [ecx + 0x45cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014bff3: add byte ptr [ecx + 0x46cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dd149: add byte ptr [ecx + 0x4708910], cl; pop ebx; pop esi; pop edi; ret; 
0x00070455: add byte ptr [ecx + 0x4acc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000813db: add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x0008e76e: add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x000dfcad: add byte ptr [ecx + 0x4c48310], cl; xor eax, eax; pop ebx; pop esi; ret; 
0x00122dc3: add byte ptr [ecx + 0x4c483d8], cl; pop ebx; pop esi; ret; 
0x000642e3: add byte ptr [ecx + 0x4ccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013c631: add byte ptr [ecx + 0x4f890457], cl; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000db955: add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000835c9: add byte ptr [ecx + 0x5052016a], bl; push ebx; call dword ptr [edi + 0x40]; 
0x00174313: add byte ptr [ecx + 0x51890841], cl; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0008e153: add byte ptr [ecx + 0x52], dl; call 0x1827a0; add esp, 0x1c; ret; 
0x0007c745: add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00121d37: add byte ptr [ecx + 0x5401], bh; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000799ac: add byte ptr [ecx + 0x548b0850], cl; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00177761: add byte ptr [ecx + 0x56cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ba4cf: add byte ptr [ecx + 0x57896617], cl; add al, 0x5f; pop esi; pop ebx; ret; 
0x0007c582: add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00081998: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00081848: add byte ptr [ecx + 0x5b102474], cl; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00192330: add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x000ba71f: add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000ac5c7: add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00088217: add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x000550b2: add byte ptr [ecx + 0x5e5b047b], cl; pop edi; pop ebp; ret; 
0x00034c54: add byte ptr [ecx + 0x5e5b1814], cl; ret; 
0x000550e6: add byte ptr [ecx + 0x5f5e5b16], cl; pop ebp; ret; 
0x00036200: add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x00115f4e: add byte ptr [ecx + 0x5f5e5bd0], cl; pop ebp; ret; 
0x001813ae: add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00066374: add byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x00132bd2: add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000ef8e6: add byte ptr [ecx + 0x5f5e5be8], cl; pop ebp; ret; 
0x00039898: add byte ptr [ecx + 0x5f5e5bf0], cl; pop ebp; ret; 
0x00061dcc: add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0005f813: add byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x0008fee9: add byte ptr [ecx + 0x62886], cl; add byte ptr [ecx], bh; ret 0x5c72; 
0x000ac6ab: add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x001aba7c: add byte ptr [ecx + 0x6c89112c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000bdfaa: add byte ptr [ecx + 0x70881048], cl; adc al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00093069: add byte ptr [ecx + 0x74888dfa], cl; add al, 0; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x000c377b: add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x000dae42: add byte ptr [ecx + 0x75e85052], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115217: add byte ptr [ecx + 0x7a892072], cl; and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000973f4: add byte ptr [ecx + 0x7b9fb], cl; add byte ptr [eax], al; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x001b2f02: add byte ptr [ecx + 0x7c89113c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x001aede0: add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0012ccc8: add byte ptr [ecx + 0x7c891a3c], cl; sbb al, byte ptr [ebx + eax*4]; ret; 
0x0012c8b1: add byte ptr [ecx + 0x7fffffff], bh; mov esi, 5; call dword ptr gs:[0x10]; 
0x000985a3: add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008fbcd: add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x000903c3: add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00093225: add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00184785: add byte ptr [ecx + 0x81], bh; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008fc89: add byte ptr [ecx + 0x81], bh; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00098640: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903f2: add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960cd: add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000ee063: add byte ptr [ecx + 0x89cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015f44f: add byte ptr [ecx + 0x8bcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00062694: add byte ptr [ecx + 0x8fcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000916c6: add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000a1aa8: add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x0008a1ba: add byte ptr [ecx + 0x9cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003b8cd: add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x0007c73f: add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00175c4b: add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0015b33f: add byte ptr [ecx + 0xa1d8b7], cl; add byte ptr [ecx], bh; ret 0xe74; 
0x0007dd0c: add byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001771d7: add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x001811c0: add byte ptr [ecx + 0xbbc53c3], al; add byte ptr [ecx + 0x168ec], al; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x00027eeb: add byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ea46d: add byte ptr [ecx + 0xc], bh; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00043a86: add byte ptr [ecx + 0xccc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001544bc: add byte ptr [ecx + 0xe8957c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015440d: add byte ptr [ecx + 0xe8a06c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00046fdc: add byte ptr [ecx + 0xecc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0014e787: add byte ptr [ecx + 0xee68cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00079417: add byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x001463e7: add byte ptr [ecx + 0xf6a2cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00036f18: add byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00098034: add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00189ede: add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097b29: add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009841f: add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x000977f0: add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000c2914: add byte ptr [ecx + eax + 0x40], dh; pop edi; pop esi; ret; 
0x000c2770: add byte ptr [ecx + eax + 0x40], dh; pop edi; ret; 
0x000c3652: add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x000544a4: add byte ptr [ecx + eax*2 - 0x7d], dh; ret; 
0x00138be1: add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x001738e9: add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00173905: add byte ptr [ecx - 0x13b7b], cl; call dword ptr [eax - 0x18]; 
0x001544c8: add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000fb0f0: add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x00078b84: add byte ptr [ecx - 0x1603c7ac], cl; ret 0xffa3; 
0x001811cc: add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x000cd31e: add byte ptr [ecx - 0x16cfdbbc], cl; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001ac7db: add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x001888f2: add byte ptr [ecx - 0x17a9afae], bl; les ebx, ptr [edi - 0x11]; jmp dword ptr [ecx]; 
0x00142f7d: add byte ptr [ecx - 0x17dbdba4], cl; adc dword ptr [edx], eax; out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00095e04: add byte ptr [ecx - 0x2dcef7b0], cl; mov eax, edx; ret; 
0x0007b553: add byte ptr [ecx - 0x33333307], al; or al, 0xf; mov ds, word ptr [ebx - 0x76ffffff]; ret; 
0x00131995: add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000986ee: add byte ptr [ecx - 0x3600f785], al; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00058e17: add byte ptr [ecx - 0x361f73], cl; dec dword ptr [ebx - 0x363763]; call dword ptr [eax - 0x73]; 
0x00059686: add byte ptr [ecx - 0x362773], cl; dec dword ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x000d7d1b: add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d870c: add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x00058b17: add byte ptr [ecx - 0x36336b], cl; call dword ptr [eax - 0x75]; 
0x0017a47d: add byte ptr [ecx - 0x3776f3b0], cl; pop ebx; ret; 
0x0017a43d: add byte ptr [ecx - 0x3776f3b0], cl; ret; 
0x000a017e: add byte ptr [ecx - 0x38d3dbac], cl; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071c0f: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070e5d: add byte ptr [ecx - 0x38fbdbb4], cl; inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00155294: add byte ptr [ecx - 0x3b7ceefc], cl; add al, 0x5b; pop esi; ret; 
0x0008e7c1: add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x0005ac85: add byte ptr [ecx - 0x3b7cf7a6], cl; add al, 0x5b; pop esi; ret; 
0x00099825: add byte ptr [ecx - 0x3fcee3be], cl; pop ebx; ret; 
0x00091394: add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x0014b9c7: add byte ptr [ecx - 0x44f7b], cl; call dword ptr [edi - 0x18]; 
0x000f1de9: add byte ptr [ecx - 0x46f7b], cl; dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x000dadff: add byte ptr [ecx - 0x4717afae], bl; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003da24: add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130945: add byte ptr [ecx - 0x47e7dbbc], cl; jne 0x13094d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012a17c: add byte ptr [ecx - 0x4937b], cl; call dword ptr [eax - 0x18]; 
0x00141f7e: add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x000754d1: add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x00131487: add byte ptr [ecx - 0x4fb7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00066711: add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006a67b: add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x00066633: add byte ptr [ecx - 0x5a373], cl; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x0008f194: add byte ptr [ecx - 0x5c9adfb0], cl; jl 0x8f19c; add byte ptr [eax], al; ret; 
0x0008f1cb: add byte ptr [ecx - 0x5c9af3b0], cl; js 0x8f1d3; add byte ptr [eax], al; ret; 
0x000666e7: add byte ptr [ecx - 0x60373], cl; dec dword ptr [edi]; inc ebp; ret; 
0x0002f83e: add byte ptr [ecx - 0x7287dbbc], cl; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x001690d6: add byte ptr [ecx - 0x72a7dbbc], cl; cmp esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0004f14f: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501c2: add byte ptr [ecx - 0x72afdbbc], cl; test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x0011dc41: add byte ptr [ecx - 0x72b7dbbc], cl; or esp, 4; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x0003fa7b: add byte ptr [ecx - 0x72bbdbbc], cl; test esp, edi; sub eax, esp; call dword ptr [eax - 0x73]; 
0x00027b86: add byte ptr [ecx - 0x72cbdbac], cl; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x00187e6d: add byte ptr [ecx - 0x72cfdbbc], cl; jl 0x187e99; xor byte ptr [edi - 0x18], dl; jl 0x187e6b; jmp dword ptr [ebp - 0x75]; 
0x00049275: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481a6: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004b662: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6de: add byte ptr [ecx - 0x72d3dbbc], cl; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x0003f82b: add byte ptr [ecx - 0x72d7dbbc], cl; and dword ptr [edx], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x000a29a8: add byte ptr [ecx - 0x72dfdbbc], cl; xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000a256e: add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x000a1d75: add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0005e1f1: add byte ptr [ecx - 0x7483dbb4], cl; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0012c2aa: add byte ptr [ecx - 0x7497dbbc], cl; and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0008f18a: add byte ptr [ecx - 0x749ae3b0], cl; adc eax, 0x78; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x001223ef: add byte ptr [ecx - 0x74b3dbac], cl; push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0013b256: add byte ptr [ecx - 0x74bbdb8c], cl; je 0x13b282; push 0x3d838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0012de51: add byte ptr [ecx - 0x74c3db8c], cl; je 0x12de7d; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001578c2: add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000dee8f: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd40: add byte ptr [ecx - 0x74e3dbac], cl; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008326e: add byte ptr [ecx - 0x74efdb8c], cl; inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0002e063: add byte ptr [ecx - 0x74f3db94], cl; jl 0x2e08f; adc byte ptr [ecx - 0x76c3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0010bfd0: add byte ptr [ecx - 0x74f3dbac], cl; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017588e: add byte ptr [ecx - 0x757c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x00150b0e: add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x00080147: add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x000e9227: add byte ptr [ecx - 0x7693dba4], cl; ret; 
0x0002d557: add byte ptr [ecx - 0x769fdbbc], cl; ret 0xbde9; 
0x000c5fb3: add byte ptr [ecx - 0x76a7dbac], cl; ret 0x448b; 
0x0012278b: add byte ptr [ecx - 0x76b3dba4], cl; ret; 
0x00030538: add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a8a3c: add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x0008b168: add byte ptr [ecx - 0x76c7dba4], cl; ret; 
0x0004f15a: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501cd: add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x000db8c4: add byte ptr [ecx - 0x76cbdba4], cl; ret; 
0x001578cd: add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000726c8: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000cfdd1: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x8d2e; 
0x000d0762: add byte ptr [ecx - 0x76cfdbbc], cl; ret 0xb0e9; 
0x000a26bc: add byte ptr [ecx - 0x76d3dba4], cl; ret; 
0x0016cdd8: add byte ptr [ecx - 0x76d7dba4], cl; ret; 
0x0009df48: add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x000c8c69: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x448b; 
0x000ccf73: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x7ce9; 
0x000cc5af: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0x8d2e; 
0x000c9dd6: add byte ptr [ecx - 0x76d7dbbc], cl; ret 0xcce9; 
0x000a6d2d: add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x0009bc27: add byte ptr [ecx - 0x76dfdba4], cl; ret; 
0x0007168a: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x00049280: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481b1: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e9: add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x00173458: add byte ptr [ecx - 0x76e3dba4], cl; ret; 
0x00091aca: add byte ptr [ecx - 0x76e3dbb4], cl; sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x0003052a: add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0x77e8243c]; mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000a559f: add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x000400d8: add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x000a15e7: add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x00041a20: add byte ptr [ecx - 0x76efdbb4], cl; ret; 
0x0009472a: add byte ptr [ecx - 0x76f3dbbc], cl; ret 0xc889; 
0x000ccbb8: add byte ptr [ecx - 0x76f7dbac], cl; ret 0xf129; 
0x00171591: add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00027bb2: add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00095c9b: add byte ptr [ecx - 0x77cf7b6], cl; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00131493: add byte ptr [ecx - 0x78721bbb], cl; add dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x000233d0: add byte ptr [ecx - 0x7872dbfc], cl; stc; call dword ptr [esi + 0x53]; 
0x001248ab: add byte ptr [ecx - 0x79721bbb], cl; les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x00104b82: add byte ptr [ecx - 0x7aabdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0016723f: add byte ptr [ecx - 0x7c2e7623], cl; ret; 
0x000298e7: add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x0014d56d: add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x0007abdc: add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x0003733f: add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x000e033f: add byte ptr [ecx - 0x7cc7dbbc], cl; inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x0006f7ac: add byte ptr [ecx - 0x7cdbdbac], cl; ret 0x8904; 
0x0009b56f: add byte ptr [ecx - 0x7ce3dbac], cl; ret; 
0x00186fda: add byte ptr [ecx - 0x7cef79a4], cl; rol byte ptr [ecx], 0x83; ret 0x8308; 
0x001770c7: add byte ptr [ecx - 0x7cf3dbac], cl; in al, dx; or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x001708db: add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x00185e7f: add byte ptr [ecx - 0x7cf769b4], cl; ret 0x8d01; 
0x0016c86b: add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x000cf02c: add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c866a: add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00040bc0: add byte ptr [ecx - 0x7f], bl; ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00142889: add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x0010dc66: add byte ptr [ecx - 0x8b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000973fb: add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000a5c7b: add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x000a58b6: add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x001b1e93: add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x0016c037: add byte ptr [ecx - 0xa9f3ba], cl; je 0x16c063; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0017e9e6: add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x000d4de7: add byte ptr [ecx - 0xf76f7b0], cl; pop ebx; pop esi; ret; 
0x0003f1f1: add byte ptr [ecx - 0xffc2ac], cl; jae 0x3f1fd; call eax; 
0x0010d679: add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000c336b: add byte ptr [ecx - 1], bh; cmovb eax, ecx; ret; 
0x0007f82f: add byte ptr [ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000a9c4c: add byte ptr [ecx*4 - 0x940d36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bcc: add byte ptr [ecx*4 - 0x948736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a927c: add byte ptr [ecx*4 - 0x94de36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa8dc: add byte ptr [ecx*4 - 0x957f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0005ada3: add byte ptr [ecx], 0; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00168097: add byte ptr [ecx], 0; add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x00148a3c: add byte ptr [ecx], 0; add byte ptr [ebx - 0x7c72f314], al; sbb al, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000c35a8: add byte ptr [ecx], ah; ret 0x2474; 
0x00031930: add byte ptr [ecx], ah; ret; 
0x0007db93: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000903bf: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x0019e86b: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edi], cl; test edx, ecx; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x000902c4: add byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x00034b8b: add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x00130451: add byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001220a9: add byte ptr [ecx], al; add byte ptr [eax], al; mov word ptr [eax + 0x16], dx; ret; 
0x000c34d7: add byte ptr [ecx], al; add byte ptr [eax], al; or cl, cl; jne 0xc34e1; xor eax, eax; ret; 
0x0006061c: add byte ptr [ecx], al; add byte ptr [eax], al; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00034837: add byte ptr [ecx], al; add byte ptr [eax], al; ret; 
0x000c3427: add byte ptr [ecx], al; add byte ptr [eax], al; sub eax, edx; ret; 
0x0012c992: add byte ptr [ecx], al; add byte ptr [ebp - 0x6ab4d62], cl; call dword ptr [ebx - 0x18]; 
0x0007db7d: add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00091217: add byte ptr [ecx], al; add esp, 4; pop esi; pop edi; ret; 
0x001389e4: add byte ptr [ecx], al; call eax; 
0x00138ee0: add byte ptr [ecx], al; call ecx; 
0x00138c1a: add byte ptr [ecx], al; call edx; 
0x000c1773: add byte ptr [ecx], al; clc; add eax, ecx; pop edi; ret; 
0x0013e59c: add byte ptr [ecx], al; fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a1c1c: add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000a1a11: add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000a9c0c: add byte ptr [ecx], al; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af6c: add byte ptr [ecx], al; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x00185673: add byte ptr [ecx], al; ret 0x21eb; 
0x00101f48: add byte ptr [ecx], al; ret 0x4489; 
0x0014de3e: add byte ptr [ecx], al; ret 0x5052; 
0x000fcf9f: add byte ptr [ecx], al; ret 0xec83; 
0x0006358d: add byte ptr [ecx], al; ret; 
0x000cd363: add byte ptr [ecx], al; ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000ca241: add byte ptr [ecx], al; ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x0003bd0f: add byte ptr [ecx], al; ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x001b1e0a: add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000c382b: add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x0015b821: add byte ptr [ecx], bh; inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x00029317: add byte ptr [ecx], bh; lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x0011b95b: add byte ptr [ecx], bh; ret 0x1772; 
0x00145265: add byte ptr [ecx], bh; ret 0x1988; 
0x00027afa: add byte ptr [ecx], bh; ret 0x420f; 
0x0003a762: add byte ptr [ecx], bh; ret 0x430f; 
0x000dcc05: add byte ptr [ecx], bh; ret 0x470f; 
0x00122fad: add byte ptr [ecx], bh; ret 0x4e0f; 
0x00097047: add byte ptr [ecx], bh; ret 0x4f0f; 
0x0014ec17: add byte ptr [ecx], bh; ret 0x5473; 
0x0008feef: add byte ptr [ecx], bh; ret 0x5c72; 
0x00099a76: add byte ptr [ecx], bh; ret 0x6574; 
0x0009931a: add byte ptr [ecx], bh; ret 0x6974; 
0x0009898d: add byte ptr [ecx], bh; ret 0x7e74; 
0x00089dfc: add byte ptr [ecx], bh; ret 0x820f; 
0x0006ae05: add byte ptr [ecx], bh; ret 0x840f; 
0x00097e39: add byte ptr [ecx], bh; ret 0x850f; 
0x00150bfd: add byte ptr [ecx], bh; ret 0xa875; 
0x000a9e98: add byte ptr [ecx], bh; ret 0xc072; 
0x000a9f55: add byte ptr [ecx], bh; ret 0xc372; 
0x000ef285: add byte ptr [ecx], bh; ret 0xd675; 
0x0013eff7: add byte ptr [ecx], bh; ret 0xe072; 
0x0015b345: add byte ptr [ecx], bh; ret 0xe74; 
0x000394e9: add byte ptr [ecx], bh; ret; 
0x001323da: add byte ptr [ecx], bh; retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x00153c4f: add byte ptr [ecx], bh; retf 0xec75; add esp, 8; pop ebx; ret; 
0x0010e27b: add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0004a2fe: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x0013ebcc: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0007abb4: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x00159abe: add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x00176c5b: add byte ptr [ecx], bh; sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x0013ec67: add byte ptr [ecx], bh; sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x00091827: add byte ptr [ecx], bh; salc; jae 0x91868; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00024abc: add byte ptr [ecx], bh; xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000dba87: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000db201: add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000fd1d2: add byte ptr [ecx], ch; aad 0x89; fnstcw word ptr [ecx]; ret; 
0x00100f13: add byte ptr [ecx], ch; fadd dword ptr [ecx]; ret 0x86eb; 
0x000c6109: add byte ptr [ecx], ch; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000aa289: add byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000d4315: add byte ptr [ecx], ch; ret 0x328b; 
0x000570fb: add byte ptr [ecx], ch; ret 0x3b8; 
0x000e3520: add byte ptr [ecx], ch; ret 0x448b; 
0x000e6b75: add byte ptr [ecx], ch; ret 0x468b; 
0x000e4457: add byte ptr [ecx], ch; ret 0x478b; 
0x000a36cc: add byte ptr [ecx], ch; ret 0x48d; 
0x000ee909: add byte ptr [ecx], ch; ret 0x4be; 
0x0004d39b: add byte ptr [ecx], ch; ret 0x5152; 
0x000e4efd: add byte ptr [ecx], ch; ret 0x748d; 
0x000d3126: add byte ptr [ecx], ch; ret 0xa8b; 
0x000e1f0a: add byte ptr [ecx], ch; ret 0xbe0f; 
0x0013c2b1: add byte ptr [ecx], ch; ret 0xc031; 
0x0004a27b: add byte ptr [ecx], ch; ret 0xcb29; 
0x0002f629: add byte ptr [ecx], ch; ret 0xd089; 
0x000dc793: add byte ptr [ecx], ch; ret 0xd129; 
0x000adbb9: add byte ptr [ecx], ch; ret 0xd301; 
0x0006b278: add byte ptr [ecx], ch; ret 0xd389; 
0x000aeb97: add byte ptr [ecx], ch; ret 0xd601; 
0x000aae79: add byte ptr [ecx], ch; ret 0xd701; 
0x000a85cb: add byte ptr [ecx], ch; ret 0xd801; 
0x00025265: add byte ptr [ecx], ch; ret 0xe3d3; 
0x000e749b: add byte ptr [ecx], ch; ret 0xf089; 
0x000dfb76: add byte ptr [ecx], ch; ret 0xf889; 
0x00074b6c: add byte ptr [ecx], ch; ret 0xfa39; 
0x00029b29: add byte ptr [ecx], ch; ret 0xfa83; 
0x000306c8: add byte ptr [ecx], ch; ret; 
0x000e383d: add byte ptr [ecx], ch; retf 0x490f; ret 0xc101; 
0x0003bddd: add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7f05; or eax, ecx; ret; 
0x00031e57: add byte ptr [ecx], cl; ret 0x840f; 
0x00031df1: add byte ptr [ecx], cl; ret 0x850f; 
0x001ade87: add byte ptr [ecx], cl; ret 0xbc89; 
0x00099c1d: add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000d4c77: add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00154031: add byte ptr [ecx], dh; fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x0012af8f: add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00115781: add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x000931d5: add byte ptr [ecx], dh; fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00083bdf: add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000901b9: add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x00098645: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0009147c: add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903f7: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00189ee3: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091ba3: add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a968: add byte ptr [ecx], dh; leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000432ff: add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00095718: add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009e24c: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a62c3: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00094ea6: add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x000a639a: add byte ptr [ecx], dh; rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x00137fd7: add byte ptr [ecx], dh; rol byte ptr [ebp - 0x74698a0a], cl; cmp dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x001877af: add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x00159f87: add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0004aabf: add byte ptr [ecx], dh; rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0010ba2f: add byte ptr [ecx], dh; rol byte ptr [edi + 0x3fec87], 0; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x00049ce2: add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00094f09: add byte ptr [ecx], dh; sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00090e15: add byte ptr [ecx], dh; sal bl, 0xa5; pop esi; pop edi; ret; 
0x0003e05f: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x00042db1: add byte ptr [ecx], dh; sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0010d6da: add byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00131063: add byte ptr [ecx], dh; test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018146f: add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00097dab: add byte ptr [ecx], dh; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012cd7c: add byte ptr [ecx], dl; add byte ptr [ebx - 0x48], dl; inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001892ac: add byte ptr [edi + 0x11], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0008ad05: add byte ptr [edi + 0x16], dh; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007dc19: add byte ptr [edi + 0x1a8082], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0008d7b9: add byte ptr [edi + 0x1ab482], al; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x0003f5f8: add byte ptr [edi + 0x1fa8317], al; jg 0x3f6c0; call eax; 
0x0008002c: add byte ptr [edi + 0x21], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x0008a61a: add byte ptr [edi + 0x23], dh; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008be90: add byte ptr [edi + 0x25], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00088014: add byte ptr [edi + 0x29], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0007da5d: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080373: add byte ptr [edi + 0x29], dh; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00081b92: add byte ptr [edi + 0x2b], dh; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00130384: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x00130874: add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001768f9: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0003370b: add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x42]; 
0x000813c0: add byte ptr [edi + 0x35], dh; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c685: add byte ptr [edi + 0x38], dh; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00079942: add byte ptr [edi + 0x3b], dh; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00088d3d: add byte ptr [edi + 0x40], dh; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000883fb: add byte ptr [edi + 0x42], dh; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00152430: add byte ptr [edi + 0x53], dl; call edx; 
0x0008a4f1: add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0008bde6: add byte ptr [edi + 0x57], dh; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0007ff35: add byte ptr [edi + 0x58], dh; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x000b3921: add byte ptr [edi + 0x5b], bl; ret; 
0x000250b3: add byte ptr [edi + 0x5d], bl; jmp eax; 
0x00154bc2: add byte ptr [edi + 0x5d], bl; ret; 
0x000b9bdf: add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9bc4: add byte ptr [edi + 0x5e], bl; ret; 
0x0008827b: add byte ptr [edi + 0x62], dh; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00089887: add byte ptr [edi + 0x66], dh; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00088e23: add byte ptr [edi + 0x72], dh; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0007bdd9: add byte ptr [edi + 0x7c], dh; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x000912a2: add byte ptr [edi + 0xb], dh; ret; 
0x0011f6e7: add byte ptr [edi + 0xf], bl; inc edi; ret 0x66c3; 
0x000d9d44: add byte ptr [edi + 2], bh; neg eax; ret; 
0x001a35b4: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a0d24: add byte ptr [edi + 2], dh; neg eax; add esp, 4; pop ebx; ret; 
0x0019e674: add byte ptr [edi + 2], dh; neg eax; pop ebp; ret; 
0x001a52e4: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a4d84: add byte ptr [edi + 2], dh; neg eax; pop edi; pop ebx; ret; 
0x0019ce34: add byte ptr [edi + 2], dh; neg eax; ret; 
0x001a590a: add byte ptr [edi + 3], bh; neg eax; ret; 
0x0013a18a: add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x001a5c35: add byte ptr [edi + 8], bh; neg eax; ret; 
0x001a9c44: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d9d14: add byte ptr [edi + 9], bh; neg eax; pop edi; pop esi; ret; 
0x001b09f3: add byte ptr [edi + ecx], al; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x000dfff2: add byte ptr [edi + ecx], al; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x00155bdd: add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001a9524: add byte ptr [edi - 0x73000000], 0x40; add al, 0x5f; ret; 
0x001a8504: add byte ptr [edi - 0x73000000], 0x47; add al, 0x5f; ret; 
0x001736ba: add byte ptr [edi - 0x75], dl; inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000a7126: add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x0002e40c: add byte ptr [edi], bl; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax + 0x68]; 
0x001768f6: add byte ptr [edi], ch; add byte ptr [edi + 0x31], dl; call dword ptr [esi - 0x18]; 
0x0005ab2e: add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x00154d26: add byte ptr [edi], ch; je 0x154d8e; mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154dae: add byte ptr [edi], ch; je 0x154e16; mov byte ptr [ebx + 0x6f68], 0; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x000e4fa7: add byte ptr [edi], cl; dec ecx; ret 0xc8d; 
0x0005712c: add byte ptr [edi], cl; dec edi; ret 0x48d; 
0x00144cd0: add byte ptr [edi], cl; dec edi; ret; 
0x0010e042: add byte ptr [edi], cl; dec esi; ret 0x15e9; 
0x00104f5f: add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0009dbf1: add byte ptr [edi], cl; dec esi; ret 0x8389; 
0x0003e87a: add byte ptr [edi], cl; dec esi; ret; 
0x00104cbb: add byte ptr [edi], cl; dec esp; ret; 
0x0012797e: add byte ptr [edi], cl; inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0009daf2: add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000e8226: add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x00091198: add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x000dca33: add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x00099f1e: add byte ptr [edi], cl; inc edi; ret 0x2ec3; 
0x00095297: add byte ptr [edi], cl; inc edi; ret 0x4489; 
0x000a0cf5: add byte ptr [edi], cl; inc edi; ret 0x8188; 
0x0009a802: add byte ptr [edi], cl; inc edi; ret 0x948b; 
0x00095353: add byte ptr [edi], cl; inc edi; ret 0xc483; 
0x0013f62f: add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0004272f: add byte ptr [edi], cl; inc edx; ret 0x748d; 
0x000daa42: add byte ptr [edi], cl; inc edx; ret 0xc501; 
0x0009848c: add byte ptr [edi], cl; inc esp; ret 0x118b; 
0x000c3c59: add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c3b49: add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c478a: add byte ptr [edi], cl; inc esp; ret 0x4489; 
0x00043738: add byte ptr [edi], cl; inc esp; ret 0x66c3; 
0x000c4d33: add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000a8e48: add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000316c1: add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x000c3c0e: add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0014a6ef: add byte ptr [edi], cl; inc esp; ret; 
0x00140716: add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0014d428: add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00185a2d: add byte ptr [edi], cl; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00042e0a: add byte ptr [edi], cl; mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x001132af: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0x113284; pop ebx; ret; 
0x000f103f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf1014; pop ebx; ret; 
0x000f3b4f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf3b24; pop ebx; ret; 
0x000f493f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf4914; pop ebx; ret; 
0x000f746f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf7444; pop ebx; ret; 
0x000f827f: add byte ptr [edi], cl; mov dh, 0x10; test dl, dl; je 0xf8254; pop ebx; ret; 
0x001a3f44: add byte ptr [edi], cl; mov dh, 0x12; sub eax, edx; ret; 
0x00108ae7: add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0010ace4: add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0019e5d8: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019cdcf: add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019cddf: add byte ptr [edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00159f77: add byte ptr [edi], cl; mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x00071bd3: add byte ptr [edi], cl; mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0005eef5: add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x0013f097: add byte ptr [edi], cl; mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0015b8bf: add byte ptr [edi], cl; mov dh, 0x5a; or dh, dh; ret; 
0x0013fcaf: add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x00042d29: add byte ptr [edi], cl; mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x0019e538: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019cd7f: add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x00151341: add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e5b7f], cs; call dword ptr [eax - 0x73]; 
0x00097bb6: add byte ptr [edi], cl; mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x00098311: add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000c1fff: add byte ptr [edi], cl; mov ebp, 0x30ea83c0; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1fef: add byte ptr [edi], cl; mov ebp, 0x40ea83c0; add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x000c18a4: add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00063228: add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0006f25b: add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x000c1cff: add byte ptr [edi], cl; mov esp, 0x5ff801c0; ret; 
0x000c102f: add byte ptr [edi], cl; mov esp, 0x65d9e8d2; or al, 0; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1d2f: add byte ptr [edi], cl; mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000bdd0f: add byte ptr [edi], cl; mov esp, 0x83ce01d2; ret 0x2910; 
0x000bdd2f: add byte ptr [edi], cl; mov esp, 0x98d9e8d2; or al, 0; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00048b0f: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0011586b: add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00042dbc: add byte ptr [edi], cl; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00104f28: add byte ptr [edi], cl; sahf; ret 0xd201; 
0x000dfd2b: add byte ptr [edi], cl; sahf; ret 0xd329; 
0x0005183f: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x000c566d: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x000d3384: add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret; 
0x001a50fe: add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a3caf: add byte ptr [edi], cl; test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x001a96af: add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001a965f: add byte ptr [edi], cl; test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x000444bb: add byte ptr [edi], cl; test byte ptr [eax - 0x7cfffffc], bl; ret 0x3101; 
0x0018511c: add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x0003ebbd: add byte ptr [edi], cl; test byte ptr [ecx - 0x7c000008], bl; rol byte ptr [ecx], 0x89; ret; 
0x000a24a8: add byte ptr [edi], cl; test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x001a39ca: add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000b4b42: add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00096974: add byte ptr [edi], cl; test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x001850d3: add byte ptr [edi], cl; test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x001087dc: add byte ptr [edi], cl; test byte ptr [esi - 0x7c000006], dh; into; call dword ptr [edi + 0x57]; 
0x001a9606: add byte ptr [edi], cl; test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000b4aec: add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001a964c: add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x0010e3bc: add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x001a47af: add byte ptr [edi], cl; test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a40af: add byte ptr [edi], cl; test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x00184cf5: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a03fc: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], ebx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012dd84: add byte ptr [edi], cl; test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a5b6c: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000000], edi; ret; 
0x001a485a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a467a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a414a: add byte ptr [edi], cl; test dword ptr [ebp + 0x5b000008], esi; ret; 
0x001a44a4: add byte ptr [edi], cl; test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00110ca7: add byte ptr [edi], cl; test dword ptr [ebp - 0x74fffff1], esp; jl 0x110cd5; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x0014a0f4: add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00122648: add byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], ecx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001a4276: add byte ptr [edi], cl; test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x0010a799: add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00175c45: add byte ptr [edi], cl; test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x001a437e: add byte ptr [edi], cl; test dword ptr [ecx + 0x5b000006], eax; ret; 
0x001a5ae0: add byte ptr [edi], cl; test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000c42fa: add byte ptr [edi], cl; test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001a24ae: add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0016d023: add byte ptr [edi], cl; test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a42f3: add byte ptr [edi], cl; test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x000e2558: add byte ptr [edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0011edca: add byte ptr [edi], cl; test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x00179469: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], ebp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0010e576: add byte ptr [edi], cl; test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x000419e1: add byte ptr [edi], cl; test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x0014d524: add byte ptr [edi], cl; test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x000d4a9e: add byte ptr [edi], cl; test ebp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0019deaa: add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x0010dff3: add byte ptr [edi], cl; test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x0010e683: add byte ptr [edi], cl; test ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x0010e79a: add byte ptr [edi], cl; test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0019e86f: add byte ptr [edi], cl; test edx, ecx; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x001a4f5f: add byte ptr [edi], cl; test edx, ecx; salc; int1; call dword ptr [ebx - 0x18]; 
0x00186596: add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0007b79c: add byte ptr [edi], cl; xchg dword ptr [0x83000001], ecx; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x0012920c: add byte ptr [edi], cl; xchg dword ptr [0xdb000001], ecx; test al, 0xc; ret 0xfff9; 
0x0008a4e9: add byte ptr [edi], cl; xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0007ee76: add byte ptr [edi], cl; xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0007d085: add byte ptr [edi], cl; xchg dword ptr [ecx + eax], edx; add byte ptr [ebx - 0xa8fb14], al; jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0008c188: add byte ptr [edi], cl; xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007b925: add byte ptr [edi], cl; xchg dword ptr [edx + eax], esp; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00082ce3: add byte ptr [edi], cl; xchg dword ptr [esi - 0x7cfffffd], eax; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008aa89: add byte ptr [edi], cl; xchg eax, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0008c3cf: add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x00159f8f: add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x00055a33: add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x00055a9b: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc083; 
0x000db72c: add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000ff0b4: add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x0009877c: add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x000475a6: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea81; 
0x0004aac7: add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005ceec: add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000fd538: add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x00188c2a: add byte ptr [edi], cl; xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x000df261: add byte ptr [edi], cl; xchg edx, eax; ret 0xc281; 
0x000e1bdd: add byte ptr [edi], cl; xchg esi, eax; ret 0xc931; 
0x00089e55: add byte ptr [edi], cl; xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x000469a1: add byte ptr [edi], cl; xchg esp, eax; ret 0x38e9; 
0x00064844: add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x000842ac: add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x0007b988: add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b967: add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0003c8d0: add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x000fd137: add byte ptr [edi], cl; xchg esp, eax; ret; 
0x00187b1d: add byte ptr [edi], cl; xchg esp, edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x000ddfe7: add byte ptr [edi], cl; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x000fb612: add byte ptr [edx + 0x20], bh; cmovne eax, edx; ret; 
0x000fb62a: add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000281fc: add byte ptr [edx + 0x50], dl; call 0x98690; add esp, 0x1c; ret; 
0x00089fd9: add byte ptr [edx + 0x50], dl; mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x000838b2: add byte ptr [edx + 0x50], dl; push esi; call dword ptr [ebx + 0x40]; 
0x00174f4c: add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0016c7f9: add byte ptr [edx + 0x59], bl; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c3a29: add byte ptr [edx + 0x59], bl; push ebx; push dword ptr [edi]; call esi; 
0x000ba0df: add byte ptr [edx + 0x5f178816], cl; pop esi; pop ebx; ret; 
0x0012432d: add byte ptr [edx + 0x64], bh; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016d150: add byte ptr [edx + 0x6a], dl; add al, 0x53; call dword ptr [eax]; 
0x00098811: add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a19: add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b5a: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bdc: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c03: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092176: add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001a3f3f: add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x00188064: add byte ptr [edx + 0xf], dh; xchg esp, eax; ret; 
0x000901c0: add byte ptr [edx + 1], bh; call dword ptr gs:[0x10]; 
0x0018478a: add byte ptr [edx + 1], bh; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00087147: add byte ptr [edx + 1], bh; mov eax, edx; ret; 
0x00150487: add byte ptr [edx + 1], bh; pop ebx; pop esi; mov eax, edx; ret; 
0x0008fc8e: add byte ptr [edx + 1], bh; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000923fc: add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097da6: add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd7: add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009999c: add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4f: add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008a333: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083e83: add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00085d88: add byte ptr [edx + 1], ch; push 0; push dword ptr [esp + 0x1c]; call 0x7ec60; add esp, 0x1c; ret; 
0x0009b888: add byte ptr [edx + 1], ch; push eax; call 0x8f990; add esp, 0x2c; ret; 
0x0008fbd2: add byte ptr [edx + 2], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fc41: add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00083c3a: add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x001318e1: add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x0003cd53: add byte ptr [edx + 8], ch; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00163179: add byte ptr [edx + eax], 0x81; ret; 
0x0014fa71: add byte ptr [edx + ecx - 0x7d], dh; inc eax; or byte ptr [ecx], al; je 0x14fa9d; add esp, 0xc; ret; 
0x000fb74d: add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000b1e2f: add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x0008e97f: add byte ptr [edx - 0x77], dl; ret; 
0x001a38a4: add byte ptr [edx - 1], bh; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x00150477: add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x001602ec: add byte ptr [edx - 1], dl; inc dword ptr [ebx - 0x3f7aef3c]; je 0x160300; sub esp, 0xc; push esi; call eax; 
0x000325a9: add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x00164b94: add byte ptr [edx - 7], ah; call dword ptr [eax - 0x18]; 
0x000c2db2: add byte ptr [edx - 9], al; ret 3; 
0x0002c640: add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0004927d: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481ae: add byte ptr [edx], 0; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x00194699: add byte ptr [edx], 0x5a; cli; jmp dword ptr [esi - 0x70]; 
0x00192699: add byte ptr [edx], 0x7a; cli; jmp dword ptr [esi - 0x70]; 
0x00190c99: add byte ptr [edx], 0x94; cli; jmp dword ptr [esi - 0x70]; 
0x00171588: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [0xac], al; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00177c23: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x00172263: add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x00034c51: add byte ptr [edx], al; add byte ptr [eax], al; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x000b3d7c: add byte ptr [edx], al; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00034747: add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x00134d84: add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00135aed: add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x00134fce: add byte ptr [edx], al; call eax; 
0x00134e87: add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x0009c6fe: add byte ptr [edx], al; ret; 
0x0010c428: add byte ptr [edx], ch; call 0x10c3f0; add esp, 0x1c; ret; 
0x000fba62: add byte ptr [edx], ch; call 0x8f110; add esp, 0x2c; ret; 
0x000c5231: add byte ptr [edx], ch; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000fba60: add byte ptr [edx], ch; push 0; call 0x8f110; add esp, 0x2c; ret; 
0x000c522f: add byte ptr [edx], ch; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000fba5e: add byte ptr [edx], ch; push 0; push 0; call 0x8f110; add esp, 0x2c; ret; 
0x00127a98: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00123a61: add byte ptr [edx], ch; push 0; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00025d6f: add byte ptr [edx], ch; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0009bbf7: add byte ptr [edx], ch; push 1; push eax; call 0x8f990; add esp, 0x2c; ret; 
0x0003cd51: add byte ptr [edx], ch; push 8; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x001766b4: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x176520; add esp, 0x10; add esp, 0xc; ret; 
0x00127a9a: add byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00123a63: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x000351ee: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x00094eea: add byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x00189899: add byte ptr [edx], ch; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x00025d71: add byte ptr [edx], ch; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007bddf: add byte ptr [edx], ch; push ebp; call dword ptr [esi + 0x40]; 
0x000894b4: add byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x24]; 
0x00188eee: add byte ptr [edx], ch; push ebx; call dword ptr [edi + 0x24]; 
0x00088e29: add byte ptr [edx], ch; push ebx; call dword ptr [esi + 0x40]; 
0x0008e151: add byte ptr [edx], ch; push ecx; push edx; call 0x1827a0; add esp, 0x1c; ret; 
0x00178340: add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0008a4ef: add byte ptr [edx], ch; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00089fd7: add byte ptr [edx], ch; push edx; push eax; mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x000838b0: add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0016e810: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0008a337: add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x40]; 
0x0008cf2d: add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00083e87: add byte ptr [edx], ch; push esi; call dword ptr [ebx + 0x40]; 
0x00083c3e: add byte ptr [edx], ch; push esi; call dword ptr [edi + 0x40]; 
0x000984fe: add byte ptr [esi + 0x31], dl; not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012dc79: add byte ptr [esi + 0x53], dl; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00122326: add byte ptr [esi + 0x53], dl; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0019e67f: add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x00053d7c: add byte ptr [esi + 0x5f], bl; ret; 
0x0014f77c: add byte ptr [esi + 0x68fff95c], 0x56; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x0014f802: add byte ptr [esi + 0x68fff95c], 0xf5; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x00176818: add byte ptr [esi + 0xd], bh; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000b615f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b1d9f: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b1fbf: add byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3e9f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eaf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e8f: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ebf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ecf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3edf: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3eef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000ba4df: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi - 1]; pop edi; pop esi; pop ebx; ret; 
0x000ba4ef: add byte ptr [esi + 0xf], ah; adc eax, dword ptr [edi]; pop edi; pop esi; pop ebx; ret; 
0x000c144f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfcc: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xe]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c146f: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfec: add byte ptr [esi + 0xf], ah; adc ebx, dword ptr [eax + 0xf]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c132f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdebc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 5]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c134f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdedc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 6]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c136f: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdefc: add byte ptr [esi + 0xf], ah; adc ecx, dword ptr [eax + 7]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be02c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be06f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be08f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c148f: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be00c: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be050: add byte ptr [esi + 0xf], ah; adc edx, dword ptr [eax + 0x10]; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a560f: add byte ptr [esi + 0xf], ah; cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000c1f9d: add byte ptr [esi + 0xf], ah; je 0xc1feb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x00190d6f: add byte ptr [esi + 0xf], ah; outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x001944bb: add byte ptr [esi + 0xf], ah; salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000c1c11: add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x000c1eea: add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1f0f: add byte ptr [esi + 0xf], ah; xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000a0a59: add byte ptr [esi + 4], dh; ret; 
0x00094282: add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003cb60: add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00093903: add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0003cc03: add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093064: add byte ptr [esi + 8], bh; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001484aa: add byte ptr [esi + eax - 0x80], dh; js 0x1484b1; sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x000fb711: add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0014ca37: add byte ptr [esi - 0x18], dl; ret 0xffb8; 
0x0014c9eb: add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x00154407: add byte ptr [esi - 0x18], dl; sti; xor dword ptr [ebx], eax; add byte ptr [ecx + 0xe8a06c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0015c0a4: add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005ac6d: add byte ptr [esi - 0x70], ah; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013bd9d: add byte ptr [esi - 0x70], ah; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0016e7cd: add byte ptr [esi - 0x70], ah; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000c245d: add byte ptr [esi - 0x70], ah; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1fbd: add byte ptr [esi - 0x70], ah; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0002605d: add byte ptr [esi - 0x70], ah; endbr32; call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0018718d: add byte ptr [esi - 0x70], ah; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0016c46d: add byte ptr [esi - 0x70], ah; endbr32; ret; 
0x000baa4d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b1f4d: add byte ptr [esi - 0x70], ah; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0009b2ed: add byte ptr [esi - 0x70], ah; mov dword ptr [eax + 4], edx; ret; 
0x00071b8d: add byte ptr [esi - 0x70], ah; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000915ed: add byte ptr [esi - 0x70], ah; mov eax, 0x16; ret; 
0x0010c59d: add byte ptr [esi - 0x70], ah; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0008735d: add byte ptr [esi - 0x70], ah; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0019e66d: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x19e679; neg eax; pop ebp; ret; 
0x001a3d5d: add byte ptr [esi - 0x70], ah; mov eax, 1; ja 0x1a3d69; neg eax; pop ebp; ret; 
0x000d9f5d: add byte ptr [esi - 0x70], ah; mov eax, 2; ret; 
0x000944cd: add byte ptr [esi - 0x70], ah; mov eax, 3; add esp, 0xc; ret; 
0x000d9f6d: add byte ptr [esi - 0x70], ah; mov eax, 3; ret; 
0x000d9f7d: add byte ptr [esi - 0x70], ah; mov eax, 4; ret; 
0x000d9f8d: add byte ptr [esi - 0x70], ah; mov eax, 5; ret; 
0x000d9f9d: add byte ptr [esi - 0x70], ah; mov eax, 6; ret; 
0x000d9fad: add byte ptr [esi - 0x70], ah; mov eax, 7; ret; 
0x0017a07d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016ed8d: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000912ad: add byte ptr [esi - 0x70], ah; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0005b7ad: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x5b550; mov eax, 1; add esp, 0xc; ret; 
0x0007959d: add byte ptr [esi - 0x70], ah; mov eax, edx; call 0x79300; mov eax, 1; add esp, 0xc; ret; 
0x001210bd: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00091bcd: add byte ptr [esi - 0x70], ah; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x000e7bbd: add byte ptr [esi - 0x70], ah; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0010c3ed: add byte ptr [esi - 0x70], ah; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x000ba48d: add byte ptr [esi - 0x70], ah; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b648d: add byte ptr [esi - 0x70], ah; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b3e7d: add byte ptr [esi - 0x70], ah; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x0009c68b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c68b: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0003bbdb: add byte ptr [esi - 0x70], ah; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00098dbb: add byte ptr [esi - 0x70], ah; nop; endbr32; nop; xor eax, eax; ret; 
0x0009a92b: add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x000efedb: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efedb: add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0012bdeb: add byte ptr [esi - 0x70], ah; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0003cab7: add byte ptr [esi - 0x70], ah; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x001a72ed: add byte ptr [esi - 0x70], ah; pop ebx; mov eax, 1; ja 0x1a72fa; neg eax; ret; 
0x001a58ed: add byte ptr [esi - 0x70], ah; pop ebx; xor eax, eax; ret; 
0x000e9e3d: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f17fd: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8a3d: add byte ptr [esi - 0x70], ah; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00042f7d: add byte ptr [esi - 0x70], ah; xor eax, eax; pop ebx; ret; 
0x000a25dd: add byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000bddaf: add byte ptr [esi - 0x75], ah; push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016dbf1: add byte ptr [esi - 0x75], dl; jl 0x16dc1a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000c13ce: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bdf4b: add byte ptr [esi - 0x77], ah; dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000c12ce: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bde5b: add byte ptr [esi - 0x77], ah; push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x001220ac: add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001a9fe7: add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001a9f87: add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x00159eca: add byte ptr [esi - 0x7d], ah; stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013de67: add byte ptr [esi - 0x7d], ah; sti; adc al, 0xf; xchg esp, eax; ret; 
0x00184d76: add byte ptr [esi - 0x7d], dl; ret; 
0x000dffe9: add byte ptr [esi - 0x7f], ah; out 4, al; add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x00028ac1: add byte ptr [esi - 1], dl; je 0x28aea; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x000b9f1a: add byte ptr [esi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00125ab8: add byte ptr [esi], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x001a75da: add byte ptr [esi], ch; lea esi, [esi]; add eax, 1; ret; 
0x001a9f0a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8f9a: add byte ptr [esi], ch; lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001a9771: add byte ptr [esi], ch; lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a3a6a: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ja 0x1a3a79; neg eax; ret; 
0x000d9f4a: add byte ptr [esi], ch; lea esi, [esi]; mov eax, 1; ret; 
0x000b3dea: add byte ptr [esi], ch; lea esi, [esi]; pop ebx; ret; 
0x0017772a: add byte ptr [esi], ch; lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000d9d2a: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c1a8a: add byte ptr [esi], ch; lea esi, [esi]; xor eax, eax; ret; 
0x001b09ef: add byte ptr [esi], cl; cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x0009a151: add byte ptr [esp + eax*2 - 0x75], dh; je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x001a96e7: add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0009a261: add byte ptr [esp + ecx*2 - 0x75], dh; je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x000dd574: add byte ptr ds:[eax], al; cmp eax, 1; jg 0xdd5a0; add esp, 8; pop ebx; ret; 
0x000e2557: add byte ptr ds:[edi], cl; test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x0009aa9e: add byte ptr es:[eax + 0x10], bh; add esp, 0xc; ret; 
0x0012c8a6: add byte ptr es:[eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0009139e: add byte ptr es:[eax + 0x16], bh; pop ebx; ret; 
0x000bd71e: add byte ptr es:[eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000fb6a6: add byte ptr es:[eax + 0x40], bh; ret; 
0x000ba47e: add byte ptr es:[eax + 0x5b5e5f17], cl; ret; 
0x000df1be: add byte ptr es:[eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x0019ce2e: add byte ptr es:[eax + 1], bh; ja 0x19ce39; neg eax; ret; 
0x001a3a6e: add byte ptr es:[eax + 1], bh; ja 0x1a3a79; neg eax; ret; 
0x000d9f4e: add byte ptr es:[eax + 1], bh; ret; 
0x00042dde: add byte ptr es:[eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x0013dd0e: add byte ptr es:[eax + 6], bh; call dword ptr gs:[0x10]; 
0x001a9ede: add byte ptr es:[eax + eax*8 + 0x1a80c74], al; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x000609be: add byte ptr es:[eax - 0x73], dl; cmp dword ptr [eax + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x0014b286: add byte ptr es:[eax - 1], bh; pop ebx; pop esi; ret; 
0x000826d6: add byte ptr es:[eax - 1], bh; ret; 
0x001164d7: add byte ptr es:[eax], al; add bl, dl; call 0x29134564; ret; 
0x00117f87: add byte ptr es:[eax], al; add bl, dl; call 0x29136014; ret; 
0x00119a27: add byte ptr es:[eax], al; add bl, dl; call 0x29137ab4; ret; 
0x0003d54e: add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x001a96fb: add byte ptr es:[eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x001a8bfb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xa; jl 0x1a8c50; lea eax, [ecx + 0xa]; ret; 
0x001a8c0b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xb; jl 0x1a8c50; lea eax, [ecx + 0xb]; ret; 
0x001a8c1b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xd; jl 0x1a8c50; lea eax, [ecx + 0xd]; ret; 
0x001a8c2b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xe; jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x001a8c3b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 0xf; jl 0x1a8c50; lea eax, [ecx + 0xf]; ret; 
0x001a8b8b: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 1; jl 0x1a8c50; lea eax, [ecx + 1]; ret; 
0x001a8bdb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 7; jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x001a8beb: add byte ptr es:[eax], al; add byte ptr [eax], al; add edx, 9; jl 0x1a8c50; lea eax, [ecx + 9]; ret; 
0x0002604b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x0009758b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bd7b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0010cd3b: add byte ptr es:[eax], al; add byte ptr [eax], al; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0013f99b: add byte ptr es:[eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c1cfb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c244b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c1d1b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c246b: add byte ptr es:[eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1fcb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fdb: add byte ptr es:[eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0009840b: add byte ptr es:[eax], al; add byte ptr [eax], al; cmp edx, 1; je 0x98420; mov eax, 0x16; ret; 
0x0019060b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017923b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0018722b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x0008c57b: add byte ptr es:[eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea4eb: add byte ptr es:[eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001a96f4: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d9f27: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x000a7178: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016c478: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x00040708: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x0008c574: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x001a89a7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89b7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89c7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89d7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89e7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a8947: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a8957: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a8967: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a8977: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a8987: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8997: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a7998: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a79a8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a79b8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a79c8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a79d8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a7917: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a7928: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a7938: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a7948: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a7958: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a7968: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a7978: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a7988: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a7df8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7de8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7dd8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dc8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7e68: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a7e58: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a7e48: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001aa158: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a7e38: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a7e28: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a7e18: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001a7e08: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a7907: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a9007: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a9017: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a9027: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a9037: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8fa7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fb7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fc7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fd7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fe7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ff7: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000b3df5: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x001a9e98: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000b3e07: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x001a79e8: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x000d9f37: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f06: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f96: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d9f46: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de6: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1a86: add byte ptr es:[eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0016e09b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e0ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x00182c1b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b3e5b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b3e2b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009845b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0012e3ab: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2eb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00131903: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000952a3: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009203b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009c703: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x0010bc1b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bb5f; call eax; 
0x00179273: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x001a9efb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000c095b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop ebx; pop edi; ret; 
0x001a84cb: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000931db: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4a8b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0012d06b: add byte ptr es:[eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001aa83b: add byte ptr es:[eax], al; add byte ptr [eax], al; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3eab: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e8b: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ebb: add byte ptr es:[eax], al; add byte ptr [eax], al; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x0019cd8b: add byte ptr es:[eax], al; add byte ptr [eax], al; movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x000c2459: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c1fb9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x0008be4a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; mov eax, 0xffffffff; ret; 
0x0016c469: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0017a7aa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; endbr32; xor eax, eax; ret; 
0x000e7c8a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0009b2e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00071b89: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x0009107a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00087359: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f59: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000944c9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9f69: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9f79: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9f89: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9f99: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9fa9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x00154aaa: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; mov ecx, 1; mov eax, ecx; ret; 
0x000b3e6a: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x001a58e9: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; pop ebx; xor eax, eax; ret; 
0x00042f79: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; pop ebx; ret; 
0x000424da: add byte ptr es:[eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x0008fc03: add byte ptr es:[eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000b9bdb: add byte ptr es:[eax], al; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000be11b: add byte ptr es:[eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008d323: add byte ptr es:[eax], al; add byte ptr [eax], al; ret; 
0x0008d373: add byte ptr es:[eax], al; add byte ptr [eax], al; sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00175ccb: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a757b: add byte ptr es:[eax], al; add byte ptr [eax], al; sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x000e872b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00182bb3: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x001a4d6b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; pop ebx; ret; 
0x000c210b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007c68b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013494b: add byte ptr es:[eax], al; add byte ptr [eax], al; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00061341: add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0013706d: add byte ptr es:[eax], al; add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x001398f6: add byte ptr es:[ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x001a9f7e: add byte ptr es:[ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000a25ee: add byte ptr es:[ebp - 0x77], dl; ret 0x5657; 
0x0005ad5e: add byte ptr es:[ebp - 0x7cf38b40], al; call 0x448366b; ret; 
0x0007d9de: add byte ptr es:[ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0016c6ee: add byte ptr es:[ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00176c66: add byte ptr es:[ebx + 0x17c83], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00155666: add byte ptr es:[ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00088516: add byte ptr es:[ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x0010d81e: add byte ptr es:[ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0016c78e: add byte ptr es:[ebx + 0x438b08ec], al; adc bh, bh; je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x00172e4e: add byte ptr es:[ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x001775de: add byte ptr es:[ebx + 0x438b08ec], al; or bh, bh; je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x0003305e: add byte ptr es:[ebx + 0x440f06f8], al; ret 0xc89; 
0x000d9c5e: add byte ptr es:[ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000a113e: add byte ptr es:[ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000f1206: add byte ptr es:[ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8446: add byte ptr es:[ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00172c66: add byte ptr es:[ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x00178d66: add byte ptr es:[ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000a8e8e: add byte ptr es:[ebx + 0x5e5b04c4], al; ret; 
0x0008fc76: add byte ptr es:[ebx + 0x5e], bl; pop edi; ret; 
0x000c1a0e: add byte ptr es:[ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000c16be: add byte ptr es:[ebx + 0x5e], bl; ret; 
0x0009aff6: add byte ptr es:[ebx + 0x685504ec], al; ret 0xa00; 
0x0014078e: add byte ptr es:[ebx - 0x17aaf314], al; mov bh, 0x3e; std; jmp dword ptr [ebp - 0x5f]; 
0x0010d66e: add byte ptr es:[ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000d5cd6: add byte ptr es:[ebx - 0x363343], al; call dword ptr [eax]; 
0x000d67ae: add byte ptr es:[ebx - 0x366b7b], cl; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x000fd546: add byte ptr es:[ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x0010bcbe: add byte ptr es:[ebx - 0x3f7af7c0], cl; je 0x10bbb2; call eax; 
0x00146146: add byte ptr es:[ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x001a9d2e: add byte ptr es:[ebx - 0x48], bl; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a9d40; neg eax; ret; 
0x0010ca4e: add byte ptr es:[ebx - 0x48], bl; or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x0009a186: add byte ptr es:[ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00090326: add byte ptr es:[ebx - 0x74dbdbbc], cl; pop eax; or al, 0xe8; mov esp, 0x3900060b; ret; 
0x00131456: add byte ptr es:[ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a31de: add byte ptr es:[ebx - 0x74f7db84], cl; adc dword ptr [eax + 3], 0; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x00123d5e: add byte ptr es:[ebx - 0x7c72f714], al; leave; pop edi; stc; call dword ptr [eax - 0x73]; 
0x000fe0b6: add byte ptr es:[ebx - 0x7c72f714], al; push ss; dec eax; stc; call dword ptr [eax + 0x55]; 
0x00125656: add byte ptr es:[ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x0015a35e: add byte ptr es:[ebx - 0x7cefdbbc], cl; ret 0x3901; 
0x001046fe: add byte ptr es:[ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00103f8e: add byte ptr es:[ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x0004781e: add byte ptr es:[ebx - 0x7cfb78a4], cl; ret; 
0x0008d5c6: add byte ptr es:[ebx - 0x7f97f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x000b3e3e: add byte ptr es:[ecx + 0x4518811], cl; pop ebx; ret; 
0x000ba71e: add byte ptr es:[ecx + 0x5b5e5ff8], cl; ret; 
0x00088216: add byte ptr es:[ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x001771d6: add byte ptr es:[ecx + 0xb4a9], cl; add bl, ch; ret; 
0x0009841e: add byte ptr es:[ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x00071c0e: add byte ptr es:[ecx - 0x38fbdbb4], cl; inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00080146: add byte ptr es:[ecx - 0x76207622], cl; ret 0xcb89; 
0x0003733e: add byte ptr es:[ecx - 0x7cbbdb94], cl; ret; 
0x001770c6: add byte ptr es:[ecx - 0x7cf3dbac], cl; in al, dx; or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x0007f82e: add byte ptr es:[ecx - 1], bh; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000fcf9e: add byte ptr es:[ecx], al; ret 0xec83; 
0x0006ccce: add byte ptr es:[ecx], bh; ret 0x840f; 
0x00091826: add byte ptr es:[ecx], bh; salc; jae 0x91868; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00171c5e: add byte ptr es:[ecx], ch; ret; 
0x000d4c76: add byte ptr es:[ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x001a588e: add byte ptr es:[ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00083bde: add byte ptr es:[ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000432fe: add byte ptr es:[ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00147f76: add byte ptr es:[ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x001877ae: add byte ptr es:[ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x00159f86: add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0018146e: add byte ptr es:[ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x000ba46e: add byte ptr es:[edi + 0x5e], bl; pop ebx; ret; 
0x000d9d1e: add byte ptr es:[edi + 0x5e], bl; ret; 
0x001132ae: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0x113284; pop ebx; ret; 
0x000f103e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf1014; pop ebx; ret; 
0x000f3b4e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf3b24; pop ebx; ret; 
0x000f493e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf4914; pop ebx; ret; 
0x000f746e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf7444; pop ebx; ret; 
0x000f827e: add byte ptr es:[edi], cl; mov dh, 0x10; test dl, dl; je 0xf8254; pop ebx; ret; 
0x0019cdce: add byte ptr es:[edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019cdde: add byte ptr es:[edi], cl; mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019cd7e: add byte ptr es:[edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0014a0f3: add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x000fd136: add byte ptr es:[edi], cl; xchg esp, eax; ret; 
0x001a3f3e: add byte ptr es:[edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x000b1e2e: add byte ptr es:[edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x00150476: add byte ptr es:[edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x0019e67e: add byte ptr es:[esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b3ece: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ede: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3eee: add byte ptr es:[esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0012432f: add byte ptr fs:[eax], al; add byte ptr [ebx + 0x11080], cl; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00091899: add byte ptr ss:[eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x0004ec3c: add byte ptr ss:[eax], al; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fb19f: add ch, 0x47; stc; call dword ptr [eax + 0x6a]; 
0x001505e3: add ch, al; mov bh, 0xa1; hlt; dec dword ptr [ebp - 0xeccd37d]; call dword ptr [esi + 0x50]; 
0x000679a7: add ch, bl; fdivr dword ptr [ecx]; ret 0x840f; 
0x0006b104: add ch, bl; fdivr dword ptr [ecx]; ret 0x850f; 
0x00081d35: add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000d28ac: add ch, bl; ret 0x8390; 
0x00049dc5: add ch, bl; test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0016e905: add ch, byte ptr [eax + 0x60]; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x00029bc2: add ch, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x000d39ea: add ch, byte ptr [ecx]; ret 0x28b; 
0x000dfdb8: add ch, byte ptr [ecx]; ret 0x48d; 
0x00055aeb: add ch, byte ptr [ecx]; ret 0xc031; 
0x0009088a: add ch, byte ptr [ecx]; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0007bddd: add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00188eec: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00088e27: add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00083c3c: add ch, byte ptr [edx]; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00047130: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004a730: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e0b0: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x000c7b40: add ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x0006ba48: add ch, cl; cli; ret; 
0x0007772a: add ch, cl; mov eax, 0x39ffffca; ret 0x840f; 
0x0005d15b: add ch, cl; ret; 
0x00142f84: add ch, dh; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0010cd8a: add cl, 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0008f3bb: add cl, al; call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x000a4419: add cl, al; call 0xfda7d32; inc edi; ret 0xc083; 
0x000a45d7: add cl, al; call 0xfda7ef0; inc edi; ret 0xc083; 
0x000a6a19: add cl, al; call 0xfdaa332; inc edi; ret 0x508d; 
0x0010e396: add cl, al; call 0xfe11c9f; dec edi; ret 0xbce9; 
0x00038c5e: add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x000815e1: add cl, al; cli; or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0007c70c: add cl, al; ret 0x6509; 
0x00024a9e: add cl, al; ret 0x8909; 
0x0012b972: add cl, al; ret 0xf009; 
0x0015445a: add cl, al; ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000c9523: add cl, al; stc; call dword ptr [eax + 0x53]; 
0x0004abd7: add cl, bl; test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x000c333c: add cl, byte ptr [eax + 0x24448b27]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c11fb: add cl, byte ptr [eax + 0x448b0270]; and al, 0xc; pop ebx; pop esi; ret; 
0x0019150d: add cl, byte ptr [eax + 0x448b5f07]; and al, 8; pop ebx; ret; 
0x00178d28: add cl, byte ptr [eax + 0x48bff42]; and al, 0x39; ret 0x3574; 
0x001472d4: add cl, byte ptr [eax + 0x48bff57]; and al, 0x39; ret; 
0x000b1fda: add cl, byte ptr [eax - 0x2f76f7be]; ret; 
0x000b1f78: add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000c08f3: add cl, byte ptr [eax - 0x776f786]; pop ebx; pop edi; ret; 
0x000b1e9a: add cl, byte ptr [eax - 0x776f7be]; pop edi; ret; 
0x000c05bb: add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000b1e58: add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x0013f896: add cl, byte ptr [eax]; pop ebx; ret; 
0x000c2f2b: add cl, byte ptr [eax]; sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000b7f60: add cl, byte ptr [ebp + 0x5b5f0442]; ret; 
0x000b7f92: add cl, byte ptr [ebp + 0x5b5f0842]; ret; 
0x000ac675: add cl, byte ptr [ebp + 0x5e5b0342]; ret; 
0x000ac689: add cl, byte ptr [ebp + 0x5e5b0442]; ret; 
0x000ac699: add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x000ac6ad: add cl, byte ptr [ebp + 0x5e5b0642]; ret; 
0x000897b2: add cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000bb7ab: add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0005373a: add cl, byte ptr [ebp + 0x6c084]; add byte ptr [eax], al; call 0x53700; jmp eax; 
0x000d4cfe: add cl, byte ptr [ebp - 0x162df36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9d33: add cl, byte ptr [ebp - 0x1797236e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9cf3: add cl, byte ptr [ebp - 0x1797b36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aaa7e: add cl, byte ptr [ebp - 0x179ac36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000abc73: add cl, byte ptr [ebp - 0x179b536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aa8a3: add cl, byte ptr [ebp - 0x17a0836e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a92be: add cl, byte ptr [ebp - 0x17a4f36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aca5e: add cl, byte ptr [ebp - 0x17a7e36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aca9e: add cl, byte ptr [ebp - 0x17a8536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9d6e: add cl, byte ptr [ebp - 0x17a8d36e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9dae: add cl, byte ptr [ebp - 0x17a9536e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000acae3: add cl, byte ptr [ebp - 0x17b7436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000acb63: add cl, byte ptr [ebp - 0x18c6036e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000acb1e: add cl, byte ptr [ebp - 0x18c9936e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x0017ff22: add cl, byte ptr [ebp - 0x6996c80]; call dword ptr [eax - 0x18]; 
0x00148d64: add cl, byte ptr [ebp - 0x6d2f87d]; call dword ptr [eax + 0x51]; 
0x000b403a: add cl, byte ptr [ebp - 0x7af0fdb6]; cmp eax, 0x5bffffff; ret; 
0x00166fc8: add cl, byte ptr [ebx + 0x29eb8900]; ret; 
0x000bd7ea: add cl, byte ptr [ebx + 0x42890741]; pop es; mov eax, edi; pop edi; ret; 
0x00032e6d: add cl, byte ptr [ebx + 0x54408b00]; ret; 
0x001944bf: add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x000c11fe: add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bddc8: add cl, byte ptr [ebx + 0x5e082444]; ret; 
0x0009c8bc: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb28: add cl, byte ptr [ebx + 0x651c2454]; sub edx, dword ptr [0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0003485d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x0003482d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x100; ret; 
0x000347fd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x0003473d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x200; ret; 
0x0003479d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x000346ad: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x400; ret; 
0x0003476d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x0003470d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0003490d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 1; ret; 
0x000346dd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 2; ret; 
0x000347cd: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 4; ret; 
0x0003467d: add cl, byte ptr [ebx + 0xf042454]; mov bh, 4; push eax; and eax, 8; ret; 
0x000822f5: add cl, byte ptr [ebx - 0x2f76a4f0]; pop esi; pop edi; ret; 
0x0005847e: add cl, byte ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x000d70ee: add cl, byte ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x001a0be5: add cl, byte ptr [ebx - 0x64737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0019646f: add cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003495d: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74d3c0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x0003498d: add cl, byte ptr [ebx - 0x74fbdbac]; add byte ptr [ebx - 0x7b74dbc0], cl; nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x000342fd: add cl, byte ptr [ebx - 0x74fbdbac]; inc esp; nop; inc eax; ret; 
0x0017c068: add cl, byte ptr [ebx - 0x877b]; jmp dword ptr [ebp - 0x75]; 
0x0005c5e8: add cl, byte ptr [ebx - 0x8b63]; call dword ptr [eax - 1]; 
0x0009bd5f: add cl, byte ptr [ebx]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x000b4227: add cl, byte ptr [ecx + 0x10eb83d0]; lea ecx, [edx + 0x10]; jne 0xb3f81; pop ebx; ret; 
0x000b4013: add cl, byte ptr [ecx + 0x1eb83d0]; lea ecx, [edx + 1]; jne 0xb3f81; pop ebx; ret; 
0x00136146: add cl, byte ptr [ecx + 0x247c89f0]; or bl, ch; xor byte ptr [eax - 0x9f3af75], dl; ret 0x7504; 
0x000c9af0: add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x000b4035: add cl, byte ptr [ecx + 0x2eb83d0]; lea ecx, [edx + 2]; jne 0xb3f81; pop ebx; ret; 
0x001469c0: add cl, byte ptr [ecx + 0x39f329cb]; ret; 
0x000b405b: add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb3f81; pop ebx; ret; 
0x000b7fca: add cl, byte ptr [ecx + 0x428d0842]; or al, 0x5f; pop ebx; ret; 
0x000849eb: add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000b4073: add cl, byte ptr [ecx + 0x4eb83d0]; lea ecx, [edx + 4]; jne 0xb3f81; pop ebx; ret; 
0x00132d0f: add cl, byte ptr [ecx + 0x5f5e5bd8]; ret; 
0x000b40f7: add cl, byte ptr [ecx + 0x8eb83d0]; lea ecx, [edx + 8]; jne 0xb3f81; pop ebx; ret; 
0x0015453d: add cl, byte ptr [ecx - 0x1337b]; call dword ptr [eax - 0x18]; 
0x000d7f2c: add cl, byte ptr [ecx - 0x1607fe30]; ret 0xfff5; 
0x0014fea9: add cl, byte ptr [ecx - 0x2776efb5]; pop ebx; pop esi; pop edi; ret; 
0x000b4b53: add cl, byte ptr [ecx - 0x2f76f7be]; pop ebx; ret; 
0x000b203a: add cl, byte ptr [ecx - 0x2f76f7be]; ret; 
0x000b201a: add cl, byte ptr [ecx - 0x2f76f8be]; ret; 
0x000d64d8: add cl, byte ptr [ecx - 0x36376b]; call dword ptr [eax - 0x75]; 
0x00056f2f: add cl, byte ptr [ecx - 0x364f6b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax - 1]; 
0x00056eaa: add cl, byte ptr [ecx - 0x36536b]; dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00056f26: add cl, byte ptr [ecx - 0x365373]; call dword ptr [eax - 0x75]; 
0x000f2877: add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x000b3bda: add cl, byte ptr [ecx - 0x776f7be]; pop edi; pop ebx; ret; 
0x000b1dea: add cl, byte ptr [ecx - 0x776f7be]; pop edi; ret; 
0x000b1eda: add cl, byte ptr [ecx - 0x776f8be]; pop edi; ret; 
0x000a4c40: add cl, byte ptr [ecx - 0x7aebdbbc]; ror byte ptr [edi], 0x84; ret; 
0x00040943: add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x001aa4fa: add cl, byte ptr [ecx - 0x7ca1f78e]; ret 0x830c; 
0x0005c47e: add cl, byte ptr [ecx - 0x8f6b]; dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00189424: add cl, byte ptr [ecx]; add byte ptr [eax], al; add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00070559: add cl, byte ptr [ecx]; ret 0xb70f; 
0x000c6343: add cl, byte ptr [edi]; inc esp; ret 0x66c3; 
0x000a31fc: add cl, byte ptr [edi]; inc esp; ret 0x938b; 
0x000a0f14: add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x00194597: add cl, byte ptr [edi]; mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000e122c: add cl, byte ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x000835a5: add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00030685: add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x000b403d: add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x001a8aec: add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a7d3c: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a88bc: add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000b3c5d: add cl, byte ptr [edi]; test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001050e3: add cl, byte ptr [edi]; test dword ptr [ebx - 0x9fffff1], ebp; ret 0xf04; 
0x000bb25e: add cl, byte ptr [edi]; test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a9448: add cl, byte ptr [edi]; test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x001a8b4a: add cl, byte ptr [edi]; test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x001a7d8b: add cl, byte ptr [edi]; test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x000f5a57: add cl, byte ptr [edi]; test dword ptr [esi], eax; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0018a787: add cl, byte ptr [edi]; test dword ptr [esi], edx; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f9377: add cl, byte ptr [edi]; test dword ptr [esi], esp; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001a9335: add cl, byte ptr [edi]; test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x00111606: add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x00030769: add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00179456: add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x001a5615: add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00134af7: add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000e78f8: add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x001b43f5: add cl, ch; cmc; sar edi, 1; dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x000d06f8: add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0007c874: add cl, ch; imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x000692b3: add cl, ch; inc edi; fcos; call dword ptr [edx - 0x73]; 
0x001b377b: add cl, ch; jmp esi; 
0x0004a1c4: add cl, ch; mov ebp, 0x8bffffef; jl 0x4a1f1; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x001b3c92: add cl, ch; pop eax; fcos; dec dword ptr [ebx - 0x7af3db8c]; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x0006a212: add cl, ch; ret 0xffd8; 
0x001ad085: add cl, ch; ret 0xffdf; 
0x00039d35: add cl, ch; ret 0xfff8; 
0x000f1b63: add cl, ch; ret 0xfff9; 
0x000cd788: add cl, ch; ret 0xfffa; 
0x0017c6ec: add cl, ch; ret 0xfffc; 
0x0009c22a: add cl, ch; ret 0xfffd; 
0x00049dcc: add cl, ch; ret; 
0x000d6d36: add cl, ch; sal ebx, 0xff; dec dword ptr [ebx - 0x364b7b]; call dword ptr [edi + 0x6a]; 
0x00067ab1: add cl, ch; sal esi, 0xff; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x00095c4a: add cl, ch; sbb eax, 0x8dffffff; xchg al, dl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0018baf6: add cl, ch; sub bh, 0xff; dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006b816: add cl, ch; test dl, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x00043c62: add cl, dl; call 0x21061cec; ret 0xb60f; 
0x00092b8d: add cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000409bd: add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00143697: add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00024b58: add dh, al; inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b505370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0013419f: add dh, al; inc edx; jmp dword ptr [eax]; 
0x0015a956: add dh, al; inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0006483f: add dh, al; inc esp; and al, 0x63; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x00071d85: add dh, al; inc esp; and al, 8; add dword ptr [ebx - 0x7cfbdba4], ecx; ret; 
0x000bb00d: add dh, al; or al, 0; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a1a0b: add dh, al; xchg byte ptr [esp + edi], ah; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x001a35b6: add dh, bh; fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x001a4d86: add dh, bh; fcomp dword ptr [edi + 0x5b]; ret; 
0x001a52e6: add dh, bh; fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0009027d: add dh, bh; jne 0x90221; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00198854: add dh, bh; ret 0xf; 
0x0019881a: add dh, bh; ret 2; 
0x0010cd8d: add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cd05: add dh, bl; stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0006f7c0: add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x000c243c: add dh, byte ptr [eax]; ret; 
0x00130029: add dh, byte ptr [ebp + 0x34]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001a75ae: add dh, byte ptr [ebp + 0x4f]; test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x001a7568: add dh, byte ptr [ebp + 0x75]; test dl, 4; jne 0x1a75e4; add eax, 3; ret; 
0x000815b2: add dh, byte ptr [ebp + 0x7b]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00154a93: add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x000921d8: add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x0014c8b0: add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x001840aa: add dh, byte ptr [ebp - 5]; jmp dword ptr [esi - 0x70]; 
0x0002b7fe: add dh, byte ptr [ebx + edx*4 - 0x17]; cmp bh, 0xff; dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x00091c87: add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x000fbcc3: add dh, byte ptr [ecx]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0014c8aa: add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00099e8a: add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0010cf3f: add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00159ece: add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0019150b: add dh, byte ptr [edx + eax - 0x78]; pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008258b: add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x00128af5: add dh, byte ptr [esi + 0x28]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000df24b: add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00091163: add dh, byte ptr [esi + 0xa]; ret; 
0x0009d413: add dh, byte ptr [esp + edi*4 + 0x5b]; pop esi; ret; 
0x000fe152: add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000acb19: add dh, dh; inc dword ptr [eax - 0x6d72fd1b]; insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x001a9eef: add dh, dh; les eax, ptr [ecx]; jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x001a7d88: add dh, dh; les eax, ptr [edx]; jne 0x1a7e20; lea eax, [edi - 8]; pop edi; ret; 
0x001a8908: add dh, dh; les eax, ptr [edx]; jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a7db1: add dh, dh; les esp, ptr [eax]; jne 0x1a7e50; lea eax, [edi - 4]; pop edi; ret; 
0x001a8931: add dh, dh; les esp, ptr [eax]; jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x0007cf87: add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0008c5ed: add dh, dh; push es; xor byte ptr [ebp + 0x2d], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001b079f: add dh, dh; ret 0x7407; 
0x0007c30f: add dh, dh; ret 0x7420; 
0x001a6d6d: add dh, dh; ret 0x7501; 
0x000322b5: add dh, dh; ret 0x7503; 
0x000bc0af: add dh, dh; ret 0x7510; 
0x0013a3ef: add dh, dh; ret 0x7520; 
0x00100fd4: add dh, dh; ret 0x7540; 
0x0005e6a4: add dh, dh; ret 0xf01; 
0x0009b463: add dh, dh; ret 0xf02; 
0x000327f5: add dh, dh; ret 0xf03; 
0x001050e9: add dh, dh; ret 0xf04; 
0x0014e283: add dh, dh; ret 0xf08; 
0x001a9de1: add dh, dh; ret 0xf0f; 
0x0005cf6e: add dh, dh; ret 0xf10; 
0x0010d562: add dh, dh; ret 0xf20; 
0x0005c2dc: add dh, dh; ret 0xf40; 
0x0005e810: add dh, dh; ret 0xf50; 
0x0010d56b: add dh, dh; ret 0xf80; 
0x0005e1fc: add dh, dh; ret; 
0x000f1a62: add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x001988d9: add dl, 0x17; cli; jmp dword ptr [esi - 0x70]; 
0x00091dd7: add dl, byte ptr [eax + 0x5f5bc031]; ret; 
0x00121d0b: add dl, byte ptr [eax + eax]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016d0a9: add dl, byte ptr [ebx - 1]; adc byte ptr [ebx - 0x3b7cfbbd], cl; adc al, 0x53; call dword ptr [eax + 0x10]; 
0x000eb587: add dl, byte ptr [esi]; add byte ptr [eax], al; add bl, ch; ret; 
0x0008751f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d45f: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c9df: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00125dd7: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0007c7ce: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a62bf: add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000234c8: add dword ptr [0x2cc48300], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001484af: add dword ptr [0x8beb0574], ebp; lea esi, [esi]; xor eax, eax; ret; 
0x00097bb3: add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x001b0efd: add dword ptr [bx + si], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0009fafa: add dword ptr [eax + 0x115], edi; call dword ptr gs:[0x10]; 
0x0009ff6b: add dword ptr [eax + 0x116], edi; call dword ptr gs:[0x10]; 
0x0017a758: add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0017a77c: add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x000c3654: add dword ptr [eax + 0x2b], eax; inc esp; and al, 4; ret; 
0x000fe375: add dword ptr [eax + 0x48], -7; call dword ptr [eax + 0x55]; 
0x0008bf4e: add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x000c3acb: add dword ptr [eax + 0x56], edx; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x000c0594: add dword ptr [eax + 0x5bf88902], ecx; pop edi; ret; 
0x000c36e2: add dword ptr [eax + 0x5bf88927], ecx; pop esi; pop edi; ret; 
0x000c30cb: add dword ptr [eax + 0x5d], eax; pop ebx; pop esi; pop edi; ret; 
0x000b61f1: add dword ptr [eax + 0x5f028d02], ecx; ret; 
0x000c2916: add dword ptr [eax + 0x5f], eax; pop esi; ret; 
0x000aaa4b: add dword ptr [eax + 0x5f], eax; ret; 
0x000b1e31: add dword ptr [eax + 0x5ff88902], ecx; ret; 
0x0009981d: add dword ptr [eax + 0x65], esi; mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00189ed9: add dword ptr [eax + 0xf0], edi; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00172385: add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0005183b: add dword ptr [eax + 2], 0; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00042d54: add dword ptr [eax + 2], edi; bsr ecx, ecx; shl eax, cl; ret; 
0x00042d24: add dword ptr [eax + 2], edi; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e05: add dword ptr [eax + 2], edi; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0013ee37: add dword ptr [eax + 2], edi; ret; 
0x0014fa74: add dword ptr [eax + 8], 1; je 0x14fa9d; add esp, 0xc; ret; 
0x000fad5f: add dword ptr [eax + eax*8 - 0x3fce328b], eax; ret; 
0x00190db0: add dword ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000ed000: add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x00122b2f: add dword ptr [eax + eax], ecx; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x000571cb: add dword ptr [eax + eax], edx; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00121d39: add dword ptr [eax + eax], edx; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a96f5: add dword ptr [eax + ebp*8 - 0x7d], esi; ret 0x8b01; 
0x0013204a: add dword ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0011f440: add dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x001622f0: add dword ptr [eax - 0x5d], 0; add byte ptr [eax - 0x73], dl; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x000c6662: add dword ptr [eax - 0x6bf0d005], eax; ret; 
0x0009b8c5: add dword ptr [eax - 0x73], edx; xchg dword ptr [edx + ebp*8 - 0x1b], ebx; call dword ptr [eax - 0x73]; 
0x0014a870: add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x001781c1: add dword ptr [eax], -0x47; stc; call dword ptr [eax - 0x73]; 
0x001367e3: add dword ptr [eax], -0x58; stc; call dword ptr [eax - 0x18]; 
0x001367e3: add dword ptr [eax], -0x58; stc; call dword ptr [eax - 0x18]; and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x000d32c6: add dword ptr [eax], -0x65; stc; call dword ptr [eax - 0x18]; 
0x000a392b: add dword ptr [eax], -0x6e; stc; call dword ptr [eax - 0x18]; 
0x000c7113: add dword ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x0006358a: add dword ptr [eax], 0; add byte ptr [ecx], al; ret; 
0x00125ab7: add dword ptr [eax], 0x46; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00125b49: add dword ptr [eax], 0x46; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00126243: add dword ptr [eax], 0x50; stc; call dword ptr [edx + 0x52]; 
0x00164b93: add dword ptr [eax], 0x62; stc; call dword ptr [eax - 0x18]; 
0x000302eb: add dword ptr [eax], 0x73; stc; call dword ptr [eax - 0x73]; 
0x00168c5a: add dword ptr [eax], 0x8d500000; xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x00098642: add dword ptr [eax], 0xf6310000; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903f4: add dword ptr [eax], 0xf6310000; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001232a5: add dword ptr [eax], eax; add ah, bl; mov al, 0xc4; ret 0xfff9; 
0x0015d2e9: add dword ptr [eax], eax; add bh, bh; je 0x15d313; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0005b11e: add dword ptr [eax], eax; add bh, bh; xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x0012344f: add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x0014d52e: add dword ptr [eax], eax; add bh, dh; ret 0; 
0x000c2d9f: add dword ptr [eax], eax; add bh, dh; ret 3; 
0x000e7b7d: add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129227: add dword ptr [eax], eax; add bl, bl; test al, 0x1c; ret 0xfff9; 
0x00129210: add dword ptr [eax], eax; add bl, bl; test al, 0xc; ret 0xfff9; 
0x001733bb: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x001733bb: add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003cb59: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbfc: add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00095711: add dword ptr [eax], eax; add byte ptr [eax + 0xf0], bh; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b81ce: add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00031fdf: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc byte ptr [esp + ebp], 0xf9; call dword ptr [eax - 0x18]; 
0x00144e3c: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [edx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00136775: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x00136798: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add ecx, 0x55; stc; call dword ptr [eax - 0x18]; 
0x0014f37f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, -0x51; stc; call dword ptr [eax - 0x18]; 
0x001367bb: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, -0x59; stc; call dword ptr [eax - 0x18]; 
0x001764be: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00032004: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x001507e5: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; cmp dword ptr [ecx + esi*4], -7; call dword ptr [eax - 0x18]; 
0x0005e040: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x001497d9: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or ebp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000de496: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; sbb dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x000972f4: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; test dword ptr [ebp + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000893dd: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ch; stc; call dword ptr [eax - 0x18]; 
0x000959e4: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00027525: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x00029bbc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00027555: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x0002a11f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0008942f: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x0002ac61: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], ebp; stc; call dword ptr [eax - 0x18]; 
0x0002abb1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2abb3; call dword ptr [eax - 0x18]; 
0x0002b8fc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2b8fe; call dword ptr [eax - 0x18]; 
0x0002dc12: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2dc14; call dword ptr [eax - 0x18]; 
0x0002e3b5: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2e3b7; call dword ptr [eax - 0x18]; 
0x0002f113: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ecx; jno 0x2f115; call dword ptr [eax - 0x18]; 
0x0002aca7: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2aca9; call dword ptr [eax - 0x18]; 
0x0002dbef: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2dbf1; call dword ptr [eax - 0x18]; 
0x0002e400: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2e402; call dword ptr [eax - 0x18]; 
0x0002f0db: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2f0dd; call dword ptr [eax - 0x18]; 
0x001537f1: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x001693e6: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], esp; stc; call dword ptr [eax - 0x18]; 
0x001693c3: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00094345: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], ebx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00027579: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x001131bc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00169397: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg eax, edi; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x000942df: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ebp, ebx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x000943bc: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg ebp, esi; aas; stc; call dword ptr [eax - 0x18]; 
0x0004a415: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg edx, eax; das; stc; call dword ptr [eax - 0x18]; 
0x0002b98a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002ab8e: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2ab90; call dword ptr [eax - 0x18]; 
0x0002b819: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2b81b; call dword ptr [eax - 0x18]; 
0x0002db63: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2db65; call dword ptr [eax - 0x18]; 
0x0002f072: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ebx; jno 0x2f074; call dword ptr [eax - 0x18]; 
0x0003136a: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0014f809: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x00032058: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x001503ae: add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [edx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x0011574f: add dword ptr [eax], eax; add byte ptr [eax - 0x749af732], al; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0014d422: add dword ptr [eax], eax; add byte ptr [eax], al; add al, byte ptr [eax]; add byte ptr [edi], cl; lahf; ret 0xd009; 
0x00079eb8: add dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000903fb: add dword ptr [eax], eax; add byte ptr [eax], al; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00146375: add dword ptr [eax], eax; add byte ptr [eax], al; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0005b7b8: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0007db94: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x001256ba: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00123d24: add dword ptr [eax], eax; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0009f759: add dword ptr [eax], eax; add byte ptr [eax], al; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x000901c2: add dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb72e: add dword ptr [eax], eax; add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x0019ce31: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19ce39; neg eax; ret; 
0x0019e671: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x19e679; neg eax; pop ebp; ret; 
0x001a3a71: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a3a79; neg eax; ret; 
0x001a3d61: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a3d69; neg eax; pop ebp; ret; 
0x001a3f21: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a3f29; neg eax; ret; 
0x001a4a08: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a4a10; neg eax; ret; 
0x001a5c79: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a5c81; neg eax; ret; 
0x001a72f2: add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a72fa; neg eax; ret; 
0x001a5907: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a5910; neg eax; ret; 
0x001a5c32: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a5c40; neg eax; ret; 
0x001a9d32: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a9d40; neg eax; ret; 
0x000d9d41: add dword ptr [eax], eax; add byte ptr [eax], al; jg 0xd9d49; neg eax; ret; 
0x000645a6: add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000707fd: add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0018478c: add dword ptr [eax], eax; add byte ptr [eax], al; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0017a47a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017a43a: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0016dff9: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0017a3c1: add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x0009e413: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00154ab1: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00087149: add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, edx; ret; 
0x000707af: add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000903c0: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000c3368: add dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0006471e: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x0006459c: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp eax; 
0x000652a0: add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x000902c5: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x001773e5: add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000d9da3: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, ecx; ret; 
0x00150489: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; mov eax, edx; ret; 
0x0007cfb5: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0005b8d4: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0012843b: add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00053d79: add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x001786b6: add dword ptr [eax], eax; add byte ptr [eax], al; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008fc90: add dword ptr [eax], eax; add byte ptr [eax], al; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00060626: add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00172387: add dword ptr [eax], eax; add byte ptr [eax], al; sbb eax, -1; add esp, 0xc; ret; 
0x000a08a0: add dword ptr [eax], eax; add byte ptr [eax], al; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x000fba24: add dword ptr [eax], eax; add byte ptr [eax], al; test ecx, ecx; js 0xfba30; ret; 
0x00091ba7: add dword ptr [eax], eax; add byte ptr [eax], al; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0014c904: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x0009a986: add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024d76: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000931d2: add dword ptr [eax], eax; add byte ptr [eax], al; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00042de1: add dword ptr [eax], eax; add byte ptr [eax], al; xor edx, edx; pop ebx; ret; 
0x00097da8: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd9: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091eb5: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; lea ebx, [edi + eax + 0x20]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009999e: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00189ee0: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091f51: add dword ptr [eax], eax; add byte ptr [eax], al; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000c34d8: add dword ptr [eax], eax; add byte ptr [eax], cl; leave; jne 0xc34e1; xor eax, eax; ret; 
0x00148718: add dword ptr [eax], eax; add byte ptr [ebp + 0x2b], ah; adc eax, 0x14; jne 0x14874d; add esp, 0x11c; ret; 
0x000c4d2b: add dword ptr [eax], eax; add byte ptr [ebp + 0x3d2892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x000a58ae: add dword ptr [eax], eax; add byte ptr [ebp + 0x94c8b], cl; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x00034bd1: add dword ptr [eax], eax; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0011594f: add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00155081: add dword ptr [eax], eax; add byte ptr [ebp - 0x64c5f7a], cl; call dword ptr [eax - 0x73]; 
0x00024f53: add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00127389: add dword ptr [eax], eax; add byte ptr [ebp - 0x6af2b6d], cl; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x00126d71: add dword ptr [eax], eax; add byte ptr [ebp - 0x6aff76d], cl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x00093fae: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c04579], cl; call dword ptr [eax - 0x73]; 
0x00092e59: add dword ptr [eax], eax; add byte ptr [ebp - 0x6c07f79], cl; call dword ptr [eax - 0x73]; 
0x000479cf: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cfab79], cl; call dword ptr [eax - 0x73]; 
0x0004e911: add dword ptr [eax], eax; add byte ptr [ebp - 0x6cfb579], cl; call dword ptr [eax - 0x73]; 
0x0002888b: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029bfc: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x0002ced6: add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457f], cl; call dword ptr [eax - 0x73]; 
0x000a9b13: add dword ptr [eax], eax; add byte ptr [ebp - 0xaaf237e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013aeb3: add dword ptr [eax], eax; add byte ptr [ebp - 0xaaf337e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a9b63: add dword ptr [eax], eax; add byte ptr [ebp - 0xab2437e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013af03: add dword ptr [eax], eax; add byte ptr [ebp - 0xab2537e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a92e3: add dword ptr [eax], eax; add byte ptr [ebp - 0xab5637e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013ae63: add dword ptr [eax], eax; add byte ptr [ebp - 0xab5737e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0012d251: add dword ptr [eax], eax; add byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x00123449: add dword ptr [eax], eax; add byte ptr [ebx + 0x100b3], cl; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x00182956: add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x00115760: add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0006061d: add dword ptr [eax], eax; add byte ptr [ebx + 0x28907c8], al; mov eax, 1; ret; 
0x001475f6: add dword ptr [eax], eax; add byte ptr [ebx + 0x29042454], cl; fidivr dword ptr [ecx]; ret 0x8e0f; 
0x0011f612: add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000f2f73: add dword ptr [eax], eax; add byte ptr [ebx + 0x348d08ec], al; test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x001842b6: add dword ptr [eax], eax; add byte ptr [ebx + 0x3a080], cl; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x001744be: add dword ptr [eax], eax; add byte ptr [ebx + 0x438b08ec], al; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0007b7a0: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008891c: add dword ptr [eax], eax; add byte ptr [ebx + 0x448d08ec], al; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000a1f67: add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x000a4a03: add dword ptr [eax], eax; add byte ptr [ebx + 0x45480], cl; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x000fedda: add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x000d4309: add dword ptr [eax], eax; add byte ptr [ebx + 0x48db055], cl; test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x00156b1d: add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x00120884: add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x000342f8: add dword ptr [eax], eax; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000c42fe: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0008426e: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000c39d4: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0003cbed: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124405: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0003c93c: add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003ce72: add dword ptr [eax], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x00187b21: add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0018829e: add dword ptr [eax], eax; add byte ptr [ebx + 0x73ff0cec], al; cmp al, ch; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0007ed8b: add dword ptr [eax], eax; add byte ptr [ebx + 0x75ff04ec], al; adc al, 0xff; jne 0x7eda3; push esi; call dword ptr [ebx + 0x2c]; 
0x00032e68: add dword ptr [eax], eax; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x0008f3b3: add dword ptr [eax], eax; add byte ptr [ebx + 0x9080], cl; add cl, al; call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x00114c79: add dword ptr [eax], eax; add byte ptr [ebx + 0xbc24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005ada4: add dword ptr [eax], eax; add byte ptr [ebx + 0xd182444], cl; add byte ptr [eax], 0x41; add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x00115807: add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0012c8aa: add dword ptr [eax], eax; add byte ptr [ebx + 3], bh; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00174a02: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0008975f: add dword ptr [eax], eax; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x0010d916: add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00137fe1: add dword ptr [eax], eax; add byte ptr [ebx - 0x17701500], cl; ret; 
0x000d39e2: add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000586af: add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x000d7b16: add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000567e7: add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00124336: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7adfc0], cl; cmove eax, edx; ret; 
0x00124852: add dword ptr [eax], eax; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x00168098: add dword ptr [eax], eax; add byte ptr [ebx - 0x41f0d1f4], cl; ret 0x44f6; 
0x000fc25c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5cf0afa9], cl; ret 0x830f; 
0x0006c37b: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x0009908c: add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00121331: add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00111573: add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x0002b1cd: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002e0c7: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00152e96: add dword ptr [eax], eax; add byte ptr [ebx - 0x72c7dbac], cl; dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x001a8a2b: add dword ptr [eax], eax; add byte ptr [ebx - 0x73f0ff3e], al; sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0013da3e: add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000aa238: add dword ptr [eax], eax; add byte ptr [ebx - 0x76dfdbbc], cl; shr dword ptr [ecx], cl; ret; 
0x00030a97: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; je 0x30a9b; call dword ptr [eax + 0x56]; 
0x000a1c94: add dword ptr [eax], eax; add byte ptr [ebx - 0x7872fb14], al; xor byte ptr [edx - 7], al; call dword ptr [eax + 0x53]; 
0x001a91f2: add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x001a5102: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a4ba1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x00148a3d: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; sbb al, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x0015451c: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; sub byte ptr [esi - 7], bl; call dword ptr [eax - 0x73]; 
0x001544fc: add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; int 0x5d; stc; call dword ptr [eax - 1]; 
0x000b0535: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0015a3b1: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x00116da5: add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0005f3de: add dword ptr [eax], eax; add byte ptr [ebx - 0x7cefdbbc], cl; rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000fb82f: add dword ptr [eax], eax; add byte ptr [ebx - 0xa1f7944], cl; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0007d089: add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0007e44f: add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7e461; push edx; call dword ptr [ebx + 0x1c]; 
0x0003f52d: add dword ptr [eax], eax; add byte ptr [ebx - 0xaef714], al; je 0x3f55b; dec esp; call eax; 
0x00034b8c: add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x0002cc2d: add dword ptr [eax], eax; add byte ptr [ecx + 0x39f7890f], cl; ret; 
0x000db953: add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x001813ac: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x00133170: add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x001aedde: add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000916c4: add dword ptr [eax], eax; add byte ptr [ecx + 0x94c4], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001738e7: add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001544c6: add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001811ca: add dword ptr [eax], eax; add byte ptr [ecx - 0x1636b], cl; dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x0007b551: add dword ptr [eax], eax; add byte ptr [ecx - 0x33333307], al; or al, 0xf; mov ds, word ptr [ebx - 0x76ffffff]; ret; 
0x0008e7bf: add dword ptr [eax], eax; add byte ptr [ecx - 0x3b7cf3bd], cl; add al, 0x5b; pop esi; ret; 
0x0006670f: add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000a256c: add dword ptr [eax], eax; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x000a1d73: add dword ptr [eax], eax; add byte ptr [ecx - 0x74207612], cl; dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x000400d6: add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x00027bb0: add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x00104b80: add dword ptr [eax], eax; add byte ptr [ecx - 0x7aabdb84], cl; push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0010d677: add dword ptr [eax], eax; add byte ptr [ecx - 1], bh; call dword ptr gs:[0x10]; 
0x000a9c4a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940d36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bca: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x948736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a927a: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x94de36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa8da: add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x957f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00138fd5: add dword ptr [eax], eax; add byte ptr [ecx], al; call eax; 
0x000a9c0a: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af6a: add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x0003a760: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x430f; 
0x00152e8e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret 0x840f; 
0x0007cd8e: add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000dba85: add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0011577f: add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0003e05d: add dword ptr [eax], eax; add byte ptr [ecx], dh; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000b3dad: add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000d9bc2: add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00108ae5: add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000c18a2: add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00115869: add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000528e5: add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00186594: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x0012920a: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg dword ptr [0xdb000001], ecx; test al, 0xc; ret 0xfff9; 
0x000db72a: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000842aa: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0x9e3b; 
0x00188d8c: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b965: add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00174f4a: add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0008a331: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083e81: add dword ptr [eax], eax; add byte ptr [edx + 1], ch; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0008a276: add dword ptr [eax], eax; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00134d82: add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x00134e85: add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x001a870c: add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001220aa: add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x001a9fe5: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x001a9f85: add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x000a1a09: add dword ptr [eax], eax; add dh, al; xchg byte ptr [esp + edi], ah; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x001a7795: add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x001a77a6: add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x00041955: add dword ptr [eax], eax; add dh, dh; ret 0xf03; 
0x001a77b7: add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x001a774f: add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a7760: add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a7771: add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0005e80e: add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000a92ef: add dword ptr [eax], eax; add dh, dh; ret; 
0x000c549b: add dword ptr [eax], eax; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000a8cb2: add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003e2d2: add dword ptr [eax], eax; add esp, 0x1c; ret; 
0x00122f3e: add dword ptr [eax], eax; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x000614fe: add dword ptr [eax], eax; add esp, 0x2c; ret; 
0x00060bf7: add dword ptr [eax], eax; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x000c377a: add dword ptr [eax], eax; dec ecx; jne 0xc3778; pop esi; ret; 
0x0008ff96: add dword ptr [eax], eax; inc eax; add byte ptr [eax], al; ret; 
0x000232b4: add dword ptr [eax], eax; lea ecx, [edi - 0x785a4]; mov eax, 0xaf; mov ebx, ebp; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00129bae: add dword ptr [eax], eax; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00042562: add dword ptr [eax], eax; xor eax, eax; ret; 
0x000a96f1: add dword ptr [eax], edi; inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x000ac195: add dword ptr [eax], edi; ret; 
0x000c200c: add dword ptr [eax], edx; ret; 
0x000c202c: add dword ptr [eax], esi; ret; 
0x00084e25: add dword ptr [eax], esp; je 0x84e38; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84e38; ret; 
0x000c201c: add dword ptr [eax], esp; ret; 
0x000ad370: add dword ptr [ebp + 0x100054c], ecx; ret; 
0x0008d365: add dword ptr [ebp + 0x10], esi; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x001a9ee5: add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x001a9ef2: add dword ptr [ebp + 0x1b], esi; lea eax, [ecx + 0xc]; ret; 
0x00098442: add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000fb624: add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x001aa7b2: add dword ptr [ebp + 0x2b], esi; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00155042: add dword ptr [ebp + 0x2b], esi; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001aa79a: add dword ptr [ebp + 0x33], esi; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x00166f8e: add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000c822d: add dword ptr [ebp + 0x390775d2], eax; ret; 
0x0004782d: add dword ptr [ebp + 0x390775db], eax; sal dword ptr [ebp - 0x16], 0x83; ret 0x8501; 
0x0009a1a0: add dword ptr [ebp + 0x39bc75ff], eax; ret 0xd574; 
0x0009a7d8: add dword ptr [ebp + 0x45], esi; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00147705: add dword ptr [ebp + 0x508dbf70], ecx; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x000dfd25: add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x00155bda: add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00099775: add dword ptr [ebp + 8], esi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00041365: add dword ptr [ebp + eax - 0x18], esi; ret; 
0x0009aae8: add dword ptr [ebp + ecx - 0x10], esi; sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x000ad9e5: add dword ptr [ebp - 0x13], esi; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x00053d74: add dword ptr [ebp - 0x17], esi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000afeb4: add dword ptr [ebp - 0x17], esi; pop ebx; pop esi; pop edi; ret; 
0x0009bc32: add dword ptr [ebp - 0x1a123379], ecx; call dword ptr [ebx + 0x50]; 
0x000a83c7: add dword ptr [ebp - 0x1a], esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00127ecf: add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x000a75a7: add dword ptr [ebp - 0x2a], esi; sub esp, 0xc; push eax; call edx; 
0x00099835: add dword ptr [ebp - 0x2e], esi; mov eax, 0x10; pop ebx; ret; 
0x000a5c6d: add dword ptr [ebp - 0x357bf040], eax; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x00043370: add dword ptr [ebp - 0x3dbaf040], eax; ret; 
0x00054170: add dword ptr [ebp - 0x6df0fbb1], ecx; ret 0x789; 
0x0012ad75: add dword ptr [ebp - 0x74e98740], eax; inc esi; add al, 0x89; ret 0xe083; 
0x0013f173: add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x0013f09b: add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x000b9bf4: add dword ptr [ebp - 0x7af0fe81], ecx; mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x000b3c38: add dword ptr [ebp - 0x7af0feb6], ecx; add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00138083: add dword ptr [ebp - 0x7c138a40], eax; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012366c: add dword ptr [ebp - 0x7c908a0a], eax; in al, dx; or byte ptr [ebp - 0x6d1907d], cl; call dword ptr [eax + 0x6a]; 
0x000a9b3b: add dword ptr [ebp - 0xa25636e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013aedb: add dword ptr [ebp - 0xa25736e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a9b8b: add dword ptr [ebp - 0xa35536e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013af2b: add dword ptr [ebp - 0xa35636e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a930b: add dword ptr [ebp - 0xa45336e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013ae8b: add dword ptr [ebp - 0xa45436e], ecx; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000a9c0d: add dword ptr [ebp - 0xabaf36e], ecx; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00131499: add dword ptr [ebp - 7], edx; call dword ptr [eax - 0x18]; 
0x00131068: add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x0007db78: add dword ptr [ebx + 0x1a84], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0008d718: add dword ptr [ebx + 0x1ab8], 1; add esp, 4; pop ebx; pop esi; ret; 
0x000348e0: add dword ptr [ebx + 0x24408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x000ac932: add dword ptr [ebx + 0x2930244c], ecx; ret; 
0x000348a0: add dword ptr [ebx + 0x2c408b00], ecx; mov eax, dword ptr [eax + edx*4]; ret; 
0x00184b6e: add dword ptr [ebx + 0x33ff04ec], 0x74ff36ff; and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000c09ef: add dword ptr [ebx + 0x3888ffd8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x0003e652: add dword ptr [ebx + 0x39142444], ecx; ret; 
0x0014e4d6: add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014da46: add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x000445d3: add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x0009b4d9: add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a85c5: add dword ptr [ebx + 0x4d2b0cc4], eax; add byte ptr [ecx], ch; ret 0xd801; 
0x00171a8c: add dword ptr [ebx + 0x50572048], ecx; call dword ptr [ecx + 8]; 
0x001516ce: add dword ptr [ebx + 0x50fff95d], -0x18; aaa; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0015180e: add dword ptr [ebx + 0x50fff95d], -0x18; imul dword ptr [edx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015158e: add dword ptr [ebx + 0x50fff95d], -0x18; ja 0x1515c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151a8e: add dword ptr [ebx + 0x50fff95d], -0x18; ja 0x151abf; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015194e: add dword ptr [ebx + 0x50fff95d], -0x18; mov bh, 0x29; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015144e: add dword ptr [ebx + 0x50fff95d], -0x18; mov bh, 0x2e; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001514ee: add dword ptr [ebx + 0x50fff95d], -0x18; pop ss; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001519ee: add dword ptr [ebx + 0x50fff95d], -0x18; pop ss; sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x001518ae: add dword ptr [ebx + 0x50fff95d], -0x18; push edi; sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x0015176e: add dword ptr [ebx + 0x50fff95d], -0x18; xchg edi, eax; sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x0015162e: add dword ptr [ebx + 0x50fff95d], -0x18; xlatb; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x000b7d05: add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x0005ac73: add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0013231a: add dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x00084bd0: add dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x000406ce: add dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0009aaef: add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000ac655: add dword ptr [ebx + 0x5e], ebx; ret; 
0x00091218: add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x00158944: add dword ptr [ebx + 0x5f], -7; call dword ptr [eax - 0x18]; 
0x0004614c: add dword ptr [ebx + 0xf01243c], eax; xchg esp, eax; ret 0xf685; 
0x0004089e: add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000b63f3: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2013: add dword ptr [ebx + 0xf660741], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b6413: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2033: add dword ptr [ebx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0014637b: add dword ptr [ebx + 2], edi; call dword ptr gs:[0x10]; 
0x0005dfd1: add dword ptr [ebx + edi*2], -7; call dword ptr [eax - 0x18]; 
0x00134ca8: add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00092c22: add dword ptr [ebx - 0x2ff60120], eax; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000598ab: add dword ptr [ebx - 0x362f43], eax; call dword ptr [eax]; 
0x0016ef2c: add dword ptr [ebx - 0x39d6f3bd], ecx; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000fad5c: add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfad31; xor eax, eax; ret; 
0x000859ab: add dword ptr [ebx - 0x3fcef73c], eax; pop ebx; ret; 
0x000849ed: add dword ptr [ebx - 0x3fcefb3c], eax; pop ebx; pop esi; ret; 
0x000740a7: add dword ptr [ebx - 0x4f343], eax; call dword ptr [eax]; 
0x00079219: add dword ptr [ebx - 0x5037b], ecx; dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x0006c4f8: add dword ptr [ebx - 0x5e77b], ecx; dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x001a0c07: add dword ptr [ebx - 0x64737474], ecx; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000390ce: add dword ptr [ebx - 0x69f0f606], eax; ret 0xb60f; 
0x0015b04d: add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x000a6df9: add dword ptr [ebx - 0x72cbdba4], ecx; and dword ptr [edi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x00140f24: add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x00153306: add dword ptr [ebx - 0x72efdb84], ecx; xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x00141a6e: add dword ptr [ebx - 0x72f7dbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x56]; 
0x000f0964: add dword ptr [ebx - 0x76ebdbbc], ecx; push ebx; adc al, 0x8d; and byte ptr [ebx + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x001431e4: add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x00037871: add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x000e0348: add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00071d8a: add dword ptr [ebx - 0x7cfbdba4], ecx; ret; 
0x00026ae4: add dword ptr [ebx - 0x7d], edx; ret; 
0x00053f97: add dword ptr [ebx - 0xa], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x001180a3: add dword ptr [ebx - 0xd7cc7a5], ecx; add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0017be16: add dword ptr [ebx - 7], esp; call dword ptr [eax + 0x6a]; 
0x00189ed7: add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00080a3c: add dword ptr [ecx + 0x19881472], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00134066: add dword ptr [ecx + 0x244c8bda], ecx; sbb byte ptr [ecx], ch; ret 0xca39; 
0x00041b24: add dword ptr [ecx + 0x245489e8], ecx; adc al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x0002f844: add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x00149bea: add dword ptr [ecx + 0x2c706], ecx; add byte ptr [eax], al; add bl, ch; ret 0x148d; 
0x00154a8c: add dword ptr [ecx + 0x31], esi; leave; cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x000b6261: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b6391: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1e81: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1fb1: add dword ptr [ecx + 0x3418b02], ecx; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b9101: add dword ptr [ecx + 0x3428d02], ecx; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6131: add dword ptr [ecx + 0x3428d02], ecx; pop edi; ret; 
0x000b6361: add dword ptr [ecx + 0x3428d02], ecx; ret; 
0x000b6381: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b1fa1: add dword ptr [ecx + 0x418b6602], ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x00035901: add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000b6371: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1f91: add dword ptr [ecx + 0x4418a02], ecx; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b95f1: add dword ptr [ecx + 0x4418b02], ecx; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b7f5e: add dword ptr [ecx + 0x4428d02], ecx; pop edi; pop ebx; ret; 
0x0003f242: add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000fdec7: add dword ptr [ecx + 0x48], -7; call dword ptr [eax + 0x55]; 
0x000acc8f: add dword ptr [ecx + 0x4c48303], ecx; mov eax, esi; pop ebx; pop esi; ret; 
0x000665d6: add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000b4c21: add dword ptr [ecx + 0x5bd08902], ecx; ret; 
0x000c05d4: add dword ptr [ecx + 0x5bf88902], ecx; pop edi; ret; 
0x00084b56: add dword ptr [ecx + 0x5e5b044a], ecx; pop edi; ret; 
0x00132c6f: add dword ptr [ecx + 0x5f5e5bd8], ecx; ret; 
0x000b3b6e: add dword ptr [ecx + 0x5ff88902], ecx; pop ebx; ret; 
0x000b1d71: add dword ptr [ecx + 0x5ff88902], ecx; ret; 
0x00165ab3: add dword ptr [ecx + 0x62], -7; call dword ptr [eax - 0x18]; 
0x000a4812: add dword ptr [ecx + 0x63e9047e], ecx; idiv bh; dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x0016eb3b: add dword ptr [ecx + 0x64], -7; call dword ptr [edx + 0x6a]; 
0x0010e4ca: add dword ptr [ecx + 0x6a], -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x000afb3e: add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000649b2: add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x00100f88: add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x0009859c: add dword ptr [ecx + eax*2 - 0x48], esi; lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x00142564: add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0010e43b: add dword ptr [ecx + ecx*2], -7; call dword ptr [eax - 0x18]; 
0x0010e43b: add dword ptr [ecx + ecx*2], -7; call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x000fbbd0: add dword ptr [ecx - 0x13], edi; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00087f4b: add dword ptr [ecx - 0x2776eb90], ecx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00152e9f: add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x00079ee6: add dword ptr [ecx - 0x3b7cfbaf], ecx; adc al, 0x5b; pop esi; ret; 
0x000a8c78: add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00150a50: add dword ptr [ecx - 0x45548acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009e40d: add dword ptr [ecx - 0x45618acd], ecx; add dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00176f55: add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000f2036: add dword ptr [ecx - 0x4837b], ecx; inc dword ptr [ecx]; ret; 
0x0012a0a4: add dword ptr [ecx - 0x48b7b], ecx; dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x0008c6b1: add dword ptr [ecx - 0x49f0fbbd], ecx; ret 0xe0eb; 
0x00075cc7: add dword ptr [ecx - 0x4ef4b], ecx; call dword ptr [esi - 1]; 
0x00074ac1: add dword ptr [ecx - 0x4ef4b], ecx; dec dword ptr [ecx - 0x54743]; call dword ptr [esi - 1]; 
0x00078dc9: add dword ptr [ecx - 0x4f373], ecx; call dword ptr [edx + 0x52]; 
0x0007891e: add dword ptr [ecx - 0x4fb73], ecx; call dword ptr [eax + 0x50]; 
0x00074129: add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00078c6b: add dword ptr [ecx - 0x51373], ecx; call dword ptr [eax + 0x50]; 
0x000738bd: add dword ptr [ecx - 0x53f63], ecx; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x000c69da: add dword ptr [ecx - 0x6ff0f7bf], ecx; ret 0x4b8b; 
0x0014a869: add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00043c57: add dword ptr [ecx - 0x74d3dbbc], ecx; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x0008f245: add dword ptr [ecx - 0x769adbbe], ecx; adc eax, 0x7c; pop ebx; ret; 
0x0008fb0d: add dword ptr [ecx - 0x769af7be], ecx; adc eax, 0x78; pop ebx; ret; 
0x000395c6: add dword ptr [ecx - 0x76e7dbbc], ecx; ret; 
0x001009da: add dword ptr [ecx - 0x7aefdba4], ecx; sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0002b066: add dword ptr [ecx - 0x7cb7dba4], ecx; ret; 
0x0002a4df: add dword ptr [ecx - 0x7cdfdba4], ecx; ret; 
0x000547c6: add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0005de9d: add dword ptr [ecx - 0xc36b], ecx; jmp dword ptr [esi - 0x7d]; 
0x0002ac60: add dword ptr [ecx], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax + 0x71], ebp; stc; call dword ptr [eax - 0x18]; 
0x0017ca37: add dword ptr [ecx], 0x63; stc; call dword ptr [eax + 0x6a]; 
0x0014a67a: add dword ptr [ecx], 0xa30f0800; ret 0x820f; 
0x00153533: add dword ptr [ecx], 0xa30f0800; ret 0x830f; 
0x0011529c: add dword ptr [ecx], 0xa30f0800; ret 0x920f; 
0x001a870b: add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x00129468: add dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aa884: add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0008d364: add dword ptr [ecx], eax; jne 0x8d378; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006830b: add dword ptr [ecx], eax; ret 0x9589; 
0x0006cd82: add dword ptr [ecx], eax; ret; 
0x00092bf7: add dword ptr [ecx], eax; rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001165f9: add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x001aa886: add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0005d42b: add dword ptr [ecx], ebp; fdivr dword ptr [ecx]; ret 0xee7c; 
0x00146a25: add dword ptr [ecx], ebp; ret 0x5439; 
0x0014da70: add dword ptr [ecx], ebp; ret 0x828d; 
0x0006eff1: add dword ptr [ecx], ebp; ret; 
0x0016c52b: add dword ptr [ecx], ebx; add byte ptr [eax], al; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002582f: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; add esp, 0xc; ret; 
0x00084e47: add dword ptr [ecx], ecx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0012b37d: add dword ptr [ecx], ecx; ret 0x1789; 
0x0012b3f4: add dword ptr [ecx], ecx; ret 0x78b; 
0x001041f1: add dword ptr [ecx], ecx; ret 0xf983; 
0x0003ddab: add dword ptr [ecx], ecx; ret; 
0x00122b17: add dword ptr [ecx], edi; fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x000ac2c6: add dword ptr [ecx], edi; fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x0005a24d: add dword ptr [ecx], edi; ret 0x1e74; 
0x0010996b: add dword ptr [ecx], edi; ret 0x367e; 
0x0005d095: add dword ptr [ecx], edi; ret 0x574; 
0x0009de26: add dword ptr [ecx], edi; ret 0x830f; 
0x00076285: add dword ptr [ecx], edi; ret 0x840f; 
0x000a9f6b: add dword ptr [ecx], edi; ret 0x872; 
0x0004477f: add dword ptr [ecx], edi; ret 0x8c0f; 
0x0002bdc2: add dword ptr [ecx], edi; ret 0xc73; 
0x001099a1: add dword ptr [ecx], edi; ret 0xda75; 
0x0012480c: add dword ptr [ecx], edi; ret 0xe075; 
0x00106360: add dword ptr [ecx], edi; ret 0xe675; 
0x00123152: add dword ptr [ecx], edi; ret 0xe975; 
0x000afcd5: add dword ptr [ecx], edi; ret 0xec72; 
0x000afdc2: add dword ptr [ecx], edi; ret 0xef72; 
0x000fee0c: add dword ptr [ecx], edi; ret 0xef7f; 
0x0015a366: add dword ptr [ecx], edi; ret 0xf575; 
0x0002c4a1: add dword ptr [ecx], edi; ret; 
0x0005f3e7: add dword ptr [ecx], edi; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000ed6f9: add dword ptr [ecx], esi; call dword ptr [ebx - 0x18]; 
0x000af289: add dword ptr [ecx], esi; sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x00043c67: add dword ptr [ecx], esp; ret 0xb60f; 
0x00099eba: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915da: add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000ea246: add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x0014eeb4: add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000931ce: add dword ptr [edi + 0x1a], edi; mov edx, 1; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000e9950: add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e943f: add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041cd6: add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00041e05: add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018010d: add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x0010bda5: add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00094674: add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x00186224: add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00040483: add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x001539bb: add dword ptr [edi + 0x22], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00180003: add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000e954a: add dword ptr [edi + 0x23], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00160a32: add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00180081: add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x000dd579: add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x0012a9a1: add dword ptr [edi + 0x24], edi; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00154f60: add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x000ea296: add dword ptr [edi + 0x27], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00042bce: add dword ptr [edi + 0x27], edi; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012aae0: add dword ptr [edi + 0x2d], esi; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012bb5e: add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x00061234: add dword ptr [edi + 0x31], edi; add esp, 0x18; pop ebx; ret; 
0x0008fefe: add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x00061123: add dword ptr [edi + 0x3a], edi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0010ba3a: add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x0012a8dc: add dword ptr [edi + 0x51], edi; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0010b71a: add dword ptr [edi + 0x53], edi; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00160744: add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00154434: add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x000fbfbb: add dword ptr [edi + 0x5d], ebx; neg eax; ret; 
0x000bb786: add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0003eff2: add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x00129fca: add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0007dc22: add dword ptr [edi + 0xb], edi; ret; 
0x00040f59: add dword ptr [edi + 0xc], edi; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0003edde: add dword ptr [edi + 0xf], edi; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00198cb0: add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00153e31: add dword ptr [edi + 4], edi; ret; 
0x0010cee1: add dword ptr [edi + 9], esi; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0009105e: add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00175588: add dword ptr [edi + edx - 0x75], esi; push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00192b1a: add dword ptr [edi - 0x18], ebx; fmul qword ptr [edx - 1]; inc dword ptr [ecx + 0x46abfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196b3a: add dword ptr [edi - 0x18], ebx; mov esp, 0x81ffff0a; ret; 
0x000a8c50: add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00157f1b: add dword ptr [edi - 7], ebx; call dword ptr [eax - 0x18]; 
0x00148d66: add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x001263af: add dword ptr [edi], 0x53; stc; call dword ptr [edx + 0x52]; 
0x0007cf8a: add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x0019462f: add dword ptr [edi], ecx; mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194507: add dword ptr [edi], ecx; mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ac2c2: add dword ptr [edi], ecx; mov esi, 0xda390114; je 0xac2c0; pop ebx; ret; 
0x00140a28: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7cfffffe], dl; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x00173978: add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x17390e; ret 0x25; 
0x000a73ec: add dword ptr [edi], ecx; test ch, dl; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa741e; call eax; 
0x000fd611: add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x001a932c: add dword ptr [edi], ecx; test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x00157933: add dword ptr [edi], ecx; test dword ptr [ecx + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72dfdbbc], cl; adc bh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00098f47: add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x000b9bf7: add dword ptr [edi], ecx; test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00099147: add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x000b3c3b: add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0004cda0: add dword ptr [edi], ecx; test eax, ebp; or byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000f1a5c: add dword ptr [edi], ecx; test ebx, ebx; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x00111578: add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x0012caf2: add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x0013ee7a: add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000448de: add dword ptr [edi], ecx; xchg esp, eax; ret 0x448b; 
0x000d7a99: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x000ca033: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x00049930: add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000508a1: add dword ptr [edi], ecx; xchg esp, eax; ret 0xeb39; 
0x00046150: add dword ptr [edi], ecx; xchg esp, eax; ret 0xf685; 
0x0017a9c8: add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009118e: add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000835cc: add dword ptr [edx + 0x50], edx; push ebx; call dword ptr [edi + 0x40]; 
0x001895e2: add dword ptr [edx + 0x50], edx; push esi; call dword ptr [edi + 0x40]; 
0x001694ca: add dword ptr [edx + 0x63], -7; call dword ptr [eax - 0x18]; 
0x000b63b3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd3: add dword ptr [edx + 0xf660841], ecx; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x00095ca4: add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0005ac70: add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x0007db79: add dword ptr [edx + ebx - 0x7cff0000], -0x3c; add al, 0x5b; pop esi; ret; 
0x000a8e41: add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000aff54: add dword ptr [edx + esi*8 - 0x7d], esi; ret 0x8904; 
0x000c11d2: add dword ptr [edx - 0x74cf77ca], ecx; inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x0009a1f1: add dword ptr [edx - 0x75], esi; jl 0x9a21b; adc al, 0x89; ret 0xc389; 
0x000c0592: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop ebx; pop edi; ret; 
0x000bd6e2: add dword ptr [edx - 0x76fd77ff], ecx; clc; pop edi; ret; 
0x0014d7e1: add dword ptr [edx], 0; add byte ptr [ecx], ch; ret; 
0x000894b2: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018900e: add dword ptr [edx], ebp; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0008a335: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083e85: add dword ptr [edx], ebp; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00085d8a: add dword ptr [edx], ebp; push dword ptr [esp + 0x1c]; call 0x7ec60; add esp, 0x1c; ret; 
0x00032e37: add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x0017a83c: add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x0012af6f: add dword ptr [esi + 0x1e], esi; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x00126106: add dword ptr [esi + 0x4d], -7; call dword ptr [eax + 0x55]; 
0x0015539d: add dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0014f378: add dword ptr [esi + 0x68fff95c], -0x31; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, -0x51; stc; call dword ptr [eax - 0x18]; 
0x00042d4f: add dword ptr [esi + 0xd], esi; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x000b6433: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b2053: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6453: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2073: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6473: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2093: add dword ptr [esi + 0xf], esp; adc cl, byte ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b3ec3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 5]; pop ebx; ret; 
0x000b3ed3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 6]; pop ebx; ret; 
0x000b3ee3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 7]; pop ebx; ret; 
0x000b3ef3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [ecx + 8]; pop ebx; ret; 
0x000b6163: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 7]; ret; 
0x000b7f8e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001aa823: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0524: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b9e: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edi; pop edi; ret; 
0x000b4bc8: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; pop ebx; ret; 
0x000b1fc3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; mov eax, edx; ret; 
0x000bacc3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9683: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bace3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b96a3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000bad03: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b96c3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000bad23: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b96e3: add dword ptr [esi + 0xf], esp; adc eax, dword ptr [edx]; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000fe156: add dword ptr [esi + ecx - 0x77], esi; ret; 
0x001aa0cb: add dword ptr [esi + edx*4 + 0x5e], esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0012e377: add dword ptr [esi + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2b7: add dword ptr [esi + esi - 0x73], esi; dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0014affc: add dword ptr [esi - 0x3f], esp; ret 0x6608; 
0x0009a30c: add dword ptr [esi - 0x77], esi; ret; 
0x001769de: add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00117677: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0003d3a6: add dword ptr [esi], edx; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x00095121: add dword ptr [esp + ebx - 0x7d], esi; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x00043176: add dword ptr [esp + edx], -0x7f; ret; 
0x00128ec1: add dword ptr es:[eax], eax; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x000ac6e1: add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x00144e3b: add dword ptr ss:[eax], eax; add byte ptr [eax - 0x73], dl; adc dword ptr [edx], 0x5a; stc; call dword ptr [eax - 0x18]; 
0x00093fad: add dword ptr ss:[eax], eax; add byte ptr [ebp - 0x6c04579], cl; call dword ptr [eax - 0x73]; 
0x0013da3d: add dword ptr ss:[eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x000d3269: add eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x00025526: add eax, 0; ret; 
0x000c0ff3: add eax, 0x10; bsf edx, edx; call 0x187611; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf3: add eax, 0x10; bsf edx, edx; call 0x187611; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c105a: add eax, 0x10; call 0x187611; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b07e8: add eax, 0x10; pop edi; pop esi; ret; 
0x00131ff9: add eax, 0x10ae1b; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0003c973: add eax, 0x10c48300; test eax, eax; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc92: add eax, 0x10c48300; test eax, eax; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x001892aa: add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000c132b: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdeb8: add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00123610: add eax, 0x14; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x00154933: add eax, 0x14; jne 0x15493e; add esp, 0x1c; ret; 
0x001772b7: add eax, 0x14; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177327: add eax, 0x14; jne 0x177332; add esp, 0x4c; ret; 
0x00177397: add eax, 0x14; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773fa: add eax, 0x14; jne 0x177405; add esp, 0x4c; ret; 
0x0017745a: add eax, 0x14; jne 0x177465; add esp, 0x4c; ret; 
0x001774c7: add eax, 0x14; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177547: add eax, 0x14; jne 0x177552; add esp, 0x4c; ret; 
0x00177a38: add eax, 0x14; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a87: add eax, 0x14; jne 0x177abc; add esp, 0x1c; ret; 
0x00179221: add eax, 0x14; jne 0x17922c; add esp, 0x2c; ret; 
0x0003b078: add eax, 0x14; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e7: add eax, 0x14; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003f28b: add eax, 0x14; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39e: add eax, 0x14; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0005f704: add eax, 0x14; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00087e31: add eax, 0x14; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x000aaa47: add eax, 0x174d138; inc eax; pop edi; ret; 
0x00035238: add eax, 0x182474ff; push 0; call 0x351e0; add esp, 0x1c; ret; 
0x00139896: add eax, 0x18; call eax; 
0x00025022: add eax, 0x18; jmp eax; 
0x0013d0a9: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d186: add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1ed: add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250af: add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00154bbe: add eax, 0x18; pop edi; pop ebp; ret; 
0x00169ad8: add eax, 0x18; push eax; call 0x169880; add esp, 0x2c; ret; 
0x00154804: add eax, 0x18; push eax; call edx; 
0x001398c5: add eax, 0x18; push esi; call eax; 
0x0003f5f4: add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x00095d39: add eax, 0x1a70db; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d19: add eax, 0x1a70fb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00094b59: add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008f379: add eax, 0x1ada9b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008f359: add eax, 0x1adabb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f339: add eax, 0x1adadb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f319: add eax, 0x1adafb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008d679: add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x001999eb: add eax, 0x1c030004; mov edi, edi; jecxz 0x1999dc; add eax, 0x81fffedc; ret; 
0x00035218: add eax, 0x1c2474ff; push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x001733b5: add eax, 0x1c; push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0003dddd: add eax, 0x1cc48300; ret; 
0x0003d7a9: add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d789: add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00134e84: add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00034be9: add eax, 0x20822b; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bc9: add eax, 0x20824b; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba9: add eax, 0x20826b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x000c107f: add eax, 0x20; call 0x187611; add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b07f5: add eax, 0x20; pop edi; pop esi; ret; 
0x000437b7: add eax, 0x20; ret; 
0x0002f809: add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x000b62d8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6438: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef8: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2058: add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x00026089: add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026069: add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025519: add eax, 0x2178fb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024f99: add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x00024f79: add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x00024b09: add eax, 0x21830b; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x000a91cc: add eax, 0x21; ret; 
0x0003deb7: add eax, 0x244c8b00; and byte ptr [eax + 0xaf], bh; xor edx, edx; call dword ptr gs:[0x10]; 
0x000952b9: add eax, 0x24548b00; or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0008be8e: add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00122b60: add eax, 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0016c449: add eax, 0x28; push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000c9753: add eax, 0x291ff083; ret 0x1489; 
0x000494d9: add eax, 0x291ff083; ret 0x5489; 
0x000583c4: add eax, 0x291ff083; ret 0x9589; 
0x0004c979: add eax, 0x291ff083; ret; 
0x00088012: add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00081b90: add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000234c9: add eax, 0x2cc48300; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003cd5d: add eax, 0x2cc48300; ret; 
0x000b3ca1: add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000a8e87: add eax, 0x2efffff7; lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0005786e: add eax, 0x2f9d868d; stc; call dword ptr [eax + 0x57]; 
0x001968dd: add eax, 0x3000432; sbb al, 0x8b; jmp ebx; 
0x0011b6b5: add eax, 0x302474ff; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000c0f31: add eax, 0x30; call 0x187611; add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdc98: add eax, 0x30; call 0x187611; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b0802: add eax, 0x30; pop edi; pop esi; ret; 
0x000813be: add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c683: add eax, 0x38770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000b7de4: add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00174c1a: add eax, 0x38; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00088d3b: add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00137437: add eax, 0x408b078b; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x000bab6c: add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000c06df: add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000a71f4: add eax, 0x4485838d; stc; call dword ptr [eax - 0x73]; 
0x00141e50: add eax, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0017424a: add eax, 0x4c; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x000af28e: add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x0010bdfc: add eax, 0x5002e0c1; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0019e5dc: add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019cdd3: add eax, 0x542b60f; sub eax, ecx; ret; 
0x00137444: add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x00137d27: add eax, 0x5632808d; stc; call dword ptr [eax - 0x75]; 
0x00136baa: add eax, 0x5653808d; stc; call dword ptr [eax - 0x75]; 
0x00139503: add eax, 0x5678808d; stc; call dword ptr [eax - 0x75]; 
0x0008bde4: add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x000a3ada: add eax, 0x5a8d0000; or dh, dh; ret; 
0x001398fc: add eax, 0x5b000000; pop esi; pop ebp; ret; 
0x0010ebf1: add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x0003cc9a: add eax, 0x5b08c483; ret; 
0x0003c5ed: add eax, 0x5b18c483; ret; 
0x000975fe: add eax, 0x5b28c483; ret; 
0x000a0503: add eax, 0x5b38c483; ret; 
0x000dad1f: add eax, 0x5b48c483; ret; 
0x000b39b9: add eax, 0x5b5f0000; ret; 
0x000616c8: add eax, 0x5b78c483; ret; 
0x00186808: add eax, 0x5c10448d; ret; 
0x000c29ce: add eax, 0x5e000002; xor eax, eax; pop ebx; ret; 
0x00177765: add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0009ac7a: add eax, 0x5e5bc031; ret; 
0x001334ea: add eax, 0x5e5bd089; ret; 
0x000b9fb3: add eax, 0x5e5f0000; pop ebx; ret; 
0x000b62e1: add eax, 0x5f0c428d; ret; 
0x000bb8d1: add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x000c06e4: add eax, 0x5f5bf889; ret; 
0x001398bf: add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x00089885: add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00095273: add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000efe6e: add eax, 0x6c818d50; je 0xefe6e; call dword ptr [eax - 0x18]; 
0x000f051f: add eax, 0x6c818d50; je 0xf051f; call dword ptr [eax - 0x18]; 
0x000f05ea: add eax, 0x6c818d50; je 0xf05ea; call dword ptr [eax - 0x18]; 
0x001462a9: add eax, 0x6c828d50; je 0x1462a9; call dword ptr [eax - 0x18]; 
0x00173d82: add eax, 0x6c828d50; je 0x173d82; call dword ptr [eax - 0x18]; 
0x001422ba: add eax, 0x6c838d50; je 0x1422ba; call dword ptr [eax - 0x18]; 
0x00148de2: add eax, 0x6c838d50; je 0x148de2; call dword ptr [eax - 0x18]; 
0x0016ea5a: add eax, 0x6c838d50; je 0x16ea5a; call dword ptr [eax - 0x18]; 
0x0016eb26: add eax, 0x6c838d50; je 0x16eb26; call dword ptr [eax - 0x18]; 
0x0016ec73: add eax, 0x6c838d50; je 0x16ec73; call dword ptr [eax - 0x18]; 
0x0016ecd2: add eax, 0x6c838d50; je 0x16ecd2; call dword ptr [eax - 0x18]; 
0x0016ed09: add eax, 0x6c838d50; je 0x16ed09; call dword ptr [eax - 0x18]; 
0x0016f557: add eax, 0x6c838d50; je 0x16f557; call dword ptr [eax - 0x18]; 
0x0017210a: add eax, 0x6c838d50; je 0x17210a; call dword ptr [eax - 0x18]; 
0x001722d8: add eax, 0x6c838d50; je 0x1722d8; call dword ptr [eax - 0x18]; 
0x001729f0: add eax, 0x6c838d50; je 0x1729f0; call dword ptr [eax - 0x18]; 
0x00172a5c: add eax, 0x6c838d50; je 0x172a5c; call dword ptr [eax - 0x18]; 
0x0017388b: add eax, 0x6c838d50; je 0x17388b; call dword ptr [eax - 0x18]; 
0x00173e76: add eax, 0x6c838d50; je 0x173e76; call dword ptr [eax - 0x18]; 
0x00174b8b: add eax, 0x6c838d50; je 0x174b8b; call dword ptr [eax - 0x18]; 
0x00175899: add eax, 0x6c838d50; je 0x175899; call dword ptr [eax - 0x18]; 
0x00177c98: add eax, 0x6c838d50; je 0x177c98; call dword ptr [eax - 0x18]; 
0x0017816d: add eax, 0x6c838d50; je 0x17816d; call dword ptr [eax - 0x18]; 
0x001781b1: add eax, 0x6c838d50; je 0x1781b1; call dword ptr [eax - 0x18]; 
0x001781fa: add eax, 0x6c838d50; je 0x1781fa; call dword ptr [eax - 0x18]; 
0x00178ab0: add eax, 0x6c838d50; je 0x178ab0; call dword ptr [eax - 0x18]; 
0x00178b03: add eax, 0x6c838d50; je 0x178b03; call dword ptr [eax - 0x18]; 
0x00178b42: add eax, 0x6c838d50; je 0x178b42; call dword ptr [eax - 0x18]; 
0x00178bb1: add eax, 0x6c838d50; je 0x178bb1; call dword ptr [eax - 0x18]; 
0x0017a669: add eax, 0x6c838d50; je 0x17a669; call dword ptr [eax - 0x18]; 
0x000606b0: add eax, 0x6c838d50; je 0x606b0; call dword ptr [eax - 0x18]; 
0x0006070b: add eax, 0x6c838d50; je 0x6070b; call dword ptr [eax - 0x18]; 
0x00060b1e: add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x0008eaf0: add eax, 0x6c838d50; je 0x8eaf0; call dword ptr [eax - 0x18]; 
0x000acd94: add eax, 0x6c838d50; je 0xacd94; call dword ptr [eax - 0x18]; 
0x0013fd93: add eax, 0x6c858d50; je 0x13fd93; call dword ptr [eax - 0x18]; 
0x0013fe4a: add eax, 0x6c858d50; je 0x13fe4a; call dword ptr [eax - 0x18]; 
0x0013fe8a: add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x001491f0: add eax, 0x6c858d50; je 0x1491f0; call dword ptr [eax - 0x18]; 
0x001492eb: add eax, 0x6c858d50; je 0x1492eb; call dword ptr [eax - 0x18]; 
0x0016d19a: add eax, 0x6c858d50; je 0x16d19a; call dword ptr [eax - 0x18]; 
0x001734e0: add eax, 0x6c858d50; je 0x1734e0; call dword ptr [eax - 0x18]; 
0x00179de6: add eax, 0x6c858d50; je 0x179de6; call dword ptr [eax - 0x18]; 
0x000a8192: add eax, 0x6c858d50; je 0xa8192; call dword ptr [eax - 0x18]; 
0x0016cfb2: add eax, 0x6c868d50; je 0x16cfb2; call dword ptr [eax - 0x18]; 
0x00178540: add eax, 0x6c868d50; je 0x178540; call dword ptr [eax - 0x18]; 
0x00023255: add eax, 0x6c868d50; je 0x23255; call dword ptr [eax - 0x18]; 
0x0016ca9c: add eax, 0x6c878d50; je 0x16ca9c; call dword ptr [eax - 0x18]; 
0x000f0484: add eax, 0x6c878d50; je 0xf0484; call dword ptr [eax - 0x18]; 
0x00139386: add eax, 0x6e6c868d; stc; call dword ptr [eax - 0x75]; 
0x0013948e: add eax, 0x6e6c878d; stc; call dword ptr [eax - 0x75]; 
0x000ba1e8: add eax, 0x7130f66; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000acd5a: add eax, 0x746cab8d; stc; call dword ptr [eax + 0x55]; 
0x00034624: add eax, 0x74ac838d; stc; call dword ptr [eax - 0x73]; 
0x0010e46b: add eax, 0x74f2f883; rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x00075c8e: add eax, 0x74f33990; or al, 0x83; ret; 
0x00035170: add eax, 0x75003880; or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x00111331: add eax, 0x75003f80; sbb eax, 0x8b056a50; jl 0x111361; adc byte ptr [ebp - 0x6b67779], cl; call dword ptr [eax - 0x73]; 
0x00150406: add eax, 0x75085039; hlt; ret; 
0x000988b2: add eax, 0x754bf883; mov al, byte ptr [0x8900558b]; ret; 
0x0019a9f4: add eax, 0x81fffecc; ret; 
0x001999f4: add eax, 0x81fffedc; ret; 
0x001966f4: add eax, 0x81ffff0f; ret; 
0x001958f4: add eax, 0x81ffff1d; ret; 
0x001938f4: add eax, 0x81ffff3d; ret; 
0x000bdec1: add eax, 0x824448b; pop esi; ret; 
0x000c45da: add eax, 0x828d9874; hlt; wait; stc; call dword ptr [eax - 0x73]; 
0x00075227: add eax, 0x83000001; ret 0x8904; 
0x00061277: add eax, 0x830002ea; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00084cfd: add eax, 0x8301e083; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001833c7: add eax, 0x83fffffe; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00122977: add eax, 0x83ffffff; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00130f8d: add eax, 0x85c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x0007b923: add eax, 0x870f0000; add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00088ba5: add eax, 0x870f0000; and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00187b1b: add eax, 0x870f0000; cld; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00189151: add eax, 0x870f0000; fiadd word ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0018934b: add eax, 0x870f0000; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x00086acd: add eax, 0x870f0000; stosb byte ptr es:[edi], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0007beb0: add eax, 0x870f0000; test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0008c186: add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x001a9522: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a8502: add eax, 0x87820f; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x001a8bc2: add eax, 0x878c0f; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x000f1d89: add eax, 0x878d0000; pop dword ptr [edi - 7]; call dword ptr [eax - 0x73]; 
0x000ec528: add eax, 0x8901e683; ret 0xe283; 
0x000d850d: add eax, 0x891fe083; ret 0x840f; 
0x00177445: add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00198ef0: add eax, 0x8b1c035f; jmp ebx; 
0x000d5cd0: add eax, 0x8d2e0000; je 0xd5cfd; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x00059dbe: add eax, 0x8d500000; xchg al, ch; das; stc; call dword ptr [eax - 0x18]; 
0x00059c71: add eax, 0x8d500000; xchg byte ptr [ecx], bl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00059bd8: add eax, 0x8d500000; xchg ch, cl; das; stc; call dword ptr [eax - 0x18]; 
0x0004a438: add eax, 0x8d500000; xchg dword ptr [eax + esi], eax; stc; call dword ptr [eax - 0x18]; 
0x0004a1dd: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x4a1df; call dword ptr [eax - 0x18]; 
0x0004d532: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x4d534; call dword ptr [eax - 0x18]; 
0x00051217: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x51219; call dword ptr [eax - 0x18]; 
0x00059954: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x59956; call dword ptr [eax - 0x18]; 
0x000d11ce: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0xd11d0; call dword ptr [eax - 0x18]; 
0x000d8ac0: add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0xd8ac2; call dword ptr [eax - 0x18]; 
0x0004a4cb: add eax, 0x8d500000; xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x001106e9: add eax, 0x8d500000; xchg dword ptr [esi + 0x49], edx; stc; call dword ptr [eax - 0x18]; 
0x0004a4ee: add eax, 0x8d500000; xchg eax, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x0004a485: add eax, 0x8d500000; xchg eax, edx; ja 0x4a487; call dword ptr [eax - 0x18]; 
0x0004d62d: add eax, 0x8d500000; xchg eax, edx; ja 0x4d62f; call dword ptr [eax - 0x18]; 
0x00051493: add eax, 0x8d500000; xchg eax, edx; ja 0x51495; call dword ptr [eax - 0x18]; 
0x00059d05: add eax, 0x8d500000; xchg eax, edx; ja 0x59d07; call dword ptr [eax - 0x18]; 
0x000d12d2: add eax, 0x8d500000; xchg eax, edx; ja 0xd12d4; call dword ptr [eax - 0x18]; 
0x0004a3cf: add eax, 0x8d500000; xchg ebp, ecx; das; stc; call dword ptr [eax - 0x18]; 
0x00176d81: add eax, 0x90; pop esi; pop edi; ret; 
0x000b9c7c: add eax, 0x91d850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00176e11: add eax, 0x94; pop esi; pop edi; ret; 
0x000622c7: add eax, 0x950fdd29; ret 0x448b; 
0x000bb2bf: add eax, 0x9da850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00100139: add eax, 0x9dfe283; ret 0x5388; 
0x000f0418: add eax, 0x9fb8838d; stc; call dword ptr [eax - 0x73]; 
0x000f0556: add eax, 0x9fd8818d; stc; call dword ptr [eax - 0x73]; 
0x000959f9: add eax, 0xa30f0000; ret 0x830f; 
0x00097bb4: add eax, 0xa30f0000; ret 0xac73; 
0x0013086d: add eax, 0xa5c58100; lds edx, ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00137380: add eax, 0xa864968d; stc; call dword ptr [edx + 0x50]; 
0x00137192: add eax, 0xa88c808d; stc; call dword ptr [eax - 0x75]; 
0x00137dda: add eax, 0xa8c4808d; stc; call dword ptr [eax + 0x6a]; 
0x001a972d: add eax, 0xa; pop edi; ret; 
0x001a7604: add eax, 0xa; ret; 
0x00173fa1: add eax, 0xac03848d; and edi, ecx; call dword ptr [eax + 0x52]; 
0x0017158d: add eax, 0xac; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x00131ff7: add eax, 0xae1b0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x001a9392: add eax, 0xb; pop edi; ret; 
0x001a75b6: add eax, 0xb; ret; 
0x000d6d75: add eax, 0xc100818d; stc; call dword ptr [eax + 0x53]; 
0x001a304e: add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c1334: add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00197025: add eax, 0xc381ffff; mov eax, 0x300042a; sbb al, 0x8b; jmp ebx; 
0x001970be: add eax, 0xc381ffff; pop ds; sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00033093: add eax, 0xc4830009; adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x00172c19: add eax, 0xc483ffeb; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00032c3d: add eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x000df240: add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x001a9737: add eax, 0xc; pop edi; ret; 
0x0013f3ae: add eax, 0xc; ret; 
0x0012d247: add eax, 0xcbc28100; sti; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0010b072: add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x00054f96: add eax, 0xd; add esp, 4; jmp eax; 
0x001a973c: add eax, 0xd; pop edi; ret; 
0x001a7610: add eax, 0xd; ret; 
0x000607fa: add eax, 0xdee85051; dec ecx; std; call dword ptr [eax - 0x73]; 
0x000b43f7: add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x001a9741: add eax, 0xe; pop edi; ret; 
0x001a7614: add eax, 0xe; ret; 
0x00089e59: add eax, 0xec830000; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x001260e4: add eax, 0xec830000; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x00126093: add eax, 0xec830000; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x0012605d: add eax, 0xec830000; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x001503e9: add eax, 0xeca2b; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x000fb0e3: add eax, 0xee80000; lds ecx, ptr [eax]; add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000b3c9e: add eax, 0xf054a8d; test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b9c79: add eax, 0xf057f8d; test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000bb2bc: add eax, 0xf057f8d; test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017f9d3: add eax, 0xf0890000; pop ebx; pop esi; ret; 
0x001a93bb: add eax, 0xf; pop edi; ret; 
0x001a75cf: add eax, 0xf; ret; 
0x0019deae: add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00027142: add eax, 0xffee68e8; dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x0005dbf8: add eax, 0xffeff6e9; jmp dword ptr [esi - 0x70]; 
0x0013ceb9: add eax, 0xfff5b; mov eax, dword ptr [eax + 0xc8]; add eax, dword ptr gs:[0]; ret; 
0x000ff5b3: add eax, 0xfffe17e9; jmp dword ptr [esi - 9]; 
0x0013fe7a: add eax, 0xffff14e9; inc dword ptr [ebx - 0x7a72fb14]; test eax, 0x6afff958; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x00178c87: add eax, 0xffff25e9; jmp dword ptr [esi - 0x70]; 
0x00153de0: add eax, 0xfffffebb; jmp dword ptr [ebp - 0x5f]; 
0x000a0a73: add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x000ac2c0: add eax, 1; movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xac2c0; pop ebx; ret; 
0x0004321d: add eax, 1; pop ebx; ret; 
0x001a9700: add eax, 1; pop edi; ret; 
0x00042f00: add eax, 1; ret; 
0x000a8e3f: add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x0009c6e7: add eax, 2; add esp, 0xc; ret; 
0x000ac4c6: add eax, 2; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001a9705: add eax, 2; pop edi; ret; 
0x000d9f17: add eax, 2; ret; 
0x001a9345: add eax, 3; pop edi; ret; 
0x000d9f30: add eax, 3; ret; 
0x000c5503: add eax, 4; cmp edx, ecx; je 0xc550e; test edx, edx; jne 0xc5500; ret; 
0x001a970f: add eax, 4; pop edi; ret; 
0x00179c11: add eax, 4; push eax; push dword ptr [esp + 0x1c]; call 0x179a80; add esp, 0x1c; ret; 
0x001a75ec: add eax, 4; ret; 
0x000da0e7: add eax, 4; test edx, edx; jne 0xda0e0; mov eax, ecx; pop ebx; ret; 
0x00153e2a: add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x153e38; ret; 
0x001a9714: add eax, 5; pop edi; ret; 
0x001a75f0: add eax, 5; ret; 
0x001a9719: add eax, 6; pop edi; ret; 
0x001a75f4: add eax, 6; ret; 
0x001a936b: add eax, 7; pop edi; ret; 
0x001a758f: add eax, 7; ret; 
0x00172177: add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017219a: add eax, 8; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001a9723: add eax, 8; pop edi; ret; 
0x001597b5: add eax, 8; push eax; call 0xc2920; add esp, 0x1c; ret; 
0x001a75fc: add eax, 8; ret; 
0x0013f3a8: add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x001a9728: add eax, 9; pop edi; ret; 
0x001a7600: add eax, 9; ret; 
0x00025525: add eax, dword ptr [0]; ret; 
0x000a3ad9: add eax, dword ptr [0x5a8d0000]; or dh, dh; ret; 
0x00199bfc: add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001742f3: add eax, dword ptr [eax + edx*4 - 0x6d910]; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000977e9: add eax, dword ptr [eax]; add byte ptr [eax + 0xf0], bh; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b802f: add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0013672f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; adc ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x001367de: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x58; stc; call dword ptr [eax - 0x18]; 
0x0005e0d9: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0013ed9f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg al, ah; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x000e2ff4: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi + 0x46], bh; stc; call dword ptr [eax - 0x18]; 
0x00094367: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00183a39: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ebx], ebp; stc; call dword ptr [eax - 0x18]; 
0x00183a7f: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x67], eax; stc; call dword ptr [eax - 0x18]; 
0x0004a534: add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00177d96: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00175ad4: add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x7872ef3c], al; into; stc; call dword ptr [eax - 0x73]; 
0x00131e3c: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x14; pop ebx; pop edi; ret; 
0x000944d1: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00131b9f: add eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00190490: add eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7bae: add eax, dword ptr [eax]; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00130942: add eax, dword ptr [eax]; add byte ptr [eax], al; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012c8ae: add eax, dword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00094b99: add eax, dword ptr [eax]; add byte ptr [eax], al; ret; 
0x000a5c73: add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x0010dff7: add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x00094383: add eax, dword ptr [eax]; add byte ptr [ebp - 0x6c07f79], cl; call dword ptr [eax - 0x73]; 
0x000a31e7: add eax, dword ptr [eax]; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x001842bc: add eax, dword ptr [eax]; add byte ptr [ebp - 0x76f28b40], al; push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0002a71c: add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x00189725: add eax, dword ptr [eax]; add byte ptr [ebx + 0x548d08ec], al; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00053254: add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0008cf26: add eax, dword ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x000658fc: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x001a329e: add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00137adf: add eax, dword ptr [eax]; add byte ptr [ebx - 0x17a8f314], al; inc ebp; ret; 
0x0010e09e: add eax, dword ptr [eax]; add byte ptr [ebx - 0x24f6c7c], cl; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x00122ef1: add eax, dword ptr [eax]; add byte ptr [ebx - 0x2776d73c], al; pop ebx; ret; 
0x0006847a: add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002c08c: add eax, dword ptr [eax]; add byte ptr [ebx - 0x72b3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x00181d7d: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; into; stc; call dword ptr [ecx - 0x77]; 
0x00124293: add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x001694c3: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; inc edx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00126042: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f714], al; pop esp; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x00102970: add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x00082ce7: add eax, dword ptr [eax]; add byte ptr [ebx - 0x95f714], al; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x000ebb1c: add eax, dword ptr [eax]; add byte ptr [ebx - 0xfd77c4c], cl; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x001844b9: add eax, dword ptr [eax]; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x0019232e: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x001808b4: add eax, dword ptr [eax]; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00131993: add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001389e2: add eax, dword ptr [eax]; add byte ptr [ecx], al; call eax; 
0x0006f741: add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x00089dfa: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000593e8: add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00049ce0: add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b3c3f: add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0013a188: add eax, dword ptr [eax]; add byte ptr [edi + 7], dh; sar eax, 5; add esp, 0xc; ret; 
0x00140714: add eax, dword ptr [eax]; add byte ptr [edi], cl; inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0005eef3: add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x00083c38: add eax, dword ptr [eax]; add byte ptr [edx + 2], ch; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00135d17: add eax, dword ptr [eax]; add byte ptr [edx], al; call dword ptr [ebx + 0x14]; 
0x0008a05e: add eax, dword ptr [eax]; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x000a0a57: add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x001a9339: add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001a9356: add eax, dword ptr [eax]; add dh, dh; ret 0xf20; 
0x001a935f: add eax, dword ptr [eax]; add dh, dh; ret 0xf40; 
0x0019a6e2: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a93d: add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008e74f: add eax, dword ptr [eax]; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00127ba0: add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00143699: add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x001a9605: add eax, dword ptr [eax]; je 0x1a970a; mov eax, 4; pop edi; ret; 
0x0017944d: add eax, dword ptr [ebp + 0x317e74c0]; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x001552d2: add eax, dword ptr [ebp - 0x747bf040]; add byte ptr [eax], al; add byte ptr [ebx - 0x7ad7dbac], cl; ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x0016ccf4: add eax, dword ptr [ebp - 0x7cf28b40]; in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0013ee31: add eax, dword ptr [ebx + 0x428801e8]; add dword ptr [eax + 2], edi; ret; 
0x0016e27e: add eax, dword ptr [ebx + 0x478b08ec]; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000921d5: add eax, dword ptr [ebx + 0x57402fa]; pop ebx; pop esi; pop edi; ret; 
0x00189e26: add eax, dword ptr [ebx + 0x5e5b04c4]; jmp eax; 
0x000a17ae: add eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00081ba4: add eax, dword ptr [ebx + 0x5e5bef26]; pop edi; ret; 
0x001763fa: add eax, dword ptr [ebx - 0x137cef3c]; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00130253: add eax, dword ptr [ebx - 0x27fe031d]; pop ebx; pop esi; ret; 
0x0003f1e4: add eax, dword ptr [ebx - 0x373ef314]; or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00081bfe: add eax, dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x0007c5db: add eax, dword ptr [ebx - 0x3b7cdff2]; add al, 0x5b; pop esi; ret; 
0x00175c79: add eax, dword ptr [ebx - 0x4614ef3c]; nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00099144: add eax, dword ptr [ebx - 0x7af0fe06]; mov byte ptr [0x89000000], al; ret 0xf283; 
0x000acc91: add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00174a01: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x000a002c: add eax, dword ptr [ecx]; add byte ptr [eax], al; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00189ed8: add eax, dword ptr [ecx]; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a73d4: add eax, dword ptr [ecx]; ret 0x38b; 
0x0009707e: add eax, dword ptr [ecx]; ret 0x8966; 
0x0006c535: add eax, dword ptr [ecx]; ret 0xede9; 
0x000e40c8: add eax, dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000e8723: add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x00081c7c: add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00054f93: add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x00053700: add eax, dword ptr [esp]; ret; 
0x000593e7: add eax, dword ptr cs:[eax]; add byte ptr [ecx], bh; ret; 
0x000b3c3e: add eax, dword ptr ds:[eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00025524: add eax, dword ptr gs:[0]; ret; 
0x0013974e: add eax, eax; call 0x1f41a5b; pop ebx; ret; 
0x000fd53f: add eax, eax; pop ebx; pop esi; ret; 
0x000ef88b: add eax, ebp; das; ret 1; 
0x00176d39: add eax, ebp; int1; ret 0xffea; 
0x00176dc9: add eax, ebp; popal; ret 0xffea; 
0x0014da98: add eax, ebp; ret 0xf9a2; 
0x001543b0: add eax, ebx; cmp edx, ecx; jne 0x154380; pop ebx; pop esi; ret; 
0x0017a3fe: add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x00130257: add eax, ebx; pop ebx; pop esi; ret; 
0x00041a53: add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00122adc: add eax, ecx; adc edx, 0; ret; 
0x000c113b: add eax, ecx; add esi, ecx; call 0x187611; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001aa8ed: add eax, ecx; and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a5999: add eax, ecx; call 0x1875fd; add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a58d4: add eax, ecx; call 0x1875fd; add ebx, 0x34ac9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fc9: add eax, ecx; call 0x1875fd; add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3eba: add eax, ecx; call 0x1875fd; add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a8e5: add eax, ecx; call 0x1875fd; add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998d8: add eax, ecx; call 0x1875fd; add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988f8: add eax, ecx; call 0x1875fd; add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969d9: add eax, ecx; call 0x1875fd; add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968d4: add eax, ecx; call 0x1875fd; add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966c5: add eax, ecx; call 0x1875fd; add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949c9: add eax, ecx; call 0x1875fd; add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948c4: add eax, ecx; call 0x1875fd; add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946b8: add eax, ecx; call 0x1875fd; add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929c9: add eax, ecx; call 0x1875fd; add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928c4: add eax, ecx; call 0x1875fd; add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926b8: add eax, ecx; call 0x1875fd; add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007cf84: add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x001a575f: add eax, ecx; pop ebx; pop esi; ret; 
0x00191ed4: add eax, ecx; pop ebx; ret; 
0x000c1776: add eax, ecx; pop edi; ret; 
0x000c1a60: add eax, ecx; ret; 
0x0019b6e4: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d4: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199704: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019852e: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963ce: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019442e: add eax, ecx; sfence; call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1774: add eax, edi; add eax, ecx; pop edi; ret; 
0x00142882: add eax, edi; inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x001967cd: add eax, edi; pop edi; call 0x1875fd; add ebx, 0x433cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001947bd: add eax, edi; pop edi; call 0x1875fd; add ebx, 0x4515b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927bd: add eax, edi; pop edi; call 0x1875fd; add ebx, 0x46edb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1817: add eax, edi; pop edi; ret; 
0x00041b40: add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000c19f6: add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000c20f4: add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000b07e6: add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000b07f3: add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000b0800: add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000c22ed: add eax, edx; add eax, ecx; ret; 
0x001aa87b: add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001aa8f4: add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0016f081: add eax, edx; pop ebx; pop esi; ret; 
0x000b07dc: add eax, edx; pop edi; pop esi; ret; 
0x000c2453: add eax, edx; ret; 
0x00086294: add eax, esi; add al, byte ptr [eax]; pop ebx; ret; 
0x00127b9e: add eax, esi; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x0013d10c: add eax, esi; call dword ptr [eax - 0x73]; 
0x0013b610: add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c19b7: add eax, esi; pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0013677a: add ebp, 0x55; stc; call dword ptr [eax - 0x18]; 
0x000affe2: add ebp, dword ptr [ecx]; ret 0x1489; 
0x000c21e2: add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x0013c3aa: add ebp, dword ptr [ecx]; ret 0x8166; 
0x000c2227: add ebp, dword ptr [ecx]; ret 0xc031; 
0x000aee26: add ebp, dword ptr [ecx]; ret 0xd101; 
0x000adda2: add ebp, dword ptr [ecx]; ret 0xd601; 
0x00107dad: add ebp, dword ptr [ecx]; ret 0xda01; 
0x00107cf7: add ebp, dword ptr [ecx]; ret 0xea01; 
0x000a1698: add ebp, dword ptr [ecx]; ret; 
0x00180ed3: add ebp, dword ptr [edi]; jbe 0x180e5c; in al, dx; add al, 0x83; ret; 
0x000894b0: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018900c: add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00188eea: add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0002c35a: add ebp, ecx; cmp al, 0xff; dec dword ptr [ebx + 0x390c2444]; ret 0x1a73; 
0x0008f712: add ebp, edx; xor eax, eax; add esp, 0xc; ret; 
0x0010b24f: add ebx, -5; clc; call dword ptr [ecx + 0x6a]; 
0x000c2957: add ebx, 0x1087a1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000bbd24: add ebx, 0x10; call 0x187611; add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba624: add ebx, 0x10; call 0x187611; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000903ff: add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001a59a0: add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a58db: add ebx, 0x34ac9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fd0: add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3ec1: add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8f2: add ebx, 0x3e8ee; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6ee: add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019abf9: add ebx, 0x3f4e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aaef: add ebx, 0x3f5f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a9e8: add ebx, 0x3f6f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a8ec: add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6de: add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a939: add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00199bf9: add ebx, 0x40327; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199aef: add ebx, 0x40431; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999e8: add ebx, 0x40538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998df: add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019970e: add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199939: add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001998ef: add ebx, 0x40731; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c19: add ebx, 0x41147; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198b0f: add ebx, 0x41251; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198a08: add ebx, 0x41358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988ff: add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001987ec: add ebx, 0x414b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198959: add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019890f: add ebx, 0x41551; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198538: add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e9f: add ebx, 0x41c41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e81: add ebx, 0x41c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197de8: add ebx, 0x41cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d21: add ebx, 0x41dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c88: add ebx, 0x41e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bc1: add ebx, 0x41f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b28: add ebx, 0x41fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a61: add ebx, 0x4207f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979c8: add ebx, 0x42118; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197901: add ebx, 0x421df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197868: add ebx, 0x42278; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001977a1: add ebx, 0x4233f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197708: add ebx, 0x423d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197641: add ebx, 0x4249f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975a8: add ebx, 0x42538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001974e1: add ebx, 0x425ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197448: add ebx, 0x42698; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197381: add ebx, 0x4275f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972e8: add ebx, 0x427f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197221: add ebx, 0x428bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197188: add ebx, 0x42958; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001970c1: add ebx, 0x42a1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197028: add ebx, 0x42ab8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f61: add ebx, 0x42b7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ec8: add ebx, 0x42c18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196e01: add ebx, 0x42cdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d68: add ebx, 0x42d78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ca1: add ebx, 0x42e3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c08: add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196b41: add ebx, 0x42f9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196aa8: add ebx, 0x43038; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969e0: add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968db: add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001967d5: add ebx, 0x433cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966cc: add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963d8: add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196716: add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00195d9f: add ebx, 0x43ac1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d81: add ebx, 0x43adf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ce8: add ebx, 0x43b78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c31: add ebx, 0x43c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b98: add ebx, 0x43cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ae1: add ebx, 0x43d7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a48: add ebx, 0x43e18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195991: add ebx, 0x43ecf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001958f8: add ebx, 0x43f68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195841: add ebx, 0x4401f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957a8: add ebx, 0x440b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001956f1: add ebx, 0x4416f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195658: add ebx, 0x44208; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001955a1: add ebx, 0x442bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195508: add ebx, 0x44358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195451: add ebx, 0x4440f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953b8: add ebx, 0x444a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195301: add ebx, 0x4455f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195268: add ebx, 0x445f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951b1: add ebx, 0x446af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195118: add ebx, 0x44748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195061: add ebx, 0x447ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194fc8: add ebx, 0x44898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f11: add ebx, 0x4494f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e78: add ebx, 0x449e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194dc1: add ebx, 0x44a9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d28: add ebx, 0x44b38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c71: add ebx, 0x44bef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194bd8: add ebx, 0x44c88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194b21: add ebx, 0x44d3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a88: add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949d0: add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948cb: add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001947c5: add ebx, 0x4515b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946bf: add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194438: add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194724: add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001946d5: add ebx, 0x4534b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d9f: add ebx, 0x45841; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d81: add ebx, 0x4585f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ce8: add ebx, 0x458f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c31: add ebx, 0x459af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b98: add ebx, 0x45a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ae1: add ebx, 0x45aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a48: add ebx, 0x45b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193991: add ebx, 0x45c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938f8: add ebx, 0x45ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193841: add ebx, 0x45d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001937a8: add ebx, 0x45e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001936f1: add ebx, 0x45eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193658: add ebx, 0x45f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001935a1: add ebx, 0x4603f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193508: add ebx, 0x460d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193451: add ebx, 0x4618f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001933b8: add ebx, 0x46228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193301: add ebx, 0x462df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193268: add ebx, 0x46378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931b1: add ebx, 0x4642f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193118: add ebx, 0x464c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193061: add ebx, 0x4657f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192fc8: add ebx, 0x46618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f11: add ebx, 0x466cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192e78: add ebx, 0x46768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192dc1: add ebx, 0x4681f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d28: add ebx, 0x468b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c71: add ebx, 0x4696f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192bd8: add ebx, 0x46a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b21: add ebx, 0x46abf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a88: add ebx, 0x46b58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929d0: add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928cb: add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c5: add ebx, 0x46edb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926bf: add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192724: add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001926d5: add ebx, 0x470cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001914dd: add ebx, 0x47f03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0019142d: add ebx, 0x47fb3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00191345: add ebx, 0x4801b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190f83: add ebx, 0x481dd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190ec7: add ebx, 0x48299; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190e6b: add ebx, 0x482f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190dad: add ebx, 0x483b3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190cc5: add ebx, 0x4841b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0009faf8: add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009ff69: add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00090047: add ebx, 8; add esi, 8; push eax; call ecx; 
0x00084b24: add ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000ac678: add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000c295d: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x00190ccb: add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001926c5: add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019272a: add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000ba149: add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00198dd0: add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000c32b5: add ebx, dword ptr [esi + 0x5f]; ret; 
0x001537f7: add ebx, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x000707b7: add ebx, eax; jmp ebx; 
0x0012c700: add ebx, eax; mov ebp, esi; call ebx; 
0x0012c700: add ebx, eax; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000afefa: add ebx, ebp; adc eax, 0x8300768d; ret 0x8b20; 
0x00091b62: add ebx, ebp; call dword ptr gs:[0x10]; 
0x00159628: add ebx, ebp; ret; 
0x000a0348: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a03bc: add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000b61e3: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6493: add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b1e23: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b20b3: add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x000c16b1: add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c11a6: add ecx, 0x109ece; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1181: add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1161: add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1144: add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10a5: add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1117: add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1087: add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1100: add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10e5: add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1062: add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10c3: add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1038: add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c101f: add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ffe: add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fda: add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fbc: add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0f39: add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd87: add ecx, 0x10d1ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd62: add ecx, 0x10d212; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd38: add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd1f: add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcfe: add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcda: add ecx, 0x10d29a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcbc: add ecx, 0x10d2b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdca0: add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bbe11: add ecx, 0x10f08f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd2c: add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd19: add ecx, 0x10f217; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbcfd: add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb206: add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1e1: add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1c1: add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1a4: add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb105: add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb177: add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb160: add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb145: add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb123: add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb031: add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb011: add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafec: add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba711: add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba62c: add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba619: add ecx, 0x1107b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5fd: add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9bc6: add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ba1: add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b81: add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b64: add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ac5: add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9b37: add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b20: add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b05: add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ae3: add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9a01: add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99e1: add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99bc: add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010ce83: add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00182718: add ecx, 0x180; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cd00: add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0013679d: add ecx, 0x55; stc; call dword ptr [eax - 0x18]; 
0x00190e60: add ecx, 0x80; call 0x1875fd; add ebx, 0x482f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00040bc2: add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x000432e4: add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001769e3: add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x00057124: add ecx, dword ptr [ebp + 0x2baff46]; add byte ptr [eax], al; add byte ptr [edi], cl; dec edi; ret 0x48d; 
0x000bb819: add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x000c32b2: add ecx, dword ptr [ebp + 0x5f5e0346]; ret; 
0x000d6951: add ecx, dword ptr [ebp - 0x63f4380]; call dword ptr [eax + 0x56]; 
0x000d6d44: add ecx, dword ptr [ebp - 0x63f5380]; call dword ptr [eax + 0x56]; 
0x000b3c80: add ecx, dword ptr [ebp - 0x7af0fcb6]; test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x00175bef: add ecx, dword ptr [ebx + 0x20508b00]; push eax; call dword ptr [edx + 0x10]; 
0x000c126c: add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bde19: add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x000c2f33: add ecx, dword ptr [ebx + 0x5f082444]; ret; 
0x0010d5f9: add ecx, dword ptr [ebx - 0x3b37d74]; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0006ab48: add ecx, dword ptr [ebx - 0x5e763]; dec dword ptr [ecx - 0x5e76b]; inc dword ptr [ecx]; ret; 
0x001a0c47: add ecx, dword ptr [ebx - 0x64737474]; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000c1267: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde14: add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba144: add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x000b6266: add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b6396: add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x0005bf4a: add ecx, dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000b40d9: add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x00127489: add ecx, dword ptr [ecx + 0xa890451]; mov dword ptr [edx + 4], eax; ret; 
0x000b9ae9: add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b99c2: add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00087999: add ecx, dword ptr [ecx - 0x2dcefbad]; mov eax, edx; pop ebx; ret; 
0x000b1fb6: add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x001274b0: add ecx, dword ptr [ecx - 0x3f7afbbe]; je 0x1274ba; mov dword ptr [eax], edx; ret; 
0x001797ad: add ecx, dword ptr [ecx - 0x76f7dbbc]; ret 0x18b; 
0x0017983d: add ecx, dword ptr [ecx - 0x76fbdbbc]; ret 0x18b; 
0x000c0629: add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000b1e86: add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000e09f1: add ecx, dword ptr [ecx - 0x7cfbdb94]; call 0xf17462c; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e1200: add ecx, dword ptr [ecx - 0x7cfbdb94]; call 0xf174e3b; xchg dword ptr [eax - 0x7c000012], edx; ret; 
0x000e0875: add ecx, dword ptr [ecx - 0x7cfbdb94]; ret; 
0x000bb399: add ecx, dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013b909: add ecx, dword ptr [edi - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x00124bec: add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x000290be: add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x000292a9: add ecx, dword ptr [edi]; dec ecx; ret; 
0x0008ef29: add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x0013d648: add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x000bb281: add ecx, dword ptr [edi]; test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092254: add ecx, dword ptr [edi]; test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x00091980: add ecx, dword ptr [edi]; test dword ptr [ecx - 0x76fffffe], esi; ret 0x1c8b; 
0x000b3c83: add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x00099974: add ecx, dword ptr [edi]; xchg ebp, eax; ret 0xc231; 
0x0014322d: add ecx, dword ptr [edi]; xchg ebp, eax; ret; 
0x001431bb: add ecx, dword ptr [edi]; xchg esp, eax; ret; 
0x0006615a: add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x0011b831: add ecx, dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x00064994: add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x0006525a: add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x00024e33: add ecx, dword ptr [esi]; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x000a0a6f: add ecx, eax; call 0x1ca8d7a; mov dword ptr [edx + 0x388], eax; ret; 
0x00070a98: add ecx, eax; jmp ecx; 
0x0003bd10: add ecx, eax; mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c3e9: add ecx, eax; mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c0c1: add ecx, eax; mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00071c92: add ecx, eax; mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0003ad1e: add ecx, ebp; out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0007a477: add ecx, ebp; ret; 
0x00111310: add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000c3868: add ecx, edx; notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000a7617: add ecx, edx; test eax, eax; jne 0xa7610; mov eax, ecx; ret; 
0x0010b075: add ecx, esp; cli; clc; call dword ptr [eax - 0x73]; 
0x000bbcf5: add edi, 0x10; call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f5: add edi, 0x10; call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000919d6: add edi, 0x8704; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00065a81: add edi, dword ptr [ecx + eax*4 - 0x73e94]; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x0010333f: add edi, dword ptr [ecx]; ret 0x420f; 
0x001914df: add edi, dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00064feb: add edi, dword ptr [edx + eax*4]; mov eax, edi; mov byte ptr [esp + 0x62], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00064ca6: add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x000651f7: add edi, dword ptr [esi + eax*4 - 0x73f94]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064cf7: add edi, dword ptr [esi + eax*4 - 0x74094]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0016f64c: add edi, eax; sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00041a7e: add edi, ebx; push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x001991b9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199249: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992d9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199369: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993f9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199489: add edi, ecx; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198ca9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d39: add edi, ecx; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198dc9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e59: add edi, ecx; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198ee9: add edi, ecx; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f79: add edi, ecx; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199009: add edi, ecx; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199099: add edi, ecx; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199129: add edi, ecx; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb19b: add edi, ecx; add esi, ecx; call 0x187611; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b5b: add edi, ecx; add esi, ecx; call 0x187611; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001974de: add edi, edi; inc dword ptr [ecx + 0x425ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197445: add edi, edi; inc dword ptr [ecx + 0x42698c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001972e5: add edi, edi; inc dword ptr [ecx + 0x427f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019721e: add edi, edi; inc dword ptr [ecx + 0x428bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016d3bc: add edi, edi; jae 0x16d3c8; push esi; call dword ptr [ebx + 0xc]; 
0x0011b439: add edi, edi; je 0x11b461; xor bh, bh; ja 0x11b44d; call dword ptr [edi + 0x24]; 
0x0011c569: add edi, edi; je 0x11c591; xor bh, bh; ja 0x11c57d; call dword ptr [edi + 0x24]; 
0x0011d6d9: add edi, edi; je 0x11d701; xor bh, bh; ja 0x11d6ed; call dword ptr [edi + 0x24]; 
0x0008eb45: add edi, edi; je 0x8eb6d; xor bh, bh; je 0x8eb71; cmp al, 0x51; call eax; 
0x0003d16a: add edi, esi; ret 0; 
0x001a8a2e: add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x000c1015: add edx, 0x10; sub edx, ecx; call 0x187611; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb027: add edx, 0x10; sub edx, ecx; call 0x187611; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99f7: add edx, 0x10; sub edx, ecx; call 0x187611; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0012d249: add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00124849: add edx, 0x1185cb; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x00122af9: add edx, 0x11a31b; push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120fb9: add edx, 0x11be5b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120bb9: add edx, 0x11c25b; push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ff99: add edx, 0x11ce7b; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dc359: add edx, 0x160abb; push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000df265: add edx, 0x16d; mov eax, edx; ret; 
0x0009f599: add edx, 0x19d87b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008f399: add edx, 0x1ada7b; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x00061339: add edx, 0x1dbadb; push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00034c4f: add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x001a8c00: add edx, 0xa; jl 0x1a8c50; lea eax, [ecx + 0xa]; ret; 
0x001a8c10: add edx, 0xb; jl 0x1a8c50; lea eax, [ecx + 0xb]; ret; 
0x001a8b7b: add edx, 0xc; jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8c20: add edx, 0xd; jl 0x1a8c50; lea eax, [ecx + 0xd]; ret; 
0x001a8c30: add edx, 0xe; jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x001a8c40: add edx, 0xf; jl 0x1a8c50; lea eax, [ecx + 0xf]; ret; 
0x001a8b90: add edx, 1; jl 0x1a8c50; lea eax, [ecx + 1]; ret; 
0x00146379: add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000fad5d: add edx, 1; test al, al; jne 0xfad31; xor eax, eax; ret; 
0x0004336e: add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x001a8ba0: add edx, 2; jl 0x1a8c50; lea eax, [ecx + 2]; ret; 
0x001a8bb0: add edx, 3; jl 0x1a8c50; lea eax, [ecx + 3]; ret; 
0x001a8b18: add edx, 4; jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x000da0c2: add edx, 4; test eax, eax; jne 0xda0bc; xor edx, edx; mov eax, edx; ret; 
0x001a8bc0: add edx, 5; jl 0x1a8c50; lea eax, [ecx + 5]; ret; 
0x001a8bd0: add edx, 6; jl 0x1a8c50; lea eax, [ecx + 6]; ret; 
0x001a8be0: add edx, 7; jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x0013f625: add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x001a8b51: add edx, 8; jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8bf0: add edx, 9; jl 0x1a8c50; lea eax, [ecx + 9]; ret; 
0x0012c741: add edx, dword ptr [eax + 0x28]; push edx; push dword ptr [esp + 0x30]; call 0x12c6a0; add esp, 0x2c; ret; 
0x00182c11: add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000c1ff6: add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x000c2006: add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c2016: add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x20]; ret; 
0x000c2026: add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x30]; ret; 
0x00152f92: add edx, ebx; out 0x21, eax; ret; 
0x001a5997: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a58d2: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x34ac9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fc7: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3eb8: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a8e3: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998d6: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988f6: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969d7: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968d2: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966c3: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949c7: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948c2: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946b6: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929c7: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928c2: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926b6: add edx, ecx; add eax, ecx; call 0x1875fd; add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c2960: add edx, ecx; add esi, ecx; jmp ebx; 
0x00190cce: add edx, ecx; jmp ebx; 
0x001991bb: add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019924b: add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992db: add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019936b: add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993fb: add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019948b: add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198cab: add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3b: add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198dcb: add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5b: add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198eeb: add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f7b: add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019900b: add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019909b: add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019912b: add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00092bf8: add edx, edx; and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000c1057: add esi, 0x10; add eax, 0x10; call 0x187611; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00129404: add esi, 0x113a10; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00115c34: add esi, 0x1271e0; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001131e1: add esi, 0x129c33; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c107c: add esi, 0x20; add eax, 0x20; call 0x187611; add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0f2e: add esi, 0x30; add eax, 0x30; call 0x187611; add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdc95: add esi, 0x30; add eax, 0x30; call 0x187611; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00126064: add esi, 0x4b; stc; call dword ptr [eax + 0x55]; 
0x0018df04: add esi, 0xaef10; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00172ef3: add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016d496: add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0009004a: add esi, 8; push eax; call ecx; 
0x0003003d: add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000ffba8: add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000c3775: add esi, dword ptr [edi + eax - 0x3a]; add al, 1; add byte ptr [ecx + 0x75], cl; stc; pop esi; ret; 
0x00091d46: add esi, dword ptr [edi + ebp - 0x77]; clc; call dword ptr gs:[0x10]; 
0x000ffece: add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00098751: add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0016e503: add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0009215f: add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x0013b609: add esi, dword ptr [esi - 8]; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a8f76: add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x0012d54b: add esi, ebp; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x001769bd: add esi, ebx; call dword ptr [ebp - 0x73]; 
0x0016cf7b: add esi, ebx; call dword ptr [edx + 0x6a]; 
0x0016d268: add esi, ebx; jmp dword ptr [ebp - 0x75]; 
0x000c0fd0: add esi, ecx; bsf edx, edx; call 0x187611; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb2: add esi, ecx; bsf edx, edx; call 0x187611; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe2: add esi, ecx; bsf edx, edx; call 0x187611; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b2: add esi, ecx; bsf edx, edx; call 0x187611; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c117a: add esi, ecx; call 0x187611; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c115a: add esi, ecx; call 0x187611; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c113d: add esi, ecx; call 0x187611; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1da: add esi, ecx; call 0x187611; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1ba: add esi, ecx; call 0x187611; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb19d: add esi, ecx; call 0x187611; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b9a: add esi, ecx; call 0x187611; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b7a: add esi, ecx; call 0x187611; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b5d: add esi, ecx; call 0x187611; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c2962: add esi, ecx; jmp ebx; 
0x00041b6b: add esi, edi; push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0015a07e: add esi, esi; ret 0xf01; 
0x000ea5ef: add esi, esi; ret 0xf02; 
0x0010d504: add esi, esi; ret 0xf04; 
0x00103483: add esi, esi; ret; 
0x0014f384: add esp, -0x51; stc; call dword ptr [eax - 0x18]; 
0x001367c0: add esp, -0x59; stc; call dword ptr [eax - 0x18]; 
0x000c3425: add esp, 0x100; sub eax, edx; ret; 
0x0011ebce: add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x00061642: add esp, 0x1018; pop ebx; ret; 
0x0013b60d: add esp, 0x10; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a1e61: add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040b6d: add esp, 0x10; add esp, 0xc; ret; 
0x0018400f: add esp, 0x10; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016e918: add esp, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00144ea6: add esp, 0x10; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000260f6: add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00090bc8: add esp, 0x10; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00128434: add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00027162: add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00098629: add esp, 0x10; call eax; 
0x000a25c3: add esp, 0x10; cmp eax, -1; je 0xa25d0; add esp, 0xc; ret; 
0x00172380: add esp, 0x10; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017a9c3: add esp, 0x10; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x0016630f: add esp, 0x10; cmp edx, 1; jg 0x166338; add esp, 0x18; pop ebx; ret; 
0x0018007c: add esp, 0x10; cmp edx, 1; jg 0x1800a8; add esp, 0x18; pop ebx; ret; 
0x00180108: add esp, 0x10; cmp edx, 1; jg 0x180130; add esp, 0x18; pop ebx; ret; 
0x001803e0: add esp, 0x10; cmp edx, 1; jg 0x180408; add esp, 0x18; pop ebx; ret; 
0x0009466f: add esp, 0x10; cmp edx, 1; jg 0x94698; add esp, 0x18; pop ebx; ret; 
0x0013f03e: add esp, 0x10; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0012a93f: add esp, 0x10; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014842e: add esp, 0x10; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000e79f6: add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00123d20: add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007cfb1: add esp, 0x10; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00123750: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x1237a0; call eax; 
0x00123894: add esp, 0x10; mov eax, dword ptr [eax]; test eax, eax; je 0x123938; call eax; 
0x0013474d: add esp, 0x10; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00179218: add esp, 0x10; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x001772ae: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x0017731e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x0017738e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f1: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177451: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774be: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x0017753e: add esp, 0x10; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x00041e3b: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006127b: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00177a2f: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x0003f282: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f395: add esp, 0x10; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x00157927: add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00157abc: add esp, 0x10; mov eax, ebx; call eax; 
0x0003ca8b: add esp, 0x10; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00185064: add esp, 0x10; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0007a036: add esp, 0x10; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013d072: add esp, 0x10; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000ea2c9: add esp, 0x10; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014ae72: add esp, 0x10; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000254f3: add esp, 0x10; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x001256b6: add esp, 0x10; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013ae2b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07b: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c1: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00040cf0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a0: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a93: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x0009767f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098933: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da3: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992bf: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x0009970f: add esp, 0x10; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0017723e: add esp, 0x10; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x0012bc32: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0018a09f: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00040905: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b32: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e02: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e85: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x000dac64: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54e8: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79a8: add esp, 0x10; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x0002538b: add esp, 0x10; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025814: add esp, 0x10; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00060ee6: add esp, 0x10; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fa92: add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00121c15: add esp, 0x10; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00144f10: add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00160cd9: add esp, 0x10; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001579a9: add esp, 0x10; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00149c8e: add esp, 0x10; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001769eb: add esp, 0x10; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001763fb: add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016e238: add esp, 0x10; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013acb0: add esp, 0x10; test eax, eax; je 0x13acc0; add esp, 8; pop ebx; ret; 
0x001602f0: add esp, 0x10; test eax, eax; je 0x160300; sub esp, 0xc; push esi; call eax; 
0x00160680: add esp, 0x10; test eax, eax; je 0x160690; sub esp, 0xc; push esi; call eax; 
0x0016dc40: add esp, 0x10; test eax, eax; je 0x16dc50; sub esp, 0xc; push esi; call eax; 
0x0016ea03: add esp, 0x10; test eax, eax; je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00042466: add esp, 0x10; test eax, eax; je 0x42478; add esp, 8; pop ebx; ret; 
0x00127e5c: add esp, 0x10; test eax, eax; jne 0x127e1c; add esp, 0xc; ret; 
0x00177b04: add esp, 0x10; test eax, eax; jne 0x177af0; add esp, 8; pop ebx; ret; 
0x0003c975: add esp, 0x10; test eax, eax; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc94: add esp, 0x10; test eax, eax; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x000fafe4: add esp, 0x10; test eax, eax; jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x0012f6d1: add esp, 0x10; test eax, eax; js 0x12f6e0; add esp, 8; pop ebx; ret; 
0x001555ff: add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a74d0: add esp, 0x10; test ebp, ebp; jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0018779f: add esp, 0x10; test ebx, ebx; jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x0003a32f: add esp, 0x10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00042c07: add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000945ba: add esp, 0x10; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001482ec: add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0003ce6f: add esp, 0x114; pop ebx; pop edi; ret; 
0x00148524: add esp, 0x118; pop ebx; ret; 
0x00148724: add esp, 0x11c; ret; 
0x00180692: add esp, 0x11cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c939: add esp, 0x124; pop ebx; pop esi; ret; 
0x0003d639: add esp, 0x128; pop ebx; ret; 
0x000c50f1: add esp, 0x14; lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x00150127: add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00059f9c: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x001229fb: add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x000a7d87: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x0009d23e: add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x00131e40: add esp, 0x14; pop ebx; pop edi; ret; 
0x000b059b: add esp, 0x14; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00030106: add esp, 0x14; pop ebx; pop esi; ret; 
0x0016d0b0: add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00087558: add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0004b169: add esp, 0x14c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e9089: add esp, 0x15c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000db675: add esp, 0x16c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016c5a6: add esp, 0x18; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x00042512: add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x0012264f: add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x0004318e: add esp, 0x18; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000430fc: add esp, 0x18; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00043160: add esp, 0x18; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000430ce: add esp, 0x18; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00179333: add esp, 0x18; pop ebx; jmp eax; 
0x000a9f78: add esp, 0x18; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c21f: add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x000244a4: add esp, 0x18; pop ebx; ret; 
0x0009088e: add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x001813a9: add esp, 0x190; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00124402: add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0011592e: add esp, 0x19c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00180adf: add esp, 0x1bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003b0ba: add esp, 0x1c; and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0012cf1c: add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00170579: add esp, 0x1c; movzx eax, al; ret; 
0x0017abe9: add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0007e6ae: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000251cc: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003b081: add esp, 0x1c; ret 4; 
0x000244c0: add esp, 0x1c; ret; 
0x0018e082: add esp, 0x1c; sar eax, 0x1f; ret; 
0x0010556c: add esp, 0x1ec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009189c: add esp, 0x20; add esp, 0xc; ret; 
0x001150db: add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0008f144: add esp, 0x20; cmp eax, 0xfffff000; ja 0x8f158; add esp, 8; pop ebx; ret; 
0x00160a2d: add esp, 0x20; cmp edx, 1; jg 0x160a58; add esp, 0x18; pop ebx; ret; 
0x0013c537: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008ec38: add esp, 0x20; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000dc0d0: add esp, 0x20; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00061fa9: add esp, 0x20; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007c82e: add esp, 0x20; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012f1a7: add esp, 0x20; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f777: add esp, 0x20; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7e7: add esp, 0x20; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc37: add esp, 0x20; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd37: add esp, 0x20; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x00125c0f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012f13f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f29f: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbcf: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcbf: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0013034d: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x00148c39: add esp, 0x20; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x000255a3: add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001b4885: add esp, 0x20; ret; 
0x0003dd55: add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x001768c3: add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x001299a2: add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00122f40: add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0008e847: add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x000dc692: add esp, 0x24; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003d97e: add esp, 0x24; pop ebx; pop esi; ret; 
0x00055894: add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0008e9f5: add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0019069c: add esp, 0x28; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0003464f: add esp, 0x28; pop ebx; ret; 
0x000df44e: add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x0014cd16: add esp, 0x2bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012cf5d: add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x0010b5ac: add esp, 0x2c; movzx eax, al; ret; 
0x0008e295: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000234cb: add esp, 0x2c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000351fe: add esp, 0x2c; ret; 
0x00184284: add esp, 0x30; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017c98e: add esp, 0x30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001841bb: add esp, 0x30; pop ebx; pop esi; pop edi; jmp eax; 
0x00092f05: add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0013cb1a: add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x00040aea: add esp, 0x34; pop ebx; pop esi; ret 4; 
0x001141c1: add esp, 0x34; pop ebx; pop esi; ret; 
0x0010ef6d: add esp, 0x35c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010451e: add esp, 0x388c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a6c99: add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x001474a0: add esp, 0x38; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c63c: add esp, 0x38; pop ebx; ret; 
0x001b479c: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00026e67: add esp, 0x3c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012b7ab: add esp, 0x3c; ret; 
0x0003bef1: add esp, 0x40; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003be7f: add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x00123617: add esp, 0x418; pop ebx; ret; 
0x0005abde: add esp, 0x434; pop ebx; pop esi; ret; 
0x00120788: add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00041863: add esp, 0x44c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047ca9: add esp, 0x45c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0014bff4: add esp, 0x46c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000dad20: add esp, 0x48; pop ebx; ret; 
0x00070456: add esp, 0x4ac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003b4fd: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003fc65: add esp, 0x4c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011ec67: add esp, 0x4c; ret; 
0x000642e4: add esp, 0x4cc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0017f9d0: add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x00125066: add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x0010e68a: add esp, 0x54; pop ebx; pop esi; ret; 
0x00177762: add esp, 0x56c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00028781: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003b2a6: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029ebb: add esp, 0x5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115b3f: add esp, 0x60; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00115d35: add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0010e7a1: add esp, 0x64; pop ebx; pop esi; ret; 
0x0010e57d: add esp, 0x68; pop ebx; ret; 
0x00028dc8: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002f336: add esp, 0x6c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00122c02: add esp, 0x70; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000e8e96: add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00175e96: add esp, 0x74; pop ebx; pop edi; ret; 
0x00115352: add esp, 0x74; pop ebx; pop esi; ret; 
0x0005f70b: add esp, 0x78; pop ebx; ret; 
0x0002a7da: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002a3a9: add esp, 0x7c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001302ce: add esp, 0x7c; ret; 
0x0014800d: add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x00086198: add esp, 0x824; pop ebx; pop esi; ret; 
0x000ef5b2: add esp, 0x85c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ee064: add esp, 0x89c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0015f450: add esp, 0x8bc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00062695: add esp, 0x8fc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009a816: add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0003cf5c: add esp, 0x94; pop ebx; pop edi; ret; 
0x000916c7: add esp, 0x94; pop ebx; pop esi; ret; 
0x0003d081: add esp, 0x98; pop ebx; ret; 
0x0003cdea: add esp, 0x9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003dbe2: add esp, 0x9c; ret; 
0x0008638f: add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x0015b888: add esp, 0xa9c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001aae7f: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00033b41: add esp, 0xac; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a09ab: add esp, 0xb4; pop ebx; pop esi; ret; 
0x001b0396: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00027eec: add esp, 0xbc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001440b7: add esp, 0xc5c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008e144: add esp, 0xc; jmp eax; 
0x0016e9f5: add esp, 0xc; mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x0003518f: add esp, 0xc; mov eax, edx; ret; 
0x0009c6f6: add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00053558: add esp, 0xc; movzx eax, al; ret; 
0x0008144c: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7ca0: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000270dc: add esp, 0xc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016c89f: add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x001351eb: add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00137070: add esp, 0xc; push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013756d: add esp, 0xc; push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x001352e4: add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00134d7c: add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00135d11: add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00135ae5: add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0005f7bf: add esp, 0xc; push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0002581b: add esp, 0xc; ret; 
0x000a8e25: add esp, 0xc; test eax, eax; jne 0xa8e33; ret; 
0x00043a87: add esp, 0xcc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012c14b: add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0011eb03: add esp, 0xe4; pop ebx; pop esi; ret; 
0x000e8d2a: add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e8b70: add esp, 0xe8; pop ebx; ret; 
0x00046fdd: add esp, 0xec; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00036f19: add esp, 0xfc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000fd53c: add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0016f07e: add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x00054f9b: add esp, 4; jmp eax; 
0x0016c6f0: add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x000a7160: add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x000813e8: add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0005b8d0: add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016e777: add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00094d7c: add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0015318c: add esp, 4; mov eax, edx; pop ebx; pop edi; ret; 
0x001380ef: add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x00061126: add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0013465e: add esp, 4; movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x0016fa31: add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x00094607: add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x001a35b9: add esp, 4; pop ebp; pop ebx; ret; 
0x00083276: add esp, 4; pop ebx; pop esi; jmp eax; 
0x0003a2bd: add esp, 4; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00026001: add esp, 4; pop ebx; pop esi; ret; 
0x00025018: add esp, 4; pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x001a0d29: add esp, 4; pop ebx; ret; 
0x00091219: add esp, 4; pop esi; pop edi; ret; 
0x0003c49e: add esp, 4; ret; 
0x00090f46: add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x00040d3f: add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00148ceb: add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00097590: add esp, 8; mov eax, 0x16; pop ebx; ret; 
0x0005bd80: add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00128437: add esp, 8; mov eax, 1; pop ebx; ret; 
0x0006203b: add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000536cd: add esp, 8; mov eax, edx; pop ebx; ret; 
0x000895f4: add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0016e89a: add esp, 8; movzx eax, al; pop ebx; ret; 
0x0010cd32: add esp, 8; or eax, edx; pop ebx; ret; 
0x0005a268: add esp, 8; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027165: add esp, 8; pop ebx; ret; 
0x0003c295: add esp, 8; ret; 
0x0003c657: add esp, 8; xor eax, eax; pop ebx; ret; 
0x00059c09: add esp, dword ptr [edi - 0x61170003]; sbb dword ptr [esi], ecx; add byte ptr [ebx - 0x36374b], cl; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x000fb4d4: add esp, dword ptr [esi]; jne 0xfb570; mov eax, edx; pop ebx; ret; 
0x00132049: add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000ac713: add word ptr [eax], ax; add esp, 0x18; pop ebx; ret; 
0x0009dad3: and ah, 0x3b; add byte ptr [eax], al; test eax, eax; jne 0x9dae7; ret; 
0x000c38f7: and ah, 1; add byte ptr [eax], al; ret; 
0x000610ab: and ah, bh; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0006d2f4: and ah, byte ptr [ebp - 0x7ad40001]; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0016256a: and ah, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0016118d: and ah, ch; jmp dword ptr [ebp - 0x75]; 
0x0012462d: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x3940247c], cl; fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x000a3bdd: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x418d4451], cl; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x000817a2: and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000704bc: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x00128f2a: and al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x000438d8: and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00129df1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129df1: and al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000c8570: and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000645f4: and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0002f80f: and al, 0x10; add byte ptr [eax], al; ret; 
0x000645a4: and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00115867: and al, 0x10; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00191ed2: and al, 0x10; add eax, ecx; pop ebx; ret; 
0x0003c21d: and al, 0x10; add esp, 0x18; pop ebx; pop esi; pop edi; ret; 
0x0016e775: and al, 0x10; add esp, 4; mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x0016c6e2: and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0013bd53: and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00091616: and al, 0x10; and byte ptr [ebp + ecx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003bbe6: and al, 0x10; and eax, 0x80000000; ret; 
0x00132a89: and al, 0x10; call 0x131e60; pop edx; pop ecx; pop eax; ret; 
0x00157920: and al, 0x10; call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0011f30d: and al, 0x10; call dword ptr gs:[0x10]; 
0x000413e6: and al, 0x10; call eax; 
0x001579b9: and al, 0x10; call edi; 
0x001227c8: and al, 0x10; cmp al, 1; ret 0x1389; 
0x0018611f: and al, 0x10; cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x186130; pop ebx; ret; 
0x0013a184: and al, 0x10; cmp eax, 0x3ff; ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x0010bec6: and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0003bd23: and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bf62: and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003bd18: and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003de10: and al, 0x10; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x0017a133: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00179683: and al, 0x10; lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00190626: and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x000a70ce: and al, 0x10; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001873d8: and al, 0x10; mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x00098505: and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0012fe82: and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0007c577: and al, 0x10; mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008e19a: and al, 0x10; mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00129465: and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214ae: and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001213aa: and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00114e65: and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed25: and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb55: and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d5: and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e855: and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f5: and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012c927: and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0012e9b5: and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e815: and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012bc6e: and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012e6e5: and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea25: and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d685: and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d35: and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127705: and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b25: and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00091b54: and al, 0x10; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00083271: and al, 0x10; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008e13f: and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0013238b: and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x0008e227: and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x00189e23: and al, 0x10; mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0017a137: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00179687: and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00184b01: and al, 0x10; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00099eff: and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x001131ea: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e90ec: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011ff6c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e97c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea5c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b6c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012752c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a8c: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5bc: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008fcc4: and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095556: and al, 0x10; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0012ec43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e713: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f233: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c03: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114803: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e623: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e683: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114673: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e913: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e793: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e453: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128663: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e533: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e563: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c263: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e883: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf33: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec93: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e23: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f43: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f13: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114623: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127933: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127853: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127553: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127583: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab3: and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00095336: and al, 0x10; mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012238d: and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000945eb: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00040758: and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012232d: and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012dc82: and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f6c2: and al, 0x10; mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000613a1: and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012142e: and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012132a: and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00179a21: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x00179a5a: and al, 0x10; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008199b: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0008184b: and al, 0x10; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00089a0b: and al, 0x10; pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0016e51d: and al, 0x10; pop ebx; pop esi; jmp eax; 
0x000a881b: and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00083a03: and al, 0x10; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0015281c: and al, 0x10; push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x00175c2a: and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c628: and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017a168: and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001792f8: and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x00174f7a: and al, 0x10; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00179ede: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00172e6a: and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00179508: and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017949d: and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001797d8: and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x00179810: and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013d0b0: and al, 0x10; push edx; push edi; call eax; 
0x0013d18d: and al, 0x10; push edx; push esi; call eax; 
0x0016c8aa: and al, 0x10; push esi; call dword ptr [eax + 0xc]; 
0x00083a07: and al, 0x10; push esi; call dword ptr [ebx + 0x40]; 
0x001436c3: and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x0005b79b: and al, 0x10; test byte ptr [edx], 0x20; je 0x5b7b0; add esp, 0xc; ret; 
0x0007958b: and al, 0x10; test byte ptr [edx], 0x20; je 0x795a0; add esp, 0xc; ret; 
0x0012d3a7: and al, 0x10; test edx, edx; je 0x12d3e0; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00070dfe: and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0007117e: and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0011577d: and al, 0x14; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0014da6e: and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x0003518d: and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x000351c2: and al, 0x14; call 0x34c60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x000986b2: and al, 0x14; call 0x98540; xor eax, eax; add esp, 0xc; ret; 
0x000e7ff0: and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d53: and al, 0x14; call eax; 
0x0003402d: and al, 0x14; call edx; 
0x000e80b3: and al, 0x14; cmp eax, 0x3b9ac9ff; ja 0xe8158; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000dad5d: and al, 0x14; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00186126: and al, 0x14; jne 0x186130; pop ebx; ret; 
0x000797ff: and al, 0x14; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008e13b: and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7fe3: and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7c92: and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0003e059: and al, 0x14; mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0008fc3b: and al, 0x14; mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0016de21: and al, 0x14; mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00134729: and al, 0x14; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00024d4f: and al, 0x14; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0013019c: and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000945ef: and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0018de90: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00129461: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214aa: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e61: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed21: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb51: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e851: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9b1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e811: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6e1: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea21: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d681: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d31: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127701: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b21: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc7e: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012142a: and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0004075c: and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff68: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e978: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea58: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b68: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127528: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a88: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b8: and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x00130393: and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f300: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061399: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00190401: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130881: and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012d1e8: and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaf82: and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00053418: and al, 0x14; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0016f170: and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00024d4b: and al, 0x14; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016cc08: and al, 0x14; push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0016cc0c: and al, 0x14; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0005f863: and al, 0x14; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00152823: and al, 0x14; push ebp; call edi; 
0x001775e8: and al, 0x14; push ebx; call dword ptr [eax]; 
0x000f120d: and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016d4cb: and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x0016c798: and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x000cb6f0: and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x001ae856: and al, 0x18; add al, 0x39; ret 0x850f; 
0x000960d7: and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115805: and al, 0x18; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00066158: and al, 0x18; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065258: and al, 0x18; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x000659e2: and al, 0x18; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0002332c: and al, 0x18; and byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001734a1: and al, 0x18; call dword ptr [eax + 0x10]; 
0x0018493d: and al, 0x18; call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x00188cb0: and al, 0x18; call dword ptr [eax + 0x40]; 
0x0012dc86: and al, 0x18; call dword ptr gs:[0x10]; 
0x00114333: and al, 0x18; call eax; 
0x00094581: and al, 0x18; cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0012d5a0: and al, 0x18; cmp esi, -1; je 0x12d5c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x000dad3d: and al, 0x18; fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0013850f: and al, 0x18; je 0x138520; add esp, 8; pop ebx; ret; 
0x0017fef3: and al, 0x18; lea eax, [eax - 0x6996d]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x000db94d: and al, 0x18; lea eax, [esp + 0x104]; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0012fe7e: and al, 0x18; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000650cc: and al, 0x18; lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x0010b54d: and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000ac672: and al, 0x18; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000ac5b2: and al, 0x18; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00040ed2: and al, 0x18; mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0016c531: and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000a0029: and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7fe7: and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011f304: and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001301a4: and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00130948: and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000960c7: and al, 0x18; mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0005b01a: and al, 0x18; mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080b3a: and al, 0x18; mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x000792e9: and al, 0x18; mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x00080ad9: and al, 0x18; mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x00129e4a: and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010bec2: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006139d: and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012c921: and al, 0x18; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012945d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00114e5d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed1d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb4d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7cd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e84d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5ed: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9ad: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e80d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6dd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea1d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d67d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d2d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001276fd: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b1d: and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0009e222: and al, 0x18; mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], esi; call edi; 
0x00190405: and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012c6e5: and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0011ff64: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e974: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea54: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b64: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127524: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a84: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b4: and al, 0x18; mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012d1db: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012d468: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000eaf7a: and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011f6c6: and al, 0x18; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00130885: and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00065a7a: and al, 0x18; movzx eax, byte ptr [esi + eax - 0x20]; add edi, dword ptr [ecx + eax*4 - 0x73e94]; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00064989: and al, 0x18; movzx eax, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x00064ec3: and al, 0x18; or byte ptr [edi], cl; xchg esp, eax; ret 0xc221; 
0x00064b22: and al, 0x18; or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x00064dfc: and al, 0x18; or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x0011ec82: and al, 0x18; push -0x64; call 0x114c30; add esp, 0x1c; ret; 
0x0011f13e: and al, 0x18; push -0x64; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f162: and al, 0x18; push -0x64; call 0x115710; add esp, 0x1c; ret; 
0x0010e521: and al, 0x18; push -1; call 0x10e630; add esp, 0x1c; ret; 
0x0010e4fb: and al, 0x18; push -1; call 0x10e8a0; add esp, 0x1c; ret; 
0x0012bf19: and al, 0x18; push 0; call 0x12c160; add esp, 0x1c; ret; 
0x0003523b: and al, 0x18; push 0; call 0x351e0; add esp, 0x1c; ret; 
0x000c4258: and al, 0x18; push 0; call 0xc47a0; add esp, 0x1c; ret; 
0x0012799b: and al, 0x18; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00091039: and al, 0x18; push 0x80; push dword ptr [esp + 0x1c]; call 0x90f80; add esp, 0x1c; ret; 
0x000dad7f: and al, 0x18; push dword ptr [eax + 4]; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x0011ec7e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x114c30; add esp, 0x1c; ret; 
0x0011f15e: and al, 0x18; push dword ptr [esp + 0x18]; push -0x64; call 0x115710; add esp, 0x1c; ret; 
0x0010e51d: and al, 0x18; push dword ptr [esp + 0x18]; push -1; call 0x10e630; add esp, 0x1c; ret; 
0x000c4254: and al, 0x18; push dword ptr [esp + 0x18]; push 0; call 0xc47a0; add esp, 0x1c; ret; 
0x000a8ca9: and al, 0x18; push dword ptr [esp + 0x20]; call 0xc2c90; add esp, 0x18; pop ebx; ret; 
0x0003f34d: and al, 0x18; push eax; push eax; call 0x3f3b0; add esp, 0x1c; ret; 
0x00079c03: and al, 0x18; push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0015242c: and al, 0x18; push ebp; push 0; push edi; push ebx; call edx; 
0x000e7c62: and al, 0x18; push ebx; call eax; 
0x000a08c1: and al, 0x18; push edi; call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x00030096: and al, 0x18; sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x001890bc: and al, 0x18; test ebx, ebx; jne 0x1890d0; add esp, 8; pop ebx; ret; 
0x000895cc: and al, 0x18; test ebx, ebx; jne 0x895e0; add esp, 8; pop ebx; ret; 
0x0017a99e: and al, 0x18; test edx, edx; jne 0x17a9b0; add esp, 0xc; ret; 
0x0017ab0e: and al, 0x18; test edx, edx; jne 0x17ab20; add esp, 0xc; ret; 
0x0009397f: and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x001222aa: and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000db3d6: and al, 0x19; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00064ff9: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070f88: and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x001597b3: and al, 0x1c; add eax, 8; push eax; call 0xc2920; add esp, 0x1c; ret; 
0x0009cc41: and al, 0x1c; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8b3: and al, 0x1c; call 0x10e750; add esp, 0x1c; ret; 
0x00115091: and al, 0x1c; call 0x1150a0; add esp, 0x1c; ret; 
0x0011f275: and al, 0x1c; call 0x11f2b0; add esp, 0x1c; ret; 
0x00061719: and al, 0x1c; call 0x11f360; add esp, 0x1c; ret; 
0x00114782: and al, 0x1c; call 0x11f3b0; add esp, 0x1c; ret; 
0x0012357b: and al, 0x1c; call 0x123420; add esp, 0x18; pop ebx; ret; 
0x0002449d: and al, 0x1c; call 0x1234a0; add esp, 0x18; pop ebx; ret; 
0x00125c4a: and al, 0x1c; call 0x125ca0; add esp, 0x1c; ret; 
0x00122047: and al, 0x1c; call 0x1274c0; add esp, 0x10; add esp, 0xc; ret; 
0x00121fa3: and al, 0x1c; call 0x1274c0; add esp, 0x1c; ret; 
0x0012a774: and al, 0x1c; call 0x129ff0; add esp, 0x1c; ret; 
0x0012e1db: and al, 0x1c; call 0x12e1f0; add esp, 0x1c; ret; 
0x00130853: and al, 0x1c; call 0x130df0; add esp, 0x1c; ret; 
0x00139700: and al, 0x1c; call 0x137e50; add esp, 0x1c; ret; 
0x00138010: and al, 0x1c; call 0x137f00; add esp, 0x18; pop ebx; ret; 
0x0013c77a: and al, 0x1c; call 0x13c790; add esp, 0x1c; ret; 
0x0013caba: and al, 0x1c; call 0x13cad0; add esp, 0x1c; ret; 
0x001412eb: and al, 0x1c; call 0x140620; add esp, 0x1c; ret; 
0x001483db: and al, 0x1c; call 0x148300; add esp, 0x1c; ret; 
0x00190655: and al, 0x1c; call 0x1558c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001906c5: and al, 0x1c; call 0x1567d0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190985: and al, 0x1c; call 0x162500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001909f5: and al, 0x1c; call 0x163230; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190b25: and al, 0x1c; call 0x1648c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190b55: and al, 0x1c; call 0x164c00; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190c05: and al, 0x1c; call 0x165b20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001766d8: and al, 0x1c; call 0x176420; add esp, 0x10; add esp, 0xc; ret; 
0x001766b9: and al, 0x1c; call 0x176520; add esp, 0x10; add esp, 0xc; ret; 
0x00178b73: and al, 0x1c; call 0x1788a0; add esp, 0x1c; ret; 
0x0016de8f: and al, 0x1c; call 0x1799b0; add esp, 0x1c; ret; 
0x00179c17: and al, 0x1c; call 0x179a80; add esp, 0x1c; ret; 
0x001883d5: and al, 0x1c; call 0x187ac0; add esp, 0x18; pop ebx; ret; 
0x00043005: and al, 0x1c; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x00043069: and al, 0x1c; call 0x1aa890; add esp, 0x18; pop ebx; ret; 
0x000a7643: and al, 0x1c; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ff82: and al, 0x1c; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010be85: and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000244b9: and al, 0x1c; call 0x24482; add esp, 0x1c; ret; 
0x00033683: and al, 0x1c; call 0x33690; add esp, 0x1c; ret; 
0x0003521f: and al, 0x1c; call 0x351e0; add esp, 0x1c; ret; 
0x0003d99f: and al, 0x1c; call 0x3d920; add esp, 0x1c; ret; 
0x0003ebfb: and al, 0x1c; call 0x3e360; add esp, 0x1c; ret; 
0x0003ec30: and al, 0x1c; call 0x3ed70; add esp, 0x1c; ret; 
0x0018773b: and al, 0x1c; call 0x3ee50; add esp, 0x1c; ret; 
0x000409fa: and al, 0x1c; call 0x40a10; add esp, 0x1c; ret; 
0x00042cca: and al, 0x1c; call 0x42ce0; add esp, 0x1c; ret; 
0x0003e26b: and al, 0x1c; call 0x47110; add esp, 0x1c; ret; 
0x000470fb: and al, 0x1c; call 0x47a00; add esp, 0x1c; ret; 
0x0004a6fb: and al, 0x1c; call 0x4aec0; add esp, 0x1c; ret; 
0x0003e28d: and al, 0x1c; call 0x4d950; add esp, 0x1c; ret; 
0x0004e07b: and al, 0x1c; call 0x4e940; add esp, 0x1c; ret; 
0x0003e2cd: and al, 0x1c; call 0x51680; add esp, 0x1c; ret; 
0x001279f3: and al, 0x1c; call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x001279a1: and al, 0x1c; call 0x61730; add esp, 0x1c; ret; 
0x0005acb4: and al, 0x1c; call 0x66260; add esp, 0x1c; ret; 
0x0005acd5: and al, 0x1c; call 0x66570; add esp, 0x1c; ret; 
0x0005aff4: and al, 0x1c; call 0x66600; add esp, 0x1c; ret; 
0x0006df73: and al, 0x1c; call 0x72940; add esp, 0x1c; ret; 
0x00080b65: and al, 0x1c; call 0x72c10; add esp, 0x1c; ret; 
0x00072c23: and al, 0x1c; call 0x72ca0; add esp, 0x1c; ret; 
0x00079f64: and al, 0x1c; call 0x79e20; add esp, 0x1c; ret; 
0x00085a65: and al, 0x1c; call 0x7b8c0; add esp, 0x18; pop ebx; ret; 
0x0007c53f: and al, 0x1c; call 0x7c450; add esp, 0x1c; ret; 
0x0005ade3: and al, 0x1c; call 0x7d220; add esp, 0x1c; ret; 
0x00085d72: and al, 0x1c; call 0x7eab0; add esp, 0x1c; ret; 
0x00085d8f: and al, 0x1c; call 0x7ec60; add esp, 0x1c; ret; 
0x0008601f: and al, 0x1c; call 0x85e90; add esp, 0x18; pop ebx; ret; 
0x0005ab04: and al, 0x1c; call 0x85e90; add esp, 0x1c; ret; 
0x000861df: and al, 0x1c; call 0x860f0; add esp, 0x18; pop ebx; ret; 
0x0005ac14: and al, 0x1c; call 0x860f0; add esp, 0x1c; ret; 
0x000866af: and al, 0x1c; call 0x86520; add esp, 0x18; pop ebx; ret; 
0x0013afb0: and al, 0x1c; call 0x86520; add esp, 0x1c; ret; 
0x0008dabc: and al, 0x1c; call 0x8d9f0; add esp, 0x18; pop ebx; ret; 
0x00090d1e: and al, 0x1c; call 0x90c40; add esp, 0x18; pop ebx; ret; 
0x00091042: and al, 0x1c; call 0x90f80; add esp, 0x1c; ret; 
0x0009820b: and al, 0x1c; call 0x980c0; add esp, 0x1c; ret; 
0x00099f4e: and al, 0x1c; call 0x99ef0; add esp, 0x18; pop ebx; ret; 
0x0009e45b: and al, 0x1c; call 0x9dc00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009fb91: and al, 0x1c; call 0x9fad0; add esp, 0x18; pop ebx; ret; 
0x0009f5ef: and al, 0x1c; call 0x9fc10; add esp, 0x1c; ret; 
0x000aaab7: and al, 0x1c; call 0xaaae0; add esp, 0x1c; ret; 
0x000abd23: and al, 0x1c; call 0xabd30; add esp, 0x1c; ret; 
0x000ad73e: and al, 0x1c; call 0xad750; add esp, 0x1c; ret; 
0x000ad97b: and al, 0x1c; call 0xada40; add esp, 0x1c; ret; 
0x000ac7cd: and al, 0x1c; call 0xb0810; add esp, 0x18; pop ebx; ret; 
0x0013b713: and al, 0x1c; call 0xc2c10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ac6dd: and al, 0x1c; call 0xc2c10; add esp, 0x18; pop ebx; ret; 
0x000d4d71: and al, 0x1c; call 0xc2d00; add esp, 0x18; pop ebx; ret; 
0x000a8cdb: and al, 0x1c; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x000ac829: and al, 0x1c; call 0xc2d90; add esp, 0x18; pop ebx; ret; 
0x000ac779: and al, 0x1c; call 0xc32c0; add esp, 0x18; pop ebx; ret; 
0x0013bcb7: and al, 0x1c; call 0xc5100; add esp, 0x18; pop ebx; ret; 
0x000c5393: and al, 0x1c; call 0xc5170; add esp, 0x1c; ret; 
0x000c5567: and al, 0x1c; call 0xc5580; add esp, 0x1c; ret; 
0x0013bf77: and al, 0x1c; call 0xc6e20; add esp, 0x18; pop ebx; ret; 
0x000c7b0b: and al, 0x1c; call 0xc83a0; add esp, 0x1c; ret; 
0x000cadbb: and al, 0x1c; call 0xcb520; add esp, 0x1c; ret; 
0x000ce4db: and al, 0x1c; call 0xced40; add esp, 0x1c; ret; 
0x000d2fdb: and al, 0x1c; call 0xd3000; add esp, 0x1c; ret; 
0x000da128: and al, 0x1c; call 0xd4d10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000dbe2b: and al, 0x1c; call 0xdaeb0; add esp, 0x18; pop ebx; ret; 
0x000eaf1f: and al, 0x1c; call 0xeaf30; add esp, 0x1c; ret; 
0x000eafdf: and al, 0x1c; call 0xeb470; add esp, 0x1c; ret; 
0x000613a5: and al, 0x1c; call dword ptr gs:[0x10]; 
0x0016edd9: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ee18: and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x000ac588: and al, 0x1c; mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000ea374: and al, 0x1c; mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a08cb: and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0012d1df: and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012d46c: and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009e20d: and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000db29f: and al, 0x1c; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000eaf7e: and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00129e46: and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000dee92: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd43: and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00061401: and al, 0x1c; mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x61430; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0010c0c4: and al, 0x1c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7bf4: and al, 0x1c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00134fc7: and al, 0x1c; push 0; push 0x2000004; call eax; 
0x0008a6c1: and al, 0x1c; push dword ptr [eax + 0x38]; call 0x11f090; add esp, 0x18; pop ebx; ret; 
0x0013b15c: and al, 0x1c; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0013bc1c: and al, 0x1c; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x00038140: and al, 0x1c; push dword ptr [eax]; call 0xc24c0; add esp, 0x1c; ret; 
0x00184b17: and al, 0x1c; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0015216b: and al, 0x1c; push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c5cb: and al, 0x1c; push dword ptr [esi + 0x98]; call eax; 
0x0009cc3d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8af: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x10e750; add esp, 0x1c; ret; 
0x00123577: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x123420; add esp, 0x18; pop ebx; ret; 
0x00024499: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1234a0; add esp, 0x18; pop ebx; ret; 
0x0012a770: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013084f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x130df0; add esp, 0x1c; ret; 
0x0013800c: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x137f00; add esp, 0x18; pop ebx; ret; 
0x0016de8b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1799b0; add esp, 0x1c; ret; 
0x00043065: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x1aa890; add esp, 0x18; pop ebx; ret; 
0x0003521b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x0003d99b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3d920; add esp, 0x1c; ret; 
0x0003ee6e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x3ed70; add esp, 0x1c; ret; 
0x00047135: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004a6f7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e077: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0005acb0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0005acd1: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x66570; add esp, 0x1c; ret; 
0x0005aff0: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x0006df6f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x00080b61: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72c10; add esp, 0x1c; ret; 
0x000c3e20: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x00079f60: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x79e20; add esp, 0x1c; ret; 
0x0007c53b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x0005addf: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7d220; add esp, 0x1c; ret; 
0x00085d6e: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x7eab0; add esp, 0x1c; ret; 
0x0008601b: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x18; pop ebx; ret; 
0x0005ab00: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x000861db: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x18; pop ebx; ret; 
0x000866ab: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x18; pop ebx; ret; 
0x000ad977: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xada40; add esp, 0x1c; ret; 
0x000d4d2d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2c10; add esp, 0x18; pop ebx; ret; 
0x000d4d6d: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc2d00; add esp, 0x18; pop ebx; ret; 
0x0013bcb3: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc5100; add esp, 0x18; pop ebx; ret; 
0x000c538f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc5170; add esp, 0x1c; ret; 
0x000c7b45: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x000cdb9f: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xcb520; add esp, 0x1c; ret; 
0x000ce4d7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x000d2fd7: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xd3000; add esp, 0x1c; ret; 
0x000eafdb: and al, 0x1c; push dword ptr [esp + 0x1c]; call 0xeb470; add esp, 0x1c; ret; 
0x000db29b: and al, 0x1c; push dword ptr [esp + 0x1c]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013bac8: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0013bc18: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x0009cc39: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8ab: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e750; add esp, 0x1c; ret; 
0x0012a78b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013084b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x130df0; add esp, 0x1c; ret; 
0x0003ee6a: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ed70; add esp, 0x1c; ret; 
0x0004a6f3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e073: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0005b0eb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x0006df6b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x000c3eeb: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x000ad973: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xada40; add esp, 0x1c; ret; 
0x000c538b: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5170; add esp, 0x1c; ret; 
0x000ce4d3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x000d2fd3: and al, 0x1c; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd3000; add esp, 0x1c; ret; 
0x000dbaed: and al, 0x1c; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00042fd6: and al, 0x1c; push eax; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x001777e7: and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016edf2: and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ee40: and al, 0x1c; push ebx; call dword ptr [eax]; 
0x0017771b: and al, 0x1c; push ebx; call eax; 
0x000e7c5d: and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0016c7c6: and al, 0x1c; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0011f6cc: and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0017921d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x00087e2d: and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x000dbfb9: and al, 0x1c; sub ecx, dword ptr gs:[0x14]; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x0010c2f2: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c395: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c602: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x00129c25: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cc5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012f1ac: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f22b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f77c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7ec: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc3c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd3c: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x001301bb: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x0013ae30: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c080: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x0014c871: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f21: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x0016cda6: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00175f39: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fd9: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x001848c8: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x001905c6: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x0003d21b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x00040cf5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a98: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097684: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098938: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da8: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c4: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099714: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c8bf: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2b: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009eb71: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff39: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000dabe5: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dc22e: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000e7b21: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d3f: and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000a1a03: and al, 0x1c; xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000707fb: and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00064992: and al, 0x20; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x00187349: and al, 0x20; call 0x1871c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00187385: and al, 0x20; call 0x187230; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018732d: and al, 0x20; call 0x187240; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00127db5: and al, 0x20; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00042494: and al, 0x20; call 0x423b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a8cad: and al, 0x20; call 0xc2c90; add esp, 0x18; pop ebx; ret; 
0x0012d1ec: and al, 0x20; call dword ptr gs:[0x10]; 
0x0016c7cb: and al, 0x20; call eax; 
0x001210c2: and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0012fe7a: and al, 0x20; mov dword ptr [esp + 0x18], eax; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dbc87: and al, 0x20; mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0003debb: and al, 0x20; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003da27: and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0011e25c: and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012108e: and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0017932e: and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x001744a6: and al, 0x20; mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00171828: and al, 0x20; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0012c6e1: and al, 0x20; mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00129e42: and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0010bfdb: and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000eaf86: and al, 0x20; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0009bde7: and al, 0x20; mov edx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x0006614f: and al, 0x20; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x0006524f: and al, 0x20; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x00184afd: and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0012a7bc: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013a72c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0013a97c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x0013985c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x0013a11c: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x1c; ret; 
0x0013afac: and al, 0x20; push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x1c; ret; 
0x00175b6b: and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x001877e8: and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001760ba: and al, 0x20; push edx; push eax; call edi; 
0x00179b1c: and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x001348cf: and al, 0x20; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000a0258: and al, 0x20; test ebx, ebx; js 0xa0288; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x00061405: and al, 0x20; test edi, edi; je 0x61430; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000643fa: and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00071b76: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065932: and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000e0346: and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00177443: and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000eb483: and al, 0x24; call 0xeb130; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000eaf8a: and al, 0x24; call dword ptr gs:[0x10]; 
0x00041a88: and al, 0x24; call eax; 
0x0013f0c0: and al, 0x24; mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x00090ea0: and al, 0x24; mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0012fd9c: and al, 0x24; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f4c4: and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f660: and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fe86: and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00152172: and al, 0x24; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00121d03: and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010bfd7: and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009bdeb: and al, 0x24; mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x000dbc8b: and al, 0x24; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0008eec9: and al, 0x24; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x001719bb: and al, 0x24; sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0014a0f2: and al, 0x26; add byte ptr [edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00071b96: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00070ced: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000659ba: and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x001351e9: and al, 0x28; add esp, 0xc; push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x001352e2: and al, 0x28; add esp, 0xc; push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00134d7a: and al, 0x28; add esp, 0xc; push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0016e59f: and al, 0x28; call dword ptr [eax + 0x18]; 
0x00121c95: and al, 0x28; call dword ptr gs:[0x10]; 
0x00041a58: and al, 0x28; call eax; 
0x00121085: and al, 0x28; cmp ecx, 9; je 0x1210c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00041a84: and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012f2f5: and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fda0: and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012c6e9: and al, 0x28; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x00114f3b: and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00061a5c: and al, 0x28; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0005341c: and al, 0x28; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0009bdef: and al, 0x28; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00173df7: and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x001772a4: and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000eb47f: and al, 0x28; mov edx, dword ptr [esp + 0x24]; call 0xeb130; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0012b79c: and al, 0x28; mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x0009df4b: and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011f2c5: and al, 0x28; push -0x64; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f38e: and al, 0x28; push -0x64; call 0x8f110; add esp, 0x2c; ret; 
0x000614f3: and al, 0x28; push -1; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x00036843: and al, 0x28; push 0; call 0x367d0; add esp, 0x2c; ret; 
0x001302f9: and al, 0x28; push 0xb; call 0x8f110; add esp, 0x2c; ret; 
0x0011f2c1: and al, 0x28; push dword ptr [esp + 0x28]; push -0x64; call 0x11f2e0; add esp, 0x2c; ret; 
0x0003683f: and al, 0x28; push dword ptr [esp + 0x28]; push 0; call 0x367d0; add esp, 0x2c; ret; 
0x00034647: and al, 0x28; push eax; call 0x34370; add esp, 0x28; pop ebx; ret; 
0x000d4b4b: and al, 0x28; push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x00089e61: and al, 0x28; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00175b58: and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00171838: and al, 0x28; push esi; call dword ptr [eax + 0xc]; 
0x000df16d: and al, 0x28; test esi, esi; je 0xdf1c0; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0008af1e: and al, 0x29; ret 0x448b; 
0x000fede2: and al, 0x29; ret 0x5689; 
0x0015d18e: and al, 0x29; ret 0xca39; 
0x0018854f: and al, 0x29; ret; 
0x001764bc: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; and dword ptr [edx + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0006471c: and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x0007188a: and al, 0x2c; and byte ptr [ecx + edx + 1], dh; ret; 
0x0010c87f: and al, 0x2c; call 0x10dbb0; add esp, 0x2c; ret; 
0x0011f299: and al, 0x2c; call 0x11f2e0; add esp, 0x2c; ret; 
0x001237f7: and al, 0x2c; call 0x123700; add esp, 0x28; pop ebx; ret; 
0x0012398f: and al, 0x2c; call 0x123810; add esp, 0x28; pop ebx; ret; 
0x00136a1b: and al, 0x2c; call 0x1367f0; add esp, 0x28; pop ebx; ret; 
0x001412d1: and al, 0x2c; call 0x1407d0; add esp, 0x2c; ret; 
0x001413f7: and al, 0x2c; call 0x141300; add esp, 0x2c; ret; 
0x00141b9f: and al, 0x2c; call 0x1415d0; add esp, 0x2c; ret; 
0x0019085d: and al, 0x2c; call 0x15f2b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00160146: and al, 0x2c; call 0x1609d0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0019091d: and al, 0x2c; call 0x161d90; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176ab9: and al, 0x2c; call 0x1768f0; add esp, 0x2c; ret; 
0x00160251: and al, 0x2c; call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00186321: and al, 0x2c; call 0x1861c0; add esp, 0x28; pop ebx; ret; 
0x000351f7: and al, 0x2c; call 0x35ee0; add esp, 0x2c; ret; 
0x00036817: and al, 0x2c; call 0x367d0; add esp, 0x2c; ret; 
0x00041bd7: and al, 0x2c; call 0x41790; add esp, 0x2c; ret; 
0x000438d5: and al, 0x2c; call 0x43900; add esp, 0x2c; ret; 
0x0004d901: and al, 0x2c; call 0x4d9a0; add esp, 0x2c; ret; 
0x00051631: and al, 0x2c; call 0x516c0; add esp, 0x2c; ret; 
0x00052001: and al, 0x2c; call 0x520a0; add esp, 0x2c; ret; 
0x000526e1: and al, 0x2c; call 0x52780; add esp, 0x2c; ret; 
0x0007d74b: and al, 0x2c; call 0x7d570; add esp, 0x2c; ret; 
0x000614f9: and al, 0x2c; call 0x7f080; add esp, 0x2c; ret; 
0x00080237: and al, 0x2c; call 0x80060; add esp, 0x28; pop ebx; ret; 
0x00080c83: and al, 0x2c; call 0x80ba0; add esp, 0x28; pop ebx; ret; 
0x00080aab: and al, 0x2c; call 0x80ba0; add esp, 0x2c; ret; 
0x000614cb: and al, 0x2c; call 0x862e0; add esp, 0x2c; ret; 
0x0008c51f: and al, 0x2c; call 0x8c440; add esp, 0x28; pop ebx; ret; 
0x001150d4: and al, 0x2c; call 0x8f110; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00128764: and al, 0x2c; call 0x8f110; add esp, 0x28; pop ebx; ret; 
0x0003cd58: and al, 0x2c; call 0x8f110; add esp, 0x2c; ret; 
0x00091895: and al, 0x2c; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x00094ef3: and al, 0x2c; call 0x94f20; add esp, 0x2c; ret; 
0x0009fbc7: and al, 0x2c; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbf7: and al, 0x2c; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d4c: and al, 0x2c; call 0xc4d60; add esp, 0x2c; ret; 
0x000cdd81: and al, 0x2c; call 0xcde10; add esp, 0x2c; ret; 
0x000d1651: and al, 0x2c; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f61: and al, 0x2c; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d2671: and al, 0x2c; call 0xd2700; add esp, 0x2c; ret; 
0x000dfced: and al, 0x2c; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30df: and al, 0x2c; call 0xe54b0; add esp, 0x2c; ret; 
0x000e311f: and al, 0x2c; call 0xe7970; add esp, 0x2c; ret; 
0x000f0e2d: and al, 0x2c; call 0xf0650; add esp, 0x28; pop ebx; ret; 
0x000f0d65: and al, 0x2c; call 0xf0cb0; add esp, 0x28; pop ebx; ret; 
0x0016025d: and al, 0x2c; call eax; 
0x00128aee: and al, 0x2c; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x128b20; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000a0181: and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000a05eb: and al, 0x2c; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00115954: and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012e02c: and al, 0x2c; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x000df036: and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009df81: and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0012f40c: and al, 0x2c; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a8da: and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0009bdf3: and al, 0x2c; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00121e78: and al, 0x2c; mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e29a: and al, 0x2c; push -0x64; call 0x11f2e0; add esp, 0x20; add esp, 0xc; ret; 
0x000c4892: and al, 0x2c; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001302f5: and al, 0x2c; push dword ptr [esp + 0x28]; push 0xb; call 0x8f110; add esp, 0x2c; ret; 
0x0010dc3b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x10dbb0; add esp, 0x2c; ret; 
0x0011f295: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x11f2e0; add esp, 0x2c; ret; 
0x001237f3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x123700; add esp, 0x28; pop ebx; ret; 
0x0012398b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x123810; add esp, 0x28; pop ebx; ret; 
0x00136a17: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1367f0; add esp, 0x28; pop ebx; ret; 
0x001413f3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x141300; add esp, 0x2c; ret; 
0x00141b9b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1415d0; add esp, 0x2c; ret; 
0x00176ab5: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x1768f0; add esp, 0x2c; ret; 
0x000351f3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x00036813: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x367d0; add esp, 0x2c; ret; 
0x00041bd3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x41790; add esp, 0x2c; ret; 
0x000469cb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x43900; add esp, 0x2c; ret; 
0x0004d8fd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x4d9a0; add esp, 0x2c; ret; 
0x0005166b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x516c0; add esp, 0x2c; ret; 
0x00051ffd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x520a0; add esp, 0x2c; ret; 
0x000526dd: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x52780; add esp, 0x2c; ret; 
0x0007d747: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x7d570; add esp, 0x2c; ret; 
0x00080233: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x80060; add esp, 0x28; pop ebx; ret; 
0x00080c7f: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x28; pop ebx; ret; 
0x00080aa7: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0008c51b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8c440; add esp, 0x28; pop ebx; ret; 
0x000407b8: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00094eef: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x0009fbc3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbf3: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d48: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xc4d60; add esp, 0x2c; ret; 
0x000cddbb: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xcde10; add esp, 0x2c; ret; 
0x000d168b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f9b: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d26ab: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xd2700; add esp, 0x2c; ret; 
0x000dfce9: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30db: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xe54b0; add esp, 0x2c; ret; 
0x000f0e29: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf0650; add esp, 0x28; pop ebx; ret; 
0x000f0d61: and al, 0x2c; push dword ptr [esp + 0x2c]; call 0xf0cb0; add esp, 0x28; pop ebx; ret; 
0x0010dc37: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dbb0; add esp, 0x2c; ret; 
0x001413ef: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x141300; add esp, 0x2c; ret; 
0x00141b97: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1415d0; add esp, 0x2c; ret; 
0x00176ab1: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1768f0; add esp, 0x2c; ret; 
0x000367e3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x0003680f: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x367d0; add esp, 0x2c; ret; 
0x00041bcf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41790; add esp, 0x2c; ret; 
0x000469c7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43900; add esp, 0x2c; ret; 
0x0004d8f9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d9a0; add esp, 0x2c; ret; 
0x00051667: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x516c0; add esp, 0x2c; ret; 
0x00051ff9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x520a0; add esp, 0x2c; ret; 
0x000526d9: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52780; add esp, 0x2c; ret; 
0x0007d743: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d570; add esp, 0x2c; ret; 
0x00080aa3: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x000407b4: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x0009fbbf: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbef: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d44: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4d60; add esp, 0x2c; ret; 
0x000cddb7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcde10; add esp, 0x2c; ret; 
0x000d1687: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f97: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d26a7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2700; add esp, 0x2c; ret; 
0x000dfce5: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30d7: and al, 0x2c; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe54b0; add esp, 0x2c; ret; 
0x000c7099: and al, 0x2c; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4c09: and al, 0x2c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008e9d6: and al, 0x2c; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x001412cc: and al, 0x2c; push eax; push dword ptr [esp + 0x2c]; call 0x1407d0; add esp, 0x2c; ret; 
0x0008a61f: and al, 0x2c; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x001769c3: and al, 0x2c; push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x0009aa8d: and al, 0x2c; push edx; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x0008ed21: and al, 0x2c; push edx; push ecx; push edi; call eax; 
0x00120c8d: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d0d: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00124052: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x0012b7a0: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x0009c631: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x000a04f9: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000dacb3: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dc5b2: and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x00174099: and al, 0x30; add al, 0; add al, ch; sbb eax, 0x8900002c; ret; 
0x000704f5: and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x00071ba6: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000707ad: and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003be7d: and al, 0x30; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x0012c747: and al, 0x30; call 0x12c6a0; add esp, 0x2c; ret; 
0x0002f40a: and al, 0x30; call eax; 
0x0009bdf7: and al, 0x30; int 0x80; 
0x00157cbc: and al, 0x30; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c624: and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000dee9a: and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0009a8e5: and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012f414: and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00129cae: and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c0e: and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c37e: and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c523: and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c473: and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5eb: and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2db: and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000dbaf1: and al, 0x30; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00064985: and al, 0x30; mov ecx, dword ptr [esp + 0x18]; movzx eax, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x0012dd4b: and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0c2: and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00190480: and al, 0x30; mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00130ed1: and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00025d11: and al, 0x30; push dword ptr [ebx + 4]; call edi; 
0x0011b43c: and al, 0x30; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011b7e1: and al, 0x30; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00159c4f: and al, 0x30; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0018989e: and al, 0x30; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4e78: and al, 0x30; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00159c53: and al, 0x30; push dword ptr [esp + 0x3c]; call esi; 
0x0008eb48: and al, 0x30; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x000db958: and al, 0x30; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013b59a: and al, 0x30; push edx; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x0008ec20: and al, 0x30; push edx; push ecx; call eax; 
0x00171854: and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x001898a2: and al, 0x30; push esi; call dword ptr [ebx + 0x40]; 
0x0005b819: and al, 0x31; ret; 
0x0012ed5f: and al, 0x31; shr byte ptr [edx], 0x8d; xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x000a0185: and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000444b9: and al, 0x34; add byte ptr [edi], cl; test byte ptr [eax - 0x7cfffffc], bl; ret 0x3101; 
0x00071c16: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0007106d: and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000dba83: and al, 0x34; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0015b04b: and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00130ed9: and al, 0x34; call dword ptr gs:[0x10]; 
0x00061a60: and al, 0x34; call eax; 
0x0008db5d: and al, 0x34; dec dword ptr [edi]; xchg esp, eax; ret; 
0x0012f4c0: and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00190484: and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012f553: and al, 0x34; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000dee96: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd47: and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0ba: and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00177234: and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c4f99: and al, 0x34; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00157cc5: and al, 0x34; push dword ptr [esp + 0x40]; call esi; 
0x000c742d: and al, 0x34; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00084495: and al, 0x34; push eax; call ebx; 
0x000d4b50: and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x000c4b50: and al, 0x34; push eax; push ebp; call esi; 
0x0013b948: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013b548: and al, 0x34; push edx; push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x0016d5de: and al, 0x34; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x000e73f6: and al, 0x38; add al, 0x8b; je 0xe7420; cmp byte ptr [ecx], ch; ret 0xc889; 
0x00065a12: and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000c4898: and al, 0x38; call eax; 
0x00130198: and al, 0x38; mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f210: and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f4c8: and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008e842: and al, 0x38; mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0011f0be: and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00120e45: and al, 0x38; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00130ed5: and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120618: and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009df7b: and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008c292: and al, 0x38; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016903d: and al, 0x38; push 2; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x00061a58: and al, 0x38; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c709d: and al, 0x38; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008861a: and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00088284: and al, 0x38; push ebp; call dword ptr [eax + 0x1c]; 
0x000c4c11: and al, 0x38; push ebp; call esi; 
0x00080035: and al, 0x38; push edi; call dword ptr [eax + 0x1c]; 
0x0017782e: and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000c488d: and al, 0x38; push edx; push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0018972d: and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x00171886: and al, 0x38; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x000d05d8: and al, 0x39; clc; call dword ptr [esi + 0x53]; 
0x000d9c92: and al, 0x39; dec edi; and al, 0x75; js 0xd9cf8; pop esi; ret; 
0x00178d2e: and al, 0x39; ret 0x3574; 
0x0008af17: and al, 0x39; ret 0x3c72; 
0x000a6de7: and al, 0x39; ret; 
0x000feff7: and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x001396c2: and al, 0x39; sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a23ce: and al, 0x3a; add al, 0x74; sub eax, 0x8d04ec83; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x000709be: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x000645ea: and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp eax; 
0x001087da: and al, 0x3c; add byte ptr [edi], cl; test byte ptr [esi - 0x7c000006], dh; into; call dword ptr [edi + 0x57]; 
0x00071bb6: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065942: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x0006459a: and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp eax; 
0x00145837: and al, 0x3c; call 0x1450e0; add esp, 0x3c; ret; 
0x00169043: and al, 0x3c; call 0x168e70; add esp, 0x3c; ret; 
0x00175917: and al, 0x3c; call 0x175620; add esp, 0x3c; ret; 
0x0011f0c6: and al, 0x3c; call dword ptr gs:[0x10]; 
0x0008e9df: and al, 0x3c; call eax; 
0x0015d94d: and al, 0x3c; call edx; 
0x00159c57: and al, 0x3c; call esi; 
0x000a08a9: and al, 0x3c; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x001301a0: and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00120620: and al, 0x3c; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012de54: and al, 0x3c; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000c4c0d: and al, 0x3c; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00145833: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x1450e0; add esp, 0x3c; ret; 
0x00169071: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x00175913: and al, 0x3c; push dword ptr [esp + 0x3c]; call 0x175620; add esp, 0x3c; ret; 
0x0014582f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1450e0; add esp, 0x3c; ret; 
0x0016906d: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x0017590f: and al, 0x3c; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x175620; add esp, 0x3c; ret; 
0x0008ad0e: and al, 0x3c; push ebp; call dword ptr [esi + 0x20]; 
0x00175d3e: and al, 0x3c; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008eb4c: and al, 0x3c; push ecx; call eax; 
0x000c52c6: and al, 0x3c; push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0008e9da: and al, 0x3c; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x001772b3: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177323: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177393: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f6: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177456: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c3: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177543: and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x0011ec59: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00177243: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x000dad15: and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x0008e31b: and al, 0x3f; stc; call dword ptr [ecx + 0x52]; 
0x000659aa: and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x00024eaa: and al, 0x40; call dword ptr [esi]; 
0x00024e40: and al, 0x40; call ecx; 
0x00024de9: and al, 0x40; call esi; 
0x000e7f57: and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010c0cc: and al, 0x40; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e80: and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00156578: and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00070fd9: and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00090704: and al, 0x40; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000e7bfc: and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012061c: and al, 0x40; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x000c4561: and al, 0x40; push dword ptr [eax]; call edi; 
0x001348cb: and al, 0x40; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024ea6: and al, 0x40; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x00024e3c: and al, 0x40; push dword ptr [esp + 0x40]; call ecx; 
0x00024de5: and al, 0x40; push dword ptr [esp + 0x40]; call esi; 
0x000c3ad0: and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00083775: and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c7431: and al, 0x40; push ebp; call esi; 
0x0016c8f8: and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0009f9f7: and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00060660: and al, 0x44; add al, byte ptr [eax]; add byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax + 0x68]; 
0x000652a8: and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00065972: and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x00082143: and al, 0x44; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e6f97: and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x000e78f3: and al, 0x44; inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x0012dc30: and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x000e7f53: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010c0c8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e7c: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7bf8: and al, 0x44; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000c5236: and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00093901: and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00070e64: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006529e: and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x0014e4d4: and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014da44: and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00173818: and al, 0x48; call dword ptr [eax + 0x10]; 
0x001736be: and al, 0x48; call dword ptr [eax + 0x14]; 
0x000285ab: and al, 0x48; call eax; 
0x0016d8cc: and al, 0x48; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0007e931: and al, 0x48; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001579b5: and al, 0x48; push dword ptr [esp + 0x10]; call edi; 
0x001579b1: and al, 0x48; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00157cc0: and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0016db32: and al, 0x48; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00174f48: and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x000445d1: and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x00065175: and al, 0x4c; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0003f536: and al, 0x4c; call eax; 
0x00070db3: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071c98: and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x001223f2: and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00121c89: and al, 0x4c; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00064c9f: and al, 0x4c; movzx eax, byte ptr [eax + esi - 0x20]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0016dbf5: and al, 0x4c; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00082589: and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003cb57: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbfa: and al, 0x50; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0003786f: and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0006f1f1: and al, 0x50; and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f5de: and al, 0x50; and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x0006f73b: and al, 0x50; and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0002aecc: and al, 0x50; call eax; 
0x0015d2f2: and al, 0x50; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00130cf2: and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0003e6f9: and al, 0x50; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0008eeca: and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0002c9b6: and al, 0x54; call eax; 
0x00029ddf: and al, 0x54; push dword ptr [esp + 0x5c]; call edi; 
0x0002f402: and al, 0x54; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c455c: and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000dbc8c: and al, 0x55; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0015a959: and al, 0x57; add byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002bb73: and al, 0x58; call eax; 
0x000650dc: and al, 0x58; jmp eax; 
0x0002de3e: and al, 0x58; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002f3fe: and al, 0x58; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002de3a: and al, 0x58; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0016084b: and al, 0x58; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285a3: and al, 0x58; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d0c: and al, 0x58; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0016084f: and al, 0x58; push esi; call edi; 
0x0008e849: and al, 0x5b; pop esi; jmp eax; 
0x000dc694: and al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0003d980: and al, 0x5b; pop esi; ret; 
0x0016dbfa: and al, 0x5c; call eax; 
0x00029de3: and al, 0x5c; call edi; 
0x00177230: and al, 0x5c; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0002f406: and al, 0x5c; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002c9b2: and al, 0x5c; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00115b08: and al, 0x5c; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0002859f: and al, 0x5c; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c9ae: and al, 0x5c; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002914b: and al, 0x5c; push dword ptr [esp + 0x64]; call edi; 
0x00153ba6: and al, 0x5c; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0010e56e: and al, 0x5c; sub edx, dword ptr gs:[0x14]; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x0002a30a: and al, 0x60; call esi; 
0x0012de5c: and al, 0x60; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223fa: and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000df032: and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012fd98: and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00177530: and al, 0x60; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012d72b: and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00171a89: and al, 0x60; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000285a7: and al, 0x60; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002aec8: and al, 0x60; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0012e024: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b2: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df84: and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000df0a2: and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00120e49: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d83: and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00029147: and al, 0x60; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002a306: and al, 0x60; push dword ptr [esp + 0x60]; call esi; 
0x0002aec4: and al, 0x60; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00064842: and al, 0x63; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x001693ec: and al, 0x63; stc; call dword ptr [eax - 0x18]; 
0x001693ec: and al, 0x63; stc; call dword ptr [eax - 0x18]; sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000db2a3: and al, 0x64; call eax; 
0x0002914f: and al, 0x64; call edi; 
0x0002e686: and al, 0x64; call esi; 
0x000a05e7: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012e028: and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012f408: and al, 0x64; mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c7316: and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b4c: and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012e0b6: and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df88: and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0002d1d9: and al, 0x64; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0012de58: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223f6: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d727: and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a065a: and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a054c: and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0015d2ee: and al, 0x64; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002e682: and al, 0x64; push dword ptr [esp + 0x64]; call esi; 
0x0002d1d5: and al, 0x64; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0008f248: and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x00160cde: and al, 0x68; add byte ptr [eax + eax], al; add bh, bh; je 0x160d0b; or al, 0x55; call edi; 
0x0012f410: and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012c2ad: and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0002bb6f: and al, 0x68; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb6b: and al, 0x68; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x00028ac9: and al, 0x68; push dword ptr [esp + 0x70]; call ebx; 
0x00029715: and al, 0x68; push dword ptr [esp + 0x70]; call edi; 
0x00120e4d: and al, 0x6c; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012c2b7: and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00120d87: and al, 0x6c; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013e235: and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x00028ac5: and al, 0x6c; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x00029711: and al, 0x6c; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x00029dda: and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002de35: and al, 0x6c; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002c9a9: and al, 0x6c; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0005f700: and al, 0x6c; sub eax, dword ptr gs:[0x14]; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00113463: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x001302c3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x000616be: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x000f11f3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d03: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af3: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7623: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8433: and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x00028acd: and al, 0x70; call ebx; 
0x00029719: and al, 0x70; call edi; 
0x00121c91: and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115b10: and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00027518: and al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x000ccdd8: and al, 0x71; clc; call dword ptr [esi + 0x53]; 
0x00121d07: and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00115b0c: and al, 0x74; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0016cc10: and al, 0x74; push eax; call dword ptr [ecx]; 
0x0003ddb0: and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x000d9c95: and al, 0x75; js 0xd9cf8; pop esi; ret; 
0x001089d6: and al, 0x75; ret 0x95e9; 
0x000381db: and al, 0x75; stc; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00121c8d: and al, 0x78; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0002f54d: and al, 0x78; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x000d099c: and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0007980b: and al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x0004927c: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481ad: and al, 0x80; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x001b024f: and al, 0x80; add byte ptr [eax], al; add bh, dh; ret; 
0x0002e67a: and al, 0x80; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x0015c098: and al, 0x80; add byte ptr [eax], al; add byte ptr [ebp - 0x6e77f02e], al; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x001b1e89: and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x001b0cc9: and al, 0x80; add byte ptr [eax], al; add cl, ch; ret; 
0x001b079b: and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x00033b40: and al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x001440b6: and al, 0x81; les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00063589: and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0014149c: and al, 0x83; in al, dx; add al, 0x8d; test dword ptr [ebx + 0x30], esp; stc; call dword ptr [eax - 0x77]; 
0x0016c8f2: and al, 0x83; in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x00171868: and al, 0x83; in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016c90e: and al, 0x83; in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0013852b: and al, 0x83; in al, dx; or byte ptr [ebx - 1], dl; jae 0x138563; call eax; 
0x000d0e05: and al, 0x83; jmp dword ptr [eax]; 
0x000e880d: and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x0003a2e2: and al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00055d40: and al, 0x83; les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008c29b: and al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00180083: and al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0002cce1: and al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0007e6ad: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0007a4fa: and al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000dd57b: and al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c294: and al, 0x83; les ecx, ptr [eax]; ret; 
0x0003fc64: and al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0013c869: and al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0007e93a: and al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000dd507: and al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0011e1b6: and al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0014735b: and al, 0x83; ret 0x8830; 
0x0006f7b0: and al, 0x83; ret 0x8904; 
0x00172c6d: and al, 0x83; ret 0x8b18; 
0x00147982: and al, 0x83; ret 0x8d01; 
0x000d2f55: and al, 0x83; ret; 
0x0002cc04: and al, 0x83; rol byte ptr [edx], 0x39; ret; 
0x0012d072: and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012d035: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x47f3dbb4], cl; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014eca1: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebp - 0x6a4087d], cl; call dword ptr [eax - 0x73]; 
0x0013093c: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx + 3], bh; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001ab6ad: and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x00166f94: and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001b10c3: and al, 0x85; sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x0016c164: and al, 0x88; add al, 0; add byte ptr [ebp - 0x69d617d], cl; call dword ptr [eax - 0x18]; 
0x0014de36: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x001b299b: and al, 0x88; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x00120882: and al, 0x88; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x0013f0c1: and al, 0x89; adc dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00090ea1: and al, 0x89; add al, byte ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013cf11: and al, 0x89; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013c851: and al, 0x89; call 0x8324cce0; ret 0x8d01; 
0x0012a9a3: and al, 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x001768c5: and al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0011521d: and al, 0x89; inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x0012fd9d: and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f4c5: and al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000552fe: and al, 0x89; inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0012f661: and al, 0x89; inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00033d48: and al, 0x89; or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x0008b7f6: and al, 0x89; push eax; add al, 0x5b; ret; 
0x001299a4: and al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005a291: and al, 0x89; ret 0x13eb; 
0x00170e1f: and al, 0x89; ret 0x1beb; 
0x0009d48b: and al, 0x89; ret 0x4c89; 
0x0004e36d: and al, 0x89; ret 0x74ff; 
0x0009575f: and al, 0x89; ret 0xd5e9; 
0x00091a38: and al, 0x89; ret 0xe183; 
0x0002c4c8: and al, 0x89; ret 0xfa29; 
0x0004a855: and al, 0x89; ret 0xffb8; 
0x0003598f: and al, 0x89; ret; 
0x001508ac: and al, 0x89; sti; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x000348e5: and al, 0x8b; add al, 0x90; ret; 
0x000fd443: and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x0010a97a: and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a98f: and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00152173: and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x0016025a: and al, 0x8b; inc esp; and al, 0x2c; call eax; 
0x00121d04: and al, 0x8b; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009bdec: and al, 0x8b; je 0x9be14; sub byte ptr [ebx - 0x74d3db84], cl; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x000491b8: and al, 0x8b; mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x0009032b: and al, 0x8b; pop eax; or al, 0xe8; mov esp, 0x3900060b; ret; 
0x0010bfd8: and al, 0x8b; pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0017729e: and al, 0x8b; push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00034996: and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x001578c6: and al, 0x8b; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x001ae107: and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x001ac7d7: and al, 0x8c; add byte ptr [eax], al; add byte ptr [ecx - 0x16f7dbbc], cl; ret; 
0x00055a2f: and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x0011575e: and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005089a: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004f156: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501c9: and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x0014699e: and al, 0x8d; adc dword ptr [eax + 0x40], -7; call dword ptr [eax + 0x56]; 
0x000e09c0: and al, 0x8d; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0013b249: and al, 0x8d; and dword ptr [edi + 0x29], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x0017a069: and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x000e0a57: and al, 0x8d; sub byte ptr [ebx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x00094379: and al, 0x8d; xchg dword ptr [eax], eax; test ecx, edi; call dword ptr [eax + 0x68]; 
0x000942f1: and al, 0x8d; xchg dword ptr [eax], eax; test ecx, edi; call dword ptr [eax - 0x73]; 
0x000233d3: and al, 0x8d; xchg dword ptr [esi], esi; stc; call dword ptr [esi + 0x53]; 
0x00093fa4: and al, 0x8d; xchg eax, esi; test cl, bh; call dword ptr [eax + 0x68]; 
0x000942cf: and al, 0x8d; xchg eax, esi; test cl, bh; call dword ptr [eax - 0x73]; 
0x00062aed: and al, 0x8d; xor byte ptr [eax + 0x7d], 0xf9; call dword ptr [eax - 0x18]; 
0x00060b2e: and al, 0x8d; xor dword ptr [esi], 0x65; stc; call dword ptr [ebp + 0x56]; 
0x001578c9: and al, 0x90; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0009f913: and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x001086c0: and al, 0x90; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000626a2: and al, 0x90; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x001b3777: and al, 0x90; add byte ptr [eax], al; add cl, ch; jmp esi; 
0x0012d14a: and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014a705: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001ade83: and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0006e562: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cf028: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c8666: and al, 0x98; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x000d066d: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000491bb: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9ced: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001b1e06: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000db9ee: and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010681c: and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009a7df: and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x00049dc8: and al, 0xa0; add byte ptr [eax], al; add cl, ch; ret; 
0x00113178: and al, 0xa2; stc; call dword ptr [eax - 0x73]; 
0x00177714: and al, 0xa4; add byte ptr [eax], al; add bh, bh; je 0x177740; sbb al, 0x53; call eax; 
0x000d104f: and al, 0xa4; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x0015d944: and al, 0xa4; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x00123a36: and al, 0xa4; stc; call dword ptr [eax - 0x73]; 
0x00114ae2: and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x001149b9: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00105bd6: and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000d06f4: and al, 0xa8; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0013ed92: and al, 0xab; stc; call dword ptr [eax - 0x73]; 
0x000ca611: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx + 0x39082444], cl; ret; 
0x000500fd: and al, 0xac; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0009b45f: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005e1f8: and al, 0xac; add byte ptr [eax], al; add dh, dh; ret; 
0x0014da91: and al, 0xb0; add byte ptr [eax], al; add byte ptr [eax + 0x6a], dl; add eax, ebp; ret 0xf9a2; 
0x00114cda: and al, 0xb0; add byte ptr [eax], al; add byte ptr [ebx + 0xb82494], cl; add byte ptr [eax], al; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x0015175f: and al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00049929: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe05], al; ret 0xc639; 
0x000ca02c: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x0009e50f: and al, 0xb4; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0016938a: and al, 0xb6; stc; call dword ptr [eax - 0x73]; 
0x00114ce1: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114c72: and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0003da20: and al, 0xb8; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00091b9e: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd2: and al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x0011594d: and al, 0xbc; add dword ptr [eax], eax; add byte ptr [ebp - 0x47d3dbac], cl; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012c18e: and al, 0xc4; add byte ptr [eax], al; add byte ptr [ebx + 0xc0249c], cl; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0006f7be: and al, 0xc7; add dh, byte ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2454], cl; ret 0x840f; 
0x0017a77a: and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00134e82: and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00144f63: and al, 0xc; add esp, 0x10; pop esi; pop edi; pop ebp; ret; 
0x00041e40: and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x00061280: and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0007c641: and al, 0xc; add esp, 0x1c; ret; 
0x000a8e1e: and al, 0xc; call 0xa8d00; add esp, 0xc; test eax, eax; jne 0xa8e33; ret; 
0x000a7390: and al, 0xc; call dword ptr [edx]; 
0x00040760: and al, 0xc; call dword ptr gs:[0x10]; 
0x0012d0db: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d35b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e41b: and al, 0xc; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0008fc99: and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0004354d: and al, 0xc; cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x000e90f0: and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0003c497: and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003c0c9: and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c4d6: and al, 0xc; fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00179e91: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e1: and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00095156: and al, 0xc; mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00187181: and al, 0xc; mov dword ptr [eax], edx; ret; 
0x00090e58: and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003f23f: and al, 0xc; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x000e7bc2: and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000a0412: and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0011ff70: and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012dd9a: and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012d3af: and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000e80c2: and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008fa1b: and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012e980: and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012f214: and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000df0a6: and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012ea60: and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0011effc: and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d3e2: and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x0012e37c: and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2bc: and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012d03c: and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000fba82: and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00125b70: and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127530: and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a90: and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x00098bd3: and al, 0xc; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fa72: and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012e5c0: and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000a72d2: and al, 0xc; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x0016e512: and al, 0xc; mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0003bd14: and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00185bd0: and al, 0xc; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00134e7e: and al, 0xc; mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00061347: and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ec47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e717: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f237: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c07: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114807: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e627: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e687: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114677: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e917: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e797: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e457: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128667: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e537: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e567: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c267: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e887: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf37: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec97: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e27: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f47: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f17: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114627: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127937: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127857: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127557: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127587: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab7: and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0009527a: and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000712ef: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00070a8f: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x0007243b: and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x000952bd: and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0007c57b: and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0013145a: and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0009b2da: and al, 0xc; mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9b2f0; ret; 
0x00099efb: and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010bfd3: and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0003bca2: and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0008e19e: and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000c11c4: and al, 0xc; pop ebx; pop esi; ret; 
0x001a9424: and al, 0xc; pop edi; ret; 
0x001352ea: and al, 0xc; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00024e38: and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00160847: and al, 0xc; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00160ce6: and al, 0xc; push ebp; call edi; 
0x00179ec8: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00179e95: and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e5: and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00179488: and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e7dd7: and al, 0xc; push edx; push ebx; call eax; 
0x0017985c: and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x0005bc9e: and al, 0xc; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0015492f: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x00177a34: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a83: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x0003b074: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e3: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003f287: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39a: and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x000254f8: and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x00121f71: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x00124481: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00125c14: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012bc37: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f144: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f310: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f390: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f67b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012fbd4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012ffab: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c2: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130130: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x00130352: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x0014659d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465e5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146634: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x00148c3e: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x00172c54: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e0d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x0017631d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x001763a0: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x001792cf: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793bf: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x00179696: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x00179736: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x00179878: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x0017990c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a146: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1e6: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a286: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a326: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa1d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa7d: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aae7: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab97: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff82: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x0018047c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x00181036: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x0018720c: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a4: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x0019024f: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x0003e1b5: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0004090a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b37: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e07: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8a: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x00041ea8: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x0005ae23: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0009cd8b: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x000c6568: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dac69: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54ed: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79ad: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000efeba: and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x0008ab93: and al, 0xc; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00179acc: and al, 0xc; sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0012b5ee: and al, 0xc; test eax, eax; je 0x12b5f8; test edx, edx; jne 0x12b600; ret; 
0x0008fcc8: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fcc8: and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0008fa6c: and al, 0xc; xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00189773: and al, 0xcc; add byte ptr [eax], al; add byte ptr [ebp + 0x57], dl; push esi; call dword ptr [ebx + 0x40]; 
0x0003c531: and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003c4da: and al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0016aa0b: and al, 0xd; add byte ptr [ebx - 0x7f72eb14], al; insd dword ptr es:[edi], dx; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x000dad43: and al, 0xdd; add al, 0x24; add esp, 0xc; ret; 
0x0003c291: and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x00080d87: and al, 0xe0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x001755b7: and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0005e6a0: and al, 0xe0; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x000a7dc7: and al, 0xe4; add byte ptr [eax], al; add byte ptr [ebp - 0x665f380], cl; call dword ptr [eax + 0x68]; 
0x00142f81: and al, 0xe8; adc dword ptr [edx], eax; out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0011eaaf: and al, 0xe8; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5d17a], cl; call dword ptr [eax - 0x18]; 
0x0011db93: and al, 0xe8; call dword ptr [ebp - 0x10]; 
0x00134446: and al, 0xe8; inc esp; in eax, dx; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00030533: and al, 0xe8; ja 0x304ee; pop es; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x000fd718: and al, 0xe8; jb 0xfd776; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00177bc5: and al, 0xe8; lds esi, ptr [ebp - 0x3b7c0016]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00174dd3: and al, 0xe8; mov bh, 0xe3; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0007c748: and al, 0xe8; push edx; ret; 
0x0009d238: and al, 0xe8; ret 0xffaf; 
0x00039df8: and al, 0xe8; ret 0xfff5; 
0x00139817: and al, 0xe8; ret; 
0x000fda06: and al, 0xe8; test byte ptr [edi - 0xe], dl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000a7de4: and al, 0xe8; xchg dh, dh; std; jmp dword ptr [esi - 0x70]; 
0x001715f9: and al, 0xe8; xchg ecx, eax; sbb ebp, ebx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001782f8: and al, 0xe8; xchg edx, eax; scasb al, byte ptr es:[edi]; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x001742b3: and al, 0xe8; xlatb; out dx, al; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00044878: and al, 0xe9; popfd; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0010ac52: and al, 0xe9; ret; 
0x00082542: and al, 0xeb; mov esp, 0x3900768d; ret; 
0x0010402c: and al, 0xeb; or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x0014c9e7: and al, 0xec; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x0015f0a7: and al, 0xf2; call dword ptr [eax - 0x18]; 
0x000a78be: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x0004b669: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e5: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x001684ae: and al, 0xf4; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043c5e: and al, 0xf4; add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x00104cb7: and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x00189e76: and al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x00106bb5: and al, 0xf; mov dh, 0x50; add al, 0x8b; mov esp, 0xf8f92c96; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00104b8a: and al, 0xf; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0004fbb4: and al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006496f: and al, 0xf; test byte ptr [ecx - 0x76000007], bl; ret; 
0x00044772: and al, 0xf; test dword ptr [ecx], edi; adc dword ptr [eax], eax; add byte ptr [ebx - 0x7cb3dbbc], cl; rol byte ptr [ecx], 0x39; ret 0x8c0f; 
0x000445c8: and al, 0xf; test dword ptr [edx], edx; or eax, 0x44830000; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x00185a27: and al, 0xf; test dword ptr [esi + 0xf000002], ecx; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0003fb60: and al, 0xf; xchg ebp, eax; ret 0xca21; 
0x00142bd4: and al, 0xf; xchg ebp, eax; ret 0xe8c0; 
0x0017113f: and al, 0xf; xchg edx, eax; ret 0xd689; 
0x000ecbaf: and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0010da4b: and al, 0xfe; inc dword ptr [ebx - 0x357c0035]; dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001951ae: and al, 0xff; inc dword ptr [ecx + 0x446afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195115: and al, 0xff; inc dword ptr [ecx + 0x44748c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001579ae: and al, 0xff; je 0x1579d6; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0017e003: and al, 0xff; je 0x17e02b; jo 0x17e032; ret; 
0x0009f764: and al, 0xff; rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x000711ee: and al, 1; add byte ptr [eax], al; add byte ptr [ebx - 0x38b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x0004699d: and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x38e9; 
0x0012e71e: and al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c93b: and al, 1; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000c38e7: and al, 1; add byte ptr [eax], al; ret; 
0x00080fd9: and al, 1; ret 0x5152; 
0x00092df5: and al, 2; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000b3d58: and al, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00104f5b: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x00104f24: and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; sahf; ret 0xd201; 
0x00197644: and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0007abda: and al, 4; add byte ptr [ecx - 0x7c968b38], cl; jmp dword ptr [eax]; 
0x0017a756: and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000db951: and al, 4; add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0013f3a6: and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000911a2: and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00087ee6: and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a6: and al, 4; and eax, 0x7f; ret; 
0x0013ced6: and al, 4; bswap eax; ret; 
0x001223fe: and al, 4; call dword ptr gs:[0x10]; 
0x0008f3a1: and al, 4; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x0003bc90: and al, 4; fabs; test ah, 2; je 0x3bc9b; fchs; ret; 
0x0003c030: and al, 4; fabs; test ah, 2; je 0x3c03b; fchs; ret; 
0x0003bd27: and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x00055287: and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00055301: and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0003bf66: and al, 4; fscale; fstp st(1); ret; 
0x0003bf76: and al, 4; fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x0017a089: and al, 4; jmp dword ptr [eax + 0x20]; 
0x0017a065: and al, 4; jmp dword ptr [eax + 0x24]; 
0x001842c5: and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016ed75: and al, 4; jmp dword ptr [eax + 4]; 
0x0008f1ff: and al, 4; jmp dword ptr [eax]; 
0x00070db7: and al, 4; jmp eax; 
0x00071c9c: and al, 4; jmp edx; 
0x000434d7: and al, 4; lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000e812d: and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000434f6: and al, 4; lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x0009a942: and al, 4; lock dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x0010cf1c: and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010cf44: and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000912b2: and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099e66: and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0009da41: and al, 4; mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bec]; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x000915b6: and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a982: and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003bd1c: and al, 4; mov dword ptr [eax], ecx; ret; 
0x00099ebf: and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915df: and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00071b62: and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071b72: and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071b92: and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00071ba2: and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071c12: and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00071bb2: and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070e60: and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000e8131: and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000a065e: and al, 4; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000e7e05: and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0012e768: and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eaa4: and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012eae8: and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced8: and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012e594: and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011f658: and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012e744: and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012eb18: and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00129e14: and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012eb88: and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb8: and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0009115a: and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x91170; ret; 
0x0012ebe8: and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012ec14: and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000a0550: and al, 4; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0012e658: and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e8: and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea514: and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012e9e8: and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc8: and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114794: and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x001229a4: and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c3f8: and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00120b94: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00120b94: and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00122b84: and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00129bb8: and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012eac4: and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00129dc8: and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128718: and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c08: and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012bec4: and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdf4: and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e484: and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129da4: and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea84: and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00129918: and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e4b4: and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0003c436: and al, 4; mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012e6b4: and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ec4: and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114be4: and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012e4a8: and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012d514: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012d514: and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001153a8: and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0f74: and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bb8: and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c8: and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00127be4: and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c238: and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf28: and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010bf54: and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010bf74: and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf94: and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c022: and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012bee8: and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d8: and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e508: and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d278: and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001145b4: and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000eff18: and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012db94: and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db74: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012db74: and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e948: and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x001210c6: and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00129498: and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b8: and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae8: and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00099a13: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099918: and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f49: and al, 4; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091476: and al, 4; mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fba21: and al, 4; mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x00150136: and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a796: and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00178262: and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008d6a6: and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x00034b2a: and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0009dad0: and al, 4; mov eax, dword ptr [eax + 0x3be4]; test eax, eax; jne 0x9dae7; ret; 
0x00034b4a: and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00187196: and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001503f0: and al, 4; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x001871b6: and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187246: and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187236: and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c6: and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e496: and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x0010a910: and al, 4; mov eax, dword ptr [eax + 0xbc]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00121aa6: and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00034300: and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0018717a: and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000871a6: and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087156: and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a0a51: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x000a0cd1: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x000a0a91: and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x00034990: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034960: and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000e8e06: and al, 4; mov eax, dword ptr [eax]; ret; 
0x0017a396: and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0012f65c: and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f2f1: and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c3ed: and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003dee6: and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00070fdd: and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00090563: and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0003c372: and al, 4; mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000a9177: and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x00090e66: and al, 4; mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00090d96: and al, 4; mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00095d60: and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008f320: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f340: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f360: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f380: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d40: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d20: and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a0d40: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d90: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a30: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a10: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0d10: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac0: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d70: and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0017a776: and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114546: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00091096: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef6: and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008d336: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187156: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031486: and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010cee6: and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00087166: and al, 4; movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00087186: and al, 4; movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00087ef6: and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00087f16: and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x00034860: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034830: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034800: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034740: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000347a0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346b0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034770: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034710: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034910: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346e0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347d0: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034680: and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0010cda6: and al, 4; movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0008d6b6: and al, 4; ret; 
0x0013cee7: and al, 4; rol ax, 8; ret; 
0x0018765c: and al, 4; sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0008efd6: and al, 4; setae al; ret; 
0x000944fa: and al, 4; sete al; movzx eax, al; ret; 
0x0016c86e: and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0008b466: and al, 4; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x00042ef7: and al, 4; test eax, eax; je 0x42f03; bsr eax, eax; add eax, 1; ret; 
0x00042f16: and al, 4; test eax, eax; je 0x42f22; bsr eax, eax; add eax, 1; ret; 
0x00042f36: and al, 4; test eax, eax; je 0x42f42; bsr eax, eax; add eax, 1; ret; 
0x00042fa7: and al, 4; test eax, eax; je 0x42fb3; bsr eax, eax; add eax, 1; ret; 
0x0009a371: and al, 4; test eax, eax; js 0x9a380; mov dword ptr [edx + 0x3b34], eax; xor eax, eax; ret; 
0x000983fa: and al, 4; test edx, edx; jne 0x98410; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000e7de6: and al, 4; test edx, edx; jns 0xe7e60; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000919d2: and al, 4; xor cl, 0x81; mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a9c71: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca1: and al, 4; xor eax, eax; cmp edx, 0x40; ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00131446: and al, 4; xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x131458; ret; 
0x000d9fc6: and al, 4; xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9ff2; ret; 
0x00177444: and al, 5; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x000ad8bc: and al, 7; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0004f631: and al, 8; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004eb5d: and al, 8; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x0013f62a: and al, 8; add byte ptr [eax], 0; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0008619a: and al, 8; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00071d88: and al, 8; add dword ptr [ebx - 0x7cfbdba4], ecx; ret; 
0x0003c6c5: and al, 8; call 0x3c640; pop ecx; pop edx; ret; 
0x0006134b: and al, 8; call dword ptr gs:[0x10]; 
0x0011457b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145eb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147cb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ecdb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f1fb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011ffa7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206bb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bc7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fc7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221cb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x0012221b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f4b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012a9fb: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd87: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012e20b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0006134b: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5a7: and al, 8; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000fba8b: and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x001846d2: and al, 8; call eax; 
0x000c2ce3: and al, 8; cld; pop edi; ret; 
0x0009ff62: and al, 8; cmp byte ptr [ebx], 0x2f; jne 0x9ffb0; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000944f6: and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00070e53: and al, 8; cmp edx, 0x5a; jbe 0x71bc0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0003c3f1: and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000799b2: and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0011454a: and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871aa: and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017ac52: and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0009109a: and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cefa: and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x00090d5d: and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013e22e: and al, 8; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124263: and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00171594: and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017a085: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a061: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed71: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed95: and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000e8135: and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012ec4b: and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e71b: and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f23b: and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c0b: and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206fb: and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x001144da: and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011480b: and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x00091296: and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x00130cf6: and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00128b22: and al, 8; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012e8bb: and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e62b: and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e68b: and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0011467b: and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e91b: and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228eb: and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be9b: and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012f2f9: and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e79b: and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x00190488: and al, 8; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0012e45b: and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012866b: and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e53b: and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e56b: and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c26b: and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e88b: and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf3b: and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec9b: and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e2b: and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f4b: and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f1b: and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0011462b: and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0012793b: and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012785b: and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0012755b: and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012758b: and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123abb: and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00099c9d: and al, 8; mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00090d3a: and al, 8; mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d33a: and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0018715a: and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0009830a: and al, 8; mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00092baa: and al, 8; mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000982ca: and al, 8; mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003148a: and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0012f20c: and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0003c0c5: and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0017825e: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00187176: and al, 8; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0013dc47: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013dc47: and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0012e764: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eae4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f654: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb84: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e654: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9e4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3f4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00129bb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00129dc4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128714: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c04: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129914: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012e4a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001153a4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127bb4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c234: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf24: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bee4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e504: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d274: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff14: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e944: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129494: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae4: and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000951f7: and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003c042: and al, 8; mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003cd07: and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00096b61: and al, 8; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0018614a: and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x186158; ret; 
0x00196428: and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00130ecd: and al, 8; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00099ef7: and al, 8; mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00091156: and al, 8; mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x91170; ret; 
0x000c54ea: and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc550a; ret; 
0x0007c63d: and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00121f6d: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x001300be: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x0003e1b1: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0005ae1f: and al, 8; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x00034b26: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b46: and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c7fd: and al, 8; mov esp, ecx; jmp edx; 
0x0010cdad: and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0011765a: and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190fa: and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x001278ba: and al, 8; movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00094b85: and al, 8; not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009127a: and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007c585: and al, 8; pop ebx; jmp eax; 
0x00081c7e: and al, 8; pop ebx; ret; 
0x000c2cb9: and al, 8; pop edi; ret; 
0x000bdda4: and al, 8; pop esi; ret; 
0x000415c5: and al, 8; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0008a173: and al, 8; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0007b7a8: and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00088924: and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000f844d: and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0008a177: and al, 8; push esi; call dword ptr [ebx + 0x40]; 
0x0016e59a: and al, 8; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000413e0: and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00034b91: and al, 8; ret; 
0x0013f620: and al, 8; shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x00095e54: and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009adcc: and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016d3b6: and al, 8; sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00028346: and al, 8; test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0012b5ca: and al, 8; test eax, eax; je 0x12b5d4; test edx, edx; jne 0x12b5d8; ret; 
0x0012bc66: and al, 8; test eax, eax; jne 0x12bcb0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008f1f4: and al, 8; test edx, edx; je 0x8f208; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000dc367: and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0011f617: and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x000e7b77: and al, 8; xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009125d: and al, 8; xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0009427a: and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c49: and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x000515dd: and al, 9; ret 0xb74; 
0x0019786b: and al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003bc73: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000aaaba: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003c341: and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016eaf4: and al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016e908: and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0011156d: and al, byte ptr [ebp + 0x1840fdb]; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x001840ed: and al, byte ptr [ebx + 0x505208ec]; call dword ptr [ebx + 0x28]; 
0x00040485: and al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x00092f04: and al, byte ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x0019885c: and al, byte ptr [ebx - 0x167cfb11]; add al, 0x83; ljmp 0xf702:0x89078b04; ret 0xf; 
0x0019b95c: and al, byte ptr [ebx - 0x167cfb12]; add al, 0x83; ljmp 0xf702:0x89068b04; ret 0xf; 
0x001539bd: and al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00088baa: and al, byte ptr [ecx]; add byte ptr [eax], al; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00134333: and al, ch; aaa; ret; 
0x00042495: and al, ch; adc eax, 0x83ffffff; les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x000c1081: and al, ch; mov ah, byte ptr [ebp + 0xc]; add byte ptr [ecx + 0x109f6dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0004153c: and al, ch; mov esi, 0x89000817; ret; 
0x00138187: and al, ch; ret; 
0x0017933b: and bh, ah; jmp dword ptr [esi - 0x70]; 
0x0015ea13: and bh, al; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x000843ec: and bh, bh; cli; dec dword ptr [ebp - 0x67caf7a]; call dword ptr [eax - 0x73]; 
0x0019559e: and bh, bh; inc dword ptr [ecx + 0x442bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195505: and bh, bh; inc dword ptr [ecx + 0x44358c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001953b5: and bh, bh; inc dword ptr [ecx + 0x444a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001952fe: and bh, bh; inc dword ptr [ecx + 0x4455fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011ae46: and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001872d3: and bh, byte ptr [eax + 4]; add esp, 0xc; ret; 
0x00047a7a: and bh, byte ptr [ebx - 0x3b7cfff9]; adc byte ptr [ecx - 0x7ab3dbbc], cl; ror byte ptr [edi], 0x84; ret 0x29; 
0x0019667a: and bh, byte ptr [edx]; cli; jmp dword ptr [esi - 0x70]; 
0x00087ee9: and bh, cl; ret; 
0x000ffd2a: and bh, dh; adc bh, dh; push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x001592be: and bh, dh; jmp dword ptr [esi - 0x70]; 
0x001367ea: and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x001a58d7: and bl, byte ptr [0xc381fffe]; leave; dec edx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148c89: and bl, ch; mov al, 0xe8; pop ds; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x0008f146: and byte ptr [0xfffff000], bh; ja 0x8f158; add esp, 8; pop ebx; ret; 
0x0003a99e: and byte ptr [eax + 0x3544b60f], dl; dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0016bcf2: and byte ptr [eax + 0x50fff963], 0x6a; pop es; call 0x153e50; add esp, 0x1c; ret; 
0x0016bdf2: and byte ptr [eax + 0x50fff963], 0xe8; ret; 
0x0002551f: and byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x0003debc: and byte ptr [eax + 0xaf], bh; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003da28: and byte ptr [eax + 0xb2], bh; call dword ptr gs:[0x10]; 
0x0011e25d: and byte ptr [eax + 0xb7], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012108f: and byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x00091ebe: and byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x0006670d: and byte ptr [eax + 1], 0; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x00197a64: and byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00081179: and byte ptr [eax + edx], 0x81; ret; 
0x000ef679: and byte ptr [eax - 0x18], dl; nop; ret 1; 
0x0003d546: and byte ptr [eax - 0x39000000], 4; add ah, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x0014f90b: and byte ptr [eax - 0x50], 0xf9; call dword ptr [eax - 0x18]; 
0x0005b5cc: and byte ptr [eax - 0x73], dl; xchg byte ptr [eax], dh; jns 0x5b5cc; call dword ptr [eax - 0x18]; 
0x00079385: and byte ptr [eax - 0x73], dl; xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x00095d65: and byte ptr [eax - 0x76fffffe], 0x10; ret; 
0x0012c2b0: and byte ptr [eax - 0x77000000], 0x44; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x001842ba: and byte ptr [eax - 0x7afffffd], 0xc0; je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00034bcb: and byte ptr [eax], 0; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034beb: and byte ptr [eax], 0; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bab: and byte ptr [eax], 0; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x000df288: and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3ecc8a], cl; add byte ptr [ebp - 0x1620a36e], cl; call dword ptr [ecx + 0x52]; 
0x0002332e: and byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00043753: and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000fb614: and byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x000fb5ce: and byte ptr [eax], al; add byte ptr [eax], al; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb627: and byte ptr [eax], al; add byte ptr [eax], al; mov edx, 0x40; cmove eax, edx; ret; 
0x00043102: and byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x00148bd5: and byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001330d0: and byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00142f7b: and byte ptr [eax], al; add byte ptr [ecx - 0x17dbdba4], cl; adc dword ptr [edx], eax; out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x00104419: and byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x430f; 
0x0010e040: and byte ptr [eax], al; add byte ptr [edi], cl; dec esi; ret 0x15e9; 
0x000692b1: and byte ptr [eax], al; add cl, ch; inc edi; fcos; call dword ptr [edx - 0x73]; 
0x0002f80c: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00034bcc: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034bec: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bac: and byte ptr [eax], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0003ccfd: and byte ptr [eax], al; push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x000ce51c: and byte ptr [eax], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00024781: and byte ptr [ebp + 0x16880fc0], al; ret 0x11; 
0x001a75c7: and byte ptr [ebp + 0x46], dh; test dh, 0x40; jne 0x1a7614; add eax, 0xf; ret; 
0x0005e808: and byte ptr [ebp + 0x4f850fc9], al; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x0016c914: and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x001a7587: and byte ptr [ebp + 0x66], dh; test dl, 0x40; jne 0x1a75f4; add eax, 7; ret; 
0x000481e2: and byte ptr [ebp + 0x7ff48384], cl; clc; call dword ptr [eax + 0x52]; 
0x00050d23: and byte ptr [ebp + 0x9840fc0], al; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x001755b4: and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x00091618: and byte ptr [ebp + ecx - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00149fe8: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x0014a1b8: and byte ptr [ebp + esi*8 + 0x3c], dh; or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x53]; 
0x00146619: and byte ptr [ebp - 0x17fbdbac], cl; mov ebp, 0x89fffffd; ret 0xffb8; 
0x0012433b: and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x0016ed9c: and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x001210c3: and byte ptr [ebp - 0x47fbdbac], cl; fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0008f197: and byte ptr [ebp - 0x5d], ah; jl 0x8f19c; add byte ptr [eax], al; ret; 
0x00157ee6: and byte ptr [ebp - 0x64c2380], cl; call dword ptr [eax - 0x18]; 
0x000a29ac: and byte ptr [ebp - 0x66fcb80], cl; call dword ptr [eax - 0x18]; 
0x00091b88: and byte ptr [ebp - 0x67c3b80], cl; call dword ptr [eax - 0x18]; 
0x00024916: and byte ptr [ebp - 0x69c0880], cl; call dword ptr [eax - 0x18]; 
0x00157940: and byte ptr [ebp - 0x6a12880], cl; call dword ptr [eax + 0x55]; 
0x00157905: and byte ptr [ebp - 0x6a13180], cl; call dword ptr [eax + 0x55]; 
0x001452a3: and byte ptr [ebp - 0x6a5b77d], cl; call dword ptr [eax + 0x51]; 
0x00157ea7: and byte ptr [ebp - 0x6cac27d], cl; call dword ptr [eax - 0x18]; 
0x00048bc9: and byte ptr [ebp - 0x6d06280], cl; call dword ptr [eax + 0x56]; 
0x00040052: and byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe2e: and byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00026102: and byte ptr [ebp - 0x720d8b2e], al; nop; or al, 0x70; stc; call dword ptr [edx - 0x73]; 
0x0002706f: and byte ptr [ebp - 0x72178b40], al; xchg byte ptr [eax + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x000a05e0: and byte ptr [ebp - 0x748c8b40], al; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0016d12f: and byte ptr [ebp - 0x76c88b40], al; ret; 
0x000bb767: and byte ptr [ebp - 0x7af0df81], cl; das; add eax, 0x5e5f0000; pop ebx; ret; 
0x000ba0c4: and byte ptr [ebp - 0x7af0df81], cl; rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0016c863: and byte ptr [ebp - 0x7b7bf02e], al; add byte ptr [eax], al; add byte ptr [ecx - 0x7cfbdbac], cl; in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00088fe1: and byte ptr [ebp - 0x7c758b40], al; in al, dx; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [edi], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00147af8: and byte ptr [ebp - 0x7cc48740], al; in al, dx; add al, 0x89; ret; 
0x0016d159: and byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0016cf86: and byte ptr [ebp - 0x7ce28a40], al; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000a978b: and byte ptr [ebp - 0x7cffd98c], cl; ret 0x3901; 
0x000d23dd: and byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x000d2276: and byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x001658a5: and byte ptr [ebp - 0xd63c380], cl; call dword ptr [eax - 1]; 
0x00162ea5: and byte ptr [ebp - 0xda20380], cl; call dword ptr [eax - 1]; 
0x0015cdd8: and byte ptr [ebp - 0xe2e737a], cl; call dword ptr [eax + 0x6a]; 
0x0015c549: and byte ptr [ebp - 0xe2e7380], cl; call dword ptr [eax + 0x6a]; 
0x00158665: and byte ptr [ebp - 0xe3b3380], cl; call dword ptr [eax - 1]; 
0x00156555: and byte ptr [ebp - 0xe6c1380], cl; call dword ptr [eax - 1]; 
0x0004d5ec: and byte ptr [ebp - 2], ch; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x00131afb: and byte ptr [ebp - 7], dl; call dword ptr [eax + 0x6a]; 
0x000622bb: and byte ptr [ebx + 0x1ba10c4], al; add byte ptr [eax], al; add byte ptr [ebp + 0x290578c9], al; fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x0009d232: and byte ptr [ebx + 0x1c896070], cl; and al, 0xe8; ret 0xffaf; 
0x00160a2f: and byte ptr [ebx + 0x237f01fa], al; add esp, 0x18; pop ebx; ret; 
0x000a7276: and byte ptr [ebx + 0x28], 0xfe; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x00054bde: and byte ptr [ebx + 0x290c2454], cl; ret; 
0x000f096d: and byte ptr [ebx + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x0005dffb: and byte ptr [ebx + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0014770b: and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x00089c28: and byte ptr [ebx + 0x538b1443], cl; adc byte ptr [ecx], bh; ret 0x2773; 
0x001895b8: and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0007c5de: and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0005a267: and byte ptr [ebx + 0x5e5b08c4], al; pop edi; pop ebp; ret; 
0x0008c06b: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0004241f: and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00041e07: and byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0008ad8b: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00060bb9: and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000845a6: and byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00053a1c: and byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0002e184: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x000a0772: and byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0002b2e6: and byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x000fd4ab: and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000255a5: and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00125c11: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012f141: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a1: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbd1: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc1: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0013034f: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x00148c3b: and byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x0012f1a9: and byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f779: and byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7e9: and byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc39: and byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd39: and byte ptr [ebx + 0x651c2454], cl; sub edx, dword ptr [0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x001744a7: and byte ptr [ebx + 0x73ff5043], cl; dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017944b: and byte ptr [ebx + 0x74c08503], cl; jle 0x179484; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0017954b: and byte ptr [ebx + 0x74c08503], cl; jle 0x179584; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0004fbb0: and byte ptr [ebx + 0xf242454], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00148ec2: and byte ptr [ebx + ebx*8 - 0x77], dh; fisubr dword ptr [ecx]; ret 0x7e8b; 
0x0003ecd2: and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x00138ebb: and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x001389bf: and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x001126ec: and byte ptr [ebx - 0x178bdbbc], cl; dec edx; ret; 
0x0009d55b: and byte ptr [ebx - 0x17e3dba4], cl; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x0009b65e: and byte ptr [ebx - 0x17e3dba4], cl; sub byte ptr [ebx - 8], bh; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x001768c2: and byte ptr [ebx - 0x2776db3c], al; pop ebx; pop esi; ret; 
0x00134ca5: and byte ptr [ebx - 0x2a8cfe12], al; add esp, 4; pop ebx; pop esi; ret; 
0x000b01bc: and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00089764: and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00161c44: and byte ptr [ebx - 0x72b00000], ah; or esp, 0x48; int1; call dword ptr [eax - 0x73]; 
0x0011e321: and byte ptr [ebx - 0x72cbdbbc], cl; sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0009bde8: and byte ptr [ebx - 0x74dbdbac], cl; je 0x9be14; sub byte ptr [ebx - 0x74d3db84], cl; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x00129e43: and byte ptr [ebx - 0x74e3dbb4], cl; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012c6e2: and byte ptr [ebx - 0x74e7dba4], cl; jl 0x12c70e; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x000280c0: and byte ptr [ebx - 0x74efdbbc], cl; adc dword ptr [ecx], eax; ret 0xc083; 
0x000c107e: and byte ptr [ebx - 0x7517df40], al; or al, 0; add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001ae094: and byte ptr [ebx - 0x7693dbac], cl; ret; 
0x0009fb0f: and byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x00056551: and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x0012ad71: and byte ptr [ebx - 0x7afefbb3], al; sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x000e8809: and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x001ad483: and byte ptr [ebx - 0x7ce7dbb4], cl; ret; 
0x00133e0e: and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00064993: and byte ptr [ebx], al; mov word ptr [esi - 0x73e94], es; jmp ecx; 
0x0010d6f8: and byte ptr [ecx + 0x1876fff0], cl; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0011521a: and byte ptr [ecx + 0x4289247a], cl; sub byte ptr [esi + 0x5f], bl; ret; 
0x000810ac: and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x000dbc88: and byte ptr [ecx + 0x5524245c], cl; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000dc0d2: and byte ptr [ecx + 0x5f5e5bc8], cl; ret; 
0x0013c539: and byte ptr [ecx + 0x5f5e5bd8], cl; ret 4; 
0x0008ec3a: and byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0007c830: and byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00061fab: and byte ptr [ecx + 0x5f5e5bf8], cl; ret; 
0x00175b6c: and byte ptr [ecx + 0x6a], dl; push es; push eax; call dword ptr [edx + 0x14]; 
0x000aa0cb: and byte ptr [ecx + 0xfd839d6], cl; xchg edx, eax; ret; 
0x000ad06e: and byte ptr [ecx + 0xfe839d1], cl; xchg edx, eax; ret; 
0x0007188c: and byte ptr [ecx + edx + 1], dh; ret; 
0x00145f96: and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0004eacc: and byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0012fe7b: and byte ptr [ecx - 0x72e7dbbc], cl; inc esp; and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121d00: and byte ptr [ecx - 0x74dbdbbc], cl; inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0006018c: and byte ptr [ecx - 0x9fbdb84], cl; ret 0xf50; 
0x001914d9: and byte ptr [ecx - 1], ah; inc dword ptr [ecx + 0x47f03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0009d9e0: and byte ptr [ecx - 7], al; call dword ptr [eax - 0x18]; 
0x0017942a: and byte ptr [ecx], 0xfc; jmp dword ptr [esi - 0x70]; 
0x001773e4: and byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x00024b10: and byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b19; ret; 
0x000c2015: and byte ptr [ecx], al; ret 0x167c; 
0x000a5f30: and byte ptr [ecx], al; ret 0x728d; 
0x000625cb: and byte ptr [ecx], al; ret; 
0x0013e590: and byte ptr [ecx], al; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000d9c7d: and byte ptr [ecx], bh; dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00168930: and byte ptr [ecx], bh; ret 0x1074; 
0x00031d32: and byte ptr [ecx], bh; ret 0x4c0f; 
0x0005e8fd: and byte ptr [ecx], bh; ret 0x830f; 
0x00186084: and byte ptr [ecx], bh; ret 0xa773; 
0x0006e56a: and byte ptr [ecx], bh; ret; 
0x000c8e3a: and byte ptr [ecx], bh; ror byte ptr [edi], 1; mov cs, word ptr [edi - 0x76ffffeb]; ret; 
0x00054cfc: and byte ptr [ecx], ch; ret; 
0x00083b47: and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0008a0c0: and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x000ef104: and byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x0005ae99: and byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x00171a8f: and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x00174f64: and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x000ba467: and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b07f7: and byte ptr [edi + 0x5e], bl; ret; 
0x00197de1: and byte ptr [edi - 0x18], bl; adc eax, 0x81fffef8; ret; 
0x001972e1: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff03; ret; 
0x00195ce1: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff19; ret; 
0x00193ce1: and byte ptr [edi - 0x18], bl; adc eax, 0x81ffff39; ret; 
0x001958f1: and byte ptr [edi - 0x18], bl; add eax, 0x81ffff1d; ret; 
0x001938f1: and byte ptr [edi - 0x18], bl; add eax, 0x81ffff3d; ret; 
0x00194bd1: and byte ptr [edi - 0x18], bl; and eax, 0x81ffff2a; ret; 
0x00192bd1: and byte ptr [edi - 0x18], bl; and eax, 0x81ffff4a; ret; 
0x00193b91: and byte ptr [edi - 0x18], bl; cmp bh, bh; inc dword ptr [ecx + 0x45a48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195b91: and byte ptr [edi - 0x18], bl; sbb bh, bh; inc dword ptr [ecx + 0x43cc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192e71: and byte ptr [edi - 0x18], bl; test dword ptr [edi - 1], eax; inc dword ptr [ecx + 0x46768c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001979c1: and byte ptr [edi - 0x18], bl; xor eax, 0x81fffefc; ret; 
0x00196ec1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff07; ret; 
0x00194fc1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff26; ret; 
0x00192fc1: and byte ptr [edi - 0x18], bl; xor eax, 0x81ffff46; ret; 
0x000cadfc: and byte ptr [edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00042dc4: and byte ptr [edi], cl; inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00066150: and byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065250: and byte ptr [edi], cl; mov dh, 0x44; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x000c1d52: and byte ptr [edi], cl; mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a7c12: and byte ptr [edi], cl; nop; ret 0xdb31; 
0x0006f1f3: and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f5e0: and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x0006f73d: and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001a789d: and byte ptr [edi], cl; test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a8f29: and byte ptr [edi], cl; test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001a7d61: and byte ptr [edi], cl; test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x001a8b11: and byte ptr [edi], cl; test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001a7db4: and byte ptr [edi], cl; test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x001a8b74: and byte ptr [edi], cl; test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x000d9c80: and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00093d34: and byte ptr [edi], cl; test dword ptr [ecx - 0x72000005], edx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x000bb76a: and byte ptr [edi], cl; test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x001a935b: and byte ptr [edi], cl; test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x001a947b: and byte ptr [edi], cl; test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001a775c: and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000ba0c7: and byte ptr [edi], cl; test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001af33f: and byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x001aed65: and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0010b558: and byte ptr [edx + 0x1c], 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000e09c2: and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x001760bb: and byte ptr [edx + 0x50], dl; call edi; 
0x00179b1d: and byte ptr [edx + 0x56], dl; call dword ptr [eax]; 
0x001600ef: and byte ptr [edx - 0x3b7d0000], 0x18; pop ebx; ret; 
0x00196679: and byte ptr [edx], 0x3a; cli; jmp dword ptr [esi - 0x70]; 
0x00093d3d: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00092dfb: and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0003dd57: and byte ptr [edx], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c4f94: and byte ptr [edx], ch; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4e72: and byte ptr [edx], ch; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000b9b22: and byte ptr [edx], dl; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016c7b0: and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x001348d0: and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001a3f9c: and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x000c1fa2: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x001a8802: and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010eb67: and byte ptr [esi + ebp - 0x7d], dh; ret; 
0x000a74ff: and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa752d; call eax; 
0x0017a08d: and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0003f16d: and byte ptr [esi - 7], dh; call dword ptr [eax - 0x18]; 
0x0008f202: and byte ptr [esi], ch; lea esi, [esi]; ret; 
0x00025516: and byte ptr [esi], dl; add byte ptr [0x2178fb], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00123a35: and byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x001a94c6: and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x000d9f12: and ch, 0xf; je 0xd9f30; add eax, 2; ret; 
0x000d4cfc: and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000aaa7c: and ch, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000a92bc: and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca5c: and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000aca9c: and ch, 2; lea edx, [edx - 0x17a854]; cmove eax, edx; ret; 
0x000a9d6c: and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000a9dac: and ch, 2; lea edx, [edx - 0x17a954]; cmove eax, edx; ret; 
0x000acb1c: and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x0008ef7b: and ch, ah; call dword ptr [eax - 0x18]; 
0x0008d9ea: and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x0003f832: and ch, byte ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x000fb5ad: and ch, dh; bnd jge 0xfb5e0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x000d9efb: and cl, 0xf; je 0xd9f20; ret; 
0x0004a8dd: and cl, bl; test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x001968d7: and cl, byte ptr [0xc381ffff]; add eax, 0x3000432; sbb al, 0x8b; jmp ebx; 
0x000fdc46: and cl, byte ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x00106c31: and cl, byte ptr [eax - 7]; call dword ptr [eax - 0x77]; 
0x0013c5a5: and cl, byte ptr [ebp - 0x655b37e]; call dword ptr [eax - 0x73]; 
0x0010e928: and cl, byte ptr [ebx - 0x143976f1]; mov ecx, 0xa218838d; stc; call dword ptr [eax - 0x73]; 
0x0009a1f3: and cl, byte ptr [ebx - 0x76ebdb84]; ret 0xc389; 
0x00083096: and cl, byte ptr [ebx - 0x7972478b]; cmp al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x000606ba: and cl, byte ptr [ebx - 3]; call dword ptr [eax - 0x73]; 
0x0008dd0d: and cl, byte ptr [edi]; mov dh, 2; pop ebx; pop esi; ret; 
0x000cb829: and cl, ch; ret 3; 
0x000a0eea: and dh, byte ptr [ecx + edi*8]; jmp dword ptr [esi - 0x70]; 
0x00114b33: and dh, dh; ret 0x7549; 
0x00060092: and dh, dh; ret 0xf50; 
0x001998b9: and dl, 7; cli; jmp dword ptr [esi - 0x70]; 
0x0011feec: and dl, dh; idiv bh; add esp, 0x2c; ret; 
0x00187701: and dword ptr [eax + 0x65000000], 0x158b; add byte ptr [eax], al; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001649e4: and dword ptr [eax + 0x680000a4], 0; add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x000911a4: and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00091065: and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x00197904: and dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005b5b0: and dword ptr [eax - 0x73], edx; xchg byte ptr [eax + 0x79], ch; stc; call dword ptr [eax - 0x18]; 
0x0013c56b: and dword ptr [eax - 0x73], edx; xchg edi, ecx; push edi; stc; call dword ptr [eax - 0x18]; 
0x0013339e: and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000336d1: and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0003f16c: and dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x00098400: and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x00098450: and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x0015a5f1: and dword ptr [eax], 0xffffffb4; stc; call dword ptr [eax - 0x18]; 
0x0015a686: and dword ptr [eax], 0xffffffb5; stc; call dword ptr [eax - 0x18]; 
0x0017389e: and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x00087ee8: and dword ptr [eax], 0xffffffcf; ret; 
0x00114571: and dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001a148e: and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0006b1cf: and dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x0013756a: and dword ptr [eax], eax; add byte ptr [ebx - 0xaff33c], al; jne 0x137518; push ebx; call dword ptr [esi + 0x14]; 
0x00024f7c: and dword ptr [eax], eax; lea eax, [eax - 0x6908c]; ret; 
0x00024f9c: and dword ptr [eax], eax; lea eax, [eax - 0x69094]; ret; 
0x0002606c: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0002608c: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002551c: and dword ptr [eax], eax; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024b0c: and dword ptr [eax], eax; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x000fd133: and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x00095ca1: and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0004030e: and dword ptr [ebp - 0x6d3237b], ecx; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x001659dc: and dword ptr [ebp - 0x72b00000], 0xffffff83; in al, dx; dec ebx; int1; call dword ptr [eax - 0x73]; 
0x0008fccc: and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x00060804: and dword ptr [ebx + 0x32], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x00186226: and dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0017a71f: and dword ptr [ebx + 0x5e5b10c4], eax; pop edi; ret; 
0x000827e3: and dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x0013dd01: and dword ptr [ebx + 0x5e5b20c4], eax; pop edi; ret; 
0x000def87: and dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x0009d346: and dword ptr [ebx + 0x5e], ebx; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0002f7b0: and dword ptr [ebx - 0x17acf314], eax; push esi; push ecx; adc eax, 0x24348900; call ebx; 
0x0013c536: and dword ptr [ebx - 0x2776df3c], eax; pop ebx; pop esi; pop edi; ret 4; 
0x00066d81: and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x00081bff: and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x001631c3: and dword ptr [ecx + 0x61], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00141277: and dword ptr [ecx - 7], ebx; call dword ptr [eax - 0x73]; 
0x00024b0b: and dword ptr [ecx], 0; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x00154a8e: and dword ptr [ecx], esi; leave; cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x000dd907: and dword ptr [edi + 0x29], 0xfffffff9; call dword ptr [eax + 0x56]; 
0x001253a7: and dword ptr [edi + 0x29], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0012565c: and dword ptr [edi + 0x29], 0xfffffff9; call dword ptr [eax - 0x73]; adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x0013b24b: and dword ptr [edi + 0x29], 0xfffffff9; jmp dword ptr [ebp - 0x75]; 
0x00060852: and dword ptr [edi + 0x32], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x001926c1: and dword ptr [edi + 4], ebp; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008e31a: and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000a6dff: and dword ptr [edi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x00042f66: and dword ptr [edi], ecx; mov ebp, 0x1ff283d1; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x001764c3: and dword ptr [edx + 0x65], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x000911d7: and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x000911d0: and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x001876c0: and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003d4a8: and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0015175e: and dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0003f831: and dword ptr [edx], 0x2f; stc; call dword ptr [eax - 0x18]; 
0x000fdc45: and dword ptr [edx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00162569: and dword ptr [edx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x001a70ab: and dword ptr [edx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0012625f: and dword ptr [esi], 0x50; stc; call dword ptr [eax + 0x55]; 
0x00081ba5: and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x00090319: and dword ptr [esp + ecx - 0x7d], esi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00034866: and eax, 0x1000; ret; 
0x0006061b: and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00034836: and eax, 0x100; ret; 
0x00121aab: and eax, 0x100f; ret; 
0x001a7fa0: and eax, 0x1f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fd0: and eax, 0x1ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a8000: and eax, 0x1fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00034806: and eax, 0x2000; ret; 
0x00034746: and eax, 0x200; ret; 
0x0008fb6c: and eax, 0x39; cmp eax, 8; je 0x8fb78; add esp, 0xc; ret; 
0x0009a9a1: and eax, 0x39; cmp eax, 8; je 0x9a9aa; ret; 
0x001b09ee: and eax, 0x3d660c00; add byte ptr [edi + ecx], al; test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x001a7fb0: and eax, 0x3f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fe0: and eax, 0x3ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a8010: and eax, 0x3fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000347a6: and eax, 0x4000; ret; 
0x000346b6: and eax, 0x400; ret; 
0x0008be92: and eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x00154f62: and eax, 0x5b08c483; ret; 
0x0003d8ef: and eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00121f13: and eax, 0x5b30c483; pop esi; pop edi; ret; 
0x00156834: and eax, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x001a7fc0: and eax, 0x7f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000349a8: and eax, 0x7f; ret; 
0x001a7ff0: and eax, 0x7ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a8020: and eax, 0x7fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00122ad5: and eax, 0x80000000; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x0003bbe8: and eax, 0x80000000; ret; 
0x00034776: and eax, 0x8000; ret; 
0x00034716: and eax, 0x800; ret; 
0x0008715a: and eax, 0x804; ret; 
0x000bafe8: and eax, 0x81000cc6; sal dword ptr [esi + edi*8], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001963d4: and eax, 0x81ffff12; ret; 
0x00194bd4: and eax, 0x81ffff2a; ret; 
0x00192bd4: and eax, 0x81ffff4a; ret; 
0x000d2f52: and eax, 0x83240401; ret; 
0x00145c35: and eax, 0x89000001; ret 0xe283; 
0x0019505e: and eax, 0xc381ffff; inc dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017c6fd: and eax, 0xc4830000; adc byte ptr [ecx], bh; ret; 
0x00149313: and eax, 0xc483fff3; adc byte ptr [ebx - 0x6272f314], al; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00090bc5: and eax, 0xc483fff9; adc byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000983d6: and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000620f1: and eax, 0xe1878d50; xor bh, cl; call dword ptr [eax - 0x18]; 
0x0010f5b5: and eax, 0xe8831f8b; add dword ptr [ecx], eax; ret; 
0x000b88c7: and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b43d7: and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0009830e: and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001aa8ef: and eax, 0xf0f0f0f; add eax, edx; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001aa87d: and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x001a7eba: and eax, 0xf; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7eeb: and eax, 0xff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f22: and eax, 0xfff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000649b8: and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x001a7f5b: and eax, 0xffff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00121b10: and eax, 0xffffeff0; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0012789e: and eax, 0xfffff000; or eax, edx; ret; 
0x0013f9c8: and eax, 0xffffff; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0013f9a0: and eax, 0xffffff; ret; 
0x0012ba67: and eax, 0xffffffa5; stc; call dword ptr [eax - 0x73]; 
0x00084b20: and eax, 0xffffffcf; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x00122b5d: and eax, 0xfffffff0; add eax, 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000a0a6a: and eax, 0xfffffff0; sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0013f3ab: and eax, 0xfffffff8; add eax, 0xc; ret; 
0x0016e11c: and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016e214: and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0009236d: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00091cad: and eax, 0xfffffffc; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00092bfa: and eax, 0xfffffffd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00092c23: and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00084bce: and eax, 1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a6ad4: and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001aa0c9: and eax, 1; je 0x1aa064; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa18d: and eax, 1; je 0x1aa170; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a7f70: and eax, 1; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0008f3bf: and eax, 1; mov dword ptr [edx + 0x1b08], eax; ret; 
0x0008f243: and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008fb0b: and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x00090d3f: and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00139752: and eax, 1; pop ebx; ret; 
0x000fbfb9: and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x00034916: and eax, 1; ret; 
0x0008716e: and eax, 1; xor eax, 1; ret; 
0x000346e6: and eax, 2; ret; 
0x00053825: and eax, 2; sub eax, 1; ret; 
0x001a7f80: and eax, 3; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000982b1: and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0012d553: and eax, 3; ret; 
0x000347d6: and eax, 4; ret; 
0x001a7f90: and eax, 7; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00034686: and eax, 8; ret; 
0x0003cd5c: and eax, dword ptr [0x2cc48300]; ret; 
0x0019770b: and eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016e80a: and eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x00185104: and eax, dword ptr [eax]; add byte ptr [ebp + 0x432b0443], cl; add al, 0x83; ret; 
0x0016e874: and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0016e87a: and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x001a123e: and eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00031fec: and eax, dword ptr [eax]; add byte ptr [ebx - 0x1d36b], cl; dec dword ptr [ebp - 0x68cab7e]; call dword ptr [eax - 0x73]; 
0x000e954c: and eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001224b5: and eax, dword ptr [ebx + 0x5e5b54c4]; ret; 
0x0012d250: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d250: and eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0003d4fc: and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x00034b8f: and eax, dword ptr [esp + 8]; ret; 
0x0003bd82: and eax, ecx; ret; 
0x000c191f: and eax, edx; je 0xc1a00; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0003b310: and eax, edx; ret; 
0x001a8c76: and eax, edx; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x0016e285: and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x000c6a87: and ebp, dword ptr [edx]; stc; jmp dword ptr [ebp - 0x75]; 
0x00081c00: and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x001693f8: and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00093d32: and ebx, 0x20; jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00041c79: and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00132bcd: and ebx, 0x400; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00130254: and ebx, 0xfffffffc; add eax, ebx; pop ebx; pop esi; ret; 
0x0012af75: and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x000a9b39: and ebx, 1; lea edx, [edx - 0xa2564]; cmovne eax, edx; pop ebx; ret; 
0x0013aed9: and ebx, 1; lea edx, [edx - 0xa2574]; cmovne eax, edx; pop ebx; ret; 
0x000a9b89: and ebx, 1; lea edx, [edx - 0xa3554]; cmovne eax, edx; pop ebx; ret; 
0x0013af29: and ebx, 1; lea edx, [edx - 0xa3564]; cmovne eax, edx; pop ebx; ret; 
0x000a9309: and ebx, 1; lea edx, [edx - 0xa4534]; cmovne eax, edx; pop ebx; ret; 
0x0013ae89: and ebx, 1; lea edx, [edx - 0xa4544]; cmovne eax, edx; pop ebx; ret; 
0x00132c6d: and ebx, 1; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00132d0d: and ebx, 2; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013302d: and ebx, 4; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00132b2d: and ebx, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00165889: and ebx, dword ptr [ebp - 3]; jmp dword ptr [esi - 0x70]; 
0x001a9c1c: and ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x0002e3e9: and ebx, dword ptr [edi]; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00161d23: and ecx, 0x60; stc; call dword ptr [eax - 0x18]; 
0x0012ec2a: and ecx, 0x62; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00095561: and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00096be4: and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013f988: and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013fc97: and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x00121b77: and ecx, 0xffffeff0; or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00152e40: and ecx, dword ptr [ebx + 0x39302444]; ret 0x840f; 
0x0003830a: and ecx, dword ptr [ebx - 0x1cb43]; dec dword ptr [ebp - 0x204cf379]; call dword ptr [eax + 0x6a]; 
0x0015d5ee: and ecx, dword ptr [ebx - 0x72efdb8c]; xchg byte ptr [ebp + esi*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x00113085: and ecx, dword ptr [ebx - 0x72f3db84]; xchg dword ptr [eax - 0x5e], eax; stc; call dword ptr [eax - 0x73]; 
0x0005b57e: and ecx, dword ptr [ecx + 0x5e5b044a]; pop edi; ret; 
0x00148ea8: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x00149178: and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x0018fe79: and ecx, ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0003a129: and edi, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x0019271a: and edi, 0xf; je 0x192730; call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019471a: and edi, 0xf; je 0x194730; call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019670c: and edi, 0xf; je 0x196730; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019894f: and edi, 0xf; je 0x198970; call 0x1875fd; add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019992f: and edi, 0xf; je 0x199950; call 0x1875fd; add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019a92f: and edi, 0xf; je 0x19a950; call 0x1875fd; add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000e78fa: and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x0013f506: and edi, dword ptr [ecx]; ret 0x4572; 
0x0006d595: and edi, dword ptr [ecx]; ret 0x850f; 
0x000c6c3c: and edi, dword ptr [ecx]; ret; 
0x00173fa6: and edi, ecx; call dword ptr [eax + 0x52]; 
0x0019544e: and edi, edi; inc dword ptr [ecx + 0x4440fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195265: and edi, edi; inc dword ptr [ecx + 0x445f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008a61c: and edi, edi; je 0x8a644; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0003b0bd: and edx, 0x7fff0000; sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x0003c43d: and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x00159f7e: and edx, 0xf; mov eax, edx; ret; 
0x00127898: and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0008c69c: and edx, 0xffffffef; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x000a0ceb: and edx, 0xfffffff0; cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x0016e119: and edx, 0xfffffffc; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0009869d: and edx, 2; je 0x986b0; xor eax, eax; add esp, 0xc; ret; 
0x00079ab0: and edx, dword ptr [eax - 0x73]; cmp byte ptr [ecx + edi*2 - 0x17af0007], 0x52; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00187661: and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x000c2056: and edx, ecx; test edx, edx; je 0xc2030; bsr ecx, edx; add eax, ecx; ret; 
0x000940a1: and esi, 0x40; jne 0x938cc; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000dffeb: and esi, 0x81660404; inc byte ptr [eax]; add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x000307c8: and esi, dword ptr [ecx]; div dh; ret; 
0x000306cc: and esi, dword ptr [ecx]; push esi; ret; 
0x00047184: and esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00047198: and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000471a5: and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x0015157e: and esp, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x0012c93f: and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0013d643: and esp, dword ptr [esi - 0x7d]; jns 0x13d64a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x0017942b: and esp, edi; jmp dword ptr [esi - 0x70]; 
0x0005df8f: arpl bp, di; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x0005dfb4: arpl bp, di; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x001a5613: arpl bx, cx; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x00060668: arpl cx, di; call dword ptr [eax + 0x68]; 
0x00169ff4: arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016bcf4: arpl cx, di; call dword ptr [eax + 0x6a]; pop es; call 0x153e50; add esp, 0x1c; ret; 
0x0016aa14: arpl cx, di; call dword ptr [eax + 0x6a]; push es; call 0x153e50; add esp, 0x1c; ret; 
0x000248fb: arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016a0f4: arpl cx, di; call dword ptr [eax - 0x18]; ret; 
0x001693ed: arpl cx, di; call dword ptr [eax - 0x18]; sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x001708e6: arpl cx, di; call dword ptr [eax - 1]; 
0x0016a6c8: arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x0017e5a6: arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x000e997b: arpl dx, di; jmp dword ptr [esi - 0x70]; 
0x00154db2: arpl si, ax; sub dword ptr [eax + 0x6f], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00154d2a: arpl si, ax; sub dword ptr [eax + 0x7f], -0x39; sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x0019326b: arpl word ptr [eax + eax], ax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f096e: arpl word ptr [eax], si; stc; call dword ptr [eax - 0x77]; 
0x0014158f: arpl word ptr [eax], si; stc; call dword ptr [edx - 0x46]; 
0x001a3ec4: arpl word ptr [ebx], ax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a1a08: arpl word ptr [ecx], ax; add byte ptr [eax], al; mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000405c7: arpl word ptr [ecx], ax; add byte ptr [eax], al; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00146e4c: arpl word ptr [ecx], di; ret; 
0x0005dffc: arpl word ptr [ecx], si; stc; call dword ptr [eax - 0x18]; 
0x000d9cac: arpl word ptr [edi + 0x5e], bx; ret; 
0x00060805: arpl word ptr [edx], si; stc; call dword ptr [eax + 0x6a]; 
0x0010ba29: arpl word ptr [esi + 0x768dfff9], di; add byte ptr [ecx], dh; rol byte ptr [edi + 0x3fec87], 0; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0015f0a8: bnd call dword ptr [eax - 0x18]; 
0x00160117: bnd call dword ptr [eax - 0x73]; 
0x00162eaa: bnd call dword ptr [eax - 1]; 
0x0019e874: bnd call dword ptr [ebx - 0x18]; 
0x0010e46e: bnd je 0x10e480; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0009da9d: bnd je 0x9dab3; xor eax, eax; pop ebx; ret; 
0x000ac2fc: bnd je 0xac2f0; pop ebx; pop esi; ret; 
0x000fb5af: bnd jge 0xfb5e0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x00154019: bnd jmp dword ptr [ebp - 0x75]; 
0x0010e444: bnd jmp dword ptr [esi - 0x70]; 
0x000ba03a: bound eax, qword ptr [0x5e5f0000]; pop ebx; ret; 
0x001a96e3: bound eax, qword ptr [eax + 0x74000f7a]; pop esp; mov eax, 0x10; pop edi; ret; 
0x00193304: bound eax, qword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017b54a: bound eax, qword ptr [eax]; cld; jmp dword ptr [esi - 0x70]; 
0x001602d6: bound eax, qword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x000e8e95: bound eax, qword ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x001a3fd3: bound eax, qword ptr [ebx]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014e273: bound eax, qword ptr [ebx]; fisttp word ptr [ecx + 0x247c8bfa]; adc byte ptr [ebp - 0x87bf001], al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x001a8a2a: bound eax, qword ptr [ecx]; add byte ptr [eax], al; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x000e09c3: bound eax, qword ptr [esi - 7]; call dword ptr [eax + 0x53]; 
0x0014cfa4: bound ebp, qword ptr [ecx]; ret 0x8966; 
0x0010b559: bound ebx, qword ptr [ecx + edi*8]; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00070e5a: bound ecx, qword ptr [0x4c890000]; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000911d8: bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x000981e5: bound edx, qword ptr [eax - 0x73]; xchg byte ptr [edi + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x00064ff3: bound esp, qword ptr [eax]; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000c504a: bound esp, qword ptr [ebp + 7]; add byte ptr [ebx - 0x72e3dbac], cl; or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x001764c4: bound esp, qword ptr [ebp - 7]; call dword ptr [eax + 0x6a]; 
0x000a9174: bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x000c1d00: bsf eax, eax; add eax, edi; pop edi; ret; 
0x000c22ea: bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000c2450: bsf eax, eax; add eax, edx; ret; 
0x000c1d10: bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c1d20: bsf eax, eax; lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1cf0: bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c2460: bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c2470: bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c2440: bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000c1c3c: bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c2437: bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x00043352: bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000a91ac: bsf eax, eax; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000c1d30: bsf eax, eax; sub edx, eax; jbe 0xc1d70; add eax, edi; pop edi; ret; 
0x000c1d43: bsf eax, eax; sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d53: bsf eax, eax; sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1d63: bsf eax, eax; sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004372f: bsf eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000437cf: bsf eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004379f: bsf eax, ecx; test ecx, ecx; je 0x437b0; pop ebx; ret; 
0x000a91c0: bsf eax, edx; mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x0004374d: bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x000c22a1: bsf ecx, ecx; add eax, ecx; ret; 
0x00043869: bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000c1a59: bsf ecx, ecx; sub edx, ecx; jbe 0xc1a90; add eax, ecx; ret; 
0x0004336b: bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x000b07e3: bsf edx, edx; add eax, edx; add eax, 0x10; pop edi; pop esi; ret; 
0x000b07f0: bsf edx, edx; add eax, edx; add eax, 0x20; pop edi; pop esi; ret; 
0x000b07fd: bsf edx, edx; add eax, edx; add eax, 0x30; pop edi; pop esi; ret; 
0x000b07d9: bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x000c1030: bsf edx, edx; call 0x187611; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ff6: bsf edx, edx; call 0x187611; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fd2: bsf edx, edx; call 0x187611; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb4: bsf edx, edx; call 0x187611; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd30: bsf edx, edx; call 0x187611; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf6: bsf edx, edx; call 0x187611; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb009: bsf edx, edx; call 0x187611; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe4: bsf edx, edx; call 0x187611; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99d9: bsf edx, edx; call 0x187611; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b4: bsf edx, edx; call 0x187611; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00042efd: bsr eax, eax; add eax, 1; ret; 
0x000c1f14: bsr eax, eax; add eax, ecx; ret; 
0x000c18a5: bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c19f3: bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x000c1fc0: bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000c1fd0: bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fe0: bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000c2020: bsr eax, eax; sub edx, 0x10; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x30]; ret; 
0x000c2010: bsr eax, eax; sub edx, 0x20; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x20]; ret; 
0x000c2000: bsr eax, eax; sub edx, 0x30; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1ff0: bsr eax, eax; sub edx, 0x40; add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x000431cc: bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00043291: bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043647: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000431b1: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00043597: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00043252: bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000436f0: bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x00043217: bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x000435c2: bsr eax, edx; xor eax, 0x1f; ret; 
0x000436dc: bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00042e4c: bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042d2d: bsr ecx, ecx; shl eax, cl; ret; 
0x00043610: bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042e36: bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x000c205c: bsr ecx, edx; add eax, ecx; ret; 
0x000432de: bsr ecx, edx; xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000c20b4: bsr edi, edi; add eax, edi; pop edi; ret; 
0x000c20f1: bsr edi, edi; add eax, edi; xor ch, ch; add eax, ecx; pop edi; ret; 
0x000c2100: bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x00042f67: bsr edx, ecx; xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0013f9cf: bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00174c7d: bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0013ced8: bswap eax; ret; 
0x0016ef93: bswap edx; mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x00133414: bt eax, ebx; setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x00058a3b: call 0x10058a09; xchg ebp, eax; ret 0xb60f; 
0x000d7bc0: call 0x100d7b8e; xchg ebp, eax; ret 0x9d8b; 
0x001442c8: call 0x1078b6; jmp dword ptr [esi - 0x70]; 
0x0010b5a2: call 0x10b2e0; test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009cc43: call 0x10b5c0; add esp, 0x1c; ret; 
0x0009be37: call 0x10bf90; mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x0010c42b: call 0x10c3f0; add esp, 0x1c; ret; 
0x0010c881: call 0x10dbb0; add esp, 0x2c; ret; 
0x0010e525: call 0x10e630; add esp, 0x1c; ret; 
0x0010e8b5: call 0x10e750; add esp, 0x1c; ret; 
0x0010e4ff: call 0x10e8a0; add esp, 0x1c; ret; 
0x0003bde1: call 0x10ed7f05; or eax, ecx; ret; 
0x000e40c5: call 0x112244d; rol byte ptr [ecx], 1; ret; 
0x0016d8c5: call 0x114650; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011ec86: call 0x114c30; add esp, 0x1c; ret; 
0x0018e07d: call 0x114e90; add esp, 0x1c; sar eax, 0x1f; ret; 
0x00115093: call 0x1150a0; add esp, 0x1c; ret; 
0x001153fc: call 0x115530; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011f142: call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011545b: call 0x115710; add esp, 0x10; add esp, 0xc; ret; 
0x0011f166: call 0x115710; add esp, 0x1c; ret; 
0x0008a6c6: call 0x11f090; add esp, 0x18; pop ebx; ret; 
0x0011f277: call 0x11f2b0; add esp, 0x1c; ret; 
0x0012e29e: call 0x11f2e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f29b: call 0x11f2e0; add esp, 0x2c; ret; 
0x0005adb8: call 0x11f360; add esp, 0x1c; ret; 
0x00114784: call 0x11f3b0; add esp, 0x1c; ret; 
0x0011e103: call 0x120d30; add esp, 0x10; add esp, 0xc; ret; 
0x00024f5f: call 0x120f60; add esp, 0x1c; ret; 
0x001150f1: call 0x121110; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00122976: call 0x122880; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00127e57: call 0x1229c0; add esp, 0x10; test eax, eax; jne 0x127e1c; add esp, 0xc; ret; 
0x00122eef: call 0x123230; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0012357d: call 0x123420; add esp, 0x18; pop ebx; ret; 
0x0002449f: call 0x1234a0; add esp, 0x18; pop ebx; ret; 
0x001237f9: call 0x123700; add esp, 0x28; pop ebx; ret; 
0x00123991: call 0x123810; add esp, 0x28; pop ebx; ret; 
0x0016cd48: call 0x124450; mov dword ptr [ebx + 0xa68c], eax; add esp, 8; pop ebx; ret; 
0x00124f67: call 0x124ca0; test eax, eax; je 0x124f78; add esp, 0xc; ret; 
0x00124fb7: call 0x124ca0; test eax, eax; je 0x124fc8; add esp, 0xc; ret; 
0x00124f81: call 0x124ed0; mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x00125b43: call 0x125780; mov dword ptr [ebx + 0x4600], eax; add esp, 8; pop ebx; ret; 
0x00125c4c: call 0x125ca0; add esp, 0x1c; ret; 
0x00125c78: call 0x125d90; add esp, 0x1c; ret; 
0x00122049: call 0x1274c0; add esp, 0x10; add esp, 0xc; ret; 
0x00121fa5: call 0x1274c0; add esp, 0x1c; ret; 
0x00127e2a: call 0x128570; add esp, 0x10; add esp, 0xc; ret; 
0x0002ffd1: call 0x128710; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a0e7b: call 0x128710; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00128e73: call 0x1291b0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0012a776: call 0x129ff0; add esp, 0x1c; ret; 
0x00030332: call 0x12b5e0; add esp, 0x1c; ret; 
0x0012bf1d: call 0x12c160; add esp, 0x1c; ret; 
0x0012c749: call 0x12c6a0; add esp, 0x2c; ret; 
0x0012e1dd: call 0x12e1f0; add esp, 0x1c; ret; 
0x000a0f27: call 0x12ee30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00130855: call 0x130df0; add esp, 0x1c; ret; 
0x00132a6a: call 0x131e60; pop edx; pop ecx; pop eax; ret; 
0x00132390: call 0x132250; add esp, 4; ret; 
0x00134a7e: call 0x134540; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00136a1d: call 0x1367f0; add esp, 0x28; pop ebx; ret; 
0x00139702: call 0x137e50; add esp, 0x1c; ret; 
0x00138012: call 0x137f00; add esp, 0x18; pop ebx; ret; 
0x00135d0c: call 0x1396a0; add esp, 0xc; push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00135ae0: call 0x1396a0; add esp, 0xc; push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0013bc75: call 0x13a0a0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00122f3b: call 0x13b570; add esp, 0x24; mov eax, esi; pop ebx; pop esi; ret; 
0x0013cb15: call 0x13b570; add esp, 0x34; mov eax, esi; pop ebx; pop esi; ret; 
0x0016e70b: call 0x13b5b0; endbr32; mov eax, 2; ret; 
0x0017a97b: call 0x13b5b0; endbr32; xor eax, eax; ret; 
0x0016c56a: call 0x13b5b0; nop; endbr32; ret; 
0x00092b6a: call 0x13b5b0; nop; endbr32; xor eax, eax; ret; 
0x0010c599: call 0x13b5b0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00114bda: call 0x13b5b0; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00172bc7: call 0x13b5b0; nop; nop; endbr32; ret; 
0x0009a927: call 0x13b5b0; nop; nop; endbr32; xor eax, eax; ret; 
0x000efed7: call 0x13b5b0; nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x00166026: call 0x13b5b0; nop; nop; nop; endbr32; ret; 
0x0013c77c: call 0x13c790; add esp, 0x1c; ret; 
0x0013cabc: call 0x13cad0; add esp, 0x1c; ret; 
0x0013edc2: call 0x13dd30; cmp eax, -0xb; je 0x13edc0; add esp, 8; pop ebx; ret; 
0x001412ed: call 0x140620; add esp, 0x1c; ret; 
0x001412d3: call 0x1407d0; add esp, 0x2c; ret; 
0x001413f9: call 0x141300; add esp, 0x2c; ret; 
0x00141ba1: call 0x1415d0; add esp, 0x2c; ret; 
0x00145839: call 0x1450e0; add esp, 0x3c; ret; 
0x001465de: call 0x1463e0; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x001483dd: call 0x148300; add esp, 0x1c; ret; 
0x0014abb7: call 0x14aaa0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016740a: call 0x153e50; add esp, 0x1c; ret; 
0x00167429: call 0x153f30; add esp, 0x1c; ret; 
0x00190657: call 0x1558c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0013ee33: call 0x1567639; mov eax, 2; ret; 
0x001906c7: call 0x1567d0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0019085f: call 0x15f2b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00160148: call 0x1609d0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0019091f: call 0x161d90; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00190987: call 0x162500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001909f7: call 0x163230; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190b27: call 0x1648c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190b57: call 0x164c00; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190c07: call 0x165b20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00169045: call 0x168e70; add esp, 0x3c; ret; 
0x00169adc: call 0x169880; add esp, 0x2c; ret; 
0x0016c52a: call 0x16de30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00172351: call 0x16f7e0; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x00175919: call 0x175620; add esp, 0x3c; ret; 
0x001766da: call 0x176420; add esp, 0x10; add esp, 0xc; ret; 
0x001766bb: call 0x176520; add esp, 0x10; add esp, 0xc; ret; 
0x00176abb: call 0x1768f0; add esp, 0x2c; ret; 
0x00178b75: call 0x1788a0; add esp, 0x1c; ret; 
0x0016de91: call 0x1799b0; add esp, 0x1c; ret; 
0x0016de66: call 0x179a80; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00179c19: call 0x179a80; add esp, 0x1c; ret; 
0x00179e31: call 0x179cc0; test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0008e156: call 0x1827a0; add esp, 0x1c; ret; 
0x001833c6: call 0x1831d0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008ecc7: call 0x184820; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0008ebc4: call 0x1848e0; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00157922: call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x00157ab7: call 0x184910; add esp, 0x10; mov eax, ebx; call eax; 
0x00160f47: call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x00160bb1: call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d98: call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x0002703b: call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x000260d8: call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x0002624b: call 0x184910; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268f5: call 0x184910; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0002f7b5: call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x00160253: call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x000409b7: call 0x184c8d49; add byte ptr [eax], al; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00186323: call 0x1861c0; add esp, 0x28; pop ebx; ret; 
0x0018734b: call 0x1871c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00187387: call 0x187230; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018732f: call 0x187240; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001a599b: call 0x1875fd; add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a58d6: call 0x1875fd; add ebx, 0x34ac9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fcb: call 0x1875fd; add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3ebc: call 0x1875fd; add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8ed: call 0x1875fd; add ebx, 0x3e8ee; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b6e9: call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019abf4: call 0x1875fd; add ebx, 0x3f4e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aaea: call 0x1875fd; add ebx, 0x3f5f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a9e3: call 0x1875fd; add ebx, 0x3f6f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a8e7: call 0x1875fd; add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d9: call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a934: call 0x1875fd; add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00199bf4: call 0x1875fd; add ebx, 0x40327; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199aea: call 0x1875fd; add ebx, 0x40431; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999e3: call 0x1875fd; add ebx, 0x40538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998da: call 0x1875fd; add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199709: call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199934: call 0x1875fd; add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001998ea: call 0x1875fd; add ebx, 0x40731; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c14: call 0x1875fd; add ebx, 0x41147; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198b0a: call 0x1875fd; add ebx, 0x41251; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198a03: call 0x1875fd; add ebx, 0x41358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988fa: call 0x1875fd; add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001987e7: call 0x1875fd; add ebx, 0x414b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198954: call 0x1875fd; add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019890a: call 0x1875fd; add ebx, 0x41551; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198533: call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e9a: call 0x1875fd; add ebx, 0x41c41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e7c: call 0x1875fd; add ebx, 0x41c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197de3: call 0x1875fd; add ebx, 0x41cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d1c: call 0x1875fd; add ebx, 0x41dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c83: call 0x1875fd; add ebx, 0x41e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bbc: call 0x1875fd; add ebx, 0x41f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b23: call 0x1875fd; add ebx, 0x41fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a5c: call 0x1875fd; add ebx, 0x4207f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979c3: call 0x1875fd; add ebx, 0x42118; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001978fc: call 0x1875fd; add ebx, 0x421df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197863: call 0x1875fd; add ebx, 0x42278; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019779c: call 0x1875fd; add ebx, 0x4233f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197703: call 0x1875fd; add ebx, 0x423d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019763c: call 0x1875fd; add ebx, 0x4249f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975a3: call 0x1875fd; add ebx, 0x42538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001974dc: call 0x1875fd; add ebx, 0x425ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197443: call 0x1875fd; add ebx, 0x42698; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019737c: call 0x1875fd; add ebx, 0x4275f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972e3: call 0x1875fd; add ebx, 0x427f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019721c: call 0x1875fd; add ebx, 0x428bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197183: call 0x1875fd; add ebx, 0x42958; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001970bc: call 0x1875fd; add ebx, 0x42a1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197023: call 0x1875fd; add ebx, 0x42ab8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f5c: call 0x1875fd; add ebx, 0x42b7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ec3: call 0x1875fd; add ebx, 0x42c18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196dfc: call 0x1875fd; add ebx, 0x42cdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d63: call 0x1875fd; add ebx, 0x42d78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c9c: call 0x1875fd; add ebx, 0x42e3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c03: call 0x1875fd; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196b3c: call 0x1875fd; add ebx, 0x42f9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196aa3: call 0x1875fd; add ebx, 0x43038; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969db: call 0x1875fd; add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968d6: call 0x1875fd; add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001967d0: call 0x1875fd; add ebx, 0x433cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966c7: call 0x1875fd; add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963d3: call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196711: call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00195d9a: call 0x1875fd; add ebx, 0x43ac1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d7c: call 0x1875fd; add ebx, 0x43adf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ce3: call 0x1875fd; add ebx, 0x43b78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c2c: call 0x1875fd; add ebx, 0x43c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b93: call 0x1875fd; add ebx, 0x43cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195adc: call 0x1875fd; add ebx, 0x43d7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a43: call 0x1875fd; add ebx, 0x43e18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019598c: call 0x1875fd; add ebx, 0x43ecf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001958f3: call 0x1875fd; add ebx, 0x43f68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019583c: call 0x1875fd; add ebx, 0x4401f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957a3: call 0x1875fd; add ebx, 0x440b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001956ec: call 0x1875fd; add ebx, 0x4416f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195653: call 0x1875fd; add ebx, 0x44208; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019559c: call 0x1875fd; add ebx, 0x442bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195503: call 0x1875fd; add ebx, 0x44358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019544c: call 0x1875fd; add ebx, 0x4440f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953b3: call 0x1875fd; add ebx, 0x444a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952fc: call 0x1875fd; add ebx, 0x4455f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195263: call 0x1875fd; add ebx, 0x445f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951ac: call 0x1875fd; add ebx, 0x446af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195113: call 0x1875fd; add ebx, 0x44748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019505c: call 0x1875fd; add ebx, 0x447ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194fc3: call 0x1875fd; add ebx, 0x44898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f0c: call 0x1875fd; add ebx, 0x4494f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e73: call 0x1875fd; add ebx, 0x449e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194dbc: call 0x1875fd; add ebx, 0x44a9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d23: call 0x1875fd; add ebx, 0x44b38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c6c: call 0x1875fd; add ebx, 0x44bef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194bd3: call 0x1875fd; add ebx, 0x44c88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194b1c: call 0x1875fd; add ebx, 0x44d3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a83: call 0x1875fd; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949cb: call 0x1875fd; add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948c6: call 0x1875fd; add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001947c0: call 0x1875fd; add ebx, 0x4515b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946ba: call 0x1875fd; add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194433: call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019471f: call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001946d0: call 0x1875fd; add ebx, 0x4534b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d9a: call 0x1875fd; add ebx, 0x45841; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d7c: call 0x1875fd; add ebx, 0x4585f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ce3: call 0x1875fd; add ebx, 0x458f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c2c: call 0x1875fd; add ebx, 0x459af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b93: call 0x1875fd; add ebx, 0x45a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193adc: call 0x1875fd; add ebx, 0x45aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a43: call 0x1875fd; add ebx, 0x45b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019398c: call 0x1875fd; add ebx, 0x45c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938f3: call 0x1875fd; add ebx, 0x45ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019383c: call 0x1875fd; add ebx, 0x45d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001937a3: call 0x1875fd; add ebx, 0x45e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001936ec: call 0x1875fd; add ebx, 0x45eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193653: call 0x1875fd; add ebx, 0x45f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019359c: call 0x1875fd; add ebx, 0x4603f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193503: call 0x1875fd; add ebx, 0x460d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019344c: call 0x1875fd; add ebx, 0x4618f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001933b3: call 0x1875fd; add ebx, 0x46228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001932fc: call 0x1875fd; add ebx, 0x462df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193263: call 0x1875fd; add ebx, 0x46378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931ac: call 0x1875fd; add ebx, 0x4642f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193113: call 0x1875fd; add ebx, 0x464c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019305c: call 0x1875fd; add ebx, 0x4657f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192fc3: call 0x1875fd; add ebx, 0x46618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f0c: call 0x1875fd; add ebx, 0x466cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192e73: call 0x1875fd; add ebx, 0x46768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192dbc: call 0x1875fd; add ebx, 0x4681f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d23: call 0x1875fd; add ebx, 0x468b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c6c: call 0x1875fd; add ebx, 0x4696f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192bd3: call 0x1875fd; add ebx, 0x46a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b1c: call 0x1875fd; add ebx, 0x46abf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a83: call 0x1875fd; add ebx, 0x46b58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929cb: call 0x1875fd; add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928c6: call 0x1875fd; add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927c0: call 0x1875fd; add ebx, 0x46edb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926ba: call 0x1875fd; add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019271f: call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x001926d0: call 0x1875fd; add ebx, 0x470cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001914d8: call 0x1875fd; add ebx, 0x47f03; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00191428: call 0x1875fd; add ebx, 0x47fb3; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00191340: call 0x1875fd; add ebx, 0x4801b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190f7e: call 0x1875fd; add ebx, 0x481dd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190ec2: call 0x1875fd; add ebx, 0x48299; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190e66: call 0x1875fd; add ebx, 0x482f5; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190cc0: call 0x1875fd; add ebx, 0x4841b; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0012d244: call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00120fb4: call 0x187601; add edx, 0x11be5b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009f594: call 0x187601; add edx, 0x19d87b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008f394: call 0x187601; add edx, 0x1ada7b; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x00131ff4: call 0x187605; add eax, 0x10ae1b; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00095d34: call 0x187605; add eax, 0x1a70db; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00094b54: call 0x187605; add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008f374: call 0x187605; add eax, 0x1ada9b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008f334: call 0x187605; add eax, 0x1adadb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008d674: call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d7a4: call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d784: call 0x187605; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034be4: call 0x187605; add eax, 0x20822b; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bc4: call 0x187605; add eax, 0x20824b; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba4: call 0x187605; add eax, 0x20826b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002f804: call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00026084: call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026064: call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025514: call 0x187605; add eax, 0x2178fb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024f94: call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x00024f74: call 0x187605; add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x001293ff: call 0x187609; add esi, 0x113a10; push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018deff: call 0x187609; add esi, 0xaef10; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c16ac: call 0x187611; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c11a1: call 0x187611; add ecx, 0x109ece; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c117c: call 0x187611; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c115c: call 0x187611; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c113f: call 0x187611; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10a0: call 0x187611; add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1112: call 0x187611; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1082: call 0x187611; add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10fb: call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10e0: call 0x187611; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c105d: call 0x187611; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10be: call 0x187611; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1033: call 0x187611; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c101a: call 0x187611; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ff9: call 0x187611; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fd5: call 0x187611; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb7: call 0x187611; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0f34: call 0x187611; add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd82: call 0x187611; add ecx, 0x10d1ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd5d: call 0x187611; add ecx, 0x10d212; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd33: call 0x187611; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd1a: call 0x187611; add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf9: call 0x187611; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcd5: call 0x187611; add ecx, 0x10d29a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcb7: call 0x187611; add ecx, 0x10d2b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdc9b: call 0x187611; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bbe0c: call 0x187611; add ecx, 0x10f08f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd27: call 0x187611; add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd14: call 0x187611; add ecx, 0x10f217; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbcf8: call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb201: call 0x187611; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1dc: call 0x187611; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1bc: call 0x187611; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb19f: call 0x187611; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb100: call 0x187611; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb172: call 0x187611; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb15b: call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb140: call 0x187611; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb11e: call 0x187611; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb02c: call 0x187611; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb00c: call 0x187611; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe7: call 0x187611; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba70c: call 0x187611; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba627: call 0x187611; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba614: call 0x187611; add ecx, 0x1107b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f8: call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9bc1: call 0x187611; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b9c: call 0x187611; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b7c: call 0x187611; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b5f: call 0x187611; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ac0: call 0x187611; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9b32: call 0x187611; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b1b: call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b00: call 0x187611; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ade: call 0x187611; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b99fc: call 0x187611; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99dc: call 0x187611; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b7: call 0x187611; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001883d7: call 0x187ac0; add esp, 0x18; pop ebx; ret; 
0x00042fd9: call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x0004306b: call 0x1aa890; add esp, 0x18; pop ebx; ret; 
0x000a0a71: call 0x1ca8d7a; mov dword ptr [edx + 0x388], eax; ret; 
0x00041b3c: call 0x1caca50; clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00084bcc: call 0x1e8ced5; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00084cfc: call 0x1e8d006; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008716c: call 0x1e8f473; xor eax, 1; ret; 
0x0008718c: call 0x1e8f494; xor eax, 1; ret; 
0x00087efc: call 0x1e90205; ret; 
0x00087f1c: call 0x1e90226; ret; 
0x0008f3bd: call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x00139750: call 0x1f41a5b; pop ebx; ret; 
0x0013ee30: call 0x1fc7138; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x00043c64: call 0x21061cec; ret 0xb60f; 
0x000a7645: call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0008e71b: call 0x23100; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000abce5: call 0x23110; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00039401: call 0x23190; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0002823d: call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000610a9: call 0x23190; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ffef6: call 0x23190; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00030101: call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x00087553: call 0x23190; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x000388f5: call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00090889: call 0x23190; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x001508af: call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0009e22a: call 0x23190; mov dword ptr [esp], esi; call edi; 
0x000a08c4: call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0010be01: call 0x23198; add esp, 0x18; pop ebx; ret; 
0x001600e8: call 0x23198; mov dword ptr [ebx + 0xa280], eax; add esp, 0x18; pop ebx; ret; 
0x000244bb: call 0x24482; add esp, 0x1c; ret; 
0x0006f5da: call 0x248375e0; push eax; and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x001164dc: call 0x29134564; ret; 
0x00117f8c: call 0x29136014; ret; 
0x00119a2c: call 0x29137ab4; ret; 
0x0003a208: call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0010bdfb: call 0x2f17f05; push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x001938fa: call 0x3193d5b; sbb al, 0x8b; jmp ebx; 
0x00194e7a: call 0x31952c8; sbb al, 0x8b; jmp ebx; 
0x00033685: call 0x33690; add esp, 0x1c; ret; 
0x0003464a: call 0x34370; add esp, 0x28; pop ebx; ret; 
0x00035186: call 0x34c60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x001462b2: call 0x351e0; add esp, 0x10; add esp, 0xc; ret; 
0x00173d8b: call 0x351e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000efe77: call 0x351e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00035221: call 0x351e0; add esp, 0x1c; ret; 
0x000351f9: call 0x35ee0; add esp, 0x2c; ret; 
0x00036819: call 0x367d0; add esp, 0x2c; ret; 
0x0004cda3: call 0x3904cdb0; ret; 
0x0003c6c7: call 0x3c640; pop ecx; pop edx; ret; 
0x0003d569: call 0x3ce00; add esp, 0x1c; ret; 
0x0009e206: call 0x3d370; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0003d9a1: call 0x3d920; add esp, 0x1c; ret; 
0x0003ebfd: call 0x3e360; add esp, 0x1c; ret; 
0x0008c370: call 0x3e4b4b85; mov edx, dword ptr [edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x0007c77a: call 0x3e4b4f8f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081143: call 0x3e4e9958; add esp, 4; pop ebx; pop esi; ret; 
0x00085963: call 0x3e4ee178; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0003ec32: call 0x3ed70; add esp, 0x1c; ret; 
0x0018773d: call 0x3ee50; add esp, 0x1c; ret; 
0x00073a23: call 0x3f0732f3; jmp eax; 
0x0003f351: call 0x3f3b0; add esp, 0x1c; ret; 
0x0009215b: call 0x401a462; je 0x92170; pop ebx; pop esi; pop edi; ret; 
0x00040e38: call 0x40920; add esp, 0x10; add esp, 0xc; ret; 
0x00194023: call 0x4097501b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196013: call 0x4097700b; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00198123: call 0x4097911b; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000409fc: call 0x40a10; add esp, 0x1c; ret; 
0x00040bbc: call 0x40bc1; pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00040b68: call 0x40ea0; add esp, 0x10; add esp, 0xc; ret; 
0x00041bd9: call 0x41790; add esp, 0x2c; ret; 
0x00042496: call 0x423b0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0004250d: call 0x42520; add esp, 0x18; lea eax, [ebx + 6]; pop ebx; ret; 
0x000429de: call 0x425e0; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x00042ccc: call 0x42ce0; add esp, 0x1c; ret; 
0x00191142: call 0x42ef20ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001916d2: call 0x42ef263d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000438d7: call 0x43900; add esp, 0x2c; ret; 
0x0014f2dc: call 0x4424bc66; ret 0x148b; 
0x00030099: call 0x444899f; add esp, 8; pop ebx; ret; 
0x0005ad65: call 0x448366b; ret; 
0x0003e26d: call 0x47110; add esp, 0x1c; ret; 
0x000470fd: call 0x47a00; add esp, 0x1c; ret; 
0x0003a937: call 0x4aaf4; add byte ptr [ecx], bh; ret 0x430f; 
0x0004a6fd: call 0x4aec0; add esp, 0x1c; ret; 
0x000acbd8: call 0x4c8b59dc; ret 0xfff6; 
0x00149c92: call 0x4d91f98; pop ebx; pop esi; ret; 
0x0003e28f: call 0x4d950; add esp, 0x1c; ret; 
0x0004d903: call 0x4d9a0; add esp, 0x2c; ret; 
0x0004e07d: call 0x4e940; add esp, 0x1c; ret; 
0x000a0a6e: call 0x4f2cb74; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0003e2cf: call 0x51680; add esp, 0x1c; ret; 
0x00051633: call 0x516c0; add esp, 0x2c; ret; 
0x00052003: call 0x520a0; add esp, 0x2c; ret; 
0x000526e3: call 0x52780; add esp, 0x2c; ret; 
0x0005354e: call 0x53050; test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00053742: call 0x53700; jmp eax; 
0x000ad36f: call 0x5576075; add byte ptr [ecx], al; ret; 
0x000e8b72: call 0x5b0e8b77; ret; 
0x000e8be4: call 0x5b0e8be9; ret; 
0x000e8c88: call 0x5b0e8c8d; ret; 
0x000a8dda: call 0x5b0f5262; pop esi; pop edi; pop ebp; ret; 
0x00160667: call 0x5b1acaef; pop esi; ret; 
0x00038e86: call 0x5b30530e; pop esi; pop edi; pop ebp; ret; 
0x001529d5: call 0x5b31ee5d; pop esi; pop edi; pop ebp; ret; 
0x00154a5f: call 0x5b320ee7; pop esi; pop edi; pop ebp; ret; 
0x0005b7b2: call 0x5b550; mov eax, 1; add esp, 0xc; ret; 
0x00054f47: call 0x5b5d56d5; pop esi; pop edi; ret; 
0x0005bd45: call 0x5bbb0; add esp, 0x18; pop ebx; ret; 
0x00028b86: call 0x5d61e9e6; ret; 
0x000297c6: call 0x5d61f626; ret; 
0x000352a2: call 0x5d62b102; ret; 
0x00036903: call 0x5d62c763; ret; 
0x00038e48: call 0x5d62eca8; ret; 
0x0003ba66: call 0x5d6318c6; ret 4; 
0x0003e234: call 0x5d634094; ret; 
0x0003e332: call 0x5d634192; ret; 
0x0005a575: call 0x5d6503d5; ret; 
0x0007c508: call 0x5d672368; ret; 
0x00080046: call 0x5d675ea6; ret; 
0x000989ee: call 0x5d68e84e; ret; 
0x0009937b: call 0x5d68f1db; ret; 
0x00099ad8: call 0x5d68f938; ret; 
0x000a1cce: call 0x5d697b2e; ret; 
0x000a1d50: call 0x5d697bb0; ret; 
0x000a6bd5: call 0x5d69ca35; ret 4; 
0x000ad89f: call 0x5d6a36ff; ret; 
0x000c6438: call 0x5d6bc298; ret; 
0x000d2053: call 0x5d6c7eb3; ret; 
0x000e7f16: call 0x5d6ddd76; ret; 
0x000e83f4: call 0x5d6de254; ret; 
0x000ebbc1: call 0x5d6e1a21; ret; 
0x000ed8f1: call 0x5d6e3751; ret; 
0x000ef8e8: call 0x5d6e5748; ret; 
0x000f0818: call 0x5d6e6678; ret; 
0x00102d28: call 0x5d6f8b88; ret; 
0x0010ab08: call 0x5d700968; ret; 
0x0010eabd: call 0x5d70491d; ret; 
0x0010ec91: call 0x5d704af1; ret; 
0x0010edaf: call 0x5d704c0f; ret; 
0x0012f440: call 0x5d7252a0; ret; 
0x0012fdcc: call 0x5d725c2c; ret; 
0x0013ce10: call 0x5d732c70; ret; 
0x00140687: call 0x5d7364e7; ret; 
0x00140ad0: call 0x5d736930; ret; 
0x0014438f: call 0x5d73a1ef; ret; 
0x00144a04: call 0x5d73a864; ret; 
0x0014ef8d: call 0x5d744ded; ret; 
0x00152982: call 0x5d7487e2; ret; 
0x00154a46: call 0x5d74a8a6; ret; 
0x00167d42: call 0x5d75dba2; ret; 
0x00169311: call 0x5d75f171; ret; 
0x0016ab82: call 0x5d7609e2; ret; 
0x0016b612: call 0x5d761472; ret; 
0x0016b8e2: call 0x5d761742; ret; 
0x0016ca5e: call 0x5d7628be; ret; 
0x0017cb9d: call 0x5d7729fd; ret; 
0x0017d227: call 0x5d773087; ret; 
0x001879fc: call 0x5d77d85c; ret; 
0x00189d6b: call 0x5d77fbcb; ret; 
0x0018a206: call 0x5d780066; ret; 
0x001a5626: call 0x5d79b486; ret; 
0x00166e17: call 0x5ee6f777; pop edi; ret; 
0x000537e6: call 0x5f639546; ret; 
0x00054403: call 0x5f63a163; ret; 
0x00055036: call 0x5f63ad96; ret; 
0x0013fd05: call 0x614b0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001279f5: call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x001279a3: call 0x61730; add esp, 0x1c; ret; 
0x000c1c34: call 0x660c1c39; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0005acb6: call 0x66260; add esp, 0x1c; ret; 
0x0005acd7: call 0x66570; add esp, 0x1c; ret; 
0x0005aff6: call 0x66600; add esp, 0x1c; ret; 
0x00027073: call 0x700ef705; stc; call dword ptr [eax - 0x73]; 
0x0006df75: call 0x72940; add esp, 0x1c; ret; 
0x00080b67: call 0x72c10; add esp, 0x1c; ret; 
0x00072c25: call 0x72ca0; add esp, 0x1c; ret; 
0x000d9ef3: call 0x74e022fa; pop ss; mov cl, dl; and cl, 0xf; je 0xd9f20; ret; 
0x000acade: call 0x754cc1e2; add cl, byte ptr [ebp - 0x17b7436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000795a2: call 0x79300; mov eax, 1; add esp, 0xc; ret; 
0x00079f66: call 0x79e20; add esp, 0x1c; ret; 
0x0017401d: call 0x79f50; add esp, 0x18; pop ebx; ret; 
0x0012842f: call 0x7b8c0; add esp, 0x10; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00085a67: call 0x7b8c0; add esp, 0x18; pop ebx; ret; 
0x0007c541: call 0x7c450; add esp, 0x1c; ret; 
0x0005ade5: call 0x7d220; add esp, 0x1c; ret; 
0x0007d74d: call 0x7d570; add esp, 0x2c; ret; 
0x00085d74: call 0x7eab0; add esp, 0x1c; ret; 
0x00085d91: call 0x7ec60; add esp, 0x1c; ret; 
0x000614fb: call 0x7f080; add esp, 0x2c; ret; 
0x00080239: call 0x80060; add esp, 0x28; pop ebx; ret; 
0x00080c85: call 0x80ba0; add esp, 0x28; pop ebx; ret; 
0x00080aad: call 0x80ba0; add esp, 0x2c; ret; 
0x00024f15: call 0x81026540; ret 0x7efb; 
0x0005ab15: call 0x8105bde4; ret 0x22fb; 
0x00084e15: call 0x81085e41; ret 0x7ffb; 
0x000c4d15: call 0x810c5942; ret 0x80fb; 
0x000e9315: call 0x810e9cfc; ret 0x3afb; 
0x000fb301: call 0x810fb386; ret; 
0x000fba15: call 0x810fc2d5; ret 0x13fb; 
0x00152215: call 0x8115256d; ret 0xabfb; 
0x00155615: call 0x81155939; ret 0x77fb; 
0x0007fb84: call 0x817d0; add esp, 0x1c; ret; 
0x001b4815: call 0x821b4547; ret 0x85fb; 
0x00084a8d: call 0x826e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0013c853: call 0x8324cce0; ret 0x8d01; 
0x00133769: call 0x83ee689e; clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000ffee4: call 0x840ffec0; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x001672b7: call 0x841672ba; ret; 
0x0017abe4: call 0x85440; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x00086021: call 0x85e90; add esp, 0x18; pop ebx; ret; 
0x0005ab06: call 0x85e90; add esp, 0x1c; ret; 
0x000861e1: call 0x860f0; add esp, 0x18; pop ebx; ret; 
0x0005ac16: call 0x860f0; add esp, 0x1c; ret; 
0x000614cd: call 0x862e0; add esp, 0x2c; ret; 
0x000866b1: call 0x86520; add esp, 0x18; pop ebx; ret; 
0x0013afb2: call 0x86520; add esp, 0x1c; ret; 
0x0008fc6e: call 0x87470; lea esi, cs:[esi]; pop ebx; pop esi; pop edi; ret; 
0x00126fea: call 0x88145072; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x00132031: call 0x8913207d; ret; 
0x0014420c: call 0x89163294; ret 0xe283; 
0x001ac029: call 0x891f82b1; ret; 
0x00091d45: call 0x8938914d; clc; call dword ptr gs:[0x10]; 
0x00089afe: call 0x895c0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007383f: call 0x8a07383e; ret; 
0x00074594: call 0x8a074593; sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x00078b39: call 0x8a078b38; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00087fd4: call 0x8bb60; add esp, 0x1c; ret; 
0x000ced24: call 0x8c0ce37e; jl 0xced4f; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0008c521: call 0x8c440; add esp, 0x28; pop ebx; ret; 
0x0011eab0: call 0x8d11eab5; xchg byte ptr [esi], ch; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0010cd30: call 0x8d55054; or eax, edx; pop ebx; ret; 
0x0008dabe: call 0x8d9f0; add esp, 0x18; pop ebx; ret; 
0x0008dafe: call 0x8d9f0; or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x000791e4: call 0x8e0791e3; push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000abc17: call 0x8e0abc14; nop; mov ah, 0x9a; stc; call dword ptr [edx - 0x73]; 
0x001411d2: call 0x8e140b82; mov dl, 0x6c; je 0x1411d4; call dword ptr [eax + 0x56]; 
0x0008e242: call 0x8e480; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001150d6: call 0x8f110; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x00128766: call 0x8f110; add esp, 0x28; pop ebx; ret; 
0x0003cd5a: call 0x8f110; add esp, 0x2c; ret; 
0x00098621: call 0x8f1b0; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00096872: call 0x8f480; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0009aabc: call 0x8f990; add esp, 0x28; pop ebx; ret; 
0x0009b88c: call 0x8f990; add esp, 0x2c; ret; 
0x0010bdd2: call 0x8fc80; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000dd5aa: call 0x8fc80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00061276: call 0x8fc80; add esp, 0x10; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0015449a: call 0x8fc80; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0007dc3a: call 0x8fc80; add esp, 0x1c; ret; 
0x0010ba82: call 0x8fc80; call dword ptr [esi]; 
0x000907e1: call 0x8fd70; add esp, 0x1c; ret; 
0x0009a118: call 0x90b90; add esp, 0x1c; ret; 
0x00090d20: call 0x90c40; add esp, 0x18; pop ebx; ret; 
0x00091044: call 0x90f80; add esp, 0x1c; ret; 
0x000923f0: call 0x92220; mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00093978: call 0x92c40; mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009df74: call 0x933f0; mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009f751: call 0x94480; xor edx, edx; mov eax, 1; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x00091897: call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x00094ef5: call 0x94f20; add esp, 0x2c; ret; 
0x0009757b: call 0x96c80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00097630: call 0x96c80; add esp, 0x18; pop ebx; ret; 
0x0009820d: call 0x980c0; add esp, 0x1c; ret; 
0x00150122: call 0x98200; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009d239: call 0x98200; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret; 
0x000986b4: call 0x98540; xor eax, eax; add esp, 0xc; ret; 
0x0016c5a1: call 0x98690; add esp, 0x18; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x000281ff: call 0x98690; add esp, 0x1c; ret; 
0x0003ddda: call 0x98dd0; add esp, 0x1c; ret; 
0x0003deb4: call 0x99850; mov ecx, dword ptr [esp + 0x20]; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x00099f50: call 0x99ef0; add esp, 0x18; pop ebx; ret; 
0x000a9275: call 0x9c8c8979; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x94de36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bc5: call 0x9c8c92c9; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x948736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c45: call 0x9c8c9349; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940d36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa8d5: call 0x9c8c9fd9; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x957f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0009e45d: call 0x9dc00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009f75d: call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x0009fb93: call 0x9fad0; add esp, 0x18; pop ebx; ret; 
0x0009f5f1: call 0x9fc10; add esp, 0x1c; ret; 
0x0009fbc9: call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbf9: call 0x9fee0; add esp, 0x2c; ret; 
0x000a1e5c: call 0xa1bf0; add esp, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a4414: call 0xa46d3; add cl, al; call 0xfda7d32; inc edi; ret 0xc083; 
0x000a45d2: call 0xa4891; add cl, al; call 0xfda7ef0; inc edi; ret 0xc083; 
0x000a8e20: call 0xa8d00; add esp, 0xc; test eax, eax; jne 0xa8e33; ret; 
0x000aaab9: call 0xaaae0; add esp, 0x1c; ret; 
0x000abd25: call 0xabd30; add esp, 0x1c; ret; 
0x000ad740: call 0xad750; add esp, 0x1c; ret; 
0x000ad97d: call 0xada40; add esp, 0x1c; ret; 
0x000ac7cf: call 0xb0810; add esp, 0x18; pop ebx; ret; 
0x00062a36: call 0xb615f0c4; inc ebp; or eax, 0x8901e683; ret; 
0x0009adcf: call 0xc03ab05d; ret; 
0x000d8507: call 0xc1d10e7d; sti; add eax, 0x891fe083; ret 0x840f; 
0x00038144: call 0xc24c0; add esp, 0x1c; ret; 
0x000a92c3: call 0xc24ea2c7; ret; 
0x000a9cf8: call 0xc24eacfc; ret; 
0x000a9d38: call 0xc24ead3c; ret; 
0x000a9d73: call 0xc24ead77; ret; 
0x000a9db3: call 0xc24eadb7; ret; 
0x000aa8a8: call 0xc24eb8ac; ret; 
0x000aaa83: call 0xc24eba87; ret; 
0x000abc78: call 0xc24ecc7c; ret; 
0x000aca63: call 0xc24eda67; ret; 
0x000acaa3: call 0xc24edaa7; ret; 
0x000acae8: call 0xc24edaec; ret; 
0x001597b9: call 0xc2920; add esp, 0x1c; ret; 
0x0013b715: call 0xc2c10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000ac6df: call 0xc2c10; add esp, 0x18; pop ebx; ret; 
0x000a8caf: call 0xc2c90; add esp, 0x18; pop ebx; ret; 
0x000d4d73: call 0xc2d00; add esp, 0x18; pop ebx; ret; 
0x000a0e09: call 0xc2d40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a8cdd: call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x000ac82b: call 0xc2d90; add esp, 0x18; pop ebx; ret; 
0x000ac77b: call 0xc32c0; add esp, 0x18; pop ebx; ret; 
0x000c425c: call 0xc47a0; add esp, 0x1c; ret; 
0x000c4d4e: call 0xc4d60; add esp, 0x2c; ret; 
0x0013bcb9: call 0xc5100; add esp, 0x18; pop ebx; ret; 
0x000c5395: call 0xc5170; add esp, 0x1c; ret; 
0x000535eb: call 0xc5380; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x000c3c1b: call 0xc5380; add esp, 0x18; pop ebx; ret; 
0x000c5569: call 0xc5580; add esp, 0x1c; ret; 
0x0013bf79: call 0xc6e20; add esp, 0x18; pop ebx; ret; 
0x000c7b0d: call 0xc83a0; add esp, 0x1c; ret; 
0x0005a28c: call 0xc8f7803; and al, 0x89; ret 0x13eb; 
0x000cadbd: call 0xcb520; add esp, 0x1c; ret; 
0x0009c5c9: call 0xcce48d0; ret; 
0x000cdd83: call 0xcde10; add esp, 0x2c; ret; 
0x000ce4dd: call 0xced40; add esp, 0x1c; ret; 
0x000d1653: call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f63: call 0xd1ff0; add esp, 0x2c; ret; 
0x000d2673: call 0xd2700; add esp, 0x2c; ret; 
0x000d2fdd: call 0xd3000; add esp, 0x1c; ret; 
0x000da12a: call 0xd4d10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000dbe2d: call 0xdaeb0; add esp, 0x18; pop ebx; ret; 
0x000df29c: call 0xdaeb0; add esp, 0x1c; ret; 
0x000dd35f: call 0xdd0e0; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000dad86: call 0xdd5c0; add esp, 0x1c; ret; 
0x000dfcef: call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30e1: call 0xe54b0; add esp, 0x2c; ret; 
0x000e3121: call 0xe7970; add esp, 0x2c; ret; 
0x000e7ae1: call 0xe7bd0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x000e79f1: call 0xe7d60; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0007752e: call 0xea07752d; ret; 
0x000fdd40: call 0xea42e; inc dword ptr [ebx - 0x7c72f714]; sbb al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x000eaf21: call 0xeaf30; add esp, 0x1c; ret; 
0x000eb485: call 0xeb130; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x000eafe1: call 0xeb470; add esp, 0x1c; ret; 
0x0010da49: call 0xeff00; or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000f0e2f: call 0xf0650; add esp, 0x28; pop ebx; ret; 
0x000c3c0b: call 0xf0c3c4c; inc esp; ret 0xff50; 
0x000f0d67: call 0xf0cb0; add esp, 0x28; pop ebx; ret; 
0x00095270: call 0xf0ef0; mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000905f9: call 0xf0ef0; mov ecx, dword ptr [esi + 8]; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000e09f7: call 0xf17462c; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000e1206: call 0xf174e3b; xchg dword ptr [eax - 0x7c000012], edx; ret; 
0x0013fc95: call 0xf57da2; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013b0d2: call 0xfbad0; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00103142: call 0xfc550; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00103150: call 0xfd430; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000ffee3: call 0xfd6d0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a441b: call 0xfda7d32; inc edi; ret 0xc083; 
0x000a45d9: call 0xfda7ef0; inc edi; ret 0xc083; 
0x000a6a1b: call 0xfdaa332; inc edi; ret 0x508d; 
0x0010e398: call 0xfe11c9f; dec edi; ret 0xbce9; 
0x0003dec5: call dword ptr [0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e7b8a: call dword ptr [0x10]; cmp eax, -0x26; jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0011457e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145ee: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147ce: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ecde: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f1fe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f61c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ffaa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206be: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bca: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fca: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221ce: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x0012221e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f4e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012a9fe: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd8a: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0de: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d255: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d35e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e20e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e41e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0003cd0f: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x0006134e: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5aa: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000a0352: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc36c: call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x0010c296: call dword ptr [0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003ccd0: call dword ptr [0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b9c: call dword ptr [0x10]; mov ebx, edx; ret; 
0x000fba8e: call dword ptr [0x10]; neg eax; pop ebx; ret; 
0x00120f9c: call dword ptr [0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000eaf43: call dword ptr [0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0008fc9c: call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0013dc51: call dword ptr [0x10]; pop ebx; ret; 
0x0009c69a: call dword ptr [0x10]; ret; 
0x0003bf5e: call dword ptr [eax + 0x102444db]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000f1c1c: call dword ptr [eax + 0x10]; 
0x000f180f: call dword ptr [eax + 0x14]; 
0x000f1b78: call dword ptr [eax + 0x18]; 
0x0007d9e7: call dword ptr [eax + 0x1c]; 
0x000f4869: call dword ptr [eax + 0x20]; 
0x000894b8: call dword ptr [eax + 0x24]; 
0x0007eb5c: call dword ptr [eax + 0x2c]; 
0x00086add: call dword ptr [eax + 0x30]; 
0x0004a2b9: call dword ptr [eax + 0x31]; 
0x000815bf: call dword ptr [eax + 0x34]; 
0x0018493f: call dword ptr [eax + 0x37c]; add esp, 0x1c; ret; 
0x00089fdf: call dword ptr [eax + 0x40]; 
0x00189731: call dword ptr [eax + 0x48]; 
0x00024ec6: call dword ptr [eax + 0x50]; 
0x00056eb7: call dword ptr [eax + 0x51]; 
0x00023472: call dword ptr [eax + 0x52]; 
0x00039edd: call dword ptr [eax + 0x53]; 
0x000acd60: call dword ptr [eax + 0x55]; 
0x00030494: call dword ptr [eax + 0x56]; 
0x0009861e: call dword ptr [eax + 0x56]; call 0x8f1b0; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000345af: call dword ptr [eax + 0x57]; 
0x00028887: call dword ptr [eax + 0x68]; 
0x00024798: call dword ptr [eax + 0x6a]; 
0x00167406: call dword ptr [eax + 0x6a]; add al, ch; inc ecx; retf 0xfffe; add esp, 0x1c; ret; 
0x00123948: call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x0017a684: call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x0016bcf6: call dword ptr [eax + 0x6a]; pop es; call 0x153e50; add esp, 0x1c; ret; 
0x0016aa16: call dword ptr [eax + 0x6a]; push es; call 0x153e50; add esp, 0x1c; ret; 
0x000a6f73: call dword ptr [eax + 0x77]; 
0x001846ce: call dword ptr [eax + 0x8244c89]; call eax; 
0x000fd42e: call dword ptr [eax + 0x8a1dce8]; add byte ptr [ecx + 0x13f9dfc1], al; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x00081714: call dword ptr [eax + 0xc]; 
0x0006753d: call dword ptr [eax + 2]; 
0x0016c79b: call dword ptr [eax + 4]; 
0x0016ea00: call dword ptr [eax + 8]; 
0x00106f2a: call dword ptr [eax - 0x17]; 
0x0002325c: call dword ptr [eax - 0x18]; 
0x00151bd2: call dword ptr [eax - 0x18]; aaa; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001516d2: call dword ptr [eax - 0x18]; aaa; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0005afd2: call dword ptr [eax - 0x18]; aaa; xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x001367e7: call dword ptr [eax - 0x18]; and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0008d9e7: call dword ptr [eax - 0x18]; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x00153b2c: call dword ptr [eax - 0x18]; fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000edc17: call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x00151812: call dword ptr [eax - 0x18]; imul dword ptr [edx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0005b9c6: call dword ptr [eax - 0x18]; inc ebx; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x001831c7: call dword ptr [eax - 0x18]; inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x00059dc7: call dword ptr [eax - 0x18]; inc edx; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x001131c5: call dword ptr [eax - 0x18]; inc esp; adc edx, esi; jmp dword ptr [esi - 0x70]; 
0x00151592: call dword ptr [eax - 0x18]; ja 0x1515c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151a92: call dword ptr [eax - 0x18]; ja 0x151abf; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151952: call dword ptr [eax - 0x18]; mov bh, 0x29; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151452: call dword ptr [eax - 0x18]; mov bh, 0x2e; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00096756: call dword ptr [eax - 0x18]; mov bl, 0xdb; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00189f10: call dword ptr [eax - 0x18]; pop ecx; aad 0xef; jmp dword ptr [esi - 0x70]; 
0x00095d02: call dword ptr [eax - 0x18]; pop es; out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x001514f2: call dword ptr [eax - 0x18]; pop ss; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001519f2: call dword ptr [eax - 0x18]; pop ss; sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x000ec9b2: call dword ptr [eax - 0x18]; push 0xc4830004; adc byte ptr [ecx], bh; ret; 
0x000f6f34: call dword ptr [eax - 0x18]; push ebp; ret 0xfff2; 
0x000efe75: call dword ptr [eax - 0x18]; push ebx; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001518b2: call dword ptr [eax - 0x18]; push edi; sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x00079ab7: call dword ptr [eax - 0x18]; push edx; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00078027: call dword ptr [eax - 0x18]; ret 0x2f6; 
0x0002ac47: call dword ptr [eax - 0x18]; ret 0x96; 
0x000dee47: call dword ptr [eax - 0x18]; ret 0xf554; 
0x00125667: call dword ptr [eax - 0x18]; ret 0xf56e; 
0x000923a6: call dword ptr [eax - 0x18]; ret; 
0x0010e43f: call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x000959ed: call dword ptr [eax - 0x18]; sbb al, 0xe9; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x001693ef: call dword ptr [eax - 0x18]; sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00096a6e: call dword ptr [eax - 0x18]; wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x00151772: call dword ptr [eax - 0x18]; xchg edi, eax; sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x0015f175: call dword ptr [eax - 0x18]; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00151b32: call dword ptr [eax - 0x18]; xlatb; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151632: call dword ptr [eax - 0x18]; xlatb; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0015f247: call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x001257d6: call dword ptr [eax - 0x39]; 
0x0004768e: call dword ptr [eax - 0x3d5b7a23]; stc; jmp dword ptr [ebp - 0x75]; 
0x00058437: call dword ptr [eax - 0x48]; 
0x0016c56e: call dword ptr [eax - 0x4e1f00d]; ret; 
0x0011e02e: call dword ptr [eax - 0x72f3137d]; sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x000fe21e: call dword ptr [eax - 0x72f7137d]; cmp dword ptr [edx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x000256f8: call dword ptr [eax - 0x73]; 
0x00125660: call dword ptr [eax - 0x73]; adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x0015f16e: call dword ptr [eax - 0x73]; sbb dword ptr [0x50fff960], -0x18; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0015f240: call dword ptr [eax - 0x73]; sub dword ptr [eax], 0x60; stc; call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x00093393: call dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x0017a67d: call dword ptr [eax - 0x73]; xor dword ptr [ecx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00038136: call dword ptr [eax - 0x75]; 
0x0007bace: call dword ptr [eax - 0x76f3137d]; ret; 
0x000594db: call dword ptr [eax - 0x77]; 
0x0013e3de: call dword ptr [eax - 0x7c028473]; call dword ptr [ecx]; 
0x000c682e: call dword ptr [eax - 0x7c3fb275]; ret; 
0x0004d56e: call dword ptr [eax - 0x7d]; 
0x00024767: call dword ptr [eax - 1]; 
0x000567ef: call dword ptr [eax]; 
0x0016d0ab: call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0016d5e5: call dword ptr [eax]; mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x00134d86: call dword ptr [ebp + 0x14]; 
0x0005bca3: call dword ptr [ebp + 0x1c]; 
0x0008cf31: call dword ptr [ebp + 0x2c]; 
0x0008c193: call dword ptr [ebp + 0x30]; 
0x0008a4f5: call dword ptr [ebp + 0x40]; 
0x00060718: call dword ptr [ebp + 0x50]; 
0x000e22c9: call dword ptr [ebp + 0x55]; 
0x0003e703: call dword ptr [ebp + 0x56]; 
0x001791c9: call dword ptr [ebp + 0x56]; call edi; 
0x00023381: call dword ptr [ebp + 0x57]; 
0x0010d1b4: call dword ptr [ebp + 0x6a]; 
0x0008a8e0: call dword ptr [ebp + 0xc]; 
0x00140a33: call dword ptr [ebp + 1]; 
0x0011db95: call dword ptr [ebp - 0x10]; 
0x00033e26: call dword ptr [ebp - 0x18]; 
0x000243a7: call dword ptr [ebp - 0x38]; 
0x001617c3: call dword ptr [ebp - 0x73]; 
0x00033efc: call dword ptr [ebp - 0x75]; 
0x000a6d88: call dword ptr [ebp - 1]; 
0x00135aef: call dword ptr [ebx + 0x14]; 
0x0007c93d: call dword ptr [ebx + 0x1c]; 
0x0016f654: call dword ptr [ebx + 0x20]; 
0x0018406c: call dword ptr [ebx + 0x24]; 
0x001840f3: call dword ptr [ebx + 0x28]; 
0x0007ed98: call dword ptr [ebx + 0x2c]; 
0x0007bebd: call dword ptr [ebx + 0x30]; 
0x0010d49d: call dword ptr [ebx + 0x31]; 
0x0007ee81: call dword ptr [ebx + 0x34]; 
0x00082b35: call dword ptr [ebx + 0x38]; 
0x000838b6: call dword ptr [ebx + 0x40]; 
0x0018915e: call dword ptr [ebx + 0x44]; 
0x0007b7ac: call dword ptr [ebx + 0x48]; 
0x0003fcce: call dword ptr [ebx + 0x50]; 
0x000587c3: call dword ptr [ebx + 0x51]; 
0x000e53f0: call dword ptr [ebx + 0x52]; 
0x000e2214: call dword ptr [ebx + 0x53]; 
0x000a904d: call dword ptr [ebx + 0x56]; 
0x000e78fd: call dword ptr [ebx + 0x57]; 
0x00048ba2: call dword ptr [ebx + 0x6a]; 
0x0016d3c1: call dword ptr [ebx + 0xc]; 
0x000838a6: call dword ptr [ebx + 0xf000005]; 
0x0007b932: call dword ptr [ebx + 8]; 
0x00057802: call dword ptr [ebx - 0x18]; 
0x0008dad9: call dword ptr [ebx - 0x18]; sbb eax, 0x81000f9b; ret; 
0x00061a2d: call dword ptr [ebx - 0x59]; 
0x0015320c: call dword ptr [ebx - 0x73]; 
0x000319c7: call dword ptr [ebx - 0x75]; 
0x000594c2: call dword ptr [ebx - 0x7d]; 
0x00066619: call dword ptr [ebx - 0x7f]; 
0x0006da80: call dword ptr [ebx - 1]; 
0x00056e03: call dword ptr [ebx]; 
0x000984c9: call dword ptr [ebx]; mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016cb57: call dword ptr [ecx + 0x10]; 
0x0016e125: call dword ptr [ecx + 0x18]; 
0x000f1211: call dword ptr [ecx + 0x20]; 
0x0006083b: call dword ptr [ecx + 0x50]; 
0x00024ee3: call dword ptr [ecx + 0x51]; 
0x00171adc: call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00067dfb: call dword ptr [ecx + 0x52]; 
0x000df298: call dword ptr [ecx + 0x52]; push eax; call 0xdaeb0; add esp, 0x1c; ret; 
0x000a1c5a: call dword ptr [ecx + 0x6a]; 
0x000863ad: call dword ptr [ecx + 0xb]; 
0x0016c451: call dword ptr [ecx + 0xc]; 
0x0016c451: call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x001733c0: call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x000586db: call dword ptr [ecx + 0xf]; 
0x0016c8fc: call dword ptr [ecx + 8]; 
0x001582b4: call dword ptr [ecx - 0x17]; 
0x000318fd: call dword ptr [ecx - 0x18]; 
0x00078385: call dword ptr [ecx - 0x75]; 
0x000f2661: call dword ptr [ecx - 0x77]; 
0x000f3591: call dword ptr [ecx - 0x7d]; 
0x0006be3a: call dword ptr [ecx - 1]; 
0x00032e11: call dword ptr [ecx]; 
0x00081b9a: call dword ptr [edi + 0x18]; 
0x0011b441: call dword ptr [edi + 0x24]; 
0x0008bded: call dword ptr [edi + 0x34]; 
0x0008976d: call dword ptr [edi + 0x38]; 
0x000835d0: call dword ptr [edi + 0x40]; 
0x00088bb2: call dword ptr [edi + 0x44]; 
0x00088928: call dword ptr [edi + 0x48]; 
0x00058b72: call dword ptr [edi + 0x50]; 
0x001435b8: call dword ptr [edi + 0x52]; 
0x00058d50: call dword ptr [edi + 0x53]; 
0x000333c4: call dword ptr [edi + 0x56]; 
0x00024863: call dword ptr [edi + 0x57]; 
0x00084936: call dword ptr [edi + 0x68]; 
0x0004cede: call dword ptr [edi + 0x6a]; 
0x00082cf1: call dword ptr [edi + 0xc]; 
0x000584b1: call dword ptr [edi - 0x17]; 
0x00059505: call dword ptr [edi - 0x18]; 
0x000765b6: call dword ptr [edi - 0x18]; ret; 
0x00056f1e: call dword ptr [edi - 0x75]; 
0x00031a9e: call dword ptr [edi - 0x77]; 
0x0012a530: call dword ptr [edi - 0x7f]; 
0x00028030: call dword ptr [edi - 1]; 
0x0016cd00: call dword ptr [edx + 0x10]; 
0x00175b5e: call dword ptr [edx + 0x14]; 
0x0016e219: call dword ptr [edx + 0x18]; 
0x00183f2d: call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001844b6: call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x00089e65: call dword ptr [edx + 0x48]; 
0x0002715a: call dword ptr [edx + 0x50]; 
0x00031b5c: call dword ptr [edx + 0x51]; 
0x0006bc13: call dword ptr [edx + 0x52]; 
0x000e78e7: call dword ptr [edx + 0x53]; 
0x00032a9c: call dword ptr [edx + 0x56]; 
0x000d81e7: call dword ptr [edx + 0x57]; 
0x001249ce: call dword ptr [edx + 0x6a]; 
0x001719c6: call dword ptr [edx + 0xc]; 
0x0016c7b3: call dword ptr [edx + 4]; 
0x00173dfe: call dword ptr [edx + 8]; 
0x00031aec: call dword ptr [edx - 0x18]; 
0x000329c7: call dword ptr [edx - 0x18]; ret 0xff07; 
0x00139996: call dword ptr [edx - 0x3f]; 
0x00141592: call dword ptr [edx - 0x46]; 
0x0002610c: call dword ptr [edx - 0x73]; 
0x000584aa: call dword ptr [edx - 0x75]; 
0x00031ab8: call dword ptr [edx - 0x77]; 
0x0003032a: call dword ptr [edx - 1]; 
0x000a7392: call dword ptr [edx]; 
0x000813c7: call dword ptr [esi + 0x10]; 
0x00137575: call dword ptr [esi + 0x14]; 
0x00081c32: call dword ptr [esi + 0x18]; 
0x0008ad11: call dword ptr [esi + 0x20]; 
0x0007e938: call dword ptr [esi + 0x24]; 
0x0008801b: call dword ptr [esi + 0x30]; 
0x00130387: call dword ptr [esi + 0x31]; 
0x000884d2: call dword ptr [esi + 0x3c]; 
0x0007bde3: call dword ptr [esi + 0x40]; 
0x00030238: call dword ptr [esi + 0x50]; 
0x000e539b: call dword ptr [esi + 0x51]; 
0x00061cd4: call dword ptr [esi + 0x52]; 
0x000233d9: call dword ptr [esi + 0x53]; 
0x00058ee8: call dword ptr [esi + 0x56]; 
0x00074a38: call dword ptr [esi + 0x57]; 
0x00057840: call dword ptr [esi + 0x6a]; 
0x0008b842: call dword ptr [esi + 0xc]; 
0x000eb1ef: call dword ptr [esi + 0xf]; 
0x0016eb33: call dword ptr [esi - 0x17]; 
0x000319ce: call dword ptr [esi - 0x18]; 
0x0003370e: call dword ptr [esi - 0x42]; 
0x0016d5da: call dword ptr [esi - 0x73]; 
0x0006ce56: call dword ptr [esi - 0x75]; 
0x0005da6f: call dword ptr [esi - 0x77]; 
0x000d860c: call dword ptr [esi - 0x7d]; 
0x000738c9: call dword ptr [esi - 1]; 
0x000fdc4d: call dword ptr [esi - 4]; 
0x00024eac: call dword ptr [esi]; 
0x000232c5: call dword ptr gs:[0x10]; 
0x0003dec4: call dword ptr gs:[0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0011457d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145ed: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147cd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ecdd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f1fd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f61b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ffa9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206bd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bc9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fc9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221cd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x0012221d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f4d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012a9fd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd89: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0dd: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d254: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d35d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e20d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e41d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0003cd0e: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x0006134d: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5a9: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000a0351: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc36b: call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x0010c295: call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003cccf: call dword ptr gs:[0x10]; mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120b9b: call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000fba8d: call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x00120f9b: call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000eaf42: call dword ptr gs:[0x10]; pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0008fc9b: call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x0013dc50: call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009c699: call dword ptr gs:[0x10]; ret; 
0x00024d55: call eax; 
0x001877f1: call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00028acf: call ebx; 
0x0009f765: call ebx; add esp, 0x14; xor eax, eax; pop ebx; pop esi; ret; 
0x0012c704: call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0010a0f1: call ebx; ret; 
0x00024e42: call ecx; 
0x00025d16: call edi; 
0x00026900: call edx; 
0x0012ab2e: call edx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012c946: call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x00024deb: call esi; 
0x0012aafd: call esi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001368c3: call ptr [eax - 1]; je 0x1368ec; sbb al, 0xe8; ret 0xeec8; 
0x0007f834: call ptr [ebx + 0x5e]; mov eax, ecx; pop edi; ret; 
0x0002f693: call ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000613d6: call ptr [ebx + 0x5e]; pop edi; ret; 
0x0004078e: call ptr [ebx + 0x5e]; ret; 
0x0010e475: call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x000a91b3: call ptr [ebx + 0xf]; inc esp; ret 0xc083; 
0x000819eb: call ptr [ebx - 0x75]; add bl, byte ptr [esi + 0x5f]; ret; 
0x0007d11f: call ptr [ebx - 0x77]; clc; pop esi; pop edi; pop ebp; ret; 
0x0015545e: call ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x0007e76b: call ptr [ebx - 0x77]; ret 0x5f5e; 
0x0003c6cb: call ptr [ecx + 0x5a]; ret; 
0x000b7d08: call ptr [edi + 0x5b]; ret; 
0x000ba4a2: call ptr [edi + 0x5e]; pop ebx; ret; 
0x000ec3c1: call ptr [edi + ecx - 0x6c]; ret; 
0x001a8001: call ptr [edi]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00132a6e: call ptr [edx + 0x59]; pop eax; ret; 
0x00193ae3: call ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00039df3: call ptr [edx - 1]; je 0x39e1c; and al, 0xe8; ret 0xfff5; 
0x000c2bef: call ptr [esi + 0x5b]; ret; 
0x0009b359: call ptr [esi + 0x5f]; pop ebp; ret; 
0x0005b63e: call ptr [esi + 0x5f]; ret; 
0x000c16b4: cdq; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00190ec9: cdq; add byte ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0016d026: cdq; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b34c4], al; ret; 
0x001877f3: cdq; add esp, 0x10; add esp, 0xc; ret; 
0x00048b9f: cdq; das; stc; call dword ptr [ebx + 0x6a]; 
0x0005783d: cdq; das; stc; call dword ptr [esi + 0x6a]; 
0x0003f23c: cdq; idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00181415: cdq; insb byte ptr es:[edi], dx; test eax, 0x728d0000; jmp dword ptr [esi - 0x7d]; 
0x001565d9: cdq; int1; call dword ptr [eax - 0x18]; 
0x000a3913: cdq; jl 0xa391f; add byte ptr [ebp - 0x666b77d], cl; call dword ptr [eax - 0x73]; 
0x000b9aeb: cdq; jmp ecx; 
0x0002b973: cdq; mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x000bdcfb: cdq; or al, 0; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcd7: cdq; or al, 0; add ecx, 0x10d29a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcb9: cdq; or al, 0; add ecx, 0x10d2b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdc9d: cdq; or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9d03: cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000835ca: cdq; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x001895e0: cdq; push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x000dada3: cdq; push edx; push eax; call 0xdd5c0; add esp, 0x1c; ret; 
0x00088548: cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x00188caa: cdq; push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x000a92ed: cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x00079373: cdq; scasd eax, dword ptr es:[edi]; sti; dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x000a4635: cdq; stc; call dword ptr [eax + 0x68]; 
0x000a0e9e: cdq; stc; call dword ptr [eax - 0x73]; 
0x000a0ed2: cdq; stc; call dword ptr [edx - 0x73]; 
0x000304ba: cdq; sub edi, ecx; call dword ptr [eax + 0x56]; 
0x00074188: clc; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0018a0b4: clc; adc al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0010d55b: clc; adc byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffc], ah; ret 0xf20; 
0x00066d7e: clc; add al, 0x74; and dword ptr [ebx - 0x5af7b], ecx; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0009e6ed: clc; add al, 0x74; fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x000405fa: clc; add al, 0x74; ret 0xffb8; 
0x00117654: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001190f4: clc; add al, 0x77; adc byte ptr [ebx + 0x66082454], cl; mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0005ae9d: clc; add al, 0xf; xchg esp, eax; ret 0x48b; 
0x0009c5c0: clc; add al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x00090de0: clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00080139: clc; add al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000801d4: clc; add bl, byte ptr [esi + 0x5f]; pop ebp; ret; 
0x0017ef9a: clc; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edx + 0x66], ch; stc; call dword ptr [eax - 0x18]; 
0x0008aa8c: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0012374c: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x1237a0; call eax; 
0x00123890: clc; add byte ptr [eax], al; add byte ptr [ebx + 0x8b10c4], al; test eax, eax; je 0x123938; call eax; 
0x00104cb8: clc; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x000849ea: clc; add cl, byte ptr [ecx + 0x4c48301]; xor eax, eax; pop ebx; pop esi; ret; 
0x000a0f13: clc; add cl, byte ptr [edi]; inc esp; ret 0xec83; 
0x000835a4: clc; add cl, byte ptr [edi]; scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00030684: clc; add cl, byte ptr [edi]; test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x00179455: clc; add cl, byte ptr [edi]; xchg esp, eax; ret 0xf883; 
0x00154a92: clc; add dh, byte ptr [ebp + 0xa]; mov eax, ecx; ret; 
0x00099e89: clc; add dh, byte ptr [edi + 0x13]; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00128af4: clc; add dh, byte ptr [esi + 0x28]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00172384: clc; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x000528e4: clc; add dword ptr [eax], eax; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x00155bd9: clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00099eb9: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915d9: clc; add dword ptr [edi + 0x13], esi; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000ea245: clc; add dword ptr [edi + 0x17], edi; pop ebx; pop esi; pop edi; ret; 
0x0014eeb3: clc; add dword ptr [edi + 0x19], edi; add esp, 4; pop ebx; pop esi; ret; 
0x000e994f: clc; add dword ptr [edi + 0x1d], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00041cd5: clc; add dword ptr [edi + 0x1f], edi; add esp, 4; pop ebx; pop esi; ret; 
0x0010bda4: clc; add dword ptr [edi + 0x20], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00186223: clc; add dword ptr [edi + 0x21], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00180002: clc; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x000dd578: clc; add dword ptr [edi + 0x24], edi; add esp, 8; pop ebx; ret; 
0x00154f5f: clc; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x00042bcd: clc; add dword ptr [edi + 0x27], edi; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0008fefd: clc; add dword ptr [edi + 0x37], edi; pop ebx; pop esi; pop edi; ret; 
0x0010ba39: clc; add dword ptr [edi + 0x3b], edi; call dword ptr [esi]; 
0x00160743: clc; add dword ptr [edi + 0x59], edi; add esp, 4; pop ebx; pop esi; ret; 
0x00154433: clc; add dword ptr [edi + 0x59], edi; pop ebx; pop esi; pop edi; ret; 
0x00129fc9: clc; add dword ptr [edi + 0xb], edi; add esp, 8; pop ebx; ret; 
0x0007dc21: clc; add dword ptr [edi + 0xb], edi; ret; 
0x0017a9c7: clc; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009118d: clc; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x000c45d9: clc; add eax, 0x828d9874; hlt; wait; stc; call dword ptr [eax - 0x73]; 
0x0013f3ad: clc; add eax, 0xc; ret; 
0x0019a6e1: clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a93c: clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000a73d3: clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0009707d: clc; add eax, dword ptr [ecx]; ret 0x8966; 
0x000c1775: clc; add eax, ecx; pop edi; ret; 
0x000c21e1: clc; add ebp, dword ptr [ecx]; ret 0x4a8d; 
0x000c2226: clc; add ebp, dword ptr [ecx]; ret 0xc031; 
0x0003003c: clc; add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000ffecd: clc; add esi, dword ptr [edi + ebx - 0x7d]; les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0009215e: clc; add esi, dword ptr [esi + ecx + 0x5b]; pop esi; pop edi; ret; 
0x000ecbae: clc; and al, 0xf; xchg esp, eax; ret 0xd309; 
0x0003ecd1: clc; and byte ptr [ebx + esi - 0x77], dh; ret 0xc083; 
0x00095ca0: clc; and dword ptr [ebp + 4], esi; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0008f242: clc; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008fb0a: clc; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x00090d80: clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000b07d8: clc; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0019b6e8: clc; call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d8: clc; call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199708: clc; call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198532: clc; call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963d2: clc; call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194432: clc; call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190f7d: clc; call 0x1875fd; add ebx, 0x481dd; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00056eb6: clc; call dword ptr [eax + 0x51]; 
0x000481e8: clc; call dword ptr [eax + 0x52]; 
0x000c8cf7: clc; call dword ptr [eax + 0x55]; 
0x0005d53a: clc; call dword ptr [eax + 0x56]; 
0x0010b078: clc; call dword ptr [eax - 0x73]; 
0x00048244: clc; call dword ptr [eax - 1]; 
0x0010b252: clc; call dword ptr [ecx + 0x6a]; 
0x0005d691: clc; call dword ptr [edx + 0x51]; 
0x000acd66: clc; call dword ptr [esi + 0x50]; 
0x000c9c61: clc; call dword ptr [esi + 0x53]; 
0x00091d4a: clc; call dword ptr gs:[0x10]; 
0x0010e474: clc; call ptr [ebx + 0xf]; inc esp; ret 0x2ec3; 
0x000c396f: clc; cmc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013edc8: clc; cmc; je 0x13edc0; add esp, 8; pop ebx; ret; 
0x000c424a: clc; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000dbebb: clc; cmp eax, 0x8d500000; xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x001972ea: clc; daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006ec59: clc; dec dword ptr [ebp + 0x1ab50184]; jecxz 0x6ec61; jmp eax; 
0x0009b666: clc; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x000adcd8: clc; dec dword ptr [ebp - 0x664b770]; call dword ptr [edx - 0x73]; 
0x000a61fa: clc; dec dword ptr [ebp - 0x6670f7b]; call dword ptr [eax - 0x73]; 
0x0006ec52: clc; dec dword ptr [ebx - 0x39337e7c]; clc; dec dword ptr [ebp + 0x1ab50184]; jecxz 0x6ec61; jmp eax; 
0x00139b44: clc; dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x000a4e28: clc; dec dword ptr [ebx - 0x72f3db84]; xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a08c7: clc; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000c97d3: clc; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x00136526: clc; dec dword ptr [ebx - 0x7ccbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x00065a86: clc; dec dword ptr [ecx + 0x247c8bf8]; pop eax; jmp eax; 
0x00106bbf: clc; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x0006c2b4: clc; dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x000afacb: clc; dec dword ptr [edi]; inc esp; ret; 
0x0010ade1: clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x000d7ee8: clc; dec dword ptr [edi]; test byte ptr [0x31000009], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0012ed74: clc; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000ca436: clc; dec dword ptr [edi]; test byte ptr [ebp + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00050c8c: clc; dec dword ptr [edi]; test byte ptr [ebx + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000744f1: clc; dec dword ptr [edi]; test byte ptr [ebx], bh; sbb al, 0; add byte ptr [ecx], al; ret; 
0x0017f1fc: clc; dec dword ptr [edi]; test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x001877b3: clc; dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x0016731c: clc; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0007d09b: clc; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e7dff: clc; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7b91: clc; fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00041a4f: clc; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013f03c: clc; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x0013b718: clc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0009e1ab: clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0010bdd5: clc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001235f0: clc; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x6a]; 
0x0018e080: clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x0018796f: clc; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000a1b70: clc; inc dword ptr [ebx - 0x7972f33c]; fadd qword ptr [eax - 0x1a]; call dword ptr [eax + 0x57]; 
0x000a1b04: clc; inc dword ptr [ebx - 0x7972f33c]; in al, dx; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x000a1b3a: clc; inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a1b4c: clc; inc dword ptr [ebx - 0x7972f33c]; pushfd; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x0013b60b: clc; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x000a6f27: clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000606e7: clc; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000ebb24: clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000e0193: clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000709aa: clc; inc dword ptr [ecx]; ret; 
0x00071c90: clc; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000c3866: clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x0019526a: clc; inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000dd345: clc; inc ebp; stc; call dword ptr [eax + 0x56]; 
0x00076154: clc; int 0xff; dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x000ba615: clc; iretd; or al, 0; add ecx, 0x1107b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a8809: clc; jae 0xa8821; pop ebx; pop esi; pop edi; ret; 
0x0015eae9: clc; jmp dword ptr [ebp - 0x5f]; 
0x00187f39: clc; jmp dword ptr [ebp - 0x75]; 
0x0003de16: clc; jmp dword ptr [ebp - 1]; 
0x000fd96b: clc; jmp dword ptr [esi + 0xb]; 
0x000abc38: clc; jmp dword ptr [esi - 0x70]; 
0x001a9c1a: clc; jne 0x1a9c40; pop edi; pop esi; pop ebx; ret; 
0x0005ba57: clc; jns 0x5ba53; call dword ptr [eax - 0x73]; 
0x0003cab4: clc; ljmp 0x9066:0x9066000f; nop; nop; mov eax, 0xad; int 0x80; 
0x000e7bab: clc; ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x00180418: clc; lock inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00148cf7: clc; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0015a6ba: clc; mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00064fef: clc; mov byte ptr [esp + 0x62], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x0016939d: clc; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0015161f: clc; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00190cf1: clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00103122: clc; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x000bbd15: clc; mov eax, 0xc181000c; pop ss; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001398fa: clc; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x00191147: clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e21: clc; mov eax, edx; pop ebx; ret; 
0x001994db: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019a4bb: clc; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00065a89: clc; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00064caa: clc; mov edi, ecx; jmp eax; 
0x00193e1c: clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e1c: clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0009c6df: clc; or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x00043f6c: clc; or al, byte ptr [eax]; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x000b9ca4: clc; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012cf58: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012cf17: clc; or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x0009a292: clc; or dh, byte ptr [esi + eax*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0013376e: clc; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000788db: clc; or ecx, dword ptr [edi]; test esp, edi; add byte ptr [eax], al; add dh, dh; ret; 
0x000a0cef: clc; or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x0011eff8: clc; pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c420: clc; pop ds; not eax; and eax, edx; ret; 
0x0003c10b: clc; pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0018e086: clc; pop ds; ret; 
0x0003bd7c: clc; pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00193cea: clc; pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00140f80: clc; pop eax; stc; call dword ptr [eax + 0x6a]; 
0x000c052a: clc; pop ebx; pop edi; ret; 
0x0012a8e1: clc; pop ebx; pop esi; pop ebp; ret; 
0x0002fb6c: clc; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061fad: clc; pop ebx; pop esi; pop edi; ret; 
0x001967ce: clc; pop edi; call 0x1875fd; add ebx, 0x433cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001947be: clc; pop edi; call 0x1875fd; add ebx, 0x4515b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927be: clc; pop edi; call 0x1875fd; add ebx, 0x46edb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000338cd: clc; pop edi; pop ebp; ret; 
0x000b3b72: clc; pop edi; pop ebx; ret; 
0x000ba721: clc; pop edi; pop esi; pop ebx; ret; 
0x000b1d75: clc; pop edi; ret; 
0x00033900: clc; pop esi; pop edi; pop ebp; ret; 
0x000982ef: clc; push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0017fe8c: clc; push dword ptr [eax + edx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00140c04: clc; push dword ptr [eax - 0x77]; ret; 
0x00122bc7: clc; push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x0008609d: clc; push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0018901d: clc; push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x001142f2: clc; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f72a: clc; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00187975: clc; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000a0cd6: clc; push eax; jbe 0xa0ce0; ret; 
0x00041b41: clc; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00089fdd: clc; push esi; call dword ptr [eax + 0x40]; 
0x0012f2b4: clc; ret 0; 
0x00197dea: clc; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0017bd4b: clc; sti; jmp dword ptr [esi - 0x70]; 
0x000c19f7: clc; sub eax, 0x10; pop edi; ret; 
0x0009c461: clc; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0019a9ea: clc; test byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c20f5: clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0009130a: clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001398ed: clc; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x0009335c: clc; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000bb1a7: cld; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00036f1b: cld; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000788df: cld; add byte ptr [eax], al; add dh, dh; ret; 
0x000f1b62: cld; add cl, ch; ret 0xfff9; 
0x0017c6eb: cld; add cl, ch; ret 0xfffc; 
0x00187b20: cld; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x001a9f84: cld; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a7770: cld; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x000fb623: cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x000a0a56: cld; add eax, dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x00130256: cld; add eax, ebx; pop ebx; pop esi; ret; 
0x001952fd: cld; and bh, bh; inc dword ptr [ecx + 0x4455fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016e11b: cld; and eax, 0xfffffffc; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016c56d: cld; call dword ptr [eax - 0x4e1f00d]; ret; 
0x0012a6e0: cld; call dword ptr [eax - 0x73]; 
0x000f98e5: cld; call dword ptr [edi - 1]; 
0x0010decc: cld; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0010d5fe: cld; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000bb1a6: cld; cld; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a00b9: cld; cmp ah, dh; call dword ptr [eax - 0x73]; 
0x001a59e6: cld; cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a5c30; pop ebx; ret; 
0x001a426f: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a49f0; pop ebx; ret; 
0x001a70a1: cld; cmp ecx, ebx; mov eax, 0; jne 0x1a72d0; pop ebx; ret; 
0x000acb66: cld; cmp edi, esp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00172a52: cld; dec dword ptr [ebp - 0x69b757d]; call dword ptr [edi + 0x6a]; 
0x000feead: cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x00109d98: cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x001261de: cld; dec esi; stc; call dword ptr [eax + 0x55]; 
0x000dbec2: cld; fucompi st(1); call dword ptr [eax - 0x73]; 
0x000dbe24: cld; fucompi st(1); call dword ptr [eax - 1]; 
0x0011f4d6: cld; idiv bh; add esp, 0x2c; ret; 
0x0018df73: cld; idiv edi; add esp, 0x2c; ret; 
0x000610ac: cld; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013b0d5: cld; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x0013af70: cld; inc esp; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x0002f805: cld; jge 0x2f81d; add byte ptr [0x20d60b], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00055817: cld; jmp dword ptr [esi - 0x70]; 
0x001a9c35: cld; jne 0x1a9c40; pop edi; pop esi; pop ebx; ret; 
0x001a9d27: cld; jne 0x1a9d30; pop ebx; ret; 
0x0003ed54: cld; jne 0x3ed50; call dword ptr [eax - 0x73]; 
0x0005b5ec: cld; js 0x5b5e8; call dword ptr [eax - 0x18]; 
0x0016e11e: cld; lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00191ba9: cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00193de4: cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de4: cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00193e35: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e35: cld; mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x001a59e9: cld; mov eax, 0; jne 0x1a5c30; pop ebx; ret; 
0x00190cf4: cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191ecd: cld; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00191bad: cld; mov eax, edx; pop ebx; ret; 
0x0017a438: cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00095d90: cld; mov fs, ebp; call dword ptr [eax - 0x73]; 
0x00062697: cld; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00162ea8: cld; pop ebp; bnd call dword ptr [eax - 1]; 
0x000c2ce5: cld; pop edi; ret; 
0x0016e216: cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0016e287: cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00137447: cld; push ebp; stc; call dword ptr [edx + 0x50]; 
0x0005b305: cld; ret 0x12; 
0x000abc5d: cld; ret 0xffe7; 
0x0005b205: cld; ret; 
0x001497cc: cld; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00183a62: cld; stc; call dword ptr [eax - 0x18]; 
0x00123070: cld; stc; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0003fa82: cld; sub eax, esp; call dword ptr [eax - 0x73]; 
0x001a9d22: cld; xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1a9d30; pop ebx; ret; 
0x0009236f: cld; xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00091caf: cld; xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0004214f: cli; adc byte ptr [ecx], ch; ret 0xc269; 
0x0014d75e: cli; adc ch, byte ptr [ecx]; ret 0xd101; 
0x00028481: cli; add al, 0x74; adc al, 0x83; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x001b06d8: cli; add al, 0x74; adc al, 0x89; fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x00029821: cli; add al, 0x74; adc eax, 0x8301c083; ret 0x8901; 
0x00029201: cli; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00038c60: cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0003b8ca: cli; add byte ptr [eax], al; add byte ptr [ecx + 0xa024bc], al; add byte ptr [eax], al; push eax; ret; 
0x00081d34: cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x000dfdb7: cli; add ch, byte ptr [ecx]; ret 0x48d; 
0x000921d7: cli; add dh, byte ptr [ebp + eax + 0x5b]; pop esi; pop edi; ret; 
0x00091c86: cli; add dh, byte ptr [ebx - 0x77]; ret 0xe283; 
0x0010cf3e: cli; add dh, byte ptr [edi + 0xc]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00091162: cli; add dh, byte ptr [esi + 0xa]; ret; 
0x00098441: cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00100f87: cli; add dword ptr [ecx + 0xf082454], ecx; sahf; ret 0x5420; 
0x000e943e: cli; add dword ptr [edi + 0x1e], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041e04: cli; add dword ptr [edi + 0x20], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018010c: cli; add dword ptr [edi + 0x20], edi; add esp, 0x18; pop ebx; ret; 
0x00094673: cli; add dword ptr [edi + 0x21], edi; add esp, 0x18; pop ebx; ret; 
0x00040482: cli; add dword ptr [edi + 0x22], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e9549: cli; add dword ptr [edi + 0x23], edi; add esp, 0x14; pop ebx; pop esi; ret; 
0x00160a31: cli; add dword ptr [edi + 0x23], edi; add esp, 0x18; pop ebx; ret; 
0x00180080: cli; add dword ptr [edi + 0x24], edi; add esp, 0x18; pop ebx; ret; 
0x00061233: cli; add dword ptr [edi + 0x31], edi; add esp, 0x18; pop ebx; ret; 
0x00153e30: cli; add dword ptr [edi + 4], edi; ret; 
0x0009105d: cli; add dword ptr [edi + ecx - 0x7b], esi; sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000a8c4f: cli; add dword ptr [edi - 0x23], esi; pop ebx; pop esi; pop edi; ret; 
0x00098f46: cli; add dword ptr [edi], ecx; test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x00099146: cli; add dword ptr [edi], ecx; test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0004cd9f: cli; add dword ptr [edi], ecx; test eax, ebp; or byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0012caf1: cli; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x000ca032: cli; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc339; 
0x000ac742: cli; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x00148ea7: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd184; 
0x00149177: cli; and ecx, dword ptr [edi]; xchg ebp, eax; ret 0xd384; 
0x0008eafc: cli; call dword ptr [eax + 0x6a]; 
0x0010b077: cli; clc; call dword ptr [eax - 0x73]; 
0x000fb753: cli; cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x00159421: cli; cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x000a8e3b: cli; cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000843ee: cli; dec dword ptr [ebp - 0x67caf7a]; call dword ptr [eax - 0x73]; 
0x0018fd3b: cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65d9379]; call dword ptr [eax - 0x73]; 
0x0018dd7b: cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f1f79]; call dword ptr [eax - 0x73]; 
0x0018c03b: cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3f79]; call dword ptr [eax - 0x73]; 
0x00092e6d: cli; dec dword ptr [ebx - 0x72fbdb84]; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x0009321c: cli; dec dword ptr [ebx - 0xf4753a3]; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0004413c: cli; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00152e89: cli; dec dword ptr [edi]; test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x0011b723: cli; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0011f6a0: cli; idiv bh; add esp, 0x2c; ret; 
0x00153108: cli; imul eax, edx, 0xb6db6db7; ret; 
0x001722e2: cli; in al, dx; call dword ptr [eax - 0x73]; 
0x000ea2c7: cli; inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a9c76: cli; inc eax; ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca6: cli; inc eax; ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000fb654: cli; jae 0xfb6a0; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0012d3d9: cli; je 0x12d433; pop ebx; pop esi; ret; 
0x00071f2e: cli; jg 0x71f40; xchg esp, eax; ret 0xca08; 
0x00170baf: cli; jmp dword ptr [ebp - 0x75]; 
0x001165ac: cli; jmp dword ptr [esi + 3]; 
0x0007bbda: cli; jmp dword ptr [esi - 0x70]; 
0x001991bc: cli; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019924c: cli; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992dc: cli; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019936c: cli; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993fc: cli; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019948c: cli; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198cac: cli; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3c: cli; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198dcc: cli; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5c: cli; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198eec: cli; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f7c: cli; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019900c: cli; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019909c: cli; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019912c: cli; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009306b: cli; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00190d34: cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00160fb2: cli; movsd dword ptr es:[edi], dword ptr [esi]; std; call dword ptr [eax + 0x50]; 
0x00193f17: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f07: cli; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x000c1113: cli; or al, 0; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000caab2: cli; or al, byte ptr [edi]; add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000815e3: cli; or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0015b77b: cli; or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x0009a17a: cli; or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x00149a71: cli; or dword ptr [ebx + ecx - 0x7d], esi; ret; 
0x0013c929: cli; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00071dd3: cli; or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x000390d0: cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00132da6: cli; or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x00124adf: cli; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0011f6cf: cli; pop ds; call dword ptr gs:[0x10]; 
0x0008a54e: cli; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001a7e32: cli; pop edi; ret; 
0x00070e56: cli; pop edx; jbe 0x71bc0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0008a588: cli; pop esi; pop edi; pop ebp; ret; 
0x000fb5b8: cli; push 0x61759123; ret; 
0x0003c110: cli; push ds; and eax, edx; ret; 
0x00189370: cli; push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x001684a8: cli; push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00126364: cli; push ecx; stc; call dword ptr [eax + 0x55]; 
0x0006ba4a: cli; ret; 
0x000fb695: cli; ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x00149171: cli; sub al, 0xf; xchg ebp, eax; ret; 
0x00030408: cli; sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x00025dff: cli; sub cl, bh; call dword ptr [eax - 0x18]; 
0x000ad87c: cli; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000943c2: cmc; aas; stc; call dword ptr [eax - 0x18]; 
0x00062b8a: cmc; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x18]; 
0x000b80d7: cmc; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00190e6d: cmc; add byte ptr [eax + eax], 3; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00140017: cmc; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000c1ee7: cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000234c7: cmc; add dword ptr [0x2cc48300], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0005e03f: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; or eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x0014f808: cmc; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x0010dff6: cmc; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x0019aaf2: cmc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195504: cmc; and bh, bh; inc dword ptr [ecx + 0x44358c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000d9f11: cmc; and ch, 0xf; je 0xd9f30; add eax, 2; ret; 
0x0008fb6b: cmc; and eax, 0x39; cmp eax, 8; je 0x8fb78; add esp, 0xc; ret; 
0x000fb5ae: cmc; bnd jge 0xfb5e0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x0012c703: cmc; call ebx; 
0x0012c703: cmc; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000fb836: cmc; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fb622: cmc; cld; add dword ptr [ebp + 0x20b8], esp; add byte ptr [edx + 0x40], bh; cmove eax, edx; ret; 
0x0018c03a: cmc; cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3f79]; call dword ptr [eax - 0x73]; 
0x000ac2fa: cmc; cmp edx, esi; je 0xac2f0; pop ebx; pop esi; ret; 
0x000dee2d: cmc; dec dword ptr [ebp - 0x661677d]; call dword ptr [eax - 0x73]; 
0x000d8d42: cmc; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000a92ea: cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000d8d86: cmc; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x000d8cf8: cmc; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x000d8bcb: cmc; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000d5906: cmc; dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000a9c12: cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9310: cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000aaa7a: cmc; inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0x65; call 0xc24eba87; ret; 
0x0016e9f3: cmc; inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x000c63dc: cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c3970: cmc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0016e236: cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00128432: cmc; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0013ae87: cmc; inc dword ptr [ebx - 0x6d72fe1d]; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x000a4647: cmc; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000c7517: cmc; int 0xf6; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x0013edc9: cmc; je 0x13edc0; add esp, 8; pop ebx; ret; 
0x000ea413: cmc; jmp dword ptr [ebp - 0x5f]; 
0x000dee6b: cmc; jmp dword ptr [esi - 0x70]; 
0x000fb754: cmc; lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x001911f7: cmc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196c04: cmc; or edi, edi; inc dword ptr [ecx + 0x42ed8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0016cdb7: cmc; out 0xfc, eax; jmp dword ptr [esi - 0x70]; 
0x000ac2ca: cmc; pop ebx; ret; 
0x001a7df2: cmc; pop edi; ret; 
0x00164ac2: cmc; popal; stc; call dword ptr [eax - 0x18]; 
0x00164c63: cmc; popal; stc; call dword ptr [eax - 0x73]; 
0x000a9c05: cmc; push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5450c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00086d97: cmc; ret; 
0x001b43f7: cmc; sar edi, 1; dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x000848b9: cmc; stc; jmp dword ptr [esi - 0x70]; 
0x001a6df7: cmc; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00095354: cmova eax, edx; add esp, 8; pop ebx; ret; 
0x000a0cf6: cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x00099f1f: cmova eax, edx; ret; 
0x000e90f4: cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e8f49: cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c3371: cmovb eax, ecx; ret; 
0x0008dd50: cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00082333: cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0013f630: cmovb eax, edx; ret; 
0x001a38aa: cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x00094588: cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010beca: cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000dd969: cmovbe edi, ecx; call dword ptr [eax - 0x18]; 
0x0008efcf: cmovbe edx, eax; xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x00195453: cmove eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000845e7: cmove eax, ecx; ret; 
0x000a91c9: cmove eax, edx; add eax, 0x21; ret; 
0x000a917e: cmove eax, edx; add eax, 1; ret; 
0x00124f8d: cmove eax, edx; add esp, 0xc; ret; 
0x00043739: cmove eax, edx; ret; 
0x0008727d: cmove eax, esi; mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0016947d: cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x00034157: cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x00134941: cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00032e32: cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x00041d6c: cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x00041da7: cmove esi, eax; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00081087: cmovg eax, ecx; test edx, edx; jne 0x81080; ret; 
0x000c6e12: cmovg eax, edx; pop edi; ret; 
0x000c6df3: cmovg eax, edx; ret; 
0x000a6ad7: cmovne eax, ecx; pop ebx; ret; 
0x000c24b2: cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a8c7b: cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0008bd71: cmovne eax, edx; mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a9312: cmovne eax, edx; pop ebx; ret; 
0x00043373: cmovne eax, edx; ret; 
0x0005b718: cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012797f: cmovne ebx, eax; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00156573: cmovne ebx, edx; mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x000fd634: cmovne esi, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001228b5: cmovns eax, edx; ret; 
0x00093fba: cmovo edi, ecx; call dword ptr [eax - 0x18]; 
0x00040a9b: cmovs eax, ecx; pop ebx; ret; 
0x00040c4e: cmovs eax, edx; add esp, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x001347ce: cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x00028352: cmovs eax, edx; ret; 
0x00040a98: cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00162ea7: cmp ah, 0x5d; bnd call dword ptr [eax - 1]; 
0x00168c92: cmp ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0011e02b: cmp ah, 0xff; call dword ptr [eax - 0x72f3137d]; sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001a5612: cmp ah, byte ptr [ebx - 0x35]; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000a00ba: cmp ah, dh; call dword ptr [eax - 0x73]; 
0x000a51b3: cmp al, 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00120b97: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120b97: cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000a0df2: cmp al, 0; add byte ptr [ebp - 0x7cf88a37], al; les ecx, ptr [eax]; pop ebx; ret; 
0x000a1a0f: cmp al, 0; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000c3829: cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000c3c57: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x188b; 
0x000c3b47: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0x288b; 
0x000c3c0c: cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000fb5d3: cmp al, 0x11; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb733: cmp al, 0x11; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000fba3e: cmp al, 0x11; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x000f1c05: cmp al, 0x1a; mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8e45: cmp al, 0x1a; mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x00048670: cmp al, 0x24; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00047bcc: cmp al, 0x24; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x0004614e: cmp al, 0x24; add dword ptr [edi], ecx; xchg esp, eax; ret 0xf685; 
0x001875fa: cmp al, 0x24; ret; 
0x00100e8b: cmp al, 0x29; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x00139efd: cmp al, 0x29; ret 0x4489; 
0x00034bc5: cmp al, 0x2a; adc eax, 0x824b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x000fad3d: cmp al, 0x2a; je 0xfad45; cmp al, 0x3f; jne 0xfad59; mov eax, 1; ret; 
0x00081fd2: cmp al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000609a5: cmp al, 0x32; stc; call dword ptr [ebp + 0x50]; 
0x000d9d02: cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x0013fbcb: cmp al, 0x39; ret; 
0x000fad41: cmp al, 0x3f; jne 0xfad59; mov eax, 1; ret; 
0x000ac7d0: cmp al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000dee25: cmp al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0008eb4d: cmp al, 0x51; call eax; 
0x000c52c7: cmp al, 0x51; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0008e9db: cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008448d: cmp al, 0x52; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0008456c: cmp al, 0x52; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x001263cc: cmp al, 0x53; stc; call dword ptr [eax + 0x55]; 
0x0008ad0f: cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x00175d3f: cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x00174f93: cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00140f7f: cmp al, 0x58; stc; call dword ptr [eax + 0x6a]; 
0x000c7a79: cmp al, 0x5b; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000d21cb: cmp al, 0x5b; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001b479e: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x00026e69: cmp al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00124312: cmp al, 0x5b; ret; 
0x000aaa81: cmp al, 0x65; call 0xc24eba87; ret; 
0x001772b4: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177324: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177394: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f7: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177457: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c4: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177544: cmp al, 0x65; sub eax, dword ptr [0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x0011ec5a: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00177244: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x000dad16: cmp al, 0x65; sub edx, dword ptr [0x14]; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x00192726: cmp al, 0x70; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00094a95: cmp al, 0x72; add al, 0x39; ret 0x6f72; 
0x0003217f: cmp al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x000d9d05: cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000479c8: cmp al, 0x78; stc; call dword ptr [eax + 0x68]; 
0x0004a408: cmp al, 0x78; stc; call dword ptr [eax - 0x73]; 
0x000798cd: cmp al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x000e9088: cmp al, 0x81; les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001493dd: cmp al, 0x81; les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000fc113: cmp al, 0x82; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00064fec: cmp al, 0x82; mov eax, edi; mov byte ptr [esp + 0x62], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00064ca7: cmp al, 0x82; mov eax, edi; mov edi, ecx; jmp eax; 
0x0017575b: cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0009182b: cmp al, 0x83; in al, dx; or al, 0xff; jae 0x91836; call dword ptr [ebx]; 
0x0012edc8: cmp al, 0x83; in al, dx; or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x000d194b: cmp al, 0x83; in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x000fd54a: cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00120787: cmp al, 0x83; les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x000816b6: cmp al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008309c: cmp al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x000981e9: cmp al, 0x87; stc; call dword ptr [eax - 0x18]; 
0x0005a573: cmp al, 0x89; call 0x5d6503d5; ret; 
0x000d2051: cmp al, 0x89; call 0x5d6c7eb3; ret; 
0x000e83f2: cmp al, 0x89; call 0x5d6de254; ret; 
0x0012fdca: cmp al, 0x89; call 0x5d725c2c; ret; 
0x00140685: cmp al, 0x89; call 0x5d7364e7; ret; 
0x00052275: cmp al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0002e06f: cmp al, 0x89; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x001217d4: cmp al, 0x89; inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x001301a1: cmp al, 0x89; inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00094fed: cmp al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000a8a40: cmp al, 0x89; ret 0x448b; 
0x00182c42: cmp al, 0x89; ret 0x489; 
0x0012581f: cmp al, 0x89; ret 0xfdb8; 
0x00026bb5: cmp al, 0x89; ret; 
0x0009e703: cmp al, 0x89; stc; call dword ptr [eax - 0x18]; 
0x00034b4e: cmp al, 0x8b; add al, 0x90; ret; 
0x0007abb2: cmp al, 0x8b; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x000425bd: cmp al, 0x8b; inc eax; inc eax; ret; 
0x0012de55: cmp al, 0x8b; je 0x12de7d; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013faf3: cmp al, 0x8b; jl 0x13fb1b; sbb al, 0x39; ret; 
0x0012427a: cmp al, 0x8b; push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0002a0a4: cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0002b809: cmp al, 0x8d; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x00028881: cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002879c: cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00174f45: cmp al, 0x8d; xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x0002b1d3: cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x000a92b8: cmp al, 0x8e; idiv bh; and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x0010a797: cmp al, 0x90; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x000a4e43: cmp al, 0x95; stc; call dword ptr [eax - 0x18]; 
0x000a4e43: cmp al, 0x95; stc; call dword ptr [eax - 0x18]; ret; 
0x001658a8: cmp al, 0x9c; bnd call dword ptr [eax - 1]; 
0x000d8ab3: cmp al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x001507eb: cmp al, 0xb1; stc; call dword ptr [eax - 0x18]; 
0x001517ff: cmp al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0008c36e: cmp al, 0xc1; call 0x3e4b4b85; mov edx, dword ptr [edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x0007c778: cmp al, 0xc1; call 0x3e4b4f8f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00081141: cmp al, 0xc1; call 0x3e4e9958; add esp, 4; pop ebx; pop esi; ret; 
0x000d4cf8: cmp al, 0xc9; idiv bh; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x00061713: cmp al, 0xc; ret 0xff50; 
0x000c54cc: cmp al, 0xcf; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000bdd3a: cmp al, 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a1b1e: cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x0013332b: cmp al, 0xe8; outsd dx, dword ptr [esi]; add bh, cl; jmp dword ptr [ebp - 0x75]; 
0x001163e7: cmp al, 0xe8; ret; 
0x0019e873: cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x000db89b: cmp al, 0xf; xchg esp, eax; ret 0xd338; 
0x0007ffb9: cmp al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0002c35c: cmp al, 0xff; dec dword ptr [ebx + 0x390c2444]; ret 0x1a73; 
0x0019398e: cmp al, 0xff; inc dword ptr [ecx + 0x45c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00070a2e: cmp al, 1; add byte ptr [eax], al; add byte ptr [ebx - 0x37b36a64], cl; clc; inc dword ptr [ecx]; ret; 
0x001227ca: cmp al, 1; ret 0x1389; 
0x000ab771: cmp al, 1; ret; 
0x0012c7a7: cmp al, 2; je 0x12c7d6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x00122ef0: cmp al, 3; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb4d3: cmp al, 3; jne 0xfb570; mov eax, edx; pop ebx; ret; 
0x00195b9b: cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001872bc: cmp al, 4; jne 0x249d3; mov eax, 8; add esp, 0xc; ret; 
0x000659de: cmp al, ah; mov edi, dword ptr [esp + 0x18]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00126092: cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x00195d84: cmp al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00040c0f: cmp al, byte ptr [eax]; jne 0x40c20; add esp, 4; pop ebx; pop esi; ret; 
0x001904ae: cmp al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00115351: cmp al, byte ptr [ebx + 0x5e5b74c4]; ret; 
0x0012fb50: cmp al, byte ptr [ebx - 0x2776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x00061d9d: cmp al, byte ptr [ebx - 0x7972f714]; ret; 
0x00061125: cmp al, byte ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x00171f8a: cmp al, byte ptr [ecx]; add byte ptr [eax], al; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000c2a3d: cmp al, byte ptr [edx - 1]; jne 0xc2beb; pop esi; xor eax, eax; pop ebx; ret; 
0x001a41f1: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a72bb: cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x00123bfb: cmp al, byte ptr [esi]; add byte ptr [ecx + 0x119216c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000a23cf: cmp al, byte ptr [esp + esi*2]; sub eax, 0x8d04ec83; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x001882a6: cmp al, ch; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00102b47: cmp al, ch; ret; 
0x000c1cf5: cmp al, dh; pop edi; ret; 
0x00032009: cmp bh, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0002b802: cmp bh, 0xff; dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x0003bca6: cmp bh, 0xff; inc eax; shr eax, 0x1f; ret; 
0x0003e20a: cmp bh, 0xff; jmp dword ptr [ecx]; 
0x0018df72: cmp bh, ah; idiv edi; add esp, 0x2c; ret; 
0x0013f1cb: cmp bh, al; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00193d9c: cmp bh, bh; inc dword ptr [ecx + 0x45841c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193d7e: cmp bh, bh; inc dword ptr [ecx + 0x4585fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193b95: cmp bh, bh; inc dword ptr [ecx + 0x45a48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00147b41: cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x00129a55: cmp bh, byte ptr [eax + 0xd0]; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129975: cmp bh, byte ptr [eax + 0xd2]; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0019667b: cmp bh, dl; jmp dword ptr [esi - 0x70]; 
0x00116e32: cmp bl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0012a0e5: cmp bl, 0xff; call dword ptr [eax - 0x18]; 
0x000f21dc: cmp bl, 0xff; call dword ptr [edi - 1]; 
0x000f287a: cmp bl, 0xff; call dword ptr [edx - 0x77]; 
0x0012a0d2: cmp bl, 0xff; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x000f2a6f: cmp bl, 0xff; dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x000f36aa: cmp bl, 0xff; dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000f23e2: cmp bl, 0xff; inc dword ptr [ecx]; ret; 
0x0007f826: cmp bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00158874: cmp bl, byte ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x0017606b: cmp bl, dh; call dword ptr [eax - 0x48]; 
0x00175f05: cmp bl, dh; call dword ptr [edx - 0x73]; 
0x00176369: cmp bl, dh; call dword ptr [edx - 0x75]; 
0x001999ea: cmp byte ptr [0x1c030004], al; mov edi, edi; jecxz 0x1999dc; add eax, 0x81fffedc; ret; 
0x00121b0f: cmp byte ptr [0xffffeff0], ah; or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x0008d809: cmp byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; mov dword ptr [eax + 0x1abc], 0; ret; 
0x00121d3f: cmp byte ptr [eax + 0x36], bh; call dword ptr gs:[0x10]; 
0x00139505: cmp byte ptr [eax + 0x56], 0xf9; call dword ptr [eax - 0x75]; 
0x0008861b: cmp byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x00169b5a: cmp byte ptr [eax + 0x62], 0xf9; call dword ptr [eax + 0x57]; 
0x001675de: cmp byte ptr [eax + 0x62], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x0012f4c9: cmp byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00131729: cmp byte ptr [eax + 0x92], bh; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000c0fbe: cmp byte ptr [eax + 0xc030010], ah; xchg ecx, eax; jmp ecx; 
0x0014a6ea: cmp byte ptr [eax + 0xffffff], 0xf; inc esp; ret; 
0x000342f6: cmp byte ptr [eax + 1], 0; add byte ptr [ebx + 0x548b0204], cl; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x00032e66: cmp byte ptr [eax + 1], 0; add byte ptr [ebx + 0x8b0204], cl; mov eax, dword ptr [eax + 0x54]; ret; 
0x000fc114: cmp byte ptr [eax + 1], 0x5b; pop esi; pop edi; ret; 
0x001a94ef: cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000a3fd8: cmp byte ptr [eax + eax], al; add bl, ch; ret 0x9066; 
0x0013ae84: cmp byte ptr [eax + ebx*2 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa4544]; cmovne eax, edx; pop ebx; ret; 
0x00047a77: cmp byte ptr [eax - 0x18], dl; and bh, byte ptr [ebx - 0x3b7cfff9]; adc byte ptr [ecx - 0x7ab3dbbc], cl; ror byte ptr [edi], 0x84; ret 0x29; 
0x00035171: cmp byte ptr [eax], 0; jne 0x35180; mov eax, edx; add esp, 0xc; ret; 
0x000351b1: cmp byte ptr [eax], 0; jne 0x351c0; mov eax, edx; add esp, 0xc; ret; 
0x000b8472: cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b7d03: cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000c1d25: cmp byte ptr [eax], ah; pop edi; ret; 
0x00174f2f: cmp byte ptr [eax], al; add byte ptr [eax], al; add bh, bh; jne 0x174f87; push edi; call dword ptr [eax + 0x14]; 
0x0011b957: cmp byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x1772; 
0x00104521: cmp byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00069700: cmp byte ptr [eax], al; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x00035172: cmp byte ptr [eax], al; jne 0x35180; mov eax, edx; add esp, 0xc; ret; 
0x000351b2: cmp byte ptr [eax], al; jne 0x351c0; mov eax, edx; add esp, 0xc; ret; 
0x00186122: cmp byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; jne 0x186130; pop ebx; ret; 
0x001a556e: cmp byte ptr [eax], al; ret 0xf66; 
0x00196aaa: cmp byte ptr [eax], dh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1d15: cmp byte ptr [eax], dl; pop edi; ret; 
0x000d9cfa: cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0005adb2: cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000a9b67: cmp byte ptr [ebp + ecx*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x0002e382: cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax + 0x68]; 
0x0002e0cd: cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax - 0x73]; 
0x0002e35f: cmp byte ptr [ebp - 0x695f379], cl; call dword ptr [eax - 0x73]; 
0x00167454: cmp byte ptr [ebp - 0x69d7a80], cl; jmp dword ptr [ebp - 0x75]; 
0x001617bd: cmp byte ptr [ebp - 0x69f3752], cl; call dword ptr [ebp - 0x73]; 
0x0010f073: cmp byte ptr [ebp - 0x6b6c27d], cl; call dword ptr [eax - 0x18]; 
0x000c6a84: cmp byte ptr [ebp - 0x6d5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x00160e55: cmp byte ptr [ebp - 0x76db8b40], al; ret; 
0x000afd7e: cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0004b2cb: cmp byte ptr [ebx + 0x108247c], cl; ret 0xd389; 
0x00047e0b: cmp byte ptr [ebx + 0x10c247c], cl; ret 0xd389; 
0x0014d4d5: cmp byte ptr [ebx + 0x29482454], cl; ret 0x4c8b; 
0x001579d7: cmp byte ptr [ebx + 0x39082444], cl; ret 0xc074; 
0x0002de93: cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x0002ca03: cmp byte ptr [ebx + 0x39102444], cl; ret; 
0x000425ba: cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000e7c57: cmp byte ptr [ebx + 0x4c8d08ec], al; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0008c687: cmp byte ptr [ebx + 0x535608ec], al; call dword ptr [edi + 0x18]; 
0x0013a0b4: cmp byte ptr [ebx + 0x57], 0xf9; call dword ptr [eax - 0x18]; 
0x000c11c1: cmp byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000a912d: cmp byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00081aea: cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000a1ba3: cmp byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x001676ff: cmp byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x0003bef0: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; fsubp st(1); ret; 
0x0003bf22: cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x00028dc7: cmp byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; jmp eax; 
0x00061a97: cmp byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; ret; 
0x001474a2: cmp byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00072c7b: cmp byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00194d2a: cmp byte ptr [ebx + 4], cl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000aaa77: cmp byte ptr [ebx + ebp*8 - 0x1a7f000b], 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000e73f7: cmp byte ptr [ebx + ecx*4], al; je 0xe7420; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000f6387: cmp byte ptr [ebx + edi*2], 0xeb; call dword ptr [eax + 0x6a]; 
0x00127af4: cmp byte ptr [ebx + esi*8 + 0x10c483ff], bl; add esp, 0xc; ret; 
0x0008e843: cmp byte ptr [ebx - 0x3b7ce3c0], cl; and al, 0x5b; pop esi; jmp eax; 
0x00074b2f: cmp byte ptr [ebx - 0x52b7b], cl; inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x00120e46: cmp byte ptr [ebx - 0x749fdba4], cl; je 0x120e72; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012581b: cmp byte ptr [ebx - 0x76c3dbb4], cl; ret 0xfdb8; 
0x000639b4: cmp byte ptr [ebx - 0x76dbdbb4], cl; ret; 
0x000ec8af: cmp byte ptr [ebx - 0x76ebdba4], cl; ret 0x2db9; 
0x00143689: cmp byte ptr [ebx], 0x2e; je 0x143698; add esp, 8; pop ebx; ret; 
0x0009ff64: cmp byte ptr [ebx], 0x2f; jne 0x9ffb0; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00128e74: cmp byte ptr [ebx], al; add byte ptr [eax], al; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x00157b86: cmp byte ptr [ecx + 0x24448b18], cl; sbb al, 0x89; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x000a3be7: cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x001217d1: cmp byte ptr [ecx + 0x42893c7a], cl; xor al, 0x5b; pop esi; pop edi; ret; 
0x000ffe15: cmp byte ptr [ecx + 0x42e857e8], cl; ret; 
0x0016b092: cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016b192: cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016b0e6: cmp byte ptr [ecx + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x00150e55: cmp byte ptr [ecx + ecx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00079ab3: cmp byte ptr [ecx + edi*2 - 0x17af0007], 0x52; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00087554: cmp byte ptr [ecx + edi*8 + 0x14c483ff], bh; xor eax, eax; pop ebx; pop esi; ret; 
0x000e1daf: cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x00066cc9: cmp byte ptr [ecx - 0x5b77b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00069b0a: cmp byte ptr [ecx - 0x5cf7b], cl; dec dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x00130199: cmp byte ptr [ecx - 0x74ebdbbc], cl; inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000cf823: cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x00174c1c: cmp byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x00190cc1: cmp byte ptr [ecx - 1], ch; inc dword ptr [ecx + 0x4841bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0002acad: cmp byte ptr [ecx - 7], dh; call dword ptr [eax - 0x18]; 
0x0016947a: cmp byte ptr [ecx], 0; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x0013144d: cmp byte ptr [ecx], 0; je 0x131458; ret; 
0x0008f3a4: cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x000b8473: cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b7d04: cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x000d9cf7: cmp byte ptr [ecx], bh; dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0007de32: cmp byte ptr [ecx], bh; ret; 
0x000e73fc: cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e3758: cmp byte ptr [ecx], ch; sar byte ptr [ecx], 1; ret; 
0x00178f6d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0x2a; cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; call ecx; 
0x00178e8d: cmp byte ptr [ecx], dh; rcl byte ptr [edi - 0x18], 0xa; cmpsd dword ptr [esi], dword ptr es:[edi]; hlt; call ecx; 
0x0005e0de: cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x001a9c07: cmp byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000c54cb: cmp byte ptr [edi + ecx*8], 0xf6; push esi; inc ecx; jnp 0xc54d8; cmove eax, edx; ret; 
0x000798cc: cmp byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x0019006d: cmp byte ptr [edi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x00140a83: cmp byte ptr [edi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x00092e5e: cmp byte ptr [edi], 0xf9; call dword ptr [eax - 0x73]; 
0x000325a7: cmp byte ptr [edi], cl; add byte ptr [edx - 3], 0xff; jmp dword ptr [esi - 0x70]; 
0x00025423: cmp byte ptr [edi], cl; dec ecx; ret 0xc789; 
0x000408a2: cmp byte ptr [edi], cl; inc ebp; ret; 
0x001a3fb8: cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a4979: cmp byte ptr [edi], dl; ret 0x3273; 
0x001a3fa3: cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a495f: cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a3f8e: cmp byte ptr [edi], dl; ret 0x5073; 
0x001a3f79: cmp byte ptr [edi], dl; ret 0x6273; 
0x001a4945: cmp byte ptr [edi], dl; ret 0x6673; 
0x001a3914: cmp byte ptr [edi], dl; ret 0x830f; 
0x0018972e: cmp byte ptr [edx + 0x56], dl; call dword ptr [eax + 0x48]; 
0x001a96ac: cmp byte ptr [edx + 0xb], 0; je 0x1a9732; mov eax, 0xc; pop edi; ret; 
0x001a96e4: cmp byte ptr [edx + 0xf], 0; je 0x1a9746; mov eax, 0x10; pop edi; ret; 
0x0019e814: cmp byte ptr [edx + 0xf], cl; jne 0x19e670; pop ebp; xor eax, eax; ret; 
0x0013f85d: cmp byte ptr [edx + 2], 0; jne 0x13f869; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0016903e: cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x000f2b47: cmp byte ptr [edx + eax*2], 0xeb; call dword ptr [eax + 0x6a]; 
0x000c488e: cmp byte ptr [edx - 1], dl; je 0xc48b7; sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001659eb: cmp byte ptr [edx - 7], ah; call dword ptr [eax - 0x18]; 
0x00165b7e: cmp byte ptr [edx - 7], ah; call dword ptr [eax - 0x73]; 
0x00040c0e: cmp byte ptr [edx], 0; jne 0x40c20; add esp, 4; pop ebx; pop esi; ret; 
0x00174c15: cmp byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8938c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008c293: cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0015b190: cmp byte ptr [esi + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x001937aa: cmp byte ptr [esi + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a92b7: cmp byte ptr [esi + ecx*4], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; or al, 0x5b; call 0xc24ea2c7; ret; 
0x0013af62: cmp byte ptr [esi + edi - 0xb], 0xff; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x00171887: cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001927c1: cmp byte ptr [esi - 1], cl; inc dword ptr [ecx + 0x46edbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010b987: cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x001658a7: cmp byte ptr [esp + ebx*4], 0xf2; call dword ptr [eax - 1]; 
0x000325ca: cmp ch, 0xff; push esi; ret 0xf03; 
0x001a4144: cmp ch, bh; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a721a: cmp ch, bh; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x001592b9: cmp ch, bl; mov gs, eax; out dx, eax; and bh, dh; jmp dword ptr [esi - 0x70]; 
0x000c3650: cmp cl, 0; je 0xc3656; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000650d1: cmp cl, 0x5a; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x000d06fa: cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x000fe225: cmp cl, byte ptr [eax - 7]; call dword ptr [eax + 0x55]; 
0x000310de: cmp cl, byte ptr [ecx - 0x6bf03fab]; ret 0x5f3c; 
0x00159422: cmp cl, byte ptr [edi]; xchg esp, eax; ret 0xc084; 
0x0003075e: cmp cl, byte ptr [edi]; xchg esp, eax; ret; 
0x001a40a8: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a715e: cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x001a5c74: cmp cl, byte ptr [edx]; je 0x1a5c90; mov eax, 1; ja 0x1a5c81; neg eax; ret; 
0x000c2935: cmp cl, byte ptr [edx]; jne 0xc293d; xor eax, eax; pop ebx; ret; 
0x00126173: cmp cl, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x000aaa48: cmp cl, dl; je 0xaaa4d; inc eax; pop edi; ret; 
0x00159ecb: cmp cx, 2; je 0x159ee0; mov eax, edx; pop ebx; pop esi; ret; 
0x001a4a03: cmp cx, bx; pop ebx; mov eax, 1; ja 0x1a4a10; neg eax; ret; 
0x0016bd1b: cmp dh, 0xff; add esp, 0x1c; ret; 
0x00171ad9: cmp dh, 0xff; call dword ptr [ecx + 0x51]; 
0x00171ad9: cmp dh, 0xff; call dword ptr [ecx + 0x51]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00097bbd: cmp dh, 0xff; dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x0003cce0: cmp dh, 0xff; ret; 
0x000e08d4: cmp dh, ah; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00175e63: cmp dh, bl; call dword ptr [edx - 0x73]; 
0x00150979: cmp dh, cl; call dword ptr [ebx + 0x50]; 
0x000c32af: cmp dh, cl; jne 0xc32b6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x001a6d77: cmp dh, dh; ret 0x7504; 
0x0012855b: cmp dl, 0x2c; jne 0x12851e; pop ebx; pop esi; pop edi; ret; 
0x0011b722: cmp dl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00032e2f: cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x0009815a: cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000a1b02: cmp dl, byte ptr [esi]; clc; inc dword ptr [ebx - 0x7972f33c]; in al, dx; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x0008d719: cmp dword ptr [eax + 0x100001a], -0x7d; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000363ca: cmp dword ptr [eax + 0x29], -7; call dword ptr [eax + 0x6a]; 
0x00126121: cmp dword ptr [eax + 0x4d], -7; call dword ptr [eax + 0x55]; 
0x000609c2: cmp dword ptr [eax + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x0016a2fe: cmp dword ptr [eax + 0x62], -7; call dword ptr [eax + 0x51]; 
0x0016acfa: cmp dword ptr [eax + 0x62], -7; call dword ptr [eax + 0x57]; 
0x001396c7: cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x00150407: cmp dword ptr [eax + 8], edx; jne 0x150400; ret; 
0x0012ba77: cmp dword ptr [eax - 0x5b], -7; call dword ptr [eax - 0x18]; 
0x0011f490: cmp dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x000edc00: cmp dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x73]; 
0x00087e41: cmp dword ptr [eax - 0x7d], -7; call dword ptr [eax - 0x18]; 
0x00136721: cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x00186121: cmp dword ptr [eax], 0; mov ebx, dword ptr [esp + 0x14]; jne 0x186130; pop ebx; ret; 
0x001659ea: cmp dword ptr [eax], 0x62; stc; call dword ptr [eax - 0x18]; 
0x00165b7d: cmp dword ptr [eax], 0x62; stc; call dword ptr [eax - 0x73]; 
0x0008f3a3: cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x0010c3fb: cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00135d0e: cmp dword ptr [eax], eax; add byte ptr [ebx + 0x57500cc4], al; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0016947b: cmp dword ptr [eax], eax; cmove ecx, eax; pop ebx; pop esi; mov eax, ecx; ret; 
0x0013144e: cmp dword ptr [eax], eax; je 0x131458; ret; 
0x00176fe6: cmp dword ptr [eax], esi; je 0x176ff0; add esp, 4; pop ebx; pop esi; ret; 
0x0015578a: cmp dword ptr [ebp + 0x5e], -7; call dword ptr [eax - 0x18]; 
0x0015591d: cmp dword ptr [ebp + 0x5e], -7; call dword ptr [eax - 0x73]; 
0x0016ed34: cmp dword ptr [ebp + 0x64], -7; call dword ptr [edx + 0x6a]; 
0x0002439b: cmp dword ptr [ebp - 0x30], 0; je 0x243bc; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000c69d0: cmp dword ptr [ebp - 0x74f38b01], eax; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x0009a9a3: cmp dword ptr [ebx + 0x17408f8], eax; ret; 
0x00060837: cmp dword ptr [ebx + 0x32], -7; call dword ptr [ecx + 0x50]; 
0x0008fb6e: cmp dword ptr [ebx + 0x47408f8], eax; add esp, 0xc; ret; 
0x000a8fa9: cmp dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x0013d7f1: cmp dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x000fb4d2: cmp dword ptr [ebx + eax], 0x26; jne 0xfb570; mov eax, edx; pop ebx; ret; 
0x001263cb: cmp dword ptr [ebx + edx*2], -7; call dword ptr [eax + 0x55]; 
0x00148d07: cmp dword ptr [ebx - 7], ebx; call dword ptr [eax - 0x18]; 
0x00159754: cmp dword ptr [ecx + 0x10], edx; jb 0x159761; setne al; movzx eax, al; neg eax; ret; 
0x00024abd: cmp dword ptr [ecx + 0x94], edx; jne 0x24a92; ret; 
0x0014c919: cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000e7f59: cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00137fdf: cmp dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x00176c69: cmp dword ptr [ecx + eax], 0; pop ebx; pop esi; pop edi; ret; 
0x00174a2c: cmp dword ptr [ecx + edi*2], -0xd; call dword ptr [eax - 0x73]; 
0x000d3db8: cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x000fb5d2: cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb732: cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x000fba3d: cmp dword ptr [ecx + edx], 0x26; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x001507ea: cmp dword ptr [ecx + esi*4], -7; call dword ptr [eax - 0x18]; 
0x00050520: cmp dword ptr [ecx - 0x7697db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x0004ca66: cmp dword ptr [ecx - 0x76a7db94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x000495c2: cmp dword ptr [ecx - 0x76afdb94], ecx; fisttp qword ptr [ecx - 0x76307608]; ret; 
0x0009d411: cmp dword ptr [ecx], 2; je 0x9d3d2; pop ebx; pop esi; ret; 
0x0003ec33: cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c1d36: cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x0009065e: cmp dword ptr [ecx], esi; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000d9c1e: cmp dword ptr [edi + 0x10], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9c33: cmp dword ptr [edi + 0x14], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9c48: cmp dword ptr [edi + 0x18], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9c63: cmp dword ptr [edi + 0x1c], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9c7e: cmp dword ptr [edi + 0x20], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9c93: cmp dword ptr [edi + 0x24], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9ca8: cmp dword ptr [edi + 0x28], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9cb3: cmp dword ptr [edi + 0x2c], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9cce: cmp dword ptr [edi + 0x30], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9ce3: cmp dword ptr [edi + 0x34], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9cf8: cmp dword ptr [edi + 0x38], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9d03: cmp dword ptr [edi + 0x3c], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9b9b: cmp dword ptr [edi + 0xc], ecx; jne 0xd9d10; xor eax, eax; pop edi; pop esi; ret; 
0x000d9be8: cmp dword ptr [edi + 8], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x00095db7: cmp dword ptr [edi + ecx*4], -0x1b; call dword ptr [eax + 0x56]; 
0x0016fa73: cmp dword ptr [edi - 0x3b7d0000], ebx; adc byte ptr [ebp - 0x7c248b40], al; in al, dx; add al, 0x83; ret; 
0x000617d8: cmp dword ptr [edi], 0x33; stc; call dword ptr [eax + 0x51]; 
0x000d9bbd: cmp dword ptr [edi], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x0014c8d2: cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x0009b2e0: cmp dword ptr [edx + 0x14], ecx; je 0x9b2f0; ret; 
0x000845e4: cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x0014c8ae: cmp dword ptr [edx + 2], ebx; je 0x14c8b8; pop ebx; ret; 
0x0012c7a6: cmp dword ptr [edx + eax], 0x26; je 0x12c7d6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x001517fe: cmp dword ptr [edx + esi*4], -7; call dword ptr [eax - 0x73]; 
0x000609a4: cmp dword ptr [edx + esi], -7; call dword ptr [ebp + 0x50]; 
0x000fe224: cmp dword ptr [edx], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00126172: cmp dword ptr [edx], 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00158873: cmp dword ptr [edx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0008e243: cmp dword ptr [edx], eax; add byte ptr [eax], al; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x0009d412: cmp dword ptr [edx], eax; je 0x9d3d2; pop ebx; pop esi; ret; 
0x0009da9a: cmp dword ptr [edx], ecx; jl 0x9da90; je 0x9dab3; xor eax, eax; pop ebx; ret; 
0x0009daea: cmp dword ptr [edx], ecx; jl 0x9dae0; mov edx, 0; cmovne eax, edx; ret; 
0x001a8eb6: cmp dword ptr [esi + 0xf], esp; xlatb; ret 0x498d; 
0x000dee24: cmp dword ptr [esi + eax*2], -7; call dword ptr [eax - 0x18]; 
0x000fbc22: cmp dword ptr [esi + ecx*4], ebx; je 0xfbc38; pop ebx; pop esi; ret; 
0x001758a9: cmp dword ptr [esi], 0x65; stc; call dword ptr [eax - 0x73]; 
0x00177050: cmp dword ptr [esi], eax; jg 0x177040; add esp, 4; pop ebx; pop esi; ret; 
0x000e79d9: cmp dword ptr [esp + 0x14], 1; je 0xe79e8; add esp, 0xc; ret; 
0x000e7ac9: cmp dword ptr [esp + 0x14], 1; je 0xe7ad8; add esp, 0xc; ret; 
0x0003d7e4: cmp dword ptr [esp + 4], 0; je 0x3d800; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000349b6: cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x000944f8: cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0013f628: cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x000e7baa: cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x000e7b90: cmp eax, -0x26; jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e7dfe: cmp eax, -0x26; jne 0xe7e40; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0015a6b9: cmp eax, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x0015161e: cmp eax, -0x4f; stc; call dword ptr [eax - 0x73]; 
0x0010e940: cmp eax, -0x5f; stc; call dword ptr [eax - 0x18]; 
0x0013edc7: cmp eax, -0xb; je 0x13edc0; add esp, 8; pop ebx; ret; 
0x000b42a9: cmp eax, -1; inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0017fe8b: cmp eax, -1; je 0x17fea0; add esp, 4; pop ebx; pop esi; ret; 
0x000a25c6: cmp eax, -1; je 0xa25d0; add esp, 0xc; ret; 
0x0010e473: cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x001877b2: cmp eax, -1; sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x00125738: cmp eax, -1; setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00124401: cmp eax, 0x190c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00095c9f: cmp eax, 0x21; jne 0x95ca8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000e80b5: cmp eax, 0x3b9ac9ff; ja 0xe8158; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000a0a55: cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x0013a186: cmp eax, 0x3ff; ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x000e7e02: cmp eax, 0x4244c8d; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000a8f7a: cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x000c4788: cmp eax, 0x440f0000; ret 0x4489; 
0x000c4d31: cmp eax, 0x440f0000; ret 0x8b65; 
0x000dd344: cmp eax, 0x45; stc; call dword ptr [eax + 0x56]; 
0x0003f1f4: cmp eax, 0x473ff00; call eax; 
0x00024dde: cmp eax, 0x5004ec83; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000a0cd5: cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x0017349a: cmp eax, 0x560cec83; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001892a8: cmp eax, 0x593; ja 0x1892c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007b921: cmp eax, 0x593; ja 0x7bb90; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007beae: cmp eax, 0x593; ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee72: cmp eax, 0x593; ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000813bc: cmp eax, 0x593; ja 0x813f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081b8e: cmp eax, 0x593; ja 0x81bc0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00085097: cmp eax, 0x593; ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00088010: cmp eax, 0x593; ja 0x88040; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088d39: cmp eax, 0x593; ja 0x88d80; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008bde2: cmp eax, 0x593; ja 0x8be40; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008be8c: cmp eax, 0x593; ja 0x8beb8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c681: cmp eax, 0x593; ja 0x8c6c0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00179916: cmp eax, 0x5b18c483; ret; 
0x000b4040: cmp eax, 0x5bffffff; ret; 
0x00060b19: cmp eax, 0x6a04ec83; add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x0005ba56: cmp eax, 0x79; stc; call dword ptr [eax - 0x73]; 
0x001721bc: cmp eax, 0x81000154; ret; 
0x000fadbc: cmp eax, 0x810008c8; ret; 
0x000abcbc: cmp eax, 0x81000db9; ret; 
0x0018013f: cmp eax, 0x83fff0fb; les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0012e29f: cmp eax, 0x83ffff10; les esp, ptr [eax]; add esp, 0xc; ret; 
0x001b09f2: cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x001b09fc: cmp eax, 0x840f0800; ret; 
0x0017f8a7: cmp eax, 0x8914c483; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00071dd7: cmp eax, 0x89fffff2; ret 0xc083; 
0x001693cf: cmp eax, 0x8bffecaf; jl 0x1693fa; sub byte ptr [ebp - 0x649db79], cl; call dword ptr [eax - 0x73]; 
0x000dbebc: cmp eax, 0x8d500000; xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x000df25d: cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x000796a7: cmp eax, 0xb804c483; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a0cee: cmp eax, 0xb; mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x000a8e3c: cmp eax, 0xc083f175; add dword ptr [edx + edx*8 + 0xba], eax; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000c2432: cmp eax, 0xc1d70f66; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x001938f5: cmp eax, 0xc381ffff; call 0x3193d5b; sbb al, 0x8b; jmp ebx; 
0x0019383e: cmp eax, 0xc381ffff; lahf; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00085149: cmp eax, 0xc4830000; adc byte ptr [ebp - 0x6e7bf040], al; add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x000f1ca5: cmp eax, 0xc4830002; adc byte ptr [ebp - 0x74be8b40], al; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0009c6de: cmp eax, 0xc; sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x00190b29: cmp eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x1c; ret; 
0x0010e3bf: cmp eax, 0xf7fffffd; ret 0x67; 
0x000a0a95: cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x0010c1f9: cmp eax, 0xfffff000; ja 0x10c208; pop ebx; pop esi; ret; 
0x001131f7: cmp eax, 0xfffff000; ja 0x113208; pop ebx; pop esi; ret; 
0x00114584: cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145f4: cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147d4: cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x00115c4a: cmp eax, 0xfffff000; ja 0x115c58; pop ebx; pop esi; ret; 
0x0011ece4: cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f204: cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011f622: cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x0011ff29: cmp eax, 0xfffff000; ja 0x11ff38; pop ebx; pop esi; ret; 
0x0011ffb0: cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x0012000e: cmp eax, 0xfffff000; ja 0x120020; pop ebx; pop esi; pop edi; ret; 
0x0012006e: cmp eax, 0xfffff000; ja 0x120080; pop ebx; pop esi; pop edi; ret; 
0x001202ca: cmp eax, 0xfffff000; ja 0x1202d8; pop ebx; pop esi; ret; 
0x001206c4: cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bd0: cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fd0: cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x00121340: cmp eax, 0xfffff000; ja 0x121360; pop ebx; pop esi; pop edi; ret; 
0x001213bd: cmp eax, 0xfffff000; ja 0x1213e0; pop ebx; pop esi; pop edi; ret; 
0x0012143f: cmp eax, 0xfffff000; ja 0x121460; pop ebx; pop esi; pop edi; ret; 
0x001214bc: cmp eax, 0xfffff000; ja 0x1214e0; pop ebx; pop esi; pop edi; ret; 
0x00121589: cmp eax, 0xfffff000; ja 0x121598; pop ebx; pop esi; ret; 
0x00121839: cmp eax, 0xfffff000; ja 0x121848; pop ebx; pop esi; ret; 
0x001221d4: cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x00122224: cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x0012233a: cmp eax, 0xfffff000; ja 0x122348; pop ebx; pop esi; pop edi; ret; 
0x0012239a: cmp eax, 0xfffff000; ja 0x1223a8; pop ebx; pop esi; pop edi; ret; 
0x00123f54: cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x00123fa9: cmp eax, 0xfffff000; ja 0x123fb8; pop ebx; pop esi; ret; 
0x001274e9: cmp eax, 0xfffff000; ja 0x1274f8; pop ebx; pop esi; ret; 
0x0012941b: cmp eax, 0xfffff000; ja 0x129428; pop ebx; pop esi; ret; 
0x0012aa04: cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012aa59: cmp eax, 0xfffff000; ja 0x12aa68; pop ebx; pop esi; ret; 
0x0012bc7e: cmp eax, 0xfffff000; ja 0x12bc90; mov eax, ecx; pop ebx; ret; 
0x0012cd90: cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012d0e4: cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d25b: cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012d364: cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012d5b3: cmp eax, 0xfffff000; ja 0x12d5d8; pop ebx; pop esi; pop edi; ret; 
0x0012d86e: cmp eax, 0xfffff000; ja 0x12d880; pop ebx; pop esi; pop edi; ret; 
0x0012da7e: cmp eax, 0xfffff000; ja 0x12da90; pop ebx; pop esi; pop edi; ret; 
0x0012dade: cmp eax, 0xfffff000; ja 0x12daf0; pop ebx; pop esi; pop edi; ret; 
0x0012db39: cmp eax, 0xfffff000; ja 0x12db48; pop ebx; pop esi; ret; 
0x0012dc8f: cmp eax, 0xfffff000; ja 0x12dca0; pop ebx; pop esi; pop edi; ret; 
0x0012e214: cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0012e424: cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0018df1a: cmp eax, 0xfffff000; ja 0x18df28; pop ebx; pop esi; ret; 
0x0003cd15: cmp eax, 0xfffff000; ja 0x3cd20; pop ebx; ret; 
0x00040769: cmp eax, 0xfffff000; ja 0x40778; pop ebx; pop esi; ret; 
0x00061354: cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x000613ae: cmp eax, 0xfffff000; ja 0x613c0; pop ebx; pop esi; pop edi; ret; 
0x0008f147: cmp eax, 0xfffff000; ja 0x8f158; add esp, 8; pop ebx; ret; 
0x000901cd: cmp eax, 0xfffff000; ja 0x901e0; pop ebx; pop esi; pop edi; ret; 
0x00098514: cmp eax, 0xfffff000; ja 0x98520; pop ebx; pop esi; pop edi; ret; 
0x0009f5b0: cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x0009fc39: cmp eax, 0xfffff000; ja 0x9fc48; pop ebx; pop esi; ret; 
0x0009ff7a: cmp eax, 0xfffff000; ja 0x9ff88; mov eax, ecx; pop ebx; ret; 
0x000a0358: cmp eax, 0xfffff000; ja 0xa0368; pop ebx; ret; 
0x000dc372: cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x000e9103: cmp eax, 0xfffff000; ja 0xe9110; pop ebx; pop esi; ret; 
0x0009534a: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; add esp, 8; pop ebx; ret; 
0x00099f15: cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011f6de: cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0003ccd8: cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00040577: cmp eax, 0xfffff001; jae 0x24f10; xor eax, eax; ret; 
0x000915d8: cmp eax, 1; ja 0x915f0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099eb8: cmp eax, 1; ja 0x99ed0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00179262: cmp eax, 1; je 0x179290; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00179352: cmp eax, 1; je 0x179380; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00179972: cmp eax, 1; je 0x1799a0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x0010ba38: cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0010bda3: cmp eax, 1; jg 0x10bdc8; add esp, 4; pop ebx; pop esi; ret; 
0x00129fc8: cmp eax, 1; jg 0x129fd8; add esp, 8; pop ebx; ret; 
0x0014eeb2: cmp eax, 1; jg 0x14eed0; add esp, 4; pop ebx; pop esi; ret; 
0x00154432: cmp eax, 1; jg 0x154490; pop ebx; pop esi; pop edi; ret; 
0x00154f5e: cmp eax, 1; jg 0x154f88; add esp, 8; pop ebx; ret; 
0x00160742: cmp eax, 1; jg 0x1607a0; add esp, 4; pop ebx; pop esi; ret; 
0x00180001: cmp eax, 1; jg 0x180028; add esp, 8; pop ebx; ret; 
0x00180181: cmp eax, 1; jg 0x1801a8; add esp, 8; pop ebx; ret; 
0x00184e04: cmp eax, 1; jg 0x184e28; add esp, 4; pop ebx; pop esi; ret; 
0x00186222: cmp eax, 1; jg 0x186248; add esp, 4; pop ebx; pop esi; ret; 
0x001862c2: cmp eax, 1; jg 0x1862e8; add esp, 4; pop ebx; pop esi; ret; 
0x00041cd4: cmp eax, 1; jg 0x41cf8; add esp, 4; pop ebx; pop esi; ret; 
0x00042bcc: cmp eax, 1; jg 0x42bf8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007dc20: cmp eax, 1; jg 0x7dc30; ret; 
0x0008d7c0: cmp eax, 1; jg 0x8d7d0; ret; 
0x0008fefc: cmp eax, 1; jg 0x8ff38; pop ebx; pop esi; pop edi; ret; 
0x000dd577: cmp eax, 1; jg 0xdd5a0; add esp, 8; pop ebx; ret; 
0x000e994e: cmp eax, 1; jg 0xe9970; add esp, 4; pop ebx; pop esi; ret; 
0x000ea244: cmp eax, 1; jg 0xea260; pop ebx; pop esi; pop edi; ret; 
0x00172383: cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0009118c: cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00060bf9: cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009d2a0: cmp eax, 1; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0017a9c6: cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00099e88: cmp eax, 2; ja 0x99ea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00128af3: cmp eax, 2; jbe 0x128b20; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00154a91: cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x00179267: cmp eax, 2; sete al; movzx eax, al; ret; 
0x0003003b: cmp eax, 3; je 0x30048; add esp, 8; pop ebx; ret; 
0x0009215d: cmp eax, 3; je 0x92170; pop ebx; pop esi; pop edi; ret; 
0x000ffecc: cmp eax, 3; je 0xffef0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00117653: cmp eax, 4; ja 0x117668; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190f3: cmp eax, 4; ja 0x119108; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011ab93: cmp eax, 4; ja 0x11aba8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0009c5bf: cmp eax, 4; sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0008fb6f: cmp eax, 8; je 0x8fb78; add esp, 0xc; ret; 
0x0009a9a4: cmp eax, 8; je 0x9a9aa; ret; 
0x0012cf16: cmp eax, 8; setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x0012cf57: cmp eax, 8; setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x00195ceb: cmp eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009465a: cmp eax, dword ptr [eax]; add byte ptr [eax - 1], dl; je 0x94685; sub al, 0xe8; stc; ret; 
0x00135ae2: cmp eax, dword ptr [eax]; add byte ptr [ebx + 0x56500cc4], al; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00079944: cmp eax, dword ptr [ebx + 0x575304ec]; push eax; call dword ptr [ebp + 0x1c]; 
0x000275f4: cmp eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0009da15: cmp eax, dword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x001a59f1: cmp eax, dword ptr [edx]; add byte ptr [eax], al; pop ebx; ret; 
0x001a9bf4: cmp eax, dword ptr [esi - 0x10]; jne 0x1a9c40; pop edi; pop esi; pop ebx; ret; 
0x00122b18: cmp eax, ebx; jb 0x122b20; xor eax, eax; pop ebx; ret; 
0x00170550: cmp eax, ebx; jne 0x170540; pop ebx; ret; 
0x000ac1fb: cmp eax, ebx; jne 0xac1f0; mov eax, edx; pop ebx; ret; 
0x000ac23f: cmp eax, ebx; jne 0xac230; mov eax, edx; pop ebx; pop esi; ret; 
0x0008dd4e: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00082331: cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00081085: cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x81080; ret; 
0x000c1810: cmp eax, ecx; ja 0xc1820; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000ac39f: cmp eax, ecx; jne 0xac390; mov eax, edx; pop ebx; ret; 
0x000c29ca: cmp eax, ecx; jne 0xc2bd7; pop esi; xor eax, eax; pop ebx; ret; 
0x000c2abd: cmp eax, ecx; jne 0xc2beb; pop esi; xor eax, eax; pop ebx; ret; 
0x000c2be9: cmp eax, ecx; sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x0003c13a: cmp eax, ecx; sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000d05d9: cmp eax, edi; call dword ptr [esi + 0x53]; 
0x000a8808: cmp eax, edi; jae 0xa8821; pop ebx; pop esi; pop edi; ret; 
0x001396c3: cmp eax, edx; jae 0x1396d0; cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x00176c5c: cmp eax, edx; je 0x176c68; pop ebx; pop esi; pop edi; ret; 
0x0008d318: cmp eax, edx; jne 0x8d310; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000a51ac: cmp eax, esi; jne 0xa5180; mov dword ptr [edx + 0x3c68], 0; pop ebx; pop esi; ret; 
0x000550dc: cmp ebp, dword ptr [ecx]; ret 0x6b89; 
0x0009ff65: cmp ebp, dword ptr [edi]; jne 0x9ffb0; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0014368a: cmp ebp, dword ptr [esi]; je 0x143698; add esp, 8; pop ebx; ret; 
0x000ea412: cmp ebp, esi; jmp dword ptr [ebp - 0x5f]; 
0x0014322a: cmp ebx, 0x950f0308; ret; 
0x000fd505: cmp ebx, 0xa; je 0xfd533; add esp, 4; pop ebx; pop esi; ret; 
0x000744f5: cmp ebx, dword ptr [eax + eax]; add byte ptr [ecx], al; ret; 
0x0012d484: cmp ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000df246: cmp ecx, 0x28f5c28; jbe 0xdf258; mov eax, edx; ret; 
0x00070da8: cmp ecx, 0x5a; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0013fca0: cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0013f98e: cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0012bb5c: cmp ecx, 1; jg 0x12bb90; add esp, 8; pop ebx; ret; 
0x0003eff0: cmp ecx, 1; jg 0x3f069; sub esp, 8; push 0; push edx; call eax; 
0x00159ecc: cmp ecx, 2; je 0x159ee0; mov eax, edx; pop ebx; pop esi; ret; 
0x0016e501: cmp ecx, 3; jbe 0x16e510; mov eax, 2; pop ebx; pop esi; ret; 
0x000d4dd7: cmp ecx, 3; je 0xd4de8; mov eax, esi; pop ebx; pop esi; ret; 
0x00121087: cmp ecx, 9; je 0x1210c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121137: cmp ecx, 9; je 0x121170; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0006b26e: cmp ecx, dword ptr [ebx - 0x5cb7b]; dec dword ptr [ecx + 0x29008bfa]; ret 0xd389; 
0x0007db64: cmp ecx, dword ptr [ecx + 0x1a88b3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008d704: cmp ecx, dword ptr [ecx + 0x1abcb3]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000e80b9: cmp ecx, dword ptr [edi]; xchg dword ptr [eax - 0x73000000], ebx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x00099088: cmp ecx, dword ptr [edi]; xchg dword ptr [ecx], edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009930b: cmp ecx, dword ptr [edi]; xchg esi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000986f5: cmp ecx, dword ptr [edi]; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001a9d25: cmp ecx, dword ptr [edx - 4]; jne 0x1a9d30; pop ebx; ret; 
0x001a59e7: cmp ecx, dword ptr [edx - 4]; mov eax, 0; jne 0x1a5c30; pop ebx; ret; 
0x000bb261: cmp ecx, dword ptr [edx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a5902: cmp ecx, dword ptr [edx]; je 0x1a5920; mov eax, 1; jg 0x1a5910; neg eax; ret; 
0x000a935a: cmp ecx, eax; jne 0xa9350; mov eax, edx; pop ebx; ret; 
0x0004354f: cmp ecx, eax; sbb ebx, edx; pop ebx; setb al; ret; 
0x0013f546: cmp ecx, eax; sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x001a4270: cmp ecx, ebx; mov eax, 0; jne 0x1a49f0; pop ebx; ret; 
0x001a70a2: cmp ecx, ebx; mov eax, 0; jne 0x1a72d0; pop ebx; ret; 
0x001a4a04: cmp ecx, ebx; pop ebx; mov eax, 1; ja 0x1a4a10; neg eax; ret; 
0x000c6e0e: cmp ecx, ebx; pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x000c6df0: cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00081c78: cmp ecx, edx; jb 0x81c70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008c778: cmp ecx, edx; jb 0x8c770; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001242ea: cmp ecx, edx; jne 0x1242e0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x000c54ee: cmp ecx, edx; jne 0xc550a; ret; 
0x001323df: cmp ecx, edx; sbb eax, eax; ret; 
0x0015978d: cmp ecx, edx; setne al; ret; 
0x000fee02: cmp edi, 0x8bffffff; push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0012d2b5: cmp edi, 1; je 0x12d2f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012e375: cmp edi, 1; je 0x12e3b0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0013f03b: cmp edi, eax; inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00094583: cmp edi, ecx; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0010a975: cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a98a: cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x00193ce5: cmp edi, edi; inc dword ptr [ecx + 0x458f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193c2e: cmp edi, edi; inc dword ptr [ecx + 0x459afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193ade: cmp edi, edi; inc dword ptr [ecx + 0x45affc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193a45: cmp edi, edi; inc dword ptr [ecx + 0x45b98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00091402: cmp edi, edx; jae 0x913d0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00198798: cmp edi, esi; ret 3; 
0x000acb67: cmp edi, esp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000e8f43: cmp edx, 0x10d; cmovae eax, esi; mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000fb716: cmp edx, 0x1badface; setne al; ret; 
0x000fb6ed: cmp edx, 0x1cd1; setne al; ret; 
0x0012d3d8: cmp edx, 0x26; je 0x12d433; pop ebx; pop esi; ret; 
0x000fb688: cmp edx, 0x27e0eb; je 0xfb5bf; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x0009129d: cmp edx, 0x3fff; ja 0x912b0; ret; 
0x000a9c75: cmp edx, 0x40; ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca5: cmp edx, 0x40; ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00126363: cmp edx, 0x51; stc; call dword ptr [eax + 0x55]; 
0x000fb653: cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x00070e55: cmp edx, 0x5a; jbe 0x71bc0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000fb5b7: cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x000fb752: cmp edx, 0xadf5; setne al; ret; 
0x000fb694: cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000a8c4e: cmp edx, 1; ja 0xa8c30; pop ebx; pop esi; pop edi; ret; 
0x00098410: cmp edx, 1; je 0x98420; mov eax, 0x16; ret; 
0x00153e2f: cmp edx, 1; jg 0x153e38; ret; 
0x00160a30: cmp edx, 1; jg 0x160a58; add esp, 0x18; pop ebx; ret; 
0x00166312: cmp edx, 1; jg 0x166338; add esp, 0x18; pop ebx; ret; 
0x0018007f: cmp edx, 1; jg 0x1800a8; add esp, 0x18; pop ebx; ret; 
0x0018010b: cmp edx, 1; jg 0x180130; add esp, 0x18; pop ebx; ret; 
0x001802a1: cmp edx, 1; jg 0x1802c8; add esp, 0x14; pop ebx; pop esi; ret; 
0x001803e3: cmp edx, 1; jg 0x180408; add esp, 0x18; pop ebx; ret; 
0x0003f527: cmp edx, 1; jg 0x3f698; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003f5fb: cmp edx, 1; jg 0x3f6c0; call eax; 
0x00040481: cmp edx, 1; jg 0x404a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00041e03: cmp edx, 1; jg 0x41e28; add esp, 0x14; pop ebx; pop esi; ret; 
0x00061232: cmp edx, 1; jg 0x61268; add esp, 0x18; pop ebx; ret; 
0x00094672: cmp edx, 1; jg 0x94698; add esp, 0x18; pop ebx; ret; 
0x000e943d: cmp edx, 1; jg 0xe9460; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e9548: cmp edx, 1; jg 0xe9570; add esp, 0x14; pop ebx; pop esi; ret; 
0x00098440: cmp edx, 1; jne 0x98460; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x0010cf3d: cmp edx, 2; ja 0x10cf4e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00091161: cmp edx, 2; jbe 0x91170; ret; 
0x000921d6: cmp edx, 2; je 0x921e0; pop ebx; pop esi; pop edi; ret; 
0x0007f9b1: cmp edx, dword ptr [eax + 4]; jae 0x7f9c0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007fb6f: cmp edx, dword ptr [eax + 4]; jae 0x7fb80; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x00087f7b: cmp edx, dword ptr [eax + 8]; jae 0x87f90; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00087fb9: cmp edx, dword ptr [eax + 8]; jae 0x87fd0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000fbb98: cmp edx, dword ptr [ebx + 4]; je 0xfbbce; pop ebx; pop esi; pop edi; ret; 
0x000b9b07: cmp edx, dword ptr [edx]; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008efd4: cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x000e90f2: cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000434fd: cmp edx, eax; setb al; ret; 
0x000434de: cmp edx, eax; setle al; ret; 
0x000914b2: cmp edx, ebp; jae 0x914e3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000ba704: cmp edx, ebx; jb 0xb9ac0; call 0x187611; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b2e: cmp edx, ebx; jb 0xb9ac0; call 0x187611; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b17: cmp edx, ebx; jb 0xb9ac0; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9afc: cmp edx, ebx; jb 0xb9ac0; call 0x187611; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ada: cmp edx, ebx; jb 0xb9ac0; call 0x187611; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbe04: cmp edx, ebx; jb 0xbb100; call 0x187611; add ecx, 0x10f08f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb16e: cmp edx, ebx; jb 0xbb100; call 0x187611; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb157: cmp edx, ebx; jb 0xbb100; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb13c: cmp edx, ebx; jb 0xbb100; call 0x187611; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb11a: cmp edx, ebx; jb 0xbb100; call 0x187611; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c16a4: cmp edx, ebx; jb 0xc10a0; call 0x187611; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c110e: cmp edx, ebx; jb 0xc10a0; call 0x187611; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10f7: cmp edx, ebx; jb 0xc10a0; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10dc: cmp edx, ebx; jb 0xc10a0; call 0x187611; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10ba: cmp edx, ebx; jb 0xc10a0; call 0x187611; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ac2c7: cmp edx, ebx; je 0xac2c0; pop ebx; ret; 
0x0008dd0a: cmp edx, ecx; jae 0x8dd30; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x001323db: cmp edx, ecx; jb 0x1323e3; cmp ecx, edx; sbb eax, eax; ret; 
0x00159787: cmp edx, ecx; jb 0x159792; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00184a97: cmp edx, ecx; jb 0x184a9f; cmp ecx, edx; sbb eax, eax; ret; 
0x000c5506: cmp edx, ecx; je 0xc550e; test edx, edx; jne 0xc5500; ret; 
0x00153c50: cmp edx, ecx; jne 0x153c40; add esp, 8; pop ebx; ret; 
0x001543b2: cmp edx, ecx; jne 0x154380; pop ebx; pop esi; ret; 
0x000ac2fb: cmp edx, esi; je 0xac2f0; pop ebx; pop esi; ret; 
0x0012d5a2: cmp esi, -1; je 0x12d5c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0007d1da: cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x0016bcfc: cmp esi, 0x1cc483ff; ret; 
0x0012b81d: cmp esi, 0x53; stc; call dword ptr [eax + 0x56]; 
0x000dfff0: cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x0010bec8: cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00091828: cmp esi, edx; jae 0x91868; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x001443c9: cmp esi, esi; dec dword ptr [ebx - 0x76ebdbbc]; ret 0x689; 
0x00069b33: cmp esi, esi; inc eax; jmp dword ptr [eax]; 
0x001497cb: cmp esp, -0x52; stc; call dword ptr [eax - 0x73]; 
0x001261dd: cmp esp, 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00168d9f: cmp esp, 0x62; stc; call dword ptr [eax - 0x18]; 
0x0003ed53: cmp esp, 0x75; stc; call dword ptr [eax - 0x73]; 
0x000c2414: cmp esp, dword ptr [esi + 0xf]; xlatb; ret 0xc085; 
0x00131af1: cmp esp, dword ptr [esi - 9]; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax], esp; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x000a1b0c: cmp esp, esi; call dword ptr [eax + 0x57]; 
0x0014c8ad: cmp word ptr [edx + 2], bx; je 0x14c8b8; pop ebx; ret; 
0x001a7746: cmpsb byte ptr [esi], byte ptr es:[edi]; add al, byte ptr [eax]; add byte ptr [eax - 0x17af0f0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x000c2daf: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x0016cd50: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x0016c5ac: cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; pop ebx; ret; 
0x000567e6: cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000e8ae6: cmpsb byte ptr [esi], byte ptr es:[edi]; cmpsb byte ptr [esi], byte ptr es:[edi]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0007ef22: cmpsb byte ptr [esi], byte ptr es:[edi]; dec edx; cli; jmp dword ptr [esi - 0x70]; 
0x00178f73: cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; call ecx; 
0x0013ba06: cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; jmp dword ptr [esi - 0x70]; 
0x000e086f: cmpsb byte ptr [esi], byte ptr es:[edi]; idiv bh; dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x00158b25: cmpsb byte ptr [esi], byte ptr es:[edi]; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000e8ae7: cmpsb byte ptr [esi], byte ptr es:[edi]; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0013fd06: cmpsb byte ptr [esi], byte ptr es:[edi]; pop ss; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00160fa7: cmpsb byte ptr [esi], byte ptr es:[edi]; pushal; stc; call dword ptr [eax - 0x18]; 
0x0012edb4: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x0012ed67: cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00059c34: cmpsb byte ptr [esi], byte ptr es:[edi]; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059c59: cmpsb byte ptr [esi], byte ptr es:[edi]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00170a06: cmpsb byte ptr [esi], byte ptr es:[edi]; stosd dword ptr es:[edi], eax; cld; jmp dword ptr [esi - 0x70]; 
0x0013ceb6: cmpsd dword ptr [esi], dword ptr es:[edi]; add al, 0; add eax, 0xfff5b; mov eax, dword ptr [eax + 0xc8]; add eax, dword ptr gs:[0]; ret; 
0x0014ee43: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6a3797d], cl; call dword ptr [eax - 0x73]; 
0x00096983: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6bf8c7a], cl; call dword ptr [eax - 0x73]; 
0x00095b69: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebp - 0x6bf947a], cl; call dword ptr [eax - 0x73]; 
0x00175755: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000ed38d: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x001a9475: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf20; 
0x00176ae7: cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x0004a38f: cmpsd dword ptr [esi], dword ptr es:[edi]; das; stc; call dword ptr [eax - 0x18]; 
0x00178e93: cmpsd dword ptr [esi], dword ptr es:[edi]; hlt; call ecx; 
0x001132e5: cmpsd dword ptr [esi], dword ptr es:[edi]; ja 0x1132e1; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000380e5: cmpsd dword ptr [esi], dword ptr es:[edi]; mov al, 0xfe; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0019993b: cmpsd dword ptr [esi], dword ptr es:[edi]; push es; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00122015: cmpsd dword ptr [esi], dword ptr es:[edi]; push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00132978: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x00132968: cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00059be5: cmpsd dword ptr [esi], dword ptr es:[edi]; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059bc0: cmpsd dword ptr [esi], dword ptr es:[edi]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00180e18: cmpsd dword ptr [esi], dword ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x000900e5: cmpsd dword ptr [esi], dword ptr es:[edi]; xor cl, bh; jmp dword ptr [ebp - 0x39]; 
0x0009bcfd: cmpxchg dword ptr [ebx], edx; jne 0x9bd10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009ac76: cmpxchg dword ptr [ebx], esi; jne 0x9ac80; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f6af: cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009bd40: cmpxchg dword ptr [edx], ecx; jne 0x9bd36; xor eax, eax; pop ebx; ret; 
0x0009bd8e: cmpxchg dword ptr [edx], ecx; jne 0x9bda0; xor eax, eax; pop ebx; ret; 
0x0009a96c: cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00094f0d: cmpxchg dword ptr [esp + 4], edx; ret; 
0x0019744a: cwde; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3ce4: cwde; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001741ed: cwde; add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeaef; pop ebx; ret; 
0x00034bb0: cwde; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0006e563: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x0007c57f: cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x000cf029: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c8667: cwde; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00176d92: cwde; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001a9fe4: cwde; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0x348d; 
0x0016e879: cwde; and eax, dword ptr [eax]; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x00073a22: cwde; call 0x3f0732f3; jmp eax; 
0x00032e10: cwde; call dword ptr [ecx]; 
0x000a5320: cwde; cdq; stc; call dword ptr [eax - 0x73]; 
0x00194fca: cwde; dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00123c84: cwde; dec edx; stc; call dword ptr [edx - 0x77]; 
0x000ed84f: cwde; int1; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0002c574: cwde; jge 0x2c577; add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [edx + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x000fb1d4: cwde; leave; pop edi; stc; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x00153208: cwde; loope 0x153268; stc; call dword ptr [ebx - 0x73]; 
0x0014f8af: cwde; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x0014f776: cwde; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0009d1be: cwde; mov cl, bh; call dword ptr [eax - 0x73]; 
0x0010e3b9: cwde; mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x000bdd84: cwde; or al, 0; add ecx, 0x10d1ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd5f: cwde; or al, 0; add ecx, 0x10d212; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd35: cwde; or al, 0; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd1c: cwde; or al, 0; add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001b2eff: cwde; or al, byte ptr [eax]; add byte ptr [ecx + 0x7c89113c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x00095331: cwde; or dword ptr [eax], eax; mov edx, dword ptr [esp + 0x10]; mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00193a4a: cwde; pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c50f6: cwde; pop ebx; pop esi; ret; 
0x001607fc: cwde; pushal; stc; call dword ptr [edx + 0x50]; 
0x000dee12: cwde; sahf; stc; call dword ptr [eax - 0x73]; 
0x000a6a52: cwde; stc; call dword ptr [eax - 0x18]; 
0x000a4e0e: cwde; stc; call dword ptr [eax - 0x73]; 
0x001972eb: daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011f1f1: daa; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000dadd5: daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00121330: daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00199bfb: daa; add eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b80a5: daa; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0012cfd1: daa; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000ea298: daa; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00042bd0: daa; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00172a67: daa; in al, dx; call dword ptr [eax - 0x73]; 
0x000a6e00: daa; inc esp; stc; call dword ptr [eax - 0x18]; 
0x000d4c8f: daa; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x00114785: daa; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002b8e5: daa; mov al, byte ptr [eax]; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x000c333e: daa; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c36e4: daa; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00151b36: daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00114093: daa; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x0016f285: daa; ret; 
0x00176273: daa; stc; call dword ptr [edi + 0x52]; 
0x000f82b6: daa; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013ba35: daa; test al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x0018a27d: das; adc edi, ebx; jmp dword ptr [esi - 0x70]; 
0x001931b3: das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb76d: das; add eax, 0x5e5f0000; pop ebx; ret; 
0x0012378e: das; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012bb60: das; add esp, 8; pop ebx; ret; 
0x001a148d: das; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00195c33: das; cmp al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000e7903: das; idiv edi; call dword ptr [eax + 0x55]; 
0x0011bd55: das; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0003ea42: das; inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00180ed4: das; jbe 0x180e5c; in al, dx; add al, 0x83; ret; 
0x0005ab2f: das; jbe 0x5aabd; ret 0x40c7; 
0x00154d27: das; je 0x154d8e; mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154daf: das; je 0x154e16; mov byte ptr [ebx + 0x6f68], 0; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x000fb6e8: das; je 0xfb742; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000536ca: das; jne 0x536c0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0009ff66: das; jne 0x9ffb0; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x00163c7d: das; jns 0x163c7d; jmp dword ptr [esi - 0x70]; 
0x00091d48: das; mov eax, edi; call dword ptr gs:[0x10]; 
0x0010c520: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c470: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5e8: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2d8: das; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x000a3925: das; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x6e; stc; call dword ptr [eax - 0x18]; 
0x0006f1f6: das; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0016567d: das; pop edi; std; jmp dword ptr [esi - 0x70]; 
0x00145563: das; pop edx; stc; call dword ptr [eax + 0x68]; 
0x000ba713: das; push es; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ef88d: das; ret 1; 
0x00048bcd: das; stc; call dword ptr [eax + 0x56]; 
0x00057872: das; stc; call dword ptr [eax + 0x57]; 
0x0003f833: das; stc; call dword ptr [eax - 0x18]; 
0x000cda44: das; stc; call dword ptr [eax - 0x18]; ret; 
0x0003fccc: das; stc; call dword ptr [ebx + 0x50]; 
0x00048ba0: das; stc; call dword ptr [ebx + 0x6a]; 
0x0005783e: das; stc; call dword ptr [esi + 0x6a]; 
0x00040422: das; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00086a35: das; xlatb; stc; jmp dword ptr [esi - 0x70]; 
0x0004a517: das; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000470fe: dec byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0019ddeb: dec byte ptr [ebp - 0x7af00487]; ret 6; 
0x001a259b: dec byte ptr [ebp - 0x7af00587]; ret; 
0x0019c55b: dec byte ptr [ebp - 0x7af00687]; ret 7; 
0x0019fc9b: dec byte ptr [ebp - 0x7af00687]; ret; 
0x0019d2eb: dec byte ptr [ebp - 0x7af00c87]; ret 0x11; 
0x0019bd5b: dec byte ptr [ebp - 0x7af00d87]; ret 0xf; 
0x0019ed9b: dec byte ptr [ebp - 0x7af00d87]; ret; 
0x00190d38: dec byte ptr [ebx + 0x5b082444]; ret; 
0x00104983: dec byte ptr [ebx - 0x16fbdb84]; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x0012b3ee: dec byte ptr [ebx - 0x1d7cfbaa]; add dword ptr [ecx], ecx; ret 0x78b; 
0x0005c5a4: dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00032bc8: dec byte ptr [ebx - 0x9b43]; jmp dword ptr [esi - 0x77]; 
0x000681c7: dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x000d71ae: dec byte ptr [ecx - 0x36436b]; call ebx; 
0x0009830f: dec dword ptr [0x2890f00]; xor eax, eax; ret; 
0x000c1622: dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x00193e8b: dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x000c09f2: dec dword ptr [eax + 0x5bf88938]; pop edi; ret; 
0x00195e7b: dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0003a9a4: dec dword ptr [eax - 0x49f0f5fc]; inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0005bfc9: dec dword ptr [eax - 0xad73]; dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x00067aad: dec dword ptr [eax]; add byte ptr [eax], al; add cl, ch; sal esi, 0xff; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x0009a945: dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x0010ac4c: dec dword ptr [ebp + 0x148b0076]; and al, 0xe9; ret; 
0x0006ec5a: dec dword ptr [ebp + 0x1ab50184]; jecxz 0x6ec61; jmp eax; 
0x0013ebc4: dec dword ptr [ebp + 0x1cba0076]; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x00093d3a: dec dword ptr [ebp + 0x2208d]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00142ee0: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000f1078: dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013fbc7: dec dword ptr [ebp + 0x393c2444]; ret; 
0x00142d49: dec dword ptr [ebp + 0x48d4004]; ret; 
0x000d66f2: dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x00056685: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret 4; 
0x00038343: dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000c2102: dec dword ptr [ebp + 0x5f103844]; ret; 
0x0005d534: dec dword ptr [ebp + 0x7ff48284]; clc; call dword ptr [eax + 0x56]; 
0x00056eb0: dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax + 0x51]; 
0x00056f35: dec dword ptr [ebp + 0x7ff48384]; clc; call dword ptr [eax - 1]; 
0x00189e61: dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x001aed59: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00061cc1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x000a9661: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x00057709: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0010bcd1: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bbb2; call eax; 
0x00123dc9: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00062b71: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x0012a521: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7972fb14], al; in al, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0002d451: dec dword ptr [ebp + 0xb6]; add byte ptr [ebx - 0x7ccbdbbc], cl; ret 0xc704; 
0x00058b11: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx - 0x36336b], cl; call dword ptr [eax - 0x75]; 
0x0007ba41: dec dword ptr [ebp + 0xb6]; add byte ptr [ecx], bh; ret; 
0x0008e979: dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x00132641: dec dword ptr [ebp - 0x10aa5380]; call dword ptr [eax + 0x6a]; 
0x0018edc5: dec dword ptr [ebp - 0x129b5380]; call dword ptr [eax + 0x6a]; 
0x00069b74: dec dword ptr [ebp - 0x137cff8a]; or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0008e00c: dec dword ptr [ebp - 0x137cff8a]; or al, 0x89; ret 0xe989; 
0x0011cec4: dec dword ptr [ebp - 0x137cff8a]; or al, 0x8d; sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001390fc: dec dword ptr [ebp - 0x137cff8a]; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000f9cc5: dec dword ptr [ebp - 0x144b8380]; call dword ptr [eax + 0x6a]; 
0x0018ce05: dec dword ptr [ebp - 0x14599380]; call dword ptr [eax + 0x6a]; 
0x000f6385: dec dword ptr [ebp - 0x1484c380]; call dword ptr [eax + 0x6a]; 
0x0018b0c5: dec dword ptr [ebp - 0x1492b380]; call dword ptr [eax + 0x6a]; 
0x001812a0: dec dword ptr [ebp - 0x14b7b]; call dword ptr [eax + 0x6a]; 
0x000f2b45: dec dword ptr [ebp - 0x14bdc380]; call dword ptr [eax + 0x6a]; 
0x000c6509: dec dword ptr [ebp - 0x16305380]; push esi; inc ecx; jnp 0xc6518; cmove eax, edx; ret; 
0x000c5529: dec dword ptr [ebp - 0x163da380]; push esi; inc ecx; jnp 0xc5538; cmove eax, edx; ret; 
0x00038310: dec dword ptr [ebp - 0x204cf379]; call dword ptr [eax + 0x6a]; 
0x00031713: dec dword ptr [ebp - 0x20b99379]; call dword ptr [eax + 0x6a]; 
0x0004abd3: dec dword ptr [ebp - 0x26ffd98c]; test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x000d6e23: dec dword ptr [ebp - 0x35e343]; call dword ptr [eax - 0x73]; 
0x00058c5d: dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000d7bbd: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00058a38: dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0009b667: dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0010ba2c: dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x00146025: dec dword ptr [ebp - 0x41c6b]; call dword ptr [eax - 0x77]; 
0x0012a108: dec dword ptr [ebp - 0x42c63]; call dword ptr [eax - 0x73]; 
0x000682df: dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0012a0d5: dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x00078597: dec dword ptr [ebp - 0x4877b]; dec dword ptr [ecx - 0x5377b]; call dword ptr [edi + 0x57]; 
0x00072d81: dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00077879: dec dword ptr [ebp - 0x4cb6b]; call dword ptr [edx + 0x50]; 
0x0007564f: dec dword ptr [ebp - 0x4cb7b]; call dword ptr [ecx - 1]; 
0x00066717: dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0006d556: dec dword ptr [ebp - 0x56f7b]; call dword ptr [eax + 0x52]; 
0x001831b1: dec dword ptr [ebp - 0x644977a]; call dword ptr [eax - 0x73]; 
0x0017f481: dec dword ptr [ebp - 0x645137a]; call dword ptr [eax - 0x73]; 
0x00178afa: dec dword ptr [ebp - 0x646777d]; call dword ptr [edx + 0x6a]; 
0x00178164: dec dword ptr [ebp - 0x6472b7d]; call dword ptr [edx + 0x6a]; 
0x001729e7: dec dword ptr [ebp - 0x648437d]; call dword ptr [edx + 0x6a]; 
0x00172a9a: dec dword ptr [ebp - 0x648737d]; call dword ptr [ebp + 0x6a]; 
0x00168c4b: dec dword ptr [ebp - 0x649bf79]; call dword ptr [eax - 0x73]; 
0x001507d5: dec dword ptr [ebp - 0x64e8b7d]; call dword ptr [eax - 0x73]; 
0x0015039e: dec dword ptr [ebp - 0x64e9b7d]; call dword ptr [eax - 0x73]; 
0x0014fa9c: dec dword ptr [ebp - 0x64ed37f]; call dword ptr [eax - 0x73]; 
0x0014fc0d: dec dword ptr [ebp - 0x64edf7f]; call dword ptr [eax - 0x73]; 
0x0014ff5d: dec dword ptr [ebp - 0x64ef779]; call dword ptr [eax - 0x73]; 
0x0014ee3a: dec dword ptr [ebp - 0x64f137d]; call dword ptr [eax + 0x68]; 
0x0013c55c: dec dword ptr [ebp - 0x6559b79]; call dword ptr [eax - 0x73]; 
0x00132964: dec dword ptr [ebp - 0x6586b7a]; call dword ptr [eax - 0x73]; 
0x0012ba65: dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x0018fd42: dec dword ptr [ebp - 0x65d9379]; call dword ptr [eax - 0x73]; 
0x00113fe3: dec dword ptr [ebp - 0x65da779]; call dword ptr [eax + 0x68]; 
0x000fac42: dec dword ptr [ebp - 0x65f0779]; call dword ptr [eax - 0x73]; 
0x0018dd82: dec dword ptr [ebp - 0x65f1f79]; call dword ptr [eax - 0x73]; 
0x000f730e: dec dword ptr [ebp - 0x65f2b79]; call dword ptr [eax - 0x73]; 
0x0018c042: dec dword ptr [ebp - 0x65f3f79]; call dword ptr [eax - 0x73]; 
0x000f39f2: dec dword ptr [ebp - 0x65f4779]; call dword ptr [eax - 0x73]; 
0x000f1d7f: dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x000efb3f: dec dword ptr [ebp - 0x660577d]; call dword ptr [eax - 0x73]; 
0x000ebec6: dec dword ptr [ebp - 0x6607b7d]; call dword ptr [eax - 0x73]; 
0x000edbfe: dec dword ptr [ebp - 0x660877d]; call dword ptr [eax - 0x73]; 
0x000de486: dec dword ptr [ebp - 0x661537d]; call dword ptr [eax - 0x73]; 
0x000dee0f: dec dword ptr [ebp - 0x661677d]; call dword ptr [eax - 0x73]; 
0x000d8ab0: dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x000d8bd2: dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000d3273: dec dword ptr [ebp - 0x661cf7d]; call dword ptr [eax - 0x73]; 
0x000cac13: dec dword ptr [ebp - 0x6629b7f]; call dword ptr [eax - 0x73]; 
0x000c628b: dec dword ptr [ebp - 0x6632770]; call dword ptr [edx - 0x73]; 
0x000c52f5: dec dword ptr [ebp - 0x663a77a]; call dword ptr [eax - 0x73]; 
0x000c49b9: dec dword ptr [ebp - 0x663ff7b]; call dword ptr [eax - 0x73]; 
0x000adcd9: dec dword ptr [ebp - 0x664b770]; call dword ptr [edx - 0x73]; 
0x000abbc2: dec dword ptr [ebp - 0x6654b70]; call dword ptr [edx - 0x73]; 
0x000a531d: dec dword ptr [ebp - 0x6666779]; call dword ptr [eax - 0x73]; 
0x000a19b8: dec dword ptr [ebp - 0x666777a]; call dword ptr [eax - 0x73]; 
0x000a20af: dec dword ptr [ebp - 0x6669f7a]; call dword ptr [eax - 0x73]; 
0x000a4631: dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax + 0x68]; 
0x000a45fc: dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x000a38f2: dec dword ptr [ebp - 0x666b77d]; call dword ptr [eax - 0x73]; 
0x000a0e9a: dec dword ptr [ebp - 0x666ef7f]; call dword ptr [eax - 0x73]; 
0x000a5d56: dec dword ptr [ebp - 0x666ff7b]; call dword ptr [eax + 0x68]; 
0x000a61dc: dec dword ptr [ebp - 0x6670f7b]; call dword ptr [eax - 0x73]; 
0x000a578f: dec dword ptr [ebp - 0x6672f79]; call dword ptr [eax - 0x73]; 
0x000a67ca: dec dword ptr [ebp - 0x6674f7a]; call dword ptr [eax - 0x73]; 
0x0009db53: dec dword ptr [ebp - 0x676fb79]; call dword ptr [eax - 0x73]; 
0x000981d6: dec dword ptr [ebp - 0x6789f7a]; call dword ptr [eax - 0x73]; 
0x00097a9d: dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x0009697a: dec dword ptr [ebp - 0x678f77a]; call dword ptr [eax + 0x68]; 
0x000969a3: dec dword ptr [ebp - 0x678f77a]; call dword ptr [eax + 0x6a]; 
0x00096a55: dec dword ptr [ebp - 0x678f77a]; call dword ptr [eax - 0x73]; 
0x00095b60: dec dword ptr [ebp - 0x6792f7a]; call dword ptr [eax + 0x68]; 
0x00095b9f: dec dword ptr [ebp - 0x6792f7a]; call dword ptr [eax + 0x6a]; 
0x00095c4f: dec dword ptr [ebp - 0x6792f7a]; call dword ptr [eax - 0x73]; 
0x000843ef: dec dword ptr [ebp - 0x67caf7a]; call dword ptr [eax - 0x73]; 
0x00078a4e: dec dword ptr [ebp - 0x6820f7a]; call dword ptr [eax + 0x68]; 
0x000699d8: dec dword ptr [ebp - 0x6822379]; call dword ptr [eax - 0x73]; 
0x0005f568: dec dword ptr [ebp - 0x684277d]; call dword ptr [eax - 0x73]; 
0x0005df97: dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x0005df72: dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x0005dfe6: dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x0005b5a1: dec dword ptr [ebp - 0x686637a]; call dword ptr [eax - 0x73]; 
0x00059944: dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059bc8: dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00051436: dec dword ptr [ebp - 0x6878779]; call dword ptr [eax - 0x73]; 
0x0004d796: dec dword ptr [ebp - 0x6879f79]; call dword ptr [eax - 0x73]; 
0x0004a566: dec dword ptr [ebp - 0x687b779]; call dword ptr [eax - 0x73]; 
0x00059ba3: dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x001411d5: dec dword ptr [ebp - 0x68b934e]; call dword ptr [eax + 0x56]; 
0x0014115a: dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x000327d6: dec dword ptr [ebp - 0x68c6b7d]; call dword ptr [eax - 0x73]; 
0x00031fcf: dec dword ptr [ebp - 0x68cab7e]; call dword ptr [eax - 0x73]; 
0x000302e9: dec dword ptr [ebp - 0x68cff7d]; call dword ptr [eax - 0x73]; 
0x00097210: dec dword ptr [ebp - 0x692337b]; call dword ptr [eax - 0x73]; 
0x00095cca: dec dword ptr [ebp - 0x692737f]; call dword ptr [eax - 0x73]; 
0x0007935a: dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x001422b1: dec dword ptr [ebp - 0x69a347d]; call dword ptr [esi + 0x6a]; 
0x00172a53: dec dword ptr [ebp - 0x69b757d]; call dword ptr [edi + 0x6a]; 
0x0016eb39: dec dword ptr [ebp - 0x69bbe7d]; call dword ptr [edx + 0x6a]; 
0x0013cf75: dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x00134c27: dec dword ptr [ebp - 0x6aa7a79]; call dword ptr [ebp - 1]; 
0x00131a8a: dec dword ptr [ebp - 0x6aae57d]; call dword ptr [eax + 0x57]; 
0x0010dc91: dec dword ptr [ebp - 0x6b7727a]; call dword ptr [eax - 0x18]; 
0x00106c2e: dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x000fb1d8: dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x000fb19d: dec dword ptr [ebp - 0x6b83a80]; call dword ptr [eax + 0x6a]; 
0x00106f24: dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x000fe2b2: dec dword ptr [ebp - 0x6cce87d]; call dword ptr [edx + 0x52]; 
0x00060aa2: dec dword ptr [ebp - 0x6cdb57d]; call dword ptr [esi + 0x6a]; 
0x00060a89: dec dword ptr [ebp - 0x6cdce7d]; call dword ptr [esi + 0x6a]; 
0x00048b9c: dec dword ptr [ebp - 0x6d06680]; call dword ptr [ebx + 0x6a]; 
0x0005783a: dec dword ptr [ebp - 0x6d06680]; call dword ptr [esi + 0x6a]; 
0x0004041e: dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00040418: dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003fedb: dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0010b24d: dec dword ptr [ebp - 0x7043c7d]; call dword ptr [ecx + 0x6a]; 
0x0013c20c: dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0013b90c: dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x001092f6: dec dword ptr [ebp - 0x74ffe2b4]; pop ecx; add al, 0xf7; ret; 
0x000e4bc3: dec dword ptr [ebp - 0x76ffd98c]; ret 0x56e9; 
0x00074dfb: dec dword ptr [ebp - 0x76ffd98c]; ret; 
0x00035713: dec dword ptr [ebp - 0x76ffd98c]; ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x00057834: dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6d06680]; call dword ptr [esi + 0x6a]; 
0x000575b5: dec dword ptr [ebp - 0x7d379]; call dword ptr [eax - 0x73]; 
0x000d5c86: dec dword ptr [ebp - 0x7efb7884]; ret 0; 
0x0009716b: dec dword ptr [ebp - 0x8ffd98c]; ret 0; 
0x000c6339: dec dword ptr [ebp - 0x92c2380]; push esi; inc ecx; jne 0xc6346; cmove eax, edx; ret; 
0x000c7209: dec dword ptr [ebp - 0x92ee380]; push esi; inc ecx; jnp 0xc7218; cmove eax, edx; ret; 
0x000c54c9: dec dword ptr [ebp - 0x930c380]; push esi; inc ecx; jnp 0xc54d8; cmove eax, edx; ret; 
0x0017ec05: dec dword ptr [ebp - 0x937b]; call dword ptr [ecx + 0x6a]; 
0x000acbd9: dec dword ptr [ebp - 0x93db380]; push esi; inc ecx; jnp 0xacbe8; cmove eax, edx; ret; 
0x00138be7: dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x0017f738: dec dword ptr [ebp - 0x9fffaa4]; ret; 
0x001328c7: dec dword ptr [ebp - 0xa77b]; call dword ptr [ebx + 0x50]; 
0x0017f416: dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000333b8: dec dword ptr [ebp - 0xc743]; dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x000333be: dec dword ptr [ebp - 0xcb4b]; call dword ptr [edi + 0x56]; 
0x001769b9: dec dword ptr [ebp - 0xcfc334a]; call dword ptr [ebp - 0x73]; 
0x001505e8: dec dword ptr [ebp - 0xeccd37d]; call dword ptr [esi + 0x50]; 
0x00027147: dec dword ptr [ebx + 0x10c083]; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x00127385: dec dword ptr [ebx + 0x11083]; add byte ptr [ebp - 0x6af2b6d], cl; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x00126d6d: dec dword ptr [ebx + 0x11083]; add byte ptr [ebp - 0x6aff76d], cl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x000a2568: dec dword ptr [ebx + 0x11083]; add byte ptr [ecx - 0x74167609], cl; push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x001094d0: dec dword ptr [ebx + 0x1182454]; ret 0x7c80; 
0x0011130b: dec dword ptr [ebx + 0x158b384]; stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0006670b: dec dword ptr [ebx + 0x16080]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000a92eb: dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0009397c: dec dword ptr [ebx + 0x3118244c]; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0018805b: dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00123072: dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00128ff2: dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0002c35f: dec dword ptr [ebx + 0x390c2444]; ret 0x1a73; 
0x00114b55: dec dword ptr [ebx + 0x390c2454]; ret 0x6274; 
0x0002ce99: dec dword ptr [ebx + 0x39142444]; ret 0x850f; 
0x0016892c: dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x00159a44: dec dword ptr [ebx + 0x392c244c]; ret; 
0x00168aaf: dec dword ptr [ebx + 0x39302444]; ret 0x1074; 
0x001b43bc: dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x0014a2cc: dec dword ptr [ebx + 0x39702444]; ret 0x840f; 
0x00069ca2: dec dword ptr [ebx + 0x39c12907]; fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x00066d87: dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0005dd1d: dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000f1def: dec dword ptr [ebx + 0x458b084d]; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0010a977: dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a98c: dec dword ptr [ebx + 0x458b2455]; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0006f758: dec dword ptr [ebx + 0x478b0457]; or byte ptr [ecx], bh; ret 0x840f; 
0x00138eb8: dec dword ptr [ebx + 0x538b2043]; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x0012640f: dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00190d17: dec dword ptr [ebx + 0x5b082444]; ret; 
0x000efaf2: dec dword ptr [ebx + 0x6189f]; add byte ptr [ebp + 0x61887], cl; add byte ptr [ecx], bh; ret; 
0x001465e2: dec dword ptr [ebx + 0x650c2454]; sub edx, dword ptr [0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00100fce: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0x7540; 
0x0010112a: dec dword ptr [ebx + 0x8093]; add dh, dh; ret 0xf40; 
0x0009a8fb: dec dword ptr [ebx + 0xf0c2444]; inc edi; ret 0x948b; 
0x00048667: dec dword ptr [ebx + 0xf10247c]; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00186d71: dec dword ptr [ebx - 0x137c37bb]; or al, 0x8d; sbb byte ptr [eax + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00137d1f: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x5632808d; stc; call dword ptr [eax - 0x75]; 
0x0013718a: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa88c808d; stc; call dword ptr [eax - 0x75]; 
0x00137dd2: dec dword ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0xa8c4808d; stc; call dword ptr [eax + 0x6a]; 
0x00035a64: dec dword ptr [ebx - 0x137c67bb]; or al, 0x89; push ebp; mov esp, 0x2e55808d; stc; call dword ptr [eax - 0x18]; 
0x000ec9aa: dec dword ptr [ebx - 0x137cffbb]; or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec9aa: dec dword ptr [ebx - 0x137cffbb]; or al, 0x31; call dword ptr [eax - 0x18]; push 0xc4830004; adc byte ptr [ecx], bh; ret; 
0x0010db38: dec dword ptr [ebx - 0x1474b]; jmp dword ptr [ebp - 0x75]; 
0x0010da2a: dec dword ptr [ebx - 0x1477b]; jmp dword ptr [ebp - 0x75]; 
0x0016880d: dec dword ptr [ebx - 0x14ebdb8c]; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x000fb2db: dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; or ecx, dword ptr [eax - 7]; call dword ptr [eax - 1]; 
0x000abc11: dec dword ptr [ebx - 0x16f3dba4]; call 0x8e0abc14; nop; mov ah, 0x9a; stc; call dword ptr [edx - 0x73]; 
0x000d7a8a: dec dword ptr [ebx - 0x1aff7b]; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00031fc9: dec dword ptr [ebx - 0x1d36b]; dec dword ptr [ebp - 0x68cab7e]; call dword ptr [eax - 0x73]; 
0x000386c1: dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000cc1df: dec dword ptr [ebx - 0x27b7dbbc]; mov byte ptr [eax], dh; ret 0xfff9; 
0x0004d017: dec dword ptr [ebx - 0x27e7dbbc]; mov byte ptr [eax], dh; ret 0xfff9; 
0x0017c5b1: dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x000d7a90: dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x000590d6: dec dword ptr [ebx - 0x35eb7b]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000579bc: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d744a: dec dword ptr [ebx - 0x361b6b]; dec dword ptr [ebx - 0x367b43]; dec dword ptr [ebx - 0x366f4b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d7244: dec dword ptr [ebx - 0x361b6b]; inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00058a32: dec dword ptr [ebx - 0x361f73]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000569d7: dec dword ptr [ebx - 0x36274b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d63c1: dec dword ptr [ebx - 0x362b63]; call dword ptr [ebx]; 
0x000d5ecb: dec dword ptr [ebx - 0x362f7b]; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x000569d1: dec dword ptr [ebx - 0x363343]; dec dword ptr [ebx - 0x36274b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d7fe8: dec dword ptr [ebx - 0x36334b]; call dword ptr [edi - 1]; 
0x000d656b: dec dword ptr [ebx - 0x363373]; call dword ptr [eax - 0x73]; 
0x000d76ee: dec dword ptr [ebx - 0x36337b]; call dword ptr [esi + 0x57]; 
0x0005993e: dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059b9d: dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x00059bc2: dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x0005968c: dec dword ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x00058e1d: dec dword ptr [ebx - 0x363763]; call dword ptr [eax - 0x73]; 
0x0005782e: dec dword ptr [ebx - 0x36377b]; dec dword ptr [ebp - 0x7d350]; dec dword ptr [ebp - 0x6d06680]; call dword ptr [esi + 0x6a]; 
0x0005925a: dec dword ptr [ebx - 0x36377b]; jmp dword ptr [ebp - 0x75]; 
0x000d7939: dec dword ptr [ebx - 0x363f73]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00058b7a: dec dword ptr [ebx - 0x363f7b]; call dword ptr [esi + 0x53]; 
0x00056dfd: dec dword ptr [ebx - 0x36434b]; call dword ptr [ebx]; 
0x000d8aaa: dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x000d8cf9: dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x000d8712: dec dword ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x000587a1: dec dword ptr [ebx - 0x364b63]; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x000d8bcc: dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000d6d3b: dec dword ptr [ebx - 0x364b7b]; call dword ptr [edi + 0x6a]; 
0x000d8307: dec dword ptr [ebx - 0x364b7b]; jmp dword ptr [ebp - 0x75]; 
0x00057793: dec dword ptr [ebx - 0x365363]; inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000569cb: dec dword ptr [ebx - 0x36536b]; dec dword ptr [ebx - 0x363343]; dec dword ptr [ebx - 0x36274b]; inc dword ptr [ecx]; ret 0xd389; 
0x000d6e1d: dec dword ptr [ebx - 0x36576b]; dec dword ptr [ebp - 0x35e343]; call dword ptr [eax - 0x73]; 
0x000d7bb7: dec dword ptr [ebx - 0x365773]; dec dword ptr [ebp - 0x36177b]; dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x00056c5c: dec dword ptr [ebx - 0x366763]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x000d7456: dec dword ptr [ebx - 0x366f4b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000569c5: dec dword ptr [ebx - 0x36737b]; dec dword ptr [ebx - 0x36536b]; dec dword ptr [ebx - 0x363343]; dec dword ptr [ebx - 0x36274b]; inc dword ptr [ecx]; ret 0xd389; 
0x000579c2: dec dword ptr [ebx - 0x36774b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d7450: dec dword ptr [ebx - 0x367b43]; dec dword ptr [ebx - 0x366f4b]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d7ee0: dec dword ptr [ebx - 0x367b7b]; inc dword ptr [ebx - 0x7bf00008]; or eax, 0x31000009; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d606a: dec dword ptr [ebx - 0x368f43]; dec dword ptr [edi]; test byte ptr [edx], dh; or al, 0; add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00056c62: dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x00056c56: dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366763]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x0015ea0f: dec dword ptr [ebx - 0x38dfdbbc]; add byte ptr [eax], al; add byte ptr [eax], al; add cl, ch; ret; 
0x0006ec53: dec dword ptr [ebx - 0x39337e7c]; clc; dec dword ptr [ebp + 0x1ab50184]; jecxz 0x6ec61; jmp eax; 
0x00139b45: dec dword ptr [ebx - 0x3b7c3bab]; adc byte ptr [ebp - 0x7ce4e884], cl; ret; 
0x001377e1: dec dword ptr [ebx - 0x3b7c4bbb]; adc byte ptr [ebx + 0x5f890c40], cl; or al, 0x89; ret 0x4589; 
0x0013686f: dec dword ptr [ebx - 0x3b7cd7b9]; adc byte ptr [ebx - 0x72affb14], al; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x56]; 
0x00137175: dec dword ptr [ebx - 0x3b7cf78b]; adc byte ptr [ecx], cl; ret; 
0x0008d408: dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x0012ac01: dec dword ptr [ebx - 0x3f7af7bd]; jne 0x12ac28; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000fef86: dec dword ptr [ebx - 0x3f7ce3a2]; add dword ptr [ecx], edi; ret; 
0x000fee06: dec dword ptr [ebx - 0x3f7ce3aa]; add dword ptr [ecx], edi; ret 0xef7f; 
0x00068763: dec dword ptr [ebx - 0x4436b]; dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x00069a75: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00069c13: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xd801; 
0x00069e05: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x000684db: dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x0006d585: dec dword ptr [ebx - 0x4476b]; dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x00146246: dec dword ptr [ebx - 0x44f43]; jmp dword ptr [ebp - 0x5f]; 
0x00068468: dec dword ptr [ebx - 0x45763]; dec dword ptr [ebx - 0x59773]; inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010fdfa: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax + 0x53]; 
0x0010fe4c: dec dword ptr [ebx - 0x45f73]; call dword ptr [eax - 0x77]; 
0x0018fd3c: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65d9379]; call dword ptr [eax - 0x73]; 
0x0018dd7c: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f1f79]; call dword ptr [eax - 0x73]; 
0x0018c03c: dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3f79]; call dword ptr [eax - 0x73]; 
0x000f35d4: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; 
0x000f6f2e: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x18]; push ebp; ret 0xfff2; 
0x000f6e9b: dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000f358b: dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000f2163: dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0018edb9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x129b5380]; call dword ptr [eax + 0x6a]; 
0x000f9cb9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x144b8380]; call dword ptr [eax + 0x6a]; 
0x0018cdf9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14599380]; call dword ptr [eax + 0x6a]; 
0x000f6379: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1484c380]; call dword ptr [eax + 0x6a]; 
0x0018b0b9: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1492b380]; call dword ptr [eax + 0x6a]; 
0x000f2b39: dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14bdc380]; call dword ptr [eax + 0x6a]; 
0x000f34ab: dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x000f31eb: dec dword ptr [ebx - 0x4736b]; call dword ptr [edx - 1]; 
0x000f2a72: dec dword ptr [ebx - 0x4776b]; call dword ptr [edi - 1]; 
0x000f23df: dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x00099a10: dec dword ptr [ebx - 0x47fbdbb4]; lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0018edbf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x129b5380]; call dword ptr [eax + 0x6a]; 
0x000f9cbf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x144b8380]; call dword ptr [eax + 0x6a]; 
0x0018cdff: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14599380]; call dword ptr [eax + 0x6a]; 
0x000f637f: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1484c380]; call dword ptr [eax + 0x6a]; 
0x0018b0bf: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1492b380]; call dword ptr [eax + 0x6a]; 
0x000f2b3f: dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14bdc380]; call dword ptr [eax + 0x6a]; 
0x000f36b3: dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000f5cbc: dec dword ptr [ebx - 0x49f63]; dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x000f3585: dec dword ptr [ebx - 0x49f73]; dec dword ptr [ebx - 0x46f63]; call dword ptr [ecx - 0x7d]; 
0x000f6e95: dec dword ptr [ebx - 0x49f7b]; dec dword ptr [ebx - 0x46f63]; call dword ptr [eax - 0x7d]; 
0x000734aa: dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x00072d75: dec dword ptr [ebx - 0x4eb43]; dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00078a48: dec dword ptr [ebx - 0x4ff4b]; dec dword ptr [ebp - 0x6820f7a]; call dword ptr [eax + 0x68]; 
0x00074577: dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x00078494: dec dword ptr [ebx - 0x4ff63]; inc dword ptr [ebx - 0x7c72f314]; adc dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x00075a96: dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x000734a4: dec dword ptr [ebx - 0x50363]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x000791d9: dec dword ptr [ebx - 0x5037b]; call dword ptr [ecx + 0x51]; 
0x001317a5: dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000756c5: dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x00077b56: dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x0006d58b: dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x00068769: dec dword ptr [ebx - 0x58b73]; inc dword ptr [ecx]; ret 0xd801; 
0x000699d2: dec dword ptr [ebx - 0x58f43]; dec dword ptr [ebp - 0x6822379]; call dword ptr [eax - 0x73]; 
0x00069cb3: dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x00068c94: dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x00067a76: dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006846e: dec dword ptr [ebx - 0x59773]; inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006c2bf: dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x00113fdd: dec dword ptr [ebx - 0x5ab43]; dec dword ptr [ebp - 0x65da779]; call dword ptr [eax + 0x68]; 
0x000f487d: dec dword ptr [ebx - 0x5ab43]; dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x0006bfaa: dec dword ptr [ebx - 0x5ab4b]; call dword ptr [eax + 0x50]; 
0x00067ab6: dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x000f16f3: dec dword ptr [ebx - 0x5ab63]; call dword ptr [edi - 0x77]; 
0x000f1922: dec dword ptr [ebx - 0x5ab7b]; jmp dword ptr [ebp - 0x75]; 
0x00069b10: dec dword ptr [ebx - 0x5af7b]; dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x000f8fad: dec dword ptr [ebx - 0x5bb43]; dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x000f8933: dec dword ptr [ebx - 0x5bb63]; call dword ptr [edi - 0x77]; 
0x000f8b62: dec dword ptr [ebx - 0x5bb7b]; jmp dword ptr [ebp - 0x75]; 
0x0006c383: dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x00069b16: dec dword ptr [ebx - 0x5cf6b]; dec dword ptr [ebx + 0x40f63440]; jmp dword ptr [eax]; 
0x0006b2fc: dec dword ptr [ebx - 0x5d343]; dec dword ptr [ecx + 0x29f829f0]; ret; 
0x001a33e1: dec dword ptr [ebx - 0x64737c7c]; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bd4: dec dword ptr [ebx - 0x64737c7c]; idiv edi; sub eax, ecx; pop ebx; ret; 
0x00056896: dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x00028f48: dec dword ptr [ebx - 0x72b3db84]; xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002c419: dec dword ptr [ebx - 0x72b3db84]; xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x000caafb: dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x000caa45: dec dword ptr [ebx - 0x72b7db84]; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0002aacc: dec dword ptr [ebx - 0x72bbdb84]; xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0002b805: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x00028855: dec dword ptr [ebx - 0x72c3db84]; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b314: dec dword ptr [ebx - 0x72c3db84]; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002e23a: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0002e35b: dec dword ptr [ebx - 0x72c7db84]; xchg dword ptr [edx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00051203: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x00051302: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x00183a02: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + edi*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00183a48: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [edi + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x001693d2: dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [esi + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x0011ea60: dec dword ptr [ebx - 0x72d7dba4]; xor dword ptr [ebx], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x000c74d7: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7100: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4c78: dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0013671b: dec dword ptr [ebx - 0x72e3dba4]; cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x00096589: dec dword ptr [ebx - 0x72e3dba4]; sub esp, -0x7a; stc; call dword ptr [eax - 0x73]; 
0x000c4fcc: dec dword ptr [ebx - 0x72e3dbac]; or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x0004a1c9: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x0004d51e: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x0004a401: dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x000a2a14: dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2b29: dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [ecx + ebx*4], ch; stc; call dword ptr [eax - 0x73]; 
0x0009e626: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [eax - 0x77], esi; stc; call dword ptr [eax - 0x73]; 
0x00113171: dec dword ptr [ebx - 0x72f3db84]; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x73]; 
0x000a4e06: dec dword ptr [ebx - 0x72f3db84]; xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x000e2fe0: dec dword ptr [ebx - 0x72f3db8c]; xchg al, dl; sahf; stc; call dword ptr [eax - 0x73]; 
0x0013c73e: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0013ed8b: dec dword ptr [ebx - 0x72f3db8c]; xchg byte ptr [ebx + ebp*4], ah; stc; call dword ptr [eax - 0x73]; 
0x001537dd: dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], edi; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00111ddb: dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [edx], esi; stc; call dword ptr [eax - 0x73]; 
0x000479e4: dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x00092e6e: dec dword ptr [ebx - 0x72fbdb84]; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x001ad973: dec dword ptr [ebx - 0x74f7dbbc]; je 0x1ad99f; js 0x1ad9b6; ret; 
0x00107354: dec dword ptr [ebx - 0x74fbdbbc]; adc bh, dh; ret 0x30f; 
0x0014c1f3: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014c496: dec dword ptr [ebx - 0x74fbdbbc]; pop eax; or dh, dh; ret; 
0x000a08c8: dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x000825df: dec dword ptr [ebx - 0x76e3dbbc]; ret 0x4489; 
0x001164cb: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134564; ret; 
0x00117f7b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29136014; ret; 
0x00119a1b: dec dword ptr [ebx - 0x76e7dba4]; rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29137ab4; ret; 
0x0002b2fe: dec dword ptr [ebx - 0x76e7dbb4]; ret; 
0x00103f43: dec dword ptr [ebx - 0x76ebdbb4]; ret; 
0x001443cb: dec dword ptr [ebx - 0x76ebdbbc]; ret 0x689; 
0x000c97d4: dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x000feeae: dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x0003e121: dec dword ptr [ebx - 0x76efdbb4]; ret 0xdaf7; 
0x00035313: dec dword ptr [ebx - 0x76f3dbb4]; ret; 
0x001759a9: dec dword ptr [ebx - 0x76f7db8c]; ret; 
0x0018669f: dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x00148ffe: dec dword ptr [ebx - 0x76fbdb8c]; ret; 
0x00027512: dec dword ptr [ebx - 0x79722b8b]; and al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x00145f8a: dec dword ptr [ebx - 0x7a76e3bb]; mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001b10bf: dec dword ptr [ebx - 0x7adbdbbc]; sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x001441e7: dec dword ptr [ebx - 0x7ae7dbbc]; ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x000cf894: dec dword ptr [ebx - 0x7aefdbbc]; ror byte ptr [edi], 0x84; ret 0x14; 
0x001b3c97: dec dword ptr [ebx - 0x7af3db8c]; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x0012c910: dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0015a63b: dec dword ptr [ebx - 0x7c72dbe4]; xchg esp, eax; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x00136527: dec dword ptr [ebx - 0x7ccbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0014775f: dec dword ptr [ebx - 0x7cd7dbac]; ret 0x3b04; 
0x0015eae3: dec dword ptr [ebx - 0x7cdfdb84]; clc; jmp dword ptr [ebp - 0x5f]; 
0x000ad369: dec dword ptr [ebx - 0x7cefdba4]; call 0x5576075; add byte ptr [ecx], al; ret; 
0x000deba5: dec dword ptr [ebx - 0x7cf3dbac]; ret 0x3909; 
0x00087439: dec dword ptr [ebx - 0x7cf3dbb4]; in al, dx; or al, 0x83; ret; 
0x00159621: dec dword ptr [ebx - 0x7cf3dbbc]; mov byte ptr [ecx], 0xeb; ret; 
0x000f0be0: dec dword ptr [ebx - 0x7cf3dbbc]; ret 0x8902; 
0x0005df91: dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x0005df6c: dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x0005e0c3: dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x0005d87b: dec dword ptr [ebx - 0x8b7b]; jmp dword ptr [ebp - 0x75]; 
0x0005dd3c: dec dword ptr [ebx - 0x8f43]; call dword ptr [edi + 0x50]; 
0x0017c5ab: dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x00142d43: dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x000329c1: dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x000329c1: dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; ret 0xff07; 
0x00138dec: dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x0005dd17: dec dword ptr [ebx - 0x9b7b]; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x00142d3d: dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0013295e: dec dword ptr [ebx - 0xbb4b]; dec dword ptr [ebp - 0x6586b7a]; call dword ptr [eax - 0x73]; 
0x00132a34: dec dword ptr [ebx - 0xbb7b]; dec dword ptr [ebp - 0x10aa5380]; call dword ptr [eax + 0x6a]; 
0x0017f47b: dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645137a]; call dword ptr [eax - 0x73]; 
0x0009321d: dec dword ptr [ebx - 0xf4753a3]; add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x000923f4: dec dword ptr [ebx - 0xf47efb1]; add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001248a3: dec dword ptr [ecx + 0x14a165f3]; add byte ptr [eax], al; add byte ptr [ecx - 0x79721bbb], cl; les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x001537bc: dec dword ptr [ecx + 0x1c808dc7]; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0017c5bd: dec dword ptr [ecx + 0x1c8d544]; ret; 
0x00189711: dec dword ptr [ecx + 0x245489d1]; adc al, 0x89; ret 0xca29; 
0x00105822: dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10582c; add esi, esi; ret; 
0x00065a87: dec dword ptr [ecx + 0x247c8bf8]; pop eax; jmp eax; 
0x0006b274: dec dword ptr [ecx + 0x29008bfa]; ret 0xd389; 
0x0006b302: dec dword ptr [ecx + 0x29f829f0]; ret; 
0x001326eb: dec dword ptr [ecx + 0x31d389c1]; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001269d2: dec dword ptr [ecx + 0x3c938d16]; jl 0x1269d0; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00106bc0: dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00134443: dec dword ptr [ecx + 0x44e82434]; in eax, dx; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001328af: dec dword ptr [ecx + 0x481487]; add byte ptr [ebp - 0x10aa9379], cl; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0017a5dd: dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00057e4e: dec dword ptr [ecx + 0x4c891f0c]; pop ds; add al, 0x83; ret; 
0x00126d79: dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x0017ac4c: dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x0016e51a: dec dword ptr [ecx + 0x5b102454]; pop esi; jmp eax; 
0x00127391: dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x0007ed1a: dec dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x0005bf6d: dec dword ptr [ecx + 0x5f5e5bf0]; ret; 
0x00103146: dec dword ptr [ecx + 0x5f5e5bf8]; ret; 
0x000fd715: dec dword ptr [ecx + 0x72e82434]; pop edx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000a4ac7: dec dword ptr [ecx + 0x74c085c6]; ret 0x408d; 
0x00126407: dec dword ptr [ecx + 0x7c938d16]; jo 0x126405; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0010e38f: dec dword ptr [ecx + 0xbad0]; pushal; add cl, al; call 0xfe11c9f; dec edi; ret 0xbce9; 
0x0012695d: dec dword ptr [ecx + 0xc938d16]; jl 0x12695b; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0010d8f7: dec dword ptr [ecx + 0xd0b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010da53: dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00058972: dec dword ptr [ecx + 0xfdb85d6]; test cl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00138df2: dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x00139289: dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x001547bd: dec dword ptr [ecx - 0x12b6b]; call dword ptr [eax - 0x18]; 
0x001811d2: dec dword ptr [ecx - 0x15f7b]; jmp dword ptr [ebp - 0x5f]; 
0x001ac9db: dec dword ptr [ecx - 0x16e3db84]; ret; 
0x00097162: dec dword ptr [ecx - 0x16e3dba4]; sub eax, 0x8dfffffe; je 0x97195; add bh, dh; ret 0; 
0x0003828b: dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0003170d: dec dword ptr [ecx - 0x1cb4b]; dec dword ptr [ebp - 0x20b99379]; call dword ptr [eax + 0x6a]; 
0x000314c3: dec dword ptr [ecx - 0x1d34b]; jmp dword ptr [ebp - 0x75]; 
0x00031742: dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x0003173c: dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x000386c7: dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00034023: dec dword ptr [ecx - 0x2d7a3f88]; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x000d6ece: dec dword ptr [ecx - 0x361b6b]; jmp dword ptr [ebx]; 
0x00058baf: dec dword ptr [ecx - 0x361f6b]; call dword ptr [eax - 0x75]; 
0x000d7008: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x00058393: dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x00058449: dec dword ptr [ecx - 0x361f73]; dec dword ptr [ecx - 0x36274b]; call dword ptr [eax - 0x18]; 
0x000d70b9: dec dword ptr [ecx - 0x361f73]; dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x0005844f: dec dword ptr [ecx - 0x36274b]; call dword ptr [eax - 0x18]; 
0x00059b15: dec dword ptr [ecx - 0x362763]; call dword ptr [eax - 0x75]; 
0x000d70bf: dec dword ptr [ecx - 0x362f4b]; call dword ptr [eax - 0x18]; 
0x000d8b0d: dec dword ptr [ecx - 0x362f73]; call dword ptr [eax - 0x18]; 
0x000d7d89: dec dword ptr [ecx - 0x363763]; inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00058adb: dec dword ptr [ecx - 0x364773]; inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000d66ec: dec dword ptr [ecx - 0x366f7b]; dec dword ptr [ebp + 0x4f0fff46]; ret 0x48d; 
0x000f1dfb: dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012a0db: dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x0012a0cf: dec dword ptr [ecx - 0x47f7b]; dec dword ptr [ebp - 0x45b7b]; dec dword ptr [ecx - 0x47b6b]; call dword ptr [eax - 0x73]; 
0x0002726e: dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x000381de: dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00027fa2: dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x000f2169: dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f36ad: dec dword ptr [ecx - 0x49b7b]; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x0012a161: dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x00131959: dec dword ptr [ecx - 0x4b37b]; call ecx; 
0x00072d87: dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00072d7b: dec dword ptr [ecx - 0x4c77b]; dec dword ptr [ebp - 0x4c77b]; dec dword ptr [ecx - 0x4c343]; dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00072cc9: dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x000738c3: dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x0007755d: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [eax - 0x18]; 
0x00078a99: dec dword ptr [ecx - 0x4ef6b]; call dword ptr [eax - 0x75]; 
0x0007349e: dec dword ptr [ecx - 0x4f743]; dec dword ptr [ebx - 0x50363]; dec dword ptr [ebx - 0x4eb43]; call dword ptr [esi - 0x18]; 
0x00072ccf: dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00077b50: dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x0007921f: dec dword ptr [ecx - 0x52b6b]; inc dword ptr [ecx]; ret; 
0x00072d8d: dec dword ptr [ecx - 0x52f7b]; call dword ptr [eax - 0x18]; 
0x00072cd5: dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x00126b2c: dec dword ptr [ecx - 0x536c72ea]; push -0xa; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0007859d: dec dword ptr [ecx - 0x5377b]; call dword ptr [edi + 0x57]; 
0x00074ac7: dec dword ptr [ecx - 0x54743]; call dword ptr [esi - 1]; 
0x00066705: dec dword ptr [ecx - 0x56763]; dec dword ptr [ebx + 0x16080]; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000e1b76: dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x00068746: dec dword ptr [ecx - 0x58b73]; call dword ptr [eax - 0x18]; 
0x0006bc0d: dec dword ptr [ecx - 0x58b73]; call dword ptr [edx + 0x52]; 
0x0006a5fb: dec dword ptr [ecx - 0x58b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006bf17: dec dword ptr [ecx - 0x5936b]; call dword ptr [eax - 0x75]; 
0x0006c297: dec dword ptr [ecx - 0x5936b]; call dword ptr [edi - 0x18]; 
0x00068d9d: dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x00069a52: dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0006c4fe: dec dword ptr [ecx - 0x59773]; call dword ptr [edx + 0x52]; 
0x00068d97: dec dword ptr [ecx - 0x59b6b]; dec dword ptr [ecx - 0x59373]; call dword ptr [eax - 0x18]; 
0x00069a4c: dec dword ptr [ecx - 0x59b73]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000682d9: dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x00066639: dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x00068c8e: dec dword ptr [ecx - 0x5b373]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x000f125b: dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000f849b: dec dword ptr [ecx - 0x5cf7b]; jmp dword ptr [ebp - 0x5f]; 
0x0006ab4e: dec dword ptr [ecx - 0x5e76b]; inc dword ptr [ecx]; ret; 
0x00067f0a: dec dword ptr [ecx - 0x5e77b]; call dword ptr [eax - 0x18]; 
0x0006db61: dec dword ptr [ecx - 0x5ef73]; call dword ptr [edi - 0x18]; 
0x0006663f: dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x0006671d: dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x0012722d: dec dword ptr [ecx - 0x636c72ea]; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0007c42a: dec dword ptr [ecx - 0x6b77762f]; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00126bcb: dec dword ptr [ecx - 0x6c72f3aa]; cld; ret 0xffe7; 
0x0010497f: dec dword ptr [ecx - 0x7401760f]; jl 0x1049ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x00154119: dec dword ptr [ecx - 0x7572a7b8]; insb byte ptr es:[edi], dx; ret 0xfff2; 
0x000ae641: dec dword ptr [ecx - 0x76217609]; ret; 
0x000386cd: dec dword ptr [ecx - 0x76267631]; ret; 
0x00178ea1: dec dword ptr [ecx - 0x763e7606]; ret; 
0x0006c2b5: dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x00112760: dec dword ptr [ecx - 0x768bdbbc]; ret; 
0x0014b389: dec dword ptr [ecx - 0x7693dbbc]; ret; 
0x000c62aa: dec dword ptr [ecx - 0x769fdbac]; ret 0x63e9; 
0x000375a5: dec dword ptr [ecx - 0x76a3dbbc]; ret 0xc483; 
0x000c61cb: dec dword ptr [ecx - 0x76a7dbac]; ret 0xbde9; 
0x00051d3e: dec dword ptr [ecx - 0x76b3db84]; ret; 
0x0003fec0: dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe34: dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00142f86: dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0015b58c: dec dword ptr [ecx - 0x76d7dbbc]; ret; 
0x0010705f: dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x0014fca8: dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00040424: dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00040314: dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00122289: dec dword ptr [ecx - 0x76efdba4]; ret 0xf983; 
0x0003fee1: dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0003fd17: dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x000a7de1: dec dword ptr [ecx - 0x7917dbe4]; idiv ch; jmp dword ptr [esi - 0x70]; 
0x000d7b0c: dec dword ptr [ecx - 0x7a2e763d]; dec dword ptr [edi]; test al, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x000fda03: dec dword ptr [ecx - 0x7b17dbcc]; push edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00154769: dec dword ptr [ecx - 0x7c037607]; rcr byte ptr [edx], 0x89; ret 0x25; 
0x00060b2b: dec dword ptr [ecx - 0x7c72dbfc]; stc; call dword ptr [ebp + 0x56]; 
0x000cc12c: dec dword ptr [ecx - 0x7cefdbac]; in al, dx; or bh, bh; je 0xcc15b; adc byte ptr [eax - 0x18], dl; ret 0x679; 
0x000cf92c: dec dword ptr [ecx - 0x7cefdbac]; in al, dx; or bh, bh; je 0xcf95b; or byte ptr [eax - 0x18], dl; ret 0x641; 
0x000838a0: dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x00139283: dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0005c484: dec dword ptr [ecx - 0x876b]; call dword ptr [eax - 1]; 
0x00142612: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0005bfcf: dec dword ptr [ecx - 0x8b63]; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0005dd98: dec dword ptr [ecx - 0x8f6b]; call dword ptr [eax - 1]; 
0x00032879: dec dword ptr [ecx - 0x8f7b]; call dword ptr [eax + 0x56]; 
0x0005bfdb: dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x00032a96: dec dword ptr [ecx - 0x9773]; call dword ptr [edx + 0x56]; 
0x00142618: dec dword ptr [ecx - 0x9b7b]; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0005de93: dec dword ptr [ecx - 0xa363]; jmp dword ptr [esi + 0x25]; 
0x0014261e: dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x0017e9f2: dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x00173b68: dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0005bfd5: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0x934b]; jmp dword ptr [ebp - 0x75]; 
0x0017e9ec: dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0005c6f2: dec dword ptr [ecx - 0xcb6b]; inc dword ptr [eax - 0x7bf09a06]; push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0017f41c: dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0017f410: dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0017efdc: dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x0017efd6: dec dword ptr [ecx - 0xef4b]; dec dword ptr [ecx - 0xeb43]; jmp dword ptr [ebp - 0x5f]; 
0x00109d99: dec dword ptr [ecx]; retf 0x5489; ret; 
0x00121b14: dec dword ptr [ecx]; ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x0012789a: dec dword ptr [edi]; add byte ptr [eax], al; and eax, 0xfffff000; or eax, edx; ret; 
0x001a7f23: dec dword ptr [edi]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0013cebb: dec dword ptr [edi]; add byte ptr [ebx + 0xc880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0004a6a8: dec dword ptr [edi]; add byte ptr [ecx], cl; ret 0x840f; 
0x0010e4c8: dec dword ptr [edi]; add dword ptr [ecx + 0x6a], -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0012ec28: dec dword ptr [edi]; and ecx, 0x62; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x00028351: dec dword ptr [edi]; dec eax; ret 0x2ec3; 
0x000d66f5: dec dword ptr [edi]; dec edi; ret 0x48d; 
0x00068a00: dec dword ptr [edi]; dec edi; ret 0x8589; 
0x0005c4ca: dec dword ptr [edi]; dec esi; ret 0xec83; 
0x0003a205: dec dword ptr [edi]; inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0004413d: dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x000a9283: dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9311: dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0012d6e2: dec dword ptr [edi]; inc ebp; ret 0xd231; 
0x001328bb: dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000666ed: dec dword ptr [edi]; inc ebp; ret; 
0x001a38a9: dec dword ptr [edi]; inc esi; ret 0x5d5e; 
0x000a5d42: dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a92c4: dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000e81e4: dec dword ptr [edi]; inc esp; ret 0x7489; 
0x000a917d: dec dword ptr [edi]; inc esp; ret 0xc083; 
0x0003cc59: dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x000a655d: dec dword ptr [edi]; inc esp; ret 0xe821; 
0x001581de: dec dword ptr [edi]; inc esp; ret 0xec83; 
0x000a139c: dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000afacc: dec dword ptr [edi]; inc esp; ret; 
0x0008bb0f: dec dword ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0010ade2: dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00166f8a: dec dword ptr [edi]; mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x0005c205: dec dword ptr [edi]; mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0006b3e1: dec dword ptr [edi]; mov dh, 0x8d; push 0x88fffffa; or cl, ch; ret 0xffc5; 
0x000d7d21: dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000e0872: dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x0004908c: dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004057b: dec dword ptr [edi]; or dword ptr [esi + 0x31fffe49], 0xffffffc0; ret; 
0x000d7b12: dec dword ptr [edi]; test al, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x0014e27d: dec dword ptr [edi]; test bh, dh; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x000d7ee9: dec dword ptr [edi]; test byte ptr [0x31000009], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0012ed75: dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000c2dbe: dec dword ptr [edi]; test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x000ca437: dec dword ptr [edi]; test byte ptr [ebp + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00050c8d: dec dword ptr [edi]; test byte ptr [ebx + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000744f2: dec dword ptr [edi]; test byte ptr [ebx], bh; sbb al, 0; add byte ptr [ecx], al; ret; 
0x000d69b5: dec dword ptr [edi]; test byte ptr [edi], bl; add al, byte ptr [eax]; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x0006dc33: dec dword ptr [edi]; test byte ptr [edi], dh; ret; 
0x00152e8a: dec dword ptr [edi]; test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x000c2d9b: dec dword ptr [edi]; test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x000d6070: dec dword ptr [edi]; test byte ptr [edx], dh; or al, 0; add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000593e4: dec dword ptr [edi]; test byte ptr [esi], ch; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0017f1fd: dec dword ptr [edi]; test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x000a75bc: dec dword ptr [edi]; test dword ptr [0x5bfff7ce], edx; pop esi; pop edi; ret; 
0x000fe14c: dec dword ptr [edi]; test dword ptr [eax + eax + 0x4f60000], ebx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000c2a3f: dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x0012a0aa: dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000c2b4a: dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x00077e01: dec dword ptr [edi]; test eax, esp; ret; 
0x000d7bc3: dec dword ptr [edi]; xchg ebp, eax; ret 0x9d8b; 
0x000587a7: dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x00104f37: dec dword ptr [edi]; xchg ebp, eax; ret 0xc209; 
0x0005539f: dec dword ptr [edi]; xchg ebp, eax; ret 0xd689; 
0x000685c7: dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00067bd4: dec dword ptr [edi]; xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x001877b4: dec dword ptr [edi]; xchg esp, eax; ret 0x1389; 
0x00032219: dec dword ptr [edi]; xchg esp, eax; ret 0x4c89; 
0x00100534: dec dword ptr [edi]; xchg esp, eax; ret 0x87eb; 
0x0016731d: dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0007d09c: dec dword ptr [edi]; xchg esp, eax; ret; 
0x00122867: dec dword ptr [edi]; xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x000f0ed8: dec dword ptr [edi]; xor dword ptr [ecx], 0x40; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x0016eeb6: dec eax; adc al, 0x72; ret 0x4889; 
0x000c1432: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bdfac: dec eax; adc byte ptr [eax + 0x448b1470], cl; and al, 8; pop esi; ret; 
0x000c13d1: dec eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bdf4e: dec eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000a6de0: dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x00194fcb: dec eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016cb54: dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0016e00f: dec eax; add al, 0x5b; ret; 
0x001396c8: dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0011bd23: dec eax; add al, 0x89; push eax; or byte ptr [ebp - 0x1220f36d], cl; call dword ptr [edx - 0x73]; 
0x00092dab: dec eax; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000813d8: dec eax; add al, 0x8b; add byte ptr [ecx + 0x4c4830a], cl; pop ebx; pop esi; ret; 
0x000810ae: dec eax; add al, 0x8b; dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00087f84: dec eax; add al, 0xf; mov dh, 2; ret; 
0x000e3123: dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00070e65: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0006529f: dec eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x0014e4d5: dec eax; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014da45: dec eax; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00152e9e: dec eax; add dword ptr [ecx - 0x38cfdbb4], ecx; inc esp; ret 4; 
0x0019e5db: dec eax; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019cdd2: dec eax; add eax, 0x542b60f; sub eax, ecx; ret; 
0x000bdec0: dec eax; add eax, 0x824448b; pop esi; ret; 
0x000c1333: dec eax; add eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00127d50: dec eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008e9f4: dec eax; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008b7f5: dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0016c913: dec eax; and byte ptr [ebp + 0x50], dl; call dword ptr [ecx + 8]; 
0x00171a8e: dec eax; and byte ptr [edi + 0x50], dl; call dword ptr [ecx + 8]; 
0x000acae7: dec eax; call 0xc24edaec; ret; 
0x00173819: dec eax; call dword ptr [eax + 0x10]; 
0x001736bf: dec eax; call dword ptr [eax + 0x14]; 
0x000285ac: dec eax; call eax; 
0x000a38f5: dec eax; cdq; stc; call dword ptr [eax - 0x73]; 
0x00193de3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de3: dec eax; cld; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x000425bc: dec eax; cmp al, 0x8b; inc eax; inc eax; ret; 
0x0010a974: dec eax; cmp edi, edi; dec dword ptr [ebx + 0x458b2455]; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000a6a74: dec eax; cwde; stc; call dword ptr [eax - 0x18]; 
0x000dae74: dec eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00193e8a: dec eax; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00195e7a: dec eax; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x00167314: dec eax; dec eax; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x000ac4b6: dec eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x00167315: dec eax; inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x0019511a: dec eax; inc edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00042578: dec eax; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00161c4c: dec eax; int1; call dword ptr [eax - 0x73]; 
0x000a5ec5: dec eax; jmp dword ptr [ecx]; 
0x000c13ef: dec eax; jnp 0x5b18383a; pop esi; ret; 
0x000bdf6c: dec eax; jnp 0x5e1403b7; ret; 
0x0005bb86: dec eax; jp 0x5bb82; call dword ptr [eax - 0x73]; 
0x0004a1d0: dec eax; js 0x4a1cc; call dword ptr [eax - 0x73]; 
0x0004a37c: dec eax; js 0x4a378; call dword ptr [eax - 0x73]; 
0x0004a39f: dec eax; js 0x4a39b; call dword ptr [eax - 0x73]; 
0x0004a3c2: dec eax; js 0x4a3be; call dword ptr [eax - 0x73]; 
0x0004a3e5: dec eax; js 0x4a3e1; call dword ptr [eax - 0x73]; 
0x0004a42b: dec eax; js 0x4a427; call dword ptr [eax - 0x73]; 
0x0004a455: dec eax; js 0x4a451; call dword ptr [eax - 0x73]; 
0x0004a478: dec eax; js 0x4a474; call dword ptr [eax - 0x73]; 
0x0004a49b: dec eax; js 0x4a497; call dword ptr [eax - 0x73]; 
0x0004a4be: dec eax; js 0x4a4ba; call dword ptr [eax - 0x73]; 
0x0004a4e1: dec eax; js 0x4a4dd; call dword ptr [eax - 0x73]; 
0x0004a504: dec eax; js 0x4a500; call dword ptr [eax - 0x73]; 
0x0004a527: dec eax; js 0x4a523; call dword ptr [eax - 0x73]; 
0x0004a54a: dec eax; js 0x4a546; call dword ptr [eax - 0x73]; 
0x0004a569: dec eax; js 0x4a565; call dword ptr [eax - 0x73]; 
0x0015d9dd: dec eax; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0009c4f5: dec eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x0005ac5c: dec eax; mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0005ad08: dec eax; mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x0016d8cd: dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000c6d89: dec eax; or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000a1d7b: dec eax; or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x0009127d: dec eax; or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0005bbcf: dec eax; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00086255: dec eax; or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x000810df: dec eax; or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x000810b1: dec eax; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00091071: dec eax; or byte ptr [ecx], al; xor eax, eax; ret; 
0x00162744: dec eax; or ch, ah; jmp dword ptr [ebp - 0x75]; 
0x0014fa9a: dec eax; out dx, al; dec dword ptr [ebp - 0x64ed37f]; call dword ptr [eax - 0x73]; 
0x0007c434: dec eax; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000dad22: dec eax; pop ebx; ret; 
0x00193b9a: dec eax; pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001452a6: dec eax; pop edx; stc; call dword ptr [eax + 0x51]; 
0x000c1373: dec eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf00: dec eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019e51f: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019cd72: dec eax; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x000c1519: dec eax; pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be076: dec eax; pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c7107: dec eax; popfd; stc; call dword ptr [eax - 0x73]; 
0x0007e932: dec eax; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x001579b6: dec eax; push dword ptr [esp + 0x10]; call edi; 
0x001744ad: dec eax; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001579b2: dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00157cc1: dec eax; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c1353: dec eax; push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdee0: dec eax; push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019e5fb: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019cde2: dec eax; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0016db33: dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x000c4fd3: dec eax; pushfd; stc; call dword ptr [eax - 0x73]; 
0x00028353: dec eax; ret 0x2ec3; 
0x000e322a: dec eax; ret 0x3c8d; 
0x00134f33: dec eax; ret 0x4639; 
0x0003deed: dec eax; ret 0x56c3; 
0x00041dfb: dec eax; ret 0x9387; 
0x000dc79e: dec eax; ret 0xb70f; 
0x00030219: dec eax; ret 0xc083; 
0x00040c4f: dec eax; ret 0xc483; 
0x00134c6c: dec eax; ret 0xc629; 
0x000db162: dec eax; ret 0xef29; 
0x000409dd: dec eax; ret 0xf3c3; 
0x00124bee: dec eax; ret 0xf8c1; 
0x001a47c3: dec eax; ret 0xff3; 
0x0008dab3: dec eax; ret 0xff50; 
0x00167354: dec eax; ret 0xfff5; 
0x0004aab2: dec eax; ret 0xfff9; 
0x001a4723: dec eax; ret; 
0x000409ba: dec eax; sbb byte ptr [eax], al; add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c14eb: dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000be058: dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0016f81c: dec eax; sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0014f1d8: dec eax; sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x000fb28b: dec eax; stc; call dword ptr [eax + 0x53]; 
0x000fdc47: dec eax; stc; call dword ptr [eax + 0x55]; 
0x00086682: dec eax; stc; call dword ptr [eax - 0x18]; 
0x00106c32: dec eax; stc; call dword ptr [eax - 0x77]; 
0x000fb2e8: dec eax; stc; call dword ptr [eax - 1]; 
0x00109883: dec eax; stc; call dword ptr [edx - 1]; 
0x00106c2c: dec eax; stc; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x000adcbd: dec eax; wait; stc; call dword ptr [edx - 0x73]; 
0x0008d2fc: dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8d318; ret; 
0x000af292: dec ebp; aam 0x83; ret 0xf01; 
0x00194a8b: dec ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a85ca: dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x000ff0b3: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x000fd537: dec ebp; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0019232d: dec ebp; add eax, dword ptr [eax]; add byte ptr [ecx + 0x5b5e5fd0], cl; ret; 
0x0009cf14: dec ebp; add esp, 0x124; pop ebx; pop esi; ret; 
0x0010ade0: dec ebp; clc; dec dword ptr [edi]; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0007ec59: dec ebp; cli; jmp dword ptr [esi - 0x70]; 
0x000a9b69: dec ebp; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00059bbf: dec ebp; cmpsd dword ptr [esi], dword ptr es:[edi]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x000a811f: dec ebp; fcos; jmp dword ptr [esi - 0x70]; 
0x0015e3b2: dec ebp; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016477c: dec ebp; int1; call dword ptr [eax - 0x73]; 
0x000df172: dec ebp; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00093359: dec ebp; mov al, byte ptr [0xd231f889]; xor esi, esi; call dword ptr gs:[0x10]; 
0x00138c7c: dec ebp; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x00138c0c: dec ebp; mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x0009d3f2: dec ebp; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0005416d: dec ebp; mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x0005d49f: dec ebp; mov eax, 0x8910c483; ret 0x458b; 
0x00151348: dec ebp; mov word ptr [ebp - 0x64e5b7f], cs; call dword ptr [eax - 0x73]; 
0x0013927c: dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x0009329a: dec ebp; movsb byte ptr es:[edi], byte ptr [esi]; xor edx, edx; mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x0012627a: dec ebp; push eax; stc; call dword ptr [eax + 0x55]; 
0x0012dc39: dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x00031d41: dec ebp; ret 0xc389; 
0x000a73e2: dec ebp; ret 0xc689; 
0x00031cdd: dec ebp; ret 0xec83; 
0x00142fef: dec ebp; ret; 
0x001341d4: dec ebp; sbb al, 0xf; inc esp; ret 0x4589; 
0x001260ed: dec ebp; stc; call dword ptr [eax + 0x55]; 
0x001867d7: dec ebp; sti; jmp dword ptr [esi - 0x70]; 
0x000a153a: dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0014feab: dec ebx; adc byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00194c74: dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00120eb1: dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x000e8223: dec ebx; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x0011f611: dec ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x3108245c], cl; leave; call dword ptr gs:[0x10]; 
0x000d9bc1: dec ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0009bb0f: dec ebx; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009c63b: dec ebx; add esp, 0x38; pop ebx; ret; 
0x00034bca: dec ebx; and byte ptr [eax], 0; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x001235ef: dec ebx; clc; inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x6a]; 
0x000b9bc2: dec ebx; fimul dword ptr [eax + eax]; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b4291: dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0013aa51: dec ebx; idiv bh; jmp dword ptr [esi - 0x70]; 
0x0013a951: dec ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000b0178: dec ebx; in al, 0x83; ret 0x8301; 
0x0015e5f2: dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000dee63: dec ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001587a5: dec ebx; int1; call dword ptr [eax - 0x73]; 
0x001a9564: dec ebx; lea eax, [eax + 9]; pop edi; ret; 
0x001a8c04: dec ebx; lea eax, [ecx + 0xa]; ret; 
0x001a8544: dec ebx; lea eax, [edi + 9]; pop edi; ret; 
0x00091307: dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0003a636: dec ebx; or al, 0x89; inc edi; or byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x4f89; 
0x001946d7: dec ebx; push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00056ec1: dec ebx; ret 0xfffc; 
0x00080aca: dec ebx; ret; 
0x0004ead2: dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0014f25f: dec ebx; sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x0012604b: dec ebx; stc; call dword ptr [eax + 0x55]; 
0x000606bb: dec ebx; std; call dword ptr [eax - 0x73]; 
0x001a80e9: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001a8101: dec ecx; adc byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00194e7b: dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0015a380: dec ecx; add al, byte ptr [eax]; add byte ptr [ebx - 0x7cebdb8c], cl; ret 0x8301; 
0x0006df77: dec ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b62d7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6437: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef7: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2057: dec ecx; add eax, 0x2130f66; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x0010c39f: dec ecx; add esp, 0x28; pop ebx; ret; 
0x000c1fa1: dec ecx; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x0007f073: dec ecx; cli; jmp dword ptr [esi - 0x70]; 
0x0016e235: dec ecx; cmc; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00109882: dec ecx; dec eax; stc; call dword ptr [edx - 1]; 
0x00070ba4: dec ecx; fistp qword ptr [ecx]; ret 0x8d0f; 
0x000b1207: dec ecx; imul byte ptr [ecx]; ret 0x280f; 
0x000b2bfb: dec ecx; imul byte ptr [ecx]; ret 0xc301; 
0x000b1337: dec ecx; imul dword ptr [ecx]; ret 0x280f; 
0x000b2d5b: dec ecx; imul dword ptr [ecx]; ret 0xc301; 
0x000e5398: dec ecx; in al, 0xff; call dword ptr [esi + 0x51]; 
0x00053006: dec ecx; insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x001623bc: dec ecx; int1; call dword ptr [eax - 0x73]; 
0x000c377c: dec ecx; jne 0xc3778; pop esi; ret; 
0x000e7f5c: dec ecx; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000986f2: dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00099308: dec ecx; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00099085: dec ecx; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0005a673: dec ecx; or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x0008a6c8: dec ecx; or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000b6477: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2097: dec ecx; pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000fb656: dec ecx; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0012637e: dec ecx; push edx; stc; call dword ptr [eax + 0x55]; 
0x000b6457: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2077: dec ecx; push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000e4245: dec ecx; ret 0x1c8d; 
0x0006591d: dec ecx; ret 0x4c89; 
0x000e3e2a: dec ecx; ret 0x5c89; 
0x0006323e: dec ecx; ret 0x7489; 
0x001228b6: dec ecx; ret 0x8dc3; 
0x000e3841: dec ecx; ret 0xc101; 
0x000e6348: dec ecx; ret 0xc483; 
0x00025425: dec ecx; ret 0xc789; 
0x000e4fa9: dec ecx; ret 0xc8d; 
0x00067738: dec ecx; ret 0xe883; 
0x000290c0: dec ecx; ret 0xec83; 
0x000292ab: dec ecx; ret; 
0x00137f7c: dec ecx; stc; call dword ptr [eax + 0x57]; 
0x00111360: dec ecx; stc; call dword ptr [eax + 0x6a]; 
0x0010e43d: dec ecx; stc; call dword ptr [eax - 0x18]; 
0x001131c3: dec ecx; stc; call dword ptr [eax - 0x18]; inc esp; adc edx, esi; jmp dword ptr [esi - 0x70]; 
0x0010e43d: dec ecx; stc; call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x00110aeb: dec ecx; stc; call dword ptr [eax - 0x73]; 
0x00173f86: dec ecx; stc; call dword ptr [edi + 0x56]; 
0x0008e71d: dec ecx; stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00127f76: dec ecx; stc; jmp dword ptr [ebp - 0x75]; 
0x000607ff: dec ecx; std; call dword ptr [eax - 0x73]; 
0x000d9c34: dec edi; adc al, 0xf; test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000ba2df: dec edi; adc byte ptr [eax + 0x5e5f1457], cl; pop ebx; ret; 
0x000923f6: dec edi; adc byte ptr [eax + 0xf0], bh; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000bb93c: dec edi; adc byte ptr [ebp + 0x5e5f1147], cl; pop ebx; ret; 
0x000bb95e: dec edi; adc byte ptr [ebp + 0x5e5f1247], cl; pop ebx; ret; 
0x000bb99c: dec edi; adc byte ptr [ebp + 0x5e5f1447], cl; pop ebx; ret; 
0x000ba25c: dec edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9c1f: dec edi; adc byte ptr [edi], cl; test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000c1cdc: dec edi; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x001a226d: dec edi; adc eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001948ce: dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00054172: dec edi; add al, 0xf; xchg edx, eax; ret 0x789; 
0x001a779d: dec edi; add al, byte ptr [eax]; add byte ptr [eax + 0x77850f02], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf02; 
0x000e6f99: dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x0005e80d: dec edi; add dword ptr [eax], eax; add dh, dh; ret 0xf50; 
0x000547c5: dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x000bb8d0: dec edi; add eax, 0x5f0d478d; pop esi; pop ebx; ret; 
0x0004a484: dec edi; add eax, 0x8d500000; xchg eax, edx; ja 0x4a487; call dword ptr [eax - 0x18]; 
0x0004d62c: dec edi; add eax, 0x8d500000; xchg eax, edx; ja 0x4d62f; call dword ptr [eax - 0x18]; 
0x00051492: dec edi; add eax, 0x8d500000; xchg eax, edx; ja 0x51495; call dword ptr [eax - 0x18]; 
0x00059d04: dec edi; add eax, 0x8d500000; xchg eax, edx; ja 0x59d07; call dword ptr [eax - 0x18]; 
0x000d12d1: dec edi; add eax, 0x8d500000; xchg eax, edx; ja 0xd12d4; call dword ptr [eax - 0x18]; 
0x000ec63d: dec edi; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014bac8: dec edi; add esi, esi; ret; 
0x000d9c94: dec edi; and al, 0x75; js 0xd9cf8; pop esi; ret; 
0x000ba466: dec edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9c7f: dec edi; and byte ptr [edi], cl; test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x00161b87: dec edi; bnd call dword ptr [eax - 0x18]; 
0x0009e1aa: dec edi; clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000d9d04: dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x000d9cf9: dec edi; cmp byte ptr [ebp + 0x13], dh; pop edi; pop esi; ret; 
0x0010b789: dec edi; dec eax; stc; call dword ptr [eax - 0x18]; 
0x00194f13: dec edi; dec ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017dc77: dec edi; hlt; inc dword ptr [ebx + 0x458b10c4]; test byte ptr [ebx - 0x936b], cl; inc dword ptr [ecx]; ret 0x458b; 
0x000bb97c: dec edi; jge 0x5e6accca; pop ebx; ret; 
0x000c10a7: dec edi; lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba29c: dec edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0010a145: dec edi; nop; int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0013c636: dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x000d9be9: dec edi; or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000983d9: dec edi; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000ba230: dec edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x00193993: dec edi; pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba3a6: dec edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x00095276: dec edi; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ba210: dec edi; push es; pop edi; pop esi; pop ebx; ret; 
0x000c6df4: dec edi; ret 0x2ec3; 
0x00149a66: dec edi; ret 0x4189; 
0x0005712e: dec edi; ret 0x48d; 
0x000feffb: dec edi; ret 0x568b; 
0x00068a02: dec edi; ret 0x8589; 
0x001713c1: dec edi; ret 0x8966; 
0x00122f2c: dec edi; ret 0x8d50; 
0x0010e39d: dec edi; ret 0xbce9; 
0x000c6e13: dec edi; ret 0xc35f; 
0x0012463d: dec edi; ret; 
0x0010993c: dec edi; ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x000e84cd: dec edi; sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000d9c64: dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000bba46: dec edi; sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000bba68: dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000bbab6: dec edi; sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x000e84c3: dec edi; sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000ba366: dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9c49: dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x001261f9: dec edi; stc; call dword ptr [eax + 0x55]; 
0x0012622b: dec edi; stc; call dword ptr [ecx + 0x51]; 
0x000d9cb4: dec edi; sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x000d9ca9: dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x001a75b0: dec edi; test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x000d9ce4: dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000d9ccf: dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x000c1c2a: dec edi; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0008e976: dec edx; aas; stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0003c6fe: dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0017a3fc: dec edx; adc al, 1; fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x00040a56: dec edx; adc byte ptr [ecx + 0x5e5b145a], cl; pop edi; ret; 
0x000b39ee: dec edx; adc byte ptr [edi], cl; test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b7ddf: dec edx; adc byte ptr [edi], cl; test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x00194dc4: dec edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005b580: dec edx; add al, 0x5b; pop esi; pop edi; ret; 
0x0013144b: dec edx; add al, 0x80; cmp dword ptr [eax], eax; je 0x131458; ret; 
0x000ee95e: dec edx; add al, 0x83; ret 0x8301; 
0x0005c681: dec edx; add al, 0x83; ret 0x8304; 
0x00138044: dec edx; add al, 0x83; ret 0x8518; 
0x001b3cef: dec edx; add al, 0x83; ret 0xc104; 
0x00081879: dec edx; add al, 0x89; or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x0007098c: dec edx; add al, 0x89; ret 0x5d8d; 
0x00120d72: dec edx; add al, 0x89; ret; 
0x000b403c: dec edx; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x00176f54: dec edx; add dword ptr [ecx - 0x46f076fd], ecx; ret; 
0x000b3c3a: dec edx; add dword ptr [edi], ecx; test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000b3ca0: dec edx; add eax, 0x2d8850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b62e0: dec edx; add eax, 0x5f0c428d; ret; 
0x001a58de: dec edx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b3c82: dec edx; add ecx, dword ptr [edi]; test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001a9d26: dec edx; cld; jne 0x1a9d30; pop ebx; ret; 
0x001a59e8: dec edx; cld; mov eax, 0; jne 0x1a5c30; pop ebx; ret; 
0x00193de6: dec edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de6: dec edx; cld; mov eax, edx; pop ebx; ret; 
0x0017a437: dec edx; cld; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0007ef23: dec edx; cli; jmp dword ptr [esi - 0x70]; 
0x000a92e9: dec edx; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00193f1e: dec edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193e8d: dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000e3122: dec edx; dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00111cc4: dec edx; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x000fb70f: dec edx; inc ecx; add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x001630f5: dec edx; int1; call dword ptr [eax - 0x73]; 
0x0011f2fd: dec edx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000b39b4: dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000c094f: dec edx; or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x00091262: dec edx; or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000b800b: dec edx; or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x000e870d: dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x00095c9d: dec edx; or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x001b479a: dec edx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x000b3d04: dec edx; or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b3d78: dec edx; or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b4164: dec edx; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b3ce0: dec edx; pop es; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40e0: dec edx; pop es; jne 0xb3f81; pop ebx; ret; 
0x000b6320: dec edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b6480: dec edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000b1f40: dec edx; pop es; mov eax, edi; pop edi; ret; 
0x000b4b03: dec edx; pop es; mov eax, edx; pop ebx; ret; 
0x000b20a0: dec edx; pop es; mov eax, edx; ret; 
0x000b3da8: dec edx; push cs; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41d8: dec edx; push cs; jne 0xb3f81; pop ebx; ret; 
0x00034dff: dec edx; push es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000b3cc2: dec edx; push es; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40c2: dec edx; push es; jne 0xb3f81; pop ebx; ret; 
0x000b6300: dec edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b6460: dec edx; push es; lea eax, [edx + 0xd]; ret; 
0x000b1f20: dec edx; push es; mov eax, edi; pop edi; ret; 
0x000b2080: dec edx; push es; mov eax, edx; ret; 
0x00077e95: dec edx; ret; 
0x000567df: dec edx; rol byte ptr [eax - 0x79f0f607], 1; cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x00123cc0: dec edx; stc; call dword ptr [eax + 0x50]; 
0x0019006f: dec edx; stc; call dword ptr [eax + 0x53]; 
0x00122f32: dec edx; stc; call dword ptr [eax + 0x6a]; 
0x0011b832: dec edx; stc; call dword ptr [eax - 0x18]; 
0x00125665: dec edx; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x001257d4: dec edx; stc; call dword ptr [eax - 0x39]; 
0x001248b2: dec edx; stc; call dword ptr [eax - 0x73]; 
0x00122fc9: dec edx; stc; call dword ptr [eax - 1]; 
0x00123c66: dec edx; stc; call dword ptr [edx - 0x77]; 
0x00124e09: dec edx; stc; jmp dword ptr [ebp - 0x75]; 
0x00060716: dec edx; std; call dword ptr [ebp + 0x50]; 
0x00193fb2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195fa2: dec edx; std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00193e37: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e37: dec edx; sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0012aaf5: dec edx; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x00060aa5: dec edx; xor bh, cl; call dword ptr [esi + 0x6a]; 
0x000c2429: dec edx; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0004e916: dec edx; xor cl, bh; call dword ptr [eax - 0x73]; 
0x00169707: dec esi; adc al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x00109d85: dec esi; adc al, 0x8b; push esp; ret; 
0x0009d375: dec esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00126fe7: dec esi; add al, 0xd0; call 0x88145072; inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x000614cf: dec esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x00154ecd: dec esi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0015046b: dec esi; add byte ptr [eax], al; mov eax, edx; pop ebx; pop esi; ret; 
0x001503f5: dec esi; add byte ptr [eax], al; test eax, eax; jne 0x150407; ret; 
0x000bdeb7: dec esi; add eax, 0x130f66; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a75b5: dec esi; add eax, 0xb; ret; 
0x0012d2e1: dec esi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00103124: dec esi; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008a0bf: dec esi; and byte ptr [ecx], ch; rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x000d9d01: dec esi; cmp al, 0x39; dec edi; cmp al, 0x75; or byte ptr [edi + 0x5e], bl; ret; 
0x00084a8e: dec esi; fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0018deb3: dec esi; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a4e20: dec esi; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0010d284: dec esi; ljmp 0xf184:0xfefe183; add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x00189e5e: dec esi; mov bl, 0xf0; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000c10bf: dec esi; or al, 0; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00083d97: dec esi; or al, 0x89; ret 0x48d; 
0x0009055f: dec esi; or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x0015d187: dec esi; or byte ptr [ecx + 0x244c8bda], cl; and al, 0x29; ret 0xca39; 
0x001364a6: dec esi; or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x0009a17d: dec esi; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0014b687: dec esi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000fb764: dec esi; push esp; inc esi; push ebx; setne al; ret; 
0x0010e044: dec esi; ret 0x15e9; 
0x000fc57f: dec esi; ret 0x4489; 
0x0009dbda: dec esi; ret 0x578b; 
0x0009dbf3: dec esi; ret 0x8389; 
0x00171518: dec esi; ret 0x8966; 
0x00123114: dec esi; ret 0x9ae9; 
0x00129093: dec esi; ret 0x9ce9; 
0x00122fb1: dec esi; ret 0xc931; 
0x00111841: dec esi; ret 0xe883; 
0x0005c4cc: dec esi; ret 0xec83; 
0x000394ed: dec esi; ret; 
0x000d9c61: dec esi; sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000e84d0: dec esi; sbb al, 0x39; ret 0x8d0f; 
0x000e84ca: dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x000dfde5: dec esi; sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x00126159: dec esi; stc; call dword ptr [eax + 0x55]; 
0x00126bc9: dec esi; stc; dec dword ptr [ecx - 0x6c72f3aa]; cld; ret 0xffe7; 
0x0002755b: dec esi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x000d9ce1: dec esi; xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000f1b60: dec esp; adc al, 0xfc; add cl, ch; ret 0xfff9; 
0x00041865: dec esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a1f6c: dec esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x00194bdb: dec esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017c6e9: dec esp; add al, 0xfc; add cl, ch; ret 0xfffc; 
0x0009c522: dec esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x1a09337d], cl; jmp dword ptr [ebp - 0x5d]; 
0x00122211: dec esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00155bdc: dec esp; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0004b16b: dec esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00174f49: dec esp; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x000445d2: dec esp; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x00065176: dec esp; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x000c6a08: dec esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010c2fc: dec esp; add esp, 0x28; pop ebx; ret; 
0x00191ed1: dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x001213a9: dec esp; and al, 0x10; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012c926: dec esp; and al, 0x10; mov eax, 0x1b3; int 0x80; 
0x0012bc6d: dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0008e226: dec esp; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0017a136: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00179686: dec esp; and al, 0x10; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x001131e9: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff6b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e97b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea5b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b6b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012752b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a8b: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5bb: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008fcc3: dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012238c: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00040757: dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012232c: dec esp; and al, 0x10; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121329: dec esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00175c29: dec esp; and al, 0x10; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c627: dec esp; and al, 0x10; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017a167: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001792f7: dec esp; and al, 0x10; push ecx; push edx; call dword ptr [eax]; 
0x0008e13a: dec esp; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7fe2: dec esp; and al, 0x14; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7c91: dec esp; and al, 0x14; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00129460: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214a9: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e60: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed20: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb50: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e850: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9b0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e810: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6e0: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea20: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d680: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d30: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127700: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b20: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc7d: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00121429: dec esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00130392: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f2ff: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061398: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00190400: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130880: dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00066157: dec esp; and al, 0x18; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065257: dec esp; and al, 0x18; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x0012d467: dec esp; and al, 0x18; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00064988: dec esp; and al, 0x18; movzx eax, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x000e7c61: dec esp; and al, 0x18; push ebx; call eax; 
0x0009397e: dec esp; and al, 0x18; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009df50: dec esp; and al, 0x1c; call dword ptr gs:[0x10]; 
0x0016edd8: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ee17: dec esp; and al, 0x1c; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00129e45: dec esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000e7c5c: dec esp; and al, 0x1c; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0003deba: dec esp; and al, 0x20; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x00184afc: dec esp; and al, 0x20; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00175b6a: dec esp; and al, 0x20; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00173df6: dec esp; and al, 0x28; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x0009df4a: dec esp; and al, 0x28; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00175b57: dec esp; and al, 0x28; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x00130ed0: dec esp; and al, 0x30; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000c7319: dec esp; and al, 0x34; push eax; push ebp; call esi; 
0x0011f0bd: dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009df7a: dec esp; and al, 0x38; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000c5235: dec esp; and al, 0x44; push ecx; push dword ptr [edi + 8]; call ebx; 
0x00070db2: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071c97: dec esp; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000c455b: dec esp; and al, 0x54; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000a05e6: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012e027: dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b5: dec esp; and al, 0x64; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df87: dec esp; and al, 0x64; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012d726: dec esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a0659: dec esp; and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a054b: dec esp; and al, 0x64; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x000dee9d: dec esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x000a0411: dec esp; and al, 0xc; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012dd99: dec esp; and al, 0xc; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e80c1: dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0008fa1a: dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012e37b: dec esp; and al, 0xc; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2bb: dec esp; and al, 0xc; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012d03b: dec esp; and al, 0xc; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x000fba81: dec esp; and al, 0xc; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008fa71: dec esp; and al, 0xc; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00061346: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ec46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e716: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f236: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c06: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114806: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e626: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e686: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114676: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e916: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e796: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e456: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128666: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e536: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e566: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c266: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e886: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf36: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec96: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e26: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f46: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f16: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114626: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127936: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127856: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127556: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127586: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab6: dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0007c57a: dec esp; and al, 0xc; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x00099efa: dec esp; and al, 0xc; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0008e19d: dec esp; and al, 0xc; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000254f7: dec esp; and al, 0xc; sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x001951ad: dec esp; and al, 0xff; inc dword ptr [ecx + 0x446afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001223fd: dec esp; and al, 4; call dword ptr gs:[0x10]; 
0x00070db6: dec esp; and al, 4; jmp eax; 
0x00071c9b: dec esp; and al, 4; jmp edx; 
0x000e812c: dec esp; and al, 4; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00071b61: dec esp; and al, 4; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071b71: dec esp; and al, 4; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071b91: dec esp; and al, 4; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00071ba1: dec esp; and al, 4; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071c11: dec esp; and al, 4; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00071bb1: dec esp; and al, 4; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070e5f: dec esp; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x000e8130: dec esp; and al, 4; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7e04: dec esp; and al, 4; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x00091159: dec esp; and al, 4; mov eax, 0x16; cmp edx, 2; jbe 0x91170; ret; 
0x0010c021: dec esp; and al, 4; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x00099a12: dec esp; and al, 4; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fba20: dec esp; and al, 4; mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x0009dacf: dec esp; and al, 4; mov eax, dword ptr [eax + 0x3be4]; test eax, eax; jne 0x9dae7; ret; 
0x00070fdc: dec esp; and al, 4; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x000919d1: dec esp; and al, 4; xor cl, 0x81; mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001846d1: dec esp; and al, 8; call eax; 
0x00171593: dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017a084: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a060: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed70: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed94: dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00130cf5: dec esp; and al, 8; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012e763: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eae3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f653: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb83: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e653: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9e3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3f3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00129bb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00129dc3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128713: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c03: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129913: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012e4a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001153a3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127bb3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c233: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf23: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bee3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e503: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d273: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff13: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e943: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129493: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae3: dec esp; and al, 8; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c54e9: dec esp; and al, 8; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc550a; ret; 
0x000dc366: dec esp; and al, 8; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00094279: dec esp; and al, 8; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c48: dec esp; and al, 8; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0008ef7a: dec esp; and ch, ah; call dword ptr [eax - 0x18]; 
0x0013238f: dec esp; call 0x132250; add esp, 4; ret; 
0x0003f537: dec esp; call eax; 
0x0010d5fd: dec esp; cld; clc; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00150978: dec esp; cmp dh, cl; call dword ptr [ebx + 0x50]; 
0x0016c5ab: dec esp; cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; pop ebx; ret; 
0x001587a4: dec esp; dec ebx; int1; call dword ptr [eax - 0x73]; 
0x000b9ac1: dec esp; fisttp dword ptr [eax + eax]; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015ac33: dec esp; inc ecx; stc; call dword ptr [eax + 0x53]; 
0x00062b91: dec esp; jge 0x62b8d; call dword ptr [eax - 0x18]; 
0x0006eb79: dec esp; jge 0x6eb75; call dword ptr [eax - 0x18]; 
0x00190860: dec esp; ljmp 0xc019:0xd8f7fffc; add esp, 0x2c; ret; 
0x0009b3e0: dec esp; mov al, byte ptr [0xc4830007]; adc byte ptr [ebp - 0x72c28b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00070db4: dec esp; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071c99: dec esp; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0017424c: dec esp; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x001223f3: dec esp; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00121c8a: dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00064ca0: dec esp; movzx eax, byte ptr [eax + esi - 0x20]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0013f4fd: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013f5a2: dec esp; or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x000a473b: dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a6d2a: dec esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x000a5c78: dec esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x000a58b3: dec esp; or dword ptr [eax], eax; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x000a210f: dec esp; or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000daad8: dec esp; outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x56]; 
0x00183a4f: dec esp; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00057e53: dec esp; pop ds; add al, 0x83; ret; 
0x0003b4ff: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0003fc67: dec esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002e385: dec esp; push -7; call dword ptr [eax + 0x68]; 
0x0002e0d0: dec esp; push -7; call dword ptr [eax - 0x73]; 
0x000a9cf6: dec esp; push 0x440fffe8; ret 0x66c3; 
0x0016dbf6: dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0017429f: dec esp; push edx; call eax; 
0x0014eba1: dec esp; ret 0x3904; 
0x00060074: dec esp; ret 0xb60f; 
0x0010e27f: dec esp; ret 0xdae9; 
0x0016970c: dec esp; ret 0xec83; 
0x000acbdc: dec esp; ret 0xfff6; 
0x00062d08: dec esp; ret 0xfff8; 
0x000316cb: dec esp; ret; 
0x00031d36: dec esp; ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x00061064: dec esp; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0010cd02: dec esp; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00126015: dec esp; stc; call dword ptr [eax + 0x55]; 
0x0013c5a8: dec esp; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00095ce0: dec esp; xchg cl, bh; call dword ptr [eax - 0x18]; 
0x000547c8: dec esp; xchg esi, eax; add al, 0x83; ret 0x8501; 
0x0005e021: dec esp; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x00166e15: div byte ptr [eax + ebp*8 + 0x5b]; mov eax, edx; pop esi; pop edi; ret; 
0x0013b716: div byte ptr [eax + edi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00123b77: div byte ptr [ebp + 0x16]; lea eax, [ebx + 0x450c]; add esp, 4; pop ebx; pop esi; ret; 
0x000df170: div byte ptr [ebp + ecx*2 - 0x73]; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0009d3f0: div byte ptr [ebp + ecx*2 - 0x77]; push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x00024ddc: div byte ptr [ebp + edi - 0x7d]; in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008cdf8: div byte ptr [ebp - 0x1b]; add esp, 4; pop ebx; pop esi; ret; 
0x0004050d: div byte ptr [ebp - 0x1c]; add esp, 4; pop ebx; pop esi; ret; 
0x00025ffe: div byte ptr [ebp - 0x1d]; add esp, 4; pop ebx; pop esi; ret; 
0x0015da6c: div byte ptr [ebp - 0x1f]; pop ebx; pop esi; pop edi; ret; 
0x000260d1: div byte ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x56; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x0003e063: div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x0009faf0: div byte ptr [ecx]; sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x000c4ce9: div dh; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4d09: div dh; jmp dword ptr [esi - 0x70]; 
0x000307ca: div dh; ret; 
0x0016c596: div dl; call dword ptr [eax - 0x73]; 
0x0013a930: div ebx; pop ebx; pop esi; pop edi; ret; 
0x0003ed64: divps xmm7, xmm1; call dword ptr [eax - 0x18]; 
0x0012d240: endbr32; call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094b50: endbr32; call 0x187605; add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008d670: endbr32; call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d7a0: endbr32; call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d780: endbr32; call 0x187605; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f800: endbr32; call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00026080: endbr32; call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026060: endbr32; call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00024f90: endbr32; call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x00024f70: endbr32; call 0x187605; add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x0009c690: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c690: endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008c630: endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008be50: endbr32; mov eax, 0xffffffff; ret; 
0x0016c480: endbr32; mov eax, 1; ret; 
0x0016e710: endbr32; mov eax, 2; ret; 
0x0008f1a0: endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003bbe0: endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00190620: endbr32; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017a750: endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00087ee0: endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a0: endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013ced0: endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000915b0: endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00150130: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a790: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008d6a0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00187190: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001871b0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187240: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187230: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e490: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121aa0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000871a0: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087150: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8e00: endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001871a0: endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008d6b0: endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0008b460: endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x00099ee0: endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00094f00: endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0017a390: endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013cee0: endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098dc0: endbr32; nop; xor eax, eax; ret; 
0x0010e450: endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024cd0: endbr32; ret; 
0x000349b0: endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008c580: endbr32; xor eax, eax; ret; 
0x0003bc92: fabs; test ah, 2; je 0x3bc9b; fchs; ret; 
0x0003c032: fabs; test ah, 2; je 0x3c03b; fchs; ret; 
0x000fb274: fadd dword ptr [eax - 0x3b7c0004]; adc byte ptr [ebp - 0x74e28b40], al; test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax + 0x53]; 
0x0012db77: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012db77: fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0011be7e: fadd dword ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011ad5f: fadd dword ptr [eax]; pop ebx; pop esi; ret; 
0x000a5d3b: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a6556: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a1395: fadd dword ptr [ebp + 0xbad2]; lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x000dfc9a: fadd dword ptr [ebp - 0x7cf68a2e]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a35b8: fadd dword ptr [ebx + 0x5b5d04c4]; ret; 
0x000c71dc: fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x00088e47: fadd dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000388c0: fadd dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000821ab: fadd dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00127981: fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x0007f990: fadd dword ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x00034bd0: fadd dword ptr [ecx]; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x000c38c8: fadd dword ptr [ecx]; add byte ptr [eax], al; ret; 
0x00100f15: fadd dword ptr [ecx]; ret 0x86eb; 
0x0013e6e0: fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x00054f23: fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000b3ca4: fadd dword ptr [edx]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00111f46: fadd dword ptr [edx]; stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000a1b77: fadd qword ptr [eax - 0x1a]; call dword ptr [eax + 0x57]; 
0x00142885: fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x000e90f8: fadd qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e8f4f: fadd qword ptr [eax]; add byte ptr [eax], al; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000839fd: fadd qword ptr [eax]; add byte ptr [eax], al; push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x0017fccb: fadd qword ptr [ebp + 0xfc789c0]; sahf; ret 0xf883; 
0x00096a6b: fadd qword ptr [ebp - 0x17af0007]; wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x000de9e3: fadd qword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000c38d8: fadd qword ptr [ecx]; add byte ptr [eax], al; ret; 
0x0003bc28: fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003c2f3: fadd st(0); add esp, 8; pop ebx; ret; 
0x0003bd29: fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0019e8dc: fadd st(1), st(0); stc; jmp dword ptr [esi + 0xf]; 
0x00156fb4: fadd st(1); in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00186cbe: fadd st(7), st(0); inc esp; ret; 
0x00136524: fadd st(7); clc; dec dword ptr [ebx - 0x7ccbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x001a3ec3: fbld tbyte ptr [ebx + 3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00164854: fbld tbyte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00197903: fbld tbyte ptr [ecx]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193303: fbld tbyte ptr [edx + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003c369: fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003bc99: fchs; ret; 
0x0003c36b: fcmove st(0), st(1); fstp st(1); ret; 
0x0008f33a: fcmovnu st(0), st(2); sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x001a4a62: fcmovu st(0), st(2); int1; call dword ptr [ebx - 0x18]; 
0x000b9b33: fcmovu st(0), st(2); or al, 0; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0002703d: fcom dword ptr [0x241c8900]; call edi; 
0x0012a4cb: fcom dword ptr [eax - 0x73]; xchg bl, ch; push ebx; stc; call dword ptr [eax + 0x57]; 
0x0012a3b0: fcom dword ptr [eax - 0x73]; xchg byte ptr [edi], bl; aas; stc; call dword ptr [eax + 0x6a]; 
0x00041a54: fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x001463d4: fcom dword ptr [ecx - 1]; jmp dword ptr [esi - 0x70]; 
0x000a9b18: fcom qword ptr [eax - 0xb]; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000b9b66: fcom qword ptr [ecx]; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00198804: fcomi st(7); ret 1; 
0x0016e77b: fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x00038806: fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0013c53b: fcomp dword ptr [ebx + 0x5e]; pop edi; ret 4; 
0x0003427b: fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0009460b: fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003b37b: fcomp dword ptr [ebx + 0x5e]; shr eax, 0x1f; pop edi; ret; 
0x0018fe76: fcomp dword ptr [ebx - 0x17]; and ecx, ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0002538f: fcomp dword ptr [ebx - 0x7d]; rol byte ptr [eax], cl; neg edx; ret; 
0x00175e08: fcomp dword ptr [ecx]; ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x175e27; add esp, 0x1c; ret; 
0x001a4d88: fcomp dword ptr [edi + 0x5b]; ret; 
0x001a52e8: fcomp dword ptr [edi + 0x5d]; pop ebx; ret; 
0x0004dce2: fcomp dword ptr [edi + 0x5d]; xor eax, 0x7fffffff; ret; 
0x001a9c48: fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d9d18: fcomp dword ptr [edi + 0x5e]; ret; 
0x000537a4: fcomp dword ptr [esi + 0x5f]; ret; 
0x0015d8de: fcomp qword ptr [edi - 7]; call dword ptr [eax - 1]; 
0x000c6310: fcompi st(6); jmp dword ptr [esi - 0x70]; 
0x000692b6: fcos; call dword ptr [edx - 0x73]; 
0x001b3c95: fcos; dec dword ptr [ebx - 0x7af3db8c]; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x000a8120: fcos; jmp dword ptr [esi - 0x70]; 
0x0005b124: fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x00159e40: fdiv dword ptr [ebp + edx*8 - 0x7d]; ret 0xeb18; 
0x000ac240: fdiv dword ptr [ebp - 0x13]; mov eax, edx; pop ebx; pop esi; ret; 
0x00170551: fdiv dword ptr [ebp - 0x14]; pop ebx; ret; 
0x000ac1fc: fdiv dword ptr [ebp - 0xf]; mov eax, edx; pop ebx; ret; 
0x00053d4c: fdiv dword ptr [ebp - 0xf]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00122b19: fdiv dword ptr [edx + 4]; xor eax, eax; pop ebx; ret; 
0x001b487d: fdiv dword ptr [edx - 0x63d74]; fstp st(0); add esp, 0x20; ret; 
0x000843d0: fdiv qword ptr [ecx + 0xb]; add byte ptr [ebp - 0x67caf7a], cl; call dword ptr [eax - 0x73]; 
0x0002ab94: fdiv qword ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x001999e5: fdiv st(6), st(0); inc dword ptr [ecx + 0x40538c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199936: fdiv st(6), st(0); inc dword ptr [ecx + 0x406a7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00084a8f: fdiv st(7), st(0); inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000564a4: fdivp st(5); dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0019970b: fdivp st(6); inc dword ptr [ecx + 0x40652c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0013c1d2: fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0005f56b: fdivr dword ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x000aa28b: fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x000c6e0d: fdivr dword ptr [ecx]; fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x00074b37: fdivr dword ptr [ecx]; ret 0x830f; 
0x000679a9: fdivr dword ptr [ecx]; ret 0x840f; 
0x0006b106: fdivr dword ptr [ecx]; ret 0x850f; 
0x000feebf: fdivr dword ptr [ecx]; ret 0x972; 
0x0005d42d: fdivr dword ptr [ecx]; ret 0xee7c; 
0x0012957b: fdivr dword ptr [ecx]; ret; 
0x001543b1: fdivr dword ptr [ecx]; retf 0xca75; pop ebx; pop esi; ret; 
0x0013e59e: fdivr dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000c6def: fdivr dword ptr [ecx]; stc; pop edi; cmovg eax, edx; ret; 
0x000983ac: fdivr dword ptr [esi - 0x35]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x000a6f2a: fdivr dword ptr [esi]; jmp eax; 
0x000699db: fdivr qword ptr [ebp - 7]; call dword ptr [eax - 0x73]; 
0x001390ef: fdivr qword ptr [ecx]; ret; 
0x00086829: fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x0018dd7a: fdivr st(2); dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f1f79]; call dword ptr [eax - 0x73]; 
0x0016dce1: fdivr st(4); jmp dword ptr [esi - 0x70]; 
0x00164b9b: fdivr st(6); jmp dword ptr [ebp - 0x75]; 
0x0017238c: fdivr st(7); add esp, 0xc; ret; 
0x00075681: fdivr st(7); dec dword ptr [ebp - 0x4cb7b]; call dword ptr [ecx - 1]; 
0x00041c12: fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000c09f1: fdivr st(7); mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8476: fdivr st(7); pop ebx; ret; 
0x000b7d07: fdivr st(7); pop edi; pop ebx; ret; 
0x000c2bee: fdivr st(7); pop esi; pop ebx; ret; 
0x001555fc: fdivrp st(6); inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x00046e6d: ffreep st(4); std; jmp dword ptr [esi - 0x70]; 
0x00059c70: fiadd dword ptr [0x8d500000]; xchg byte ptr [ecx], bl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0004a4ca: fiadd dword ptr [0x8d500000]; xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000e210b: fiadd dword ptr [eax + 0x440f2df9]; ret 0x10e9; 
0x0012793e: fiadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d114: fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x000e7ba9: fiadd dword ptr [ebx + 0x3b8eaf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x2ec3; 
0x000e821e: fiadd dword ptr [ebx + 0x4bb8daf8]; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x548b; 
0x00143484: fiadd dword ptr [ebx - 0x17a9f314]; ret 0xfd11; 
0x00040a92: fiadd dword ptr [ebx - 0x2508ff2e]; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000b33b4: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x10; 
0x000b2e34: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x15; 
0x000b28b4: fiadd dword ptr [ebx - 0x79f0ef15]; ret 0x1a; 
0x00041a7d: fiadd dword ptr [ecx]; fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x001a6d63: fiadd dword ptr [ecx]; mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x000a4830: fiadd dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x000c3421: fiadd word ptr [eax + 0x40]; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00189156: fiadd word ptr [eax]; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x000549fd: fiadd word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00056a48: fiadd word ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x00051c24: ficomp dword ptr [ebx + 0x5e]; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x0008f39c: ficomp dword ptr [edx]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x000e7e00: fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7b92: fidiv dword ptr [ebp + 0xc]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000ac2f8: fidiv dword ptr [ebp + esi*8 + 0x39]; bnd je 0xac2f0; pop ebx; pop esi; ret; 
0x000ac2c8: fidiv dword ptr [ebp + esi*8 + 0x5b]; ret; 
0x000c10bb: fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb11b: fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9adb: fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10dd: fidiv dword ptr [edx - 0x40]; call 0x187611; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb13d: fidiv dword ptr [edx - 0x40]; call 0x187611; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9afd: fidiv dword ptr [edx - 0x40]; call 0x187611; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10f8: fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb158: fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b18: fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c110f: fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb16f: fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b2f: fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00079a7a: fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00189042: fidiv word ptr [ecx]; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x0009cd2e: fidiv word ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x00095349: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; add esp, 8; pop ebx; ret; 
0x00099f14: fidivr dword ptr [0xfffff000]; mov eax, 0; cmova eax, edx; ret; 
0x0011f6dd: fidivr dword ptr [0xfffff000]; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00130498: fidivr dword ptr [ebx + 0xe]; call dword ptr gs:[0x10]; 
0x00037616: fidivr dword ptr [ecx]; ret 0x430f; 
0x0012cd05: fidivr dword ptr [ecx]; ret 0x820f; 
0x00065d2a: fidivr dword ptr [ecx]; ret 0x8c0f; 
0x001475fe: fidivr dword ptr [ecx]; ret 0x8e0f; 
0x000a1c1e: fidivr dword ptr [ecx]; ret 0xa72; 
0x00094329: fidivr dword ptr [edi]; stc; call dword ptr [eax - 0x18]; 
0x000606ea: fidivr dword ptr [esi]; jmp edx; 
0x00067cf7: fidivr word ptr [ecx]; ret 0x840f; 
0x00040899: fidivr word ptr [ecx]; retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x000ebb27: fidivr word ptr [esi]; jmp esi; 
0x0003cc91: fild dword ptr [0x10c48300]; test eax, eax; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x00099c1f: fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x00188061: fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x000ad87a: fild dword ptr [eax - 0x6bf0cf06]; ret; 
0x0012785e: fild dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fba85: fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00112e69: fild dword ptr [ebp - 0x14f48a2e]; jo 0x112df4; ret; 
0x000d4c79: fild dword ptr [ebp - 0x760d8b37]; ret; 
0x00032174: fild dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00047bca: fild dword ptr [ebx + 0xf10243c]; xchg esp, eax; ret 0xc8b; 
0x00154033: fild dword ptr [ebx - 0x2776fb3c]; pop ebx; pop esi; ret; 
0x00132da4: fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0013376c: fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00124dff: fild dword ptr [ecx + 0x42cec]; add byte ptr [ebp - 0x6b53680], cl; jmp dword ptr [ebp - 0x75]; 
0x0003bf60: fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x00196e03: fild qword ptr [esp + eax]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000860a0: fild word ptr [ebp + 0x13378c0]; ret; 
0x000ecba6: fild word ptr [ebx - 0x6bf0bf06]; ret; 
0x000731a3: fild word ptr [ebx - 0x7bf0bc08]; ret; 
0x00147c9d: fild word ptr [ecx]; ret; 
0x000bb5bd: fild word ptr [esi]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9bc3: fimul dword ptr [eax + eax]; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b9e: fimul dword ptr [eax + eax]; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b7e: fimul dword ptr [eax + eax]; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b61: fimul dword ptr [eax + eax]; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b34: fimul dword ptr [eax + eax]; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b1d: fimul dword ptr [eax + eax]; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9cc2: fimul dword ptr [eax]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000358f4: fimul dword ptr [eax]; add byte ptr [ebx + 0x758b10c4], al; mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x00030763: fimul dword ptr [ebp - 0x47f2ba8]; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00134068: fimul dword ptr [ebx + 0x2918244c]; ret 0xca39; 
0x0015d18a: fimul dword ptr [ebx + 0x2924244c]; ret 0xca39; 
0x00120b91: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00120b91: fimul dword ptr [ebx - 0x47fbdba4]; cmp al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012db71: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012db71: fimul dword ptr [ebx - 0x47fbdba4]; fadd dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00129da1: fimul dword ptr [ebx - 0x47fbdba4]; jae 0x129da9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ea81: fimul dword ptr [ebx - 0x47fbdba4]; je 0x12ea89; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ec11: fimul dword ptr [ebx - 0x47fbdba4]; jle 0x12ec1a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e481: fimul dword ptr [ebx - 0x47fbdba4]; jno 0x12e489; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010e4b1: fimul dword ptr [ebx - 0x47fbdba4]; jp 0x10e4b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d511: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d511: fimul dword ptr [ebx - 0x47fbdba4]; mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001145b1: fimul dword ptr [ebx - 0x47fbdba4]; or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea511: fimul dword ptr [ebx - 0x47fbdba4]; sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114791: fimul dword ptr [ebx - 0x47fbdba4]; sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0ec1: fimul dword ptr [ebx - 0x47fbdba4]; test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114be1: fimul dword ptr [ebx - 0x47fbdba4]; test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001229a1: fimul dword ptr [ebx - 0x47fbdba4]; xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e761: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eae1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f651: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb81: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e651: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9e1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3f1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00129bb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00129dc1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128711: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c01: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129911: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012e4a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001153a1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127bb1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c231: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf21: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bee1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e501: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d271: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff11: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e941: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129491: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae1: fimul dword ptr [ebx - 0x74f7dbb4]; pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000cc6ed: fimul dword ptr [ebx - 0x76efdbbc]; ret; 
0x0009a334: fimul dword ptr [ecx + 0x247c8bc3]; adc al, 0x89; ret 0xfbd1; 
0x000d5c80: fimul dword ptr [ecx - 0x361f7b]; dec dword ptr [ebp - 0x7efb7884]; ret 0; 
0x00100e8d: fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x000daf62: fimul dword ptr [ecx - 0x76a7dbbc]; ret; 
0x0003bb58: fimul dword ptr [ecx - 0x76b3dbac]; ret; 
0x001b06dd: fimul dword ptr [ecx - 0x7c0c7607]; ret; 
0x000bb2c2: fimul dword ptr [ecx]; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001480fa: fimul dword ptr [ecx]; ret 0x448b; 
0x000e4243: fimul dword ptr [edi]; dec ecx; ret 0x1c8d; 
0x0006591b: fimul dword ptr [edi]; dec ecx; ret 0x4c89; 
0x0006323c: fimul dword ptr [edi]; dec ecx; ret 0x7489; 
0x00049eae: fimul dword ptr [edi]; lahf; ret; 
0x000db3d8: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x000db203: fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000ba705: fimul dword ptr [edi]; xor byte ptr [ebx + esi*8 + 0xe8ffff], 0xcf; or al, 0; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a4744: fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0009a215: fimul word ptr [ebx - 0x76ebdb84]; ret; 
0x0007d65d: fimul word ptr [ecx + 0x247c2bcf]; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0005a461: fimul word ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000607fe: fimul word ptr [ecx - 3]; call dword ptr [eax - 0x73]; 
0x00166cc3: fimul word ptr [edi]; inc esp; ret 0x4789; 
0x0013dacd: fimul word ptr [edi]; xchg ebx, eax; ret; 
0x001856b0: fimul word ptr [edi]; xchg edx, eax; ret; 
0x00041a7f: fist word ptr [edi + 0x52]; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x000b99e3: fist word ptr [edx]; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000405e8: fistp dword ptr [ebx + 0x31]; rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x001637cd: fistp qword ptr [ebp - 3]; jmp dword ptr [esi - 0x70]; 
0x00070ba5: fistp qword ptr [ecx]; ret 0x8d0f; 
0x00195d83: fistp qword ptr [edx]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b9ac2: fisttp dword ptr [eax + eax]; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9b02: fisttp dword ptr [eax + eax]; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ae0: fisttp dword ptr [eax + eax]; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000292a6: fisttp dword ptr [ebp + 0x490f0343]; ret; 
0x000ffd04: fisttp dword ptr [ebp + 0x490f1f43]; ret; 
0x0002a48a: fisttp dword ptr [ebp + 0xf68246c]; mov dh, 0x44; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x0015e3b1: fisttp dword ptr [ebp - 0x14]; jmp dword ptr [ebp - 0x75]; 
0x000da071: fisttp dword ptr [ebp - 0x7600e4a4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000a0349: fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a03bd: fisttp dword ptr [ebx + 0x198b81b]; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x001b0e81: fisttp dword ptr [ebx + 0xf182454]; xchg ebp, eax; ret; 
0x001aed61: fisttp dword ptr [ebx + 0xf202454]; xchg ebp, eax; ret; 
0x0013314c: fisttp dword ptr [ebx - 0x5cf0f5ec]; ret 0x920f; 
0x00132b10: fisttp dword ptr [ebx - 0x5cf0f7fc]; ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x0012238a: fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0003599b: fisttp dword ptr [ebx - 0x7af057ab]; ret; 
0x0002e0a7: fisttp dword ptr [ecx + 0x39f7891f]; ret 0xc275; 
0x0007c3c4: fisttp dword ptr [ecx + 0x5f5e5bd8]; pop ebp; ret; 
0x000c53f1: fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001397d6: fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115783: fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x00028124: fisttp dword ptr [ecx - 0x7c2dce28]; ret; 
0x000ef106: fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x00059976: fisttp dword ptr [edi]; dec ecx; ret; 
0x000295c4: fisttp dword ptr [edi]; inc ebp; ret 0x4489; 
0x0013d2d9: fisttp dword ptr [edi]; inc ebp; ret 0x548b; 
0x000e567a: fisttp dword ptr [edi]; inc ebp; ret; 
0x0011156f: fisttp dword ptr [edi]; test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x00063222: fisttp dword ptr [edi]; test byte ptr [edi], dh; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00140014: fisttp dword ptr [edi]; test ch, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x00058976: fisttp dword ptr [edi]; test cl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00076df8: fisttp dword ptr [edi]; test dword ptr [0x3900000c], esi; ret 0x840f; 
0x00155bd1: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00161271: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], edi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00161811: fisttp dword ptr [edi]; test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00091377: fisttp dword ptr [edi]; xchg ebp, eax; ret 0xe2c1; 
0x00190698: fisttp dword ptr [edi]; xchg esp, eax; ret 0xc483; 
0x0010706f: fisttp dword ptr [edi]; xchg esp, eax; ret 0xd008; 
0x000399d9: fisttp dword ptr [edi]; xchg esp, eax; ret; 
0x000b9adf: fisttp dword ptr cs:[eax + eax]; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00086681: fisttp qword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0016efbe: fisttp qword ptr [ebx + 0x508d1043]; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0013f0aa: fisttp qword ptr [ebx - 0x7ce3dba4]; ret 0x8802; 
0x0010be52: fisttp qword ptr [ecx + 0x5f5e5bf0]; ret; 
0x000495c8: fisttp qword ptr [ecx - 0x76307608]; ret; 
0x000622c9: fisttp qword ptr [edi]; xchg ebp, eax; ret 0x448b; 
0x000a1d79: fisttp word ptr [ebx + 0x418d0c48]; jmp dword ptr [ecx]; 
0x0005a110: fisttp word ptr [ebx + 0xf282444]; mov esi, 0x8b1b244c; je 0x5a141; sbb al, 0x89; ret 0xc801; 
0x0014e275: fisttp word ptr [ecx + 0x247c8bfa]; adc byte ptr [ebp - 0x87bf001], al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x000c2520: fisttp word ptr [ecx + 0x5f5e5bf0]; ret; 
0x0013e4a9: fisttp word ptr [ecx - 0x76c7dba4]; ret; 
0x00112d3a: fisttp word ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x0010013c: fisttp word ptr [ecx]; ret 0x5388; 
0x0004d617: fisttp word ptr [esi]; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x001910cd: fisub dword ptr [esi + 0xf]; jg 0x191114; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0019165d: fisub dword ptr [esi + 0xf]; jg 0x1916a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001a432c: fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0009adaa: fisub dword ptr [esi - 0x70]; nop; nop; endbr32; xor eax, eax; ret; 
0x00168bc9: fisub word ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x001a40ec: fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001507d2: fisubr dword ptr [ebp - 0x7c720002]; je 0x15078b; stc; call dword ptr [eax - 0x73]; 
0x0006a43a: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0006d8f7: fisubr dword ptr [ebx]; xchg ebp, eax; mov eax, 0x39fffffb; ret 0x850f; 
0x00134145: fisubr dword ptr [ecx]; ret 0x6c6; 
0x00148ec6: fisubr dword ptr [ecx]; ret 0x7e8b; 
0x00067d7d: fisubr dword ptr [ecx]; ret 0xfa83; 
0x000a1e38: fisubr word ptr [edi - 0x76acffe7]; ret; 
0x00150123: fld dword ptr [eax - 0x3b7c000c]; adc al, 0x89; fcomp dword ptr [ebx + 0x5e]; ret; 
0x000c1923: fld dword ptr [eax]; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0012e94b: fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003c52b: fld dword ptr [ebx + 0x1cd904ec]; and al, 0xd9; add al, 0x24; add esp, 4; ret; 
0x0003c28b: fld dword ptr [ebx + 0x1cdd08ec]; and al, 0xdd; add al, 0x24; add esp, 8; ret; 
0x000a85c2: fld dword ptr [ebx - 0x3b7cfe40]; or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x001a5996: fld dword ptr [ecx]; retf 0xc801; call 0x1875fd; add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fc6: fld dword ptr [ecx]; retf 0xc801; call 0x1875fd; add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003c3f3: fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c532: fld dword ptr [esp]; add esp, 4; ret; 
0x0003c499: fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000696de: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x58f63], cl; call dword ptr [ecx + 0x50]; 
0x00101f44: fld qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x00114f3e: fld qword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001210c9: fld qword ptr [eax]; add byte ptr [eax], al; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x001a875f: fld qword ptr [ecx]; add byte ptr [eax], al; mov eax, ecx; ret; 
0x00153b2f: fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0003c0cb: fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00055289: fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003c292: fld qword ptr [esp]; add esp, 8; ret; 
0x0003c364: fld st(0); test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x000d8cd1: fld xword ptr [eax]; push es; add byte ptr [ebx - 0x364b43], cl; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x001abeff: fld xword ptr [ecx]; ret 0xe2c1; 
0x00042db5: fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x001927c7: fld xword ptr [esi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000931d7: fld xword ptr [esi]; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x0003bd25: fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bf64: fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003bd1a: fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00055303: fld xword ptr [esp]; add esp, 0x1c; ret; 
0x001b487b: fld1; fdiv dword ptr [edx - 0x63d74]; fstp st(0); add esp, 0x20; ret; 
0x000c53de: fldcw word ptr [ecx]; ret; 
0x00122ad4: fldenv [0x80000000]; pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x000c1034: fldenv [ebp + 0xc]; add byte ptr [ecx + 0x109fbcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c1c26: fldenv [esi + 0xf]; je 0xc1c7a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c2425: fldenv [esi + 0xf]; je 0xc2474; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001a43bc: fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c1b2a: fldenv [esi + 0xf]; xlatb; ret; 
0x001aa019: fldenv [esi + 0xf]; xlatb; retf 0xf66; xlatb; ret; 
0x0008f73a: fldenv [esi - 0x70]; nop; nop; endbr32; ret; 
0x000b0acc: fmul dword ptr [ebp + 0xf664049]; xlatb; ret; 
0x00194a8a: fmul dword ptr [ebp + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00104cb1: fmul dword ptr [ebp - 0x4376fea9]; and al, 0xf8; add byte ptr [eax], al; add byte ptr [edi], cl; dec esp; ret; 
0x0009e6f0: fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x0013e58c: fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00124637: fmul dword ptr [ebx + 0xf046a09]; dec edi; ret; 
0x000384a7: fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x0010edc1: fmul dword ptr [ebx - 0x7cfbdbac]; ret; 
0x0005e07e: fmul dword ptr [ebx - 0x8b63]; call dword ptr [eax - 0x75]; 
0x00098397: fmul dword ptr [ecx + 0x5bc03107]; pop esi; pop edi; ret; 
0x00098154: fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0017a3ff: fmul dword ptr [ecx - 0x2776f3be]; pop ebx; ret; 
0x0008f166: fmul dword ptr [ecx - 0x3b7ceefc]; or byte ptr [eax - 1], bh; pop ebx; ret; 
0x001acd3f: fmul dword ptr [ecx - 0x76dfdbbc]; ret; 
0x000e00e1: fmul dword ptr [ecx - 0x7cb3dba4]; ret; 
0x0002e071: fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0016e234: fmul dword ptr [ecx - 0xb]; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00154cac: fmul dword ptr [edi]; add byte ptr [eax], al; call esi; 
0x0003deeb: fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000409db: fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x000a8c7a: fmul dword ptr [edi]; inc ebp; ret 0xc483; 
0x0011f740: fmul dword ptr [edi]; inc edi; ret 0x548b; 
0x000aa28d: fmul dword ptr [edi]; inc edx; ret; 
0x0010cd2b: fmul dword ptr [edi]; lahf; ret 0xe8c1; 
0x0014d7de: fmul dword ptr [edi]; pop dword ptr [ebx + 0x29000002]; ret; 
0x00133416: fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x000aa0cf: fmul dword ptr [edi]; xchg edx, eax; ret; 
0x000b99fe: fmul qword ptr [eax + eax]; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99de: fmul qword ptr [eax + eax]; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b9: fmul qword ptr [eax + eax]; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00027949: fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x000fc483: fmul qword ptr [ebx - 0x5cf0afaf]; ret 0xd473; 
0x0003ddb2: fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00127f75: fmul qword ptr [ecx - 7]; jmp dword ptr [ebp - 0x75]; 
0x00192b1d: fmul qword ptr [edx - 1]; inc dword ptr [ecx + 0x46abfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001769b6: fmul st(0), st(0); dec dword ptr [ebp - 0xcfc334a]; call dword ptr [ebp - 0x73]; 
0x0007976a: fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0012be2f: fnsave dword ptr [edx]; idiv bh; add esp, 0x2c; ret; 
0x000ea2ff: fnsave dword ptr [esp + edi*8]; jmp dword ptr [esi - 0x70]; 
0x001a4271: fnstcw word ptr [eax]; jne 0x1a49f0; pop ebx; ret; 
0x001a70a3: fnstcw word ptr [eax]; jne 0x1a72d0; pop ebx; ret; 
0x000af733: fnstcw word ptr [ecx]; ret 0xe372; 
0x000ae239: fnstcw word ptr [ecx]; ret 0xe672; 
0x000fd1d6: fnstcw word ptr [ecx]; ret; 
0x0003bc23: fnstcw word ptr [edx + 0xa]; jne 0x3bc30; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bfc2: fnstcw word ptr [edx + 0xb]; jne 0x3bfd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003c2ee: fnstcw word ptr [edx + 0xf]; jne 0x3c300; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003229f: fnstcw word ptr [esi]; jmp ecx; 
0x00069ca8: fnstenv [ebp - 0x7d]; in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0007391e: fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x0003bf7a: fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x001140c2: fnstsw word ptr [ecx - 1]; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x001a418c: frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0003bf68: fscale; fstp st(1); ret; 
0x0015dc45: fscale; jmp dword ptr [esi - 0x70]; 
0x00079cb5: fst dword ptr [eax]; add byte ptr [ecx + 0x1c315cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000bdd34: fstp dword ptr [eax - 0x3e7efff4]; cmp al, 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c6e0f: fstp dword ptr [ebx + 0x5e]; cmovg eax, edx; pop edi; ret; 
0x0008dcae: fstp dword ptr [ebx + 0x5e]; mov eax, ecx; pop edi; pop ebp; ret; 
0x001a4a05: fstp dword ptr [ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a4a10; neg eax; ret; 
0x0003c52f: fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003c4d8: fstp dword ptr [esp]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003f415: fstp qword ptr [eax]; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a8c52: fstp qword ptr [ebx + 0x5e]; pop edi; ret; 
0x000ac402: fstp qword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000dad41: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003c28f: fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x001b4883: fstp st(0); add esp, 0x20; ret; 
0x0003bf7c: fstp st(0); and eax, 0x200; ret; 
0x0003bf6a: fstp st(1); ret; 
0x0003c52a: fstp st(1); sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0003c28a: fstp st(1); sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x000a025b: fstp xword ptr [eax + 0x2a]; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000eb51b: fstp xword ptr [eax + 0x5a]; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x0003bf21: fstp xword ptr [eax]; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000a0345: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a03b9: fstp xword ptr [ecx + 4]; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000ea411: fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00083be1: fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x0006133b: fstp xword ptr [edx - 0x47acffe3]; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0003bf7d: fsub dword ptr [0x200]; ret; 
0x0019350a: fsub dword ptr [eax + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019770a: fsub dword ptr [ebx]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a28f9: fsub dword ptr [ecx]; ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000c0f35: fsub dword ptr [esi + 0xc]; add byte ptr [ecx + 0x10a0bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001a445c: fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000b92dc: fsub dword ptr [esi + 0xf]; xlatb; ret; 
0x001630ed: fsub qword ptr [ebx - 0x72b00000]; or dword ptr [edx + ecx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x0012d23d: fsub qword ptr [esi - 0x70]; endbr32; call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001378b8: fsub st(0), st(0); ret 0xffe6; 
0x001a1247: fsub st(1), st(0); ret; 
0x0003bec7: fsubp st(1); add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000dad3f: fsubp st(1); fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003bef7: fsubp st(1); ret; 
0x00165315: fsubp st(3); jmp dword ptr [ebp - 0x75]; 
0x0007beab: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee6f: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x00085094: fsubr dword ptr [ecx]; sar byte ptr [0x593], 1; ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x000256f5: fsubr dword ptr [edi - 7]; call dword ptr [eax - 0x73]; 
0x00196c0a: fsubr dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a9d36: fsubr qword ptr [eax - 0x18]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x00140f2b: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x55]; 
0x00114d77: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax + 0x56]; 
0x0010ee85: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x18]; 
0x00139d41: fsubr qword ptr [ecx + edi*8]; call dword ptr [eax - 0x73]; 
0x00106f21: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x0004041b: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003febd: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe31: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00040311: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003fede: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0003fd14: fsubr qword ptr [ecx + edi*8]; dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x001581db: fsubr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008e311: fsubr qword ptr [ecx + edi*8]; inc dword ptr [ebx - 0x72aff314]; and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x000846aa: fsubr qword ptr [edx]; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x000caab0: fsubr st(0); cli; or al, byte ptr [edi]; add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x00147b3e: fsubr st(0); insb byte ptr es:[edi], dx; cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x000f5ef8: fsubr st(0); ret 0xffe9; 
0x0009ab7e: fsubrp st(5); call dword ptr [eax - 0x73]; 
0x0016d336: fucomi st(0); je 0x16d31c; cld; jmp dword ptr [esi - 0x70]; 
0x00181058: fucomi st(0); push edx; movsd dword ptr es:[edi], dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x000853ff: fucomi st(1); ret; 
0x0010498e: fucomi st(3); ret 0xc901; 
0x001367c8: fucomi st(7); dec dword ptr [ebx - 0x72e3dba4]; cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x001367eb: fucomi st(7); jmp dword ptr [esi - 0x70]; 
0x00175eab: fucomp st(0); call dword ptr [esi - 4]; 
0x000dbec3: fucompi st(1); call dword ptr [eax - 0x73]; 
0x000dbe25: fucompi st(1); call dword ptr [eax - 1]; 
0x000df296: fucompi st(1); call dword ptr [ecx + 0x52]; 
0x000df296: fucompi st(1); call dword ptr [ecx + 0x52]; push eax; call 0xdaeb0; add esp, 0x1c; ret; 
0x0011bd2b: fucompi st(5); call dword ptr [edx - 0x73]; 
0x0003bf78: fxam; fnstsw ax; fstp st(0); and eax, 0x200; ret; 
0x000a78bf: hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x0004b66a: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e6: hlt; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x001684af: hlt; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043c5f: hlt; add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x00142563: hlt; add dword ptr [ecx + ecx - 0x7d], esi; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019abfc: hlt; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00081c7b: hlt; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013edcb: hlt; add esp, 8; pop ebx; ret; 
0x001867a8: hlt; call dword ptr [eax - 0x18]; 
0x00184722: hlt; call dword ptr [eax - 0x73]; 
0x00178e94: hlt; call ecx; 
0x001368c2: hlt; call ptr [eax - 1]; je 0x1368ec; sbb al, 0xe8; ret 0xeec8; 
0x001505e7: hlt; dec dword ptr [ebp - 0xeccd37d]; call dword ptr [esi + 0x50]; 
0x0017dc78: hlt; inc dword ptr [ebx + 0x458b10c4]; test byte ptr [ebx - 0x936b], cl; inc dword ptr [ecx]; ret 0x458b; 
0x000efe7a: hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00150125: hlt; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x001607ac: hlt; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00132045: hlt; inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x000e53ed: hlt; jecxz 0xe53ef; call dword ptr [ebx + 0x52]; 
0x000481e6: hlt; jg 0x481e1; call dword ptr [eax + 0x52]; 
0x00048242: hlt; jg 0x4823d; call dword ptr [eax - 1]; 
0x0004b6a4: hlt; jg 0x4b69f; call dword ptr [eax + 0x52]; 
0x0004b6fd: hlt; jg 0x4b6f8; call dword ptr [eax - 1]; 
0x0004f198: hlt; jg 0x4f193; call dword ptr [eax + 0x52]; 
0x0004f1f9: hlt; jg 0x4f1f4; call dword ptr [eax - 1]; 
0x00056eb4: hlt; jg 0x56eaf; call dword ptr [eax + 0x51]; 
0x00056f39: hlt; jg 0x56f34; call dword ptr [eax - 1]; 
0x0005d538: hlt; jg 0x5d533; call dword ptr [eax + 0x56]; 
0x0005d68f: hlt; jg 0x5d68a; call dword ptr [edx + 0x51]; 
0x000c8c98: hlt; jg 0xc8c93; call dword ptr [eax + 0x52]; 
0x000c8cf5: hlt; jg 0xc8cf0; call dword ptr [eax + 0x55]; 
0x000cc5e5: hlt; jg 0xcc5e0; call dword ptr [eax + 0x52]; 
0x000cc642: hlt; jg 0xcc63d; call dword ptr [eax + 0x55]; 
0x000cfe08: hlt; jg 0xcfe03; call dword ptr [eax + 0x52]; 
0x000cfe65: hlt; jg 0xcfe60; call dword ptr [eax + 0x55]; 
0x000d6470: hlt; jg 0xd646b; call dword ptr [eax + 0x52]; 
0x000d64e5: hlt; jg 0xd64e0; call dword ptr [eax - 1]; 
0x000796e7: hlt; jle 0x796e3; call dword ptr [eax - 0x73]; 
0x001507a3: hlt; jmp dword ptr [ebp - 0x75]; 
0x000edc1c: hlt; jmp dword ptr [esi - 0x70]; 
0x001a9c05: hlt; jne 0x1a9c40; pop edi; pop esi; pop ebx; ret; 
0x00191237: hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190cee: hlt; mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001396cb: hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x0008d31b: hlt; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000ea4f0: hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00193de1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de1: hlt; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x00056688: hlt; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000259fb: hlt; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001a7d6a: hlt; pop edi; ret; 
0x00094cb8: hlt; ret 8; 
0x0015040b: hlt; ret; 
0x001a6de7: hlt; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0019a8ee: hlt; test dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x000c45df: hlt; wait; stc; call dword ptr [eax - 0x73]; 
0x000c3363: hlt; xor eax, eax; ret; 
0x00129fe5: idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00123d1e: idiv bh; add esp, 0x10; mov eax, 1; add esp, 8; pop ebx; ret; 
0x001555fd: idiv bh; add esp, 0x10; test eax, eax; sete al; add esp, 0xc; ret; 
0x001597bc: idiv bh; add esp, 0x1c; ret; 
0x00128769: idiv bh; add esp, 0x28; pop ebx; ret; 
0x0011f395: idiv bh; add esp, 0x2c; ret; 
0x000d4cfa: idiv bh; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000a92ba: idiv bh; and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca5a: idiv bh; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000aca9a: idiv bh; and ch, 2; lea edx, [edx - 0x17a854]; cmove eax, edx; ret; 
0x000a9d6a: idiv bh; and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000a9daa: idiv bh; and ch, 2; lea edx, [edx - 0x17a954]; cmove eax, edx; ret; 
0x000acb1a: idiv bh; and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x000cd3c5: idiv bh; call dword ptr [edi + 0x6a]; 
0x000a9282: idiv bh; cmovne eax, edx; ret; 
0x00142ede: idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000a4818: idiv bh; dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x0005f566: idiv bh; dec dword ptr [ebp - 0x684277d]; call dword ptr [eax - 0x73]; 
0x00126d6b: idiv bh; dec dword ptr [ebx + 0x11083]; add byte ptr [ebp - 0x6aff76d], cl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x00067ab4: idiv bh; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x0004d5a7: idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x0017a5db: idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0017ac4a: idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000c61c9: idiv bh; dec dword ptr [ecx - 0x76a7dbac]; ret 0xbde9; 
0x000e0870: idiv bh; dec dword ptr [edi]; mov esi, 0x246c8903; add al, 0x83; ret; 
0x00057f75: idiv bh; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b4b3c: idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4ae6: idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4292: idiv bh; jmp dword ptr [esi + 0xf]; 
0x0002da2b: idiv bh; jmp dword ptr [esi - 0x70]; 
0x000c633e: idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000abc9e: idiv bh; test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000acbde: idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00090660: idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000901bb: idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x00098647: idiv byte ptr [edx + 0x7fffffff]; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0009147e: idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903f9: idiv byte ptr [edx + 1]; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00189ee5: idiv byte ptr [edx + 1]; call dword ptr gs:[0x10]; 
0x00091ba5: idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000a7de7: idiv ch; jmp dword ptr [esi - 0x70]; 
0x0002e0ab: idiv dword ptr [ecx]; ret 0xc275; 
0x0002cc33: idiv dword ptr [ecx]; ret; 
0x000e0196: idiv dword ptr [esi]; jmp edi; 
0x0003f23d: idiv dword ptr [esp + 0xc]; mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0019a8ab: idiv ecx; jmp dword ptr [esi - 0x70]; 
0x000a7648: idiv edi; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000abce8: idiv edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001150d9: idiv edi; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0011466a: idiv edi; add esp, 0x2c; ret; 
0x000e7904: idiv edi; call dword ptr [eax + 0x55]; 
0x00078378: idiv edi; call dword ptr [eax - 0x73]; 
0x001aed57: idiv edi; dec dword ptr [ebp + 0xb6]; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00040416: idiv edi; dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0018edb7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x129b5380]; call dword ptr [eax + 0x6a]; 
0x000f9cb7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x144b8380]; call dword ptr [eax + 0x6a]; 
0x0018cdf7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14599380]; call dword ptr [eax + 0x6a]; 
0x0018b0b7: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1492b380]; call dword ptr [eax + 0x6a]; 
0x000f2b37: idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14bdc380]; call dword ptr [eax + 0x6a]; 
0x00034021: idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0006bc0b: idiv edi; dec dword ptr [ecx - 0x58b73]; call dword ptr [edx + 0x52]; 
0x000cd325: idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0009e45f: idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x00149ce9: idiv edi; inc dword ptr [ebx - 0x7a72f714]; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x000b439d: idiv edi; jmp dword ptr [esi + 0xf]; 
0x0003ad21: idiv edi; jmp dword ptr [esi - 0x70]; 
0x001a33e0: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bd3: idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000a75c1: idiv edi; pop ebx; pop esi; pop edi; ret; 
0x0010498a: idiv edi; push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x001a33e7: idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bda: idiv edi; sub eax, ecx; pop ebx; ret; 
0x001a4d59: idiv edi; sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x001760b3: idiv edi; sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00197e9c: idiv esi; inc dword ptr [ecx + 0x41c41c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e7e: idiv esi; inc dword ptr [ecx + 0x41c5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00182066: imul bh; stc; jmp dword ptr [ebp - 0x75]; 
0x00175a55: imul bl; mov ebx, 0xfc5b53e8; jmp dword ptr [esi - 0x70]; 
0x001a6e07: imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b1208: imul byte ptr [ecx]; ret 0x280f; 
0x000b2bfc: imul byte ptr [ecx]; ret 0xc301; 
0x000586b9: imul byte ptr [ecx]; ret; 
0x000f5cb4: imul byte ptr [ecx]; ror byte ptr [ecx - 0x49f7b], 1; dec dword ptr [ebx - 0x49f63]; dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x0015d638: imul cl; leave; in eax, 0xff; jmp dword ptr [ebp - 0x75]; 
0x000b4a82: imul cl; mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x001a6d98: imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b1338: imul dword ptr [ecx]; ret 0x280f; 
0x000b2d5c: imul dword ptr [ecx]; ret 0xc301; 
0x00151815: imul dword ptr [edx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00192a8b: imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x00152199: imul eax, dword ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x001508a6: imul eax, dword ptr [ebx + ecx*4], 0x33; mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00079da9: imul eax, dword ptr [ecx + 0x44cc4], 0x5f5e5b00; pop ebp; ret; 
0x000ac77d: imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x000a1c93: imul eax, dword ptr [ecx], 0xec830000; add al, 0x8d; xchg dword ptr [eax], esi; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000b9e33: imul eax, dword ptr [edi], 0x5e5f0000; pop ebx; ret; 
0x00034baa: imul eax, dword ptr [edx - 0x7f74ffe0], -0x68; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00114bdc: imul eax, dword ptr [edx], 0xda899000; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0015a64d: imul eax, dword ptr [esi], 0; add byte ptr [eax - 0x73], dl; adc eax, -0x4c; stc; call dword ptr [eax - 0x18]; 
0x000e871e: imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x001aa882: imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x00041a50: imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00153109: imul eax, edx, 0xb6db6db7; ret; 
0x00041b3d: imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013a0ac: imul ebp, dword ptr [0xec830010], 0x7b808d18; push edi; stc; call dword ptr [eax - 0x18]; 
0x0012e6a1: imul ebp, dword ptr [eax - 0x11], -1; ret; 
0x000c4743: imul ebp, dword ptr [esi + 7], 0xf4828d00; wait; stc; call dword ptr [eax - 0x73]; 
0x0013edc3: imul ebp, edi, 0xf883ffff; cmc; je 0x13edc0; add esp, 8; pop ebx; ret; 
0x000a727b: imul ebx, dword ptr [eax], -0x77; jae 0xa72a0; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000a11a1: imul ecx, dword ptr [eax], 0x830ce8c1; ret 0x8901; 
0x0009aaed: imul ecx, dword ptr [ecx + eax], 0x5b; pop esi; pop edi; ret; 
0x0009d561: imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x0013c1be: imul edi, eax, -1; add esp, 0x18; pop ebx; ret; 
0x000a4cea: imul edi, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x0007c876: imul edi, edi, -1; jmp dword ptr [esi - 0x70]; 
0x00098623: imul edi, edi, -1; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x00190cc2: imul edi, edi, 0x1bc381ff; test byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00173cd4: imul edi, esi, 0xec83ffff; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x00040aa8: imul edx, dword ptr [eax + eax], -0x7f; ret; 
0x0018cbd0: imul esi, ebx, 0x8d5a59ff; push eax; add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x00128768: imul esi, esi, 0x28c483ff; pop ebx; ret; 
0x0012e8a1: imul esp, dword ptr [esi - 0x11], -1; ret; 
0x000c11a2: imul esp, dword ptr [esp + ecx], -0x7f; ror esi, 0x9e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0013bb31: imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x00123b28: in al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011eb05: in al, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003032e: in al, 0x10; add byte ptr [eax], al; call 0x12b5e0; add esp, 0x1c; ret; 
0x0003923b: in al, 0x39; ret; 
0x0009dad4: in al, 0x3b; add byte ptr [eax], al; test eax, eax; jne 0x9dae7; ret; 
0x000eb5e4: in al, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0016c527: in al, 0x50; push esi; call 0x16de30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0007eb5a: in al, 0x56; call dword ptr [eax + 0x2c]; 
0x000c4cc8: in al, 0x68; pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x0007c9c5: in al, 0x6a; call dword ptr [esi - 0x18]; 
0x0007ca48: in al, 0x6b; cli; jmp dword ptr [esi - 0x70]; 
0x0004050f: in al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000b0179: in al, 0x83; ret 0x8301; 
0x00172bc8: in al, 0x89; cld; jmp dword ptr [esi - 0x70]; 
0x0009a743: in al, 0x8b; mov esp, 0x1b2cc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x00173ae7: in al, 0x8b; pop ebp; adc al, 0x8d; xchg esi, ecx; stc; call dword ptr [eax + 0x53]; 
0x00141e4e: in al, 0x8d; add eax, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001248ae: in al, 0x8d; xchg ah, al; dec edx; stc; call dword ptr [eax - 0x73]; 
0x00131496: in al, 0x8d; xchg dword ptr [ecx], eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x000a4866: in al, 0x94; stc; call dword ptr [eax - 0x18]; 
0x000c6a5a: in al, 0x9c; stc; call dword ptr [eax - 0x18]; 
0x0012a52d: in al, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x00123f28: in al, 0xb1; idiv bh; add esp, 0x2c; ret; 
0x0015157f: in al, 0xb1; stc; call dword ptr [eax - 0x73]; 
0x00086dd3: in al, 0xd3; stc; jmp dword ptr [esi - 0x70]; 
0x0009b776: in al, 0xe5; call dword ptr [eax - 0x73]; 
0x0009b721: in al, 0xe5; call dword ptr [eax - 1]; 
0x0012c940: in al, 0xf0; sub esp, 0xc; push esi; call edx; 
0x000e0192: in al, 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00085c29: in al, 0xf9; jmp dword ptr [esi - 0x70]; 
0x001a8739: in al, 0xf; test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x001a8864: in al, 0xf; test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0011f528: in al, 0xfb; idiv bh; add esp, 0x2c; ret; 
0x0016d0c5: in al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000e5399: in al, 0xff; call dword ptr [esi + 0x51]; 
0x00058bad: in al, 0xff; dec dword ptr [ecx - 0x361f6b]; call dword ptr [eax - 0x75]; 
0x0013bbe2: in al, 0xff; jmp dword ptr [esi - 0x70]; 
0x000e1db6: in al, 0xff; push esi; ret; 
0x00024a96: in al, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x000c38f8: in al, 1; add byte ptr [eax], al; ret; 
0x00044870: in al, 7; add byte ptr [ebx + 0xc8b10c4], al; and al, 0xe9; popfd; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0010ba34: in al, dx; aas; add byte ptr [eax], al; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0010ba7d: in al, dx; aas; add byte ptr [eax], al; push eax; call 0x8fc80; call dword ptr [esi]; 
0x0010c425: in al, dx; adc al, 0x6a; add byte ptr [edx], ch; call 0x10c3f0; add esp, 0x1c; ret; 
0x0017ff1f: in al, dx; adc al, 0x6a; add cl, byte ptr [ebp - 0x6996c80]; call dword ptr [eax - 0x18]; 
0x00169fef: in al, dx; adc al, 0x8d; adc byte ptr [eax + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016b76f: in al, dx; adc al, 0x8d; adc byte ptr [ebx + 0x6a50fff9], 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x00168c8f: in al, dx; adc al, 0x8d; cmp ah, 0x62; stc; call dword ptr [eax + 0x6a]; 
0x0016b08f: in al, dx; adc al, 0x8d; cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016a66f: in al, dx; adc al, 0x8d; sbb byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016aa0f: in al, dx; adc al, 0x8d; sub byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0017feef: in al, dx; adc al, 0xff; je 0x17ff18; sbb byte ptr [ebp - 0x6996c80], cl; call dword ptr [eax - 0x18]; 
0x0003c8cd: in al, dx; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00024f4f: in al, dx; adc byte ptr [eax - 0x27], ch; add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00030351: in al, dx; adc byte ptr [ebp - 0x20cd437d], cl; call dword ptr [eax - 1]; 
0x0003812f: in al, dx; adc byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 0x75]; 
0x0016c591: in al, dx; adc byte ptr [ebp - 0xd09737d], cl; call dword ptr [eax - 0x73]; 
0x00160111: in al, dx; adc byte ptr [ebp - 0xdcd437d], cl; call dword ptr [eax - 0x73]; 
0x00089766: in al, dx; add al, 0x29; ret 0x5052; 
0x0008342b: in al, dx; add al, 0x29; ret 0xfac1; 
0x0011e981: in al, dx; add al, 0x29; ret; 
0x000f23c2: in al, dx; add al, 0x29; ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x00024de0: in al, dx; add al, 0x50; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008aa91: in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00083b4b: in al, dx; add al, 0x50; push edx; push esi; call ecx; 
0x0012ab28: in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0008a0c4: in al, dx; add al, 0x51; push eax; push esi; call edx; 
0x0008ad09: in al, dx; add al, 0x52; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007eb55: in al, dx; add al, 0x53; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c5c6: in al, dx; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079946: in al, dx; add al, 0x53; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00024ea1: in al, dx; add al, 0x55; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x000884cd: in al, dx; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007e453: in al, dx; add al, 0x56; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0008827f: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00080030: in al, dx; add al, 0x56; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x000883ff: in al, dx; add al, 0x56; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007da61: in al, dx; add al, 0x56; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080377: in al, dx; add al, 0x56; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0012aad0: in al, dx; add al, 0x57; push 0; push ebx; call esi; 
0x0012aae4: in al, dx; add al, 0x57; push 1; push ebx; call esi; 
0x0012aaf7: in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x0007ff39: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c936: in al, dx; add al, 0x57; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d9e1: in al, dx; add al, 0x6a; adc byte ptr [ebp + 0x56], dl; call dword ptr [eax + 0x1c]; 
0x0008cf2a: in al, dx; add al, 0x6a; add byte ptr [edx], ch; push esi; call dword ptr [ebp + 0x2c]; 
0x00140f21: in al, dx; add al, 0x6a; add dword ptr [ebx - 0x72ebdbbc], ecx; sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x00137441: in al, dx; add al, 0x6a; add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x00137d24: in al, dx; add al, 0x6a; add eax, 0x5632808d; stc; call dword ptr [eax - 0x75]; 
0x00136ba7: in al, dx; add al, 0x6a; add eax, 0x5653808d; stc; call dword ptr [eax - 0x75]; 
0x000efe6b: in al, dx; add al, 0x6a; add eax, 0x6c818d50; je 0xefe6e; call dword ptr [eax - 0x18]; 
0x000606ad: in al, dx; add al, 0x6a; add eax, 0x6c838d50; je 0x606b0; call dword ptr [eax - 0x18]; 
0x00060b1b: in al, dx; add al, 0x6a; add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x000acd91: in al, dx; add al, 0x6a; add eax, 0x6c838d50; je 0xacd94; call dword ptr [eax - 0x18]; 
0x00139383: in al, dx; add al, 0x6a; add eax, 0x6e6c868d; stc; call dword ptr [eax - 0x75]; 
0x0013948b: in al, dx; add al, 0x6a; add eax, 0x6e6c878d; stc; call dword ptr [eax - 0x75]; 
0x000f0415: in al, dx; add al, 0x6a; add eax, 0x9fb8838d; stc; call dword ptr [eax - 0x73]; 
0x0013718f: in al, dx; add al, 0x6a; add eax, 0xa88c808d; stc; call dword ptr [eax - 0x75]; 
0x00137dd7: in al, dx; add al, 0x6a; add eax, 0xa8c4808d; stc; call dword ptr [eax + 0x6a]; 
0x0010b06f: in al, dx; add al, 0x6a; add eax, 0xcc03848d; cli; clc; call dword ptr [eax - 0x73]; 
0x001791c6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001791c6: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0017adbe: in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x000a0e01: in al, dx; add al, 0x80; int1; call dword ptr [edx + 0x51]; 
0x001389c4: in al, dx; add al, 0x83; ret; 
0x001244e8: in al, dx; add al, 0x89; ret; 
0x0008ef42: in al, dx; add al, 0x8b; adc edx, dword ptr [esi + 0x50]; push ecx; call edx; 
0x00141587: in al, dx; add al, 0x8b; je 0x1415b0; adc byte ptr [ebp - 0x6cf9c6a], cl; call dword ptr [edx - 0x46]; 
0x0018de8c: in al, dx; add al, 0x8b; push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00030231: in al, dx; add al, 0x8d; or dword ptr [edx + esi], 0xffffffdf; call dword ptr [esi + 0x50]; 
0x000a24b0: in al, dx; add al, 0x8d; sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x0014149e: in al, dx; add al, 0x8d; test dword ptr [ebx + 0x30], esp; stc; call dword ptr [eax - 0x77]; 
0x0013fe81: in al, dx; add al, 0x8d; test dword ptr [ecx + 0x6afff958], ebp; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x000a23d4: in al, dx; add al, 0x8d; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x000a8189: in al, dx; add al, 0x8d; test dword ptr [esi + 0x6afff944], edx; add eax, 0x6c858d50; je 0xa8192; call dword ptr [eax - 0x18]; 
0x0012a529: in al, dx; add al, 0x8d; xchg ah, ah; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edi - 0x7f]; 
0x000a1c98: in al, dx; add al, 0x8d; xchg dword ptr [eax], esi; inc edx; stc; call dword ptr [eax + 0x53]; 
0x0003c52d: in al, dx; add al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x00041579: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x00041429: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x00041b2c: in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret; 
0x000413dc: in al, dx; add al, 0xff; je 0x41405; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041491: in al, dx; add al, 0xff; je 0x414ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041509: in al, dx; add al, 0xff; je 0x41532; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0007c620: in al, dx; add al, 0xff; je 0x7c649; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007ed8f: in al, dx; add al, 0xff; jne 0x7eda8; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0012393f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; 
0x0012393f: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x001237a7: in al, dx; add al, 0xff; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax + 0x6a]; 
0x00184b70: in al, dx; add al, 0xff; xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016f166: in al, dx; add al, 1; ret 0xc129; 
0x001ae410: in al, dx; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0014c9e8: in al, dx; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x00183a5b: in al, dx; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg esp, edi; stc; call dword ptr [eax - 0x18]; 
0x00046fdf: in al, dx; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0007b96f: in al, dx; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0010556e: in al, dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00138087: in al, dx; add esp, 4; pop ebx; pop esi; ret; 
0x00153c53: in al, dx; add esp, 8; pop ebx; ret; 
0x00025515: in al, dx; and byte ptr [esi], dl; add byte ptr [0x2178fb], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x0016f563: in al, dx; call dword ptr [eax - 0x73]; 
0x0016ea66: in al, dx; call dword ptr [ebp + 0x50]; 
0x00168c39: in al, dx; call dword ptr [edx + 0x52]; 
0x0016eb32: in al, dx; call dword ptr [esi - 0x17]; 
0x00182c41: in al, dx; cmp al, 0x89; ret 0x489; 
0x00167453: in al, dx; cmp byte ptr [ebp - 0x69d7a80], cl; jmp dword ptr [ebp - 0x75]; 
0x000c6a83: in al, dx; cmp byte ptr [ebp - 0x6d5dc48], cl; jmp dword ptr [ebp - 0x75]; 
0x000a1b0b: in al, dx; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x00176ae6: in al, dx; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x001693d1: in al, dx; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [esi + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x001659e4: in al, dx; dec ebx; int1; call dword ptr [eax - 0x73]; 
0x001257d3: in al, dx; dec edx; stc; call dword ptr [eax - 0x39]; 
0x0017ac49: in al, dx; idiv bh; dec dword ptr [ecx + 0x548b0450]; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00034020: in al, dx; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0009b775: in al, dx; in al, 0xe5; call dword ptr [eax - 0x73]; 
0x00173897: in al, dx; inc dword ptr [ebx - 0x72afef3c]; and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x00156694: in al, dx; inc esi; int1; call dword ptr [eax - 0x73]; 
0x001738e5: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001544c4: in al, dx; inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000300a5: in al, dx; jb 0x300a1; call dword ptr [eax - 0x73]; 
0x001649f8: in al, dx; jge 0x1649ed; call dword ptr [eax - 0x18]; 
0x00155b06: in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00146696: in al, dx; lodsd eax, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x0014ee3d: in al, dx; mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x00179df0: in al, dx; mov bl, 0xeb; call dword ptr [eax - 0x73]; 
0x00191072: in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194343: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001962e3: in al, dx; mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x000aca20: in al, dx; movsb byte ptr es:[edi], byte ptr [esi]; idiv bh; cmovne eax, edx; ret; 
0x0006873d: in al, dx; or al, 0x29; ret; 
0x000ec9af: in al, dx; or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec9af: in al, dx; or al, 0x31; call dword ptr [eax - 0x18]; push 0xc4830004; adc byte ptr [ecx], bh; ret; 
0x00140a30: in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x0007be0c: in al, dx; or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00088b7b: in al, dx; or al, 0x31; call dword ptr [ebx - 0x18]; 
0x00173292: in al, dx; or al, 0x31; call dword ptr [esi - 0x18]; 
0x001397d3: in al, dx; or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098775: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098f0c: in al, dx; or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x00160bae: in al, dx; or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d95: in al, dx; or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x0016c871: in al, dx; or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00175cd1: in al, dx; or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a75ab: in al, dx; or al, 0x50; call edx; 
0x00026248: in al, dx; or al, 0x51; call 0x184910; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268f2: in al, dx; or al, 0x52; call 0x184910; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00157ab4: in al, dx; or al, 0x53; call 0x184910; add esp, 0x10; mov eax, ebx; call eax; 
0x00160f44: in al, dx; or al, 0x53; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x0002f7b2: in al, dx; or al, 0x53; call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x0016d474: in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00088baf: in al, dx; or al, 0x53; call dword ptr [edi + 0x44]; 
0x000813c4: in al, dx; or al, 0x53; call dword ptr [esi + 0x10]; 
0x00088018: in al, dx; or al, 0x53; call dword ptr [esi + 0x30]; 
0x00174a09: in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016ea0f: in al, dx; or al, 0x55; call dword ptr [esi]; 
0x00174a20: in al, dx; or al, 0x55; call eax; 
0x00173813: in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x000260d5: in al, dx; or al, 0x56; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x0016ca07: in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00086ada: in al, dx; or al, 0x56; call dword ptr [eax + 0x30]; 
0x0008c190: in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007beba: in al, dx; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007ee7e: in al, dx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0018915b: in al, dx; or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008bdea: in al, dx; or al, 0x56; call dword ptr [edi + 0x34]; 
0x001892b0: in al, dx; or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a74c9: in al, dx; or al, 0x56; call eax; 
0x0012c943: in al, dx; or al, 0x56; call edx; 
0x0012c943: in al, dx; or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0017349c: in al, dx; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00027038: in al, dx; or al, 0x57; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x0016d93c: in al, dx; or al, 0x57; call eax; 
0x0016d919: in al, dx; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0008d5c9: in al, dx; or al, 0x68; add byte ptr [eax], 0; add al, ch; ret; 
0x000ea901: in al, dx; or al, 0x68; out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x00123bc9: in al, dx; or al, 0x68; rcr byte ptr [edi], 0; add al, ch; ret; 
0x001770cd: in al, dx; or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x000a71f1: in al, dx; or al, 0x6a; add eax, 0x4485838d; stc; call dword ptr [eax - 0x73]; 
0x00034621: in al, dx; or al, 0x6a; add eax, 0x74ac838d; stc; call dword ptr [eax - 0x73]; 
0x001086c6: in al, dx; or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x00167349: in al, dx; or al, 0x83; mov byte ptr [edx*2 + 0x28245c8b], 0xe8; dec eax; ret 0xfff5; 
0x00083d77: in al, dx; or al, 0x83; ret 0x2b2c; 
0x00172375: in al, dx; or al, 0x83; ret 0x5208; 
0x00037370: in al, dx; or al, 0x83; ret; 
0x000682d2: in al, dx; or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006935d: in al, dx; or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00069b79: in al, dx; or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00035a69: in al, dx; or al, 0x89; push ebp; mov esp, 0x2e55808d; stc; call dword ptr [eax - 0x18]; 
0x0010c701: in al, dx; or al, 0x89; ret 0x438d; 
0x0008e011: in al, dx; or al, 0x89; ret 0xe989; 
0x0006c818: in al, dx; or al, 0x89; ret; 
0x000329ba: in al, dx; or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x000329ba: in al, dx; or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; ret 0xff07; 
0x0014ec14: in al, dx; or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0016cb51: in al, dx; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x000e9e41: in al, dx; or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x00174f8f: in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016cf8c: in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0017835e: in al, dx; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x001769ef: in al, dx; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0009c463: in al, dx; or al, 0x8b; jg 0x9c474; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000e8804: in al, dx; or al, 0x8b; jl 0xe882d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e9b39: in al, dx; or al, 0x8b; jne 0xe9b12; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ea049: in al, dx; or al, 0x8b; jne 0xea022; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x0016ccfa: in al, dx; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0007bcc0: in al, dx; or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x00069e79: in al, dx; or al, 0x8d; adc dword ptr [edx], 0x33; stc; call dword ptr [eax - 0x18]; 
0x0009fb9e: in al, dx; or al, 0x8d; adc eax, -0x77; stc; call dword ptr [eax - 0x18]; 
0x00093252: in al, dx; or al, 0x8d; add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x000f2ee7: in al, dx; or al, 0x8d; add al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0011f43d: in al, dx; or al, 0x8d; add dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x001694c7: in al, dx; or al, 0x8d; add dword ptr [edx + 0x63], -7; call dword ptr [eax - 0x18]; 
0x0003f169: in al, dx; or al, 0x8d; and dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0003a126: in al, dx; or al, 0x8d; and edi, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x0011f48d: in al, dx; or al, 0x8d; cmp dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x00087e3e: in al, dx; or al, 0x8d; cmp dword ptr [eax - 0x7d], -7; call dword ptr [eax - 0x18]; 
0x0015443c: in al, dx; or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x000a0ecd: in al, dx; or al, 0x8d; nop; js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x00084912: in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00183457: in al, dx; or al, 0x8d; or dword ptr [ebx + edi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0010b785: in al, dx; or al, 0x8d; or dword ptr [edi + 0x48], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dd965: in al, dx; or al, 0x8d; or dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0005c5a0: in al, dx; or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00149346: in al, dx; or al, 0x8d; popfd; jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x0014931a: in al, dx; or al, 0x8d; popfd; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00149372: in al, dx; or al, 0x8d; popfd; mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x0017429b: in al, dx; or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x00186d76: in al, dx; or al, 0x8d; sbb byte ptr [eax + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00093206: in al, dx; or al, 0x8d; sbb byte ptr [eax - 0x7c], 0xf9; call dword ptr [eax - 0x18]; 
0x00094550: in al, dx; or al, 0x8d; sbb dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x00148a41: in al, dx; or al, 0x8d; sbb dword ptr [ebx + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x0010ee81: in al, dx; or al, 0x8d; sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0013a195: in al, dx; or al, 0x8d; sub ah, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x00154520: in al, dx; or al, 0x8d; sub dword ptr [eax], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x000eb1d1: in al, dx; or al, 0x8d; sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x0011bd51: in al, dx; or al, 0x8d; sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x00028029: in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x00069a45: in al, dx; or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0012a5a1: in al, dx; or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x0002511e: in al, dx; or al, 0x8d; test dword ptr [edi + ebp*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0014a589: in al, dx; or al, 0x8d; test dword ptr [esi], esi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000c6a56: in al, dx; or al, 0x8d; xchg ah, ah; pushfd; stc; call dword ptr [eax - 0x18]; 
0x0002502a: in al, dx; or al, 0x8d; xchg byte ptr [edi + ebp*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x00122c51: in al, dx; or al, 0x8d; xchg byte ptr [edi], ch; inc esi; stc; call dword ptr [eax - 0x18]; 
0x0017c744: in al, dx; or al, 0x8d; xchg dword ptr [eax], ecx; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000eb6f1: in al, dx; or al, 0x8d; xchg edx, esi; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000360c0: in al, dx; or al, 0x8d; xor dword ptr [ecx + 0x2e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ebc41: in al, dx; or al, 0x8d; xor edx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0009182d: in al, dx; or al, 0xff; jae 0x91836; call dword ptr [ebx]; 
0x000984c4: in al, dx; or al, 0xff; jae 0x984cd; call dword ptr [ebx]; 
0x00094825: in al, dx; or al, 0xff; je 0x9484e; adc al, 0xe8; pushal; ret; 
0x000243a2: in al, dx; or al, 0xff; jne 0x24373; call dword ptr [ebp - 0x38]; 
0x00095326: in al, dx; or al, ch; ret; 
0x00177c20: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x00172260: in al, dx; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x001769db: in al, dx; or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x0012f9e1: in al, dx; or bh, bh; je 0x12f99b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0016c7c2: in al, dx; or bh, bh; je 0x16c7eb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00036281: in al, dx; or bh, bh; je 0x362aa; sbb byte ptr [ebp - 0x18], dl; ret; 
0x000cc132: in al, dx; or bh, bh; je 0xcc15b; adc byte ptr [eax - 0x18], dl; ret 0x679; 
0x000cf6b2: in al, dx; or bh, bh; je 0xcf6db; or byte ptr [eax - 0x18], dl; ret 0x643; 
0x000cf932: in al, dx; or bh, bh; je 0xcf95b; or byte ptr [eax - 0x18], dl; ret 0x641; 
0x0013432f: in al, dx; or byte ptr [eax + 0x6a], dl; and al, ch; aaa; ret; 
0x000a7581: in al, dx; or byte ptr [eax - 1], dl; jae 0xa75ab; call edx; 
0x000a29a2: in al, dx; or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x00141f77: in al, dx; or byte ptr [ebp + 0x490c83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x0007b7a4: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00088920: in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00089e5d: in al, dx; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x00088616: in al, dx; or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00083771: in al, dx; or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e7c59: in al, dx; or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0011432d: in al, dx; or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f8449: in al, dx; or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e7dd3: in al, dx; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000f1209: in al, dx; or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x001760b6: in al, dx; or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x00189729: in al, dx; or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0016c8f4: in al, dx; or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x0008bf4a: in al, dx; or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x000fb29d: in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fb108: in al, dx; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000fb141: in al, dx; or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0009f951: in al, dx; or byte ptr [ebp - 0x19d6a379], cl; call dword ptr [eax - 0x73]; 
0x00031db3: in al, dx; or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x00087cc5: in al, dx; or byte ptr [ebp - 0x1b54337d], cl; call dword ptr [eax - 0x73]; 
0x00027153: in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x000d6564: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363373]; call dword ptr [eax - 0x73]; 
0x000d6e16: in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36576b]; dec dword ptr [ebp - 0x35e343]; call dword ptr [eax - 0x73]; 
0x00058c56: in al, dx; or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x0014ba0f: in al, dx; or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x0012a0b2: in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000f1d49: in al, dx; or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f8f89: in al, dx; or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x00182639: in al, dx; or byte ptr [ebp - 0x6450345], cl; call dword ptr [edi + 0x56]; 
0x0012edaf: in al, dx; or byte ptr [ebp - 0x6597779], cl; call dword ptr [eax + 0x55]; 
0x0012edca: in al, dx; or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x0012ede8: in al, dx; or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x00038981: in al, dx; or byte ptr [ebp - 0x68aef6d], cl; call dword ptr [edx - 0x77]; 
0x00030a9b: in al, dx; or byte ptr [ebp - 0x68b9b79], cl; call dword ptr [eax + 0x56]; 
0x000337ea: in al, dx; or byte ptr [ebp - 0x68b9b7b], cl; call dword ptr [eax + 0x56]; 
0x001810b6: in al, dx; or byte ptr [ebp - 0x699316a], cl; call dword ptr [edx - 0x77]; 
0x00181511: in al, dx; or byte ptr [ebp - 0x699316d], cl; call dword ptr [edx - 0x77]; 
0x00181d81: in al, dx; or byte ptr [ebp - 0x6993175], cl; call dword ptr [ecx - 0x77]; 
0x00181534: in al, dx; or byte ptr [ebp - 0x6994045], cl; call dword ptr [edi + 0x56]; 
0x001810d5: in al, dx; or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x00181da4: in al, dx; or byte ptr [ebp - 0x699404d], cl; call dword ptr [esi + 0x57]; 
0x001814f6: in al, dx; or byte ptr [ebp - 0x6994e55], cl; call dword ptr [ebp + 0x56]; 
0x0018066c: in al, dx; or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x001814db: in al, dx; or byte ptr [ebp - 0x6995c45], cl; call dword ptr [edi + 0x56]; 
0x00181d47: in al, dx; or byte ptr [ebp - 0x6995c4d], cl; call dword ptr [esi + 0x57]; 
0x001708e1: in al, dx; or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x0016a2fb: in al, dx; or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x51]; 
0x0016acf7: in al, dx; or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x57]; 
0x00169b57: in al, dx; or byte ptr [ebp - 0x69d8780], cl; call dword ptr [eax + 0x57]; 
0x001607f8: in al, dx; or byte ptr [ebp - 0x69f676f], cl; call dword ptr [edx + 0x50]; 
0x001602e1: in al, dx; or byte ptr [ebp - 0x69fa36d], cl; call dword ptr [edx + 0x50]; 
0x000fb1d1: in al, dx; or byte ptr [ebp - 0x6a03668], cl; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x00123ba1: in al, dx; or byte ptr [ebp - 0x6a0367d], cl; call dword ptr [eax - 0x73]; 
0x00154500: in al, dx; or byte ptr [ebp - 0x6a2327d], cl; call dword ptr [eax - 1]; 
0x0012b81a: in al, dx; or byte ptr [ebp - 0x6ac017d], cl; call dword ptr [eax + 0x56]; 
0x0012602b: in al, dx; or byte ptr [ebp - 0x6aea17d], cl; call dword ptr [eax + 0x55]; 
0x001261c0: in al, dx; or byte ptr [ebp - 0x6b12a7d], cl; call dword ptr [eax + 0x55]; 
0x001261a5: in al, dx; or byte ptr [ebp - 0x6b15c7d], cl; call dword ptr [eax + 0x55]; 
0x0012618a: in al, dx; or byte ptr [ebp - 0x6b1907d], cl; call dword ptr [eax + 0x55]; 
0x0012616f: in al, dx; or byte ptr [ebp - 0x6b1c57d], cl; call dword ptr [eax + 0x55]; 
0x00126154: in al, dx; or byte ptr [ebp - 0x6b1f77d], cl; call dword ptr [eax + 0x55]; 
0x00126139: in al, dx; or byte ptr [ebp - 0x6b2437d], cl; call dword ptr [eax + 0x55]; 
0x0012611e: in al, dx; or byte ptr [ebp - 0x6b2877d], cl; call dword ptr [eax + 0x55]; 
0x00126103: in al, dx; or byte ptr [ebp - 0x6b2b97d], cl; call dword ptr [eax + 0x55]; 
0x001260e8: in al, dx; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x001260cd: in al, dx; or byte ptr [ebp - 0x6b3307d], cl; call dword ptr [eax + 0x55]; 
0x001260b2: in al, dx; or byte ptr [ebp - 0x6b3657d], cl; call dword ptr [eax + 0x55]; 
0x00126097: in al, dx; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x0012607c: in al, dx; or byte ptr [ebp - 0x6b3e57d], cl; call dword ptr [eax + 0x55]; 
0x00126061: in al, dx; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x00126046: in al, dx; or byte ptr [ebp - 0x6b4a37d], cl; call dword ptr [eax + 0x55]; 
0x00123c9f: in al, dx; or byte ptr [ebp - 0x6b5646a], cl; call dword ptr [edx - 0x77]; 
0x00123c80: in al, dx; or byte ptr [ebp - 0x6b5676a], cl; call dword ptr [edx - 0x77]; 
0x00123c61: in al, dx; or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x000fdec4: in al, dx; or byte ptr [ebp - 0x6b7be7d], cl; call dword ptr [eax + 0x55]; 
0x000fe221: in al, dx; or byte ptr [ebp - 0x6b7c57d], cl; call dword ptr [eax + 0x55]; 
0x000fe11c: in al, dx; or byte ptr [ebp - 0x6b7cb7d], cl; call dword ptr [eax + 0x55]; 
0x000fdff0: in al, dx; or byte ptr [ebp - 0x6b7d17d], cl; call dword ptr [eax + 0x55]; 
0x000fdc59: in al, dx; or byte ptr [ebp - 0x6b7d77d], cl; call dword ptr [eax + 0x55]; 
0x000fdd20: in al, dx; or byte ptr [ebp - 0x6b7e37d], cl; call dword ptr [eax + 0x55]; 
0x000fe0b9: in al, dx; or byte ptr [ebp - 0x6b7e97d], cl; call dword ptr [eax + 0x55]; 
0x000fde68: in al, dx; or byte ptr [ebp - 0x6b7ef7d], cl; call dword ptr [eax + 0x55]; 
0x000fb286: in al, dx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax + 0x53]; 
0x000fb2e3: in al, dx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax - 1]; 
0x000dd879: in al, dx; or byte ptr [ebp - 0x6b9d27d], cl; call dword ptr [eax + 0x56]; 
0x000dd341: in al, dx; or byte ptr [ebp - 0x6ba077d], cl; call dword ptr [eax + 0x56]; 
0x000a712a: in al, dx; or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x001555f0: in al, dx; or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x0015ac2f: in al, dx; or byte ptr [ebp - 0x6beb379], cl; call dword ptr [eax + 0x53]; 
0x000fdd5e: in al, dx; or byte ptr [ebp - 0x6c0a97d], cl; call dword ptr [eax + 0x55]; 
0x00061d9f: in al, dx; or byte ptr [ebp - 0x6cd3c7a], cl; call dword ptr [eax + 0x53]; 
0x00061ccd: in al, dx; or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x00039ed6: in al, dx; or byte ptr [ebp - 0x6d12a7b], cl; call dword ptr [eax + 0x53]; 
0x00124ab2: in al, dx; or byte ptr [ebp - 0x6d1907a], cl; call dword ptr [eax - 1]; 
0x00123672: in al, dx; or byte ptr [ebp - 0x6d1907d], cl; call dword ptr [eax + 0x6a]; 
0x0014a17e: in al, dx; or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x52]; 
0x0014a1c0: in al, dx; or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x53]; 
0x000301a6: in al, dx; or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x00030188: in al, dx; or byte ptr [ebp - 0x6d4816d], cl; call dword ptr [edx + 0x50]; 
0x0013fdd9: in al, dx; or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax + 0x53]; 
0x00149ced: in al, dx; or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax - 0x73]; 
0x000dd904: in al, dx; or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax + 0x56]; 
0x001253a4: in al, dx; or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax - 0x73]; 
0x000d5d54: in al, dx; or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x0013f8eb: in al, dx; or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x00173b00: in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x00173b61: in al, dx; or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00173cd9: in al, dx; or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x0017eba5: in al, dx; or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0017f19d: in al, dx; or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x0016c63a: in al, dx; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x00176bf1: in al, dx; or byte ptr [ebp - 0xc63437d], cl; call dword ptr [eax - 0x73]; 
0x00174a29: in al, dx; or byte ptr [ebp - 0xc86c37d], cl; call dword ptr [eax - 0x73]; 
0x00171fbb: in al, dx; or byte ptr [ebp - 0xcb1e37d], cl; call dword ptr [eax - 0x73]; 
0x00138e50: in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0017186a: in al, dx; or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016e18a: in al, dx; or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0012af73: in al, dx; or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x00172ef1: in al, dx; or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016c910: in al, dx; or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0016c7ac: in al, dx; or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00174f60: in al, dx; or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x00172e51: in al, dx; or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x00179acf: in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00081b96: in al, dx; or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x001398b9: in al, dx; or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016edeb: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ee39: in al, dx; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001775e1: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x001777e0: in al, dx; or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016c791: in al, dx; or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x001744c2: in al, dx; or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x00172e0c: in al, dx; or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016e23c: in al, dx; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0016e280: in al, dx; or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016e20f: in al, dx; or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00073922: in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00077b49: in al, dx; or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x000739c5: in al, dx; or byte ptr [ebx - 0x5576b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0006c315: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x0006ab1d: in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x0006767e: in al, dx; or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x00067501: in al, dx; or byte ptr [ebx - 0x5b773], cl; jmp dword ptr [ebp - 0x5f]; 
0x000d194d: in al, dx; or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015793b: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; adc bh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000d2271: in al, dx; or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x000ce0a1: in al, dx; or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00190066: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [edi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x0015cc37: in al, dx; or byte ptr [ebx - 0x72e7dbbc], cl; or bl, 0x5f; stc; call dword ptr [eax - 1]; 
0x00140a7c: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; cmp byte ptr [edi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0015b189: in al, dx; or byte ptr [ebx - 0x72ebdbbc], cl; cmp byte ptr [esi + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x00088fe7: in al, dx; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [edi], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00153201: in al, dx; or byte ptr [ebx - 0x72efdbbc], cl; cwde; loope 0x153268; stc; call dword ptr [ebx - 0x73]; 
0x00145cd4: in al, dx; or byte ptr [ebx - 0x72f3dbbc], cl; sbb byte ptr [edx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00177829: in al, dx; or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000fb3e7: in al, dx; or byte ptr [ebx - 0x73], dl; xor bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0017d411: in al, dx; or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x000f061c: in al, dx; or byte ptr [ebx - 0x7f72378b], cl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x0008daa6: in al, dx; or byte ptr [ebx - 0xe7dbbc], cl; je 0x8dad3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0013852d: in al, dx; or byte ptr [ebx - 1], dl; jae 0x138563; call eax; 
0x001578fe: in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13180], cl; call dword ptr [eax + 0x55]; 
0x0012b033: in al, dx; or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0016d3b9: in al, dx; or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x00038624: in al, dx; or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x00069cac: in al, dx; or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006bee4: in al, dx; or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x0006b49e: in al, dx; or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x00175e5a: in al, dx; or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0004e368: in al, dx; or byte ptr [ecx - 0x76dbdbbc], cl; ret 0x74ff; 
0x0003336c: in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0017f409: in al, dx; or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x000a7503: in al, dx; or byte ptr [ecx - 1], dl; jae 0xa752d; call eax; 
0x0003f531: in al, dx; or byte ptr [ecx - 1], dl; je 0x3f55b; dec esp; call eax; 
0x0003a769: in al, dx; or byte ptr [ecx], al; ret 0x8952; 
0x0011b1d1: in al, dx; or byte ptr [ecx], al; ret; 
0x000385a2: in al, dx; or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x000754c7: in al, dx; or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x000a8a48: in al, dx; or byte ptr [ecx], ch; ret 0x348d; 
0x0007456e: in al, dx; or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x00184068: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x001840ef: in al, dx; or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x00082ceb: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008988b: in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0016e87e: in al, dx; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003eff6: in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x0007b92d: in al, dx; or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0008c689: in al, dx; or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e7d99: in al, dx; or byte ptr [esi + 0x53], dl; call eax; 
0x0014384d: in al, dx; or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x000a73f4: in al, dx; or byte ptr [esi - 1], dl; jae 0xa741e; call eax; 
0x0003c28d: in al, dx; or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00149b0a: in al, dx; or cl, bh; jmp dword ptr [esi - 0x70]; 
0x00170553: in al, dx; pop ebx; ret; 
0x0002b1d6: in al, dx; push -7; call dword ptr [eax - 0x73]; 
0x001622f8: in al, dx; push esi; bnd call dword ptr [eax - 0x18]; 
0x0017e9e2: in al, dx; rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0006525d: in al, dx; sar al, 0xff; jmp ecx; 
0x0013aaa6: in al, dx; sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0014ea4e: in al, dx; sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x0009cd27: in al, dx; sbb bh, bh; je 0x9cd50; sbb al, 0xe8; fidiv word ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x00087fd1: in al, dx; sbb byte ptr [eax - 0x18], dl; xchg dword ptr [ebx], edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009c4f1: in al, dx; sbb byte ptr [ebp - 0x677b780], cl; call dword ptr [eax - 0x18]; 
0x0003defd: in al, dx; sbb byte ptr [ebp - 0x68a3b80], cl; call dword ptr [eax - 0x18]; 
0x0013b5c1: in al, dx; sbb byte ptr [ebp - 0x6a85380], cl; call dword ptr [eax - 0x18]; 
0x0013a0b1: in al, dx; sbb byte ptr [ebp - 0x6a88480], cl; call dword ptr [eax - 0x18]; 
0x0016b795: in al, dx; sbb byte ptr [edx + 0xa], ch; call 0x153f30; add esp, 0x1c; ret; 
0x00167885: in al, dx; sbb byte ptr [edx + 1], ch; call 0x153f30; add esp, 0x1c; ret; 
0x00168cb5: in al, dx; sbb byte ptr [edx + 3], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016a015: in al, dx; sbb byte ptr [edx + 4], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016a695: in al, dx; sbb byte ptr [edx + 5], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016aa35: in al, dx; sbb byte ptr [edx + 6], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016bd15: in al, dx; sbb byte ptr [edx + 7], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016b0b5: in al, dx; sbb byte ptr [edx + 8], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016b4c5: in al, dx; sbb byte ptr [edx + 9], ch; call 0x153f30; add esp, 0x1c; ret; 
0x00167425: in al, dx; sbb byte ptr [edx], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0003d565: in al, dx; sbb byte ptr [edx], ch; call 0x3ce00; add esp, 0x1c; ret; 
0x000acc50: in al, dx; stosd dword ptr es:[edi], eax; idiv bh; cmovne eax, edx; ret; 
0x0016d263: in al, dx; sub al, 0x8d; test al, 0xcc; add esi, ebx; jmp dword ptr [ebp - 0x75]; 
0x0016bd43: in al, dx; sub byte ptr [ebp - 0x69c5f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b7c3: in al, dx; sub byte ptr [ebp - 0x69c6b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b4f3: in al, dx; sub byte ptr [ebp - 0x69c7880], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b0e3: in al, dx; sub byte ptr [ebp - 0x69c8680], cl; jmp dword ptr [ebp - 0x75]; 
0x0016aa63: in al, dx; sub byte ptr [ebp - 0x69c9280], cl; jmp dword ptr [ebp - 0x75]; 
0x0016a6c3: in al, dx; sub byte ptr [ebp - 0x69ca180], cl; jmp dword ptr [ebp - 0x75]; 
0x00167c23: in al, dx; sub byte ptr [ebp - 0x69d6180], cl; jmp dword ptr [ebp - 0x75]; 
0x001678b3: in al, dx; sub byte ptr [ebp - 0x69d6d80], cl; jmp dword ptr [ebp - 0x75]; 
0x0017e10d: in al, dx; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; call dword ptr [eax + 0x6a]; 
0x00096590: in al, dx; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x00156558: in al, dx; xchg ebx, eax; int1; call dword ptr [eax - 1]; 
0x0002567d: in al, dx; xor edi, 0x3ecf01ff; jmp edi; 
0x00125b73: in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a94c7: in eax, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x00025e06: in eax, 0; add byte ptr [ebp - 0x68ffb7f], cl; call dword ptr [eax - 0x73]; 
0x00099002: in eax, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x000ac35a: in eax, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x0005e027: in eax, 0x62; std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x0008cdfa: in eax, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00177b0a: in eax, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000a15d9: in eax, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000b3fc6: in eax, 0x83; ret; 
0x000c71da: in eax, 0x89; fadd dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000c638a: in eax, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0003a71a: in eax, 0x89; int 0x80; 
0x00185e1a: in eax, 0x89; ret; 
0x000c922d: in eax, 0x89; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x001825c7: in eax, 0x8f; sti; jmp dword ptr [esi - 0x70]; 
0x000bbd28: in eax, 0xb8; or al, 0; add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba628: in eax, 0xcf; or al, 0; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00121027: in eax, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x000d9f13: in eax, 0xf; je 0xd9f30; add eax, 2; ret; 
0x0017d008: in eax, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0016e286: in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00140bfd: in eax, 0xfe; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [eax - 0x77]; ret; 
0x000ffba6: in eax, 0xff; add esi, dword ptr [eax + esi - 0xa]; ret 0x7404; 
0x000d8b2d: in eax, 0xff; call dword ptr [eax - 0x73]; 
0x000d7a8e: in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x00075a94: in eax, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x0015d63b: in eax, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0013bb32: in eax, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d4cfd: in eax, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000aaa7d: in eax, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000a92bd: in eax, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca5d: in eax, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000aca9d: in eax, 2; lea edx, [edx - 0x17a854]; cmove eax, edx; ret; 
0x000a9d6d: in eax, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000a9dad: in eax, 2; lea edx, [edx - 0x17a954]; cmove eax, edx; ret; 
0x000acb1d: in eax, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x001a5042: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a3bbb: in eax, dx; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000e66d0: in eax, dx; add al, 0x83; ret 0x930; 
0x000c20f7: in eax, dx; add eax, ecx; pop edi; ret; 
0x0012c93e: in eax, dx; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x00114193: in eax, dx; call dword ptr [eax + 0x56]; 
0x0018edca: in eax, dx; call dword ptr [eax + 0x6a]; 
0x0010d1b3: in eax, dx; call dword ptr [ebp + 0x6a]; 
0x0011bd2c: in eax, dx; call dword ptr [edx - 0x73]; 
0x0014fca7: in eax, dx; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0015084b: in eax, dx; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0018779d: in eax, dx; inc dword ptr [ebx - 0x247aef3c]; jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x0014969d: in eax, dx; jmp dword ptr [ebp - 0x5f]; 
0x000a74d4: in eax, dx; jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000ac242: in eax, dx; mov eax, edx; pop ebx; pop esi; ret; 
0x000ac3a2: in eax, dx; mov eax, edx; pop ebx; ret; 
0x00191042: in eax, dx; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ad9e7: in eax, dx; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x001a3cb7: in eax, dx; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00134449: in eax, dx; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000fbbd2: in eax, dx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x000bdd89: in eax, dx; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00173f14: in eax, dx; stc; call dword ptr [edi + 0x56]; 
0x000dfff1: inc byte ptr [eax]; add al, 0xf; test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x0012cd81: inc byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d79c4: inc byte ptr [ebx - 0x363f7b]; jmp eax; 
0x00043f7a: inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x0013f85c: inc dword ptr [eax + 0x7500027a]; push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x000b4b3e: inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4ae8: inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00138e47: inc dword ptr [eax + 0xf]; test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x000aaa7b: inc dword ptr [eax - 0x6d72fd1b]; cmp al, 0x65; call 0xc24eba87; ret; 
0x000acb1b: inc dword ptr [eax - 0x6d72fd1b]; insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x000aca9b: inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; push edi; call 0xc24edaa7; ret; 
0x000a9dab: inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; push esi; call 0xc24eadb7; ret; 
0x000a92bb: inc dword ptr [eax - 0x6d72fd1b]; or al, 0x5b; call 0xc24ea2c7; ret; 
0x000aca5b: inc dword ptr [eax - 0x6d72fd1b]; sbb al, 0x58; call 0xc24eda67; ret; 
0x000a9d6b: inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x57; call 0xc24ead77; ret; 
0x0006662f: inc dword ptr [eax - 0x76ffb987]; lea ebx, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x000571c5: inc dword ptr [eax - 0x7af09a07]; add dword ptr [eax + eax], edx; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0005c6f8: inc dword ptr [eax - 0x7bf09a06]; push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0005d941: inc dword ptr [eax - 0xcb43]; jmp dword ptr [edi + 0xf]; 
0x000756fb: inc dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0012e5c3: inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000fb5b3: inc dword ptr [eax]; add byte ptr [eax], al; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x001a7eec: inc dword ptr [eax]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0003bddb: inc dword ptr [eax]; add byte ptr [ecx], ch; rol ecx, 1; call 0x10ed7f05; or eax, ecx; ret; 
0x001a24ac: inc dword ptr [eax]; add byte ptr [edi], cl; test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019dea8: inc dword ptr [eax]; add byte ptr [edi], cl; test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x000a0a97: inc dword ptr [eax]; add byte ptr [esi + 4], dh; ret; 
0x000fd969: inc dword ptr [eax]; clc; jmp dword ptr [esi + 0xb]; 
0x00109d96: inc dword ptr [eax]; cld; dec dword ptr [ecx]; retf 0x5489; ret; 
0x000c276f: inc dword ptr [eax]; je 0xc2774; inc eax; pop edi; ret; 
0x000c2913: inc dword ptr [eax]; je 0xc2918; inc eax; pop edi; pop esi; ret; 
0x0013f9cb: inc dword ptr [eax]; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x0013f9a3: inc dword ptr [eax]; ret; 
0x000b42ac: inc dword ptr [ebp + 0x2b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000ef100: inc dword ptr [ebp + 0x312074c9]; fisttp dword ptr [ecx - 0x7cf81432]; ret; 
0x0006d591: inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x000b428c: inc dword ptr [ebp + 0x4b850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a2313: inc dword ptr [ebp + 0x5b1874c0]; pop esi; pop edi; ret; 
0x001b0ef8: inc dword ptr [ebp + 0x67850fd2]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0006a1ea: inc dword ptr [ebp + 0x6f850fdb]; add al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0006c375: inc dword ptr [ebp + 0x74840fc0]; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x00126d65: inc dword ptr [ebp + 0x7a840fff]; idiv bh; dec dword ptr [ebx + 0x11083]; add byte ptr [ebp - 0x6aff76d], cl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x00058823: inc dword ptr [ebp + 0x7d850ff6]; add al, 0; add byte ptr [ebx - 0x365f7b], al; jmp eax; 
0x000b42cc: inc dword ptr [ebp + 0xb850fc0]; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000696f8: inc dword ptr [ebp + 0xfc389c0]; test byte ptr [esi], dl; cmp byte ptr [eax], al; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x00078108: inc dword ptr [ebp - 0x187bf040]; mov edx, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0007536d: inc dword ptr [ebp - 0x257bf040]; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0005ab28: inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x00179e35: inc dword ptr [ebp - 0x3f6af040]; add esp, 0x1c; movzx eax, al; ret; 
0x0010b5a6: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0x2c; movzx eax, al; ret; 
0x00053552: inc dword ptr [ebp - 0x3f6bf040]; add esp, 0xc; movzx eax, al; ret; 
0x00183342: inc dword ptr [ebp - 0x5a7af040]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00077d53: inc dword ptr [ebp - 0x5b7bf040]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x001aedd8: inc dword ptr [ebp - 0x637af02e]; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x0016efba: inc dword ptr [ebp - 0x74228b40]; inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x000f8bd2: inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x000f1992: inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x00185e16: inc dword ptr [ebp - 0x761a8b40]; ret; 
0x0013d79e: inc dword ptr [ebp - 0x768f8740]; ret; 
0x00068474: inc dword ptr [ebp - 0x7b7af025]; add eax, dword ptr [eax]; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000606a7: inc dword ptr [ebp - 0x7cbb8b40]; in al, dx; add al, 0x6a; add eax, 0x6c838d50; je 0x606b0; call dword ptr [eax - 0x18]; 
0x00060b15: inc dword ptr [ebp - 0x7cc28b40]; in al, dx; add al, 0x6a; add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x0006dc5b: inc dword ptr [ebx + 0x13e910c4]; ret; 
0x001256b5: inc dword ptr [ebx + 0x1ba10c4]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76f73c], al; pop ebx; ret; 
0x00128af2: inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000afac9: inc dword ptr [ebx + 0x440ffff8]; ret; 
0x000e946c: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x000946aa: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00177a2e: inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00027943: inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x0017dc79: inc dword ptr [ebx + 0x458b10c4]; test byte ptr [ebx - 0x936b], cl; inc dword ptr [ecx]; ret 0x458b; 
0x00085f84: inc dword ptr [ebx + 0x45c710c4]; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x0009d564: inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x0010a148: inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0016e9f4: inc dword ptr [ebx + 0x478b0cc4]; or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0013763f: inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x000d8702: inc dword ptr [ebx + 0x48d04ec]; mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x0013f03d: inc dword ptr [ebx + 0x48d10c4]; pop ebx; pop esi; pop edi; ret; 
0x00046997: inc dword ptr [ebx + 0x4c701fe]; and al, 1; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0x38e9; 
0x000a811a: inc dword ptr [ebx + 0x4de90cc4]; fcos; jmp dword ptr [esi - 0x70]; 
0x001220a1: inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0013ae2a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07a: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c0: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00092a92: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x0009767e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098932: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da2: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992be: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x0009970e: inc dword ptr [ebx + 0x548b10c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0012bc31: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0018a09e: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x000dac63: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54e7: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79a7: inc dword ptr [ebx + 0x548b10c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x0012f1a6: inc dword ptr [ebx + 0x548b20c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f776: inc dword ptr [ebx + 0x548b20c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7e6: inc dword ptr [ebx + 0x548b20c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc36: inc dword ptr [ebx + 0x548b20c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd36: inc dword ptr [ebx + 0x548b20c4]; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012f13e: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f29e: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbce: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcbe: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0013034c: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x00148c38: inc dword ptr [ebx + 0x548b20c4]; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x001760b4: inc dword ptr [ebx + 0x548d08ec]; and al, 0x20; push edx; push eax; call edi; 
0x0005f7be: inc dword ptr [ebx + 0x57530cc4]; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00188d79: inc dword ptr [ebx + 0x5e5b04c4]; ret; 
0x000ac485: inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0005be3f: inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000610ad: inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0018329c: inc dword ptr [ebx + 0x5e5b14c4]; pop edi; pop ebp; ret; 
0x00030105: inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00179c8d: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; jmp eax; 
0x00025dbf: inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0013b0d6: inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00025f90: inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0014749f: inc dword ptr [ebx + 0x5e5b38c4]; pop edi; pop ebp; ret; 
0x001672f3: inc dword ptr [ebx + 0x5e5b3cc4]; pop edi; pop ebp; ret; 
0x0012a93e: inc dword ptr [ebx + 0x658d10c4]; clc; pop ebx; pop esi; pop ebp; ret; 
0x00041507: inc dword ptr [ebx + 0x74ff04ec]; and al, 8; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00153dda: inc dword ptr [ebx + 0x750b383c]; add eax, 0xfffffebb; jmp dword ptr [ebp - 0x5f]; 
0x00024855: inc dword ptr [ebx + 0x75e910c4]; rcl byte ptr [ecx], cl; add byte ptr [ebp - 0x6a9e97d], cl; call dword ptr [edi + 0x57]; 
0x000f045a: inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x0017328d: inc dword ptr [ebx - 0x137cef3c]; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00149341: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x00149315: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x0014936d: inc dword ptr [ebx - 0x137cef3c]; or al, 0x8d; popfd; mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x00180667: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x0016e237: inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00074123: inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x00161186: inc dword ptr [ebx - 0x17a8f314]; add byte ptr [eax], ah; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016273e: inc dword ptr [ebx - 0x17a8f314]; dec eax; or ch, ah; jmp dword ptr [ebp - 0x75]; 
0x00156fae: inc dword ptr [ebx - 0x17a8f314]; fadd st(1); in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00155afe: inc dword ptr [ebx - 0x17a8f314]; mov dh, dl; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00156a0e: inc dword ptr [ebx - 0x17a9f314]; js 0x1569dd; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0003f9c3: inc dword ptr [ebx - 0x17a9f314]; ret; 
0x00161fde: inc dword ptr [ebx - 0x17a9f314]; test al, 0x11; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0015dc16: inc dword ptr [ebx - 0x17aaf314]; jo 0x15dc73; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00161716: inc dword ptr [ebx - 0x17aaf314]; jo 0x161738; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000f3087: inc dword ptr [ebx - 0x17acf314]; syscall; 
0x000a8c4d: inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x0018779e: inc dword ptr [ebx - 0x247aef3c]; jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x0002538a: inc dword ptr [ebx - 0x2708ef3c]; pop ebx; adc edx, 0; neg edx; ret; 
0x0013fd09: inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x00150126: inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x000da909: inc dword ptr [ebx - 0x287cfe3a]; add byte ptr [ecx], bh; ret; 
0x000587bd: inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x000d724a: inc dword ptr [ebx - 0x2d7c0040]; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017abe8: inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0010da4d: inc dword ptr [ebx - 0x357c0035]; dec dword ptr [ecx + 0xd2b8c1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000d7875: inc dword ptr [ebx - 0x362743]; call dword ptr [ecx + 0xf]; 
0x000d7a4c: inc dword ptr [ebx - 0x36277b]; jmp dword ptr [eax]; 
0x00058a61: inc dword ptr [ebx - 0x36277b]; jmp eax; 
0x00056889: inc dword ptr [ebx - 0x362f43]; call dword ptr [eax]; 
0x000586d5: inc dword ptr [ebx - 0x362f43]; call dword ptr [ecx + 0xf]; 
0x000588a9: inc dword ptr [ebx - 0x362f7b]; jmp dword ptr [eax]; 
0x000d5ed1: inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x0008c6f9: inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000a1e60: inc dword ptr [ebx - 0x3b7cef3c]; adc al, 0x5b; pop esi; ret; 
0x00039405: inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x00128433: inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x0008db02: inc dword ptr [ebx - 0x3b7cf7f2]; adc al, 0x5b; pop esi; ret; 
0x0010da50: inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0013acaf: inc dword ptr [ebx - 0x3f7aef3c]; je 0x13acc0; add esp, 8; pop ebx; ret; 
0x001602ef: inc dword ptr [ebx - 0x3f7aef3c]; je 0x160300; sub esp, 0xc; push esi; call eax; 
0x0016067f: inc dword ptr [ebx - 0x3f7aef3c]; je 0x160690; sub esp, 0xc; push esi; call eax; 
0x00042465: inc dword ptr [ebx - 0x3f7aef3c]; je 0x42478; add esp, 8; pop ebx; ret; 
0x00127e5b: inc dword ptr [ebx - 0x3f7aef3c]; jne 0x127e1c; add esp, 0xc; ret; 
0x000fafe3: inc dword ptr [ebx - 0x3f7aef3c]; jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x001555fe: inc dword ptr [ebx - 0x3f7aef3c]; sete al; add esp, 0xc; ret; 
0x000a8e24: inc dword ptr [ebx - 0x3f7af33c]; jne 0xa8e33; ret; 
0x0009088d: inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00087557: inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0003a32e: inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000ffefa: inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x0010beec: inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x000ffee7: inc dword ptr [ebx - 0x3fcef73c]; pop ebx; ret; 
0x0009e461: inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x000660c7: inc dword ptr [ebx - 0x41f0f714]; ret; 
0x00038281: inc dword ptr [ebx - 0x49f0ef3c]; lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00074d04: inc dword ptr [ebx - 0x4f343]; call dword ptr [eax]; 
0x000c996e: inc dword ptr [ebx - 0x5bf0002e]; ret 0xc102; 
0x0005790a: inc dword ptr [ebx - 0x5bf0ff26]; ret 0xc102; 
0x000fb1cf: inc dword ptr [ebx - 0x6772f714]; leave; pop edi; stc; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x0009b3ed: inc dword ptr [ebx - 0x69f00208]; ret; 
0x0012cf56: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012cf15: inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x000448db: inc dword ptr [ebx - 0x6bf0fe02]; ret 0x448b; 
0x000d7a96: inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x000a9b88: inc dword ptr [ebx - 0x6d72fe1d]; lodsb al, byte ptr [esi]; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x0013aed8: inc dword ptr [ebx - 0x6d72fe1d]; mov edx, ds; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x0013ae88: inc dword ptr [ebx - 0x6d72fe1d]; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x0013af28: inc dword ptr [ebx - 0x6d72fe1d]; pushfd; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x000fb3e5: inc dword ptr [ebx - 0x72acf714]; xor bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00173898: inc dword ptr [ebx - 0x72afef3c]; and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x0013939b: inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x0008e314: inc dword ptr [ebx - 0x72aff314]; and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00136998: inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x56]; 
0x001235f1: inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [esi + edx*2], -7; call dword ptr [eax + 0x6a]; 
0x0017400f: inc dword ptr [ebx - 0x72aff33c]; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x00131af4: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [eax], esp; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x00140edb: inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0018e081: inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00173811: inc dword ptr [ebx - 0x74aaf314]; inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x0012a9d6: inc dword ptr [ebx - 0x776ef3c]; pop ebx; pop esi; pop edi; ret; 
0x0017237f: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0017a9c2: inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0012ed6f: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x00167317: inc dword ptr [ebx - 0x77cef3c]; dec dword ptr [edi]; xchg esp, eax; ret 0xd1e9; 
0x00140bff: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [eax - 0x77]; ret; 
0x00187970: inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000fef2c: inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x000d5ec2: inc dword ptr [ebx - 0x78f0f608]; retf 0xfffc; dec dword ptr [ebx - 0x362f7b]; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x0011f585: inc dword ptr [ebx - 0x7972f314]; mov al, 0xa3; stc; call dword ptr [eax - 0x18]; 
0x000a1b71: inc dword ptr [ebx - 0x7972f33c]; fadd qword ptr [eax - 0x1a]; call dword ptr [eax + 0x57]; 
0x000a1b05: inc dword ptr [ebx - 0x7972f33c]; in al, dx; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x000a1b3b: inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a1b4d: inc dword ptr [ebx - 0x7972f33c]; pushfd; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x00124ab0: inc dword ptr [ebx - 0x7972f714]; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x00069a43: inc dword ptr [ebx - 0x7a72f314]; mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x00149ceb: inc dword ptr [ebx - 0x7a72f714]; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x0013fe7f: inc dword ptr [ebx - 0x7a72fb14]; test eax, 0x6afff958; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x0007928a: inc dword ptr [ebx - 0x7af0ef08]; ret; 
0x000788d9: inc dword ptr [ebx - 0x7af0f408]; cld; add byte ptr [eax], al; add dh, dh; ret; 
0x000d7ee6: inc dword ptr [ebx - 0x7bf00008]; or eax, 0x31000009; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000d62de: inc dword ptr [ebx - 0x7bf0cfc8]; ret; 
0x0002c4bb: inc dword ptr [ebx - 0x7bf0f901]; nop; add byte ptr [eax], al; add byte ptr [ebx - 0x76dbdb84], cl; ret 0xfa29; 
0x0016c5a5: inc dword ptr [ebx - 0x7c72e73c]; dec esp; cmpsb byte ptr [esi], byte ptr es:[edi]; add byte ptr [eax], al; pop ebx; ret; 
0x00069e77: inc dword ptr [ebx - 0x7c72f314]; adc dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0011f48b: inc dword ptr [ebx - 0x7c72f314]; js 0x11f436; stc; call dword ptr [eax - 0x18]; 
0x0003a124: inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x000fde66: inc dword ptr [ebx - 0x7c72f714]; adc byte ptr [eax - 7], cl; call dword ptr [eax + 0x55]; 
0x000fdfee: inc dword ptr [ebx - 0x7c72f714]; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fdec2: inc dword ptr [ebx - 0x7c72f714]; inc ecx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000fdd45: inc dword ptr [ebx - 0x7c72f714]; sbb al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x000fe11a: inc dword ptr [ebx - 0x7c72f714]; xor al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x000959f3: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00097bae: inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0xac73; 
0x000fb284: inc dword ptr [ebx - 0x7f72f714]; or ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000fb2e1: inc dword ptr [ebx - 0x7f72f714]; or ecx, dword ptr [eax - 7]; call dword ptr [eax - 1]; 
0x0009236c: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00091cac: inc dword ptr [ebx - 0x9ce0320]; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0013edc6: inc dword ptr [ebx - 0xb8b0a08]; add esp, 8; pop ebx; ret; 
0x00185114: inc dword ptr [ebx - 0xc2ef3c]; add byte ptr [eax], al; add byte ptr [edi], cl; test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x0013cb19: inc dword ptr [ebx - 0xf76cb3c]; pop ebx; pop esi; ret; 
0x0007c82d: inc dword ptr [ebx - 0xf76df3c]; pop ebx; pop esi; pop edi; ret; 
0x0009d23d: inc dword ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret; 
0x000ea2c8: inc dword ptr [ebx - 0xf76ef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x0013b60c: inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013a187: inc dword ptr [ebx]; add byte ptr [eax], al; ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x001a7fe1: inc dword ptr [ebx]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x00041c7b: inc dword ptr [ebx]; add byte ptr [eax], al; xor eax, ebx; pop ebx; ret; 
0x001a599f: inc dword ptr [ecx + 0x34a04c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a58da: inc dword ptr [ecx + 0x34ac9c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a3fcf: inc dword ptr [ecx + 0x362d0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a3ec0: inc dword ptr [ecx + 0x363dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b8f1: inc dword ptr [ecx + 0x3e8eec3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019b6ed: inc dword ptr [ecx + 0x3e9f2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019abf8: inc dword ptr [ecx + 0x3f4e7c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019aaee: inc dword ptr [ecx + 0x3f5f1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a9e7: inc dword ptr [ecx + 0x3f6f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a8eb: inc dword ptr [ecx + 0x3f7f4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a6dd: inc dword ptr [ecx + 0x3f842c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019a938: inc dword ptr [ecx + 0x3f867c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00199bf8: inc dword ptr [ecx + 0x40327c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199aee: inc dword ptr [ecx + 0x40431c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001999e7: inc dword ptr [ecx + 0x40538c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001998de: inc dword ptr [ecx + 0x40641c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0019970d: inc dword ptr [ecx + 0x40652c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00199938: inc dword ptr [ecx + 0x406a7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001998ee: inc dword ptr [ecx + 0x40731c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198c18: inc dword ptr [ecx + 0x41147c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198b0e: inc dword ptr [ecx + 0x41251c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198a07: inc dword ptr [ecx + 0x41358c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001988fe: inc dword ptr [ecx + 0x41461c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001987eb: inc dword ptr [ecx + 0x414b4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198958: inc dword ptr [ecx + 0x414c7c3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019890e: inc dword ptr [ecx + 0x41551c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00198537: inc dword ptr [ecx + 0x415a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e9e: inc dword ptr [ecx + 0x41c41c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197e80: inc dword ptr [ecx + 0x41c5fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197de7: inc dword ptr [ecx + 0x41cf8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197d20: inc dword ptr [ecx + 0x41dbfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197c87: inc dword ptr [ecx + 0x41e58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197bc0: inc dword ptr [ecx + 0x41f1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197b27: inc dword ptr [ecx + 0x41fb8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197a60: inc dword ptr [ecx + 0x4207fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001979c7: inc dword ptr [ecx + 0x42118c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197900: inc dword ptr [ecx + 0x421dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197867: inc dword ptr [ecx + 0x42278c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001977a0: inc dword ptr [ecx + 0x4233fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197707: inc dword ptr [ecx + 0x423d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197640: inc dword ptr [ecx + 0x4249fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001975a7: inc dword ptr [ecx + 0x42538c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001974e0: inc dword ptr [ecx + 0x425ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197447: inc dword ptr [ecx + 0x42698c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197380: inc dword ptr [ecx + 0x4275fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001972e7: inc dword ptr [ecx + 0x427f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197220: inc dword ptr [ecx + 0x428bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197187: inc dword ptr [ecx + 0x42958c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001970c0: inc dword ptr [ecx + 0x42a1fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00197027: inc dword ptr [ecx + 0x42ab8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196f60: inc dword ptr [ecx + 0x42b7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196ec7: inc dword ptr [ecx + 0x42c18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196e00: inc dword ptr [ecx + 0x42cdfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196d67: inc dword ptr [ecx + 0x42d78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196ca0: inc dword ptr [ecx + 0x42e3fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196c07: inc dword ptr [ecx + 0x42ed8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196b40: inc dword ptr [ecx + 0x42f9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196aa7: inc dword ptr [ecx + 0x43038c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001969df: inc dword ptr [ecx + 0x431c0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001968da: inc dword ptr [ecx + 0x43205c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001967d4: inc dword ptr [ecx + 0x433cbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001966cb: inc dword ptr [ecx + 0x43414c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001963d7: inc dword ptr [ecx + 0x43488c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196715: inc dword ptr [ecx + 0x4354ac3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x00195d9e: inc dword ptr [ecx + 0x43ac1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195d80: inc dword ptr [ecx + 0x43adfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195ce7: inc dword ptr [ecx + 0x43b78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195c30: inc dword ptr [ecx + 0x43c2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195b97: inc dword ptr [ecx + 0x43cc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195ae0: inc dword ptr [ecx + 0x43d7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195a47: inc dword ptr [ecx + 0x43e18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195990: inc dword ptr [ecx + 0x43ecfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001958f7: inc dword ptr [ecx + 0x43f68c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195840: inc dword ptr [ecx + 0x4401fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001957a7: inc dword ptr [ecx + 0x440b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001956f0: inc dword ptr [ecx + 0x4416fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195657: inc dword ptr [ecx + 0x44208c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001955a0: inc dword ptr [ecx + 0x442bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195507: inc dword ptr [ecx + 0x44358c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195450: inc dword ptr [ecx + 0x4440fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001953b7: inc dword ptr [ecx + 0x444a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195300: inc dword ptr [ecx + 0x4455fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195267: inc dword ptr [ecx + 0x445f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001951b0: inc dword ptr [ecx + 0x446afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195117: inc dword ptr [ecx + 0x44748c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195060: inc dword ptr [ecx + 0x447ffc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194fc7: inc dword ptr [ecx + 0x44898c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194f10: inc dword ptr [ecx + 0x4494fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194e77: inc dword ptr [ecx + 0x449e8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194dc0: inc dword ptr [ecx + 0x44a9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194d27: inc dword ptr [ecx + 0x44b38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194c70: inc dword ptr [ecx + 0x44befc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194bd7: inc dword ptr [ecx + 0x44c88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194b20: inc dword ptr [ecx + 0x44d3fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194a87: inc dword ptr [ecx + 0x44dd8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001949cf: inc dword ptr [ecx + 0x44f50c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001948ca: inc dword ptr [ecx + 0x44f95c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001947c4: inc dword ptr [ecx + 0x4515bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001946be: inc dword ptr [ecx + 0x451a1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194437: inc dword ptr [ecx + 0x451a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194723: inc dword ptr [ecx + 0x452bcc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001946d4: inc dword ptr [ecx + 0x4534bc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193d9e: inc dword ptr [ecx + 0x45841c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193d80: inc dword ptr [ecx + 0x4585fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193ce7: inc dword ptr [ecx + 0x458f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193c30: inc dword ptr [ecx + 0x459afc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193b97: inc dword ptr [ecx + 0x45a48c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193ae0: inc dword ptr [ecx + 0x45affc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193a47: inc dword ptr [ecx + 0x45b98c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193990: inc dword ptr [ecx + 0x45c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001938f7: inc dword ptr [ecx + 0x45ce8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193840: inc dword ptr [ecx + 0x45d9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001937a7: inc dword ptr [ecx + 0x45e38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001936f0: inc dword ptr [ecx + 0x45eefc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193657: inc dword ptr [ecx + 0x45f88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001935a0: inc dword ptr [ecx + 0x4603fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193507: inc dword ptr [ecx + 0x460d8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193450: inc dword ptr [ecx + 0x4618fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001933b7: inc dword ptr [ecx + 0x46228c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193300: inc dword ptr [ecx + 0x462dfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193267: inc dword ptr [ecx + 0x46378c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001931b0: inc dword ptr [ecx + 0x4642fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193117: inc dword ptr [ecx + 0x464c8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00193060: inc dword ptr [ecx + 0x4657fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192fc7: inc dword ptr [ecx + 0x46618c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192f10: inc dword ptr [ecx + 0x466cfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192e77: inc dword ptr [ecx + 0x46768c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192dc0: inc dword ptr [ecx + 0x4681fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192d27: inc dword ptr [ecx + 0x468b8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192c70: inc dword ptr [ecx + 0x4696fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192bd7: inc dword ptr [ecx + 0x46a08c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192b20: inc dword ptr [ecx + 0x46abfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192a87: inc dword ptr [ecx + 0x46b58c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001929cf: inc dword ptr [ecx + 0x46cd0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001928ca: inc dword ptr [ecx + 0x46d15c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001927c4: inc dword ptr [ecx + 0x46edbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001926be: inc dword ptr [ecx + 0x46f21c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192723: inc dword ptr [ecx + 0x4703cc3]; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x001926d4: inc dword ptr [ecx + 0x470cbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001914dc: inc dword ptr [ecx + 0x47f03c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0019142c: inc dword ptr [ecx + 0x47fb3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00191344: inc dword ptr [ecx + 0x4801bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00190f82: inc dword ptr [ecx + 0x481ddc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00190ec6: inc dword ptr [ecx + 0x48299c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00190e6a: inc dword ptr [ecx + 0x482f5c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00190dac: inc dword ptr [ecx + 0x483b3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00190cc4: inc dword ptr [ecx + 0x4841bc3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x000fb652: inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0018df03: inc dword ptr [ecx + 0xaef10c6]; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00188bfb: inc dword ptr [ecx + 0xb4218c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x000fb693: inc dword ptr [ecx - 0x2ff42f06]; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x0018baf2: inc dword ptr [ecx]; add byte ptr [eax], al; add cl, ch; sub bh, 0xff; dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x001a7fd1: inc dword ptr [ecx]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000692af: inc dword ptr [ecx]; and byte ptr [eax], al; add cl, ch; inc edi; fcos; call dword ptr [edx - 0x73]; 
0x000c20b6: inc dword ptr [ecx]; clc; pop edi; ret; 
0x000c20f3: inc dword ptr [ecx]; clc; xor ch, ch; add eax, ecx; pop edi; ret; 
0x0012a3ae: inc dword ptr [ecx]; fcom dword ptr [eax - 0x73]; xchg byte ptr [edi], bl; aas; stc; call dword ptr [eax + 0x6a]; 
0x00074b35: inc dword ptr [ecx]; fdivr dword ptr [ecx]; ret 0x830f; 
0x000a6f28: inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000606e8: inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000ebb25: inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000384a5: inc dword ptr [ecx]; fmul dword ptr [ebx - 0x1cb63]; call dword ptr [esi + 0x50]; 
0x0003229d: inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x000e0194: inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00108e98: inc dword ptr [ecx]; inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0010cee0: inc dword ptr [ecx]; ja 0x10ceed; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0012d2b6: inc dword ptr [ecx]; je 0x12d2f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012e376: inc dword ptr [ecx]; je 0x12e3b0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x000371d2: inc dword ptr [ecx]; lds ebp, ptr [ecx]; ret; 
0x0006c389: inc dword ptr [ecx]; ret 0x389; 
0x0017dc85: inc dword ptr [ecx]; ret 0x458b; 
0x0005c4ac: inc dword ptr [ecx]; ret 0x5589; 
0x00069a7b: inc dword ptr [ecx]; ret 0x9589; 
0x00057bdb: inc dword ptr [ecx]; ret 0xbe0f; 
0x00038c67: inc dword ptr [ecx]; ret 0xd089; 
0x000569dd: inc dword ptr [ecx]; ret 0xd389; 
0x0006876f: inc dword ptr [ecx]; ret 0xd801; 
0x00069e0b: inc dword ptr [ecx]; ret 0xf001; 
0x000684e1: inc dword ptr [ecx]; ret 0xf801; 
0x00031629: inc dword ptr [ecx]; ret; 
0x000f36b9: inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x000386b9: inc dword ptr [ecx]; ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x00071c91: inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000c3867: inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x00195063: inc dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a7ff1: inc dword ptr [edi]; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000ffb20: inc dword ptr ss:[ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0017a759: inc eax; adc al, 4; mov eax, 1; ret; 
0x0005ae6b: inc eax; adc byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x4508910], cl; xor eax, eax; ret; 
0x001a941c: inc eax; adc byte ptr [ebp - 0x74f18a2e], al; inc esp; and al, 0xc; pop edi; ret; 
0x00083274: inc eax; adc byte ptr [ebx + 0x5e5b04c4], al; jmp eax; 
0x0008e293: inc eax; adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; jmp eax; 
0x00188c84: inc eax; adc byte ptr [ecx + 0x39042444], cl; ret 0x9174; 
0x0008851c: inc eax; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x001a91ed: inc eax; adc byte ptr [edi], cl; test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x0009138f: inc eax; add al, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x3fcef3b0], cl; pop ebx; ret; 
0x001957ab: inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001242ef: inc eax; add al, 0x5b; ret; 
0x001a952a: inc eax; add al, 0x5f; ret; 
0x00179331: inc eax; add al, 0x83; les ebx, ptr [eax]; pop ebx; jmp eax; 
0x00026cf1: inc eax; add al, 0x85; ror byte ptr [edi], 0x44; ret; 
0x00150401: inc eax; add al, 0x85; sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x00172c69: inc eax; add al, 0x8b; pop edx; and al, 0x83; ret 0x8b18; 
0x0005183c: inc eax; add al, byte ptr [eax]; add byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x000f0f01: inc eax; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000fb62c: inc eax; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0x8dc3; 
0x000ac7d1: inc eax; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000347a8: inc eax; add byte ptr [eax], al; ret; 
0x000659ab: inc eax; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x00035900: inc eax; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x000c1ff5: inc eax; add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x000c3424: inc eax; add esp, 0x100; sub eax, edx; ret; 
0x00148523: inc eax; add esp, 0x118; pop ebx; ret; 
0x000dc238: inc eax; add esp, 0x28; pop ebx; ret; 
0x001154ea: inc eax; add esp, 0x74; pop ebx; pop esi; ret; 
0x000817a1: inc eax; and al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000348e4: inc eax; and al, 0x8b; add al, 0x90; ret; 
0x00034995: inc eax; and al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000df287: inc eax; and byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp + 0x3ecc8a], cl; add byte ptr [ebp - 0x1620a36e], cl; call dword ptr [ecx + 0x52]; 
0x0012433a: inc eax; and byte ptr [ebp - 0x3dbbf040], al; ret; 
0x00056550: inc eax; and byte ptr [ebx - 0x7a76f314], al; ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x00024eab: inc eax; call dword ptr [esi]; 
0x00024e41: inc eax; call ecx; 
0x00024dea: inc eax; call esi; 
0x00193e1b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e1b: inc eax; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x0007fb49: inc eax; cli; jmp dword ptr [esi - 0x70]; 
0x00134940: inc eax; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x00124311: inc eax; cmp al, 0x5b; ret; 
0x00034b4d: inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x000c364f: inc eax; cmp cl, 0; je 0xc3656; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000e7f58: inc eax; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0003fccb: inc eax; das; stc; call dword ptr [ebx + 0x50]; 
0x000fe376: inc eax; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0013238e: inc eax; dec esp; call 0x132250; add esp, 4; ret; 
0x00187199: inc eax; dec esp; ret; 
0x000b43fc: inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000ac77c: inc eax; imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x0008c6f8: inc eax; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x000c3423: inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000c3422: inc eax; inc eax; inc eax; add esp, 0x100; sub eax, edx; ret; 
0x000425bf: inc eax; inc eax; ret; 
0x000f0edc: inc eax; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000a9c77: inc eax; ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca7: inc eax; ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x00126411: inc eax; je 0x12639d; push esi; add al, 0x89; ret 0xeac1; 
0x00126967: inc eax; je 0x1268f3; push esi; add al, 0x89; ret 0xeac1; 
0x001269dc: inc eax; je 0x126968; push esi; add al, 0x89; ret 0xeac1; 
0x00126b36: inc eax; je 0x126ac2; push esi; add al, 0x89; ret 0xeac1; 
0x00126c22: inc eax; je 0x126bae; push esi; add al, 0x89; ret 0xeac1; 
0x00126c97: inc eax; je 0x126c23; push esi; add al, 0x89; ret 0xeac1; 
0x00126e42: inc eax; je 0x126dce; push esi; add al, 0x89; ret 0xeac1; 
0x00127237: inc eax; je 0x1271c3; push esi; add al, 0x89; ret 0xeac1; 
0x00153af2: inc eax; jl 0x153af5; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x000793a5: inc eax; jle 0x793a1; call dword ptr [eax - 0x18]; 
0x00066d8c: inc eax; jmp dword ptr [eax]; 
0x00193fae: inc eax; jmp dword ptr [esi - 0x77]; 
0x0019cd6d: inc eax; jne 0x19cde0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a758c: inc eax; jne 0x1a75f4; add eax, 7; ret; 
0x001a75cc: inc eax; jne 0x1a7614; add eax, 0xf; ret; 
0x001a78a5: inc eax; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a78f8: inc eax; jne 0x1a79e0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a7819: inc eax; jne 0x1a79f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a7776: inc eax; jne 0x1a79f0; lea eax, [edi + 7]; pop edi; ret; 
0x001a8261: inc eax; jne 0x1a8390; lea eax, [edi + 7]; pop edi; ret; 
0x001a82b4: inc eax; jne 0x1a83f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a88d9: inc eax; jne 0x1a8980; test al, 0x20; jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a8f31: inc eax; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001a8f84: inc eax; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001a9364: inc eax; jne 0x1a9719; add eax, 7; pop edi; ret; 
0x001a93b4: inc eax; jne 0x1a9741; add eax, 0xf; pop edi; ret; 
0x000940a3: inc eax; jne 0x938cc; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009faf5: inc eax; jne 0x9fb20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0010c0cd: inc eax; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e81: inc eax; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00168bb6: inc eax; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x001622f1: inc eax; mov dword ptr [0x8d500000], eax; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x00156579: inc eax; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00070fda: inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00090705: inc eax; mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x000c1625: inc eax; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000e7bfd: inc eax; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012061d: inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0014c939: inc eax; or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0013988e: inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00179a25: inc eax; or al, 0x5e; pop edi; jmp eax; 
0x001a9586: inc eax; or al, 0x5f; ret; 
0x00083428: inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0009dab8: inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x001377e9: inc eax; or al, 0x89; pop edi; or al, 0x89; ret 0x4589; 
0x00121aa9: inc eax; or byte ptr [0x100f], ah; ret; 
0x00148432: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008c3ca: inc eax; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0005ab3d: inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x00090d3d: inc eax; or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x001398d4: inc eax; or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0014fa75: inc eax; or byte ptr [ecx], al; je 0x14fa9d; add esp, 0xc; ret; 
0x00179a5e: inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x00090ddd: inc eax; or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x000b9c5c: inc eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00187239: inc eax; pop eax; ret; 
0x000c30cc: inc eax; pop ebp; pop ebx; pop esi; pop edi; ret; 
0x0003bef3: inc eax; pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x0003be81: inc eax; pop ebx; pop esi; pop edi; ret; 
0x001212f3: inc eax; pop ebx; pop esi; ret; 
0x000bbd83: inc eax; pop edi; pop esi; pop ebx; ret; 
0x000c2917: inc eax; pop edi; pop esi; ret; 
0x000aaa4c: inc eax; pop edi; ret; 
0x000c74b5: inc eax; pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x001a9495: inc eax; pop es; pop edi; ret; 
0x001871c9: inc eax; pop esp; ret; 
0x001a95a6: inc eax; push cs; pop edi; ret; 
0x000c4562: inc eax; push dword ptr [eax]; call edi; 
0x001348cc: inc eax; push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00024ea7: inc eax; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x00024e3d: inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024de6: inc eax; push dword ptr [esp + 0x40]; call esi; 
0x000c3ad1: inc eax; push eax; push dword ptr [edi]; call ebx; 
0x00083776: inc eax; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x001871b9: inc eax; push eax; ret; 
0x000c7432: inc eax; push ebp; call esi; 
0x0016c8f9: inc eax; push ebp; push eax; call dword ptr [ecx + 8]; 
0x001057f8: inc eax; push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x001a9546: inc eax; push es; pop edi; ret; 
0x00032e71: inc eax; push esp; ret; 
0x0004ab5e: inc eax; ret 0xfff9; 
0x00034305: inc eax; ret; 
0x0008f1a5: inc eax; sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x001398bc: inc eax; sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x0008e845: inc eax; sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x00174a19: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0016c547: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016d935: inc eax; sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000e91b5: inc eax; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001498ad: inc eax; sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x001363b3: inc eax; sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x0013743b: inc eax; sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x00148f9f: inc eax; scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x0003bca9: inc eax; shr eax, 0x1f; ret; 
0x001469a2: inc eax; stc; call dword ptr [eax + 0x56]; 
0x00094bf8: inc eax; stc; call dword ptr [eax + 0x6a]; 
0x00093fbb: inc eax; stc; call dword ptr [eax - 0x18]; 
0x00095b70: inc eax; stc; call dword ptr [eax - 0x73]; 
0x000881c8: inc eax; stc; jmp dword ptr [esi - 0x70]; 
0x000bb162: inc eax; std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001674eb: inc eax; std; jmp dword ptr [esi - 0x70]; 
0x00172175: inc eax; sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x000348a4: inc eax; sub al, 0x8b; add al, 0x90; ret; 
0x00034965: inc eax; sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x000c3655: inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x00088d3f: inc eax; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000c276a: inc eax; test ecx, 0xff0000; je 0xc2774; inc eax; pop edi; ret; 
0x00040c92: inc eax; xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00066d89: inc eax; xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x00034b0d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034aed: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034acd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034a4d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034a8d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x000349ed: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034a6d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034a2d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0003492d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00034a0d: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00034aad: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x000349cd: inc eax; xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x00178265: inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000fd445: inc eax; xor byte ptr [ecx], bh; ret; 
0x001544b9: inc eax; xor dword ptr [ebx], eax; add byte ptr [ecx + 0xe8957c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00091173: inc eax; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0009844a: inc eax; xor eax, eax; ret; 
0x000e9e44: inc ebp; aam 0x56; call eax; 
0x000afcd1: inc ebp; aam 0x83; ret 0x3901; 
0x000af702: inc ebp; aam 0x83; ret 0xf01; 
0x000278c6: inc ebp; aam 0x89; ret; 
0x000d3742: inc ebp; aam 1; ret 0x1689; 
0x000d3508: inc ebp; aam 1; ret 0x5389; 
0x00133fbd: inc ebp; adc byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000f1df4: inc ebp; adc byte ptr [ecx - 0x46b73], cl; dec dword ptr [ecx - 0x4737b]; jmp dword ptr [ebp - 0x75]; 
0x0012a01f: inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00032ea5: inc ebp; adc byte ptr [ecx - 0xe37b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0019526b: inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00079a77: inc ebp; add al, 0x29; fidiv word ptr [ebx + eax*2 - 0x75]; pop ebp; or byte ptr [ecx], bh; ret; 
0x00100c21: inc ebp; add al, 0x83; ret; 
0x000956ea: inc ebp; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000eb7ad: inc ebp; add al, byte ptr [eax - 0x6bf0a206]; ret 0xb60f; 
0x000eb83c: inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00085f89: inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x000dca2e: inc ebp; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebx; ret 0xe883; 
0x000e78f5: inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x00123b7d: inc ebp; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x00123ef6: inc ebp; add byte ptr [eax], al; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000ec637: inc ebp; add byte ptr [ebp + 0x4f850fc9], al; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x00093bd9: inc ebp; add byte ptr [ebx - 0x71f0fe08], al; ret; 
0x000a7c36: inc ebp; add byte ptr [ecx + 0x5f5e5bc8], cl; pop ebp; ret; 
0x001a75ce: inc ebp; add eax, 0xf; ret; 
0x00127c6b: inc ebp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001953b4: inc ebp; and bh, bh; inc dword ptr [ecx + 0x444a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00145f95: inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001442c7: inc ebp; call 0x1078b6; jmp dword ptr [esi - 0x70]; 
0x0003a207: inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0007f4b9: inc ebp; cli; jmp dword ptr [esi - 0x70]; 
0x000a9c11: inc ebp; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00174f92: inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0007de31: inc ebp; cmp byte ptr [ecx], bh; ret; 
0x00059cc7: inc ebp; cmpsb byte ptr [esi], byte ptr es:[edi]; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00127980: inc ebp; fadd dword ptr [ebx - 0x2776e73c]; pop ebx; ret; 
0x00142884: inc ebp; fadd qword ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x837b], cl; call dword ptr [eax + 0x6a]; 
0x00186cbd: inc ebp; fadd st(7), st(0); inc esp; ret; 
0x00027948: inc ebp; fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x001367c7: inc ebp; fucomi st(7); dec dword ptr [ebx - 0x72e3dba4]; cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x00141e4d: inc ebp; in al, 0x8d; add eax, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001248ad: inc ebp; in al, 0x8d; xchg ah, al; dec edx; stc; call dword ptr [eax - 0x73]; 
0x00131495: inc ebp; in al, 0x8d; xchg dword ptr [ecx], eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x0009b3ec: inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a20c5: inc ebp; inc edx; stc; call dword ptr [eax - 0x18]; 
0x00155785: inc ebp; int1; call dword ptr [eax - 0x73]; 
0x00093a97: inc ebp; jmp dword ptr [ecx]; 
0x000af9ef: inc ebp; les eax, ptr [ecx]; ret; 
0x00169b4e: inc ebp; les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; js 0x169bbf; stc; call dword ptr [eax + 0x57]; 
0x0003571f: inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x0009e8a7: inc ebp; mov ah, 0x89; ret 0x458b; 
0x00035903: inc ebp; mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x000278bc: inc ebp; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000356d1: inc ebp; mov al, 0x39; ret 0x820f; 
0x00093203: inc ebp; mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [eax - 0x7c], 0xf9; call dword ptr [eax - 0x18]; 
0x000d33a8: inc ebp; mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0005dd22: inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x0009a7da: inc ebp; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00082b2e: inc ebp; mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x00135606: inc ebp; mov esp, 0x558e808d; stc; call dword ptr [eax - 1]; 
0x001355c6: inc ebp; mov esp, 0x55ad808d; stc; call dword ptr [eax - 1]; 
0x000eb244: inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000d34aa: inc ebp; mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x00139422: inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x00183d66: inc ebp; movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x0005adba: inc ebp; or al, 0; add esp, 0x1c; ret; 
0x0014df1a: inc ebp; or al, 0x39; ret; 
0x0013aaa9: inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000f1254: inc ebp; or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x001177d1: inc ebp; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000eb725: inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005bb7a: inc ebp; or byte ptr [ecx], bh; ret; 
0x0018a785: inc ebp; or eax, 0x16850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f9375: inc ebp; or eax, 0x26850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000f5a55: inc ebp; or eax, 0x6850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00062a3b: inc ebp; or eax, 0x8901e683; ret; 
0x00095cc7: inc ebp; out 0xf9, al; dec dword ptr [ebp - 0x692737f]; call dword ptr [eax - 0x73]; 
0x00164667: inc ebp; outsd dx, dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x001a49aa: inc ebp; pop ebx; ret; 
0x0009daf4: inc ebp; ret 0x2ec3; 
0x000295c6: inc ebp; ret 0x4489; 
0x000e8228: inc ebp; ret 0x548b; 
0x00043374: inc ebp; ret 0x66c3; 
0x0008bd72: inc ebp; ret 0x689; 
0x0008113c: inc ebp; ret 0x8966; 
0x0009119a: inc ebp; ret 0x8dc3; 
0x00065909: inc ebp; ret 0xc189; 
0x000a9313: inc ebp; ret 0xc35b; 
0x000a8c7c: inc ebp; ret 0xc483; 
0x0012d6e4: inc ebp; ret 0xd231; 
0x0007cf8c: inc ebp; ret 0xec83; 
0x000408a4: inc ebp; ret; 
0x00169b54: inc ebp; rol byte ptr [ebx - 0x7f72f714], 1; js 0x169bbf; stc; call dword ptr [eax + 0x57]; 
0x000259f7: inc ebp; ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00042dc6: inc ebp; ror byte ptr [edi], 1; inc ebp; ret; 
0x00169e25: inc ebp; ror byte ptr [edi], 1; mov bh, 0x80; mov dl, 0xbb; stc; jmp dword ptr [esi - 0x77]; 
0x0010ace7: inc ebp; sbb al, 0x89; ret 0xeac0; 
0x00145f8c: inc ebp; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00092da5: inc ebp; sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0013439b: inc ebp; sbb byte ptr [ecx + 0x29c729da], cl; ret 0x7c01; 
0x0017bde2: inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000af6e0: inc ebp; shr cl, 1; ret 0xffeb; 
0x000dcbd7: inc ebp; stc; call dword ptr [eax + 0x53]; 
0x000dd346: inc ebp; stc; call dword ptr [eax + 0x56]; 
0x000c4d03: inc ebp; stc; call dword ptr [eax - 0x18]; 
0x0010a97c: inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0011432b: inc ebp; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0009859a: inc ebp; test al, 1; je 0x985e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0017dc7e: inc ebp; test byte ptr [ebx - 0x936b], cl; inc dword ptr [ecx]; ret 0x458b; 
0x0017ad47: inc ebp; test dl, ch; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0010a991: inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x000f0457: inc ebp; xor ebp, edi; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x000859a6: inc ebx; adc al, 0x29; ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x001347c8: inc ebx; adc al, 0x31; rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x0016de24: inc ebx; adc al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000871f6: inc ebx; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00097b93: inc ebx; adc al, 0x83; ret; 
0x00089c2a: inc ebx; adc al, 0x8b; push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x0016c794: inc ebx; adc bh, bh; je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016efc0: inc ebx; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0016ef4a: inc ebx; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003a2bb: inc ebx; adc byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x0005b655: inc ebx; adc byte ptr [ecx + 0xf5e5bf0], cl; mov dh, 0xc0; pop edi; ret; 
0x0016c88d: inc ebx; adc byte ptr [edx], ch; push esi; call dword ptr [eax + 0x14]; 
0x0019550b: inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00185108: inc ebx; add al, 0x2b; inc ebx; add al, 0x83; ret; 
0x0010c8d8: inc ebx; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0015443f: inc ebx; add al, 0x50; call edi; 
0x0016cf8f: inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00172e54: inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0016d4a7: inc ebx; add al, 0x5a; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x000a75dc: inc ebx; add al, 0x5b; pop esi; pop edi; ret; 
0x0016d471: inc ebx; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x00035482: inc ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d0ae: inc ebx; add al, 0x83; les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x00031252: inc ebx; add al, 0x83; ret; 
0x00108aea: inc ebx; add al, 0x89; ret 0xe283; 
0x0018413d: inc ebx; add al, 0x89; ret; 
0x00150974: inc ebx; add al, 0x8d; xchg dword ptr [edx + edi - 0xf], ecx; call dword ptr [ebx + 0x50]; 
0x0016edee: inc ebx; add al, 0xff; je 0x16ee17; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ee3c: inc ebx; add al, 0xff; je 0x16ee65; sbb al, 0x53; call dword ptr [eax]; 
0x000a3fa8: inc ebx; add al, byte ptr [eax]; add byte ptr [ebp - 0x7cffd98c], cl; ret 0x108; 
0x0013f692: inc ebx; add al, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0014a86f: inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x0008942e: inc ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x000292a8: inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0007c77d: inc ebx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00148c48: inc ebx; add esp, 0x1c; ret; 
0x001760a3: inc ebx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0008f4ec: inc ebx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0002706e: inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg byte ptr [eax + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x00138eba: inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x000a74fe: inc ebx; and byte ptr [esi + ecx - 0x7d], dh; in al, dx; or byte ptr [ecx - 1], dl; jae 0xa752d; call eax; 
0x0010b8eb: inc ebx; clc; jmp dword ptr [esi - 0x70]; 
0x0007f7d9: inc ebx; cli; jmp dword ptr [esi - 0x70]; 
0x0013686d: inc ebx; dec dword ptr [ebx - 0x3b7cd7b9]; adc byte ptr [ebx - 0x72affb14], al; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x56]; 
0x00085c28: inc ebx; in al, 0xf9; jmp dword ptr [esi - 0x70]; 
0x00128af1: inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000d8bc9: inc ebx; mov bh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000f0ede: inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000f0f8e: inc ebx; mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x0012ec2e: inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0005b9c9: inc ebx; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0012ea9e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012eabe: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0010bf6e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf8e: inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012e75e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eade: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x00129dbe: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00114bfe: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012e49e: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012bede: inc ebx; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0016c886: inc ebx; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x00178361: inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0008ff8e: inc ebx; or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0014c93c: inc ebx; or al, 0x75; ret; 
0x0008e7c3: inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00183ee1: inc ebx; or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0008ebca: inc ebx; or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0016deff: inc ebx; or al, 0x83; ret; 
0x0009d111: inc ebx; or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x00089bcf: inc ebx; or al, 0x89; ret 0x532b; 
0x00095a27: inc ebx; or al, 0x89; ret 0xe281; 
0x001775e4: inc ebx; or bh, bh; je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x001777e3: inc ebx; or bh, bh; je 0x17780c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0008ec1c: inc ebx; or bh, bh; je 0x8ec45; xor byte ptr [edx + 0x51], dl; call eax; 
0x00095a66: inc ebx; or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x0014636b: inc ebx; or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0017833b: inc ebx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x000984bd: inc ebx; or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x984cd; call dword ptr [ebx]; 
0x0008e6e9: inc ebx; or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x000871f0: inc ebx; or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008eed3: inc ebx; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00071dcd: inc ebx; or byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x000864b6: inc ebx; or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008e701: inc ebx; or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x0010d824: inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x001713bc: inc ebx; or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x0014ff5b: inc ebx; out dx, al; dec dword ptr [ebp - 0x64ef779]; call dword ptr [eax - 0x73]; 
0x0010e4ce: inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x00158945: inc ebx; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00188d74: inc ebx; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x001744a9: inc ebx; push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001744c5: inc ebx; push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00042516: inc ebx; push es; pop ebx; ret; 
0x0008d530: inc ebx; ret 0x4489; 
0x000eb0c6: inc ebx; ret 0xc383; 
0x0014526b: inc ebx; ret 0xc589; 
0x0003761a: inc ebx; ret 0xcb29; 
0x0004d4f4: inc ebx; ret 0xd029; 
0x000dca35: inc ebx; ret 0xe883; 
0x0003a766: inc ebx; ret 0xec83; 
0x001849e5: inc ebx; ret 0xfa83; 
0x000379c6: inc ebx; ret; 
0x0013e6d9: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013e585: inc ebx; ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x00142c11: inc ebx; sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x000aff38: inc ebx; sbb al, 0x83; ret; 
0x0003c655: inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0008b86e: inc ebx; sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00098e5a: inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0004a302: inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x001324f6: inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a8f7e: inc ebx; shr byte ptr [ecx], 1; ret 0xf001; 
0x000a4613: inc ebx; stc; call dword ptr [eax - 0x18]; 
0x000a75a5: inc ebx; sub byte ptr [ecx], al; jne 0xa7580; sub esp, 0xc; push eax; call edx; 
0x00150849: inc ebx; sub ebp, ebp; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0002831e: inc ebx; xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00081ccf: inc ebx; xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008f5cc: inc ebx; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012c93b: inc ebx; xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0015b551: inc ecx; adc al, 0x28; add byte ptr [eax], al; add byte ptr [ebx - 0x16e7dbb4], cl; ret 0xfffc; 
0x00090372: inc ecx; adc al, 0x39; ret 0x1074; 
0x00031d3c: inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00087506: inc ecx; adc byte ptr [ebx], dl; push ecx; adc al, 0xeb; ret; 
0x00087996: inc ecx; adc byte ptr [ecx + 0x4538903], cl; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0009d372: inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x0008333f: inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x00055b48: inc ecx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001956f4: inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b6246: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6386: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000b1e76: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000b1fa6: inc ecx; add al, 0x66; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0003009c: inc ecx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0005adae: inc ecx; add byte ptr [eax - 0x73], dl; cmp byte ptr [ebp + 0x30], 0xf9; call dword ptr [eax - 0x18]; 
0x000f0ee1: inc ecx; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00062117: inc ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fb710: inc ecx; add byte ptr [esi + ebp + 0x31], dh; rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x000b1f77: inc ecx; add cl, byte ptr [eax - 0x2f76fdbe]; ret; 
0x000c05ba: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop ebx; pop edi; ret; 
0x000b1e57: inc ecx; add cl, byte ptr [eax - 0x776fdbe]; pop edi; ret; 
0x000fbc39: inc ecx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000bab6b: inc ecx; add eax, 0x42130f66; add eax, 0x5f0c428d; ret; 
0x000c06de: inc ecx; add eax, 0x42130f66; add eax, 0x5f5bf889; ret; 
0x000b6265: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; pop edi; ret; 
0x000b6395: inc ecx; add ecx, dword ptr [ecx + 0x428d0342]; push es; ret; 
0x000b1fb5: inc ecx; add ecx, dword ptr [ecx - 0x2f76fcbe]; ret; 
0x000c0628: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop ebx; pop edi; ret; 
0x000b1e85: inc ecx; add ecx, dword ptr [ecx - 0x776fcbe]; pop edi; ret; 
0x000a8f75: inc ecx; add esi, eax; add al, 0xe; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x00031d31: inc ecx; and byte ptr [ecx], bh; ret 0x4c0f; 
0x0007f991: inc ecx; cli; jmp dword ptr [esi - 0x70]; 
0x000a3be6: inc ecx; cmp byte ptr [ecx + 0x39102444], cl; ret 0x840f; 
0x0003173b: inc ecx; dec dword ptr [ecx - 0x1eb6b]; dec dword ptr [ecx - 0x1d77b]; jmp dword ptr [ecx]; 
0x000fdec8: inc ecx; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0012dc38: inc ecx; dec ebp; push esi; push ebx; call dword ptr gs:[0x10]; 
0x000c335e: inc ecx; inc edx; test al, al; jne 0xc3358; xor eax, eax; ret; 
0x000abca1: inc ecx; jbe 0xabcb4; cmove eax, edx; ret; 
0x000acc11: inc ecx; jbe 0xacc24; cmove eax, edx; ret; 
0x000acde1: inc ecx; jbe 0xacdf4; cmove eax, edx; ret; 
0x00149a69: inc ecx; je 0x149a57; or ecx, dword ptr [ebp - 0x57fff8a]; or dword ptr [ebx + ecx - 0x7d], esi; ret; 
0x000a1d7e: inc ecx; jmp dword ptr [ecx]; 
0x000b1609: inc ecx; jmp dword ptr [esi + 0xf]; 
0x000a9cf1: inc ecx; jne 0xa9cf6; lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000a9d31: inc ecx; jne 0xa9d36; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000aa8a1: inc ecx; jne 0xaa8a6; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000abc71: inc ecx; jne 0xabc76; lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000acae1: inc ecx; jne 0xacae6; lea edx, [edx - 0x17b744]; cmove eax, edx; ret; 
0x000acb61: inc ecx; jne 0xacb66; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x000c6341: inc ecx; jne 0xc6346; cmove eax, edx; ret; 
0x000acbe1: inc ecx; jnp 0xacbe8; cmove eax, edx; ret; 
0x000c54d1: inc ecx; jnp 0xc54d8; cmove eax, edx; ret; 
0x000c5531: inc ecx; jnp 0xc5538; cmove eax, edx; ret; 
0x000c6511: inc ecx; jnp 0xc6518; cmove eax, edx; ret; 
0x000c7211: inc ecx; jnp 0xc7218; cmove eax, edx; ret; 
0x00149ab2: inc ecx; js 0x149aa0; ret 0x8d2e; 
0x00092b6b: inc ecx; mov cl, byte ptr [edx]; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x0009859e: inc ecx; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00087139: inc ecx; or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x0017a3be: inc ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x000b960b: inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000c065c: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b94ab: inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000c69d6: inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000b966b: inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000c06bc: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b950b: inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00080e22: inc ecx; or byte ptr [ecx], ch; ret; 
0x000c69dc: inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000baa3a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2b: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b941a: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b96eb: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b63b5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd5: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b6415: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2035: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b63d6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1ff6: inc ecx; or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00193da1: inc ecx; pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00127e2b: inc ecx; pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000bab2b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000bac8b: inc ecx; pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b94eb: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b964b: inc ecx; pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000babab: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b956b: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96cb: inc ecx; pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b63f5: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2015: inc ecx; pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b3ee7: inc ecx; pop es; pop ebx; ret; 
0x001a8991: inc ecx; pop es; ret; 
0x00162f92: inc ecx; popal; stc; call dword ptr [eax + 0x6a]; 
0x0010e4cb: inc ecx; push -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x001a89e1: inc ecx; push cs; ret; 
0x001998e1: inc ecx; push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bab8b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000baceb: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b954b: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ab: inc ecx; push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b3ed7: inc ecx; push es; pop ebx; ret; 
0x001a8981: inc ecx; push es; ret; 
0x0016740b: inc ecx; retf 0xfffe; add esp, 0x1c; ret; 
0x00035906: inc ecx; sbb al, 0x89; ret 0x25; 
0x00197ea1: inc ecx; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00031d39: inc ecx; sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x0015ac34: inc ecx; stc; call dword ptr [eax + 0x53]; 
0x0009d9e1: inc ecx; stc; call dword ptr [eax - 0x18]; 
0x0009d9da: inc ecx; stc; call dword ptr [eax - 0x73]; 
0x0016eb3c: inc ecx; stc; call dword ptr [edx + 0x6a]; 
0x0002f845: inc ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00078a64: inc ecx; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x00097070: inc edi; adc al, 0x29; ret; 
0x00090728: inc edi; adc al, 0x39; ret 0x1074; 
0x0011b435: inc edi; adc al, 0x50; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011b6b1: inc edi; adc al, 0x50; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0008184f: inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x000bb99f: inc edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x0014f265: inc edi; adc al, 0x89; ret 0xc985; 
0x0003a5f8: inc edi; adc al, 0x89; ret; 
0x000bb961: inc edi; adc bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb929: inc edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008199f: inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00198c1b: inc edi; adc dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb93f: inc edi; adc dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bb97f: inc edi; adc ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000a10ff: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x39b774d2], al; ret 0xb374; 
0x000d8391: inc edi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00195064: inc edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00079767: inc edi; add al, 0x29; fnsave dword ptr [ebx + eax*2 - 0x75]; pop edi; or byte ptr [ecx], bh; ret; 
0x0006006f: inc edi; add al, 0x39; ror byte ptr [edi], 1; dec esp; ret 0xb60f; 
0x001769f2: inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000bb7c5: inc edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x001a7951: inc edi; add al, 0x5f; ret; 
0x0016e283: inc edi; add al, 0x83; in eax, 0xfc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00073255: inc edi; add al, 0x89; ret 0xfb83; 
0x00186e15: inc edi; add al, 0x8d; push 0x24448909; and al, 0x89; ret; 
0x00120ead: inc edi; add al, 0xb; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x00130dd9: inc edi; add al, 0xe; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x000542b8: inc edi; add al, 0xf; xchg edx, eax; ret; 
0x0014f8b5: inc edi; add al, byte ptr [eax]; add byte ptr [ebp - 0x6a3797e], cl; call dword ptr [eax - 0x73]; 
0x000bb797: inc edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0017ac8f: inc edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00132046: inc edi; add byte ptr [eax], al; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x0012c8d4: inc edi; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00166f8d: inc edi; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x000bb785: inc edi; add dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x0009ff68: inc edi; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000bb7ad: inc edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00148683: inc edi; add esp, 0x118; pop ebx; ret; 
0x000bbb33: inc edi; and byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0017e114: inc edi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0017e5a5: inc edi; arpl cx, di; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00123758: inc edi; call eax; 
0x000ba4e3: inc edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x001a7d93: inc edi; clc; pop edi; ret; 
0x001a7dbc: inc edi; cld; pop edi; ret; 
0x001a7e31: inc edi; cli; pop edi; ret; 
0x001a7df1: inc edi; cmc; pop edi; ret; 
0x00106c2b: inc edi; dec eax; stc; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x000692b5: inc edi; fcos; call dword ptr [edx - 0x73]; 
0x001a7d69: inc edi; hlt; pop edi; ret; 
0x000bbd82: inc edi; inc eax; pop edi; pop esi; pop ebx; ret; 
0x0010b11a: inc edi; inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0015f16c: inc edi; int1; call dword ptr [eax - 0x73]; 
0x001a7dc1: inc edi; int1; pop edi; ret; 
0x000bb913: inc edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000bb8af: inc edi; or al, 0x5f; pop esi; pop ebx; ret; 
0x001a79c1: inc edi; or al, 0x5f; ret; 
0x000bb871: inc edi; or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0016e9f9: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0016ea3c: inc edi; or byte ptr [ebp - 1], dl; jbe 0x16ea4e; push edi; call dword ptr [eax + 0x10]; 
0x00125f6e: inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x000f281d: inc edi; or byte ptr [ecx], bh; ret 0x830f; 
0x0006f75d: inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0010ccc7: inc edi; or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000bb839: inc edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0003a639: inc edi; or byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x4f89; 
0x000bb84f: inc edi; or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bb88f: inc edi; or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000bbb13: inc edi; pop ds; pop edi; pop esi; pop ebx; ret; 
0x001a9bf8: inc edi; pop edi; pop esi; pop ebx; ret; 
0x001a7dd1: inc edi; pop edi; ret; 
0x000bb81b: inc edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x001a777e: inc edi; pop es; pop edi; ret; 
0x000bba03: inc edi; pop ss; pop edi; pop esi; pop ebx; ret; 
0x000bb8f3: inc edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x001a79e1: inc edi; push cs; pop edi; ret; 
0x000bbaf3: inc edi; push ds; pop edi; pop esi; pop ebx; ret; 
0x00174a06: inc edi; push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00174b95: inc edi; push es; in al, dx; call dword ptr [eax - 0x73]; 
0x000ba557: inc edi; push es; pop edi; pop esi; pop ebx; ret; 
0x001a7971: inc edi; push es; pop edi; ret; 
0x000bb9e3: inc edi; push ss; pop edi; pop esi; pop ebx; ret; 
0x0014529b: inc edi; rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; or dword ptr [eax + 0x5a], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00099f20: inc edi; ret 0x2ec3; 
0x00095299: inc edi; ret 0x4489; 
0x000a6a20: inc edi; ret 0x508d; 
0x000b0442: inc edi; ret 0x5350; 
0x0011f742: inc edi; ret 0x548b; 
0x0011f6ea: inc edi; ret 0x66c3; 
0x000952db: inc edi; ret 0x72e9; 
0x000a0cf7: inc edi; ret 0x8188; 
0x0009a804: inc edi; ret 0x948b; 
0x000a4420: inc edi; ret 0xc083; 
0x00095355: inc edi; ret 0xc483; 
0x000e90f5: inc edi; sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x000bbab9: inc edi; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00137644: inc edi; sbb al, 0x89; ret 0x572b; 
0x0010a14d: inc edi; sbb al, 0x89; ret 0xc085; 
0x001378e2: inc edi; sbb al, 0x89; ret 0xc985; 
0x0009195f: inc edi; sbb al, 0x89; ret; 
0x000bba6b: inc edi; sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x000e9823: inc edi; sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x000bba23: inc edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000274d3: inc edi; sbb byte ptr [edi], cl; mov bh, 0x81; pop eax; jo 0x274d4; jmp dword ptr [esi - 0x77]; 
0x000bba49: inc edi; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000bba99: inc edi; sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00173895: inc edi; sbb esp, ebp; inc dword ptr [ebx - 0x72afef3c]; and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x000fb1a1: inc edi; stc; call dword ptr [eax + 0x6a]; 
0x000eb9ae: inc edi; stc; call dword ptr [eax - 0x18]; 
0x000f0b72: inc edi; stc; call dword ptr [eax - 0x73]; 
0x000fb1dc: inc edi; stc; call dword ptr [ebx + 0x50]; 
0x0008e98b: inc edi; stc; jmp dword ptr [esi - 0x70]; 
0x001a7e21: inc edi; stc; pop edi; ret; 
0x001a7e51: inc edi; std; pop edi; ret; 
0x001a7e41: inc edi; sti; pop edi; ret; 
0x00108e9a: inc edi; sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0013199b: inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x001a6d93: inc edi; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0003f3b7: inc edx; adc byte ptr [eax + eax], 0x81; ret; 
0x000b800e: inc edx; adc byte ptr [edi + 0x5b], bl; ret; 
0x001831ca: inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x0012cd56: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011522f: inc edx; add al, 0; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x001955a4: inc edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017a13a: inc edx; add al, 0x51; push edx; call dword ptr [eax + 0x24]; 
0x0017968a: inc edx; add al, 0x51; push edx; call dword ptr [eax + 4]; 
0x000ac68b: inc edx; add al, 0x5b; pop esi; ret; 
0x000b7f62: inc edx; add al, 0x5f; pop ebx; ret; 
0x000b623b: inc edx; add al, 0x5f; ret; 
0x000bac68: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b9628: inc edx; add al, 0x66; mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0007af1c: inc edx; add al, 0x83; ret 0x8304; 
0x000c7581: inc edx; add al, 0x83; ret 0x8504; 
0x001274b2: inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x000c05eb: inc edx; add al, 0x89; clc; pop ebx; pop edi; ret; 
0x000b1e68: inc edx; add al, 0x89; clc; pop edi; ret; 
0x0017a081: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a05d: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed6d: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed91: inc edx; add al, 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008333c: inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x000ac58b: inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000b9608: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000b94a8: inc edx; add al, 0x8a; inc ecx; or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000b9668: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x000b9508: inc edx; add al, 0x8b; inc ecx; or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x000a1141: inc edx; add al, 0x8b; push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0008d2f9: inc edx; add al, 0x8d; dec eax; xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8d318; ret; 
0x000b6238: inc edx; add al, 0x8d; inc edx; add al, 0x5f; ret; 
0x000ba9e9: inc edx; add al, 0x8d; inc edx; pop es; pop edi; ret; 
0x000bac38: inc edx; add al, 0x8d; inc edx; pop es; ret; 
0x0015b823: inc edx; add al, 0xf; test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x00095ca5: inc edx; add al, 1; add esp, 0xc; ret; 
0x0005ac71: inc edx; add al, 1; add esp, 4; pop ebx; pop esi; ret; 
0x000ac5a6: inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000b405a: inc edx; add cl, byte ptr [ecx + 0x3eb83d0]; lea ecx, [edx + 3]; jne 0xb3f81; pop ebx; ret; 
0x0013ee36: inc edx; add dword ptr [eax + 2], edi; ret; 
0x000ac654: inc edx; add dword ptr [ebx + 0x5e], ebx; ret; 
0x000fad5b: inc edx; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfad31; xor eax, eax; ret; 
0x000fe155: inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000bab70: inc edx; add eax, 0x5f0c428d; ret; 
0x000c06e3: inc edx; add eax, 0x5f5bf889; ret; 
0x000ac677: inc edx; add ebx, dword ptr [ebx + 0x5e]; ret; 
0x000b40d8: inc edx; add ecx, dword ptr [ecx + 0x7eb83d0]; lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x000290bd: inc edx; add ecx, dword ptr [edi]; dec ecx; ret 0xec83; 
0x0008eb62: inc edx; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000fb081: inc edx; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0003cf5b: inc edx; add esp, 0x94; pop ebx; pop edi; ret; 
0x0008f247: inc edx; and al, 0x65; mov dword ptr [0x7c], edx; pop ebx; ret; 
0x001694cb: inc edx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00191141: inc edx; call 0x42ef20ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001916d1: inc edx; call 0x42ef263d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00135635: inc edx; call dword ptr [esi + 0x53]; 
0x0019a6e0: inc edx; clc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00190cf0: inc edx; clc; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191146: inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e20: inc edx; clc; mov eax, edx; pop ebx; ret; 
0x00190cf3: inc edx; cld; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e3a: inc edx; cld; mov eax, edx; pop ebx; ret; 
0x00190d33: inc edx; cli; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190d37: inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00190d16: inc edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000c2a3e: inc edx; dec dword ptr [edi]; test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000c2b49: inc edx; dec dword ptr [edi]; test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x001910cc: inc edx; fisub dword ptr [esi + 0xf]; jg 0x191114; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0019165c: inc edx; fisub dword ptr [esi + 0xf]; jg 0x1916a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00191236: inc edx; hlt; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191071: inc edx; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001190fe: inc edx; inc edx; xor eax, eax; ret; 
0x00024b5a: inc edx; inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b505370], ecx; jmp dword ptr [ebp + 0x33]; 
0x001341a1: inc edx; jmp dword ptr [eax]; 
0x000a2577: inc edx; jmp dword ptr [ecx]; 
0x00190eb2: inc edx; jo 0x190e36; ret 0x80; 
0x00190f19: inc edx; jo 0x190e9d; ret 0x80; 
0x00190f6b: inc edx; jo 0x190eef; ret 0x80; 
0x001aa0ed: inc edx; lea eax, [edi - 0x10]; pop edi; ret; 
0x001910d1: inc edx; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0017ef83: inc edx; ljmp 0x5e5b:0x14c483ff; ret; 
0x0011805a: inc edx; mov ch, 0xfa; jmp dword ptr [esi + 3]; 
0x00191276: inc edx; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001912b6: inc edx; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008c373: inc edx; mov edx, dword ptr ds:[edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x00193e16: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e16: inc edx; movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00059dca: inc edx; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x001911b6: inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x000b7fcf: inc edx; or al, 0x5f; pop ebx; ret; 
0x000b62e3: inc edx; or al, 0x5f; ret; 
0x00059f9a: inc edx; or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00174c80: inc edx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x00121ad1: inc edx; or byte ptr [0x100f], ah; ret; 
0x0018369a: inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0xcdb8; 
0x0007e4d2: inc edx; or byte ptr [ebp + 0x393074c9], al; ret; 
0x000880c3: inc edx; or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f883: inc edx; or byte ptr [ebp + 0x396f74c9], al; ret; 
0x000b7fcc: inc edx; or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x0007c8c2: inc edx; or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00085059: inc edx; or byte ptr [ebp - 0x427bf037], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0008fb0f: inc edx; or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x00085473: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x000803f8: inc edx; or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x0008dd49: inc edx; or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000b411c: inc edx; or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb3f81; pop ebx; ret; 
0x000b413e: inc edx; or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb3f81; pop ebx; ret; 
0x000b417c: inc edx; or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb3f81; pop ebx; ret; 
0x000b7f94: inc edx; or byte ptr [edi + 0x5b], bl; ret; 
0x00191011: inc edx; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190fe1: inc edx; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013cf93: inc edx; pop eax; stc; call dword ptr [ecx + 0x50]; 
0x000b90ae: inc edx; pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b62bc: inc edx; pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63fc: inc edx; pop es; lea eax, [edx + 0xa]; ret; 
0x000babb0: inc edx; pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad10: inc edx; pop es; lea eax, [edx + 0xe]; ret; 
0x000c069f: inc edx; pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1edc: inc edx; pop es; mov eax, edi; pop edi; ret; 
0x000b201c: inc edx; pop es; mov eax, edx; ret; 
0x000ac63e: inc edx; pop es; pop ebx; pop esi; ret; 
0x000b6169: inc edx; pop es; pop edi; ret; 
0x000b63a9: inc edx; pop es; ret; 
0x0019e523: inc edx; pop es; sub eax, ecx; pop ebp; ret; 
0x0019cd76: inc edx; pop es; sub eax, ecx; ret; 
0x000b8fd6: inc edx; push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6323: inc edx; push cs; pop edi; ret; 
0x000b6483: inc edx; push cs; ret; 
0x000434da: inc edx; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000ac5e9: inc edx; push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000ac6a9: inc edx; push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x000bab90: inc edx; push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bacf0: inc edx; push es; lea eax, [edx + 0xd]; ret; 
0x000c0703: inc edx; push es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b9550: inc edx; push es; mov eax, edi; pop edi; ret; 
0x000b96b0: inc edx; push es; mov eax, edx; ret; 
0x000ac6af: inc edx; push es; pop ebx; pop esi; ret; 
0x000b626b: inc edx; push es; pop edi; ret; 
0x000b639b: inc edx; push es; ret; 
0x0019e5ff: inc edx; push es; sub eax, ecx; pop ebp; ret; 
0x0019cde6: inc edx; push es; sub eax, ecx; ret; 
0x0013f631: inc edx; ret 0x2ec3; 
0x000e1449: inc edx; ret 0x4c80; 
0x0013ebd0: inc edx; ret 0x578d; 
0x00042731: inc edx; ret 0x748d; 
0x0007abb8: inc edx; ret 0x789; 
0x00147710: inc edx; ret 0xb60f; 
0x00037929: inc edx; ret 0xc189; 
0x000355c5: inc edx; ret 0xc389; 
0x000daa44: inc edx; ret 0xc501; 
0x0013e6e4: inc edx; ret 0xd129; 
0x0013e594: inc edx; ret 0xd329; 
0x000c78ff: inc edx; ret 0xd9f7; 
0x0013e5a2: inc edx; ret 0xe883; 
0x000a873a: inc edx; ret 0xea89; 
0x001912a7: inc edx; ret 0xf66; 
0x000aa28f: inc edx; ret; 
0x0005e06b: inc edx; ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x000fd44d: inc edx; sbb al, 0x39; ret; 
0x000a1c9d: inc edx; stc; call dword ptr [eax + 0x53]; 
0x000a24b5: inc edx; stc; call dword ptr [eax + 0x56]; 
0x000a19cf: inc edx; stc; call dword ptr [eax - 0x18]; 
0x000a2b44: inc edx; stc; call dword ptr [eax - 0x18]; ret; 
0x00190d57: inc edx; std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190d13: inc edx; sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000fde60: inc edx; sub al, 0xe9; mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7ef7d], cl; call dword ptr [eax + 0x55]; 
0x0011521f: inc edx; sub byte ptr [esi + 0x5f], bl; ret; 
0x000883fd: inc edx; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x000c335f: inc edx; test al, al; jne 0xc3358; xor eax, eax; ret; 
0x00190d30: inc edx; test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193ed0: inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001217d6: inc edx; xor al, 0x5b; pop esi; pop edi; ret; 
0x0004a4ae: inc edx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0011765e: inc edx; xor eax, eax; ret; 
0x0010b11c: inc esi; adc al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0011b7da: inc esi; adc al, 0x50; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x001895ba: inc esi; adc al, 0x8b; push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0005b77f: inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0017cd8f: inc esi; adc byte ptr [ecx], al; ret; 
0x00089a0f: inc esi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x000593bb: inc esi; add al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001951b4: inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008d3c6: inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00179ad2: inc esi; add al, 0x53; push esi; call dword ptr [eax + 4]; 
0x0018937a: inc esi; add al, 0x5b; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x0017f6e8: inc esi; add al, 0x75; test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x000c819d: inc esi; add al, 0x83; mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x00079574: inc esi; add al, 0x89; inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012ad7b: inc esi; add al, 0x89; ret 0xe083; 
0x0009d569: inc esi; add al, 0x89; ret 0xe283; 
0x0008aa17: inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00160255: inc esi; add al, byte ptr [eax]; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00147372: inc esi; add al, byte ptr [ebp - 0x76c28b37]; ret; 
0x00123a29: inc esi; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00125ab9: inc esi; add byte ptr [eax], al; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00125b4b: inc esi; add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x00125c74: inc esi; add byte ptr [eax], al; push eax; call 0x125d90; add esp, 0x1c; ret; 
0x00066632: inc esi; add byte ptr [ecx - 0x5a373], cl; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x00093902: inc esi; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x000a1f66: inc esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x44c90], cl; add byte ptr [ecx], bh; ret; 
0x00134065: inc esi; add dword ptr [ecx + 0x244c8bda], ecx; sbb byte ptr [ecx], ch; ret 0xca39; 
0x000c32b4: inc esi; add ebx, dword ptr [esi + 0x5f]; ret; 
0x0003ad1d: inc esi; add ecx, ebp; out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00081146: inc esi; add esp, 4; pop ebx; pop esi; ret; 
0x0018854e: inc esi; and al, 0x29; ret; 
0x0011ae45: inc esi; and bh, bh; xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0008c06a: inc esi; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; jmp eax; 
0x0008ad8a: inc esi; and byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; jmp eax; 
0x00133e0d: inc esi; and byte ptr [ebx - 0xf76fb3c], al; pop ebx; pop esi; ret; 
0x00083b46: inc esi; and byte ptr [ecx], ch; rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x0017575a: inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x000fd549: inc esi; cmp al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d66f4: inc esi; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x00126107: inc esi; dec ebp; stc; call dword ptr [eax + 0x55]; 
0x000f2b36: inc esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14bdc380]; call dword ptr [eax + 0x6a]; 
0x00043f79: inc esi; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x00062116: inc esi; inc ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00156695: inc esi; int1; call dword ptr [eax - 0x73]; 
0x0010becb: inc esi; into; call dword ptr gs:[0x10]; 
0x00094589: inc esi; iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00024b5b: inc esi; mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b505370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00084989: inc esi; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00159811: inc esi; or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0016c039: inc esi; or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016f07c: inc esi; or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0005b77c: inc esi; or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008d3c3: inc esi; or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00114f37: inc esi; or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001062cd: inc esi; or al, 0x8b; je 0x1062f6; sub al, 0x83; ret; 
0x00083b78: inc esi; or al, 1; ret 0xc101; 
0x00085e0a: inc esi; or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0008eacd: inc esi; or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00079577: inc esi; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000fedb4: inc esi; or byte ptr [ebx - 0x14f7dbac], cl; jge 0x83101435; ret; 
0x00126fef: inc esi; or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x00089540: inc esi; or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00040ae3: inc esi; or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x001786b4: inc esi; or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x0017f6f1: inc esi; or byte ptr [ecx], al; ret; 
0x00131557: inc esi; out dx, eax; call dword ptr [eax - 0x18]; 
0x000fb678: inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x0009a295: inc esi; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0007c905: inc esi; push 0x850fc085; ret 0; 
0x000fb766: inc esi; push ebx; setne al; ret; 
0x0013e878: inc esi; ret 0x4489; 
0x001a38ab: inc esi; ret 0x5d5e; 
0x000a6f8e: inc esi; ret 0x8388; 
0x0013c92c: inc esi; ret 0xbe0f; 
0x0008efd0: inc esi; sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x001344c9: inc esi; sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + 0x55], esi; stc; call dword ptr [eax - 1]; 
0x00135139: inc esi; sbb al, 0x89; ret; 
0x001899c0: inc esi; sbb al, 1; ret 0x4689; 
0x00169874: inc esi; sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e09c4: inc esi; stc; call dword ptr [eax + 0x53]; 
0x000dd87e: inc esi; stc; call dword ptr [eax + 0x56]; 
0x0003090c: inc esi; stc; call dword ptr [eax - 0x18]; 
0x0003a203: inc esi; stc; dec dword ptr [edi]; inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0003a122: inc esi; stc; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x0003ea43: inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00060b29: inc esi; std; dec dword ptr [ecx - 0x7c72dbfc]; stc; call dword ptr [ebp + 0x56]; 
0x0018854b: inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0008b8e3: inc esi; sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x001a75c9: inc esi; test dh, 0x40; jne 0x1a7614; add eax, 0xf; ret; 
0x000651f4: inc esp; adc al, ah; add edi, dword ptr [esi + eax*4 - 0x73f94]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064cf4: inc esp; adc al, ah; add edi, dword ptr [esi + eax*4 - 0x74094]; mov eax, edi; mov edi, ecx; jmp eax; 
0x000c2444: inc esp; adc al, dh; ret; 
0x000c2474: inc esp; adc byte ptr [eax], ah; ret; 
0x0002715f: inc esp; adc byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016e120: inc esp; adc byte ptr [eax], ch; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x000c2464: inc esp; adc byte ptr [eax], dl; ret; 
0x000a96f3: inc esp; adc eax, 0x83e87401; ret 0x8b01; 
0x001131c8: inc esp; adc edx, esi; jmp dword ptr [esi - 0x70]; 
0x001953bb: inc esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f9f8: inc esp; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00060661: inc esp; add al, byte ptr [eax]; add byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax + 0x68]; 
0x0009b357: inc esp; add bh, bh; pop esi; pop edi; pop ebp; ret; 
0x000652a9: inc esp; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0009c6fd: inc esp; add byte ptr [edx], al; ret; 
0x0013f895: inc esp; add cl, byte ptr [eax]; pop ebx; ret; 
0x000c243b: inc esp; add dh, byte ptr [eax]; ret; 
0x000893dc: inc esp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg al, ch; stc; call dword ptr [eax - 0x18]; 
0x00065973: inc esp; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x00092e58: inc esp; add dword ptr [eax], eax; add byte ptr [ebp - 0x6c07f79], cl; call dword ptr [eax - 0x73]; 
0x001738e6: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x12f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001544c5: inc esp; add dword ptr [eax], eax; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c200b: inc esp; add dword ptr [eax], edx; ret; 
0x000c202b: inc esp; add dword ptr [eax], esi; ret; 
0x000c201b: inc esp; add dword ptr [eax], esp; ret; 
0x0013f926: inc esp; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00184107: inc esp; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x000645f3: inc esp; and al, 0x10; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x000645a3: inc esp; and al, 0x10; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0013bd52: inc esp; and al, 0x10; add esp, 4; pop ebx; pop esi; ret; 
0x0003bbe5: inc esp; and al, 0x10; and eax, 0x80000000; ret; 
0x0015791f: inc esp; and al, 0x10; call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x000413e5: inc esp; and al, 0x10; call eax; 
0x0003bd22: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bf61: inc esp; and al, 0x10; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x0003bd17: inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00190625: inc esp; and al, 0x10; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0012fe81: inc esp; and al, 0x10; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013238a: inc esp; and al, 0x10; mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x000945ea: inc esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000a881a: inc esp; and al, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001436c2: inc esp; and al, 0x10; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00070dfd: inc esp; and al, 0x14; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x0007117d: inc esp; and al, 0x14; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x00129e4d: inc esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00024d52: inc esp; and al, 0x14; call eax; 
0x0003402c: inc esp; and al, 0x14; call edx; 
0x0013019b: inc esp; and al, 0x14; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000960d6: inc esp; and al, 0x18; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0002332b: inc esp; and al, 0x18; and byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001734a0: inc esp; and al, 0x18; call dword ptr [eax + 0x10]; 
0x00188caf: inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x00114332: inc esp; and al, 0x18; call eax; 
0x0012fe7d: inc esp; and al, 0x18; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016c530: inc esp; and al, 0x18; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000e7fe6: inc esp; and al, 0x18; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x001301a3: inc esp; and al, 0x18; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00130947: inc esp; and al, 0x18; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00064ff8: inc esp; and al, 0x1c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000a08ca: inc esp; and al, 0x1c; mov dword ptr [esp], eax; call esi; 
0x0003813f: inc esp; and al, 0x1c; push dword ptr [eax]; call 0xc24c0; add esp, 0x1c; ret; 
0x0017921c: inc esp; and al, 0x1c; sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x000707fa: inc esp; and al, 0x20; add dword ptr [eax], eax; add byte ptr [eax], al; jmp edx; 
0x0016c7ca: inc esp; and al, 0x20; call eax; 
0x0003da26: inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000643f9: inc esp; and al, 0x24; add byte ptr [eax], al; add byte ptr [eax], al; jmp ecx; 
0x00071b75: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065931: inc esp; and al, 0x24; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000e0345: inc esp; and al, 0x24; add dword ptr [ebx - 0x7cdbdbbc], ecx; ret; 
0x00177442: inc esp; and al, 0x24; add eax, 0x8b000000; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x0008e964: inc esp; and al, 0x24; call eax; 
0x0012f4c3: inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f65f: inc esp; and al, 0x24; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fe85: inc esp; and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121d02: inc esp; and al, 0x24; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00071b95: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x000659b9: inc esp; and al, 0x28; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x0016e59e: inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x00041a57: inc esp; and al, 0x28; call eax; 
0x00041a83: inc esp; and al, 0x28; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012f2f4: inc esp; and al, 0x28; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fd9f: inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00114f3a: inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00089e60: inc esp; and al, 0x28; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0006471b: inc esp; and al, 0x2c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x00160250: inc esp; and al, 0x2c; call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0016025c: inc esp; and al, 0x2c; call eax; 
0x0009df80: inc esp; and al, 0x2c; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0012f40b: inc esp; and al, 0x2c; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a8d9: inc esp; and al, 0x2c; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000704f4: inc esp; and al, 0x30; add byte ptr [eax], al; add byte ptr [eax], al; jmp ebx; 
0x00071ba5: inc esp; and al, 0x30; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0002f409: inc esp; and al, 0x30; call eax; 
0x0009a8e4: inc esp; and al, 0x30; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012f413: inc esp; and al, 0x30; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db957: inc esp; and al, 0x30; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000a0184: inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071c15: inc esp; and al, 0x34; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0015b04a: inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x00061a5f: inc esp; and al, 0x34; call eax; 
0x0012f4bf: inc esp; and al, 0x34; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00084494: inc esp; and al, 0x34; push eax; call ebx; 
0x000d4b4f: inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x00065a11: inc esp; and al, 0x38; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000c4897: inc esp; and al, 0x38; call eax; 
0x0012f20f: inc esp; and al, 0x38; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f4c7: inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00088619: inc esp; and al, 0x38; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000709bd: inc esp; and al, 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; jmp edx; 
0x00071bb5: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x00065941: inc esp; and al, 0x3c; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x0017188a: inc esp; and al, 0x3c; call eax; 
0x0013019f: inc esp; and al, 0x3c; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001772b2: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177322: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177392: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f5: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177455: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c2: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177542: inc esp; and al, 0x3c; sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x000659a9: inc esp; and al, 0x40; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000c4560: inc esp; and al, 0x40; push dword ptr [eax]; call edi; 
0x000c3acf: inc esp; and al, 0x40; push eax; push dword ptr [edi]; call ebx; 
0x00083774: inc esp; and al, 0x40; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0009f9f6: inc esp; and al, 0x44; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000652a7: inc esp; and al, 0x44; add byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x00065971: inc esp; and al, 0x44; add dword ptr [eax], eax; add byte ptr [eax], al; mov edi, ecx; jmp eax; 
0x000e6f96: inc esp; and al, 0x44; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x00093900: inc esp; and al, 0x46; add byte ptr [esi + 8], bh; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00070e63: inc esp; and al, 0x48; add dword ptr [eax], eax; add byte ptr [eax], al; jmp eax; 
0x0014e4d3: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948244c], ecx; ret 0x830f; 
0x0014da43: inc esp; and al, 0x48; add dword ptr [ebx + 0x3948245c], ecx; ret; 
0x00173817: inc esp; and al, 0x48; call dword ptr [eax + 0x10]; 
0x001736bd: inc esp; and al, 0x48; call dword ptr [eax + 0x14]; 
0x000285aa: inc esp; and al, 0x48; call eax; 
0x00157cbf: inc esp; and al, 0x48; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000445d0: inc esp; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x0016db36: inc esp; and al, 0x4c; call eax; 
0x00082588: inc esp; and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003786e: inc esp; and al, 0x50; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x0002aecb: inc esp; and al, 0x50; call eax; 
0x0002c9b5: inc esp; and al, 0x54; call eax; 
0x0015a958: inc esp; and al, 0x57; add byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0002bb72: inc esp; and al, 0x58; call eax; 
0x0016dbf9: inc esp; and al, 0x5c; call eax; 
0x0012fd97: inc esp; and al, 0x60; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00064841: inc esp; and al, 0x63; add byte ptr [edi], cl; xchg esp, eax; ret 0x44c7; 
0x000db2a2: inc esp; and al, 0x64; call eax; 
0x000c7315: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b4b: inc esp; and al, 0x64; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012f40f: inc esp; and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012c2ac: inc esp; and al, 0x68; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012c2b6: inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00029dd9: inc esp; and al, 0x6c; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00121d06: inc esp; and al, 0x74; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0002f54c: inc esp; and al, 0x78; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00134e81: inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00041e3f: inc esp; and al, 0xc; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006127f: inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000a738f: inc esp; and al, 0xc; call dword ptr [edx]; 
0x0003c0c8: inc esp; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00090e57: inc esp; and al, 0xc; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0012f213: inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011effb: inc esp; and al, 0xc; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a72d1: inc esp; and al, 0xc; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00131459: inc esp; and al, 0xc; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003bca1: inc esp; and al, 0xc; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000c11c3: inc esp; and al, 0xc; pop ebx; pop esi; ret; 
0x001a9423: inc esp; and al, 0xc; pop edi; ret; 
0x00024e37: inc esp; and al, 0xc; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0015492e: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x00177a33: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a82: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x0003f286: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f399: inc esp; and al, 0xc; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0017a755: inc esp; and al, 4; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013f3a5: inc esp; and al, 4; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000911a1: inc esp; and al, 4; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00087ee5: inc esp; and al, 4; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a5: inc esp; and al, 4; and eax, 0x7f; ret; 
0x0013ced5: inc esp; and al, 4; bswap eax; ret; 
0x0008f3a0: inc esp; and al, 4; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x00055286: inc esp; and al, 4; fld qword ptr [esp]; add esp, 0xc; ret; 
0x00055300: inc esp; and al, 4; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00171597: inc esp; and al, 4; jmp edx; 
0x0009a941: inc esp; and al, 4; lock dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x0010cf1b: inc esp; and al, 4; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010cf43: inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000912b1: inc esp; and al, 4; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099e65: inc esp; and al, 4; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000915b5: inc esp; and al, 4; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a981: inc esp; and al, 4; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003c0cc: inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00150135: inc esp; and al, 4; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a795: inc esp; and al, 4; mov eax, dword ptr [eax + 0x14]; ret; 
0x00178261: inc esp; and al, 4; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008d6a5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x34]; ret; 
0x00187195: inc esp; and al, 4; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001871b5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187245: inc esp; and al, 4; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187235: inc esp; and al, 4; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c5: inc esp; and al, 4; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e495: inc esp; and al, 4; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121aa5: inc esp; and al, 4; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00187179: inc esp; and al, 4; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000871a5: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087155: inc esp; and al, 4; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a0a50: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x000a0cd0: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x000a0a90: inc esp; and al, 4; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x000e8e05: inc esp; and al, 4; mov eax, dword ptr [eax]; ret; 
0x0012f65b: inc esp; and al, 4; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f2f0: inc esp; and al, 4; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000a9176: inc esp; and al, 4; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0017a775: inc esp; and al, 4; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114545: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00091095: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef5: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008d335: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187155: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031485: inc esp; and al, 4; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010cee5: inc esp; and al, 4; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00087ef5: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00087f15: inc esp; and al, 4; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008d6b5: inc esp; and al, 4; ret; 
0x0013cee6: inc esp; and al, 4; rol ax, 8; ret; 
0x000944f9: inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x0008b465: inc esp; and al, 4; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x00071d87: inc esp; and al, 8; add dword ptr [ebx - 0x7cfbdba4], ecx; ret; 
0x000c2ce2: inc esp; and al, 8; cld; pop edi; ret; 
0x000944f5: inc esp; and al, 8; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003c3f0: inc esp; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00090d5c: inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000e8134: inc esp; and al, 8; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012f2f8: inc esp; and al, 8; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f20b: inc esp; and al, 8; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0013dc46: inc esp; and al, 8; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00196427: inc esp; and al, 8; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007c63c: inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034b25: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b45: inc esp; and al, 8; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c7fc: inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x0010cdac: inc esp; and al, 8; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00081c7d: inc esp; and al, 8; pop ebx; ret; 
0x000c2cb8: inc esp; and al, 8; pop edi; ret; 
0x000bdda3: inc esp; and al, 8; pop esi; ret; 
0x0007b7a7: inc esp; and al, 8; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00088923: inc esp; and al, 8; push eax; push esi; call dword ptr [edi + 0x48]; 
0x00034b90: inc esp; and al, 8; ret; 
0x0013339d: inc esp; and dword ptr [eax], 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x000fdd3f: inc esp; call 0xea42e; inc dword ptr [ebx - 0x7c72f714]; sbb al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x0013af71: inc esp; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000c1cf4: inc esp; cmp al, dh; pop edi; ret; 
0x000c1d24: inc esp; cmp byte ptr [eax], ah; pop edi; ret; 
0x000c1d14: inc esp; cmp byte ptr [eax], dl; pop edi; ret; 
0x000d3db7: inc esp; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x00082144: inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000e6f98: inc esp; dec edi; add byte ptr [eax], al; add cl, ch; ret 0xfffd; 
0x001261f8: inc esp; dec edi; stc; call dword ptr [eax + 0x55]; 
0x00134448: inc esp; in eax, dx; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000e78f4: inc esp; inc ebp; add byte ptr [eax], al; add cl, ch; and edi, 0xffffffff; call dword ptr [ebx + 0x57]; 
0x0002c55b: inc esp; jb 0x2c557; call dword ptr [eax - 0x73]; 
0x0002c57e: inc esp; jb 0x2c57a; call dword ptr [eax - 0x73]; 
0x0012dc31: inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012078a: inc esp; mov eax, edx; pop ebx; pop esi; ret; 
0x000e7f54: inc esp; mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010c0c9: inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e7d: inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7bf9: inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012bc6b: inc esp; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00139398: inc esp; mov esi, 0xc483ffef; adc byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x00034303: inc esp; nop; inc eax; ret; 
0x00066153: inc esp; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065253: inc esp; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x000c1fd4: inc esp; or byte ptr [eax], ah; ret; 
0x000c1fe4: inc esp; or byte ptr [eax], dh; ret; 
0x000c1fc4: inc esp; or byte ptr [eax], dl; ret; 
0x000a31eb: inc esp; pop es; adc byte ptr [ebx - 0x76f3db84], cl; ret 0xfa29; 
0x00198e5e: inc esp; pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3e: inc esp; pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000c7151: inc esp; pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x00134059: inc esp; pop es; add dword ptr [ecx], edi; ret; 
0x00198cae: inc esp; pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00196b38: inc esp; pop es; add dword ptr [edi - 0x18], ebx; mov esp, 0x81ffff0a; ret; 
0x00198eee: inc esp; pop es; add eax, 0x8b1c035f; jmp ebx; 
0x00198dce: inc esp; pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00184a2f: inc esp; pop es; jmp dword ptr [ecx]; 
0x0019948e: inc esp; pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x001992de: inc esp; pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001991be: inc esp; pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019909e: inc esp; pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x0019912e: inc esp; pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00197638: inc esp; pop es; or dword ptr [edi - 0x18], ebx; mov esp, 0x81fffeff; ret; 
0x0019936e: inc esp; pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0019924e: inc esp; pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00195838: inc esp; pop es; or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff1d; ret; 
0x00193838: inc esp; pop es; or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff3d; ret; 
0x0019900e: inc esp; pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993fe: inc esp; pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f7e: inc esp; pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013974c: inc esp; push eax; add eax, eax; call 0x1f41a5b; pop ebx; ret; 
0x000c5237: inc esp; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000620af: inc esp; push es; aad 0x83; ret 0x101; 
0x001394b5: inc esp; rcl dword ptr [eax - 0x73], 0x87; outsd dx, dword ptr [esi]; push esi; stc; call dword ptr [eax - 1]; 
0x000e2110: inc esp; ret 0x10e9; 
0x0009848e: inc esp; ret 0x118b; 
0x0014f2e0: inc esp; ret 0x148b; 
0x00186f84: inc esp; ret 0x178b; 
0x000c3c5b: inc esp; ret 0x188b; 
0x000c3b4b: inc esp; ret 0x288b; 
0x0010e478: inc esp; ret 0x2ec3; 
0x000c478c: inc esp; ret 0x4489; 
0x001341d7: inc esp; ret 0x4589; 
0x00162d3d: inc esp; ret 0x4789; 
0x000fb059: inc esp; ret 0x4c89; 
0x000a5d44: inc esp; ret 0x578d; 
0x0004373a: inc esp; ret 0x66c3; 
0x000e81e6: inc esp; ret 0x7489; 
0x00100c3d: inc esp; ret 0x804; 
0x000c4d35: inc esp; ret 0x8b65; 
0x000a8e4a: inc esp; ret 0x8dc3; 
0x000a31fe: inc esp; ret 0x938b; 
0x0008ef2b: inc esp; ret 0x978b; 
0x0010d943: inc esp; ret 0xb58b; 
0x000a917f: inc esp; ret 0xc083; 
0x00124f8e: inc esp; ret 0xc483; 
0x00033064: inc esp; ret 0xc89; 
0x0003cc5b: inc esp; ret 0xe3e9; 
0x000a655f: inc esp; ret 0xe821; 
0x000a0f16: inc esp; ret 0xec83; 
0x000316c3: inc esp; ret 0xf289; 
0x000a139e: inc esp; ret 0xff31; 
0x000c3c10: inc esp; ret 0xff50; 
0x0004a8e0: inc esp; ret 0xfff9; 
0x00152ea5: inc esp; ret 4; 
0x00142c1b: inc esp; ret 8; 
0x00026cf6: inc esp; ret; 
0x00140718: inc esp; ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0002a491: inc esp; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x0002a495: inc esp; sbb eax, 0x83028b00; ret; 
0x001555f5: inc esp; stc; call dword ptr [eax + 0x52]; 
0x000a81a7: inc esp; stc; call dword ptr [eax + 0x57]; 
0x00141659: inc esp; stc; call dword ptr [eax + 0x6a]; 
0x000a6e01: inc esp; stc; call dword ptr [eax - 0x18]; 
0x000a71f8: inc esp; stc; call dword ptr [eax - 0x73]; 
0x0015f6f7: inc esp; stc; call dword ptr [eax - 1]; 
0x000a712f: inc esp; stc; call dword ptr [ebx + 0x50]; 
0x001489bb: inc esp; verr word ptr [ebp - 0x75]; adc eax, 0; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x0015445f: inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x00064ca3: inc esp; xor al, ah; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0003a9aa: inc esp; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x001aba81: insb byte ptr es:[edi], dx; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0014bff6: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00066b74: insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x001929d3: insb byte ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005b11d: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add bh, bh; xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x000db677: insb byte ptr es:[edi], dx; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00177764: insb byte ptr es:[edi], dx; add eax, 0x5e5b0000; pop edi; pop ebp; ret; 
0x0014da6d: insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x001ae855: insb byte ptr es:[edi], dx; and al, 0x18; add al, 0x39; ret 0x850f; 
0x0009bdf6: insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x000e73f5: insb byte ptr es:[edi], dx; and al, 0x38; add al, 0x8b; je 0xe7420; cmp byte ptr [ecx], ch; ret 0xc889; 
0x00070fd8: insb byte ptr es:[edi], dx; and al, 0x40; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0016c8f7: insb byte ptr es:[edi], dx; and al, 0x40; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0003bd26: insb byte ptr es:[edi], dx; and al, 4; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bf65: insb byte ptr es:[edi], dx; and al, 4; fscale; fstp st(1); ret; 
0x0003bd1b: insb byte ptr es:[edi], dx; and al, 4; mov dword ptr [eax], ecx; ret; 
0x000a1b41: insb byte ptr es:[edi], dx; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x0019398d: insb byte ptr es:[edi], dx; cmp al, 0xff; inc dword ptr [ecx + 0x45c4fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00147b40: insb byte ptr es:[edi], dx; cmp bh, bh; jmp dword ptr [esi - 0x70]; 
0x001623bb: insb byte ptr es:[edi], dx; dec ecx; int1; call dword ptr [eax - 0x73]; 
0x00110af1: insb byte ptr es:[edi], dx; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x00079341: insb byte ptr es:[edi], dx; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x0007c218: insb byte ptr es:[edi], dx; jae 0x7c215; jmp dword ptr [esi - 0x70]; 
0x00184720: insb byte ptr es:[edi], dx; jbe 0x184717; call dword ptr [eax - 0x73]; 
0x0010b07d: insb byte ptr es:[edi], dx; je 0x10b079; call dword ptr [eax - 0x18]; 
0x0010b209: insb byte ptr es:[edi], dx; je 0x10b205; call dword ptr [eax - 0x18]; 
0x00111347: insb byte ptr es:[edi], dx; je 0x111343; call dword ptr [eax - 0x18]; 
0x0013fd97: insb byte ptr es:[edi], dx; je 0x13fd93; call dword ptr [eax - 0x18]; 
0x0013fe4e: insb byte ptr es:[edi], dx; je 0x13fe4a; call dword ptr [eax - 0x18]; 
0x0013fe8e: insb byte ptr es:[edi], dx; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x00140c5e: insb byte ptr es:[edi], dx; je 0x140c5a; call dword ptr [eax - 0x18]; 
0x00140ed2: insb byte ptr es:[edi], dx; je 0x140ece; call dword ptr [eax - 0x18]; 
0x0014104c: insb byte ptr es:[edi], dx; je 0x141048; call dword ptr [eax - 0x18]; 
0x0014115d: insb byte ptr es:[edi], dx; je 0x141159; call dword ptr [eax - 0x77]; 
0x001411d8: insb byte ptr es:[edi], dx; je 0x1411d4; call dword ptr [eax + 0x56]; 
0x0014123b: insb byte ptr es:[edi], dx; je 0x141237; call dword ptr [eax - 0x18]; 
0x0014127e: insb byte ptr es:[edi], dx; je 0x14127a; call dword ptr [eax - 0x18]; 
0x001422be: insb byte ptr es:[edi], dx; je 0x1422ba; call dword ptr [eax - 0x18]; 
0x001462ad: insb byte ptr es:[edi], dx; je 0x1462a9; call dword ptr [eax - 0x18]; 
0x001462d0: insb byte ptr es:[edi], dx; je 0x1462cc; call dword ptr [eax - 0x18]; 
0x00148de6: insb byte ptr es:[edi], dx; je 0x148de2; call dword ptr [eax - 0x18]; 
0x00148fa6: insb byte ptr es:[edi], dx; je 0x148fa2; call dword ptr [eax - 0x18]; 
0x00149024: insb byte ptr es:[edi], dx; je 0x149020; call dword ptr [eax - 0x18]; 
0x001491f4: insb byte ptr es:[edi], dx; je 0x1491f0; call dword ptr [eax - 0x18]; 
0x001492ef: insb byte ptr es:[edi], dx; je 0x1492eb; call dword ptr [eax - 0x18]; 
0x0016caa0: insb byte ptr es:[edi], dx; je 0x16ca9c; call dword ptr [eax - 0x18]; 
0x0016cfb6: insb byte ptr es:[edi], dx; je 0x16cfb2; call dword ptr [eax - 0x18]; 
0x0016d19e: insb byte ptr es:[edi], dx; je 0x16d19a; call dword ptr [eax - 0x18]; 
0x0016ea5e: insb byte ptr es:[edi], dx; je 0x16ea5a; call dword ptr [eax - 0x18]; 
0x0016eb2a: insb byte ptr es:[edi], dx; je 0x16eb26; call dword ptr [eax - 0x18]; 
0x0016ec77: insb byte ptr es:[edi], dx; je 0x16ec73; call dword ptr [eax - 0x18]; 
0x0016ecd6: insb byte ptr es:[edi], dx; je 0x16ecd2; call dword ptr [eax - 0x18]; 
0x0016ed0d: insb byte ptr es:[edi], dx; je 0x16ed09; call dword ptr [eax - 0x18]; 
0x0016f55b: insb byte ptr es:[edi], dx; je 0x16f557; call dword ptr [eax - 0x18]; 
0x0017210e: insb byte ptr es:[edi], dx; je 0x17210a; call dword ptr [eax - 0x18]; 
0x001722dc: insb byte ptr es:[edi], dx; je 0x1722d8; call dword ptr [eax - 0x18]; 
0x001729f4: insb byte ptr es:[edi], dx; je 0x1729f0; call dword ptr [eax - 0x18]; 
0x00172a60: insb byte ptr es:[edi], dx; je 0x172a5c; call dword ptr [eax - 0x18]; 
0x001734e4: insb byte ptr es:[edi], dx; je 0x1734e0; call dword ptr [eax - 0x18]; 
0x0017388f: insb byte ptr es:[edi], dx; je 0x17388b; call dword ptr [eax - 0x18]; 
0x00173d86: insb byte ptr es:[edi], dx; je 0x173d82; call dword ptr [eax - 0x18]; 
0x00173e7a: insb byte ptr es:[edi], dx; je 0x173e76; call dword ptr [eax - 0x18]; 
0x00174b8f: insb byte ptr es:[edi], dx; je 0x174b8b; call dword ptr [eax - 0x18]; 
0x0017589d: insb byte ptr es:[edi], dx; je 0x175899; call dword ptr [eax - 0x18]; 
0x00177c9c: insb byte ptr es:[edi], dx; je 0x177c98; call dword ptr [eax - 0x18]; 
0x00178171: insb byte ptr es:[edi], dx; je 0x17816d; call dword ptr [eax - 0x18]; 
0x001781b5: insb byte ptr es:[edi], dx; je 0x1781b1; call dword ptr [eax - 0x18]; 
0x001781fe: insb byte ptr es:[edi], dx; je 0x1781fa; call dword ptr [eax - 0x18]; 
0x00178544: insb byte ptr es:[edi], dx; je 0x178540; call dword ptr [eax - 0x18]; 
0x00178ab4: insb byte ptr es:[edi], dx; je 0x178ab0; call dword ptr [eax - 0x18]; 
0x00178b07: insb byte ptr es:[edi], dx; je 0x178b03; call dword ptr [eax - 0x18]; 
0x00178b46: insb byte ptr es:[edi], dx; je 0x178b42; call dword ptr [eax - 0x18]; 
0x00178bb5: insb byte ptr es:[edi], dx; je 0x178bb1; call dword ptr [eax - 0x18]; 
0x00179134: insb byte ptr es:[edi], dx; je 0x179130; call dword ptr [eax - 0x18]; 
0x00179bd0: insb byte ptr es:[edi], dx; je 0x179bcc; call dword ptr [eax - 0x18]; 
0x00179dea: insb byte ptr es:[edi], dx; je 0x179de6; call dword ptr [eax - 0x18]; 
0x0017a66d: insb byte ptr es:[edi], dx; je 0x17a669; call dword ptr [eax - 0x18]; 
0x0017ad29: insb byte ptr es:[edi], dx; je 0x17ad25; call dword ptr [eax - 0x18]; 
0x00023259: insb byte ptr es:[edi], dx; je 0x23255; call dword ptr [eax - 0x18]; 
0x0003462e: insb byte ptr es:[edi], dx; je 0x3462a; call dword ptr [eax - 0x18]; 
0x000606b4: insb byte ptr es:[edi], dx; je 0x606b0; call dword ptr [eax - 0x18]; 
0x0006070f: insb byte ptr es:[edi], dx; je 0x6070b; call dword ptr [eax - 0x18]; 
0x00060b22: insb byte ptr es:[edi], dx; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x0008eaf4: insb byte ptr es:[edi], dx; je 0x8eaf0; call dword ptr [eax - 0x18]; 
0x000a71fe: insb byte ptr es:[edi], dx; je 0xa71fa; call dword ptr [eax - 0x18]; 
0x000a8196: insb byte ptr es:[edi], dx; je 0xa8192; call dword ptr [eax - 0x18]; 
0x000abd83: insb byte ptr es:[edi], dx; je 0xabd7f; call dword ptr [eax - 0x18]; 
0x000acd5d: insb byte ptr es:[edi], dx; je 0xacd59; call dword ptr [eax + 0x55]; 
0x000acd98: insb byte ptr es:[edi], dx; je 0xacd94; call dword ptr [eax - 0x18]; 
0x000efe72: insb byte ptr es:[edi], dx; je 0xefe6e; call dword ptr [eax - 0x18]; 
0x000f0422: insb byte ptr es:[edi], dx; je 0xf041e; call dword ptr [eax - 0x18]; 
0x000f0488: insb byte ptr es:[edi], dx; je 0xf0484; call dword ptr [eax - 0x18]; 
0x000f0523: insb byte ptr es:[edi], dx; je 0xf051f; call dword ptr [eax - 0x18]; 
0x000f0560: insb byte ptr es:[edi], dx; je 0xf055c; call dword ptr [eax - 0x18]; 
0x000f05ee: insb byte ptr es:[edi], dx; je 0xf05ea; call dword ptr [eax - 0x18]; 
0x000f0b78: insb byte ptr es:[edi], dx; je 0xf0b74; call dword ptr [eax - 0x18]; 
0x000f0c45: insb byte ptr es:[edi], dx; je 0xf0c41; call dword ptr [eax - 0x18]; 
0x000f0c88: insb byte ptr es:[edi], dx; je 0xf0c84; call dword ptr [eax - 0x18]; 
0x000282b4: insb byte ptr es:[edi], dx; jo 0x282b0; call dword ptr [eax - 0x18]; 
0x00053004: insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0016f568: insb byte ptr es:[edi], dx; mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00155096: insb byte ptr es:[edi], dx; mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x0015193f: insb byte ptr es:[edi], dx; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x000ea475: insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0009300a: insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00120e4e: insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012c2b8: insb byte ptr es:[edi], dx; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00120d88: insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013e236: insb byte ptr es:[edi], dx; mov eax, 6; call dword ptr gs:[0x10]; 
0x00042579: insb byte ptr es:[edi], dx; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00064cfa: insb byte ptr es:[edi], dx; mov edi, 0xf889fff8; mov edi, ecx; jmp eax; 
0x000c10a1: insb byte ptr es:[edi], dx; or al, 0; add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001535be: insb byte ptr es:[edi], dx; or bh, cl; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x0012614f: insb byte ptr es:[edi], dx; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x000acb21: insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x00139389: insb byte ptr es:[edi], dx; outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x00028dca: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0002f338: insb byte ptr es:[edi], dx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008d680: insb byte ptr es:[edi], dx; push cs; add byte ptr [eax], al; ret; 
0x00028ac6: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x00029712: insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x00029ddb: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002de36: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002c9aa: insb byte ptr es:[edi], dx; push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x001328b8: insb byte ptr es:[edi], dx; push ebp; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0010d1b1: insb byte ptr es:[edi], dx; push es; in eax, dx; call dword ptr [ebp + 0x6a]; 
0x00024f95: insb byte ptr es:[edi], dx; push ss; add byte ptr [0x217e7b], al; lea eax, [eax - 0x69094]; ret; 
0x0003b395: insb byte ptr es:[edi], dx; ret 0x14; 
0x0015411f: insb byte ptr es:[edi], dx; ret 0xfff2; 
0x00064381: insb byte ptr es:[edi], dx; ret 0xfff8; 
0x000651fa: insb byte ptr es:[edi], dx; sar al, 0xff; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064997: insb byte ptr es:[edi], dx; sar eax, 0xff; jmp ecx; 
0x00065a84: insb byte ptr es:[edi], dx; sar eax, 0xff; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x0019598d: insb byte ptr es:[edi], dx; sbb al, 0xff; inc dword ptr [ecx + 0x43ecfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00055b56: insb byte ptr es:[edi], dx; sbb dword ptr [ebx + eax*4], eax; ret; 
0x00028885: insb byte ptr es:[edi], dx; stc; call dword ptr [eax + 0x68]; 
0x000287a0: insb byte ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x0005f701: insb byte ptr es:[edi], dx; sub eax, dword ptr gs:[0x14]; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00113464: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x001302c4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x000616bf: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x000f11f4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d04: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af4: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7624: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8434: insb byte ptr es:[edi], dx; sub edx, dword ptr gs:[0x14]; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x00181416: insb byte ptr es:[edi], dx; test eax, 0x728d0000; jmp dword ptr [esi - 0x7d]; 
0x0003229a: insb byte ptr es:[edi], dx; xchg bh, dh; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00040562: insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0010d568: insd dword ptr es:[edi], dx; add al, 0; add dh, dh; ret 0xf80; 
0x001928ce: insd dword ptr es:[edi], dx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013086c: insd dword ptr es:[edi], dx; add eax, 0xa5c58100; lds edx, ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x001299a1: insd dword ptr es:[edi], dx; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x0002606b: insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0002608b: insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0016aa13: insd dword ptr es:[edi], dx; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016ab13: insd dword ptr es:[edi], dx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016aa67: insd dword ptr es:[edi], dx; arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x0011f69f: insd dword ptr es:[edi], dx; cli; idiv bh; add esp, 0x2c; ret; 
0x000ffb1f: insd dword ptr es:[edi], dx; inc dword ptr ss:[ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000a2b43: insd dword ptr es:[edi], dx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000a2b43: insd dword ptr es:[edi], dx; inc edx; stc; call dword ptr [eax - 0x18]; ret; 
0x000c1089: insd dword ptr es:[edi], dx; lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1a82: insd dword ptr es:[edi], dx; lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000bb1a0: insd dword ptr es:[edi], dx; les ecx, ptr [eax + eax]; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0014a182: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x52]; 
0x0014a1c4: insd dword ptr es:[edi], dx; stc; call dword ptr [eax + 0x53]; 
0x00079342: insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x000eff1b: int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a3d5: int 0x2f; stc; call dword ptr [eax - 0x18]; 
0x001262c8: int 0x50; stc; call dword ptr [eax + 0x55]; 
0x000f1046: int 0x5b; ret; 
0x001497df: int 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00154504: int 0x5d; stc; call dword ptr [eax - 1]; 
0x000c1140: int 0x64; or al, 0; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000a569d: int 0x74; sub al, 0x8d; xchg eax, edx; cwde; stc; call dword ptr [eax - 0x73]; 
0x0003a71c: int 0x80; 
0x0009bdf9: int 0x80; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0010e4d6: int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00038c8f: int 0x83; in al, dx; or al, 0x83; ret; 
0x00150002: int 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000856f8: int 0xe8; stc; jmp dword ptr [esi - 0x70]; 
0x00176413: int 0xea; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x000c63db: int 0xf5; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c7518: int 0xf6; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7538: int 0xf6; jmp dword ptr [esi - 0x70]; 
0x0019a8e9: int 0xfe; inc dword ptr [ecx + 0x3f7f4c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00076155: int 0xff; dec dword ptr [ebx - 0x51f73]; jmp dword ptr [ebp - 0x5f]; 
0x0006d7d7: int 0xff; dec dword ptr [ebx - 0x5ab4b]; call dword ptr [eax + 0x50]; 
0x00069b27: int 0xff; jmp dword ptr [ebp - 0x75]; 
0x000dee3d: int1; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000dee3d: int1; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; ret 0xf554; 
0x0010d28b: int1; add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x000a8e3e: int1; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000919d5: int1; add edi, 0x8704; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00189f4e: int1; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008fccb: int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x0015ad69: int1; call dword ptr [eax + 0x6a]; 
0x001556ca: int1; call dword ptr [eax - 0x18]; 
0x00155786: int1; call dword ptr [eax - 0x73]; 
0x0015f16d: int1; call dword ptr [eax - 0x73]; sbb dword ptr [0x50fff960], -0x18; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0015655a: int1; call dword ptr [eax - 1]; 
0x0015097a: int1; call dword ptr [ebx + 0x50]; 
0x001a4a64: int1; call dword ptr [ebx - 0x18]; 
0x0015bd24: int1; call dword ptr [ecx + 0x6a]; 
0x000a0e04: int1; call dword ptr [edx + 0x51]; 
0x001505ed: int1; call dword ptr [esi + 0x50]; 
0x0009f91e: int1; call dword ptr gs:[0x10]; 
0x000ed850: int1; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0016c420: int1; cld; jmp dword ptr [esi - 0x70]; 
0x0019aaf1: int1; cmc; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010705e: int1; dec dword ptr [ecx - 0x76dbdbbc]; ret; 
0x000b9b1c: int1; fimul dword ptr [eax + eax]; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010a147: int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x0010cc82: int1; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x0010bf6d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf8d: int1; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010e4cd: int1; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x001a565f: int1; jmp dword ptr [esi - 0x70]; 
0x000d8d1b: int1; mov ch, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000405c5: int1; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x000ac1fe: int1; mov eax, edx; pop ebx; ret; 
0x0004325a: int1; mov eax, edx; ret; 
0x0009a7dc: int1; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00182c0e: int1; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00159f0e: int1; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x000ea424: int1; mov edx, esi; call dword ptr gs:[0x10]; 
0x000432e2: int1; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00043614: int1; pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042e3a: int1; pop ds; shr eax, cl; ret; 
0x000feeab: int1; pop eax; cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x000ac2fe: int1; pop ebx; pop esi; ret; 
0x00053d4e: int1; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a7dc2: int1; pop edi; ret; 
0x00176d3b: int1; ret 0xffea; 
0x0003dddb: int1; scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x00088489: int1; sldt word ptr [ecx + 0x1b4988c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x001a6db7: int1; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0003205e: int1; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00098061: int1; xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009bd44: int1; xor eax, eax; pop ebx; ret; 
0x000a754e: int1; xor eax, eax; ret; 
0x0011ff9c: into; adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00157ab9: into; add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x000327e5: into; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x00131067: into; add dword ptr [ebx + 0x18], edi; call dword ptr gs:[0x10]; 
0x000c0fd1: into; bsf edx, edx; call 0x187611; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb3: into; bsf edx, edx; call 0x187611; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe3: into; bsf edx, edx; call 0x187611; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b3: into; bsf edx, edx; call 0x187611; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c117b: into; call 0x187611; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c115b: into; call 0x187611; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c113e: into; call 0x187611; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1db: into; call 0x187611; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1bb: into; call 0x187611; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb19e: into; call 0x187611; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b9b: into; call 0x187611; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b7b: into; call 0x187611; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b5e: into; call 0x187611; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001087e4: into; call dword ptr [edi + 0x57]; 
0x001086c9: into; call dword ptr [edi - 0x18]; 
0x0010becc: into; call dword ptr gs:[0x10]; 
0x0010bec9: into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x000a75c0: into; idiv edi; pop ebx; pop esi; pop edi; ret; 
0x000c2963: into; jmp ebx; 
0x000c32b0: into; jne 0xc32b6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000471a6: into; mov eax, esi; pop esi; pop edi; ret; 
0x00115753: into; or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00157908: into; pop esi; stc; call dword ptr [eax + 0x55]; 
0x0015669b: into; pop esi; stc; call dword ptr [eax - 0x18]; 
0x0015682e: into; pop esi; stc; call dword ptr [eax - 0x73]; 
0x000c11a8: into; sahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00173aed: into; stc; call dword ptr [eax + 0x53]; 
0x00175ade: into; stc; call dword ptr [eax - 0x73]; 
0x00181d85: into; stc; call dword ptr [ecx - 0x77]; 
0x001810ba: into; stc; call dword ptr [edx - 0x77]; 
0x00028897: into; sub bh, cl; call dword ptr [eax - 0x18]; 
0x00024ed1: into; sub cl, bh; call dword ptr [eax - 1]; 
0x00148bde: into; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x000a7dde: into; xchg esi, eax; sti; dec dword ptr [ecx - 0x7917dbe4]; idiv ch; jmp dword ptr [esi - 0x70]; 
0x0005dfdd: iretd; aad 0xd; add byte ptr [ebx - 0x8b6b], cl; dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x00192f13: iretd; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00157924: iretd; add al, byte ptr [eax]; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x000b81fd: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0014f37e: iretd; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; add esp, -0x51; stc; call dword ptr [eax - 0x18]; 
0x001991ba: iretd; add edx, edi; lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019924a: iretd; add edx, edi; lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992da: iretd; add edx, edi; lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019936a: iretd; add edx, edi; lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993fa: iretd; add edx, edi; lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019948a: iretd; add edx, edi; lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198caa: iretd; add edx, edi; lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3a: iretd; add edx, edi; lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198dca: iretd; add edx, edi; lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5a: iretd; add edx, edi; lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198eea: iretd; add edx, edi; lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f7a: iretd; add edx, edi; lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019900a: iretd; add edx, edi; lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019909a: iretd; add edx, edi; lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019912a: iretd; add edx, edi; lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bb19c: iretd; add esi, ecx; call 0x187611; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b5c: iretd; add esi, ecx; call 0x187611; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001165ab: iretd; cli; jmp dword ptr [esi + 3]; 
0x001260d1: iretd; dec esp; stc; call dword ptr [eax + 0x55]; 
0x000c54cd: iretd; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000a1353: iretd; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x00064723: iretd; jmp eax; 
0x00084b22: iretd; mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x000645f1: iretd; mov dword ptr [esp + 0x10], 0; jmp eax; 
0x000645a1: iretd; mov dword ptr [esp + 0x10], 1; jmp eax; 
0x00064ff6: iretd; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000652a5: iretd; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x0009458a: iretd; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00094584: iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000ba70e: iretd; or al, 0; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba629: iretd; or al, 0; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba616: iretd; or al, 0; add ecx, 0x1107b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001261bb: iretd; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; aad 0x4e; stc; call dword ptr [eax + 0x55]; 
0x000983da: iretd; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00036b40: iretd; pop ebx; pop esi; pop edi; ret; 
0x0013c56f: iretd; push edi; stc; call dword ptr [eax - 0x18]; 
0x00087eea: iretd; ret; 
0x0010c1fe: ja 0x10c208; pop ebx; pop esi; ret; 
0x0010cee2: ja 0x10ceed; mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x0010cf40: ja 0x10cf4e; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x001131fc: ja 0x113208; pop ebx; pop esi; ret; 
0x001132e6: ja 0x1132e1; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x00114589: ja 0x114590; pop ebx; ret; 
0x001145f9: ja 0x114600; pop ebx; ret; 
0x001147d9: ja 0x1147e0; pop ebx; ret; 
0x00115c4f: ja 0x115c58; pop ebx; pop esi; ret; 
0x00117656: ja 0x117668; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190f6: ja 0x119108; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011ab96: ja 0x11aba8; mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x0011b43f: ja 0x11b44d; call dword ptr [edi + 0x24]; 
0x0011b6bb: ja 0x11b6c9; call dword ptr [edi + 0x24]; 
0x0011c56f: ja 0x11c57d; call dword ptr [edi + 0x24]; 
0x0011c7eb: ja 0x11c7f9; call dword ptr [edi + 0x24]; 
0x0011d6df: ja 0x11d6ed; call dword ptr [edi + 0x24]; 
0x0011d95b: ja 0x11d969; call dword ptr [edi + 0x24]; 
0x0011ece9: ja 0x11ecf0; pop ebx; ret; 
0x0011f209: ja 0x11f210; pop ebx; ret; 
0x0011f31d: ja 0x11f328; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0011f627: ja 0x11f630; pop ebx; ret; 
0x0011ff2e: ja 0x11ff38; pop ebx; pop esi; ret; 
0x0011ffb5: ja 0x11ffc0; pop ebx; ret; 
0x00120013: ja 0x120020; pop ebx; pop esi; pop edi; ret; 
0x00120073: ja 0x120080; pop ebx; pop esi; pop edi; ret; 
0x001202cf: ja 0x1202d8; pop ebx; pop esi; ret; 
0x001206c9: ja 0x1206d0; pop ebx; ret; 
0x00120bd5: ja 0x120be0; pop ebx; ret; 
0x00120fd5: ja 0x120fe0; pop ebx; ret; 
0x00121345: ja 0x121360; pop ebx; pop esi; pop edi; ret; 
0x001213c2: ja 0x1213e0; pop ebx; pop esi; pop edi; ret; 
0x00121444: ja 0x121460; pop ebx; pop esi; pop edi; ret; 
0x001214c1: ja 0x1214e0; pop ebx; pop esi; pop edi; ret; 
0x00121538: ja 0x121540; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012158e: ja 0x121598; pop ebx; pop esi; ret; 
0x0012183e: ja 0x121848; pop ebx; pop esi; ret; 
0x001221d9: ja 0x1221e0; pop ebx; ret; 
0x00122229: ja 0x122230; pop ebx; ret; 
0x0012233f: ja 0x122348; pop ebx; pop esi; pop edi; ret; 
0x0012239f: ja 0x1223a8; pop ebx; pop esi; pop edi; ret; 
0x00123a46: ja 0x123a92; stc; call dword ptr [eax - 0x18]; 
0x00123f59: ja 0x123f60; pop ebx; ret; 
0x00123fae: ja 0x123fb8; pop ebx; pop esi; ret; 
0x001274ee: ja 0x1274f8; pop ebx; pop esi; ret; 
0x00129420: ja 0x129428; pop ebx; pop esi; ret; 
0x0012aa09: ja 0x12aa10; pop ebx; ret; 
0x0012aa5e: ja 0x12aa68; pop ebx; pop esi; ret; 
0x0012aae1: ja 0x12ab10; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012ab71: ja 0x12aba0; sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012bc83: ja 0x12bc90; mov eax, ecx; pop ebx; ret; 
0x0012cd95: ja 0x12cda0; pop ebx; ret; 
0x0012d0e9: ja 0x12d0f0; pop ebx; ret; 
0x0012d1fc: ja 0x12d208; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012d260: ja 0x12d268; ret; 
0x0012d369: ja 0x12d370; pop ebx; ret; 
0x0012d483: ja 0x12d4c0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012d5b8: ja 0x12d5d8; pop ebx; pop esi; pop edi; ret; 
0x0012d873: ja 0x12d880; pop ebx; pop esi; pop edi; ret; 
0x0012da83: ja 0x12da90; pop ebx; pop esi; pop edi; ret; 
0x0012dae3: ja 0x12daf0; pop ebx; pop esi; pop edi; ret; 
0x0012db3e: ja 0x12db48; pop ebx; pop esi; ret; 
0x0012dc94: ja 0x12dca0; pop ebx; pop esi; pop edi; ret; 
0x0012e219: ja 0x12e220; pop ebx; ret; 
0x0012e429: ja 0x12e430; pop ebx; ret; 
0x001303a5: ja 0x1303b0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00130897: ja 0x1308a0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00130f53: ja 0x130f60; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00130fb7: ja 0x130fc0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013a18b: ja 0x13a194; sar eax, 5; add esp, 0xc; ret; 
0x0013cf15: ja 0x13cf79; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00140f0a: ja 0x140f65; stc; call dword ptr [eax + 0x6a]; 
0x0014574c: ja 0x1456d7; ret 0x4439; 
0x00151595: ja 0x1515c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151a95: ja 0x151abf; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00163e25: ja 0x163e24; jmp dword ptr [esi - 0x70]; 
0x00172c5e: ja 0x172be3; les ebx, ptr [eax]; pop ebx; ret; 
0x001867fc: ja 0x18680d; mov eax, edx; mov edx, dword ptr [ecx + 0x110]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00187b1e: ja 0x187d20; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x00188c2b: ja 0x188cf8; sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x00189154: ja 0x189238; sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x001892ad: ja 0x1892c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x00189ef7: ja 0x189f00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0018df1f: ja 0x18df28; pop ebx; pop esi; ret; 
0x00190417: ja 0x190420; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00190527: ja 0x190530; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0019ce35: ja 0x19ce39; neg eax; ret; 
0x0019e675: ja 0x19e679; neg eax; pop ebp; ret; 
0x001a0d25: ja 0x1a0d29; neg eax; add esp, 4; pop ebx; ret; 
0x001a35b5: ja 0x1a35b9; neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a3a75: ja 0x1a3a79; neg eax; ret; 
0x001a3d65: ja 0x1a3d69; neg eax; pop ebp; ret; 
0x001a3f25: ja 0x1a3f29; neg eax; ret; 
0x001a4a0c: ja 0x1a4a10; neg eax; ret; 
0x001a4d85: ja 0x1a4d89; neg eax; pop edi; pop ebx; ret; 
0x001a52e5: ja 0x1a52e9; neg eax; pop edi; pop ebp; pop ebx; ret; 
0x001a5c7d: ja 0x1a5c81; neg eax; ret; 
0x001a72f6: ja 0x1a72fa; neg eax; ret; 
0x00187360: ja 0x249d8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00030535: ja 0x304ee; pop es; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00038145: ja 0x380ea; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003caca: ja 0x3cacc; add byte ptr [eax], al; int 0x80; 
0x0003cd1a: ja 0x3cd20; pop ebx; ret; 
0x0004076e: ja 0x40778; pop ebx; pop esi; ret; 
0x000430cb: ja 0x430e3; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x000430f9: ja 0x43111; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00043129: ja 0x43141; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004315d: ja 0x43175; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x0004a48c: ja 0x4a487; call dword ptr [eax - 0x18]; 
0x0004a55e: ja 0x4a559; call dword ptr [eax - 0x18]; 
0x0004d634: ja 0x4d62f; call dword ptr [eax - 0x18]; 
0x0004d78e: ja 0x4d789; call dword ptr [eax - 0x18]; 
0x000513c5: ja 0x513c0; call dword ptr [eax - 0x18]; 
0x0005149a: ja 0x51495; call dword ptr [eax - 0x18]; 
0x00059d0c: ja 0x59d07; call dword ptr [eax - 0x18]; 
0x00059d31: ja 0x59d2c; call dword ptr [eax - 0x18]; 
0x00061359: ja 0x61360; pop ebx; ret; 
0x000613b3: ja 0x613c0; pop ebx; pop esi; pop edi; ret; 
0x00079943: ja 0x79980; sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0007b79d: ja 0x7b8b0; sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b926: ja 0x7bb90; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007bdda: ja 0x7be58; push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007beb3: ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007c92f: ja 0x7ca20; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d086: ja 0x7d1e0; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0007da5e: ja 0x7da89; sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x0007ee77: ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0007ff36: ja 0x7ff90; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0008002d: ja 0x80050; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00080374: ja 0x8039f; sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000813c1: ja 0x813f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081b93: ja 0x81bc0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00082ce4: ja 0x83070; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008509c: ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x00086ad0: ja 0x86d80; mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x00086e58: ja 0x86e59; jmp dword ptr [ecx]; 
0x00088015: ja 0x88040; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x0008827c: ja 0x882e0; sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000883fc: ja 0x88440; sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00088ba8: ja 0x88cd0; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00088d3e: ja 0x88d80; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x00088e24: ja 0x88e98; push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00089888: ja 0x898f0; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x00089e56: ja 0x8a420; sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x0008a4ea: ja 0x8a5a8; push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008a61b: ja 0x8a640; push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008aa8a: ja 0x8ab88; sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x0008ad06: ja 0x8ad1e; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0008bde7: ja 0x8be40; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008be91: ja 0x8beb8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c189: ja 0x8c238; sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0008c686: ja 0x8c6c0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0008cf23: ja 0x8d268; sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0008f14c: ja 0x8f158; add esp, 8; pop ebx; ret; 
0x000901d2: ja 0x901e0; pop ebx; pop esi; pop edi; ret; 
0x000912a3: ja 0x912b0; ret; 
0x000915db: ja 0x915f0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00098519: ja 0x98520; pop ebx; pop esi; pop edi; ret; 
0x00099e8b: ja 0x99ea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099ebb: ja 0x99ed0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0009cd2f: ja 0x9cd30; jmp dword ptr [esi - 0x70]; 
0x0009efd6: ja 0x9f019; stc; call dword ptr [eax - 0x73]; 
0x0009f4b6: ja 0x9f4f9; stc; call dword ptr [eax - 0x73]; 
0x0009f5b5: ja 0x9f5c0; pop ebx; ret; 
0x0009fb0e: ja 0x9fb30; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009fc3e: ja 0x9fc48; pop ebx; pop esi; ret; 
0x0009ff7f: ja 0x9ff88; mov eax, ecx; pop ebx; ret; 
0x000a035d: ja 0xa0368; pop ebx; ret; 
0x000a8c51: ja 0xa8c30; pop ebx; pop esi; pop edi; ret; 
0x000a9c78: ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca8: ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000c1812: ja 0xc1820; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x000c523a: ja 0xc5244; call ebx; 
0x000c52cf: ja 0xc52d9; call ebx; 
0x000caa83: ja 0xcaa7e; call dword ptr [eax - 0x18]; 
0x000caad0: ja 0xcaacb; call dword ptr [eax - 0x18]; 
0x000cdaad: ja 0xcdaa8; call dword ptr [eax - 0x18]; 
0x000cdb7f: ja 0xcdb7a; call dword ptr [eax - 0x18]; 
0x000d12d9: ja 0xd12d4; call dword ptr [eax - 0x18]; 
0x000d1468: ja 0xd1463; call dword ptr [eax - 0x18]; 
0x000d8c33: ja 0xd8c2e; call dword ptr [eax - 0x18]; 
0x000d8cc7: ja 0xd8cc2; call dword ptr [eax - 0x18]; 
0x000dc377: ja 0xdc380; pop ebx; ret; 
0x000e7f60: ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e80ba: ja 0xe8158; lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e9108: ja 0xe9110; pop ebx; pop esi; ret; 
0x000eaf98: ja 0xeafa0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00129da7: jae 0x129da9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00132041: jae 0x13204e; mov eax, dword ptr [ecx + 0x47f4]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00134ca9: jae 0x134c80; add esp, 4; pop ebx; pop esi; ret; 
0x00138531: jae 0x138563; call eax; 
0x001396c5: jae 0x1396d0; cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013c209: jae 0x13c196; stc; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0013f5cd: jae 0x13f5e2; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0013f88d: jae 0x13f898; mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0014fa99: jae 0x14fae3; out dx, al; dec dword ptr [ebp - 0x64ed37f]; call dword ptr [eax - 0x73]; 
0x00159c49: jae 0x159c4f; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x00160d99: jae 0x160dd6; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call esi; 
0x00164248: jae 0x164247; jmp dword ptr [esi - 0x70]; 
0x0016d3be: jae 0x16d3c8; push esi; call dword ptr [ebx + 0xc]; 
0x001744ac: jae 0x1744f6; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017a83a: jae 0x17a848; add dword ptr [esi + 0x14], edi; pop ebx; pop esi; pop edi; ret; 
0x00182ba8: jae 0x182b90; mov eax, 1; pop ebx; ret; 
0x00183f2b: jae 0x183f31; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x00183f7d: jae 0x183f83; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001844b4: jae 0x1844ba; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0018c039: jae 0x18c030; cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f3f79]; call dword ptr [eax - 0x73]; 
0x0018fd39: jae 0x18fcf3; cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65d9379]; call dword ptr [eax - 0x73]; 
0x00190ec0: jae 0x190e80; call 0x1875fd; add ebx, 0x48299; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001a4279: jae 0x1a4282; add byte ptr [eax], al; pop ebx; ret; 
0x001a7779: jae 0x1a777d; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003ccdd: jae 0x24f10; ret; 
0x0004057c: jae 0x24f10; xor eax, eax; ret; 
0x00025d14: jae 0x25d1a; call edi; 
0x00025d76: jae 0x25d7c; call edi; 
0x000302ed: jae 0x302e8; call dword ptr [eax - 0x73]; 
0x0003135e: jae 0x31359; call dword ptr [eax - 0x73]; 
0x00031d97: jae 0x31d92; call dword ptr [eax - 0x18]; 
0x00031fd3: jae 0x31fce; call dword ptr [eax - 0x73]; 
0x00031ff8: jae 0x31ff3; call dword ptr [eax - 0x73]; 
0x0003204c: jae 0x32047; call dword ptr [eax - 0x73]; 
0x00032180: jae 0x3217b; call dword ptr [eax - 0x73]; 
0x000327da: jae 0x327d5; call dword ptr [eax - 0x73]; 
0x000336cd: jae 0x336e6; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0003f1f7: jae 0x3f1fd; call eax; 
0x000405c2: jae 0x405e9; mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x00053f98: jae 0x53f90; mov eax, edx; pop ebx; pop esi; ret; 
0x00053da8: jae 0x5e604a72; pop edi; pop ebp; ret; 
0x00053ea8: jae 0x5e604b72; pop edi; pop ebp; ret; 
0x0008bdb0: jae 0x5e63ca7a; pop edi; pop ebp; ret; 
0x00103258: jae 0x5e6b5f22; pop edi; pop ebp; ret; 
0x0013f82d: jae 0x5e6f44f7; pop edi; pop ebp; ret; 
0x0014ec28: jae 0x5e6ff8f2; pop edi; pop ebp; ret; 
0x0003efef: jae 0x7482f1ee; sub esp, 8; push 0; push edx; call eax; 
0x0007c219: jae 0x7c215; jmp dword ptr [esi - 0x70]; 
0x0007f9b4: jae 0x7f9c0; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007fb72: jae 0x7fb80; lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x0007fb48: jae 0x7fb8a; cli; jmp dword ptr [esi - 0x70]; 
0x000819e6: jae 0x81960; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00081cd4: jae 0x81d06; add esp, 4; pop ebx; pop esi; ret; 
0x000865f2: jae 0x86577; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00087f7e: jae 0x87f90; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00087fbc: jae 0x87fd0; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0008996c: jae 0x89978; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008bb0a: jae 0x8b9f2; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0008d2bf: jae 0x8d2f1; add esp, 4; pop ebx; pop esi; ret; 
0x0008dd0c: jae 0x8dd30; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x00090234: jae 0x901bf; ret 0xca83; 
0x00091404: jae 0x913d0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000914b4: jae 0x914e3; mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091830: jae 0x91836; call dword ptr [ebx]; 
0x0009182a: jae 0x91868; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00096989: jae 0x969cb; stc; call dword ptr [eax - 0x73]; 
0x000984c7: jae 0x984cd; call dword ptr [ebx]; 
0x000a05e4: jae 0xa0571; dec esp; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a727e: jae 0xa72a0; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000a73f8: jae 0xa741e; call eax; 
0x000a7507: jae 0xa752d; call eax; 
0x000a7546: jae 0xa7558; mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa7540; xor eax, eax; ret; 
0x000a7585: jae 0xa75ab; call edx; 
0x000a880a: jae 0xa8821; pop ebx; pop esi; pop edi; ret; 
0x000bb529: jae 0xbb532; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0016fa58: jae 0xc047ff22; pop ebx; pop esi; ret; 
0x000c2d18: jae 0xc2d1c; movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000fb655: jae 0xfb6a0; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x00114192: jb 0x114181; call dword ptr [eax + 0x56]; 
0x00115219: jb 0x11523b; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0012204a: jb 0x1220a0; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00122b1a: jb 0x122b20; xor eax, eax; pop ebx; ret; 
0x0012ba9a: jb 0x12ba24; lock dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x0013037c: jb 0x130383; add byte ptr [ecx + 0x10ca95c5], al; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x31]; 
0x001323dd: jb 0x1323e3; cmp ecx, edx; sbb eax, eax; ret; 
0x00159757: jb 0x159761; setne al; movzx eax, al; neg eax; ret; 
0x00159789: jb 0x159792; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x0016eeb8: jb 0x16ee7c; mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x0017933a: jb 0x17935e; cld; jmp dword ptr [esi - 0x70]; 
0x0017a3b9: jb 0x17a3d0; sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x0017b067: jb 0x17b0cc; stc; call dword ptr [eax + 0x6a]; 
0x00184a99: jb 0x184a9f; cmp ecx, edx; sbb eax, eax; ret; 
0x00188065: jb 0x188076; xchg esp, eax; ret; 
0x001a3f40: jb 0x1a3f50; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a8553: jb 0x1a8590; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a8495: jb 0x1a8590; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a8563: jb 0x1a8590; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a8573: jb 0x1a8590; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a8583: jb 0x1a8590; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a84be: jb 0x1a8590; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a84e3: jb 0x1a8590; lea eax, [edi + 1]; pop edi; ret; 
0x001a84f3: jb 0x1a8590; lea eax, [edi + 2]; pop edi; ret; 
0x001a842a: jb 0x1a8590; lea eax, [edi + 3]; pop edi; ret; 
0x001a8503: jb 0x1a8590; lea eax, [edi + 4]; pop edi; ret; 
0x001a8513: jb 0x1a8590; lea eax, [edi + 5]; pop edi; ret; 
0x001a8523: jb 0x1a8590; lea eax, [edi + 6]; pop edi; ret; 
0x001a845b: jb 0x1a8590; lea eax, [edi + 7]; pop edi; ret; 
0x001a8533: jb 0x1a8590; lea eax, [edi + 8]; pop edi; ret; 
0x001a8543: jb 0x1a8590; lea eax, [edi + 9]; pop edi; ret; 
0x001a9573: jb 0x1a95b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a94c5: jb 0x1a95b0; lea eax, [eax + 0xb]; pop edi; ret; 
0x001a9583: jb 0x1a95b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a9593: jb 0x1a95b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a95a3: jb 0x1a95b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a94ee: jb 0x1a95b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a9503: jb 0x1a95b0; lea eax, [eax + 1]; pop edi; ret; 
0x001a9513: jb 0x1a95b0; lea eax, [eax + 2]; pop edi; ret; 
0x001a945b: jb 0x1a95b0; lea eax, [eax + 3]; pop edi; ret; 
0x001a9523: jb 0x1a95b0; lea eax, [eax + 4]; pop edi; ret; 
0x001a9533: jb 0x1a95b0; lea eax, [eax + 5]; pop edi; ret; 
0x001a9543: jb 0x1a95b0; lea eax, [eax + 6]; pop edi; ret; 
0x001a948e: jb 0x1a95b0; lea eax, [eax + 7]; pop edi; ret; 
0x001a9553: jb 0x1a95b0; lea eax, [eax + 8]; pop edi; ret; 
0x001a9563: jb 0x1a95b0; lea eax, [eax + 9]; pop edi; ret; 
0x00029bb0: jb 0x29bab; call dword ptr [eax - 0x73]; 
0x0002ab82: jb 0x2ab7d; call dword ptr [eax - 0x73]; 
0x0002aba5: jb 0x2aba0; call dword ptr [eax - 0x73]; 
0x0002ac0f: jb 0x2ac0a; call dword ptr [eax - 0x73]; 
0x0002ac32: jb 0x2ac2d; call dword ptr [eax - 0x73]; 
0x0002ac55: jb 0x2ac50; call dword ptr [eax - 0x73]; 
0x0002ac9b: jb 0x2ac96; call dword ptr [eax - 0x73]; 
0x0002b80d: jb 0x2b808; call dword ptr [eax - 0x73]; 
0x0002b830: jb 0x2b82b; call dword ptr [eax - 0x73]; 
0x0002b853: jb 0x2b84e; call dword ptr [eax - 0x73]; 
0x0002b8f0: jb 0x2b8eb; call dword ptr [eax - 0x73]; 
0x0002b913: jb 0x2b90e; call dword ptr [eax - 0x73]; 
0x0002b95b: jb 0x2b956; call dword ptr [eax - 0x73]; 
0x0002c55c: jb 0x2c557; call dword ptr [eax - 0x73]; 
0x0002c57f: jb 0x2c57a; call dword ptr [eax - 0x73]; 
0x0002cef3: jb 0x2ceee; call dword ptr [eax - 0x73]; 
0x0002cf16: jb 0x2cf11; call dword ptr [eax - 0x73]; 
0x0002cf76: jb 0x2cf71; call dword ptr [eax - 0x73]; 
0x0002db34: jb 0x2db2f; call dword ptr [eax - 0x73]; 
0x0002db57: jb 0x2db52; call dword ptr [eax - 0x73]; 
0x0002db7a: jb 0x2db75; call dword ptr [eax - 0x73]; 
0x0002db9d: jb 0x2db98; call dword ptr [eax - 0x73]; 
0x0002dbe3: jb 0x2dbde; call dword ptr [eax - 0x73]; 
0x0002dc06: jb 0x2dc01; call dword ptr [eax - 0x73]; 
0x000300a6: jb 0x300a1; call dword ptr [eax - 0x73]; 
0x00080a3e: jb 0x80a54; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x00081c7a: jb 0x81c70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00088e25: jb 0x88e91; add ch, byte ptr [edx]; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0008c77a: jb 0x8c770; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ba706: jb 0xb9ac0; call 0x187611; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b30: jb 0xb9ac0; call 0x187611; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b19: jb 0xb9ac0; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9afe: jb 0xb9ac0; call 0x187611; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9adc: jb 0xb9ac0; call 0x187611; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba676: jb 0xb9b58; movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000bbe06: jb 0xbb100; call 0x187611; add ecx, 0x10f08f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb170: jb 0xbb100; call 0x187611; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb159: jb 0xbb100; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb13e: jb 0xbb100; call 0x187611; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb11c: jb 0xbb100; call 0x187611; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c16a6: jb 0xc10a0; call 0x187611; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1110: jb 0xc10a0; call 0x187611; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10f9: jb 0xc10a0; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10de: jb 0xc10a0; call 0x187611; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10bc: jb 0xc10a0; call 0x187611; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c6b16: jb 0xc6a9b; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000fb74b: jb 0xfb74d; add byte ptr [edx + esi*8 + 0x31], dh; rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x000fd71a: jb 0xfd776; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0010ba2e: jbe 0x10ba30; xor eax, eax; xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0010d6ff: jbe 0x10d709; call dword ptr [eax + 0xc]; 
0x0010d6fc: jbe 0x10d716; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010d6f7: jbe 0x10d719; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0011ae4c: jbe 0x11ae5a; call dword ptr [esi + 0x24]; 
0x0011b7e4: jbe 0x11b7f2; call dword ptr [esi + 0x24]; 
0x0011bf6f: jbe 0x11bf7d; call dword ptr [esi + 0x24]; 
0x0011c914: jbe 0x11c922; call dword ptr [esi + 0x24]; 
0x0011d0df: jbe 0x11d0ed; call dword ptr [esi + 0x24]; 
0x0011da84: jbe 0x11da92; call dword ptr [esi + 0x24]; 
0x0012426e: jbe 0x124270; xor eax, eax; ret; 
0x00124316: jbe 0x124318; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x00128af6: jbe 0x128b20; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012aacd: jbe 0x12ab20; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012ac16: jbe 0x12ab9d; out dx, eax; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0012ab5d: jbe 0x12abb0; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012af70: jbe 0x12af90; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0012b626: jbe 0x12b628; ret; 
0x001318cf: jbe 0x131890; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x001397d0: jbe 0x139824; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0013b60a: jbe 0x13b604; inc dword ptr [ebx - 0xffeef3c]; pop ebx; pop esi; pop edi; ret; 
0x0013b6d6: jbe 0x13b6d8; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0013f086: jbe 0x13f088; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001484b6: jbe 0x1484b8; xor eax, eax; ret; 
0x0014e9de: jbe 0x14e9e0; xor eax, eax; ret; 
0x0014ef5d: jbe 0x14eee2; ret 0x8901; 
0x00159e27: jbe 0x159dac; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0015eb36: jbe 0x15eb02; std; jmp dword ptr [esi - 0x70]; 
0x0016c47e: jbe 0x16c480; endbr32; mov eax, 1; ret; 
0x0016c67e: jbe 0x16c680; endbr32; ret; 
0x0016c68e: jbe 0x16c690; endbr32; xor eax, eax; ret; 
0x0016d47f: jbe 0x16d491; push ebx; call dword ptr [esi + 0x14]; 
0x0016e504: jbe 0x16e510; mov eax, 2; pop ebx; pop esi; ret; 
0x0016e846: jbe 0x16e848; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016e9fd: jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0016ea40: jbe 0x16ea4e; push edi; call dword ptr [eax + 0x10]; 
0x0016ed9e: jbe 0x16eda0; xor eax, eax; ret; 
0x00172a66: jbe 0x172a8f; in al, dx; call dword ptr [eax - 0x73]; 
0x001742fe: jbe 0x174300; xor eax, eax; pop ebx; ret; 
0x0017a38e: jbe 0x17a390; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0017a78e: jbe 0x17a790; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x001809d6: jbe 0x1809d8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00180ed7: jbe 0x180e5c; in al, dx; add al, 0x83; ret; 
0x00184721: jbe 0x184717; call dword ptr [eax - 0x73]; 
0x001872ce: jbe 0x1872d0; test al, al; jne 0x1872f6; mov eax, 4; add esp, 0xc; ret; 
0x001872de: jbe 0x1872e0; mov eax, 2; add esp, 0xc; ret; 
0x0019e593: jbe 0x19e683; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019e5b3: jbe 0x19e683; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x001a792e: jbe 0x1a7930; lea eax, [edi + 2]; pop edi; ret; 
0x001a793e: jbe 0x1a7940; lea eax, [edi + 3]; pop edi; ret; 
0x001a794e: jbe 0x1a7950; lea eax, [edi + 4]; pop edi; ret; 
0x001a795e: jbe 0x1a7960; lea eax, [edi + 5]; pop edi; ret; 
0x001a796e: jbe 0x1a7970; lea eax, [edi + 6]; pop edi; ret; 
0x001a797e: jbe 0x1a7980; lea eax, [edi + 8]; pop edi; ret; 
0x001a798e: jbe 0x1a7990; lea eax, [edi + 9]; pop edi; ret; 
0x001a799e: jbe 0x1a79a0; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a79ae: jbe 0x1a79b0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a79be: jbe 0x1a79c0; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a79ce: jbe 0x1a79d0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a79de: jbe 0x1a79e0; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a79ee: jbe 0x1a79f0; xor eax, eax; pop edi; ret; 
0x001a7dce: jbe 0x1a7dd0; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7dde: jbe 0x1a7de0; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dee: jbe 0x1a7df0; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7dfe: jbe 0x1a7e00; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7e0e: jbe 0x1a7e10; lea eax, [edi - 9]; pop edi; ret; 
0x001a7e1e: jbe 0x1a7e20; lea eax, [edi - 7]; pop edi; ret; 
0x001a7e2e: jbe 0x1a7e30; lea eax, [edi - 6]; pop edi; ret; 
0x001a7e3e: jbe 0x1a7e40; lea eax, [edi - 5]; pop edi; ret; 
0x001a7e4e: jbe 0x1a7e50; lea eax, [edi - 3]; pop edi; ret; 
0x001a7e5e: jbe 0x1a7e60; lea eax, [edi - 2]; pop edi; ret; 
0x001a7e6e: jbe 0x1a7e70; lea eax, [edi - 1]; pop edi; ret; 
0x001a7e7e: jbe 0x1a7e80; xor eax, eax; pop edi; ret; 
0x001a7f7e: jbe 0x1a7f80; and eax, 3; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f8e: jbe 0x1a7f90; and eax, 7; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f9e: jbe 0x1a7fa0; and eax, 0x1f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fae: jbe 0x1a7fb0; and eax, 0x3f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fbe: jbe 0x1a7fc0; and eax, 0x7f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fce: jbe 0x1a7fd0; and eax, 0x1ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a835e: jbe 0x1a8360; lea eax, [edi + 2]; pop edi; ret; 
0x001a836e: jbe 0x1a8370; lea eax, [edi + 4]; pop edi; ret; 
0x001a837e: jbe 0x1a8380; lea eax, [edi + 5]; pop edi; ret; 
0x001a838e: jbe 0x1a8390; lea eax, [edi + 6]; pop edi; ret; 
0x001a839e: jbe 0x1a83a0; lea eax, [edi + 8]; pop edi; ret; 
0x001a83ae: jbe 0x1a83b0; lea eax, [edi + 9]; pop edi; ret; 
0x001a83be: jbe 0x1a83c0; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a83ce: jbe 0x1a83d0; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a83de: jbe 0x1a83e0; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a83ee: jbe 0x1a83f0; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a8b9e: jbe 0x1a8ba0; add edx, 2; jl 0x1a8c50; lea eax, [ecx + 2]; ret; 
0x001a8bae: jbe 0x1a8bb0; add edx, 3; jl 0x1a8c50; lea eax, [ecx + 3]; ret; 
0x001a8bbe: jbe 0x1a8bc0; add edx, 5; jl 0x1a8c50; lea eax, [ecx + 5]; ret; 
0x001a8bce: jbe 0x1a8bd0; add edx, 6; jl 0x1a8c50; lea eax, [ecx + 6]; ret; 
0x001a9c4e: jbe 0x1a9c50; pop edi; pop esi; pop ebx; ret; 
0x001a9e9e: jbe 0x1a9ea0; mov eax, ecx; ret; 
0x001aa13e: jbe 0x1aa140; test ah, 0xf0; jne 0x1aa160; lea eax, [edi - 8]; pop edi; ret; 
0x001aa15e: jbe 0x1aa160; lea eax, [edi - 4]; pop edi; ret; 
0x001aa16e: jbe 0x1aa170; xor eax, eax; pop edi; ret; 
0x00024f8e: jbe 0x24f90; endbr32; call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x0002607e: jbe 0x26080; endbr32; call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x000308b1: jbe 0x308b7; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003d79e: jbe 0x3d7a0; endbr32; call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d7f6: jbe 0x3d7f8; mov eax, 0xffffffff; ret; 
0x0003e186: jbe 0x3e188; ret; 
0x0003ee1f: jbe 0x3ee1a; call dword ptr [edx - 0x73]; 
0x0003f16e: jbe 0x3f169; call dword ptr [eax - 0x18]; 
0x0004070e: jbe 0x40710; endbr32; ret; 
0x0004071e: jbe 0x40720; endbr32; ret; 
0x0004072e: jbe 0x40730; endbr32; ret; 
0x00040f9f: jbe 0x40f9a; call dword ptr [eax - 0x73]; 
0x00042d50: jbe 0x42d5f; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00042d70: jbe 0x42d7f; sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x0004318b: jbe 0x431a3; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x0004a3b3: jbe 0x4a3ae; call dword ptr [eax - 0x18]; 
0x0004a3f9: jbe 0x4a3f4; call dword ptr [eax - 0x18]; 
0x0004a53b: jbe 0x4a536; call dword ptr [eax - 0x18]; 
0x0004d5e7: jbe 0x4d5e2; call dword ptr [eax - 0x18]; 
0x0004d67a: jbe 0x4d675; call dword ptr [eax - 0x18]; 
0x0004d712: jbe 0x4d70d; call dword ptr [eax - 0x18]; 
0x000513e8: jbe 0x513e3; call dword ptr [eax - 0x18]; 
0x0005142e: jbe 0x51429; call dword ptr [eax - 0x18]; 
0x00051470: jbe 0x5146b; call dword ptr [eax - 0x18]; 
0x00059c2e: jbe 0x59c29; call dword ptr [eax - 0x18]; 
0x00059ce7: jbe 0x59ce2; call dword ptr [eax - 0x18]; 
0x00059d7b: jbe 0x59d76; call dword ptr [eax - 0x18]; 
0x0005ab32: jbe 0x5aabd; ret 0x40c7; 
0x000650d4: jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00066586: jbe 0x66588; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00070e58: jbe 0x71bc0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070dab: jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00072c26: jbe 0x72c28; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0008327e: jbe 0x83280; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00087146: jbe 0x87148; mov edx, 1; mov eax, edx; ret; 
0x0008b45e: jbe 0x8b460; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x0008d66e: jbe 0x8d670; endbr32; call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008d68e: jbe 0x8d690; endbr32; xor eax, eax; ret; 
0x0008f74e: jbe 0x8f750; endbr32; ret; 
0x00091164: jbe 0x91170; ret; 
0x0009119e: jbe 0x911a0; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00092c2e: jbe 0x92c30; mov eax, 0x16; ret; 
0x0009459c: jbe 0x945a8; pop ebx; neg eax; pop esi; pop edi; ret; 
0x00094605: jbe 0x94610; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x00094b96: jbe 0x94b98; mov eax, 3; ret; 
0x000a0286: jbe 0xa0288; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000a0656: jbe 0xa0658; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a0a5a: jbe 0xa0a60; ret; 
0x000a0a9e: jbe 0xa0aa0; nop; mov dword ptr [edx + 0x390], eax; ret; 
0x000a0a9a: jbe 0xa0aa0; ret; 
0x000a0cd8: jbe 0xa0ce0; ret; 
0x000a51be: jbe 0xa51c0; ret; 
0x000a717e: jbe 0xa7180; endbr32; mov eax, 0xffffffff; ret; 
0x000a71be: jbe 0xa71c0; endbr32; ret; 
0x000a71ce: jbe 0xa71d0; endbr32; ret; 
0x000abca2: jbe 0xabcb4; cmove eax, edx; ret; 
0x000acc12: jbe 0xacc24; cmove eax, edx; ret; 
0x000acde2: jbe 0xacdf4; cmove eax, edx; ret; 
0x000b1fbe: jbe 0xb1fc0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b20ae: jbe 0xb20b0; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b3e1e: jbe 0xb3e20; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b61ee: jbe 0xb61f0; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b826e: jbe 0xb8270; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b942e: jbe 0xb9430; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ba55e: jbe 0xba560; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bbc4e: jbe 0xbbc50; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bdd00: jbe 0xbdcd4; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c11fa: jbe 0xc11fe; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c19fe: jbe 0xc1a00; xor eax, eax; pop edi; ret; 
0x000c1a5e: jbe 0xc1a90; add eax, ecx; ret; 
0x000c1d35: jbe 0xc1d70; add eax, edi; pop edi; ret; 
0x000c1d48: jbe 0xc1d70; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d58: jbe 0xc1d70; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1d68: jbe 0xc1d70; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c386e: jbe 0xc3870; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000c387e: jbe 0xc3880; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c388e: jbe 0xc3890; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c389e: jbe 0xc38a0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38ae: jbe 0xc38b0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38be: jbe 0xc38c0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38ce: jbe 0xc38d0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38de: jbe 0xc38e0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38ee: jbe 0xc38f0; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c38fe: jbe 0xc3900; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c390e: jbe 0xc3910; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c391e: jbe 0xc3920; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c392e: jbe 0xc3930; mov eax, 0xffffffff; ret; 
0x000cab39: jbe 0xcab34; call dword ptr [eax - 0x18]; 
0x000cab7f: jbe 0xcab7a; call dword ptr [eax - 0x18]; 
0x000caba2: jbe 0xcab9d; call dword ptr [eax - 0x18]; 
0x000cda21: jbe 0xcda1c; call dword ptr [eax - 0x18]; 
0x000cda67: jbe 0xcda62; call dword ptr [eax - 0x18]; 
0x000cdb16: jbe 0xcdb11; call dword ptr [eax - 0x18]; 
0x000d1349: jbe 0xd1344; call dword ptr [eax - 0x18]; 
0x000d138f: jbe 0xd138a; call dword ptr [eax - 0x18]; 
0x000d14ca: jbe 0xd14c5; call dword ptr [eax - 0x18]; 
0x000d4b54: jbe 0xd4b5e; call ebx; 
0x000d8be9: jbe 0xd8be4; call dword ptr [eax - 0x18]; 
0x000d8c7d: jbe 0xd8c78; call dword ptr [eax - 0x18]; 
0x000d8d7f: jbe 0xd8d7a; call dword ptr [eax - 0x18]; 
0x000d9d3e: jbe 0xd9d40; mov eax, 1; jg 0xd9d49; neg eax; ret; 
0x000df09e: jbe 0xdf0a0; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000df24c: jbe 0xdf258; mov eax, edx; ret; 
0x000fbc36: jbe 0xfbc38; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x00103f8d: je 0x103fb5; add byte ptr [ebx - 0x7cf7f6f6], cl; rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x001046fd: je 0x104725; add byte ptr [ebx - 0x7cf4dcf6], cl; ret 0x8304; 
0x00105fa2: je 0x105f66; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00105f9e: je 0x105f92; or al, 0x89; je 0x105f66; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x001062d0: je 0x1062f6; sub al, 0x83; ret; 
0x00106c26: je 0x106c4c; xor byte ptr [ebp - 0x6b7b87a], cl; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x00106f1c: je 0x106f42; xor byte ptr [ebp - 0x6d3237a], cl; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x0010addb: je 0x10ae01; adc al, ch; mov ebp, 0xffff84d; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x0010b07e: je 0x10b079; call dword ptr [eax - 0x18]; 
0x0010b20a: je 0x10b205; call dword ptr [eax - 0x18]; 
0x0010b985: je 0x10b9a0; cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x0010bc25: je 0x10bb5f; call eax; 
0x0010bcc5: je 0x10bbb2; call eax; 
0x0010bcbd: je 0x10bce5; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bbb2; call eax; 
0x0010c0c7: je 0x10c0ed; inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010c87e: je 0x10c8a4; sub al, 0xe8; sub dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0010d66d: je 0x10d695; add byte ptr [ebx - 0x2dcefba5], cl; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0010d81d: je 0x10d845; add byte ptr [ebx + 0x438b0453], cl; or byte ptr [ecx], bh; ret 0x840f; 
0x0010e46f: je 0x10e480; xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x0010e4fa: je 0x10e520; sbb byte ptr [edx - 1], ch; call 0x10e8a0; add esp, 0x1c; ret; 
0x0010e520: je 0x10e546; sbb byte ptr [edx - 1], ch; call 0x10e630; add esp, 0x1c; ret; 
0x0010f71e: je 0x10f744; push 0x107aae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x00111348: je 0x111343; call dword ptr [eax - 0x18]; 
0x001126f0: je 0x1126da; dec edx; ret; 
0x00112764: je 0x1126ef; ret; 
0x00112e63: je 0x112df0; jl 0x112e8b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112df4; ret; 
0x001132b5: je 0x113284; pop ebx; ret; 
0x001132f5: je 0x11331d; add byte ptr [eax + 1], bh; ret; 
0x00113475: je 0x11349d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00113cad: je 0x113cc6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x0011432a: je 0x114371; sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00114756: je 0x11477c; sub al, 0xe8; mov dl, 0xa9; idiv edi; add esp, 0x2c; ret; 
0x00115090: je 0x1150b6; sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001151c2: je 0x1151d8; mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00115354: je 0x1153b1; pop esi; ret; 
0x001154ed: je 0x11554a; pop esi; ret; 
0x00115b0d: je 0x115a9a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00115acb: je 0x115b28; pop esi; ret; 
0x00115b07: je 0x115b2d; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00115b0b: je 0x115b31; je 0x115a9a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0011b43b: je 0x11b461; xor bh, bh; ja 0x11b44d; call dword ptr [edi + 0x24]; 
0x0011b6b7: je 0x11b6dd; xor bh, bh; ja 0x11b6c9; call dword ptr [edi + 0x24]; 
0x0011b7e0: je 0x11b806; xor bh, bh; jbe 0x11b7f2; call dword ptr [esi + 0x24]; 
0x0011b819: je 0x11b83f; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011b849: je 0x11b86f; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011c56b: je 0x11c591; xor bh, bh; ja 0x11c57d; call dword ptr [edi + 0x24]; 
0x0011c7e7: je 0x11c80d; xor bh, bh; ja 0x11c7f9; call dword ptr [edi + 0x24]; 
0x0011c910: je 0x11c936; xor bh, bh; jbe 0x11c922; call dword ptr [esi + 0x24]; 
0x0011c949: je 0x11c96f; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011c979: je 0x11c99f; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011d6db: je 0x11d701; xor bh, bh; ja 0x11d6ed; call dword ptr [edi + 0x24]; 
0x0011d957: je 0x11d97d; xor bh, bh; ja 0x11d969; call dword ptr [edi + 0x24]; 
0x0011da80: je 0x11daa6; xor bh, bh; jbe 0x11da92; call dword ptr [esi + 0x24]; 
0x0011dab9: je 0x11dadf; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011dae9: je 0x11db0f; or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x0011e31f: je 0x11e345; and byte ptr [ebx - 0x72cbdbbc], cl; sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0011e254: je 0x11e6d8; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0011ec81: je 0x11eca7; sbb byte ptr [edx - 0x64], ch; call 0x114c30; add esp, 0x1c; ret; 
0x0011f13d: je 0x11f163; sbb byte ptr [edx - 0x64], ch; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f161: je 0x11f187; sbb byte ptr [edx - 0x64], ch; call 0x115710; add esp, 0x1c; ret; 
0x0011f1b8: je 0x11f215; pop esi; ret; 
0x0011f274: je 0x11f29a; sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0011f2c4: je 0x11f2ea; sub byte ptr [edx - 0x64], ch; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f38d: je 0x11f3b3; sub byte ptr [edx - 0x64], ch; call 0x8f110; add esp, 0x2c; ret; 
0x0011f3e0: je 0x11f406; sub byte ptr [edx - 0x64], ch; call 0x8f110; add esp, 0x2c; ret; 
0x0011f524: je 0x11f54a; sub al, 0xe8; in al, 0xfb; idiv bh; add esp, 0x2c; ret; 
0x0011f6c5: je 0x11f6eb; sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0011fee8: je 0x11ff0e; sub al, 0xe8; and dl, dh; idiv bh; add esp, 0x2c; ret; 
0x001200ba: je 0x1200e0; sbb byte ptr [edx - 0x64], ch; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x001200de: je 0x120104; sbb byte ptr [edx - 0x64], ch; call 0x115710; add esp, 0x1c; ret; 
0x0012018d: je 0x12011a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00120135: je 0x120192; pop esi; ret; 
0x00120187: je 0x1201ad; pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012018b: je 0x1201b1; je 0x12011a; pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00120d86: je 0x120dac; insb byte ptr es:[edi], dx; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d7f: je 0x120de0; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120e4c: je 0x120e72; insb byte ptr es:[edi], dx; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00121023: je 0x121049; sub al, 0xe8; in eax, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x00121051: je 0x121077; sub al, 0xe8; mov bh, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x0012108a: je 0x1210c0; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0012113a: je 0x121170; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00121326: je 0x121350; mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x001213a6: je 0x1213d0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00121426: je 0x121450; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x001214a6: je 0x1214d0; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121d08: je 0x121c97; mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00121c88: je 0x121cae; dec esp; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121c8c: je 0x121cb2; js 0x121c1b; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00121e7b: je 0x121ea1; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x001227c7: je 0x1227ed; adc byte ptr [ecx + eax], bh; ret 0x1389; 
0x00122f26: je 0x122f4c; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x00123757: je 0x1237a0; call eax; 
0x0012389b: je 0x123938; call eax; 
0x00123d5d: je 0x123d85; add byte ptr [ebx - 0x7c72f714], al; leave; pop edi; stc; call dword ptr [eax - 0x73]; 
0x00123f24: je 0x123f4a; sub al, 0xe8; in al, 0xb1; idiv bh; add esp, 0x2c; ret; 
0x001242e8: je 0x1242f8; cmp ecx, edx; jne 0x1242e0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0012485a: je 0x12485d; ret; 
0x001248b8: je 0x1248ea; stc; call dword ptr [eax - 0x18]; 
0x00124f6e: je 0x124f78; add esp, 0xc; ret; 
0x00124fbe: je 0x124fc8; add esp, 0xc; ret; 
0x00125655: je 0x12567d; add byte ptr [ebx - 0x7c72f714], al; sub ecx, edi; call dword ptr [eax - 0x73]; 
0x00125cc2: je 0x125cd0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0012600b: je 0x126031; sub al, 0x8b; jl 0x126035; xor byte ptr [ebp - 0x6b32d7d], cl; call dword ptr [eax + 0x55]; 
0x00126412: je 0x12639d; push esi; add al, 0x89; ret 0xeac1; 
0x00126968: je 0x1268f3; push esi; add al, 0x89; ret 0xeac1; 
0x001269dd: je 0x126968; push esi; add al, 0x89; ret 0xeac1; 
0x00126b37: je 0x126ac2; push esi; add al, 0x89; ret 0xeac1; 
0x00126c23: je 0x126bae; push esi; add al, 0x89; ret 0xeac1; 
0x00126c98: je 0x126c23; push esi; add al, 0x89; ret 0xeac1; 
0x00126e43: je 0x126dce; push esi; add al, 0x89; ret 0xeac1; 
0x00127238: je 0x1271c3; push esi; add al, 0x89; ret 0xeac1; 
0x00127488: je 0x12748d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x001274af: je 0x1274b4; mov dword ptr [edx + 4], eax; test eax, eax; je 0x1274ba; mov dword ptr [eax], edx; ret; 
0x001274b6: je 0x1274ba; mov dword ptr [eax], edx; ret; 
0x0012799a: je 0x1279c0; sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00127a55: je 0x127a7b; sbb al, 0xe8; rcr dword ptr [ebx + esi*8 + 0x10c483ff], cl; add esp, 0xc; ret; 
0x00127a9e: je 0x127ac4; sbb al, 0xe8; mov bl, byte ptr [ebx + esi*8 + 0x1cc483ff]; ret; 
0x00127af0: je 0x127b16; sbb al, 0xe8; cmp byte ptr [ebx + esi*8 + 0x10c483ff], bl; add esp, 0xc; ret; 
0x0012810c: je 0x128161; stc; call dword ptr [edx + 0x50]; 
0x0012847c: je 0x128490; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00128763: je 0x128789; sub al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; imul esi, esi, 0x28c483ff; pop ebx; ret; 
0x00128aed: je 0x128b13; sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00128b21: je 0x128b47; or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x00128ba3: je 0x128bc9; sub al, 0xe8; idiv bh; add esp, 0x28; pop ebx; ret; 
0x00128c8f: je 0x128cb5; sub al, 0xe8; jns 0x128cf9; idiv bh; add esp, 0x2c; ret; 
0x00128eac: je 0x128ed2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x001291d3: je 0x1291f9; xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x0012b5ce: je 0x12b5d4; test edx, edx; jne 0x12b5d8; ret; 
0x0012b5f2: je 0x12b5f8; test edx, edx; jne 0x12b600; ret; 
0x0012be2b: je 0x12be51; sub al, 0xe8; fnsave dword ptr [edx]; idiv bh; add esp, 0x2c; ret; 
0x0012bf18: je 0x12bf3e; sbb byte ptr [edx], ch; call 0x12c160; add esp, 0x1c; ret; 
0x0012c6ff: je 0x12c702; ret; 
0x0012c7aa: je 0x12c7d6; mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0012c89a: je 0x12c8a8; pop ebx; setg al; pop esi; pop edi; ret; 
0x0012c8a5: je 0x12c8cd; add byte ptr [eax + 0x11c], bh; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012c8cf: je 0x12c8e0; mov dword ptr [edi + 0x472c], ecx; pop ebx; pop esi; pop edi; ret; 
0x0012c932: je 0x12c93d; pop esi; pop ebx; jl 0x24f10; ret; 
0x0012c920: je 0x12c946; sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0012cddf: je 0x12ce05; sub al, 0xe8; sub dword ptr [ebx], esp; idiv bh; add esp, 0x2c; ret; 
0x0012d2b8: je 0x12d2f0; lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012d3ab: je 0x12d3e0; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012d3db: je 0x12d433; pop ebx; pop esi; ret; 
0x0012d5a5: je 0x12d5c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0012dc2c: je 0x12dc48; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012dc2f: je 0x12dc55; inc esp; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012de53: je 0x12de79; cmp al, 0x8b; je 0x12de7d; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012de57: je 0x12de7d; mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012df80: je 0x12dfe8; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012e378: je 0x12e3b0; lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012ea87: je 0x12ea89; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f552: je 0x12f578; xor al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f9e4: je 0x12f99b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0012fd9b: je 0x12fdc1; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012fef2: je 0x12ff18; and al, 0x89; inc esp; and al, 0x28; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012ffe8: je 0x13000e; adc al, 0xe8; or eax, 0x81000576; ret; 
0x001302f8: je 0x13031e; sub byte ptr [edx + 0xb], ch; call 0x8f110; add esp, 0x2c; ret; 
0x00130cee: je 0x130d50; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00130ecc: je 0x130ef2; or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00131450: je 0x131458; ret; 
0x00131455: je 0x13147d; add byte ptr [ebx - 0x74f3dbbc], cl; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x00131796: je 0x1317b3; lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00133329: je 0x13334f; cmp al, 0xe8; outsd dx, dword ptr [esi]; add bh, cl; jmp dword ptr [ebp - 0x75]; 
0x0013419d: je 0x1341c5; add dh, al; inc edx; jmp dword ptr [eax]; 
0x001345c8: je 0x1345ee; adc al, ch; sub eax, 0x81000530; ret; 
0x001348ce: je 0x1348f4; and byte ptr [esi + 0x53], dl; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00134a33: je 0x134a20; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x00134d5e: je 0x134d84; adc al, ch; or bh, byte ptr [esi - 9]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x001352e9: je 0x13530f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0013531e: je 0x135328; xor eax, eax; pop ebx; ret; 
0x001368c6: je 0x1368ec; sbb al, 0xe8; ret 0xeec8; 
0x00138185: je 0x1381ab; and al, ch; ret; 
0x00138511: je 0x138520; add esp, 8; pop ebx; ret; 
0x0013852a: je 0x138550; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x00139783: je 0x139798; ret; 
0x001398f5: je 0x13991d; add byte ptr [ebp + 0x5b8f865], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop ebp; ret; 
0x0013a28d: je 0x13a2b5; add dh, dh; ret 0x7420; 
0x0013a915: je 0x13a93b; sbb bh, bh; je 0x13a93f; sub al, 0xe8; call dword ptr [esi]; 
0x0013a919: je 0x13a93f; sub al, 0xe8; call dword ptr [esi]; 
0x0013acb5: je 0x13acc0; add esp, 8; pop ebx; ret; 
0x0013af5f: je 0x13af77; lea eax, [edx - 0xac184]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x0013b25c: je 0x13b282; push 0x3d838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0013b547: je 0x13b56d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x0013b717: je 0x13b711; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013b947: je 0x13b96d; xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013bb2d: je 0x13bb55; add al, ch; imul esp, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x0013bf76: je 0x13bf9c; sbb al, 0xe8; mov byte ptr [0x83fff8ae], al; les ebx, ptr [eax]; pop ebx; ret; 
0x0013c740: je 0x13c766; or al, 0x8d; xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0013dd0d: je 0x13dd35; add byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013ed8d: je 0x13edb3; or al, 0x8d; xchg byte ptr [ebx + ebp*4], ah; stc; call dword ptr [eax - 0x73]; 
0x0013edca: je 0x13edc0; add esp, 8; pop ebx; ret; 
0x0013efa9: je 0x13efb8; test eax, eax; jne 0x13efc0; mov eax, ebx; pop ebx; ret; 
0x0013f189: je 0x13f1af; sub al, 0x83; ret 0x8902; 
0x0013fd98: je 0x13fd93; call dword ptr [eax - 0x18]; 
0x0013fe4f: je 0x13fe4a; call dword ptr [eax - 0x18]; 
0x0013fe8f: je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x0014078d: je 0x1407b5; add byte ptr [ebx - 0x17aaf314], al; mov bh, 0x3e; std; jmp dword ptr [ebp - 0x5f]; 
0x00140c5f: je 0x140c5a; call dword ptr [eax - 0x18]; 
0x00140ecb: je 0x140e78; stc; call dword ptr [eax - 0x73]; 
0x00140ed3: je 0x140ece; call dword ptr [eax - 0x18]; 
0x0014104d: je 0x141048; call dword ptr [eax - 0x18]; 
0x0014115e: je 0x141159; call dword ptr [eax - 0x77]; 
0x001411d9: je 0x1411d4; call dword ptr [eax + 0x56]; 
0x0014123c: je 0x141237; call dword ptr [eax - 0x18]; 
0x0014127f: je 0x14127a; call dword ptr [eax - 0x18]; 
0x0014158a: je 0x1415b0; adc byte ptr [ebp - 0x6cf9c6a], cl; call dword ptr [edx - 0x46]; 
0x001422bf: je 0x1422ba; call dword ptr [eax - 0x18]; 
0x00142565: je 0x142570; add esp, 4; pop ebx; pop esi; ret; 
0x0014368c: je 0x143698; add esp, 8; pop ebx; ret; 
0x00143695: je 0x1436bd; add dh, al; add eax, dword ptr [eax]; add esp, 8; pop ebx; ret; 
0x00146145: je 0x14616d; add byte ptr [ebx - 0x44f73], cl; jmp dword ptr [ebp - 0x75]; 
0x001462ae: je 0x1462a9; call dword ptr [eax - 0x18]; 
0x001462d1: je 0x1462cc; call dword ptr [eax - 0x18]; 
0x001469aa: je 0x1469d0; sub al, ch; mov esi, 0x89ffff4b; ret 0x2eb8; 
0x00147f75: je 0x147f9d; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00148cd8: je 0x148ce8; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00148d5e: je 0x148d84; adc byte ptr [ecx - 0x72fd9532], cl; add dword ptr [edi], 0x2d; stc; call dword ptr [eax + 0x51]; 
0x00148de7: je 0x148de2; call dword ptr [eax - 0x18]; 
0x00148fa7: je 0x148fa2; call dword ptr [eax - 0x18]; 
0x00148f9a: je 0x148fc0; or al, 0x8d; xchg byte ptr [eax - 0x52], al; stc; call dword ptr [eax - 0x73]; 
0x00149025: je 0x149020; call dword ptr [eax - 0x18]; 
0x00149000: je 0x149026; add al, 0x89; ret; 
0x00149018: je 0x14903e; or al, 0x8d; xchg byte ptr [eax - 0x52], bh; stc; call dword ptr [eax - 0x73]; 
0x001491f5: je 0x1491f0; call dword ptr [eax - 0x18]; 
0x001492f0: je 0x1492eb; call dword ptr [eax - 0x18]; 
0x00149a6a: je 0x149a57; or ecx, dword ptr [ebp - 0x57fff8a]; or dword ptr [ebx + ecx - 0x7d], esi; ret; 
0x0014b1c6: je 0x14b1ec; sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0014b285: je 0x14b2ad; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0014c8b1: je 0x14c8b8; pop ebx; ret; 
0x0014c901: je 0x14c928; mov eax, 1; xor eax, 1; pop ebx; ret; 
0x0014d021: je 0x14d047; or byte ptr [ebp - 0x650737a], cl; call dword ptr [eax - 0x73]; 
0x0014d571: je 0x14d4f6; ret; 
0x0014e908: je 0x14e910; add esp, 0x18; pop ebx; ret; 
0x0014e9d4: je 0x14e9e8; xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x0014f647: je 0x14f66d; add al, 0x83; ret; 
0x0014fa72: je 0x14fa7e; add dword ptr [eax + 8], 1; je 0x14fa9d; add esp, 0xc; ret; 
0x0014fa78: je 0x14fa9d; add esp, 0xc; ret; 
0x00150405: je 0x15040c; cmp dword ptr [eax + 8], edx; jne 0x150400; ret; 
0x00150475: je 0x15049d; add byte ptr [edx - 1], bh; mov eax, edx; pop ebx; pop esi; ret; 
0x001507d8: je 0x15078b; stc; call dword ptr [eax - 0x73]; 
0x0015079d: je 0x1507c3; adc al, ch; pop ebx; jp 0x150798; jmp dword ptr [ebp - 0x75]; 
0x00152171: je 0x152197; and al, 0x8b; inc esp; and al, 0x24; call eax; 
0x00152822: je 0x152848; adc al, 0x55; call edi; 
0x00154a8d: je 0x154ab0; xor ecx, ecx; cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x00154bd8: je 0x154bfe; adc al, ch; sbb eax, 0x8100032a; ret; 
0x00154d29: je 0x154d8e; mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154db1: je 0x154e16; mov byte ptr [ebx + 0x6f68], 0; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00155659: je 0x155640; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00155665: je 0x15568d; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x001579b0: je 0x1579d6; dec eax; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001579b4: je 0x1579da; dec eax; push dword ptr [esp + 0x10]; call edi; 
0x00157cbb: je 0x157ce1; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x00157cc4: je 0x157cea; xor al, 0xff; je 0x157cee; inc eax; call esi; 
0x00157cc8: je 0x157cee; inc eax; call esi; 
0x00159ecf: je 0x159ee0; mov eax, edx; pop ebx; pop esi; ret; 
0x00159f85: je 0x159fad; add byte ptr [ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0015a35d: je 0x15a385; add byte ptr [ebx - 0x7cefdbbc], cl; ret 0x3901; 
0x0015a385: je 0x15a3ab; adc al, 0x83; ret 0x8301; 
0x0015a3b5: je 0x15a3db; sbb al, 0x83; ret 0x8301; 
0x0015cdd6: je 0x15cdfc; and byte ptr [ebp - 0xe2e737a], cl; call dword ptr [eax + 0x6a]; 
0x0015cf50: je 0x15cf76; sbb al, 0x8d; xchg byte ptr [eax + 0x5f], dh; stc; call dword ptr [eax - 0x18]; 
0x0015d275: je 0x15d29b; sbb byte ptr [ebp - 0x6a0567a], cl; call dword ptr [eax - 1]; 
0x0015d2e8: je 0x15d2eb; add byte ptr [eax], al; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0015d2ed: je 0x15d313; push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0015d2f1: je 0x15d317; push eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0015d5f0: je 0x15d616; adc byte ptr [ebp - 0x64a837a], cl; call dword ptr [eax - 0x73]; 
0x0015da38: je 0x15da5e; adc al, ch; mov ebp, 0x8100029b; ret; 
0x001602f5: je 0x160300; sub esp, 0xc; push esi; call eax; 
0x00160685: je 0x160690; sub esp, 0xc; push esi; call eax; 
0x00160765: je 0x160776; sub esp, 0xc; lea edx, [ebx + 0xa28c]; push edx; call eax; 
0x0016084a: je 0x160870; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x0016084e: je 0x160874; pop eax; push esi; call edi; 
0x00160bab: je 0x160bbe; sub esp, 0xc; push eax; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160ce5: je 0x160d0b; or al, 0x55; call edi; 
0x00160d92: je 0x160da5; sub esp, 0xc; push eax; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x00160f41: je 0x160f54; sub esp, 0xc; push ebx; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x00160fd6: je 0x160fe9; sub esp, 0xc; push ebx; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x001617bb: je 0x1617e1; cmp byte ptr [ebp - 0x69f3752], cl; call dword ptr [ebp - 0x73]; 
0x001664f5: je 0x166559; stc; call dword ptr [eax + 0x6a]; 
0x00166e16: je 0x166e00; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0016880f: je 0x168835; adc al, 0xeb; adc cl, byte ptr [ebp - 0x74ffd98c]; inc ebx; add al, 0x83; ret; 
0x00168d62: je 0x168d88; and al, 0x89; ret; 
0x0016903c: je 0x169062; cmp byte ptr [edx + 2], ch; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x0016c03d: je 0x16c063; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x0016c54b: je 0x16c556; sub esp, 0xc; push esi; call eax; 
0x0016c6ed: je 0x16c715; add byte ptr [ebx + 0x10b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016c78d: je 0x16c7b5; add byte ptr [ebx + 0x438b08ec], al; adc bh, bh; je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016c797: je 0x16c7bd; adc al, 0x56; call dword ptr [eax + 4]; 
0x0016c7c5: je 0x16c7eb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016c7d4: je 0x16c8bb; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016c866: je 0x16c8f0; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0016ca1e: je 0x16ca29; sub esp, 0xc; push esi; call eax; 
0x0016c9fd: je 0x16ca94; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016caa1: je 0x16ca9c; call dword ptr [eax - 0x18]; 
0x0016cb4e: je 0x16cb63; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0016cc0b: je 0x16cc31; adc al, 0xff; je 0x16cc35; je 0x16cc63; call dword ptr [ecx]; 
0x0016cc0f: je 0x16cc35; je 0x16cc63; call dword ptr [ecx]; 
0x0016cc11: je 0x16cc63; call dword ptr [ecx]; 
0x0016ccf7: je 0x16cd06; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016cd3b: je 0x16cd48; add esp, 8; pop ebx; ret; 
0x0016cfb7: je 0x16cfb2; call dword ptr [eax - 0x18]; 
0x0016d19f: je 0x16d19a; call dword ptr [eax - 0x18]; 
0x0016d338: je 0x16d31c; cld; jmp dword ptr [esi - 0x70]; 
0x0016d46e: je 0x16d3fc; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016d48a: je 0x16d3fc; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016d5dd: je 0x16d603; xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0016d916: je 0x16d8bc; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016d8cb: je 0x16d8f1; dec eax; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0016d939: je 0x16d944; sub esp, 0xc; push edi; call eax; 
0x0016db4a: je 0x16da0e; sub esp, 0xc; push esi; call eax; 
0x0016db31: je 0x16db57; dec eax; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016dc45: je 0x16dc50; sub esp, 0xc; push esi; call eax; 
0x0016dc96: je 0x16dcbc; sbb al, 0x8d; xchg al, bl; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0016de05: je 0x16de2d; add byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0016df43: je 0x16df50; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016dfee: je 0x16e018; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e085: je 0x16e0ad; add bh, al; add byte ptr [eax + eax], cl; add byte ptr [eax], al; pop ebx; ret; 
0x0016e599: je 0x16e5bf; or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x0016e5d1: je 0x16e5dc; sub esp, 0xc; push esi; call eax; 
0x0016e828: je 0x16e848; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016ea5f: je 0x16ea5a; call dword ptr [eax - 0x18]; 
0x0016ea08: je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x0016eb2b: je 0x16eb26; call dword ptr [eax - 0x18]; 
0x0016ec78: je 0x16ec73; call dword ptr [eax - 0x18]; 
0x0016ecd7: je 0x16ecd2; call dword ptr [eax - 0x18]; 
0x0016ed0e: je 0x16ed09; call dword ptr [eax - 0x18]; 
0x0016edf1: je 0x16ee17; sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ede8: je 0x16ee28; sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ee3f: je 0x16ee65; sbb al, 0x53; call dword ptr [eax]; 
0x0016ee7a: je 0x16ee88; xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0016f55c: je 0x16f557; call dword ptr [eax - 0x18]; 
0x001706b8: je 0x1706c0; add esp, 4; pop ebx; pop esi; ret; 
0x00170788: je 0x170790; add esp, 4; pop ebx; pop esi; ret; 
0x00170848: je 0x170850; add esp, 4; pop ebx; pop esi; ret; 
0x001715db: je 0x1715ec; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x00171885: je 0x1718ab; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00171ae0: je 0x171b06; inc eax; push ebp; call esi; 
0x00171c5d: je 0x171c85; add byte ptr [ecx], ch; ret; 
0x00171faf: je 0x171fba; sub esp, 0xc; push esi; call eax; 
0x00171f88: je 0x1720c8; mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0017210f: je 0x17210a; call dword ptr [eax - 0x18]; 
0x001721b8: je 0x1721de; adc al, ch; cmp eax, 0x81000154; ret; 
0x001721ec: je 0x1721fa; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001722dd: je 0x1722d8; call dword ptr [eax - 0x18]; 
0x001729f5: je 0x1729f0; call dword ptr [eax - 0x18]; 
0x00172a61: je 0x172a5c; call dword ptr [eax - 0x18]; 
0x00172c65: je 0x172c8d; add byte ptr [ebx + 0x5a8b0440], cl; and al, 0x83; ret 0x8b18; 
0x00172e4d: je 0x172e75; add byte ptr [ebx + 0x438b08ec], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x001733d8: je 0x1733fe; adc al, ch; sbb eax, 0x81000142; ret; 
0x001734b8: je 0x1734c3; sub esp, 0xc; push esi; call eax; 
0x00173499: je 0x1734d8; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x001734e5: je 0x1734e0; call dword ptr [eax - 0x18]; 
0x00173673: je 0x17367e; sub esp, 0xc; push edi; call eax; 
0x00173890: je 0x17388b; call dword ptr [eax - 0x18]; 
0x00173d87: je 0x173d82; call dword ptr [eax - 0x18]; 
0x00173e7b: je 0x173e76; call dword ptr [eax - 0x18]; 
0x001744fa: je 0x174520; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00174728: je 0x17474e; inc eax; push ebp; call esi; 
0x00174a1d: je 0x174a28; sub esp, 0xc; push ebp; call eax; 
0x001749ff: je 0x174b08; mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00174b90: je 0x174b8b; call dword ptr [eax - 0x18]; 
0x00174db8: je 0x174dc6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00174f79: je 0x174f9f; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x00175393: je 0x1753b9; or al, 0xe8; xor eax, 0x83fffc71; les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x00174f88: je 0x175420; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x00175589: je 0x1755a2; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00175753: je 0x175800; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0017589e: je 0x175899; call dword ptr [eax - 0x18]; 
0x00175d3d: je 0x175d63; cmp al, 0x55; push edi; push esi; push eax; call dword ptr [edx]; 
0x00175e98: je 0x175ef5; pop edi; ret; 
0x001763ed: je 0x1763fe; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001767d8: je 0x1767fe; sbb al, ch; sbb eax, 0x8100010e; ret; 
0x00176be4: je 0x176bf0; pop ebx; pop esi; pop edi; ret; 
0x00176c5e: je 0x176c68; pop ebx; pop esi; pop edi; ret; 
0x00176c65: je 0x176c8d; add byte ptr [ebx + 0x17c83], cl; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00176cee: je 0x176d00; pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x00176d7e: je 0x176d90; pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x00176e0e: je 0x176e20; pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00176fe8: je 0x176ff0; add esp, 4; pop ebx; pop esi; ret; 
0x001770c5: je 0x1770ed; add byte ptr [ecx - 0x7cf3dbac], cl; in al, dx; or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x001771d5: je 0x1771fd; add byte ptr [ecx + 0xb4a9], cl; add bl, ch; ret; 
0x001775dd: je 0x177605; add byte ptr [ebx + 0x438b08ec], al; or bh, bh; je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x001775e7: je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x0017771a: je 0x177740; sbb al, 0x53; call eax; 
0x001777e6: je 0x17780c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00177a7f: je 0x177a98; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x00177bac: je 0x177bba; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00177c9d: je 0x177c98; call dword ptr [eax - 0x18]; 
0x00178172: je 0x17816d; call dword ptr [eax - 0x18]; 
0x001781b6: je 0x1781b1; call dword ptr [eax - 0x18]; 
0x001781ff: je 0x1781fa; call dword ptr [eax - 0x18]; 
0x001782d5: je 0x1782e3; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x0017835b: je 0x178393; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x00178545: je 0x178540; call dword ptr [eax - 0x18]; 
0x00178ab5: je 0x178ab0; call dword ptr [eax - 0x18]; 
0x00178b08: je 0x178b03; call dword ptr [eax - 0x18]; 
0x00178b47: je 0x178b42; call dword ptr [eax - 0x18]; 
0x00178bb6: je 0x178bb1; call dword ptr [eax - 0x18]; 
0x00178d65: je 0x178d8d; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00179135: je 0x179130; call dword ptr [eax - 0x18]; 
0x001791c3: je 0x1791e0; sub esp, 4; push -1; push ebp; push esi; call edi; 
0x00179265: je 0x179290; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00179355: je 0x179380; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00179975: je 0x1799a0; cmp eax, 2; sete al; movzx eax, al; ret; 
0x00179a20: je 0x179a46; adc byte ptr [ebx - 0x75], bl; inc eax; or al, 0x5e; pop edi; jmp eax; 
0x00179a59: je 0x179a7f; adc byte ptr [ebx - 0x75], bl; inc eax; or byte ptr [esi + 0x5f], bl; jmp eax; 
0x00179bd1: je 0x179bcc; call dword ptr [eax - 0x18]; 
0x00179deb: je 0x179de6; call dword ptr [eax - 0x18]; 
0x0017a60b: je 0x17a631; xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0017a67a: je 0x17a636; stc; call dword ptr [eax - 0x73]; 
0x0017a66e: je 0x17a669; call dword ptr [eax - 0x18]; 
0x0017ad2a: je 0x17ad25; call dword ptr [eax - 0x18]; 
0x0017ad1d: je 0x17ad43; adc byte ptr [ebp - 0x69a3f7a], cl; call dword ptr [eax - 0x73]; 
0x0017b526: je 0x17b54c; xor byte ptr [ecx], ch; ret 0x5356; 
0x0017bd26: je 0x17bd4c; xor byte ptr [ecx], ch; ret 0x5356; 
0x0017e005: je 0x17e02b; jo 0x17e032; ret; 
0x0017fe8e: je 0x17fea0; add esp, 4; pop ebx; pop esi; ret; 
0x0017fef2: je 0x17ff18; sbb byte ptr [ebp - 0x6996c80], cl; call dword ptr [eax - 0x18]; 
0x0018146d: je 0x181495; add byte ptr [ecx], dh; test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00183fec: je 0x183fe0; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00184065: je 0x184090; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x001840ec: je 0x184110; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x001842c1: je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00185bcf: je 0x185bf5; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00185f2f: je 0x185f55; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x001872ba: je 0x1872d4; cmp al, 4; jne 0x249d3; mov eax, 8; add esp, 0xc; ret; 
0x001877ad: je 0x1877d5; add byte ptr [ecx], dh; rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x001877e1: je 0x1877fb; sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00187845: je 0x187853; lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x001878c5: je 0x1878d0; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00188155: je 0x188160; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x00188d71: je 0x188d80; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00188df7: je 0x188e10; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0018901f: je 0x189030; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001892d8: je 0x1892fe; adc al, ch; sbb eax, 0x81ffffe3; ret; 
0x001895b6: je 0x1895dc; and byte ptr [ebx + 0x568b1446], cl; adc byte ptr [ecx], bh; ret 0x4d72; 
0x0018df6e: je 0x18df94; sub al, 0xe8; cmp bh, ah; idiv edi; add esp, 0x2c; ret; 
0x0018df9e: je 0x18dfc4; sub al, 0xe8; or bh, ah; idiv edi; add esp, 0x2c; ret; 
0x00190782: je 0x1907a8; sub al, 0xff; je 0x1907ac; sub al, 0xe8; ret 0xfcd4; 
0x00190786: je 0x1907ac; sub al, 0xe8; ret 0xfcd4; 
0x0019085c: je 0x190882; sub al, 0xe8; dec esp; ljmp 0xc019:0xd8f7fffc; add esp, 0x2c; ret; 
0x0019150c: je 0x191510; mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019271d: je 0x192730; call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019471d: je 0x194730; call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019670f: je 0x196730; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019883d: je 0x198865; add bh, dh; ret 0xf; 
0x00198952: je 0x198970; call 0x1875fd; add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00199932: je 0x199950; call 0x1875fd; add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019a932: je 0x19a950; call 0x1875fd; add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019b93d: je 0x19b965; add bh, dh; ret 0xf; 
0x0019cd7d: je 0x19cda5; add byte ptr [edi], cl; mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0019cdcd: je 0x19cdf5; add byte ptr [edi], cl; mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x0019ce2d: je 0x19ce55; add byte ptr [eax + 1], bh; ja 0x19ce39; neg eax; ret; 
0x0019e67d: je 0x19e6a5; add byte ptr [esi + 0x5f], bl; pop ebx; pop ebp; xor eax, eax; ret; 
0x001a3a6d: je 0x1a3a95; add byte ptr [eax + 1], bh; ja 0x1a3a79; neg eax; ret; 
0x001a3f1d: je 0x1a3f30; pop ebx; mov eax, 1; ja 0x1a3f29; neg eax; ret; 
0x001a3f3d: je 0x1a3f65; add byte ptr [edx + 0xe], dh; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a575d: je 0x1a5740; add eax, ecx; pop ebx; pop esi; ret; 
0x001a588d: je 0x1a58b5; add byte ptr [ecx], dh; fisttp dword ptr [ecx + 0x5f5e5bd8]; ret; 
0x001a5904: je 0x1a5920; mov eax, 1; jg 0x1a5910; neg eax; ret; 
0x001a5c76: je 0x1a5c90; mov eax, 1; ja 0x1a5c81; neg eax; ret; 
0x001a757d: je 0x1a75a5; add dh, dh; ret 0x7510; 
0x001a87c2: je 0x1a87cd; pmovmskb eax, xmm1; test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x001a8cd2: je 0x1a8d30; bsr edi, edi; add eax, edi; pop edi; ret; 
0x001a9607: je 0x1a970a; mov eax, 4; pop edi; ret; 
0x001a9660: je 0x1a971e; mov eax, 8; pop edi; ret; 
0x001a96b0: je 0x1a9732; mov eax, 0xc; pop edi; ret; 
0x001a96e2: je 0x1a9746; cmp byte ptr [edx + 0xf], 0; je 0x1a9746; mov eax, 0x10; pop edi; ret; 
0x001a96e8: je 0x1a9746; mov eax, 0x10; pop edi; ret; 
0x001a9ee2: je 0x1a9ef0; test al, 1; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x001a9edd: je 0x1a9f05; add byte ptr [eax + eax*8 + 0x1a80c74], al; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x001a9f7b: je 0x1a9f0a; je 0x1a9fa5; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a9eed: je 0x1a9f15; add dh, dh; les eax, ptr [ecx]; jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x001a9f7d: je 0x1a9fa5; add byte ptr [ebp - 0x37af037], al; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001aa0cc: je 0x1aa064; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa190: je 0x1aa170; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa1a3: je 0x1aa170; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa18b: je 0x1aa1a0; and eax, 1; je 0x1aa170; lea eax, [edi - 0x10]; pop edi; ret; 
0x001abefb: je 0x1abf21; adc byte ptr [ecx], dh; fld xword ptr [ecx]; ret 0xe2c1; 
0x001ad979: je 0x1ad99f; js 0x1ad9b6; ret; 
0x001aea77: je 0x1aeab2; ret 0x840f; 
0x001af2d3: je 0x1af2f9; adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc209; 
0x001b0b81: je 0x1b0ba7; js 0x1b0bbe; ret 0x840f; 
0x001b3c99: je 0x1b3cbf; or al, 0x85; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x001b4879: je 0x1b4885; fld1; fdiv dword ptr [edx - 0x63d74]; fstp st(0); add esp, 0x20; ret; 
0x0002325a: je 0x23255; call dword ptr [eax - 0x18]; 
0x0002439f: je 0x243bc; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x000244b8: je 0x244de; sbb al, 0xe8; ret 0xffff; 
0x0017380c: je 0x2493f; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00024b16: je 0x24b19; ret; 
0x00024d4e: je 0x24d74; adc al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00024d73: je 0x24d8b; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00024de4: je 0x24e0a; inc eax; push dword ptr [esp + 0x40]; call esi; 
0x00024de8: je 0x24e0e; inc eax; call esi; 
0x00024ddd: je 0x24e1c; sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00024e3b: je 0x24e61; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x00024e3f: je 0x24e65; inc eax; call ecx; 
0x00024ea5: je 0x24ecb; inc eax; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x00024ea9: je 0x24ecf; inc eax; call dword ptr [esi]; 
0x000256f0: je 0x25716; add al, 0x8d; xchg al, bl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00025d0b: je 0x25d31; pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00025d10: je 0x25d36; xor bh, bh; jae 0x25d1a; call edi; 
0x000260d2: je 0x260e7; sub esp, 0xc; push esi; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x00027035: je 0x2704a; sub esp, 0xc; push edi; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x0002859e: je 0x285c4; pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000285a2: je 0x285c8; pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000285a6: je 0x285cc; pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00028ac4: je 0x28aea; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x00028ac8: je 0x28aee; push 0x702474ff; call ebx; 
0x00029146: je 0x2916c; pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002914a: je 0x29170; pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00029710: je 0x29736; insb byte ptr es:[edi], dx; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x00029714: je 0x2973a; push 0x702474ff; call edi; 
0x00029dde: je 0x29e04; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x00029de2: je 0x29e08; pop esp; call edi; 
0x0002a0a2: je 0x2a0c8; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0002a0e5: je 0x2a10b; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0002a10d: je 0x2a133; cmp al, 0x8d; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0002a305: je 0x2a32b; pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002a309: je 0x2a32f; pushal; call esi; 
0x0002aec3: je 0x2aee9; pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002aec7: je 0x2aeed; pushal; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002bb6a: je 0x2bb90; push 0x682474ff; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb6e: je 0x2bb94; push 0x5824448b; call eax; 
0x0002c9ad: je 0x2c9d3; pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002c9b1: je 0x2c9d7; pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002d1d4: je 0x2d1fa; push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002d1d8: je 0x2d1fe; mov eax, dword ptr fs:[esp + 0x58]; call eax; 
0x0002de39: je 0x2de5f; pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002de3d: je 0x2de63; pop eax; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e681: je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x0002f3fd: je 0x2f423; pop eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002f401: je 0x2f427; push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002f405: je 0x2f42b; pop esp; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002f551: je 0x2f577; push esp; push dword ptr [esp + 0x5c]; call edi; 
0x0002f555: je 0x2f57b; pop esp; call edi; 
0x0002f7af: je 0x2f7d2; sub esp, 0xc; push ebx; call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x0003003e: je 0x30048; add esp, 8; pop ebx; ret; 
0x00030039: je 0x30048; cmp eax, 3; je 0x30048; add esp, 8; pop ebx; ret; 
0x00030aa0: je 0x30a9b; call dword ptr [eax + 0x56]; 
0x00031d96: je 0x31e0b; stc; call dword ptr [eax - 0x18]; 
0x0003305d: je 0x33085; add byte ptr [ebx + 0x440f06f8], al; ret 0xc89; 
0x000337ef: je 0x337ea; call dword ptr [eax + 0x56]; 
0x00033a79: je 0x33a7d; call edx; 
0x00033d55: je 0x33d59; call eax; 
0x00034029: je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0003435c: je 0x34357; call dword ptr [esi + 0x50]; 
0x0003435b: je 0x343d1; stc; call dword ptr [esi + 0x50]; 
0x00034628: je 0x34623; call dword ptr [eax - 0x73]; 
0x0003462f: je 0x3462a; call dword ptr [eax - 0x18]; 
0x0003516f: je 0x35176; cmp byte ptr [eax], 0; jne 0x35180; mov eax, edx; add esp, 0xc; ret; 
0x000351af: je 0x351b6; cmp byte ptr [eax], 0; jne 0x351c0; mov eax, edx; add esp, 0xc; ret; 
0x0003523a: je 0x35260; sbb byte ptr [edx], ch; call 0x351e0; add esp, 0x1c; ret; 
0x00036284: je 0x362aa; sbb byte ptr [ebp - 0x18], dl; ret; 
0x00036842: je 0x36868; sub byte ptr [edx], ch; call 0x367d0; add esp, 0x2c; ret; 
0x0003733d: je 0x37365; add byte ptr [ecx - 0x7cbbdb94], cl; ret; 
0x00039df6: je 0x39e1c; and al, 0xe8; ret 0xfff5; 
0x0003bc97: je 0x3bc9b; fchs; ret; 
0x0003c037: je 0x3c03b; fchs; ret; 
0x0003cd57: je 0x3cd7d; sub al, 0xe8; mov cl, 0x23; add eax, 0x2cc48300; ret; 
0x0003d385: je 0x3d397; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0003d7e9: je 0x3d800; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003e2ac: je 0x3e2d2; sbb al, 0xe8; pushfd; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0003e7e9: je 0x3e80f; adc al, 0x89; ret 0x748b; 
0x0003ec2f: je 0x3ec55; sbb al, 0xe8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0003eff4: je 0x3ef79; in al, dx; or byte ptr [edx], ch; push edx; call eax; 
0x0003f34c: je 0x3f372; sbb byte ptr [eax + 0x50], dl; call 0x3f3b0; add esp, 0x1c; ret; 
0x0003f535: je 0x3f55b; dec esp; call eax; 
0x000413df: je 0x41405; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00041494: je 0x414ba; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0004150c: je 0x41532; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000415c4: je 0x415ea; or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0004246b: je 0x42478; add esp, 8; pop ebx; ret; 
0x00042ddd: je 0x42e05; add byte ptr [eax + 1], bh; xor edx, edx; pop ebx; ret; 
0x00042e4a: je 0x42e59; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042e6a: je 0x42e79; bsr ecx, eax; mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042eab: je 0x42eb1; mov eax, edx; xor edx, edx; ret; 
0x00042efb: je 0x42f03; bsr eax, eax; add eax, 1; ret; 
0x00042f1a: je 0x42f22; bsr eax, eax; add eax, 1; ret; 
0x00042f3a: je 0x42f42; bsr eax, eax; add eax, 1; ret; 
0x00042fab: je 0x42fb3; bsr eax, eax; add eax, 1; ret; 
0x000431ca: je 0x431d5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000431ea: je 0x431f5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00043215: je 0x43230; bsr eax, edx; xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x000432fd: je 0x43325; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x0004334c: je 0x43358; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000433bb: je 0x433d0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x000433c5: je 0x433ed; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x000433ed: je 0x433f9; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004342d: je 0x43438; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004344d: je 0x43458; not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043482: je 0x43490; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0004349d: je 0x434c5; add byte ptr [ecx], dh; leave; pop ebx; mov eax, ecx; ret; 
0x00043595: je 0x435a0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000435c0: je 0x435c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000435e0: je 0x435e8; bsr eax, edx; xor eax, 0x1f; ret; 
0x00043645: je 0x43650; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00043670: je 0x4367b; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x0004368f: je 0x43697; bsr eax, edx; xor eax, 0x1f; ret; 
0x000436af: je 0x436b7; bsr eax, edx; xor eax, 0x1f; ret; 
0x00043710: je 0x4371b; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000437a4: je 0x437b0; pop ebx; ret; 
0x00043860: je 0x43868; pop ebx; ret; 
0x00043865: je 0x4388d; add bl, dh; bsf ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000438d4: je 0x438fa; sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000470fa: je 0x47120; sbb al, 0xe8; dec byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0004781d: je 0x47845; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0004996d: je 0x49993; or al, 0x89; ret; 
0x0004a53a: je 0x4a5b2; stc; call dword ptr [eax - 0x18]; 
0x0004abd5: je 0x4abfd; add cl, bl; test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x0004acdd: je 0x4ad05; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0004b4c6: je 0x4b4c9; ret; 
0x0004d679: je 0x4d6f1; stc; call dword ptr [eax - 0x18]; 
0x0004d97e: je 0x4d9a4; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0004e75d: je 0x4e785; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x0005142d: je 0x514a5; stc; call dword ptr [eax - 0x18]; 
0x00051630: je 0x51656; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000516ae: je 0x516d4; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0005207e: je 0x520a4; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0005275e: je 0x52784; sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000562dd: je 0x56305; add byte ptr [ebx - 0x7cfb78a4], cl; ret; 
0x00059ce6: je 0x59d5e; stc; call dword ptr [eax - 0x18]; 
0x0005a11b: je 0x5a141; sbb al, 0x89; ret 0xc801; 
0x0005ab25: je 0x5ab57; stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x0005ab39: je 0x5abaf; jns 0x5ab03; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005ab3a: je 0x5abb5; mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x0005ac13: je 0x5ac39; sbb al, 0xe8; aad 0xb4; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0005ad62: je 0x5ad70; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0005ad5d: je 0x5ad85; add byte ptr [ebp - 0x7cf38b40], al; call 0x448366b; ret; 
0x0005b118: je 0x5b13e; sbb byte ptr [ebx + 0x16c80], cl; add bh, bh; xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x0005b7a0: je 0x5b7b0; add esp, 0xc; ret; 
0x0005bc9d: je 0x5bcc3; or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0005fd39: je 0x5fd5f; sub byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x000606b5: je 0x606b0; call dword ptr [eax - 0x18]; 
0x00060710: je 0x6070b; call dword ptr [eax - 0x18]; 
0x000609bd: je 0x609e5; add byte ptr [eax - 0x73], dl; cmp dword ptr [eax + 0x53], -7; call dword ptr [eax + 0x6a]; 
0x00060b23: je 0x60b1e; call dword ptr [eax - 0x18]; 
0x00061409: je 0x61430; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000614f2: je 0x61518; sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x00061cc9: je 0x61cef; adc byte ptr [ebx - 0x6c72f714], al; jge 0x61d03; stc; call dword ptr [esi + 0x52]; 
0x00062b79: je 0x62b9f; sbb byte ptr [ebp - 0x6823f7a], cl; call dword ptr [eax - 0x73]; 
0x00064147: je 0x6416d; sub al, 1; ret; 
0x00064991: je 0x649b7; and byte ptr [ebx], al; mov word ptr [esi - 0x73e94], es; jmp ecx; 
0x00066582: je 0x665a8; sbb al, 0xe8; jbe 0x66588; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0006cccd: je 0x6ccf5; add byte ptr [ecx], bh; ret 0x840f; 
0x0006eb61: je 0x6eb87; sbb byte ptr [ebp - 0x6823f7a], cl; call dword ptr [eax - 0x73]; 
0x00070270: je 0x70296; sub al, 1; ret; 
0x00072c22: je 0x72c48; sbb al, 0xe8; jbe 0x72c28; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00079590: je 0x795a0; add esp, 0xc; ret; 
0x000796a6: je 0x796e5; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0007c5c3: je 0x7c5dc; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0007c623: je 0x7c649; xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x0007c639: je 0x7c650; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x0007c67a: je 0x7c690; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007d9dd: je 0x7da05; add byte ptr [ebx + 0x106a04ec], al; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007dae2: je 0x7daf0; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x0007dc02: je 0x7dc10; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x0007e138: je 0x7e140; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007f7e8: je 0x7f80e; adc al, 0xe8; or eax, 0x8100107e; ret; 
0x0007fc7d: je 0x7fca5; add dh, dh; ret 0x7420; 
0x00080145: je 0x8016d; add byte ptr [ecx - 0x76207622], cl; ret 0xcb89; 
0x00080f72: je 0x80f98; or byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x000813f5: je 0x8141d; add al, ch; ret; 
0x000817d8: je 0x817fe; adc al, ch; sbb eax, 0x8100105e; ret; 
0x0008184a: je 0x81870; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008199a: je 0x819c0; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x00081ba3: je 0x81ba8; and dword ptr [esi], 0xffffffef; pop ebx; pop esi; pop edi; ret; 
0x00081bfd: je 0x81c02; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x00081c76: je 0x81c88; cmp ecx, edx; jb 0x81c70; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00081de8: je 0x81e0e; adc al, ch; or eax, 0x81001058; ret; 
0x000826d5: je 0x826fd; add byte ptr [eax - 1], bh; ret; 
0x00083270: je 0x83296; adc byte ptr [ebx - 0x3b7cefc0], cl; add al, 0x5b; pop esi; jmp eax; 
0x00083bdd: je 0x83c05; add byte ptr [ecx], dh; fstp xword ptr [ecx]; ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000845ed: je 0x84615; add byte ptr [eax - 1], bh; ret; 
0x00084e27: je 0x84e38; mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84e38; ret; 
0x000859d8: je 0x859fe; adc al, ch; sbb eax, 0x8100101c; ret; 
0x00086293: je 0x86298; mov byte ptr [edx], 0; pop ebx; ret; 
0x00087ea2: je 0x87eb0; sub eax, 1; mov dword ptr [edx + 0x1a98], eax; ret; 
0x00088215: je 0x8823d; add byte ptr [ecx + 0x5bd889fb], cl; pop esi; pop edi; ret; 
0x00088515: je 0x8853d; add byte ptr [ebx + 0x408b0850], cl; adc byte ptr [ecx + 0x39082444], cl; ret 0x8c74; 
0x000893cb: je 0x893f1; or byte ptr [ebp - 0x67c4f7a], cl; call dword ptr [eax - 0x73]; 
0x0008941d: je 0x89443; or byte ptr [ebp - 0x67c4f7a], cl; call dword ptr [eax - 0x73]; 
0x00089597: je 0x895a0; pop ebx; pop esi; pop edi; ret; 
0x00089a46: je 0x89a6c; adc al, 0x8b; adc esi, esi; ret 0xf08; 
0x0008a61e: je 0x8a644; sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0008ad0d: je 0x8ad33; cmp al, 0x55; call dword ptr [esi + 0x20]; 
0x0008add6: je 0x8ae50; sub eax, 1; mov dword ptr [ebx + 0x1ab8], eax; add esp, 8; pop ebx; ret; 
0x0008ba30: je 0x8ba56; adc byte ptr [ebx - 0x75], bl; inc edi; adc byte ptr [esi + 0x5f], bl; jmp eax; 
0x0008bc00: je 0x8bc26; adc byte ptr [ebx - 0x75], bl; inc edi; adc al, 0x5e; pop edi; jmp eax; 
0x0008c291: je 0x8c2b7; cmp byte ptr [edx], ch; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0008c421: je 0x8c437; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008c776: je 0x8c788; cmp ecx, edx; jb 0x8c770; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008d316: je 0x8d328; cmp eax, edx; jne 0x8d310; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008d5c5: je 0x8d5ed; add byte ptr [ebx - 0x7f97f314], al; add byte ptr [eax], al; add al, ch; ret; 
0x0008d7a2: je 0x8d7b0; sub eax, 1; mov dword ptr [edx + 0x1ab8], eax; ret; 
0x0008daad: je 0x8dad3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0008dabb: je 0x8dae1; sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x0008e0a5: je 0x8e0cd; add byte ptr [eax - 1], bh; ret; 
0x0008e137: je 0x8e150; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0008e223: je 0x8e238; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008e9d5: je 0x8e9fb; sub al, 0xff; je 0x8e9ff; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008e9d9: je 0x8e9ff; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x0008eaf5: je 0x8eaf0; call dword ptr [eax - 0x18]; 
0x0008eb47: je 0x8eb6d; xor bh, bh; je 0x8eb71; cmp al, 0x51; call eax; 
0x0008eb4b: je 0x8eb71; cmp al, 0x51; call eax; 
0x0008ec1f: je 0x8ec45; xor byte ptr [edx + 0x51], dl; call eax; 
0x0008ed20: je 0x8ed46; sub al, 0x52; push ecx; push edi; call eax; 
0x0008eec8: je 0x8eeee; and al, 0x51; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008f1f8: je 0x8f208; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008f2ed: je 0x8f300; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008f3a6: je 0x8f3b0; ret; 
0x0008fa13: je 0x8fac0; mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008fb72: je 0x8fb78; add esp, 0xc; ret; 
0x0008fc75: je 0x8fc9d; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00090042: je 0x90020; sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0009031a: je 0x90328; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00090325: je 0x9034d; add byte ptr [ebx - 0x74dbdbbc], cl; pop eax; or al, 0xe8; mov esp, 0x3900060b; ret; 
0x0009065d: je 0x90698; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00090bfd: je 0x90c10; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0009105f: je 0x91070; test edx, edx; jne 0x91080; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0009118a: je 0x911a0; cmp eax, 1; mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00091304: je 0x91338; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009139d: je 0x913c5; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00091619: je 0x91628; add esp, 4; pop ebx; pop esi; ret; 
0x00091d47: je 0x91d78; mov eax, edi; call dword ptr gs:[0x10]; 
0x00092160: je 0x92170; pop ebx; pop esi; pop edi; ret; 
0x000921d9: je 0x921e0; pop ebx; pop esi; pop edi; ret; 
0x00092dee: je 0x92e4c; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0009306e: je 0x93074; add byte ptr [eax], al; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00093356: je 0x9337e; mov ecx, dword ptr [ebp - 0x60]; mov eax, edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00093d2c: je 0x938cc; and ebx, 0x20; jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0009409b: je 0x938cc; and esi, 0x40; jne 0x938cc; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009465f: je 0x94685; sub al, 0xe8; stc; ret; 
0x00094828: je 0x9484e; adc al, 0xe8; pushal; ret; 
0x0009519d: je 0x951c5; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0009716d: je 0x97195; add bh, dh; ret 0; 
0x00098413: je 0x98420; mov eax, 0x16; ret; 
0x0009841d: je 0x98445; add byte ptr [ecx + 8], al; xor byte ptr [ecx], 0xc0; ret; 
0x0009843e: je 0x98450; cmp edx, 1; jne 0x98460; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000984c1: je 0x984d5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0009859d: je 0x985e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x000986a0: je 0x986b0; xor eax, eax; add esp, 0xc; ret; 
0x00099832: je 0x99838; test al, 1; jne 0x9980a; mov eax, 0x10; pop ebx; ret; 
0x0009981e: je 0x99840; mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00099a0b: je 0x99988; mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009a155: je 0x9a17b; adc al, 0x89; ret 0xe283; 
0x0009a185: je 0x9a1ad; add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0009a17c: je 0x9a1cc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009a265: je 0x9a28b; adc al, 0x89; ret 0xe283; 
0x0009a29d: je 0x9a2c5; add byte ptr [ebx - 0x48], bl; push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0009a294: je 0x9a2dc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009a8a6: je 0x9a8cc; sbb al, 0x89; ret; 
0x0009a9a7: je 0x9a9aa; ret; 
0x0009aa8c: je 0x9aab2; sub al, 0x52; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x0009aa9d: je 0x9aac5; add byte ptr [eax + 0x10], bh; add esp, 0xc; ret; 
0x0009ab1b: je 0x9aaf0; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009aae9: je 0x9aaf8; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009ad81: je 0x9ad90; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0009aff5: je 0x9b01d; add byte ptr [ebx + 0x685504ec], al; ret 0xa00; 
0x0009b272: je 0x9b291; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009b2e3: je 0x9b2f0; ret; 
0x0009b65c: je 0x9b682; and byte ptr [ebx - 0x17e3dba4], cl; sub byte ptr [ebx - 8], bh; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0009b83b: je 0x9b810; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009b809: je 0x9b818; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009bbab: je 0x9bb80; mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009bb79: je 0x9bb88; lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009bdee: je 0x9be14; sub byte ptr [ebx - 0x74d3db84], cl; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x0009cd2a: je 0x9cd50; sbb al, 0xe8; fidiv word ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x0009d414: je 0x9d3d2; pop ebx; pop esi; ret; 
0x0009d3f1: je 0x9d440; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0009d559: je 0x9d57f; and byte ptr [ebx - 0x17e3dba4], cl; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x0009dab5: je 0x9daa2; mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9dab0; pop ebx; ret; 
0x0009da9e: je 0x9dab3; xor eax, eax; pop ebx; ret; 
0x0009f5ee: je 0x9f614; sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0009f90f: je 0x9f950; mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000a05ea: je 0xa0610; sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a05e3: je 0xa0658; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a065d: je 0xa0683; add al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0d77: je 0xa0db5; add byte ptr [eax], al; ret; 
0x000a113d: je 0xa1165; add byte ptr [ebx + 0x528b0442], cl; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x000a1400: je 0xa138d; stc; call dword ptr [eax + 0x6a]; 
0x000a2316: je 0xa2330; pop ebx; pop esi; pop edi; ret; 
0x000a25c9: je 0xa25d0; add esp, 0xc; ret; 
0x000a25ed: je 0xa2615; add byte ptr [ebp - 0x77], dl; ret 0x5657; 
0x000a2a16: je 0xa2a3c; adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2a39: je 0xa2a5f; adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2a5c: je 0xa2a82; adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2a7f: je 0xa2aa5; adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2aa2: je 0xa2ac8; adc al, 0x8d; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000a2b2b: je 0xa2b51; adc al, 0x8d; xchg byte ptr [ecx + ebx*4], ch; stc; call dword ptr [eax - 0x73]; 
0x000a4736: je 0xa475c; or byte ptr [ebp + 0x94c9f], cl; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000a71ff: je 0xa71fa; call dword ptr [eax - 0x18]; 
0x000a73ed: je 0xa74c8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a7500: je 0xa7510; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000a8197: je 0xa8192; call dword ptr [eax - 0x18]; 
0x000a87d8: je 0xa87fe; sbb al, ch; sbb eax, 0x81000dee; ret; 
0x000a8e8d: je 0xa8eb5; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000a9bff: je 0xa9c17; lea eax, [edx - 0xac174]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x000aa388: je 0xaa3ae; or byte ptr [ecx], al; ret 0xfe83; 
0x000aaa46: je 0xaaa4d; cmp cl, dl; je 0xaaa4d; inc eax; pop edi; ret; 
0x000aaa4a: je 0xaaa4d; inc eax; pop edi; ret; 
0x000aaab6: je 0xaaadc; sbb al, 0xe8; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000abcb8: je 0xabcde; adc al, ch; cmp eax, 0x81000db9; ret; 
0x000abce7: je 0xabce0; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000abd84: je 0xabd7f; call dword ptr [eax - 0x18]; 
0x000ac1f9: je 0xac1ff; cmp eax, ebx; jne 0xac1f0; mov eax, edx; pop ebx; ret; 
0x000ac2c9: je 0xac2c0; pop ebx; ret; 
0x000ac2f9: je 0xac2f0; cmp edx, esi; je 0xac2f0; pop ebx; pop esi; ret; 
0x000ac2fd: je 0xac2f0; pop ebx; pop esi; ret; 
0x000ac39d: je 0xac3b0; cmp eax, ecx; jne 0xac390; mov eax, edx; pop ebx; ret; 
0x000acd5e: je 0xacd59; call dword ptr [eax + 0x55]; 
0x000acd99: je 0xacd94; call dword ptr [eax - 0x18]; 
0x000ad19d: je 0xad1c3; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000ad73d: je 0xad763; sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b1e2d: je 0xb1e55; add byte ptr [edx - 0x76fd77ff], cl; clc; pop edi; ret; 
0x000b3d08: je 0xb3d0c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b3e3d: je 0xb3e65; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b3ecd: je 0xb3ef5; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3edd: je 0xb3f05; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3eed: je 0xb3f15; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b4c1a: je 0xb4050; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b4bbf: je 0xb40d0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b828d: je 0xb82b5; add byte ptr [ecx + 0x4518811], cl; pop ebx; ret; 
0x000b831d: je 0xb8345; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b832d: je 0xb8355; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b833d: je 0xb8365; add byte ptr [esi + 0xf], ah; adc eax, dword ptr [ecx]; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b9d28: je 0xb9d32; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ba46d: je 0xba495; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ba47d: je 0xba4a5; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000ba71d: je 0xba745; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000bbb5d: je 0xbbb85; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bbb6d: je 0xbbb95; add byte ptr [eax + 0x5b5e5f17], cl; ret; 
0x000bbe1d: je 0xbbe45; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000bd71d: je 0xbd745; add byte ptr [eax + 0x18b047a], cl; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000c1102: je 0xc10a3; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c16bd: je 0xc16e5; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c189f: je 0xc1a00; bsr eax, eax; add eax, edi; pop edi; ret; 
0x000c1a0d: je 0xc1a35; add byte ptr [ebx + 0x5e], bl; pop edi; xor eax, eax; ret; 
0x000c1a57: je 0xc1a70; bsf ecx, ecx; sub edx, ecx; jbe 0xc1a90; add eax, ecx; ret; 
0x000c1c29: je 0xc1c7a; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1cdb: je 0xc1d2c; adc byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c1f72: je 0xc1f7d; pmovmskb eax, xmm1; test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x000c1fa0: je 0xc1feb; and byte ptr [esi + 0xf], ah; xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c205a: je 0xc2030; bsr ecx, edx; add eax, ecx; ret; 
0x000c20b2: je 0xc2110; bsr edi, edi; add eax, edi; pop edi; ret; 
0x000c229f: je 0xc22b0; bsf ecx, ecx; add eax, ecx; ret; 
0x000c22e8: je 0xc2300; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000c2428: je 0xc2474; xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c251f: je 0xc2500; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c259f: je 0xc2580; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c2771: je 0xc2774; inc eax; pop edi; ret; 
0x000c2915: je 0xc2918; inc eax; pop edi; pop esi; ret; 
0x000c2cc3: je 0xc2cd3; call ecx; 
0x000c2f2e: je 0xc2f34; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c3653: je 0xc3656; inc eax; sub eax, dword ptr [esp + 4]; ret; 
0x000c3776: je 0xc377f; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc3778; pop esi; ret; 
0x000c3824: je 0xc382d; or dword ptr [eax + 0x3cd0], 1; xor eax, eax; pop ebx; ret; 
0x000c4257: je 0xc427d; sbb byte ptr [edx], ch; call 0xc47a0; add esp, 0x1c; ret; 
0x000c4891: je 0xc48b7; sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x000c4a0f: je 0xc4a1a; mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000c5508: je 0xc550e; test edx, edx; jne 0xc5500; ret; 
0x000c5566: je 0xc558c; sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c6389: je 0xc6370; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c71d9: je 0xc71c0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000c742c: je 0xc7452; xor al, 0xff; je 0xc7456; inc eax; push ebp; call esi; 
0x000c7430: je 0xc7456; inc eax; push ebp; call esi; 
0x000c7b0a: je 0xc7b30; sbb al, 0xe8; mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000c9311: je 0xc9337; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000cab7e: je 0xcabf6; stc; call dword ptr [eax - 0x18]; 
0x000cadf8: je 0xcae1e; sbb al, 0xe8; and byte ptr [edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cb295: je 0xcb2bd; add cl, bl; test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x000cc021: je 0xcc047; xor byte ptr [ecx - 0x76227612], cl; ret; 
0x000cc135: je 0xcc15b; adc byte ptr [eax - 0x18], dl; ret 0x679; 
0x000cdb15: je 0xcdb8d; stc; call dword ptr [eax - 0x18]; 
0x000cdd80: je 0xcdda6; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000cddfe: je 0xcde24; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000ce518: je 0xce53e; sbb al, 0xe8; and byte ptr [eax], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cf6b5: je 0xcf6db; or byte ptr [eax - 0x18], dl; ret 0x643; 
0x000cf821: je 0xcf847; cmp byte ptr [ecx - 0x76227612], cl; ret; 
0x000cf935: je 0xcf95b; or byte ptr [eax - 0x18], dl; ret 0x641; 
0x000d1348: je 0xd13c0; stc; call dword ptr [eax - 0x18]; 
0x000d1650: je 0xd1676; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d16ce: je 0xd16f4; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d1f60: je 0xd1f86; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d1fde: je 0xd2004; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d2670: je 0xd2696; sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d26ee: je 0xd2714; sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x000d4c14: je 0xd4c1c; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000d4c75: je 0xd4c9d; add byte ptr [ecx], dh; fild dword ptr [ebp - 0x760d8b37]; ret; 
0x000d4dda: je 0xd4de8; mov eax, esi; pop ebx; pop esi; ret; 
0x000d5cd5: je 0xd5cfd; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x000d67ad: je 0xd67d5; add byte ptr [ebx - 0x366b7b], cl; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x000d8c7c: je 0xd8cf4; stc; call dword ptr [eax - 0x18]; 
0x000d9c5d: je 0xd9c85; add byte ptr [ebx + 0x4f391c4e], cl; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000d9d1d: je 0xd9d45; add byte ptr [edi + 0x5e], bl; ret; 
0x000d9ef7: je 0xd9f10; mov cl, dl; and cl, 0xf; je 0xd9f20; ret; 
0x000d9efe: je 0xd9f20; ret; 
0x000d9f15: je 0xd9f30; add eax, 2; ret; 
0x000d9f4d: je 0xd9f75; add byte ptr [eax + 1], bh; ret; 
0x000d9ff0: je 0xda010; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9fd8; add eax, 1; ret; 
0x000db29e: je 0xdb2c4; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db7b5: je 0xdb7db; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000dbdc8: je 0xdbdee; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000df02e: je 0xdf0a0; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000df171: je 0xdf1c0; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000df1bd: je 0xdf1e5; add byte ptr [eax + 0x68], bh; mov edx, esi; call dword ptr gs:[0x10]; 
0x000e09ba: je 0xe09e0; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e0a51: je 0xe0a77; sub byte ptr [ebx - 0x72dbdbbc], cl; sub byte ptr [ebx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e1445: je 0xe146b; adc al, 0xf; inc edx; ret 0x4c80; 
0x000e1dad: je 0xe1dd3; cmp byte ptr [ecx - 0x16bfdbbc], cl; xchg edi, eax; in al, 0xff; push esi; ret; 
0x000e21ec: je 0xe2212; jns 0xe2179; ret 0x448b; 
0x000e22a1: je 0xe22c7; jns 0xe222e; ret 0x448b; 
0x000e2322: je 0xe2348; jns 0xe22af; ret 0x448b; 
0x000e2fe2: je 0xe3008; or al, 0x8d; xchg al, dl; sahf; stc; call dword ptr [eax - 0x73]; 
0x000e629f: je 0xe62c5; xor byte ptr [ecx], ch; ret; 
0x000e73fa: je 0xe7420; cmp byte ptr [ecx], ch; ret 0xc889; 
0x000e79de: je 0xe79e8; add esp, 0xc; ret; 
0x000e7ace: je 0xe7ad8; add esp, 0xc; ret; 
0x000e7bf7: je 0xe7c1d; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e7dfc: je 0xe7daa; cmp eax, -0x26; jne 0xe7e40; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7d96: je 0xe7dc8; sub esp, 8; push esi; push ebx; call eax; 
0x000e7dd0: je 0xe7dec; sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000e871c: je 0xe8730; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x000e880b: je 0xe8831; and al, 0x83; jmp dword ptr [ebx + 0x77]; 
0x000e9138: je 0xe915e; adc al, ch; mov ebp, 0x810009e4; ret; 
0x000e9b36: je 0xe9ac0; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ea046: je 0xe9fd0; sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ea40a: je 0xea430; sub byte ptr [ecx], dh; not byte ptr [ebp - 0x18]; fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x000eaf1e: je 0xeaf44; sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ef887: je 0xef8ad; sbb al, 0x6a; add eax, ebp; das; ret 1; 
0x000efe73: je 0xefe6e; call dword ptr [eax - 0x18]; 
0x000efe73: je 0xefe6e; call dword ptr [eax - 0x18]; push ebx; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000f0423: je 0xf041e; call dword ptr [eax - 0x18]; 
0x000f0489: je 0xf0484; call dword ptr [eax - 0x18]; 
0x000f0524: je 0xf051f; call dword ptr [eax - 0x18]; 
0x000f0561: je 0xf055c; call dword ptr [eax - 0x18]; 
0x000f05ef: je 0xf05ea; call dword ptr [eax - 0x18]; 
0x000f0b79: je 0xf0b74; call dword ptr [eax - 0x18]; 
0x000f0c46: je 0xf0c41; call dword ptr [eax - 0x18]; 
0x000f0c89: je 0xf0c84; call dword ptr [eax - 0x18]; 
0x000f1045: je 0xf1014; pop ebx; ret; 
0x000f1085: je 0xf10ad; add byte ptr [eax + 1], bh; ret; 
0x000f1205: je 0xf122d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f1a3d: je 0xf1a56; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f3b55: je 0xf3b24; pop ebx; ret; 
0x000f3b95: je 0xf3bbd; add byte ptr [eax + 1], bh; ret; 
0x000f3d15: je 0xf3d3d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f454d: je 0xf4566; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f4945: je 0xf4914; pop ebx; ret; 
0x000f4985: je 0xf49ad; add byte ptr [eax + 1], bh; ret; 
0x000f4b05: je 0xf4b2d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f533d: je 0xf5356; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f7475: je 0xf7444; pop ebx; ret; 
0x000f74b5: je 0xf74dd; add byte ptr [eax + 1], bh; ret; 
0x000f7635: je 0xf765d; add byte ptr [ebx + 0x548d08ec], al; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f7e6d: je 0xf7e86; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8285: je 0xf8254; pop ebx; ret; 
0x000f82c5: je 0xf82ed; add byte ptr [eax + 1], bh; ret; 
0x000f8445: je 0xf846d; add byte ptr [ebx + 0x548d08ec], al; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8c7d: je 0xf8c96; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000fad3f: je 0xfad45; cmp al, 0x3f; jne 0xfad59; mov eax, 1; ret; 
0x000fb64d: je 0xfb5bf; cmp edx, 0x52654973; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb68e: je 0xfb5bf; cmp edx, 0xbd00bd0; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb5d6: je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb6a5: je 0xfb6cd; add byte ptr [eax + 0x40], bh; ret; 
0x000fb736: je 0xfb742; mov eax, 0xffffffff; ret; 
0x000fb712: je 0xfb742; xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000fb6e9: je 0xfb742; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000fb74e: je 0xfb742; xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x000fba41: je 0xfba2c; mov eax, 0xffffffff; ret; 
0x000fba7e: je 0xfba96; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fbb1a: je 0xfbb40; sub al, 0xff; je 0xfbb44; sub al, 0xe8; ljmp 0x2cc4:0x83fff935; ret; 
0x000fbb1e: je 0xfbb44; sub al, 0xe8; ljmp 0x2cc4:0x83fff935; ret; 
0x000fbb9b: je 0xfbbce; pop ebx; pop esi; pop edi; ret; 
0x000fbc25: je 0xfbc38; pop ebx; pop esi; ret; 
0x000fcf9d: je 0xfcfc5; add byte ptr [ecx], al; ret 0xec83; 
0x000fd135: je 0xfd15d; add byte ptr [edi], cl; xchg esp, eax; ret; 
0x000fd508: je 0xfd533; add esp, 4; pop ebx; pop esi; ret; 
0x000fd545: je 0xfd56d; add byte ptr [ebx - 0x3b7cc3ba], cl; add al, 0x5b; pop esi; ret; 
0x000fd676: je 0xfd5db; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000fe0b5: je 0xfe0dd; add byte ptr [ebx - 0x7c72f714], al; push ss; dec eax; stc; call dword ptr [eax + 0x55]; 
0x000ffecf: je 0xffef0; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001057fc: jecxz 0x105789; pop eax; add al, 0xf7; ret; 
0x00122c26: jecxz 0x122c27; jmp dword ptr [ebp - 0x75]; 
0x00127708: jecxz 0x12770a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012af76: jecxz 0x12af76; push dword ptr [ebx]; push esi; call edi; 
0x0012b0be: jecxz 0x12b0e9; ret; 
0x0012b1c9: jecxz 0x12b1f4; ret; 
0x00130255: jecxz 0x130253; add eax, ebx; pop ebx; pop esi; ret; 
0x00132b2e: jecxz 0x132b38; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00132bce: jecxz 0x132bd0; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00132c6e: jecxz 0x132c71; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00132d0e: jecxz 0x132d12; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013302e: jecxz 0x133034; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00133570: jecxz 0x13357a; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001335f0: jecxz 0x1335f2; add al, 0; add byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x00133670: jecxz 0x133673; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001336f0: jecxz 0x1336f4; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00133970: jecxz 0x133976; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013ae8a: jecxz 0x13ae8d; lea edx, [edx - 0xa4544]; cmovne eax, edx; pop ebx; ret; 
0x0013aeda: jecxz 0x13aedd; lea edx, [edx - 0xa2574]; cmovne eax, edx; pop ebx; ret; 
0x0013af2a: jecxz 0x13af2d; lea edx, [edx - 0xa3564]; cmovne eax, edx; pop ebx; ret; 
0x0013bcca: jecxz 0x13bccb; jmp dword ptr [esi - 0x70]; 
0x00150b12: jecxz 0x150a9d; ret 0x25; 
0x00164e55: jecxz 0x164e42; jmp dword ptr [ebp - 0x75]; 
0x0016d1d3: jecxz 0x16d1d1; jmp dword ptr [esi - 0x70]; 
0x00174dd6: jecxz 0x174dc2; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x001791d4: jecxz 0x179159; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017adbc: jecxz 0x17ad41; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x57]; 
0x0017c20a: jecxz 0x17c235; ret; 
0x00198b19: jecxz 0x198aa8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001999f2: jecxz 0x1999dc; add eax, 0x81fffedc; ret; 
0x00199af9: jecxz 0x199a88; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019a9f2: jecxz 0x19a9dc; add eax, 0x81fffecc; ret; 
0x0019aaf9: jecxz 0x19aa88; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001a441f: jecxz 0x1a4426; add byte ptr [eax], al; pop ebx; ret; 
0x001a8aa9: jecxz 0x1a8aab; add byte ptr [eax], al; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x001a8e9e: jecxz 0x1a8e23; ret 0x6640; 
0x001ac9d9: jecxz 0x1ac9da; dec dword ptr [ecx - 0x16e3db84]; ret; 
0x00026000: jecxz 0x25f85; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00053f50: jecxz 0x53edb; pop ds; pop ebx; pop esi; pop edi; ret; 
0x0006ec60: jecxz 0x6ec61; jmp eax; 
0x0007206b: jecxz 0x7206c; jmp dword ptr [esi - 0x70]; 
0x00085d59: jecxz 0x85d54; jmp dword ptr [esi - 0x70]; 
0x0008d406: jecxz 0x8d407; dec dword ptr [ebx - 0x3b7cf7b9]; adc bl, ch; ret; 
0x00093d33: jecxz 0x93d55; jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0009e1a9: jecxz 0x9e1fa; clc; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000a930a: jecxz 0xa930d; lea edx, [edx - 0xa4534]; cmovne eax, edx; pop ebx; ret; 
0x000a9b3a: jecxz 0xa9b3d; lea edx, [edx - 0xa2564]; cmovne eax, edx; pop ebx; ret; 
0x000a9b8a: jecxz 0xa9b8d; lea edx, [edx - 0xa3554]; cmovne eax, edx; pop ebx; ret; 
0x000b9eb9: jecxz 0xb9ec1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c2bbf: jecxz 0xc2b44; ret 0x8304; 
0x000c3865: jecxz 0xc385f; inc dword ptr [ecx]; sar dword ptr [esi], 1; jmp ecx; 
0x000e1b74: jecxz 0xe1b75; dec dword ptr [ecx - 0x572f0828]; sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000e2fde: jecxz 0xe2fdf; dec dword ptr [ebx - 0x72f3db8c]; xchg al, dl; sahf; stc; call dword ptr [eax - 0x73]; 
0x000e40d3: jecxz 0xe405e; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e53a2: jecxz 0xe53a3; call dword ptr [edx + 0x51]; 
0x000e53ee: jecxz 0xe53ef; call dword ptr [ebx + 0x52]; 
0x000e5447: jecxz 0xe5448; call dword ptr [eax + 0x57]; 
0x000e78e5: jecxz 0xe78e6; call dword ptr [edx + 0x53]; 
0x000f0384: jecxz 0xf0309; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0010b67e: jg 0x10b730; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0010b71b: jg 0x10b770; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0010ba3b: jg 0x10ba78; call dword ptr [esi]; 
0x0010bda6: jg 0x10bdc8; add esp, 4; pop ebx; pop esi; ret; 
0x00120f99: jg 0x120f9f; call dword ptr gs:[0x10]; 
0x00120f99: jg 0x120f9f; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x0012209f: jg 0x1220a0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00129fcb: jg 0x129fd8; add esp, 8; pop ebx; ret; 
0x0012a8dd: jg 0x12a930; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0012a9a2: jg 0x12a9c8; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0012bb5f: jg 0x12bb90; add esp, 8; pop ebx; ret; 
0x0012e53e: jg 0x12e540; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013c702: jg 0x13c713; dec eax; ret 0xc483; 
0x0013c727: jg 0x13c784; pop esi; pop edi; pop ebp; ret; 
0x0014eeb5: jg 0x14eed0; add esp, 4; pop ebx; pop esi; ret; 
0x001539bc: jg 0x1539e0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00153e32: jg 0x153e38; ret; 
0x00154435: jg 0x154490; pop ebx; pop esi; pop edi; ret; 
0x00154d24: jg 0x154d26; add byte ptr [edi], ch; je 0x154d8e; mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154d2e: jg 0x154d30; add byte ptr [eax], al; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154f61: jg 0x154f88; add esp, 8; pop ebx; ret; 
0x00160745: jg 0x1607a0; add esp, 4; pop ebx; pop esi; ret; 
0x00160a33: jg 0x160a58; add esp, 0x18; pop ebx; ret; 
0x00166315: jg 0x166338; add esp, 0x18; pop ebx; ret; 
0x00170548: jg 0x170559; mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x170540; pop ebx; ret; 
0x0017150e: jg 0x171510; add byte ptr [ebx + 0x3914244c], cl; ret 0x4e0f; 
0x0017487c: jg 0x174801; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00177052: jg 0x177040; add esp, 4; pop ebx; pop esi; ret; 
0x00180004: jg 0x180028; add esp, 8; pop ebx; ret; 
0x00180082: jg 0x1800a8; add esp, 0x18; pop ebx; ret; 
0x0018010e: jg 0x180130; add esp, 0x18; pop ebx; ret; 
0x00180184: jg 0x1801a8; add esp, 8; pop ebx; ret; 
0x001802a4: jg 0x1802c8; add esp, 0x14; pop ebx; pop esi; ret; 
0x001803e6: jg 0x180408; add esp, 0x18; pop ebx; ret; 
0x00180812: jg 0x180820; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00184e07: jg 0x184e28; add esp, 4; pop ebx; pop esi; ret; 
0x00186225: jg 0x186248; add esp, 4; pop ebx; pop esi; ret; 
0x001862c5: jg 0x1862e8; add esp, 4; pop ebx; pop esi; ret; 
0x0018ad04: jg 0x18acf9; call dword ptr [edi - 1]; 
0x00190f18: jg 0x190f5c; jo 0x190e9d; ret 0x80; 
0x00190fe0: jg 0x191024; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191010: jg 0x191054; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191070: jg 0x1910b4; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001910cb: jg 0x19110f; fisub dword ptr [esi + 0xf]; jg 0x191114; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001910d0: jg 0x191114; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00191140: jg 0x191184; call 0x42ef20ad; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191266: jg 0x1912aa; ret; 
0x001912a6: jg 0x1912ea; ret 0xf66; 
0x00191430: jg 0x191436; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x001914e0: jg 0x1914e6; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x00191570: jg 0x1915b4; out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001915a0: jg 0x1915e4; out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00191600: jg 0x191644; in al, dx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019165b: jg 0x19169f; fisub dword ptr [esi + 0xf]; jg 0x1916a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00191660: jg 0x1916a4; ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x001916d0: jg 0x191714; call 0x42ef263d; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001917f6: jg 0x19183a; ret; 
0x00191836: jg 0x19187a; ret 0xf66; 
0x00193063: jg 0x1930ca; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ae3: jg 0x195b22; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f63: jg 0x196f90; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a63: jg 0x197a85; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a590b: jg 0x1a5910; neg eax; ret; 
0x001a5c36: jg 0x1a5c40; neg eax; ret; 
0x001a9c45: jg 0x1a9c50; neg eax; pop edi; pop esi; pop ebx; ret; 
0x001a9d36: jg 0x1a9d40; neg eax; ret; 
0x001aa7bb: jg 0x1aa7bf; mov eax, edi; pop edi; ret; 
0x001aa846: jg 0x1aa84a; mov eax, edx; ret; 
0x001b43f3: jg 0x1b43f5; add cl, ch; cmc; sar edi, 1; dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x0003b0c2: jg 0x3b045; ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x0003c377: jg 0x3c378; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003eddf: jg 0x3edf0; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003eff3: jg 0x3f069; sub esp, 8; push 0; push edx; call eax; 
0x0003f52a: jg 0x3f698; sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x0003f5fe: jg 0x3f6c0; call eax; 
0x00040484: jg 0x404a8; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040f5a: jg 0x40f68; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00041cd7: jg 0x41cf8; add esp, 4; pop ebx; pop esi; ret; 
0x00041e06: jg 0x41e28; add esp, 0x14; pop ebx; pop esi; ret; 
0x00042bcf: jg 0x42bf8; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000481e7: jg 0x481e1; call dword ptr [eax + 0x52]; 
0x00048243: jg 0x4823d; call dword ptr [eax - 1]; 
0x0004b6a5: jg 0x4b69f; call dword ptr [eax + 0x52]; 
0x0004b6fe: jg 0x4b6f8; call dword ptr [eax - 1]; 
0x0004f199: jg 0x4f193; call dword ptr [eax + 0x52]; 
0x0004f1fa: jg 0x4f1f4; call dword ptr [eax - 1]; 
0x00051c2c: jg 0x51c8d; pop ebp; ret; 
0x00056eb5: jg 0x56eaf; call dword ptr [eax + 0x51]; 
0x00056f3a: jg 0x56f34; call dword ptr [eax - 1]; 
0x0005d539: jg 0x5d533; call dword ptr [eax + 0x56]; 
0x0005d690: jg 0x5d68a; call dword ptr [edx + 0x51]; 
0x0005e0df: jg 0x5e112; stc; call dword ptr [eax - 0x18]; 
0x00061124: jg 0x61160; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00061235: jg 0x61268; add esp, 0x18; pop ebx; ret; 
0x00071f2f: jg 0x71f40; xchg esp, eax; ret 0xca08; 
0x00079795: jg 0x79790; call dword ptr [eax - 0x73]; 
0x0007980c: jg 0x79807; call dword ptr [eax - 0x73]; 
0x000798ce: jg 0x798c9; call dword ptr [eax - 0x73]; 
0x00079aa5: jg 0x79aa0; call dword ptr [eax - 0x73]; 
0x0007dc23: jg 0x7dc30; ret; 
0x0008d7c3: jg 0x8d7d0; ret; 
0x0008feff: jg 0x8ff38; pop ebx; pop esi; pop edi; ret; 
0x000911d6: jg 0x9115b; bound ecx, qword ptr [esi + edi*8]; add esp, 8; pop ebx; ret; 
0x000919cd: jg 0x91a00; test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x8704; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091a99: jg 0x91a24; ret 0x78b; 
0x00091b5f: jg 0x91b92; test byte ptr [ecx], 0xeb; call dword ptr gs:[0x10]; 
0x00091fc2: jg 0x91f4d; ret 0xc189; 
0x000931cf: jg 0x931eb; mov edx, 1; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00094675: jg 0x94698; add esp, 0x18; pop ebx; ret; 
0x00094d76: jg 0x94e38; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00096be1: jg 0x96c14; test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098816: jg 0x98827; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098f11: jg 0x98f2c; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098f79: jg 0x98f8a; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099006: jg 0x99021; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0009917a: jg 0x9918b; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009979c: jg 0x997ad; xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099c21: jg 0x99c3c; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0009c29e: jg 0x9c338; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009c466: jg 0x9c474; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000b055d: jg 0xb04e0; ret 0x7f7f; 
0x000b055b: jg 0xb05dc; jg 0xb04e0; ret 0x7f7f; 
0x000b1e26: jg 0xb1e2a; mov eax, edi; pop edi; ret; 
0x000b20b6: jg 0xb20ba; mov eax, edx; ret; 
0x000b61e6: jg 0xb61ea; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6496: jg 0xb649a; lea eax, [edx + 0xf]; ret; 
0x000b9bf6: jg 0xb9bf9; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9c7b: jg 0xb9c82; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9ca0: jg 0xb9ca8; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9cbe: jg 0xb9cc7; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9cdc: jg 0xb9ce6; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9cff: jg 0xb9d0a; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9d24: jg 0xb9d30; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9d62: jg 0xb9d70; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9d86: jg 0xb9d95; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9de6: jg 0xb9df7; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9e0c: jg 0xb9e1e; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9ee6: jg 0xb9efe; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9f16: jg 0xb9f2f; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9fae: jg 0xb9fca; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9fdc: jg 0xb9ff9; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba00c: jg 0xba02a; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba036: jg 0xba055; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba066: jg 0xba086; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba096: jg 0xba0b7; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba0c6: jg 0xba0e8; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba246: jg 0xba24f; pop edi; pop esi; pop ebx; ret; 
0x000ba259: jg 0xba262; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba27a: jg 0xba283; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba299: jg 0xba2a2; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba2b9: jg 0xba2c2; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba2fb: jg 0xba304; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba31b: jg 0xba324; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba33b: jg 0xba344; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3db: jg 0xba3e4; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3fb: jg 0xba404; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba41b: jg 0xba424; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba43b: jg 0xba444; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3ff: jg 0xba458; push cs; pop edi; pop esi; pop ebx; ret; 
0x000ba41f: jg 0xba478; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x000ba43f: jg 0xba498; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ba462: jg 0xba4bb; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000ba572: jg 0xba57b; pop edi; pop esi; pop ebx; ret; 
0x000ba562: jg 0xba5ab; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000ba5f3: jg 0xba5fc; add edi, 0x10; call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba67f: jg 0xba6b1; pop edi; pop esi; pop ebx; ret; 
0x000ba67e: jg 0xba6ff; xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb25d: jg 0xbb261; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb280: jg 0xbb285; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb29b: jg 0xbb2a1; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb2be: jg 0xbb2c5; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb2e3: jg 0xbb2eb; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb301: jg 0xbb30a; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb367: jg 0xbb373; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb395: jg 0xbb3a2; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb3c5: jg 0xbb3d3; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb3f9: jg 0xbb408; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb429: jg 0xbb439; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb459: jg 0xbb46a; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb47f: jg 0xbb491; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb4f5: jg 0xbb50a; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb61c: jg 0xbb637; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb6af: jg 0xbb6cd; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb6d9: jg 0xbb6f8; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb709: jg 0xbb729; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb739: jg 0xbb75a; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb769: jg 0xbb78b; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb926: jg 0xbb92f; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bbacf: jg 0xbbb28; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000bbb0f: jg 0xbbb68; jge 0x5e6ada5e; pop ebx; ret; 
0x000bbb2f: jg 0xbbb88; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000bbb52: jg 0xbbbab; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x000bbc62: jg 0xbbc6b; pop edi; pop esi; pop ebx; ret; 
0x000bbc52: jg 0xbbc9b; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000bbcf3: jg 0xbbcfc; add edi, 0x10; call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd7f: jg 0xbbdb1; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000bbd7e: jg 0xbbdff; xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x000bdf16: jg 0xbdf18; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf26: jg 0xbdf28; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf4a: jg 0xbdf4c; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf69: jg 0xbdf6b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf89: jg 0xbdf8b; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfa9: jg 0xbdfab; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfcb: jg 0xbdfcd; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfeb: jg 0xbdfed; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be00b: jg 0xbe00d; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be02b: jg 0xbe02d; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be04f: jg 0xbe051; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be06e: jg 0xbe070; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be08e: jg 0xbe090; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0ab: jg 0xbe0ad; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0cb: jg 0xbe0cd; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0eb: jg 0xbe0ed; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0af: jg 0xbe101; or eax, 0x824448b; pop esi; ret; 
0x000be10b: jg 0xbe10d; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0cf: jg 0xbe121; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0ef: jg 0xbe141; jnp 0x5e14053b; ret; 
0x000be10f: jg 0xbe161; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000c1389: jg 0xc138b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c13ac: jg 0xc13ae; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c13cd: jg 0xc13cf; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c13ec: jg 0xc13ee; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c140c: jg 0xc140e; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c144e: jg 0xc1450; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c146e: jg 0xc1470; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c148e: jg 0xc1490; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c156e: jg 0xc1570; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c158e: jg 0xc1590; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c15ae: jg 0xc15b0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c1572: jg 0xc15c4; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x000c15ce: jg 0xc15d0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c1592: jg 0xc15e4; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c15b2: jg 0xc1604; jnp 0x5b1839fe; pop esi; ret; 
0x000c15d2: jg 0xc1624; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000c8c99: jg 0xc8c93; call dword ptr [eax + 0x52]; 
0x000c8cf6: jg 0xc8cf0; call dword ptr [eax + 0x55]; 
0x000cc5e6: jg 0xcc5e0; call dword ptr [eax + 0x52]; 
0x000cc643: jg 0xcc63d; call dword ptr [eax + 0x55]; 
0x000cfe09: jg 0xcfe03; call dword ptr [eax + 0x52]; 
0x000cfe66: jg 0xcfe60; call dword ptr [eax + 0x55]; 
0x000d1c54: jg 0xd1cb5; pop ebp; ret; 
0x000d6471: jg 0xd646b; call dword ptr [eax + 0x52]; 
0x000d64e6: jg 0xd64e0; call dword ptr [eax - 1]; 
0x000d9d15: jg 0xd9d20; neg eax; pop edi; pop esi; ret; 
0x000d9d45: jg 0xd9d49; neg eax; ret; 
0x000dd57a: jg 0xdd5a0; add esp, 8; pop ebx; ret; 
0x000e4c85: jg 0xe4c70; jmp esi; 
0x000e728e: jg 0xe7279; ret; 
0x000e9440: jg 0xe9460; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e954b: jg 0xe9570; add esp, 0x14; pop ebx; pop esi; ret; 
0x000e9951: jg 0xe9970; add esp, 4; pop ebx; pop esi; ret; 
0x000ea247: jg 0xea260; pop ebx; pop esi; pop edi; ret; 
0x000ea297: jg 0xea2c0; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0012866e: jge 0x128670; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ca0a: jge 0x12c98f; ret 0x3113; 
0x0012ebeb: jge 0x12ebee; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00138ed2: jge 0x138e58; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00145cd2: jge 0x145c57; in al, dx; or byte ptr [ebx - 0x72f3dbbc], cl; sbb byte ptr [edx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x0014934a: jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x001537ba: jge 0x1537ba; dec dword ptr [ecx + 0x1c808dc7]; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015578b: jge 0x1557eb; stc; call dword ptr [eax - 0x18]; 
0x0015591e: jge 0x15597e; stc; call dword ptr [eax - 0x73]; 
0x001637ce: jge 0x1637cd; jmp dword ptr [esi - 0x70]; 
0x001649f9: jge 0x1649ed; call dword ptr [eax - 0x18]; 
0x0016ed35: jge 0x16ed9b; stc; call dword ptr [edx + 0x6a]; 
0x00176611: jge 0x176594; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00179eb1: jge 0x179e36; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00188063: jge 0x188065; jb 0x188076; xchg esp, eax; ret; 
0x001a7d3f: jge 0x1a7d41; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a88bf: jge 0x1a88c1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0002439c: jge 0x2436e; add byte ptr [ebx + ebx - 0x7d], dh; in al, dx; or al, 0xff; jne 0x24373; call dword ptr [ebp - 0x38]; 
0x0002c575: jge 0x2c577; add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [edx + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x0002c598: jge 0x2c59a; add byte ptr [ebx - 0x72b3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002f806: jge 0x2f81d; add byte ptr [0x20d60b], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0005adb3: jge 0x5ade5; stc; call dword ptr [eax - 0x18]; 
0x000bb97d: jge 0x5e6accca; pop ebx; ret; 
0x000bba01: jge 0x5e6ad14e; pop ebx; ret; 
0x000bbb11: jge 0x5e6ada5e; pop ebx; ret; 
0x00061cd1: jge 0x61d03; stc; call dword ptr [esi + 0x52]; 
0x000620e6: jge 0x620e1; call dword ptr [eax - 0x73]; 
0x00062af1: jge 0x62aec; call dword ptr [eax - 0x18]; 
0x00062b7f: jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x00062b92: jge 0x62b8d; call dword ptr [eax - 0x18]; 
0x00062fbf: jge 0x62fba; call dword ptr [eax - 0x18]; 
0x00066245: jge 0x66240; call dword ptr [eax - 0x18]; 
0x000699dc: jge 0x699d7; call dword ptr [eax - 0x73]; 
0x0006eab6: jge 0x6eab1; call dword ptr [eax - 0x18]; 
0x0006eb67: jge 0x6eb62; call dword ptr [eax - 0x73]; 
0x0006eb7a: jge 0x6eb75; call dword ptr [eax - 0x18]; 
0x0006ee8d: jge 0x6ee88; call dword ptr [eax - 0x18]; 
0x00072912: jge 0x7290d; call dword ptr [eax - 0x18]; 
0x00078a52: jge 0x78a4d; call dword ptr [eax + 0x68]; 
0x000790d7: jge 0x790d2; call dword ptr [eax + 0x68]; 
0x0007938f: jge 0x79340; sti; dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x000fedbb: jge 0x83101435; ret; 
0x000b3dd6: jge 0x851a4d26; mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x000bb457: jge 0x851ac3dc; aas; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00088488: jge 0x8847b; sldt word ptr [ecx + 0x1b4988c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x0009877a: jge 0x98795; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0009910a: jge 0x99125; add byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0009d345: jge 0x9d368; pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0009e225: jge 0x9e227; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], esi; call edi; 
0x000bb125: jge 0xbb124; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000fb5b0: jge 0xfb5e0; mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x00100e85: jl 0x100eab; or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x00100f53: jl 0x100f79; or byte ptr [ecx], bh; ret; 
0x001030b3: jl 0x10303e; clc; pop ebx; pop esi; pop edi; ret; 
0x001036d5: jl 0x103660; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00104985: jl 0x1049ab; add al, 0xe9; sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x00105820: jl 0x105821; dec dword ptr [ecx + 0x24548bd9]; sbb byte ptr [esi - 0x7f], ah; loope 0x10582c; add esi, esi; ret; 
0x00109750: jl 0x1096db; ret 0xe8c0; 
0x0010c012: jl 0x10bf97; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010d290: jl 0x10d2b6; adc al, 0x85; test byte ptr [edi], -0x6c; ret 0xff85; 
0x001106d7: jl 0x1106fd; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax - 0x73]; 
0x00110ad9: jl 0x110aff; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x00110caf: jl 0x110cd5; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x0011133b: jl 0x111361; adc byte ptr [ebp - 0x6b67779], cl; call dword ptr [eax - 0x73]; 
0x00111c1f: jl 0x111c45; or byte ptr [ebp - 0x65de779], cl; call dword ptr [eax - 0x73]; 
0x00111cac: jl 0x111cd2; or byte ptr [ebp - 0x65dbf79], cl; call dword ptr [eax - 0x73]; 
0x00111ddd: jl 0x111e03; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax - 0x73]; 
0x00112e65: jl 0x112e8b; sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112df4; ret; 
0x00113087: jl 0x1130ad; or al, 0x8d; xchg dword ptr [eax - 0x5e], eax; stc; call dword ptr [eax - 0x73]; 
0x00113173: jl 0x113199; or al, 0x8d; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x73]; 
0x001131aa: jl 0x1131d0; or al, 0x8d; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x73]; 
0x0011580b: jl 0x115831; adc al, 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x001161f9: jl 0x116256; pop esi; pop edi; pop ebp; ret; 
0x0011f6cb: jl 0x11f6f1; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0012061b: jl 0x120641; inc eax; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x001255e8: jl 0x12560e; adc al, ch; or eax, 0x81000620; ret; 
0x0012600f: jl 0x126035; xor byte ptr [ebp - 0x6b32d7d], cl; call dword ptr [eax + 0x55]; 
0x00126963: jl 0x12695b; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x001269d8: jl 0x1269d0; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012c6e8: jl 0x12c70e; sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x0012cccd: jl 0x12cce9; add al, 0x83; ret; 
0x0012d177: jl 0x12d1d4; pop esi; pop edi; pop ebp; ret; 
0x0012d5a8: jl 0x12d5ab; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013047a: jl 0x1304d7; pop esi; pop edi; pop ebp; ret; 
0x0013614a: jl 0x136170; or bl, ch; xor byte ptr [eax - 0x9f3af75], dl; ret 0x7504; 
0x0013ace8: jl 0x13ad0e; adc al, ch; or eax, 0x810004c9; ret; 
0x0013ae85: jl 0x13aedf; cmc; inc dword ptr [ebx - 0x6d72fe1d]; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x0013e49a: jl 0x13e4c0; sbb al, 0x89; ret; 
0x0013f185: jl 0x13f1ab; sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x0013f629: jl 0x13f64f; or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x0013faf5: jl 0x13fb1b; sbb al, 0x39; ret; 
0x0013fdc9: jl 0x13fd54; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00140c52: jl 0x140c78; adc al, 0x8d; xchg dword ptr [esp + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x00140ec6: jl 0x140eec; adc al, 0x8d; xchg dword ptr [ebx + ebp*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x00141272: jl 0x141298; adc al, 0x8d; xchg dword ptr [ecx], esp; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0014a0f1: jl 0x14a117; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x0014cc2e: jl 0x14cc54; adc byte ptr [esi - 0x3f], ah; ret 0x908; 
0x0014e279: jl 0x14e29f; adc byte ptr [ebp - 0x87bf001], al; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x00153308: jl 0x15332e; adc byte ptr [ebp - 0x6d69879], cl; call dword ptr [eax + 0x53]; 
0x001537df: jl 0x153805; or byte ptr [ebp - 0x64cc779], cl; call dword ptr [eax - 0x73]; 
0x00153af3: jl 0x153af5; add byte ptr [eax], al; add byte ptr [ebx + 0x5f5e04c4], al; ret; 
0x00157f06: jl 0x157f2c; adc al, 0x8d; xchg dword ptr [eax], ecx; mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x0015b043: jl 0x15b069; xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x0015b76b: jl 0x15b791; or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x0015d4b5: jl 0x15d4db; adc byte ptr [ebp - 0x64a5b79], cl; call dword ptr [eax - 0x73]; 
0x0015d5f5: jl 0x15d5ac; stc; call dword ptr [eax - 0x73]; 
0x0015d9c5: jl 0x15d9eb; adc byte ptr [ebp - 0x64a5b79], cl; call dword ptr [eax - 0x73]; 
0x00161b86: jl 0x161bd7; bnd call dword ptr [eax - 0x18]; 
0x00169385: jl 0x1693ab; sub byte ptr [ebp - 0x649db79], cl; call dword ptr [eax - 0x73]; 
0x001693b1: jl 0x1693d7; sub byte ptr [ebp - 0x649db79], cl; call dword ptr [eax - 0x73]; 
0x001693d4: jl 0x1693fa; sub byte ptr [ebp - 0x649db79], cl; call dword ptr [eax - 0x73]; 
0x0016dbf4: jl 0x16dc1a; dec esp; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x00170e1d: jl 0x170e43; and al, 0x89; ret 0x1beb; 
0x0017211b: jl 0x1720d4; stc; call dword ptr [eax - 0x73]; 
0x00172be8: jl 0x172c0e; adc al, ch; or eax, 0x8100014a; ret; 
0x001738cb: jl 0x1738c9; jmp dword ptr [esi - 0x70]; 
0x00176c6a: jl 0x176c6d; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x00179128: jl 0x17914e; adc byte ptr [ebp - 0x69b7579], cl; call dword ptr [eax - 0x73]; 
0x0017b127: jl 0x17b0b2; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0017bc62: jl 0x17bc88; sub byte ptr [ebp - 0x6454779], cl; call dword ptr [eax - 0x73]; 
0x0017cfac: jl 0x17cfd2; adc al, 0x8d; xchg dword ptr [eax], ecx; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00183a04: jl 0x183a2a; sub byte ptr [ebp - 0x644b379], cl; call dword ptr [eax - 0x73]; 
0x00183a27: jl 0x183a4d; sub byte ptr [ebp - 0x644b379], cl; call dword ptr [eax - 0x73]; 
0x00183a4a: jl 0x183a70; sub byte ptr [ebp - 0x690b379], cl; call dword ptr [eax - 0x73]; 
0x00183a6d: jl 0x183a93; sub byte ptr [ebp - 0x644b379], cl; call dword ptr [eax - 0x73]; 
0x00184941: jl 0x184946; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00187772: jl 0x18775f; jmp dword ptr [esi - 0x70]; 
0x00187e79: jl 0x187e6b; jmp dword ptr [ebp - 0x75]; 
0x00187e73: jl 0x187e99; xor byte ptr [edi - 0x18], dl; jl 0x187e6b; jmp dword ptr [ebp - 0x75]; 
0x00190487: jl 0x1904ad; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00190c81: jl 0x190c86; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a8c03: jl 0x1a8c50; lea eax, [ecx + 0xa]; ret; 
0x001a8c13: jl 0x1a8c50; lea eax, [ecx + 0xb]; ret; 
0x001a8b7e: jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8c23: jl 0x1a8c50; lea eax, [ecx + 0xd]; ret; 
0x001a8c33: jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x001a8c43: jl 0x1a8c50; lea eax, [ecx + 0xf]; ret; 
0x001a8b93: jl 0x1a8c50; lea eax, [ecx + 1]; ret; 
0x001a8ba3: jl 0x1a8c50; lea eax, [ecx + 2]; ret; 
0x001a8bb3: jl 0x1a8c50; lea eax, [ecx + 3]; ret; 
0x001a8b1b: jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x001a8bc3: jl 0x1a8c50; lea eax, [ecx + 5]; ret; 
0x001a8bd3: jl 0x1a8c50; lea eax, [ecx + 6]; ret; 
0x001a8be3: jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x001a8b54: jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8bf3: jl 0x1a8c50; lea eax, [ecx + 9]; ret; 
0x001a8a31: jl 0x1a8c50; mov eax, ecx; ret; 
0x001a96b2: jl 0x1a96b4; add byte ptr [eax], al; mov eax, 0xc; pop edi; ret; 
0x001ac9dd: jl 0x1aca03; sbb al, 0xe9; ret; 
0x001aede5: jl 0x1aee00; add al, 0x83; ret; 
0x001af46c: jl 0x1af492; sbb byte ptr [edi], cl; xchg ebp, eax; ret 0xc208; 
0x001b0f05: jl 0x1b0f20; add al, 0x83; ret; 
0x001b2f07: jl 0x1b2f1a; add al, 0x83; ret 0x3908; 
0x0012c6f9: jl 0x24f10; je 0x12c702; ret; 
0x0012c936: jl 0x24f10; ret; 
0x0002502e: jl 0x2509f; stc; call dword ptr [eax - 0x18]; 
0x000250c1: jl 0x25132; stc; call dword ptr [eax - 0x18]; 
0x00025122: jl 0x25193; stc; call dword ptr [eax - 0x18]; 
0x0002516e: jl 0x251df; stc; call dword ptr [eax - 0x18]; 
0x00026085: jl 0x2609c; push ss; add byte ptr [0x216d8b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002879a: jl 0x287c0; cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x000287d0: jl 0x287f6; cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00028857: jl 0x2887d; cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002887f: jl 0x288a5; cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x000288a2: jl 0x288c8; cmp al, 0x8d; xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x00029321: jl 0x29347; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x00029466: jl 0x2948c; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x00029489: jl 0x294af; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax + 0x68]; 
0x000294ac: jl 0x294d2; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax + 0x68]; 
0x000294be: jl 0x294e4; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x00029fa1: jl 0x29fc7; sbb al, 0x8d; inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0002a3ab: jl 0x2a408; pop esi; pop edi; pop ebp; ret; 
0x0002a7dc: jl 0x2a839; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b13f: jl 0x2b19c; pop esi; pop edi; pop ebp; ret; 
0x0002b1d1: jl 0x2b1f7; cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002b316: jl 0x2b33c; cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002b2e9: jl 0x2b346; pop esi; pop edi; pop ebp; jmp eax; 
0x0002b807: jl 0x2b82d; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b84d: jl 0x2b873; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b8ea: jl 0x2b910; cmp al, 0x8d; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x0002b978: jl 0x2b99e; cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0002c4c6: jl 0x2c4ec; and al, 0x89; ret 0xfa29; 
0x0002c64e: jl 0x2c650; add byte ptr [ebx - 0x72b3db84], cl; xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002d15d: jl 0x2d1ba; pop esi; pop edi; pop ebp; ret; 
0x0002d6e6: jl 0x2d743; pop esi; pop edi; pop ebp; jmp eax; 
0x0002e069: jl 0x2e08f; adc byte ptr [ecx - 0x76c3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x0002e0cb: jl 0x2e0f1; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax - 0x73]; 
0x0002e23c: jl 0x2e262; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax - 0x73]; 
0x0002e35d: jl 0x2e383; cmp byte ptr [ebp - 0x695f379], cl; call dword ptr [eax - 0x73]; 
0x0002e380: jl 0x2e3a6; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax + 0x68]; 
0x0002e3a3: jl 0x2e3c9; cmp byte ptr [ebp - 0x695f379], cl; call dword ptr [eax - 0x73]; 
0x0002e3cb: jl 0x2e3f1; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax - 0x73]; 
0x0002e3ee: jl 0x2e414; cmp byte ptr [ebp - 0x695f379], cl; call dword ptr [eax - 0x73]; 
0x0002e411: jl 0x2e437; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax + 0x68]; 
0x0002e5f1: jl 0x2e64e; pop esi; pop edi; pop ebp; ret; 
0x0002ebb3: jl 0x2ec10; pop esi; pop edi; pop ebp; jmp eax; 
0x000349b7: jl 0x349dd; add al, 0x7f; setbe al; ret; 
0x00038c89: jl 0x38caf; sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x0003d785: jl 0x3d725; adc al, 0; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0003d7e5: jl 0x3d80b; add al, 0; je 0x3d800; lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0003f23e: jl 0x3f264; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x00040a6e: jl 0x40a94; or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x000479c3: jl 0x479e9; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000479e6: jl 0x47a0c; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x00047e0d: jl 0x47e33; or al, 1; ret 0xd389; 
0x00048669: jl 0x4868f; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00048899: jl 0x488bf; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004a1cb: jl 0x4a1f1; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a377: jl 0x4a39d; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a39a: jl 0x4a3c0; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a3bd: jl 0x4a3e3; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a3e0: jl 0x4a406; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a403: jl 0x4a429; sbb byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x0004a426: jl 0x4a44c; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a450: jl 0x4a476; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a473: jl 0x4a499; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a496: jl 0x4a4bc; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a4b9: jl 0x4a4df; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a4dc: jl 0x4a502; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a4ff: jl 0x4a525; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a522: jl 0x4a548; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a545: jl 0x4a56b; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004ae83: jl 0x4aea9; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0004aea6: jl 0x4aecc; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0004b2cd: jl 0x4b2f3; or byte ptr [ecx], al; ret 0xd389; 
0x0004bb19: jl 0x4bb3f; adc byte ptr [edi], cl; mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x0004bd59: jl 0x4bd7f; sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0004d520: jl 0x4d546; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d5ab: jl 0x4d5d1; sbb byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x0004d5ce: jl 0x4d5f4; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d5f1: jl 0x4d617; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d61b: jl 0x4d641; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d63e: jl 0x4d664; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d661: jl 0x4d687; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d690: jl 0x4d6b6; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d6b3: jl 0x4d6d9; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d6d6: jl 0x4d6fc; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d6f9: jl 0x4d71f; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d71c: jl 0x4d742; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d73f: jl 0x4d765; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004d775: jl 0x4d79b; sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004e905: jl 0x4e92b; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0004e928: jl 0x4e94e; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0004eaca: jl 0x4eaf0; and byte ptr [ecx - 0x7209ce16], cl; dec ebx; rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x0004ed9d: jl 0x4edc3; sbb byte ptr [ecx], al; ret 0xd389; 
0x0004efa7: jl 0x4efaa; ret; 
0x0004f839: jl 0x4f85f; sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x00051205: jl 0x5122b; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x0005129b: jl 0x512c1; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000512be: jl 0x512e4; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000512e1: jl 0x51307; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051304: jl 0x5132a; sub byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x00051343: jl 0x51369; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051366: jl 0x5138c; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051389: jl 0x513af; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000513ac: jl 0x513d2; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000513cf: jl 0x513f5; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000513f2: jl 0x51418; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051415: jl 0x5143b; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051457: jl 0x5147d; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051481: jl 0x514a7; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x000547c1: jl 0x54759; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x00056485: jl 0x564ab; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000564a8: jl 0x564ce; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0005df88: jl 0x5e005; stc; call dword ptr [eax - 0x18]; 
0x0005e1f5: jl 0x5e182; mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x0005e548: jl 0x5e5a5; pop esi; pop edi; pop ebp; ret; 
0x0006018e: jl 0x601b4; add al, 0xf6; ret 0xf50; 
0x00061a9a: jl 0x61af7; pop esi; pop edi; pop ebp; ret; 
0x000650db: jl 0x65101; pop eax; jmp eax; 
0x000659e1: jl 0x65a07; sbb byte ptr [ebx], al; cmp al, 0x82; mov eax, edi; mov edi, ecx; jmp eax; 
0x00065a8b: jl 0x65ab1; pop eax; jmp eax; 
0x0006f5dd: jl 0x6f603; push eax; and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x00079389: jl 0x79409; stc; call dword ptr [eax - 0x18]; 
0x0007b81d: jl 0x7b87a; pop esi; pop edi; pop ebp; ret; 
0x0007bddb: jl 0x7be47; add ch, byte ptr [edx]; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007d661: jl 0x7d687; xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0007d96f: jl 0x7d995; or byte ptr [ebp - 0x67ce771], cl; jmp dword ptr [ebp - 0x75]; 
0x0007e5f8: jl 0x7e64c; cli; jmp dword ptr [esi - 0x70]; 
0x00082142: jl 0x82168; inc esp; dec dword ptr [edi]; xchg esp, eax; ret; 
0x000838f1: jl 0x83917; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0008666c: jl 0x86692; or byte ptr [ebp - 0x67ca379], cl; call dword ptr [eax - 0x73]; 
0x000873fa: jl 0x87420; or al, 0x8d; xchg dword ptr [ecx], ecx; aas; stc; call dword ptr [eax + 0x56]; 
0x00088975: jl 0x889d2; pop esi; pop edi; pop ebp; ret; 
0x0008f19a: jl 0x8f19c; add byte ptr [eax], al; ret; 
0x0008f1a9: jl 0x8f1ab; add byte ptr [eax], al; ret; 
0x0008f24c: jl 0x8f24e; add byte ptr [eax], al; pop ebx; ret; 
0x0008f27a: jl 0x8f27c; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x0008f84b: jl 0x8f84c; jmp dword ptr [esi - 0x70]; 
0x0008fa54: jl 0x8f9d9; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000908d8: jl 0x908fe; adc al, ch; sbb eax, 0x81000f6d; ret; 
0x00092e4d: jl 0x92e73; add al, 0x8d; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x00092e70: jl 0x92e96; add al, 0x8d; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x0009a199: jl 0x9a1bf; adc al, 0x89; ret 0xca83; 
0x0009a1f5: jl 0x9a21b; adc al, 0x89; ret 0xc389; 
0x0009a217: jl 0x9a23d; adc al, 0x89; ret; 
0x0009a2b1: jl 0x9a2d7; adc al, 0x89; ret 0xca83; 
0x0009a312: jl 0x9a338; adc al, 0x89; ret 0xfbd1; 
0x0009a338: jl 0x9a35e; adc al, 0x89; ret 0xfbd1; 
0x0009bdf2: jl 0x9be18; sub al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x0009da9c: jl 0x9da90; je 0x9dab3; xor eax, eax; pop ebx; ret; 
0x0009daec: jl 0x9dae0; mov edx, 0; cmovne eax, edx; ret; 
0x0009e628: jl 0x9e64e; or al, 0x8d; xchg dword ptr [eax - 0x77], esi; stc; call dword ptr [eax - 0x73]; 
0x000a064c: jl 0xa05d1; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000a31e1: jl 0xa3207; or byte ptr [ebx + 0x35083], cl; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x000a31ef: jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x000a3914: jl 0xa391f; add byte ptr [ebp - 0x666b77d], cl; call dword ptr [eax - 0x73]; 
0x000a4e08: jl 0xa4e2e; or al, 0x8d; xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a4e2b: jl 0xa4e51; or al, 0x8d; xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a4fbb: jl 0xa4fe1; or al, 0x8d; xchg eax, eax; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a9f63: jl 0xa9f89; adc al, 0x83; ret 0x8301; 
0x000aa8a6: jl 0xaa907; call 0xc24eb8ac; ret; 
0x000ab769: jl 0xab78f; sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x000ac321: jl 0xac347; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000acbd6: jl 0xacc2e; call 0x4c8b59dc; ret 0xfff6; 
0x000ad195: jl 0xad1bb; sub byte ptr [ebx - 0x76d3dbac], cl; je 0xad1c3; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000ad8bb: jl 0xad8e1; pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000bb620: jl 0xbb628; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c1ff8: jl 0xc2030; add eax, ecx; ret; 
0x000c2008: jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c2018: jl 0xc2030; lea eax, [ecx + eax + 0x20]; ret; 
0x000c2028: jl 0xc2030; lea eax, [ecx + eax + 0x30]; ret; 
0x000c4c7a: jl 0xc4ca0; sbb al, 0x8d; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4ccd: jl 0xc4cf3; sbb al, 0x8d; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4ced: jl 0xc4d13; sbb al, 0x8d; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c7102: jl 0xc7128; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c7155: jl 0xc717b; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c7175: jl 0xc719b; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c74b9: jl 0xc74df; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c74d9: jl 0xc74ff; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c74f9: jl 0xc751f; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c751c: jl 0xc7542; sbb al, 0x8d; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c8364: jl 0xc838a; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000c8387: jl 0xc83ad; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000cb4e4: jl 0xcb50a; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000cb507: jl 0xcb52d; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000cb827: jl 0xcb84d; and cl, ch; ret 3; 
0x000ccb8b: jl 0xccbb1; or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000cd93d: jl 0xcd8dc; stc; call dword ptr [eax - 0x73]; 
0x000cd99d: jl 0xcd93c; stc; call dword ptr [eax - 0x73]; 
0x000cd9c0: jl 0xcd95f; stc; call dword ptr [eax - 0x73]; 
0x000cd9ea: jl 0xcd989; stc; call dword ptr [eax - 0x73]; 
0x000cda0d: jl 0xcd9ac; stc; call dword ptr [eax - 0x73]; 
0x000cda53: jl 0xcd9f2; stc; call dword ptr [eax - 0x73]; 
0x000cda76: jl 0xcda15; stc; call dword ptr [eax - 0x73]; 
0x000cda99: jl 0xcda38; stc; call dword ptr [eax - 0x73]; 
0x000cdabc: jl 0xcda5b; stc; call dword ptr [eax - 0x73]; 
0x000cdadf: jl 0xcda7e; stc; call dword ptr [eax - 0x73]; 
0x000cdb02: jl 0xcdaa1; stc; call dword ptr [eax - 0x73]; 
0x000cdb25: jl 0xcdac4; stc; call dword ptr [eax - 0x73]; 
0x000cdb48: jl 0xcdae7; stc; call dword ptr [eax - 0x73]; 
0x000cdb6b: jl 0xcdb0a; stc; call dword ptr [eax - 0x73]; 
0x000ced06: jl 0xced2c; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000ced29: jl 0xced4f; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000d58e6: jl 0xd590c; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000d5909: jl 0xd592f; add al, 0x8d; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000d5c88: jl 0xd5c11; add al, 0x81; ret 0; 
0x000d9da0: jl 0xd9dac; mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x000dcfa4: jl 0xdcfdb; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x000e4b9a: jl 0xe4bc0; or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x000e79da: jl 0xe7a00; adc al, 1; je 0xe79e8; add esp, 0xc; ret; 
0x000e7aca: jl 0xe7af0; adc al, 1; je 0xe7ad8; add esp, 0xc; ret; 
0x000e85ff: jl 0xe8625; add al, 0x83; ret 0x8301; 
0x000e86a8: jl 0xe86ce; add al, 0x83; ret 0x8301; 
0x000e8807: jl 0xe882d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000ea613: jl 0xea59e; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000ef7a5: jl 0xef7cb; adc byte ptr [ebx + 0x6189f], cl; add byte ptr [ebp + 0x61887], cl; add byte ptr [ecx], bh; ret; 
0x000f0b6c: jl 0xf0b92; adc al, 0x8d; xchg dword ptr [edi + 0x47], ebp; stc; call dword ptr [eax - 0x73]; 
0x000fadb8: jl 0xfadde; adc al, ch; cmp eax, 0x810008c8; ret; 
0x000fe9d7: jl 0xfe9fd; or al, 0xe9; ret 0xfffb; 
0x0010bc71: jle 0x10bbf6; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0011e256: jle 0x11e25c; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012ec17: jle 0x12ec1a; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130f8b: jle 0x130ff3; add eax, 0x85c58100; mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x00134d63: jle 0x134d5c; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0013ec6b: jle 0x13ebf0; rol byte ptr [ecx], 0x83; ret; 
0x00143687: jle 0x14368e; cmp byte ptr [ebx], 0x2e; je 0x143698; add esp, 8; pop ebx; ret; 
0x0015b191: jle 0x15b1f2; stc; call dword ptr [eax + 0x55]; 
0x00172b48: jle 0x172acd; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00176819: jle 0x176828; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00179451: jle 0x179484; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x00179551: jle 0x179584; rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x0017a83d: jle 0x17a853; pop ebx; pop esi; pop edi; ret; 
0x00193e1a: jle 0x193e5c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194026: jle 0x194068; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001944ba: jle 0x1944bc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e1a: jle 0x195e5c; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00196016: jle 0x196058; clc; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00197f1a: jle 0x197f5c; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00198126: jle 0x198168; clc; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001985ba: jle 0x1985bc; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00024f4b: jle 0x24f6e; add byte ptr [ebx - 0x2697ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x0003018c: jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x0004056b: jle 0x4056d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00042580: jle 0x42582; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004a63c: jle 0x4a5c1; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0005300e: jle 0x53010; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005bf68: jle 0x5be95; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0005df8e: jle 0x5dff3; std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x00079352: jle 0x7934d; call dword ptr [eax - 0x18]; 
0x0007936e: jle 0x79369; call dword ptr [eax - 0x18]; 
0x0007938a: jle 0x79385; call dword ptr [eax - 0x18]; 
0x000793a6: jle 0x793a1; call dword ptr [eax - 0x18]; 
0x000796e8: jle 0x796e3; call dword ptr [eax - 0x73]; 
0x0007c5da: jle 0x7c5df; or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x0008676d: jle 0x8676e; jmp dword ptr [ecx]; 
0x000870fd: jle 0x87110; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0008722d: jle 0x87240; mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00088ed2: jle 0x88f0c; jmp dword ptr [ebp - 0x75]; 
0x000983ad: jle 0x9837a; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x00099306: jle 0x99310; dec ecx; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000b9c1e: jle 0xb9c29; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000cacfd: jle 0xcac82; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000dfd23: jle 0xdfd35; add dword ptr [ebp + 0x76c98], ecx; add byte ptr [edi], cl; sahf; ret 0xd329; 
0x000e2ffa: jle 0xe3042; stc; call dword ptr [eax - 0x18]; 
0x000fd536: jle 0xfd585; add byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x000ff0b2: jle 0xff101; add byte ptr [edi], cl; xchg ebp, eax; ret 0xd201; 
0x0017a08b: jmp dword ptr [eax + 0x20]; 
0x0017a067: jmp dword ptr [eax + 0x24]; 
0x001842c7: jmp dword ptr [eax + 0x30]; 
0x0016ed77: jmp dword ptr [eax + 4]; 
0x000508d8: jmp dword ptr [eax]; 
0x00024a97: jmp dword ptr [ebp + 0x33]; 
0x000900e8: jmp dword ptr [ebp - 0x39]; 
0x0006ada4: jmp dword ptr [ebp - 0x3a]; 
0x0009c52b: jmp dword ptr [ebp - 0x5d]; 
0x0002f2bf: jmp dword ptr [ebp - 0x5f]; 
0x000314c9: jmp dword ptr [ebp - 0x75]; 
0x000a2244: jmp dword ptr [ebp - 0x7d]; 
0x0012394d: jmp dword ptr [ebp - 0xb]; 
0x0003de17: jmp dword ptr [ebp - 1]; 
0x0017d4db: jmp dword ptr [ebp - 7]; 
0x000764c8: jmp dword ptr [ebp]; 
0x000e880f: jmp dword ptr [ebx + 0x77]; 
0x00023010: jmp dword ptr [ebx + 0xc]; 
0x00023006: jmp dword ptr [ebx + 8]; 
0x0016f4a3: jmp dword ptr [ebx - 0x41]; 
0x000d6ed4: jmp dword ptr [ebx]; 
0x00024722: jmp dword ptr [ecx]; 
0x00131500: jmp dword ptr [edi + 0x6d]; 
0x0005d947: jmp dword ptr [edi + 0xf]; 
0x0003df3d: jmp dword ptr [edi]; 
0x00141c32: jmp dword ptr [edx]; 
0x00040ef6: jmp dword ptr [esi + 0x14]; 
0x0005de99: jmp dword ptr [esi + 0x25]; 
0x0005f224: jmp dword ptr [esi + 0x3d]; 
0x000fd96c: jmp dword ptr [esi + 0xb]; 
0x000b0c2f: jmp dword ptr [esi + 0xf]; 
0x001165ad: jmp dword ptr [esi + 3]; 
0x000597de: jmp dword ptr [esi + 6]; 
0x0013ed7f: jmp dword ptr [esi - 0x39]; 
0x00140854: jmp dword ptr [esi - 0x3f]; 
0x000249e1: jmp dword ptr [esi - 0x70]; 
0x0005c707: jmp dword ptr [esi - 0x75]; 
0x00027278: jmp dword ptr [esi - 0x77]; 
0x0015f66a: jmp dword ptr [esi - 0x7b]; 
0x0005dea3: jmp dword ptr [esi - 0x7d]; 
0x000e1cb7: jmp dword ptr [esi - 0x7f]; 
0x0017c50d: jmp dword ptr [esi - 0xc]; 
0x000f15d3: jmp dword ptr [esi - 9]; 
0x00025027: jmp eax; 
0x000704fb: jmp ebx; 
0x000322a1: jmp ecx; 
0x00025684: jmp edi; 
0x00039699: jmp edx; 
0x00036ee2: jmp esi; 
0x000dc3fd: jmp esp; 
0x001030b2: jne 0x103130; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0010b98c: jne 0x10ba30; call ecx; 
0x0010bcb5: jne 0x10bba9; lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bbb2; call eax; 
0x0010be51: jne 0x10be30; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010c011: jne 0x10c08f; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0010c2d7: jne 0x10c308; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c2fb: jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c37a: jne 0x10c3a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c39e: jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c46f: jne 0x10c4a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c493: jne 0x10c4e9; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c51f: jne 0x10c550; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c543: jne 0x10c599; add esp, 0x24; pop ebx; pop esi; ret; 
0x0010c5e7: jne 0x10c618; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c60b: jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e577: jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x0010e684: jne 0x10e74b; add esp, 0x54; pop ebx; pop esi; ret; 
0x0010e79b: jne 0x10e863; add esp, 0x64; pop ebx; pop esi; ret; 
0x00113282: jne 0x113263; xor eax, eax; pop ebx; ret; 
0x0011346c: jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x00114005: jne 0x114009; add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65da779]; call dword ptr [eax + 0x68]; 
0x00114092: jne 0x1140bb; pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x001141bf: jne 0x114217; add esp, 0x34; pop ebx; pop esi; ret; 
0x001144cc: jne 0x114511; add esp, 0x14; pop ebx; pop esi; ret; 
0x001146d0: jne 0x1146e0; add esp, 4; pop ebx; pop esi; ret; 
0x001152c7: jne 0x1152ef; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x00115350: jne 0x11538c; add esp, 0x74; pop ebx; pop esi; ret; 
0x001154e9: jne 0x11552b; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115ac7: jne 0x115ad7; add esp, 0x74; pop ebx; pop esi; ret; 
0x00115cc7: jne 0x115cd7; add esp, 0x54; pop ebx; pop esi; ret; 
0x00115d33: jne 0x115d47; add esp, 0x60; pop ebx; pop esi; pop edi; ret; 
0x0011e1b5: jne 0x11e1db; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0011eb01: jne 0x11eb5b; add esp, 0xe4; pop ebx; pop esi; ret; 
0x0011ebcc: jne 0x11ec25; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0011ec62: jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x0011edcb: jne 0x11ee7b; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011ef0b: jne 0x11efbb; add esp, 0x24; pop ebx; pop esi; ret; 
0x0011f1b4: jne 0x11f1ce; add esp, 0x74; pop ebx; pop esi; ret; 
0x0011f2fc: jne 0x11f348; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0011f74f: jne 0x11f758; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0011febe: jne 0x11fec6; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120131: jne 0x12014e; add esp, 0x74; pop ebx; pop esi; ret; 
0x00120347: jne 0x120357; add esp, 0x54; pop ebx; pop esi; ret; 
0x001203a7: jne 0x1203b7; add esp, 0x64; pop ebx; pop esi; ret; 
0x00120786: jne 0x1207c4; add esp, 0x44; mov eax, edx; pop ebx; pop esi; ret; 
0x00120c96: jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d16: jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00120f49: jne 0x120f51; add esp, 0x34; pop ebx; pop esi; ret; 
0x001210ae: jne 0x121109; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012115e: jne 0x1211b9; add esp, 0x14; pop ebx; pop esi; ret; 
0x00121f12: jne 0x121f39; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00121f7a: jne 0x121f87; add esp, 0x1c; ret; 
0x001222cb: jne 0x122301; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001224b4: jne 0x1224d9; add esp, 0x54; pop ebx; pop esi; ret; 
0x001225ac: jne 0x1225d1; add esp, 0x54; pop ebx; pop esi; ret; 
0x00122649: jne 0x1226dc; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x00122756: jne 0x12277b; add esp, 0x14; pop ebx; pop esi; ret; 
0x00122820: jne 0x12282f; add esp, 0x54; pop ebx; pop esi; ret; 
0x001229f9: jne 0x122a03; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x00122bca: jne 0x122b55; ret; 
0x00123615: jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x0012378d: jne 0x1237be; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00123b78: jne 0x123b90; lea eax, [ebx + 0x450c]; add esp, 4; pop ebx; pop esi; ret; 
0x00123e27: jne 0x123e00; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00123e88: jne 0x123e60; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0012405b: jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x001240ec: jne 0x1240f4; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012417f: jne 0x124187; add esp, 0x34; pop ebx; pop esi; ret; 
0x00124210: jne 0x124219; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001242ec: jne 0x1242e0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00124400: jne 0x12443f; add esp, 0x190; pop ebx; pop esi; pop edi; ret; 
0x0012448a: jne 0x124490; add esp, 0x1c; ret; 
0x00124f21: jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125064: jne 0x12506e; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x001250f4: jne 0x1250fe; add esp, 0x54; mov eax, ebx; pop ebx; pop esi; ret; 
0x00125c1d: jne 0x125c23; add esp, 0x1c; ret; 
0x001277b0: jne 0x1277b8; add esp, 0x34; pop ebx; pop esi; ret; 
0x00127841: jne 0x12784a; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00127c6a: jne 0x127cb1; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00127d4f: jne 0x127d99; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00127e61: jne 0x127e1c; add esp, 0xc; ret; 
0x00127ed0: jne 0x127eab; mov eax, esi; pop ebx; pop esi; ret; 
0x0012855e: jne 0x12851e; pop ebx; pop esi; pop edi; ret; 
0x00128b16: jne 0x128b71; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00129974: jne 0x1299b0; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001299a0: jne 0x129a0f; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00129a54: jne 0x129a90; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129a80: jne 0x129aef; add esp, 0x24; mov eax, edx; pop ebx; pop esi; ret; 
0x00129b86: jne 0x129bab; add esp, 0x14; pop ebx; pop esi; ret; 
0x00129c0a: jne 0x129c38; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00129c2e: jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129caa: jne 0x129cd8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129cce: jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012ab25: jne 0x12aacf; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0012aaf4: jne 0x12ab40; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0012abb5: jne 0x12ab5f; sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0012ab84: jne 0x12abd0; sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0012ac07: jne 0x12ac28; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0012af82: jne 0x12af60; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0012b03e: jne 0x12b008; call eax; 
0x0012b5d2: jne 0x12b5d8; ret; 
0x0012b5f6: jne 0x12b600; ret; 
0x0012b7a9: jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc40: jne 0x12bc46; add esp, 0x1c; ret; 
0x0012bc6a: jne 0x12bcb0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012bd4d: jne 0x12bd55; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012bdde: jne 0x12bde7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012c149: jne 0x12c155; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0012c680: jne 0x12c68c; add esp, 0xe0; pop ebx; pop esi; pop edi; ret; 
0x0012ce8e: jne 0x12ce96; add esp, 0x24; pop ebx; pop esi; ret; 
0x0012cfd0: jne 0x12cff9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012d060: jne 0x12d0b8; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012d2e0: jne 0x12d330; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012d464: jne 0x12d490; mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012d900: jne 0x12d929; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012d990: jne 0x12d9b9; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012da34: jne 0x12da3d; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0012dd85: jne 0x12de1f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0012e3a0: jne 0x12e3f0; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012ed2d: jne 0x12ed36; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0012f14d: jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1b5: jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f234: jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2ad: jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f319: jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f399: jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f61b: jne 0x12f624; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0012f684: jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f785: jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7f5: jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbdd: jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc45: jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fccd: jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd45: jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffb4: jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x0013002a: jne 0x130060; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x001300cb: jne 0x1300d1; add esp, 0x1c; ret; 
0x00130139: jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301c4: jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302cc: jne 0x1302d2; add esp, 0x7c; ret; 
0x0013035b: jne 0x130361; add esp, 0x1c; ret; 
0x00130445: jne 0x130447; add byte ptr [eax], al; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00130491: jne 0x130493; add byte ptr [eax], al; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013094b: jne 0x13094d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00130e69: jne 0x130e91; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00131060: jne 0x131062; add byte ptr [eax], al; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00131728: jne 0x131762; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0013327a: jne 0x133288; mov eax, edx; pop ebx; pop esi; ret; 
0x001332f5: jne 0x133300; mov eax, edx; pop ebx; pop esi; ret; 
0x001334e9: jne 0x1334f0; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b3e: jne 0x133b48; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b9e: jne 0x133ba8; mov eax, edx; pop ebx; pop esi; ret; 
0x00133d89: jne 0x133d90; mov eax, edx; pop ebx; pop esi; ret; 
0x0013445d: jne 0x1344b4; stc; call dword ptr [edx + 0x50]; 
0x001344d0: jne 0x134527; stc; call dword ptr [eax - 1]; 
0x0013463c: jne 0x134648; add esp, 4; pop ebx; pop esi; ret; 
0x001353a3: jne 0x13538f; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00137075: jne 0x13702b; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00137572: jne 0x137518; push ebx; call dword ptr [esi + 0x14]; 
0x00137eae: jne 0x137ee0; pop ebx; pop esi; pop edi; ret; 
0x00138086: jne 0x138074; add esp, 4; pop ebx; pop esi; ret; 
0x0013916a: jne 0x1390f0; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x001396ca: jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x0013979d: jne 0x139785; mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0013977d: jne 0x139790; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x139798; ret; 
0x0013a900: jne 0x13a910; pop ebx; pop esi; pop edi; ret; 
0x0013ae39: jne 0x13ae45; add esp, 0x2c; ret; 
0x0013bc73: jne 0x13bc60; call 0x13a0a0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x0013bd4f: jne 0x13bd40; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0013bee4: jne 0x13be9e; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x0013c089: jne 0x13c095; add esp, 0x2c; ret; 
0x0013d1af: jne 0x13d21a; add esp, 0x14; pop ebx; pop esi; ret; 
0x0013dd00: jne 0x13dd23; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0013ee2d: jne 0x13ee40; shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0013efad: jne 0x13efc0; mov eax, ebx; pop ebx; ret; 
0x0013f44a: jne 0x13f480; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013f861: jne 0x13f869; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0013f925: jne 0x13f96b; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00146393: jne 0x1463d3; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001465a6: jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465ee: jne 0x1465f4; add esp, 0x1c; ret; 
0x0014663d: jne 0x146643; add esp, 0x1c; ret; 
0x0014800b: jne 0x148017; add esp, 0x810; pop ebx; pop esi; pop edi; ret; 
0x001482ea: jne 0x1482f6; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x0014847e: jne 0x148448; mov eax, 1; pop ebx; ret; 
0x00148522: jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485c2: jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x00148682: jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x00148722: jne 0x14874d; add esp, 0x11c; ret; 
0x00148c47: jne 0x148c8c; add esp, 0x1c; ret; 
0x001498b1: jne 0x1498c0; pop ebx; pop esi; pop edi; ret; 
0x001498f7: jne 0x1498e0; pop ebx; pop esi; pop edi; ret; 
0x0014c87a: jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x0014f940: jne 0x14f950; add esp, 4; pop ebx; pop esi; ret; 
0x0015040a: jne 0x150400; ret; 
0x001503fa: jne 0x150407; ret; 
0x00150a53: jne 0x150a00; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00150f2a: jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x00153c52: jne 0x153c40; add esp, 8; pop ebx; ret; 
0x001543b4: jne 0x154380; pop ebx; pop esi; ret; 
0x00154938: jne 0x15493e; add esp, 0x1c; ret; 
0x00154a94: jne 0x154aa0; mov eax, ecx; ret; 
0x00155043: jne 0x155070; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00159f0d: jne 0x159f00; mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x0015da6d: jne 0x15da50; pop ebx; pop esi; pop edi; ret; 
0x00160666: jne 0x160650; add esp, 4; pop ebx; pop esi; ret; 
0x0016c561: jne 0x16c56a; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0016c5e9: jne 0x16c5f8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016cdaf: jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x0016cf89: jne 0x16cfa8; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016d024: jne 0x16d0c3; add esp, 0x34; pop ebx; pop esi; ret; 
0x0016d15c: jne 0x16d190; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016d1fd: jne 0x16d210; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016d394: jne 0x16d3c9; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016dd42: jne 0x16dd50; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016dd8d: jne 0x16dda0; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016de4d: jne 0x16de58; add esp, 4; pop ebx; pop esi; ret; 
0x0016dec9: jne 0x16ded8; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0016e035: jne 0x16e058; mov dword ptr [eax], 0; pop ebx; ret; 
0x0016e183: jne 0x16e2c0; sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016ee26: jne 0x16ee38; xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016f2e7: jne 0x16f316; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0016f372: jne 0x16f3a6; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016fa57: jne 0x16fa68; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0016fcd9: jne 0x16fcef; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00170552: jne 0x170540; pop ebx; ret; 
0x00170666: jne 0x170670; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00170709: jne 0x170718; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00171e1c: jne 0x171da1; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00172c5d: jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00174f35: jne 0x174f87; push edi; call dword ptr [eax + 0x14]; 
0x00175c46: jne 0x175ce7; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00175e16: jne 0x175e27; add esp, 0x1c; ret; 
0x00175e94: jne 0x175eac; add esp, 0x74; pop ebx; pop edi; ret; 
0x00175f42: jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fe2: jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x001760a2: jne 0x1760e7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00176192: jne 0x1761d7; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x001762ae: jne 0x1762be; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00176319: jne 0x176330; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x00176326: jne 0x176337; add esp, 0x1c; ret; 
0x001763a9: jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x0017649f: jne 0x17651a; add esp, 0x110; pop ebx; pop esi; pop edi; ret; 
0x001768c1: jne 0x1768e3; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017724c: jne 0x177252; add esp, 0x4c; ret; 
0x001772bc: jne 0x1772c2; add esp, 0x4c; ret; 
0x0017732c: jne 0x177332; add esp, 0x4c; ret; 
0x0017739c: jne 0x1773a2; add esp, 0x4c; ret; 
0x001773ff: jne 0x177405; add esp, 0x4c; ret; 
0x0017745f: jne 0x177465; add esp, 0x4c; ret; 
0x001774cc: jne 0x1774d2; add esp, 0x4c; ret; 
0x0017754c: jne 0x177552; add esp, 0x4c; ret; 
0x00177941: jne 0x17794c; add esp, 0x94; pop ebx; pop edi; ret; 
0x00177a3d: jne 0x177a43; add esp, 0x1c; ret; 
0x00177a8c: jne 0x177abc; add esp, 0x1c; ret; 
0x00177b09: jne 0x177af0; add esp, 8; pop ebx; ret; 
0x00177d93: jne 0x177da0; mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x00179226: jne 0x17922c; add esp, 0x2c; ret; 
0x001792d8: jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c8: jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x0017946a: jne 0x17951e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0017956a: jne 0x17961e; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret; 
0x0017969f: jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x0017973f: jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797fd: jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x00179881: jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x00179915: jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x00179eb0: jne 0x179f2f; add esp, 0x14; pop ebx; pop esi; ret; 
0x00179fac: jne 0x17a01c; add esp, 0x14; pop ebx; pop esi; ret; 
0x0017a14f: jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1ef: jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a28f: jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a32f: jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017a71e: jne 0x17a741; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017a973: jne 0x17a97b; add esp, 0x54; pop ebx; pop esi; ret; 
0x0017a9a2: jne 0x17a9b0; add esp, 0xc; ret; 
0x0017aa26: jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa86: jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aaf0: jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab12: jne 0x17ab20; add esp, 0xc; ret; 
0x0017aba0: jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017b540: jne 0x17b549; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017bd40: jne 0x17bd49; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0017f8a6: jne 0x17f8e5; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0017f9ce: jne 0x17fa03; add esp, 0x514; mov eax, esi; pop ebx; pop esi; ret; 
0x0017ff8b: jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x00180212: jne 0x180244; add esp, 0x14; pop ebx; pop esi; ret; 
0x00180362: jne 0x180394; add esp, 0x14; pop ebx; pop esi; ret; 
0x00180485: jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x0018103f: jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x00182c0d: jne 0x182c00; mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00183345: jne 0x1833f0; pop ebx; pop esi; pop edi; ret; 
0x00183d69: jne 0x183d0b; push 0x28; push edi; call eax; 
0x00183e5e: jne 0x183e8e; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x001840ab: jne 0x1840a8; jmp dword ptr [esi - 0x70]; 
0x0018407f: jne 0x1840a9; add esp, 0x24; mov eax, ebx; pop ebx; pop esi; ret; 
0x00184106: jne 0x18414c; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x001848d1: jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x00184cf6: jne 0x184da8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00186128: jne 0x186130; pop ebx; ret; 
0x00186150: jne 0x186158; ret; 
0x0018618c: jne 0x186198; add esp, 4; pop ebx; pop esi; ret; 
0x0018649b: jne 0x1864a8; add esp, 8; pop ebx; ret; 
0x00187215: jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x001872d2: jne 0x1872f6; mov eax, 4; add esp, 0xc; ret; 
0x001877a4: jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x001890c0: jne 0x1890d0; add esp, 8; pop ebx; ret; 
0x00189f4d: jne 0x189f40; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0018a0ad: jne 0x18a0b3; add esp, 0x1c; ret; 
0x0018fedf: jne 0x18fee8; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00190258: jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001902f3: jne 0x1902fb; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019036d: jne 0x190375; add esp, 0x14; pop ebx; pop esi; ret; 
0x0019048b: jne 0x19048d; add byte ptr [eax], al; mov ebx, 3; call dword ptr gs:[0x10]; 
0x001905cf: jne 0x1905d5; add esp, 0x2c; ret; 
0x0019cd6e: jne 0x19cde0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019e817: jne 0x19e670; pop ebp; xor eax, eax; ret; 
0x001a388c: jne 0x1a38a0; pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x001a4277: jne 0x1a49f0; pop ebx; ret; 
0x001a40b0: jne 0x1a4a06; pop ebx; ret; 
0x001a59ef: jne 0x1a5c30; pop ebx; ret; 
0x001a70a9: jne 0x1a72d0; pop ebx; ret; 
0x001a7166: jne 0x1a72f0; pop ebx; ret; 
0x001a756a: jne 0x1a7562; ret 0x7504; 
0x001a7569: jne 0x1a75e0; test dl, 4; jne 0x1a75e4; add eax, 3; ret; 
0x001a756e: jne 0x1a75e4; add eax, 3; ret; 
0x001a7588: jne 0x1a75f0; test dl, 0x40; jne 0x1a75f4; add eax, 7; ret; 
0x001a758d: jne 0x1a75f4; add eax, 7; ret; 
0x001a75af: jne 0x1a7600; test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x001a75b4: jne 0x1a7604; add eax, 0xb; ret; 
0x001a75c8: jne 0x1a7610; test dh, 0x40; jne 0x1a7614; add eax, 0xf; ret; 
0x001a75cd: jne 0x1a7614; add eax, 0xf; ret; 
0x001a789e: jne 0x1a7960; test al, 0x40; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a78a6: jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a776e: jne 0x1a7970; test dl, 0x40; jne 0x1a79f0; lea eax, [edi + 7]; pop edi; ret; 
0x001a78f9: jne 0x1a79e0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a7860: jne 0x1a79f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a781a: jne 0x1a79f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a77bd: jne 0x1a79f0; lea eax, [edi + 3]; pop edi; ret; 
0x001a7777: jne 0x1a79f0; lea eax, [edi + 7]; pop edi; ret; 
0x001a7ebd: jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7d3d: jne 0x1a7dc0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a7d62: jne 0x1a7df0; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a7d8c: jne 0x1a7e20; lea eax, [edi - 8]; pop edi; ret; 
0x001a7db5: jne 0x1a7e50; lea eax, [edi - 4]; pop edi; ret; 
0x001a7eb4: jne 0x1a7f90; and eax, 0xf; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a823f: jne 0x1a8360; lea eax, [edi + 3]; pop edi; ret; 
0x001a8262: jne 0x1a8390; lea eax, [edi + 7]; pop edi; ret; 
0x001a8283: jne 0x1a83b0; test ah, 4; jne 0x1a83c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a828c: jne 0x1a83c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a82ac: jne 0x1a83e0; test ah, 0x40; jne 0x1a83f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a82b5: jne 0x1a83f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a8332: jne 0x1a8400; xor eax, eax; pop edi; ret; 
0x001a8421: jne 0x1a84f0; sub edx, 4; jb 0x1a8590; lea eax, [edi + 3]; pop edi; ret; 
0x001a8452: jne 0x1a8520; sub edx, 8; jb 0x1a8590; lea eax, [edi + 7]; pop edi; ret; 
0x001a848c: jne 0x1a8550; sub edx, 0xc; jb 0x1a8590; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a8c7a: jne 0x1a88a0; xor eax, eax; ret; 
0x001a875d: jne 0x1a8940; mov eax, ecx; ret; 
0x001a8755: jne 0x1a8950; test al, 2; jne 0x1a8940; mov eax, ecx; ret; 
0x001a88e2: jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a88da: jne 0x1a8980; test al, 0x20; jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a890c: jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a8935: jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x001a87ca: jne 0x1a8a00; xor eax, eax; ret; 
0x001a8809: jne 0x1a8a80; xor eax, eax; ret; 
0x001a8a28: jne 0x1a8b90; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x001a8b12: jne 0x1a8bc0; add edx, 4; jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x001a8b4b: jne 0x1a8bf0; add edx, 8; jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8b75: jne 0x1a8c20; add edx, 0xc; jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8f07: jne 0x1a8fa0; test al, 4; jne 0x1a8fb0; lea eax, [edx + 3]; ret; 
0x001a8f0f: jne 0x1a8fb0; lea eax, [edx + 3]; ret; 
0x001a8f2a: jne 0x1a8fd0; test al, 0x40; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001a8f32: jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001a8f53: jne 0x1a9000; test ah, 4; jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x001a8f5c: jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x001a8f7c: jne 0x1a9030; test ah, 0x40; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001a8f85: jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001a9420: jne 0x1a9430; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x001a9452: jne 0x1a9510; sub edi, 4; jb 0x1a95b0; lea eax, [eax + 3]; pop edi; ret; 
0x001a933f: jne 0x1a9705; add eax, 3; pop edi; ret; 
0x001a9365: jne 0x1a9719; add eax, 7; pop edi; ret; 
0x001a9383: jne 0x1a9728; test dh, 4; jne 0x1a972d; add eax, 0xb; pop edi; ret; 
0x001a938c: jne 0x1a972d; add eax, 0xb; pop edi; ret; 
0x001a93b5: jne 0x1a9741; add eax, 0xf; pop edi; ret; 
0x001a9bf7: jne 0x1a9c40; pop edi; pop esi; pop ebx; ret; 
0x001a9d28: jne 0x1a9d30; pop ebx; ret; 
0x001a9ddc: jne 0x1a9ea0; test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x001a9eb7: jne 0x1a9ed0; test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001a9ee6: jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x001a9ef3: jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x001a9ebc: jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001a9de5: jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x001aa077: jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa06f: jne 0x1aa140; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa113: jne 0x1aa150; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x001aa143: jne 0x1aa160; lea eax, [edi - 8]; pop edi; ret; 
0x001aa79b: jne 0x1aa7d0; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001aa7b3: jne 0x1aa7e0; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000243a5: jne 0x24373; call dword ptr [ebp - 0x38]; 
0x000a75bd: jne 0x243d8; pop ebx; pop esi; pop edi; ret; 
0x001872be: jne 0x249d3; mov eax, 8; add esp, 0xc; ret; 
0x00024ac3: jne 0x24a92; ret; 
0x00024afb: jne 0x24af0; ret; 
0x00025501: jne 0x25507; add esp, 0x1c; ret; 
0x000255a1: jne 0x255d6; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00025fff: jne 0x25fe4; add esp, 4; pop ebx; pop esi; ret; 
0x0002fa90: jne 0x2fac2; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00034278: jne 0x34280; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00035174: jne 0x35180; mov eax, edx; add esp, 0xc; ret; 
0x000351b4: jne 0x351c0; mov eax, edx; add esp, 0xc; ret; 
0x00036b3f: jne 0x36b10; pop ebx; pop esi; pop edi; ret; 
0x000381dc: jne 0x381d7; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x000381e6: jne 0x381e1; jmp dword ptr [esi - 0x77]; 
0x00038986: jne 0x38981; call dword ptr [edx - 0x77]; 
0x0003a061: jne 0x3a040; ret; 
0x0003b07d: jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003bc26: jne 0x3bc30; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bfc5: jne 0x3bfd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003c2f1: jne 0x3c300; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003c5ec: jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003c652: jne 0x3c660; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003c937: jne 0x3c942; add esp, 0x124; pop ebx; pop esi; ret; 
0x0003c97a: jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc99: jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x0003ce6d: jne 0x3ce78; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003ceed: jne 0x3cef8; add esp, 0x114; pop ebx; pop edi; ret; 
0x0003cf5a: jne 0x3cf9e; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003d001: jne 0x3d00c; add esp, 0x94; pop ebx; pop edi; ret; 
0x0003d07f: jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d224: jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d637: jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003d66c: jne 0x3d670; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0003d97c: jne 0x3d984; add esp, 0x24; pop ebx; pop esi; ret; 
0x0003dad7: jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db57: jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbe0: jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003dd53: jne 0x3dd67; add esp, 0x220; pop ebx; pop esi; pop edi; ret; 
0x0003ddb1: jne 0x3dd8f; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0003df02: jne 0x3defd; call dword ptr [eax - 0x18]; 
0x0003e1be: jne 0x3e1c4; add esp, 0x1c; ret; 
0x0003ed55: jne 0x3ed50; call dword ptr [eax - 0x73]; 
0x0003f290: jne 0x3f296; add esp, 0x1c; ret; 
0x0003f3a3: jne 0x3f3a9; add esp, 0x1c; ret; 
0x0004050e: jne 0x404f4; add esp, 4; pop ebx; pop esi; ret; 
0x00040913: jne 0x40919; add esp, 0x1c; ret; 
0x000409b6: jne 0x409a0; lea eax, [ebx + 0x1848]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x00040b40: jne 0x40b46; add esp, 0x1c; ret; 
0x00040c11: jne 0x40c20; add esp, 4; pop ebx; pop esi; ret; 
0x00040cfe: jne 0x40d04; add esp, 0x2c; ret; 
0x00040e10: jne 0x40e16; add esp, 0x1c; ret; 
0x00040e93: jne 0x40e99; add esp, 0x1c; ret; 
0x00041eb1: jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x0004360e: jne 0x43620; bsr ecx, ecx; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x000436da: jne 0x436f0; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000534ab: jne 0x5350c; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000535ae: jne 0x535b4; add esp, 0x2c; ret; 
0x000536cb: jne 0x536c0; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0005379f: jne 0x53750; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0005388e: jne 0x53880; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00053d4d: jne 0x53d40; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00053d75: jne 0x53d60; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00053e4d: jne 0x53e40; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00053e75: jne 0x53e60; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00054fef: jne 0x54fa0; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x00055892: jne 0x5589d; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00055920: jne 0x5592b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x00059e29: jne 0x59e34; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x0005abdc: jne 0x5abfb; add esp, 0x434; pop ebx; pop esi; ret; 
0x0005ad47: jne 0x5ad60; test eax, eax; jne 0x5ad64; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005ad4b: jne 0x5ad64; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0005ae2c: jne 0x5ae3f; add esp, 0x1c; ret; 
0x0005b57d: jne 0x5b5a2; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0005f709: jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00061640: jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c7: jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x00062039: jne 0x62048; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00079336: jne 0x7935b; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x0007bfd9: jne 0x7bfd5; jmp dword ptr [esi - 0x70]; 
0x0007c93a: jne 0x7c944; push esi; call dword ptr [ebx + 0x1c]; 
0x0007d091: jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0007db63: jne 0x7dba0; mov dword ptr [ebx + 0x1a88], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0007e457: jne 0x7e461; push edx; call dword ptr [ebx + 0x1c]; 
0x0007eb59: jne 0x7eb3f; push esi; call dword ptr [eax + 0x2c]; 
0x0007ebea: jne 0x7ebd0; push esi; call dword ptr [eax + 0x2c]; 
0x0007ed95: jne 0x7eda3; push esi; call dword ptr [ebx + 0x2c]; 
0x0007ed92: jne 0x7eda8; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0007f11c: jne 0x7f16e; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0007f1fb: jne 0x7f203; add esp, 0x24; pop ebx; pop esi; ret; 
0x0007ff3d: jne 0x7ff47; push esi; call dword ptr [eax + 0x1c]; 
0x00080c35: jne 0x80c4c; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0008108c: jne 0x81080; ret; 
0x000815b3: jne 0x81630; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x00081867: jne 0x817f9; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000819b7: jne 0x81949; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00091060: jne 0x83248638; pushal; or dh, bh; xor eax, eax; ret; 
0x000845df: jne 0x845f0; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x000846ae: jne 0x84684; push edx; push ebx; push esi; call eax; 
0x00086196: jne 0x861af; add esp, 0x824; pop ebx; pop esi; ret; 
0x0008638d: jne 0x863ac; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00086468: jne 0x86484; add esp, 0xa0; pop ebx; pop esi; pop edi; ret; 
0x00087e36: jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x00087e7e: jne 0x87ea0; test eax, eax; jne 0x87ea4; mov dword ptr [edx + 0x1a9c], 0; mov dword ptr [edx + 0x1a94], 0; ret; 
0x00087e82: jne 0x87ea4; mov dword ptr [edx + 0x1a9c], 0; mov dword ptr [edx + 0x1a94], 0; ret; 
0x000881e6: jne 0x881f0; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000895d0: jne 0x895e0; add esp, 8; pop ebx; ret; 
0x0008b46b: jne 0x8b470; ret; 
0x0008c37a: jne 0x8c360; ret; 
0x0008c5f1: jne 0x8c620; add esp, 4; pop ebx; pop esi; ret; 
0x0008cdf9: jne 0x8cde0; add esp, 4; pop ebx; pop esi; ret; 
0x0008d31a: jne 0x8d310; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0008d303: jne 0x8d318; ret; 
0x0008d366: jne 0x8d378; sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008d703: jne 0x8d740; mov dword ptr [ebx + 0x1abc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008d77e: jne 0x8d7a0; test eax, eax; jne 0x8d7a4; mov dword ptr [edx + 0x1abc], 0; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x0008d782: jne 0x8d7a4; mov dword ptr [edx + 0x1abc], 0; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x0008e88a: jne 0x8e892; add esp, 0x24; pop ebx; pop esi; ret; 
0x0008e9f3: jne 0x8ea3d; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008eb61: jne 0x8eba5; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0008f0f3: jne 0x8f0fc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0008f283: jne 0x8f290; ret; 
0x0008f468: jne 0x8f470; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f4eb: jne 0x8f530; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f5cb: jne 0x8f610; xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f70f: jne 0x8f720; xend; xor eax, eax; add esp, 0xc; ret; 
0x0008fb6a: jne 0x8fb61; and eax, 0x39; cmp eax, 8; je 0x8fb78; add esp, 0xc; ret; 
0x0009027f: jne 0x90221; mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00091063: jne 0x91080; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000916c1: jne 0x917cb; add esp, 0x94; pop ebx; pop esi; ret; 
0x0009191c: jne 0x9193b; add esp, 0x24; pop ebx; pop esi; ret; 
0x00092aa1: jne 0x92aa7; add esp, 0x2c; ret; 
0x00092b61: jne 0x92b6a; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00092f03: jne 0x92f27; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x00093d35: jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000940a4: jne 0x938cc; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000944a9: jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x000944a0: jne 0x944d9; test byte ptr [edx + 0x80], 0x10; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x00094e98: jne 0x94ea0; mov eax, edx; pop ebx; pop esi; ret; 
0x00095196: jne 0x951a0; xor eax, eax; pop ebx; ret; 
0x00095ca2: jne 0x95ca8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x00095dd3: jne 0x95ddb; add esp, 0x14; pop ebx; pop esi; ret; 
0x00095dfc: jne 0x95e0a; mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x000975fd: jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x0009768d: jne 0x97693; add esp, 0x2c; ret; 
0x000983fe: jne 0x98410; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x00098443: jne 0x98460; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00098599: jne 0x985e0; test al, 1; je 0x985e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x00098941: jne 0x98947; add esp, 0x2c; ret; 
0x00098db1: jne 0x98db7; add esp, 0x2c; ret; 
0x000992cd: jne 0x992d3; add esp, 0x2c; ret; 
0x0009971d: jne 0x99723; add esp, 0x2c; ret; 
0x00099776: jne 0x99780; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00099836: jne 0x9980a; mov eax, 0x10; pop ebx; ret; 
0x0009a7d9: jne 0x9a820; mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009a814: jne 0x9a83f; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0009a947: jne 0x9a950; xor eax, eax; ret; 
0x0009aa50: jne 0x9aa69; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009ac79: jne 0x9ac80; xor eax, eax; pop ebx; pop esi; ret; 
0x0009ad22: jne 0x9ad5b; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x0009b9b8: jne 0x9b9c8; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009ba6d: jne 0x9baa3; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009bb0e: jne 0x9bb5b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009bd00: jne 0x9bd10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009bd43: jne 0x9bd36; xor eax, eax; pop ebx; ret; 
0x0009bd91: jne 0x9bda0; xor eax, eax; pop ebx; ret; 
0x0009c63a: jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c8: jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009c9ce: jne 0x9ca07; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009cb34: jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd94: jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009cf13: jne 0x9cf62; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009cfce: jne 0x9d01b; add esp, 0x124; pop ebx; pop esi; ret; 
0x0009d36f: jne 0x9d360; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009dabc: jne 0x9dab0; pop ebx; ret; 
0x0009dada: jne 0x9dae7; ret; 
0x0009e410: jne 0x9e3b0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009eb7a: jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009f701: jne 0x9f70d; add esp, 0x90; pop ebx; pop esi; pop edi; ret; 
0x0009faf6: jne 0x9fb20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009fdd4: jne 0x9fddc; add esp, 0x24; pop ebx; pop esi; ret; 
0x0009ff42: jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x0009ff67: jne 0x9ffb0; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x000a03fd: jne 0xa049f; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000a0502: jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000a09a9: jne 0xa09c7; add esp, 0xb4; pop ebx; pop esi; ret; 
0x000a0df7: jne 0xa0e00; add esp, 8; pop ebx; ret; 
0x000a1ba2: jne 0xa1bdc; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000a4ffc: jne 0xa5008; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000a51ae: jne 0xa5180; mov dword ptr [edx + 0x3c68], 0; pop ebx; pop esi; ret; 
0x000a6c97: jne 0xa6ca2; add esp, 0x38; mov eax, ebx; pop ebx; ret 4; 
0x000a74d5: jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x000a754d: jne 0xa7540; xor eax, eax; ret; 
0x000a75a8: jne 0xa7580; sub esp, 0xc; push eax; call edx; 
0x000a761b: jne 0xa7610; mov eax, ecx; ret; 
0x000a7d85: jne 0xa7d91; add esp, 0x14; mov eax, esi; pop ebx; pop esi; ret 4; 
0x000a83c8: jne 0xa83b0; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a8c25: jne 0xa8c37; pop ebx; pop esi; pop edi; ret; 
0x000a8e3d: jne 0xa8e30; add eax, 1; test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x000a8e2a: jne 0xa8e33; ret; 
0x000a92b4: jne 0xa92c8; lea eax, [edx - 0x971c4]; and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000a935c: jne 0xa9350; mov eax, edx; pop ebx; ret; 
0x000a9cf2: jne 0xa9cf6; lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000a9d32: jne 0xa9d36; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000a9d64: jne 0xa9d78; lea eax, [edx - 0x9e5e4]; and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000aa8a2: jne 0xaa8a6; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000aaa74: jne 0xaaa88; lea eax, [edx - 0xa1444]; and ch, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000abc72: jne 0xabc76; lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000ac1fd: jne 0xac1f0; mov eax, edx; pop ebx; ret; 
0x000ac241: jne 0xac230; mov eax, edx; pop ebx; pop esi; ret; 
0x000ac3a1: jne 0xac390; mov eax, edx; pop ebx; ret; 
0x000aca54: jne 0xaca68; lea eax, [edx - 0x9c0d4]; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000acae2: jne 0xacae6; lea edx, [edx - 0x17b744]; cmove eax, edx; ret; 
0x000acb14: jne 0xacb28; lea eax, [edx - 0x9ffd4]; and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x000acb62: jne 0xacb66; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x000ad9e6: jne 0xad9d5; or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x000afeb5: jne 0xafea0; pop ebx; pop esi; pop edi; ret; 
0x000aff47: jne 0xaff00; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x000b01c0: jne 0xb0188; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000b391c: jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b401c: jne 0xb3f81; pop ebx; ret; 
0x000b7de1: jne 0xb83d0; cmp byte ptr [eax], 1; sbb eax, -1; pop edi; pop ebx; ret; 
0x000b846c: jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b8591: jne 0xb83d1; pop ebx; ret; 
0x000b9bbb: jne 0xb9b2b; call 0x187611; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9bf8: jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb1fb: jne 0xbb16b; call 0x187611; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb23a: jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bc09a: jne 0xbc092; ret 0x7504; 
0x000be39a: jne 0xbe392; ret 0x7504; 
0x000c119b: jne 0xc110b; call 0x187611; add ecx, 0x109ece; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1c32: jne 0xc1d20; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1ce4: jne 0xc1d40; xor eax, eax; pop edi; ret; 
0x000c1caa: jne 0xc1d60; xor eax, eax; pop edi; ret; 
0x000c1f0a: jne 0xc1fc0; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x000c1f7a: jne 0xc1ff0; xor eax, eax; ret; 
0x000c1fa9: jne 0xc2010; xor eax, eax; ret; 
0x000c2431: jne 0xc2470; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c2937: jne 0xc293d; xor eax, eax; pop ebx; ret; 
0x000c29cc: jne 0xc2bd7; pop esi; xor eax, eax; pop ebx; ret; 
0x000c2a40: jne 0xc2beb; pop esi; xor eax, eax; pop ebx; ret; 
0x000c32b1: jne 0xc32b6; lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x000c3362: jne 0xc3358; xor eax, eax; ret; 
0x000c34dd: jne 0xc34e1; xor eax, eax; ret; 
0x000c377d: jne 0xc3778; pop esi; ret; 
0x000c42fb: jne 0xc4455; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c550c: jne 0xc5500; ret; 
0x000c54f0: jne 0xc550a; ret; 
0x000c6342: jne 0xc6346; cmove eax, edx; ret; 
0x000c6571: jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000c6a07: jne 0xc6a55; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000c6dd5: jne 0xc6dc0; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000d4a9f: jne 0xd4ba2; add esp, 0x40; pop ebx; pop esi; pop edi; ret; 
0x000d4c8e: jne 0xd4cb7; lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d4cf4: jne 0xd4d08; lea eax, [edx - 0x936c4]; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000d8e39: jne 0xd8e44; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8ec2: jne 0xd8ecd; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d8f50: jne 0xd8f5b; add esp, 0x28; mov eax, ebx; pop ebx; ret 4; 
0x000d9bbf: jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9b9e: jne 0xd9d10; xor eax, eax; pop edi; pop esi; ret; 
0x000d9d8f: jne 0xd9d80; mov eax, ecx; pop ebx; pop esi; ret; 
0x000d9ff8: jne 0xd9fd8; add eax, 1; ret; 
0x000d9fce: jne 0xd9ff2; ret; 
0x000da0c7: jne 0xda0bc; xor edx, edx; mov eax, edx; ret; 
0x000da0ec: jne 0xda0e0; mov eax, ecx; pop ebx; ret; 
0x000dabee: jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac72: jne 0xdac78; add esp, 0x1c; ret; 
0x000dacbc: jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad1e: jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dae47: jne 0xdae70; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000dbfc2: jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x000dc237: jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc2ec: jne 0xdc34b; add esp, 0x24; pop ebx; pop esi; ret; 
0x000dc5bb: jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000deeee: jne 0xdef19; add esp, 0x24; pop ebx; pop esi; ret; 
0x000def86: jne 0xdefa9; add esp, 0x24; pop ebx; pop esi; ret; 
0x000df44c: jne 0xdf455; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x000dfc9d: jne 0xdfca8; add esp, 4; pop ebx; pop esi; ret; 
0x000e54f6: jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79b6: jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b2a: jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7b93: jne 0xe7ba1; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000e7d48: jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e7e01: jne 0xe7e40; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x000e7db7: jne 0xe7e7b; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000e833e: jne 0xe8373; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000e8b6e: jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8be0: jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c84: jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000e8d28: jne 0xe8d34; add esp, 0xe8; mov eax, edx; pop ebx; ret; 
0x000e8e94: jne 0xe8ef8; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e926f: jne 0xe92a4; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000e9b3c: jne 0xe9b12; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ea04c: jne 0xea022; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000efec3: jne 0xefed7; add esp, 0x1c; ret; 
0x000f1012: jne 0xf0ff3; xor eax, eax; pop ebx; ret; 
0x000f11fc: jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3b22: jne 0xf3b03; xor eax, eax; pop ebx; ret; 
0x000f3d0c: jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4912: jne 0xf48f3; xor eax, eax; pop ebx; ret; 
0x000f4afc: jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7442: jne 0xf7423; xor eax, eax; pop ebx; ret; 
0x000f762c: jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8252: jne 0xf8233; xor eax, eax; pop ebx; ret; 
0x000f843c: jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x000fad62: jne 0xfad31; xor eax, eax; ret; 
0x000fad43: jne 0xfad59; mov eax, 1; ret; 
0x000fafe9: jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x000fb080: jne 0xfb0c4; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x000fb4d6: jne 0xfb570; mov eax, edx; pop ebx; ret; 
0x000fb5bd: jne 0xfb620; ret; 
0x00115c37: jno 0x115c4b; add byte ptr [ebx - 0x75], dl; push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012e487: jno 0x12e489; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013982e: jno 0x139834; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0016f56f: jno 0x16f5c7; stc; call dword ptr [eax + 0x6a]; 
0x00172122: jno 0x17217a; stc; call dword ptr [eax + 0x6a]; 
0x001722f0: jno 0x172348; stc; call dword ptr [eax + 0x6a]; 
0x00172a74: jno 0x172acc; stc; call dword ptr [eax + 0x6a]; 
0x001738a6: jno 0x1738fe; stc; call dword ptr [eax + 0x6a]; 
0x00174ba3: jno 0x174bfb; stc; call dword ptr [eax + 0x6a]; 
0x001758b1: jno 0x175909; stc; call dword ptr [eax + 0x6a]; 
0x00177cb0: jno 0x177d08; stc; call dword ptr [eax + 0x6a]; 
0x001781c9: jno 0x178221; stc; call dword ptr [eax + 0x6a]; 
0x00178ac8: jno 0x178b20; stc; call dword ptr [eax + 0x6a]; 
0x00179148: jno 0x1791a0; stc; call dword ptr [eax + 0x6a]; 
0x00179be4: jno 0x179c3c; stc; call dword ptr [eax + 0x6a]; 
0x00179dfe: jno 0x179e56; stc; call dword ptr [eax + 0x6a]; 
0x0017a626: jno 0x17a5ab; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0017a681: jno 0x17a6d9; stc; call dword ptr [eax + 0x6a]; 
0x0017a681: jno 0x17a6d9; stc; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x001a880b: jno 0x1a880f; add byte ptr [eax], al; xor eax, eax; ret; 
0x0002ab95: jno 0x2ab90; call dword ptr [eax - 0x18]; 
0x0002abb8: jno 0x2abb3; call dword ptr [eax - 0x18]; 
0x0002ac22: jno 0x2ac1d; call dword ptr [eax - 0x18]; 
0x0002ac45: jno 0x2ac40; call dword ptr [eax - 0x18]; 
0x0002ac45: jno 0x2ac40; call dword ptr [eax - 0x18]; ret 0x96; 
0x0002ac68: jno 0x2ac63; call dword ptr [eax - 0x18]; 
0x0002acae: jno 0x2aca9; call dword ptr [eax - 0x18]; 
0x0002b820: jno 0x2b81b; call dword ptr [eax - 0x18]; 
0x0002b843: jno 0x2b83e; call dword ptr [eax - 0x18]; 
0x0002b866: jno 0x2b861; call dword ptr [eax - 0x18]; 
0x0002b903: jno 0x2b8fe; call dword ptr [eax - 0x18]; 
0x0002b926: jno 0x2b921; call dword ptr [eax - 0x18]; 
0x0002b96e: jno 0x2b969; call dword ptr [eax - 0x18]; 
0x0002c56f: jno 0x2c56a; call dword ptr [eax - 0x18]; 
0x0002c592: jno 0x2c58d; call dword ptr [eax - 0x18]; 
0x0002cf06: jno 0x2cf01; call dword ptr [eax - 0x18]; 
0x0002cf29: jno 0x2cf24; call dword ptr [eax - 0x18]; 
0x0002cf89: jno 0x2cf84; call dword ptr [eax - 0x18]; 
0x0002db47: jno 0x2db42; call dword ptr [eax - 0x18]; 
0x0002db6a: jno 0x2db65; call dword ptr [eax - 0x18]; 
0x0002db8d: jno 0x2db88; call dword ptr [eax - 0x18]; 
0x0002dbb0: jno 0x2dbab; call dword ptr [eax - 0x18]; 
0x0002dbf6: jno 0x2dbf1; call dword ptr [eax - 0x18]; 
0x0002dc19: jno 0x2dc14; call dword ptr [eax - 0x18]; 
0x0002e376: jno 0x2e371; call dword ptr [eax - 0x18]; 
0x0002e3bc: jno 0x2e3b7; call dword ptr [eax - 0x18]; 
0x0002e407: jno 0x2e402; call dword ptr [eax - 0x18]; 
0x0002ef9c: jno 0x2ef97; call dword ptr [eax - 0x18]; 
0x0002f079: jno 0x2f074; call dword ptr [eax - 0x18]; 
0x0002f09c: jno 0x2f097; call dword ptr [eax - 0x18]; 
0x0002f0bf: jno 0x2f0ba; call dword ptr [eax - 0x18]; 
0x0002f0e2: jno 0x2f0dd; call dword ptr [eax - 0x18]; 
0x0002f11a: jno 0x2f115; call dword ptr [eax - 0x18]; 
0x000360c4: jno 0x360f4; stc; call dword ptr [eax - 0x18]; 
0x0007c3f9: jno 0x7c3f5; jmp dword ptr [esi - 0x70]; 
0x000843d1: jno 0x843de; add byte ptr [ebp - 0x67caf7a], cl; call dword ptr [eax - 0x73]; 
0x000bdc9c: jno 0xbdc37; or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ccdd9: jno 0xccdd3; call dword ptr [esi + 0x53]; 
0x000d8508: jno 0xd8493; ret; 
0x0011ff9b: jnp 0x11ff6b; adc dword ptr [eax], eax; push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e45e: jnp 0x12e460; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013a0b5: jnp 0x13a10e; stc; call dword ptr [eax - 0x18]; 
0x001439c7: jnp 0x1439c8; jmp dword ptr [esi - 0x70]; 
0x0016f561: jnp 0x16f5bf; in al, dx; call dword ptr [eax - 0x73]; 
0x00187dc3: jnp 0x187dfd; jmp dword ptr [ebp - 0x75]; 
0x001a8bd4: jnp 0x1a8b63; inc ecx; push es; ret; 
0x00024f9a: jnp 0x2501a; and dword ptr [eax], eax; lea eax, [eax - 0x69094]; ret; 
0x000550b4: jnp 0x550ba; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000c13f0: jnp 0x5b18383a; pop esi; ret; 
0x000c1474: jnp 0x5b1838be; pop esi; ret; 
0x000c15b4: jnp 0x5b1839fe; pop esi; ret; 
0x0005df76: jnp 0x5df71; call dword ptr [eax - 0x73]; 
0x0005df89: jnp 0x5df84; call dword ptr [eax - 0x18]; 
0x0005df9b: jnp 0x5df96; call dword ptr [eax - 0x73]; 
0x0005dfae: jnp 0x5dfa9; call dword ptr [eax - 0x18]; 
0x0005dfc0: jnp 0x5dfbb; call dword ptr [eax - 0x73]; 
0x0005dfd3: jnp 0x5dfce; call dword ptr [eax - 0x18]; 
0x0005dfea: jnp 0x5dfe5; call dword ptr [eax - 0x73]; 
0x0005e00f: jnp 0x5e00a; call dword ptr [eax - 0x73]; 
0x0005e034: jnp 0x5e02f; call dword ptr [eax - 0x73]; 
0x0005e0a8: jnp 0x5e0a3; call dword ptr [eax - 0x73]; 
0x0005e0cd: jnp 0x5e0c8; call dword ptr [eax - 0x73]; 
0x000bdf6d: jnp 0x5e1403b7; ret; 
0x000bdff1: jnp 0x5e14043b; ret; 
0x000be0f1: jnp 0x5e14053b; ret; 
0x0005f56c: jnp 0x5f567; call dword ptr [eax - 0x73]; 
0x00060838: jnp 0x6086c; stc; call dword ptr [ecx + 0x50]; 
0x0008f39b: jnp 0x8f377; sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x00095271: jnp 0x9522f; add eax, 0x684f8b00; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00096972: jnp 0x9697c; add byte ptr [edi], cl; test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x000986f0: jnp 0x986fa; dec ecx; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00099083: jnp 0x9908d; dec ecx; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009b665: jnp 0x9b65f; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0009f59b: jnp 0x9f575; sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000acbe2: jnp 0xacbe8; cmove eax, edx; ret; 
0x00084e28: jnp 0xc08d866e; js 0x84e38; ret; 
0x000c54d2: jnp 0xc54d8; cmove eax, edx; ret; 
0x000c5532: jnp 0xc5538; cmove eax, edx; ret; 
0x000c6512: jnp 0xc6518; cmove eax, edx; ret; 
0x000c7212: jnp 0xc7218; cmove eax, edx; ret; 
0x000f6389: jnp 0xf6376; call dword ptr [eax + 0x6a]; 
0x00092c20: jnp 0xfee9af27; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0011f393: jns 0x11f392; idiv bh; add esp, 0x2c; ret; 
0x00127b9d: jns 0x127ba2; mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00128c93: jns 0x128cf9; idiv bh; add esp, 0x2c; ret; 
0x0012991b: jns 0x12991d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139831: jns 0x13983b; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0013d646: jns 0x13d64a; add ecx, dword ptr [edi]; test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x00153be2: jns 0x153be2; jmp dword ptr [esi - 0x70]; 
0x00163c7e: jns 0x163c7d; jmp dword ptr [esi - 0x70]; 
0x0016b093: jns 0x16b0f8; stc; call dword ptr [eax + 0x6a]; 
0x0016b0e7: jns 0x16b14c; stc; jmp dword ptr [ebp - 0x75]; 
0x0016b193: jns 0x16b1f8; stc; call dword ptr [eax - 0x18]; 
0x00174a2e: jns 0x174a23; call dword ptr [eax - 0x73]; 
0x00174a35: jns 0x174a2a; call dword ptr [eax + 0x57]; 
0x001764a0: jns 0x176423; les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00177d3d: jns 0x177d3e; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x001881be: jns 0x1881b0; jmp dword ptr [ebp - 0x75]; 
0x000bb816: jns 0x4798bb73; pop es; pop edi; pop esi; pop ebx; ret; 
0x0012c8d0: jns 0x59f565; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0005ab3b: jns 0x5ab03; inc eax; or byte ptr [eax], al; mov eax, edx; ret; 
0x0005b589: jns 0x5b584; call dword ptr [eax - 0x73]; 
0x0005b5a5: jns 0x5b5a0; call dword ptr [eax - 0x73]; 
0x0005b5b5: jns 0x5b5b0; call dword ptr [eax - 0x18]; 
0x0005b5c1: jns 0x5b5bc; call dword ptr [eax - 0x73]; 
0x0005b5d1: jns 0x5b5cc; call dword ptr [eax - 0x18]; 
0x0005b5dd: jns 0x5b5d8; call dword ptr [eax - 0x73]; 
0x0005b9b4: jns 0x5b9af; call dword ptr [eax - 0x73]; 
0x0005b9c4: jns 0x5b9bf; call dword ptr [eax - 0x18]; 
0x0005b9c4: jns 0x5b9bf; call dword ptr [eax - 0x18]; inc ebx; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0005ba58: jns 0x5ba53; call dword ptr [eax - 0x73]; 
0x0005ba68: jns 0x5ba63; call dword ptr [eax - 0x18]; 
0x0005bb97: jns 0x5bb92; call dword ptr [eax - 0x18]; 
0x0005be37: jns 0x5be32; call dword ptr [eax - 0x18]; 
0x000ba146: jns 0x5e6aa4a3; pop ebx; ret; 
0x000fc035: jns 0x5f6e1c13; pop ebp; ret; 
0x00189020: jns 0x5f76ebfe; ret; 
0x00066631: jns 0x66679; add byte ptr [ecx - 0x5a373], cl; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x00159f80: jns 0x74a36356; add byte ptr es:[ecx], dh; rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x000796f8: jns 0x796f3; call dword ptr [eax - 0x18]; 
0x000797a5: jns 0x797a0; call dword ptr [eax - 0x18]; 
0x000798de: jns 0x798d9; call dword ptr [eax - 0x18]; 
0x00079ab5: jns 0x79ab0; call dword ptr [eax - 0x18]; 
0x00079ab5: jns 0x79ab0; call dword ptr [eax - 0x18]; push edx; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0007bbd9: jns 0x7bbd5; jmp dword ptr [esi - 0x70]; 
0x00083426: jns 0x833b3; inc eax; or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x00089c7e: jns 0x89c19; push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0010e92a: jns 0x8dcad4f6; sbb dword ptr [eax], -0x5e; stc; call dword ptr [eax - 0x73]; 
0x0009570e: jns 0x958b4; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000964bc: jns 0x964bf; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000964ba: jns 0x96639; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a0346: jns 0xa034c; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a03ba: jns 0xa03c0; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000b4aea: jns 0xb4af9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b4b40: jns 0xb4b4c; add byte ptr [edi], cl; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b8fba: jns 0xb8fc9; add byte ptr [edi], cl; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000bb323: jns 0xbb32e; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000df094: jns 0xdf019; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000e21ee: jns 0xe2179; ret 0x448b; 
0x000e22a3: jns 0xe222e; ret 0x448b; 
0x000e2324: jns 0xe22af; ret 0x448b; 
0x000e7dea: jns 0xe7e60; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e7f5a: jns 0xe7f64; dec ecx; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x0018a0d9: jns 0xe91cc523; lodsd eax, dword ptr [esi]; or edx, esi; jmp dword ptr [esi - 0x70]; 
0x000fbbd1: jns 0xfbbc0; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00112e6f: jo 0x112df4; ret; 
0x001152cb: jo 0x115328; pop esi; pop edi; ret; 
0x00115b11: jo 0x115aa0; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x00120191: jo 0x120120; push esp; and al, 8; call dword ptr gs:[0x10]; 
0x00121c92: jo 0x121c21; push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x00122c04: jo 0x122b8f; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0012640d: jo 0x126405; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012d064: jo 0x12d0c1; pop esi; pop edi; ret; 
0x0012d2e4: jo 0x12d341; pop esi; pop edi; ret; 
0x0012e3a4: jo 0x12e401; pop esi; pop edi; ret; 
0x0012edce: jo 0x12ed76; stc; call dword ptr [eax + 0x55]; 
0x0012f61f: jo 0x12f67c; pop esi; pop edi; ret; 
0x0013d7a2: jo 0x13d72d; ret; 
0x0014931e: jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00149e09: jo 0x149e44; ret 0x840f; 
0x0014a0d4: jo 0x14a10f; ret; 
0x0014a2d0: jo 0x14a30b; ret 0x840f; 
0x0014a804: jo 0x14a83f; ret 0x840f; 
0x0015a95f: jo 0x15a9c0; stc; call dword ptr [eax - 0x18]; 
0x0015cf55: jo 0x15cfb6; stc; call dword ptr [eax - 0x18]; 
0x0015dc1c: jo 0x15dc73; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016171c: jo 0x161738; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0016c44d: jo 0x16c463; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016ee9f: jo 0x16eecd; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x00176272: jo 0x17629b; stc; call dword ptr [edi + 0x52]; 
0x0017abe2: jo 0x17abf0; call 0x85440; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0017e007: jo 0x17e032; ret; 
0x00190d76: jo 0x190d38; add bh, dh; ret 0xf; 
0x00190eb3: jo 0x190e36; ret 0x80; 
0x00190f1a: jo 0x190e9d; ret 0x80; 
0x00190f6c: jo 0x190eef; ret 0x80; 
0x001913f6: jo 0x1913b8; add bh, dh; ret 0xf; 
0x001926d8: jo 0x1926de; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192727: jo 0x19272d; add byte ptr [ebx], al; sbb al, 0xbb; jmp ebx; 
0x0019cd6f: jo 0x19cd80; mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001ab34e: jo 0x1ab2d9; ret; 
0x00025df0: jo 0x25deb; call dword ptr [eax - 0x73]; 
0x00025e0c: jo 0x25e07; call dword ptr [eax - 0x73]; 
0x0002610a: jo 0x26105; call dword ptr [edx - 0x73]; 
0x00027077: jo 0x27072; call dword ptr [eax - 0x73]; 
0x0002726c: jo 0x27267; dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x00027276: jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x000274d9: jo 0x274d4; jmp dword ptr [esi - 0x77]; 
0x00027519: jo 0x27514; call dword ptr [eax - 0x73]; 
0x00027549: jo 0x27544; call dword ptr [eax - 0x73]; 
0x0002756d: jo 0x27568; call dword ptr [eax - 0x73]; 
0x00027fa0: jo 0x27f9b; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x00027faa: jo 0x27fa5; jmp dword ptr [esi - 0x77]; 
0x000282a5: jo 0x282a0; call dword ptr [eax - 0x73]; 
0x000282b5: jo 0x282b0; call dword ptr [eax - 0x18]; 
0x000287b3: jo 0x287ae; call dword ptr [eax - 0x18]; 
0x00028870: jo 0x2886b; call dword ptr [eax - 0x18]; 
0x00028e18: jo 0x28e13; call dword ptr [eax - 0x18]; 
0x00028f63: jo 0x28f5e; call dword ptr [eax - 0x18]; 
0x0002933a: jo 0x29335; call dword ptr [eax - 0x18]; 
0x0002947f: jo 0x2947a; call dword ptr [eax - 0x18]; 
0x00029a68: jo 0x29a63; call dword ptr [eax - 0x18]; 
0x00029be6: jo 0x29be1; call dword ptr [eax - 0x18]; 
0x0002a0fe: jo 0x2a0f9; call dword ptr [eax - 0x18]; 
0x0002aae7: jo 0x2aae2; call dword ptr [eax - 0x18]; 
0x0002abe0: jo 0x2abdb; call dword ptr [eax - 0x18]; 
0x0002b1ea: jo 0x2b1e5; call dword ptr [eax - 0x18]; 
0x0002b8b8: jo 0x2b8b3; call dword ptr [eax - 0x18]; 
0x0002c434: jo 0x2c42f; call dword ptr [eax - 0x18]; 
0x0002cec0: jo 0x2cebb; call dword ptr [eax - 0x18]; 
0x0002cf4c: jo 0x2cf47; call dword ptr [eax - 0x18]; 
0x0002dab6: jo 0x2dab1; call dword ptr [eax - 0x18]; 
0x0002db01: jo 0x2dafc; call dword ptr [eax - 0x18]; 
0x0002e255: jo 0x2e250; call dword ptr [eax - 0x18]; 
0x0002e3e4: jo 0x2e3df; call dword ptr [eax - 0x18]; 
0x0002eda7: jo 0x2eda2; call dword ptr [eax - 0x18]; 
0x0002f056: jo 0x2f051; call dword ptr [eax - 0x18]; 
0x0003fd11: jo 0x3fca0; test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x0005bb9c: jo 0x5bb25; std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x00062af0: jo 0x62b6f; stc; call dword ptr [eax - 0x18]; 
0x00064224: jo 0x641af; ret; 
0x0006eab5: jo 0x6eb34; stc; call dword ptr [eax - 0x18]; 
0x0007d55d: jo 0x7d5c1; cli; jmp dword ptr [esi - 0x70]; 
0x0018454b: jo 0x84274c4b; ret; 
0x00087f4d: jo 0x87f63; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0008806d: jo 0x88083; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x0008a6c4: jo 0x8a6fe; call 0x11f090; add esp, 0x18; pop ebx; ret; 
0x0009c469: jo 0x9c46f; call dword ptr [eax]; 
0x0009e62d: jo 0x9e5b8; stc; call dword ptr [eax - 0x73]; 
0x000a0d17: jo 0xa0d1c; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x000a4fd3: jo 0xa4f6a; stc; call dword ptr [eax - 0x18]; 
0x000b01c3: jo 0xb01e1; pop ebx; pop esi; ret; 
0x000b9b9d: jo 0xb9b79; or al, 0; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bddc7: jo 0xbddcb; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdde3: jo 0xbdde9; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bde35: jo 0xbde3f; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdf29: jo 0xbdf3b; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfaf: jo 0xbdfc5; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be033: jo 0xbe04d; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c11fd: jo 0xc1201; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c1229: jo 0xc122f; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c12ab: jo 0xc12b5; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c13af: jo 0xc13c1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c1435: jo 0xc144b; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c14b9: jo 0xc14d3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000dad82: jo 0xdad88; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x000dadcf: jo 0xdadd5; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x000dd14d: jo 0xdd153; pop ebx; pop esi; pop edi; ret; 
0x000df02f: jo 0xdefbc; pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e8e98: jo 0xe8ef5; pop esi; pop edi; ret; 
0x000e9273: jo 0xe92d0; pop esi; pop edi; ret; 
0x0010e4b7: jp 0x10e4b9; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011521c: jp 0x115242; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x001217d3: jp 0x121811; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x00127eeb: jp 0x127ef0; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x0013f85e: jp 0x13f862; add byte ptr [ebp + 6], dh; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x001507a2: jp 0x150798; jmp dword ptr [ebp - 0x75]; 
0x001646b9: jp 0x1646ad; call dword ptr [eax - 0x18]; 
0x00173ab2: jp 0x173ab0; jmp dword ptr [esi - 0x70]; 
0x00176412: jp 0x1763e1; ljmp 0xc483:0x10c483ff; add al, 0x5b; pop esi; ret; 
0x00177d13: jp 0x177d14; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0019269b: jp 0x192697; jmp dword ptr [esi - 0x70]; 
0x001a964a: jp 0x1a9652; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x001a96ad: jp 0x1a96ba; add byte ptr [edi], cl; test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x001a96e5: jp 0x1a96f6; add byte ptr [esp + ebx*2 - 0x48], dh; adc byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x0003bc24: jp 0x3bc30; jne 0x3bc30; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003bfc3: jp 0x3bfd0; jne 0x3bfd0; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0003c2ef: jp 0x3c300; jne 0x3c300; fadd st(0); add esp, 8; pop ebx; ret; 
0x0003de15: jp 0x3de0f; jmp dword ptr [ebp - 1]; 
0x0003de65: jp 0x3de5f; jmp dword ptr [ebp - 1]; 
0x0005baca: jp 0x5bac5; call dword ptr [eax - 0x73]; 
0x0005bada: jp 0x5bad5; call dword ptr [eax - 0x18]; 
0x0005bb87: jp 0x5bb82; call dword ptr [eax - 0x73]; 
0x0005bce5: jp 0x5bce0; call dword ptr [eax - 0x73]; 
0x0005bcf5: jp 0x5bcf0; call dword ptr [eax - 0x18]; 
0x0005be27: jp 0x5be22; call dword ptr [eax - 0x73]; 
0x0005e047: jp 0x5e042; call dword ptr [eax - 0x18]; 
0x0007981c: jp 0x79817; call dword ptr [eax - 0x18]; 
0x000b9bc8: jp 0xb9bdb; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bd6e1: jp 0xbd6e4; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bd6f1: jp 0xbd6f5; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000bd721: jp 0xbd727; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000bd791: jp 0xbd79b; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000c08f5: jp 0xc08ff; mov eax, edi; pop ebx; pop edi; ret; 
0x000c0952: jp 0xc0964; mov eax, edi; pop ebx; pop edi; ret; 
0x000fd712: jp 0xfd76e; dec dword ptr [ecx + 0x72e82434]; pop edx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00109938: js 0x109973; ret 0x4f0f; 
0x00113470: js 0x1134cd; ret; 
0x0011f491: js 0x11f436; stc; call dword ptr [eax - 0x18]; 
0x00121ace: js 0x121ad8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x00121c8e: js 0x121c1b; pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00122a6c: js 0x122a78; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00126122: js 0x126171; stc; call dword ptr [eax + 0x55]; 
0x0012ba78: js 0x12ba1f; stc; call dword ptr [eax - 0x18]; 
0x0012c6ec: js 0x12c6ee; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012d3b2: js 0x12d3b5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012f6d6: js 0x12f6e0; add esp, 8; pop ebx; ret; 
0x00139506: js 0x13955e; stc; call dword ptr [eax - 0x75]; 
0x001436bf: js 0x1436cc; mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x001484ae: js 0x1484b1; sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x0014901d: js 0x148fcd; stc; call dword ptr [eax - 0x73]; 
0x00149ab3: js 0x149aa0; ret 0x8d2e; 
0x00154018: js 0x15400c; jmp dword ptr [ebp - 0x75]; 
0x00154006: js 0x154010; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00156a14: js 0x1569dd; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x001675df: js 0x167643; stc; jmp dword ptr [ebp - 0x75]; 
0x00169b5b: js 0x169bbf; stc; call dword ptr [eax + 0x57]; 
0x0016a2ff: js 0x16a363; stc; call dword ptr [eax + 0x51]; 
0x0016acfb: js 0x16ad5f; stc; call dword ptr [eax + 0x57]; 
0x0016b97f: js 0x16b9e3; stc; call dword ptr [eax + 0x51]; 
0x0016ea64: js 0x16eacd; in al, dx; call dword ptr [ebp + 0x50]; 
0x00171534: js 0x1714d6; cld; jmp dword ptr [esi - 0x70]; 
0x00173d28: js 0x173d26; jmp dword ptr [esi - 0x70]; 
0x00176f27: js 0x176eac; ret 0x8901; 
0x00178b34: js 0x178b60; cld; call dword ptr [eax - 0x73]; 
0x00189e95: js 0x189ea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0019326a: js 0x1932cf; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195cea: js 0x195d27; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d6a: js 0x196d99; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019786a: js 0x19788e; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001ad97b: js 0x1ad9b6; ret; 
0x001b0b83: js 0x1b0bbe; ret 0x840f; 
0x0002551b: js 0x2553e; add byte ptr [ebx + 0xa080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0002802d: js 0x28058; stc; call dword ptr [edi - 1]; 
0x0002f54e: js 0x2f5a0; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002f842: js 0x2f7d1; add dword ptr [ecx + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x00032e67: js 0x32e6a; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00033366: js 0x3337c; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x00034025: js 0x33fe7; test edx, edx; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x000342f7: js 0x342fa; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x000363cb: js 0x363f6; stc; call dword ptr [eax + 0x6a]; 
0x0003c7f5: js 0x3c7ff; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0003c845: js 0x3c84f; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000bb7a8: js 0x4798ba05; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000479c9: js 0x479c4; call dword ptr [eax + 0x68]; 
0x000479ec: js 0x479e7; call dword ptr [eax + 0x68]; 
0x000479db: js 0x47a0c; stc; call dword ptr [eax - 0x18]; 
0x0004a1d1: js 0x4a1cc; call dword ptr [eax - 0x73]; 
0x0004a1e4: js 0x4a1df; call dword ptr [eax - 0x18]; 
0x0004a37d: js 0x4a378; call dword ptr [eax - 0x73]; 
0x0004a3a0: js 0x4a39b; call dword ptr [eax - 0x73]; 
0x0004a3c3: js 0x4a3be; call dword ptr [eax - 0x73]; 
0x0004a3e6: js 0x4a3e1; call dword ptr [eax - 0x73]; 
0x0004a409: js 0x4a404; call dword ptr [eax - 0x73]; 
0x0004a42c: js 0x4a427; call dword ptr [eax - 0x73]; 
0x0004a456: js 0x4a451; call dword ptr [eax - 0x73]; 
0x0004a479: js 0x4a474; call dword ptr [eax - 0x73]; 
0x0004a49c: js 0x4a497; call dword ptr [eax - 0x73]; 
0x0004a4bf: js 0x4a4ba; call dword ptr [eax - 0x73]; 
0x0004a4e2: js 0x4a4dd; call dword ptr [eax - 0x73]; 
0x0004a505: js 0x4a500; call dword ptr [eax - 0x73]; 
0x0004a528: js 0x4a523; call dword ptr [eax - 0x73]; 
0x0004a54b: js 0x4a546; call dword ptr [eax - 0x73]; 
0x0004a56a: js 0x4a565; call dword ptr [eax - 0x73]; 
0x0004ae89: js 0x4ae84; call dword ptr [eax + 0x68]; 
0x0004aeac: js 0x4aea7; call dword ptr [eax + 0x68]; 
0x0004ae9b: js 0x4aecc; stc; call dword ptr [eax - 0x18]; 
0x0004d526: js 0x4d521; call dword ptr [eax - 0x73]; 
0x0004d539: js 0x4d534; call dword ptr [eax - 0x18]; 
0x0004d5b1: js 0x4d5ac; call dword ptr [eax - 0x73]; 
0x0004d5d4: js 0x4d5cf; call dword ptr [eax - 0x73]; 
0x0004d5f7: js 0x4d5f2; call dword ptr [eax - 0x73]; 
0x0004d621: js 0x4d61c; call dword ptr [eax - 0x73]; 
0x0004d644: js 0x4d63f; call dword ptr [eax - 0x73]; 
0x0004d667: js 0x4d662; call dword ptr [eax - 0x73]; 
0x0004d696: js 0x4d691; call dword ptr [eax - 0x73]; 
0x0004d6b9: js 0x4d6b4; call dword ptr [eax - 0x73]; 
0x0004d6dc: js 0x4d6d7; call dword ptr [eax - 0x73]; 
0x0004d6ff: js 0x4d6fa; call dword ptr [eax - 0x73]; 
0x0004d722: js 0x4d71d; call dword ptr [eax - 0x73]; 
0x0004d745: js 0x4d740; call dword ptr [eax - 0x73]; 
0x0004d77b: js 0x4d776; call dword ptr [eax - 0x73]; 
0x0004d79a: js 0x4d795; call dword ptr [eax - 0x73]; 
0x0004e90b: js 0x4e906; call dword ptr [eax + 0x68]; 
0x0004e92e: js 0x4e929; call dword ptr [eax + 0x68]; 
0x0004e91d: js 0x4e94e; stc; call dword ptr [eax - 0x18]; 
0x0005120b: js 0x51206; call dword ptr [eax - 0x73]; 
0x0005121e: js 0x51219; call dword ptr [eax - 0x18]; 
0x0005120a: js 0x51284; stc; call dword ptr [eax - 0x73]; 
0x000512a1: js 0x5129c; call dword ptr [eax - 0x73]; 
0x000512c4: js 0x512bf; call dword ptr [eax - 0x73]; 
0x000512e7: js 0x512e2; call dword ptr [eax - 0x73]; 
0x0005130a: js 0x51305; call dword ptr [eax - 0x73]; 
0x000512a0: js 0x5131a; stc; call dword ptr [eax - 0x73]; 
0x000512c3: js 0x5133d; stc; call dword ptr [eax - 0x73]; 
0x00051349: js 0x51344; call dword ptr [eax - 0x73]; 
0x000512e6: js 0x51360; stc; call dword ptr [eax - 0x73]; 
0x0005136c: js 0x51367; call dword ptr [eax - 0x73]; 
0x0005138f: js 0x5138a; call dword ptr [eax - 0x73]; 
0x000513b2: js 0x513ad; call dword ptr [eax - 0x73]; 
0x00051348: js 0x513c2; stc; call dword ptr [eax - 0x73]; 
0x000513d5: js 0x513d0; call dword ptr [eax - 0x73]; 
0x0005136b: js 0x513e5; stc; call dword ptr [eax - 0x73]; 
0x000513f8: js 0x513f3; call dword ptr [eax - 0x73]; 
0x0005138e: js 0x51408; stc; call dword ptr [eax - 0x73]; 
0x0005141b: js 0x51416; call dword ptr [eax - 0x73]; 
0x000513b1: js 0x5142b; stc; call dword ptr [eax - 0x73]; 
0x0005143a: js 0x51435; call dword ptr [eax - 0x73]; 
0x000513d4: js 0x5144e; stc; call dword ptr [eax - 0x73]; 
0x0005145d: js 0x51458; call dword ptr [eax - 0x73]; 
0x000513f7: js 0x51471; stc; call dword ptr [eax - 0x73]; 
0x00051487: js 0x51482; call dword ptr [eax - 0x73]; 
0x0005141a: js 0x51494; stc; call dword ptr [eax - 0x73]; 
0x00051439: js 0x514b3; stc; call dword ptr [eax - 0x73]; 
0x0005145c: js 0x514d6; stc; call dword ptr [eax - 0x73]; 
0x00051486: js 0x51500; stc; call dword ptr [eax - 0x73]; 
0x0005648b: js 0x56486; call dword ptr [eax + 0x68]; 
0x000564ae: js 0x564a9; call dword ptr [eax + 0x68]; 
0x0005649d: js 0x564ce; stc; call dword ptr [eax - 0x18]; 
0x00059948: js 0x59943; call dword ptr [eax - 0x73]; 
0x0005995b: js 0x59956; call dword ptr [eax - 0x18]; 
0x00059ba7: js 0x59ba2; call dword ptr [eax - 0x73]; 
0x00059bcc: js 0x59bc7; call dword ptr [eax - 0x73]; 
0x00059bf1: js 0x59bec; call dword ptr [eax - 0x73]; 
0x00059c1b: js 0x59c16; call dword ptr [eax - 0x73]; 
0x00059c40: js 0x59c3b; call dword ptr [eax - 0x73]; 
0x00059c65: js 0x59c60; call dword ptr [eax - 0x73]; 
0x00059c8a: js 0x59c85; call dword ptr [eax - 0x73]; 
0x00059caf: js 0x59caa; call dword ptr [eax - 0x73]; 
0x00059cd4: js 0x59ccf; call dword ptr [eax - 0x73]; 
0x00059cf9: js 0x59cf4; call dword ptr [eax - 0x73]; 
0x00059d1e: js 0x59d19; call dword ptr [eax - 0x73]; 
0x00059d43: js 0x59d3e; call dword ptr [eax - 0x73]; 
0x00059d68: js 0x59d63; call dword ptr [eax - 0x73]; 
0x00059d8d: js 0x59d88; call dword ptr [eax - 0x73]; 
0x00059db2: js 0x59dad; call dword ptr [eax - 0x73]; 
0x0005afc0: js 0x5afbb; call dword ptr [eax - 0x73]; 
0x0005b599: js 0x5b594; call dword ptr [eax - 0x18]; 
0x0005b5ed: js 0x5b5e8; call dword ptr [eax - 0x18]; 
0x000ba108: js 0x5e6aa365; pop ebx; ret; 
0x000ba126: js 0x5e6aa583; pop ebx; ret; 
0x0005f70d: js 0x5f76a; ret; 
0x000609c3: js 0x60a18; stc; call dword ptr [eax + 0x6a]; 
0x000616cb: js 0x61728; ret; 
0x0006ef1e: js 0x6ef49; ret; 
0x00084e2e: js 0x84e38; ret; 
0x000858a0: js 0x85889; stc; jmp dword ptr [esi - 0x70]; 
0x00087e42: js 0x87dc7; stc; call dword ptr [eax - 0x18]; 
0x0008f191: js 0x8f193; add byte ptr [eax], al; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008f1c8: js 0x8f1ca; add byte ptr [eax], al; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0008f1d1: js 0x8f1d3; add byte ptr [eax], al; ret; 
0x0008fb14: js 0x8fb16; add byte ptr [eax], al; pop ebx; ret; 
0x0008fea7: js 0x8fe32; ret 0xca83; 
0x0009a375: js 0x9a380; mov dword ptr [edx + 0x3b34], eax; xor eax, eax; ret; 
0x0009eaff: js 0x9ea8a; stc; call dword ptr [eax - 0x73]; 
0x000a025c: js 0xa0288; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000a0d1d: js 0xa0d22; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0cfb: js 0xa0d39; add byte ptr [eax], al; ret; 
0x000a0d4d: js 0xa0d52; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0d9d: js 0xa0da2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0dcd: js 0xa0dd2; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000a0ed1: js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x000a0e7d: js 0xa0e87; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000acd64: js 0xaccea; clc; call dword ptr [esi + 0x50]; 
0x000c1624: js 0xc1666; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c836a: js 0xc8365; call dword ptr [eax + 0x68]; 
0x000c838d: js 0xc8388; call dword ptr [eax + 0x68]; 
0x000c837c: js 0xc83ad; stc; call dword ptr [eax - 0x18]; 
0x000ca971: js 0xca96c; call dword ptr [eax - 0x18]; 
0x000cab03: js 0xcaafe; call dword ptr [eax - 0x73]; 
0x000cb4ea: js 0xcb4e5; call dword ptr [eax + 0x68]; 
0x000cb50d: js 0xcb508; call dword ptr [eax + 0x68]; 
0x000cb4fc: js 0xcb52d; stc; call dword ptr [eax - 0x18]; 
0x000cd951: js 0xcd94c; call dword ptr [eax - 0x18]; 
0x000cda31: js 0xcda2c; call dword ptr [eax - 0x73]; 
0x000ced0c: js 0xced07; call dword ptr [eax + 0x68]; 
0x000ced2f: js 0xced2a; call dword ptr [eax + 0x68]; 
0x000ced1e: js 0xced4f; stc; call dword ptr [eax - 0x18]; 
0x000d11d5: js 0xd11d0; call dword ptr [eax - 0x18]; 
0x000d1359: js 0xd1354; call dword ptr [eax - 0x73]; 
0x000d58ec: js 0xd58e7; call dword ptr [eax + 0x68]; 
0x000d590f: js 0xd590a; call dword ptr [eax + 0x68]; 
0x000d58fe: js 0xd592f; stc; call dword ptr [eax - 0x18]; 
0x000d8ac7: js 0xd8ac2; call dword ptr [eax - 0x18]; 
0x000d8d03: js 0xd8cfe; call dword ptr [eax - 0x73]; 
0x000d9c97: js 0xd9cf8; pop esi; ret; 
0x000dd98c: js 0xdd9b7; stc; call dword ptr [eax + 0x6a]; 
0x000ea41f: js 0xea421; add byte ptr [eax], al; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x000ea41c: js 0xea486; mov eax, 0x78; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x000eb51c: js 0xeb578; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000edc01: js 0xedba2; stc; call dword ptr [eax - 0x73]; 
0x000f1200: js 0xf125d; ret; 
0x000f3d10: js 0xf3d6d; ret; 
0x000f4b00: js 0xf4b5d; ret; 
0x000f7630: js 0xf768d; ret; 
0x000f8440: js 0xf849d; ret; 
0x000fba2a: js 0xfba30; ret; 
0x000fdc57: js 0xfdbdc; in al, dx; or byte ptr [ebp - 0x6b7d77d], cl; call dword ptr [eax + 0x55]; 
0x000c10c6: lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1001: lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9ba3: lahf; adc dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x001a201d: lahf; adc eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001547fc: lahf; add byte ptr [eax], al; ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x000b822d: lahf; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000a8cb1: lahf; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00197643: lahf; and al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010c598: lahf; call 0x13b5b0; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00196b43: lahf; das; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194dc3: lahf; dec edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a473a: lahf; dec esp; or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000caaf2: lahf; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x000f1d95: lahf; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000bb3fd: lahf; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001759a6: lahf; out dx, eax; ljmp 0x8908:0x24748bff; ret; 
0x00193843: lahf; pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014d42a: lahf; ret 0xd009; 
0x0010cd2d: lahf; ret 0xe8c1; 
0x000273bd: lahf; ret 9; 
0x00049eb0: lahf; ret; 
0x0008d676: lahf; sldt word ptr [0x1af79b]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x000ebedd: lahf; stc; call dword ptr [eax - 0x18]; 
0x000edc15: lahf; stc; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x000eb99b: lahf; stc; call dword ptr [eax - 0x73]; 
0x000e7f5e: lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000986f4: lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009930a: lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0015a8f2: lcall 0x10c4, 0x83ffec88; add esp, 8; pop ebx; ret; 
0x000a80f2: lcall 0x10c4, 0x83fff7b0; add esp, 8; pop ebx; ret; 
0x001741f2: lcall 0x18c4, 0x83ffeaef; pop ebx; ret; 
0x0014ebd9: lcall 0x1cc4, 0x83fffffe; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00093d2e: lcall 0x20e3, 0x83fffffb; jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000bb173: lcall 0x29c1, 0x81000cc4; std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00034c47: lcall 0x518b, 0x90; sub al, 0x81; ret 0x200; 
0x000bdcdc: lcall 0x910c, 0x30010d2; jmp ecx; 
0x000bb208: lcall 0x990c, 0x30010fc; jmp ecx; 
0x000c2b4d: lcall 0xc031, 0x5e000000; pop ebx; ret; 
0x00170a02: lcall 0xfcab, 0xa6e8fff7; jmp dword ptr [esi - 0x70]; 
0x00099087: lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x001afde5: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x147c03bd], cl; add al, 0x89; ret 0xeac1; 
0x001add18: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx - 0x167c03bf], cl; add al, 0x89; ret 0xeac1; 
0x00173f42: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx], bh; lodsb al, byte ptr [esi]; ret; 
0x000e351c: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x448b; 
0x000e6b71: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x468b; 
0x000e4453: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x478b; 
0x000e4ef9: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x748d; 
0x000e1f06: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xbe0f; 
0x000dc78f: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xd129; 
0x000e7497: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf089; 
0x000dfb72: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xf889; 
0x000dc7d8: lds eax, ptr [eax]; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0012d03f: lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d0d1: lds eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003f21a: lds eax, ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000a74cf: lds eax, ptr [ebx - 0x127aef3c]; jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x001a5a67: lds eax, ptr [ecx]; add byte ptr [eax], al; pop ebx; ret; 
0x00041a52: lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x000fb1a0: lds eax, ptr [edi - 7]; call dword ptr [eax + 0x6a]; 
0x000a24d7: lds ebp, ptr [ecx]; ret 0x4589; 
0x000371d4: lds ebp, ptr [ecx]; ret; 
0x0016d47b: lds ebx, ptr [eax + 0x5a]; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0003e249: lds ebx, ptr [ebx + 0x5e]; mov eax, ebp; pop edi; pop ebp; ret; 
0x000bb102: lds ecx, ptr [eax + eax]; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb02e: lds ecx, ptr [eax + eax]; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000fb0e8: lds ecx, ptr [eax]; add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0009f83c: lds ecx, ptr [ebp - 0x19d8137d]; call dword ptr [eax + 0x56]; 
0x0010e429: lds ecx, ptr [ebp - 0x65e437d]; call dword ptr [eax - 0x73]; 
0x00175890: lds ecx, ptr [ebp - 0x69b757d]; call dword ptr [ecx + 0x6a]; 
0x000609a2: lds ecx, ptr [ebp - 0x6cdc37d]; call dword ptr [ebp + 0x50]; 
0x00030530: lds ecx, ptr [ecx + 0x77e8243c]; mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00029319: lds ecx, ptr [edi]; test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x000ac328: lds ecx, ptr [edi]; xchg esp, eax; ret 0xc739; 
0x000a1147: lds edi, ptr [ecx]; ret; 
0x00130872: lds edx, ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0013677b: lds edx, ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x00177bc7: lds esi, ptr [ebp - 0x3b7c0016]; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00077d47: lds esi, ptr [edx - 0x3b7c0006]; adc byte ptr [ebx - 0x4f36b], cl; inc dword ptr [ebp - 0x5b7bf040]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x001a941b: lea eax, [eax + 0x10]; test edx, edx; jne 0x1a9430; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00032e3b: lea eax, [eax + 0x11cc]; ret; 
0x0003ddd3: lea eax, [eax + 0x138c]; push eax; call 0x98dd0; add esp, 0x1c; ret; 
0x00095d64: lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0009a111: lea eax, [eax + 0x3b6c]; push eax; call 0x90b90; add esp, 0x1c; ret; 
0x00125c71: lea eax, [eax + 0x4610]; push eax; call 0x125d90; add esp, 0x1c; ret; 
0x001a9575: lea eax, [eax + 0xa]; pop edi; ret; 
0x001a94cb: lea eax, [eax + 0xb]; pop edi; ret; 
0x001a9585: lea eax, [eax + 0xc]; pop edi; ret; 
0x001a9595: lea eax, [eax + 0xd]; pop edi; ret; 
0x001a95a5: lea eax, [eax + 0xe]; pop edi; ret; 
0x001a94f4: lea eax, [eax + 0xf]; pop edi; ret; 
0x001a9509: lea eax, [eax + 1]; pop edi; ret; 
0x001a9519: lea eax, [eax + 2]; pop edi; ret; 
0x001a9461: lea eax, [eax + 3]; pop edi; ret; 
0x001a9529: lea eax, [eax + 4]; pop edi; ret; 
0x001a9535: lea eax, [eax + 5]; pop edi; ret; 
0x001a9545: lea eax, [eax + 6]; pop edi; ret; 
0x001a9494: lea eax, [eax + 7]; pop edi; ret; 
0x001a9555: lea eax, [eax + 8]; pop edi; ret; 
0x001a9565: lea eax, [eax + 9]; pop edi; ret; 
0x0009c6fc: lea eax, [eax + eax + 2]; ret; 
0x0009b356: lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0005373b: lea eax, [eax + eax*8 + 6]; call 0x53700; jmp eax; 
0x00054f90: lea eax, [eax + eax*8]; add eax, dword ptr [esp]; add eax, 0xd; add esp, 4; jmp eax; 
0x000c50f4: lea eax, [eax + ebx*4]; pop ebx; pop esi; ret; 
0x000c1fc3: lea eax, [eax + ecx + 0x10]; ret; 
0x000c1fd3: lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fe3: lea eax, [eax + ecx + 0x30]; ret; 
0x000c1d13: lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c1d23: lea eax, [eax + edi + 0x20]; pop edi; ret; 
0x000c1cf3: lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c2463: lea eax, [eax + edx + 0x10]; ret; 
0x000c2473: lea eax, [eax + edx + 0x20]; ret; 
0x0016e11f: lea eax, [eax + edx + 0x28]; push eax; push edi; call dword ptr [ecx + 0x18]; 
0x00186809: lea eax, [eax + edx + 0x5c]; ret; 
0x000c2443: lea eax, [eax + edx - 0x10]; ret; 
0x000c7a7c: lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000c650a: lea eax, [eax - 0x163054]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c552a: lea eax, [eax - 0x163da4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00124fb1: lea eax, [eax - 0x65b40]; call 0x124ca0; test eax, eax; je 0x124fc8; add esp, 0xc; ret; 
0x00124f61: lea eax, [eax - 0x65b60]; call 0x124ca0; test eax, eax; je 0x124f78; add esp, 0xc; ret; 
0x00024f7e: lea eax, [eax - 0x6908c]; ret; 
0x00024f9e: lea eax, [eax - 0x69094]; ret; 
0x00024f56: lea eax, [eax - 0x69874]; push eax; push 1; call 0x120f60; add esp, 0x1c; ret; 
0x0017fef5: lea eax, [eax - 0x6996d]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x0016bcf1: lea eax, [eax - 0x69c60]; push eax; push 7; call 0x153e50; add esp, 0x1c; ret; 
0x0016b771: lea eax, [eax - 0x69c6c]; push eax; push 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x0016b4a1: lea eax, [eax - 0x69c79]; push eax; push 9; call 0x153e50; add esp, 0x1c; ret; 
0x0016b091: lea eax, [eax - 0x69c87]; push eax; push 8; call 0x153e50; add esp, 0x1c; ret; 
0x0016a671: lea eax, [eax - 0x69ca2]; push eax; push 5; call 0x153e50; add esp, 0x1c; ret; 
0x00169ff1: lea eax, [eax - 0x69cb0]; push eax; push 4; call 0x153e50; add esp, 0x1c; ret; 
0x00168c91: lea eax, [eax - 0x69d04]; push eax; push 3; call 0x153e50; add esp, 0x1c; ret; 
0x00167bd1: lea eax, [eax - 0x69d62]; push eax; push 2; call 0x153e50; add esp, 0x1c; ret; 
0x00167861: lea eax, [eax - 0x69d6e]; push eax; push 1; call 0x153e50; add esp, 0x1c; ret; 
0x000c633a: lea eax, [eax - 0x92c24]; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000c720a: lea eax, [eax - 0x92ee4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000c54ca: lea eax, [eax - 0x930c4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000acbda: lea eax, [eax - 0x93db4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00094b89: lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d8af9: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ebp - 0x35f373], cl; call dword ptr [eax - 0x73]; 
0x000754cd: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x0006a677: lea eax, [eax]; add byte ptr [eax], al; add byte ptr [ecx - 0x59373], cl; call dword ptr [ebx - 0x75]; 
0x0012264b: lea eax, [eax]; add byte ptr [eax], al; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000eb83b: lea eax, [ebp + 2]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000eb724: lea eax, [ebp + 8]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000409b8: lea eax, [ebx + 0x1848]; mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x000436e2: lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00123b7a: lea eax, [ebx + 0x450c]; add esp, 4; pop ebx; pop esi; ret; 
0x0016c5a9: lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x0015443e: lea eax, [ebx + 4]; push eax; call edi; 
0x00042515: lea eax, [ebx + 6]; pop ebx; ret; 
0x000a0545: lea eax, [ebx + ebx]; mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00128af0: lea eax, [ebx - 1]; cmp eax, 2; jbe 0x128b20; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00081c8d: lea eax, [ebx - 1]; pop ebx; ret; 
0x00043616: lea eax, [ecx + 0x20]; pop ebx; ret; 
0x0004386d: lea eax, [ecx + 0x20]; ret; 
0x001a89b0: lea eax, [ecx + 0xa]; ret; 
0x001a89c0: lea eax, [ecx + 0xb]; ret; 
0x001a893b: lea eax, [ecx + 0xc]; ret; 
0x001a89d0: lea eax, [ecx + 0xd]; ret; 
0x001a89e0: lea eax, [ecx + 0xe]; ret; 
0x001a89f0: lea eax, [ecx + 0xf]; ret; 
0x000fbc38: lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001a8940: lea eax, [ecx + 1]; ret; 
0x001a8950: lea eax, [ecx + 2]; ret; 
0x001a8960: lea eax, [ecx + 3]; ret; 
0x001a88e8: lea eax, [ecx + 4]; ret; 
0x001a8970: lea eax, [ecx + 5]; ret; 
0x001a8980: lea eax, [ecx + 6]; ret; 
0x001a8990: lea eax, [ecx + 7]; ret; 
0x001a8912: lea eax, [ecx + 8]; ret; 
0x001a89a0: lea eax, [ecx + 9]; ret; 
0x000c200a: lea eax, [ecx + eax + 0x10]; ret; 
0x000c201a: lea eax, [ecx + eax + 0x20]; ret; 
0x000c202a: lea eax, [ecx + eax + 0x30]; ret; 
0x0008ff94: lea eax, [ecx + eax + 0x4000]; ret; 
0x0006ec5b: lea eax, [ecx + eax - 0x1ce54b]; jmp eax; 
0x00080198: lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x0003d800: lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x000bb928: lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bb93e: lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000bb960: lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000bb97e: lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000bb99e: lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x0011b434: lea eax, [edi + 0x14]; push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011b6b0: lea eax, [edi + 0x14]; push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000bb9c4: lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000bb9e2: lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000bba02: lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000bba22: lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000bba48: lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000bba6a: lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000bba98: lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000bbab8: lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000bbad2: lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000bbaf2: lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000bbb12: lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000bbb32: lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x0010ba7b: lea eax, [edi + 0x3fec]; push eax; call 0x8fc80; call dword ptr [esi]; 
0x000bbd81: lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000bb870: lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x001a79a0: lea eax, [edi + 0xa]; pop edi; ret; 
0x000bb88e: lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x001a7866: lea eax, [edi + 0xb]; pop edi; ret; 
0x000bb8ae: lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x001a79c0: lea eax, [edi + 0xc]; pop edi; ret; 
0x000bb8d2: lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x001a79d0: lea eax, [edi + 0xd]; pop edi; ret; 
0x000bb8f2: lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x001a79e0: lea eax, [edi + 0xe]; pop edi; ret; 
0x000bb912: lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x001a7820: lea eax, [edi + 0xf]; pop edi; ret; 
0x000bb784: lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x001a7920: lea eax, [edi + 1]; pop edi; ret; 
0x000bb796: lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x001a7930: lea eax, [edi + 2]; pop edi; ret; 
0x000bb7ac: lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x001a77c3: lea eax, [edi + 3]; pop edi; ret; 
0x000bb7c4: lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001a7950: lea eax, [edi + 4]; pop edi; ret; 
0x000bb7da: lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x001a7960: lea eax, [edi + 5]; pop edi; ret; 
0x000bb7fc: lea eax, [edi + 6]; pop edi; pop esi; pop ebx; ret; 
0x001a7970: lea eax, [edi + 6]; pop edi; ret; 
0x000bb81a: lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x001a777d: lea eax, [edi + 7]; pop edi; ret; 
0x000bb838: lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001a7980: lea eax, [edi + 8]; pop edi; ret; 
0x000bb84e: lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x001a7990: lea eax, [edi + 9]; pop edi; ret; 
0x000c1d4a: lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d5a: lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1c3f: lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x001991bd: lea eax, [edi + eax + 0xa]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197797: lea eax, [edi + eax + 0xa]; pop edi; call 0x1875fd; add ebx, 0x4233f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001956e7: lea eax, [edi + eax + 0xa]; pop edi; call 0x1875fd; add ebx, 0x4416f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001936e7: lea eax, [edi + eax + 0xa]; pop edi; call 0x1875fd; add ebx, 0x45eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019924d: lea eax, [edi + eax + 0xb]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001978f7: lea eax, [edi + eax + 0xb]; pop edi; call 0x1875fd; add ebx, 0x421df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195837: lea eax, [edi + eax + 0xb]; pop edi; call 0x1875fd; add ebx, 0x4401f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193837: lea eax, [edi + eax + 0xb]; pop edi; call 0x1875fd; add ebx, 0x45d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001992dd: lea eax, [edi + eax + 0xc]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019936d: lea eax, [edi + eax + 0xd]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bb7: lea eax, [edi + eax + 0xd]; pop edi; call 0x1875fd; add ebx, 0x41f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ad7: lea eax, [edi + eax + 0xd]; pop edi; call 0x1875fd; add ebx, 0x43d7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ad7: lea eax, [edi + eax + 0xd]; pop edi; call 0x1875fd; add ebx, 0x45aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001993fd: lea eax, [edi + eax + 0xe]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019948d: lea eax, [edi + eax + 0xf]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e77: lea eax, [edi + eax + 0xf]; pop edi; call 0x1875fd; add ebx, 0x41c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d77: lea eax, [edi + eax + 0xf]; pop edi; call 0x1875fd; add ebx, 0x43adf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d77: lea eax, [edi + eax + 0xf]; pop edi; call 0x1875fd; add ebx, 0x4585f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198cad: lea eax, [edi + eax + 1]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196b37: lea eax, [edi + eax + 1]; pop edi; call 0x1875fd; add ebx, 0x42f9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194b17: lea eax, [edi + eax + 1]; pop edi; call 0x1875fd; add ebx, 0x44d3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3d: lea eax, [edi + eax + 2]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c67: lea eax, [edi + eax + 2]; pop edi; call 0x1875fd; add ebx, 0x44bef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198dcd: lea eax, [edi + eax + 3]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196df7: lea eax, [edi + eax + 3]; pop edi; call 0x1875fd; add ebx, 0x42cdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194db7: lea eax, [edi + eax + 3]; pop edi; call 0x1875fd; add ebx, 0x44a9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192db7: lea eax, [edi + eax + 3]; pop edi; call 0x1875fd; add ebx, 0x4681f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5d: lea eax, [edi + eax + 4]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198eed: lea eax, [edi + eax + 5]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001970b7: lea eax, [edi + eax + 5]; pop edi; call 0x1875fd; add ebx, 0x42a1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195057: lea eax, [edi + eax + 5]; pop edi; call 0x1875fd; add ebx, 0x447ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193057: lea eax, [edi + eax + 5]; pop edi; call 0x1875fd; add ebx, 0x4657f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198f7d: lea eax, [edi + eax + 6]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019900d: lea eax, [edi + eax + 7]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019909d: lea eax, [edi + eax + 8]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001974d7: lea eax, [edi + eax + 8]; pop edi; call 0x1875fd; add ebx, 0x425ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193447: lea eax, [edi + eax + 8]; pop edi; call 0x1875fd; add ebx, 0x4618f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019912d: lea eax, [edi + eax + 9]; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197637: lea eax, [edi + eax + 9]; pop edi; call 0x1875fd; add ebx, 0x4249f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193597: lea eax, [edi + eax + 9]; pop edi; call 0x1875fd; add ebx, 0x4603f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a7d43: lea eax, [edi - 0x10]; pop edi; ret; 
0x001a7e00: lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7df0: lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7d68: lea eax, [edi - 0xc]; pop edi; ret; 
0x001a7de0: lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dd0: lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7dc0: lea eax, [edi - 0xf]; pop edi; ret; 
0x001a7e70: lea eax, [edi - 1]; pop edi; ret; 
0x001a7e60: lea eax, [edi - 2]; pop edi; ret; 
0x001a7e50: lea eax, [edi - 3]; pop edi; ret; 
0x001a7dbb: lea eax, [edi - 4]; pop edi; ret; 
0x001a7e40: lea eax, [edi - 5]; pop edi; ret; 
0x001a7e30: lea eax, [edi - 6]; pop edi; ret; 
0x001a7e20: lea eax, [edi - 7]; pop edi; ret; 
0x001a7d92: lea eax, [edi - 8]; pop edi; ret; 
0x001a7e10: lea eax, [edi - 9]; pop edi; ret; 
0x001a7910: lea eax, [edi]; pop edi; ret; 
0x000b800d: lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x0007dc33: lea eax, [edx + 0x1a80]; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x0008d7d3: lea eax, [edx + 0x1ab4]; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x000b62be: lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63fe: lea eax, [edx + 0xa]; ret; 
0x000b9027: lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b61ae: lea eax, [edx + 0xb]; pop edi; ret; 
0x000b641e: lea eax, [edx + 0xb]; ret; 
0x000b7fce: lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b62e2: lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6442: lea eax, [edx + 0xc]; ret; 
0x000b6302: lea eax, [edx + 0xd]; pop edi; ret; 
0x000b6462: lea eax, [edx + 0xd]; ret; 
0x000b8fd5: lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6322: lea eax, [edx + 0xe]; pop edi; ret; 
0x000b6482: lea eax, [edx + 0xe]; ret; 
0x000b61e8: lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6498: lea eax, [edx + 0xf]; ret; 
0x000ac653: lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000b6206: lea eax, [edx + 1]; pop edi; ret; 
0x000b6346: lea eax, [edx + 1]; ret; 
0x000b621c: lea eax, [edx + 2]; pop edi; ret; 
0x000b635c: lea eax, [edx + 2]; ret; 
0x000b9104: lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ac676: lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b6134: lea eax, [edx + 3]; pop edi; ret; 
0x000b6364: lea eax, [edx + 3]; ret; 
0x000ac68a: lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b7f61: lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b623a: lea eax, [edx + 4]; pop edi; ret; 
0x000b637a: lea eax, [edx + 4]; ret; 
0x000ac69a: lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000b624c: lea eax, [edx + 5]; pop edi; ret; 
0x000b638c: lea eax, [edx + 5]; ret; 
0x000ac6ae: lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b626a: lea eax, [edx + 6]; pop edi; ret; 
0x000b639a: lea eax, [edx + 6]; ret; 
0x000b90ad: lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ac63d: lea eax, [edx + 7]; pop ebx; pop esi; ret; 
0x000b6168: lea eax, [edx + 7]; pop edi; ret; 
0x000b63a8: lea eax, [edx + 7]; ret; 
0x000b7f93: lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000b627e: lea eax, [edx + 8]; pop edi; ret; 
0x000b63be: lea eax, [edx + 8]; ret; 
0x000b62a0: lea eax, [edx + 9]; pop edi; ret; 
0x000b63e0: lea eax, [edx + 9]; ret; 
0x000c243a: lea eax, [edx + eax + 0x30]; ret; 
0x0013f894: lea eax, [edx + eax + 8]; pop ebx; ret; 
0x000f1257: lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000a9d2a: lea eax, [edx - 0x186974]; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x001462ab: lea eax, [edx - 0x68b94]; push eax; call 0x351e0; add esp, 0x10; add esp, 0xc; ret; 
0x0005adb1: lea eax, [edx - 0x6cf83]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x000d4cf6: lea eax, [edx - 0x936c4]; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000a92b6: lea eax, [edx - 0x971c4]; and ch, 2; lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca56: lea eax, [edx - 0x9c0d4]; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000a9d66: lea eax, [edx - 0x9e5e4]; and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000acb16: lea eax, [edx - 0x9ffd4]; and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x000aaa76: lea eax, [edx - 0xa1444]; and ch, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000a9b33: lea eax, [edx - 0xa6794]; and ebx, 1; lea edx, [edx - 0xa2564]; cmovne eax, edx; pop ebx; ret; 
0x0013aed3: lea eax, [edx - 0xa67a4]; and ebx, 1; lea edx, [edx - 0xa2574]; cmovne eax, edx; pop ebx; ret; 
0x000a9303: lea eax, [edx - 0xaa774]; and ebx, 1; lea edx, [edx - 0xa4534]; cmovne eax, edx; pop ebx; ret; 
0x0013ae83: lea eax, [edx - 0xaa784]; and ebx, 1; lea edx, [edx - 0xa4544]; cmovne eax, edx; pop ebx; ret; 
0x000a9c01: lea eax, [edx - 0xac174]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af61: lea eax, [edx - 0xac184]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x000434d9: lea eax, [edx - 1]; xor eax, edx; cmp edx, eax; setle al; ret; 
0x000b61f4: lea eax, [edx]; pop edi; ret; 
0x000b6334: lea eax, [edx]; ret; 
0x0011b7d9: lea eax, [esi + 0x14]; push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000c32b3: lea eax, [esi + 3]; pop esi; pop edi; ret; 
0x0013f041: lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x000db94f: lea eax, [esp + 0x104]; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0012fe80: lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f4c2: lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00089e5f: lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x000d4b4e: lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x00088618: lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x000c3ace: lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x00083773: lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00157cbe: lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c7314: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b4a: lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x00029dd8: lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002f54b: lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002e678: lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call esi; 
0x0015d942: lea eax, [esp + 0x9a4]; push eax; push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0007b7a6: lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00088922: lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x000c2009: lea eax, es:[ecx + eax + 0x10]; ret; 
0x000c1d49: lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000788c7: lea ebp, [eax - 0x76000005]; ret 0xc889; 
0x000a0288: lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0017c255: lea ebp, [edi + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00068d9f: lea ebp, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006a67d: lea ebp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x75]; 
0x000682d5: lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006c83d: lea ebp, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0016c8f6: lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00184790: lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000ea473: lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00093008: lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000d4cb0: lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d4c90: lea ebx, [eax + 4]; mov eax, ebx; pop ebx; ret; 
0x000d4ca0: lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000da072: lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x000e7b82: lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00091ebb: lea ebx, [edi + eax + 0x20]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00142620: lea ebx, [edi + edi*8 - 1]; jmp dword ptr [ebp - 0x5f]; 
0x00127ecd: lea ebx, [edx + 1]; jne 0x127eab; mov eax, esi; pop ebx; pop esi; ret; 
0x0008bf4c: lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x0008068c: lea ebx, [edx + 4]; mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x00066635: lea ebx, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5a77b]; dec dword ptr [ecx - 0x5f36b]; jmp dword ptr [ebp - 0x5f]; 
0x000a1a13: lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x001755b5: lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x001144d8: lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0008d2fb: lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8d318; ret; 
0x0009306c: lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00121d09: lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00042577: lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0005bbc8: lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00176ae4: lea ecx, [eax + 0xa7ec]; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x0003d7eb: lea ecx, [eax + 1]; mov dword ptr [edx + 0x1f4], ecx; ret; 
0x0009bd3c: lea ecx, [eax - 2]; lock cmpxchg dword ptr [edx], ecx; jne 0x9bd36; xor eax, eax; pop ebx; ret; 
0x0010dc94: lea ecx, [eax - 7]; call dword ptr [eax - 0x18]; 
0x00093d3b: lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x000eb523: lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000a08ab: lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0012d54d: lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000650ce: lea ecx, [ebx - 0x20]; cmp cl, 0x5a; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x000d6948: lea ecx, [ebx - 0x364b7b]; call dword ptr [edi + 0x6a]; 
0x000951ea: lea ecx, [ebx - 0x72504]; mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00053005: lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0017a5d8: lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0003de12: lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x000232b6: lea ecx, [edi - 0x785a4]; mov eax, 0xaf; mov ebx, ebp; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000b39ed: lea ecx, [edx + 0x10]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b422d: lea ecx, [edx + 0x10]; jne 0xb3f81; pop ebx; ret; 
0x000b86fe: lea ecx, [edx + 0x10]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b4145: lea ecx, [edx + 0xa]; jne 0xb3f81; pop ebx; ret; 
0x000b85e6: lea ecx, [edx + 0xa]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b4163: lea ecx, [edx + 0xb]; jne 0xb3f81; pop ebx; ret; 
0x000b8614: lea ecx, [edx + 0xb]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b39b3: lea ecx, [edx + 0xc]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4183: lea ecx, [edx + 0xc]; jne 0xb3f81; pop ebx; ret; 
0x000b8644: lea ecx, [edx + 0xc]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3d77: lea ecx, [edx + 0xd]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41a7: lea ecx, [edx + 0xd]; jne 0xb3f81; pop ebx; ret; 
0x000b8678: lea ecx, [edx + 0xd]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3da7: lea ecx, [edx + 0xe]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41d7: lea ecx, [edx + 0xe]; jne 0xb3f81; pop ebx; ret; 
0x000b3dd7: lea ecx, [edx + 0xf]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4207: lea ecx, [edx + 0xf]; jne 0xb3f81; pop ebx; ret; 
0x000b86d8: lea ecx, [edx + 0xf]; jne 0xb83d1; pop ebx; ret; 
0x000b3c39: lea ecx, [edx + 1]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4019: lea ecx, [edx + 1]; jne 0xb3f81; pop ebx; ret; 
0x000b8469: lea ecx, [edx + 1]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00087f80: lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000b403b: lea ecx, [edx + 2]; jne 0xb3f81; pop ebx; ret; 
0x000b848c: lea ecx, [edx + 2]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3c81: lea ecx, [edx + 3]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4061: lea ecx, [edx + 3]; jne 0xb3f81; pop ebx; ret; 
0x000b84b2: lea ecx, [edx + 3]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000c21e5: lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x000b4079: lea ecx, [edx + 4]; jne 0xb3f81; pop ebx; ret; 
0x000b84da: lea ecx, [edx + 4]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x0007f9b6: lea ecx, [edx + 4]; mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000b3c9f: lea ecx, [edx + 5]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b409f: lea ecx, [edx + 5]; jne 0xb3f81; pop ebx; ret; 
0x000b8500: lea ecx, [edx + 5]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b3cc1: lea ecx, [edx + 6]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40c1: lea ecx, [edx + 6]; jne 0xb3f81; pop ebx; ret; 
0x000b3cdf: lea ecx, [edx + 7]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40df: lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x000b40fd: lea ecx, [edx + 8]; jne 0xb3f81; pop ebx; ret; 
0x000b858e: lea ecx, [edx + 8]; jne 0xb83d1; pop ebx; ret; 
0x000b3d03: lea ecx, [edx + 9]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4123: lea ecx, [edx + 9]; jne 0xb3f81; pop ebx; ret; 
0x000b85b4: lea ecx, [edx + 9]; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00068c90: lea ecx, [edx + edi*8 - 1]; dec dword ptr [ebx - 0x58f63]; call dword ptr [edi - 0x18]; 
0x0017a135: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00179685: lea ecx, [esp + 0x10]; mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00175c28: lea ecx, [esp + 0x10]; push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0007c626: lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0017a166: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax + 0x20]; 
0x001792f6: lea ecx, [esp + 0x10]; push ecx; push edx; call dword ptr [eax]; 
0x000e7fe1: lea ecx, [esp + 0x14]; mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7c90: lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x0012de5e: lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000e7c5b: lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00175b69: lea ecx, [esp + 0x20]; push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x00173df5: lea ecx, [esp + 0x28]; mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00175b56: lea ecx, [esp + 0x28]; push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x000c5234: lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c455a: lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x000dee9c: lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a0410: lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012dd98: lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x000e80c0: lea ecx, [esp + 0xc]; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0012e37a: lea ecx, [esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2ba: lea ecx, [esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012d03a: lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x001223fc: lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000e812f: lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7e03: lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0010c020: lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012e379: lea ecx, ss:[esp + 0xc]; mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012d2b9: lea ecx, ss:[esp + 0xc]; mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x000ea41b: lea edi, [eax + 0x68]; mov eax, 0x78; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x000b9e0b: lea edi, [edi + 0x10]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb47e: lea edi, [edi + 0x10]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb4f4: lea edi, [edi + 0x13]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9ee5: lea edi, [edi + 0x16]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9f15: lea edi, [edi + 0x17]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb61b: lea edi, [edi + 0x19]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9fad: lea edi, [edi + 0x1a]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9fdb: lea edi, [edi + 0x1b]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000ba00b: lea edi, [edi + 0x1c]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb6ae: lea edi, [edi + 0x1c]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000ba035: lea edi, [edi + 0x1d]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb6d8: lea edi, [edi + 0x1d]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000ba065: lea edi, [edi + 0x1e]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb708: lea edi, [edi + 0x1e]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000ba095: lea edi, [edi + 0x1f]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb738: lea edi, [edi + 0x1f]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000ba0c5: lea edi, [edi + 0x20]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb768: lea edi, [edi + 0x20]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9d23: lea edi, [edi + 0xa]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb366: lea edi, [edi + 0xa]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb394: lea edi, [edi + 0xb]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9d61: lea edi, [edi + 0xc]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb3c4: lea edi, [edi + 0xc]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9d85: lea edi, [edi + 0xd]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb3f8: lea edi, [edi + 0xd]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb428: lea edi, [edi + 0xe]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9de5: lea edi, [edi + 0xf]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb458: lea edi, [edi + 0xf]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9bf5: lea edi, [edi + 1]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb25c: lea edi, [edi + 2]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb27f: lea edi, [edi + 3]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb29a: lea edi, [edi + 4]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9c7a: lea edi, [edi + 5]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb2bd: lea edi, [edi + 5]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9c9f: lea edi, [edi + 6]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb2e2: lea edi, [edi + 6]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9cbd: lea edi, [edi + 7]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb300: lea edi, [edi + 7]; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000b9cdb: lea edi, [edi + 8]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000b9cfe: lea edi, [edi + 9]; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x00190486: lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0005bbc5: lea edx, [eax + 0x1c]; lea ecx, [eax + 0x9c]; mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00024af3: lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24af0; ret; 
0x00053002: lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00040560: lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x000a8c76: lea edx, [eax + 1]; mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x00043297: lea edx, [eax + 1]; mov eax, edx; ret; 
0x00148cee: lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0004364d: lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000c5524: lea edx, [eax - 0x1630b4]; lea eax, [eax - 0x163da4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000431b7: lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x000acbd4: lea edx, [eax - 0x17a984]; lea eax, [eax - 0x93db4]; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x0004359d: lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00030325: lea edx, [eax - 0x20cdf4]; push edx; push dword ptr [eax + 0x10e4]; call 0x12b5e0; add esp, 0x1c; ret; 
0x00043258: lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000434f8: lea edx, [eax - 1]; xor eax, edx; cmp edx, eax; setb al; ret; 
0x0016d149: lea edx, [ebp - 0xc3bd4]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0007a7a5: lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x00174dbd: lea edx, [ebx + 0x38]; push edx; call eax; 
0x0017429d: lea edx, [ebx + 0x4c]; push edx; call eax; 
0x0016076a: lea edx, [ebx + 0xa28c]; push edx; call eax; 
0x001715e0: lea edx, [ebx + 0xac]; push edx; call eax; 
0x00187847: lea edx, [ebx - 0x214]; mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x0016eddb: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ee1a: lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00131798: lea edx, [ecx + ecx]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x000336e0: lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x001721f1: lea edx, [edi + 8]; push edx; call eax; 
0x000d4cff: lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x000a9d34: lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000a9cf4: lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000aaa7f: lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x000abc74: lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000aa8a4: lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000a92bf: lea edx, [edx - 0x17a4f4]; cmove eax, edx; ret; 
0x000aca5f: lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x000aca9f: lea edx, [edx - 0x17a854]; cmove eax, edx; ret; 
0x000a9d6f: lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000a9daf: lea edx, [edx - 0x17a954]; cmove eax, edx; ret; 
0x000acae4: lea edx, [edx - 0x17b744]; cmove eax, edx; ret; 
0x000acb64: lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x000acb1f: lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x0007c425: lea edx, [edx - 0x508]; mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x000a9c4e: lea edx, [edx - 0x940d4]; cmovne eax, edx; ret; 
0x000a9bce: lea edx, [edx - 0x94874]; cmovne eax, edx; ret; 
0x000a927e: lea edx, [edx - 0x94de4]; cmovne eax, edx; ret; 
0x000acc4e: lea edx, [edx - 0x95414]; cmovne eax, edx; ret; 
0x000aa8de: lea edx, [edx - 0x957f4]; cmovne eax, edx; ret; 
0x000aca1e: lea edx, [edx - 0x95b14]; cmovne eax, edx; ret; 
0x000a9b3c: lea edx, [edx - 0xa2564]; cmovne eax, edx; pop ebx; ret; 
0x0013aedc: lea edx, [edx - 0xa2574]; cmovne eax, edx; pop ebx; ret; 
0x000a9b8c: lea edx, [edx - 0xa3554]; cmovne eax, edx; pop ebx; ret; 
0x0013af2c: lea edx, [edx - 0xa3564]; cmovne eax, edx; pop ebx; ret; 
0x000a930c: lea edx, [edx - 0xa4534]; cmovne eax, edx; pop ebx; ret; 
0x0013ae8c: lea edx, [edx - 0xa4544]; cmovne eax, edx; pop ebx; ret; 
0x000a9c0e: lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af6e: lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x00092df9: lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0008448f: lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0007b18c: lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x0008456e: lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x00038287: lea edx, [esi + edi*8 - 1]; dec dword ptr [ecx - 0x1bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x00176278: lea edx, [esi - 0xc3bd4]; push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x0016cf78: lea edx, [esi - 0xcfc34]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016d0a1: lea edx, [esi - 0xcfc34]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x00179edc: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00172e68: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00179506: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017949b: lea edx, [esp + 0x10]; push edx; push ebx; call dword ptr [eax]; 
0x001797d6: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017980e: lea edx, [esp + 0x10]; push edx; push ecx; call dword ptr [eax]; 
0x0013d0ae: lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d18b: lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x000f120b: lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00174f46: lea edx, [esp + 0x14c]; push edx; push edi; call dword ptr [eax + 4]; 
0x000a0027: lea edx, [esp + 0x18]; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x001760b8: lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00179b1a: lea edx, [esp + 0x20]; push edx; push esi; call dword ptr [eax]; 
0x00121c93: lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115952: lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000df034: lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0017782c: lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0018972b: lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0003cb66: lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001222ae: lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00179ec6: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00179e93: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e3: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00179486: lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax]; 
0x000e7dd5: lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x0017985a: lea edx, [esp + 0xc]; push edx; push ecx; call dword ptr [eax + 4]; 
0x001210c4: lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00115b12: lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000f844b: lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00024af2: lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24af0; ret; 
0x00056ebb: lea esi, [eax - 0x17000037]; dec ebx; ret 0xfffc; 
0x0004aa8a: lea esi, [eax]; ret 0xfff9; 
0x000d8bce: lea esi, [ecx + ecx*8 - 0x7e720001]; cmp al, 0x9e; stc; call dword ptr [eax - 0x73]; 
0x00138de8: lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x00068748: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x0006bee7: lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 1]; 
0x00069360: lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x0006bc0f: lea esi, [edx + edi*8 - 1]; call dword ptr [edx + 0x52]; 
0x0006876b: lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x001a96f9: lea esi, [esi]; add eax, 1; pop edi; ret; 
0x000d9f1c: lea esi, [esi]; add eax, 1; ret; 
0x000d9f2c: lea esi, [esi]; add eax, 3; ret; 
0x001a8b9d: lea esi, [esi]; add edx, 2; jl 0x1a8c50; lea eax, [ecx + 2]; ret; 
0x001a8bad: lea esi, [esi]; add edx, 3; jl 0x1a8c50; lea eax, [ecx + 3]; ret; 
0x001a8bbd: lea esi, [esi]; add edx, 5; jl 0x1a8c50; lea eax, [ecx + 5]; ret; 
0x001a8bcd: lea esi, [esi]; add edx, 6; jl 0x1a8c50; lea eax, [ecx + 6]; ret; 
0x0016c6ec: lea esi, [esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x000813e4: lea esi, [esi]; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00155664: lea esi, [esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0013b6d5: lea esi, [esi]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000a8e8c: lea esi, [esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0016e845: lea esi, [esi]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0013bc7a: lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00062042: lea esi, [esi]; add esp, 8; xor eax, eax; pop ebx; ret; 
0x001a7f9d: lea esi, [esi]; and eax, 0x1f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fcd: lea esi, [esi]; and eax, 0x1ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fad: lea esi, [esi]; and eax, 0x3f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fbd: lea esi, [esi]; and eax, 0x7f; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0013f999: lea esi, [esi]; and eax, 0xffffff; ret; 
0x001a7f7d: lea esi, [esi]; and eax, 3; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7f8d: lea esi, [esi]; and eax, 7; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000c2449: lea esi, [esi]; bsf eax, eax; add eax, edx; ret; 
0x000c1cea: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edi - 0x10]; pop edi; ret; 
0x000c2469: lea esi, [esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1fc9: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fd9: lea esi, [esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x000c20fc: lea esi, [esi]; bsr edi, edi; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x001946ca: lea esi, [esi]; call 0x1875fd; add ebx, 0x4534b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008d66d: lea esi, [esi]; endbr32; call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d79d: lea esi, [esi]; endbr32; call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0002607d: lea esi, [esi]; endbr32; call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00024f8d: lea esi, [esi]; endbr32; call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x0008c62c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008d61c: lea esi, [esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0016c47d: lea esi, [esi]; endbr32; mov eax, 1; ret; 
0x0017a87c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0017a78d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0018723c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x001871bc: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0018719c: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008d6ac: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; ret; 
0x0008b45d: lea esi, [esi]; endbr32; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x0017a38d: lea esi, [esi]; endbr32; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0004070d: lea esi, [esi]; endbr32; ret; 
0x000349ac: lea esi, [esi]; endbr32; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008c579: lea esi, [esi]; endbr32; xor eax, eax; ret; 
0x000ea4e9: lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001a3f3c: lea esi, [esi]; jb 0x1a3f50; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a89ac: lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89bc: lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89cc: lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89dc: lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89ec: lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x000fbc35: lea esi, [esi]; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x001a894c: lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a895c: lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a896c: lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a897c: lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a898c: lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9eca: lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a899c: lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a799d: lea esi, [esi]; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a79ad: lea esi, [esi]; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a79bd: lea esi, [esi]; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a79cd: lea esi, [esi]; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a79dd: lea esi, [esi]; lea eax, [edi + 0xe]; pop edi; ret; 
0x001a791c: lea esi, [esi]; lea eax, [edi + 1]; pop edi; ret; 
0x001a792d: lea esi, [esi]; lea eax, [edi + 2]; pop edi; ret; 
0x001a793d: lea esi, [esi]; lea eax, [edi + 3]; pop edi; ret; 
0x001a794d: lea esi, [esi]; lea eax, [edi + 4]; pop edi; ret; 
0x001a795d: lea esi, [esi]; lea eax, [edi + 5]; pop edi; ret; 
0x001a796d: lea esi, [esi]; lea eax, [edi + 6]; pop edi; ret; 
0x001a797d: lea esi, [esi]; lea eax, [edi + 8]; pop edi; ret; 
0x001a798d: lea esi, [esi]; lea eax, [edi + 9]; pop edi; ret; 
0x001a7dfd: lea esi, [esi]; lea eax, [edi - 0xa]; pop edi; ret; 
0x001a7ded: lea esi, [esi]; lea eax, [edi - 0xb]; pop edi; ret; 
0x001a7ddd: lea esi, [esi]; lea eax, [edi - 0xd]; pop edi; ret; 
0x001a7dcd: lea esi, [esi]; lea eax, [edi - 0xe]; pop edi; ret; 
0x001a7e6d: lea esi, [esi]; lea eax, [edi - 1]; pop edi; ret; 
0x001a7e5d: lea esi, [esi]; lea eax, [edi - 2]; pop edi; ret; 
0x001a7e4d: lea esi, [esi]; lea eax, [edi - 3]; pop edi; ret; 
0x001aa15d: lea esi, [esi]; lea eax, [edi - 4]; pop edi; ret; 
0x001a7e3d: lea esi, [esi]; lea eax, [edi - 5]; pop edi; ret; 
0x001a7e2d: lea esi, [esi]; lea eax, [edi - 6]; pop edi; ret; 
0x001a7e1d: lea esi, [esi]; lea eax, [edi - 7]; pop edi; ret; 
0x001aa14a: lea esi, [esi]; lea eax, [edi - 8]; pop edi; ret; 
0x001a7e0d: lea esi, [esi]; lea eax, [edi - 9]; pop edi; ret; 
0x001a790c: lea esi, [esi]; lea eax, [edi]; pop edi; ret; 
0x001a900c: lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a901c: lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a902c: lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a903c: lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8f9c: lea esi, [esi]; lea eax, [edx + 1]; ret; 
0x001a8fac: lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fbc: lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fcc: lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fdc: lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fec: lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ffc: lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x000a0285: lea esi, [esi]; lea ebp, [ebx + ebx]; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x001144d4: lea esi, [esi]; lea ebx, [esp + 8]; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a040a: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x105; call dword ptr gs:[0x10]; 
0x0012dd92: lea esi, [esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010c01a: lea esi, [esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d9f25: lea esi, [esi]; lea esi, [esi]; add eax, 3; ret; 
0x00040706: lea esi, [esi]; lea esi, [esi]; endbr32; ret; 
0x001a89a5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89b5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89c5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89d5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89e5: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a8945: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a8955: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a8965: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a8975: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a8985: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec3: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8995: lea esi, [esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9005: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a9015: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a9025: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a9035: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8fa5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fb5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fc5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fd5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fe5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ff5: lea esi, [esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001a9e96: lea esi, [esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d9f35: lea esi, [esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d4: lea esi, [esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f04: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f94: lea esi, [esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d9f44: lea esi, [esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de4: lea esi, [esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1a84: lea esi, [esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000b61ed: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b1e2c: lea esi, [esi]; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000bdd9a: lea esi, [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00143694: lea esi, [esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000b3dfa: lea esi, [esi]; mov byte ptr [ecx], dl; pop ebx; ret; 
0x000ba47c: lea esi, [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x0016e002: lea esi, [esi]; mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016e099: lea esi, [esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e084: lea esi, [esi]; mov dword ptr [eax], 0xc; pop ebx; ret; 
0x0016e0a9: lea esi, [esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x00182c19: lea esi, [esi]; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x0009d37a: lea esi, [esi]; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x000b3e3c: lea esi, [esi]; mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b3e29: lea esi, [esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009aa9c: lea esi, [esi]; mov eax, 0x10; add esp, 0xc; ret; 
0x0012c8a4: lea esi, [esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0009139c: lea esi, [esi]; mov eax, 0x16; pop ebx; ret; 
0x00092c2d: lea esi, [esi]; mov eax, 0x16; ret; 
0x000fb6a4: lea esi, [esi]; mov eax, 0x40; ret; 
0x000df1bc: lea esi, [esi]; mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012e3a9: lea esi, [esi]; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2e9: lea esi, [esi]; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000952a1: lea esi, [esi]; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0014b284: lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003d7f5: lea esi, [esi]; mov eax, 0xffffffff; ret; 
0x0009c701: lea esi, [esi]; mov eax, 1; add esp, 0xc; ret; 
0x0019ce2c: lea esi, [esi]; mov eax, 1; ja 0x19ce39; neg eax; ret; 
0x001a3a6c: lea esi, [esi]; mov eax, 1; ja 0x1a3a79; neg eax; ret; 
0x000d9d3d: lea esi, [esi]; mov eax, 1; jg 0xd9d49; neg eax; ret; 
0x000a7552: lea esi, [esi]; mov eax, 1; ret; 
0x00042ddc: lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x001872dd: lea esi, [esi]; mov eax, 2; add esp, 0xc; ret; 
0x00094b95: lea esi, [esi]; mov eax, 3; ret; 
0x0013dd0c: lea esi, [esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124315: lea esi, [esi]; mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x0010bcd2: lea esi, [esi]; mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bbb2; call eax; 
0x0010bc7a: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bb5f; call eax; 
0x0010bcbc: lea esi, [esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bbb2; call eax; 
0x00176c64: lea esi, [esi]; mov eax, dword ptr [ebx + 0x17c]; pop ebx; pop esi; pop edi; ret; 
0x001aa7fa: lea esi, [esi]; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x000c387d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c388d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c389d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38ad: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38bd: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38cd: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38dd: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38ed: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c38fd: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c390d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c391d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c386d: lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0008723c: lea esi, [esi]; mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0008710c: lea esi, [esi]; mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x000fd544: lea esi, [esi]; mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x000a72cc: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00131454: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x001a95aa: lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0009119d: lea esi, [esi]; mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x0013efb4: lea esi, [esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x001a9e9d: lea esi, [esi]; mov eax, ecx; ret; 
0x000ba71c: lea esi, [esi]; mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x001a833c: lea esi, [esi]; mov eax, edi; pop edi; ret; 
0x00024d7c: lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4a89: lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x0010d66c: lea esi, [esi]; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000df09d: lea esi, [esi]; mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000a0655: lea esi, [esi]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x00065a1c: lea esi, [esi]; mov edi, ecx; jmp eax; 
0x00150474: lea esi, [esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x00087145: lea esi, [esi]; mov edx, 1; mov eax, edx; ret; 
0x000a7384: lea esi, [esi]; mov edx, dword ptr [edi + 0x8c]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0016e014: lea esi, [esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000b3e1d: lea esi, [esi]; mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3e0c: lea esi, [esi]; mov word ptr [ecx], dx; pop ebx; ret; 
0x000b20ad: lea esi, [esi]; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000ba55d: lea esi, [esi]; movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b3ecc: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3edc: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3eec: lea esi, [esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b1fbd: lea esi, [esi]; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x0013fcaa: lea esi, [esi]; movzx eax, dl; ret; 
0x0019cd9c: lea esi, [esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019cdac: lea esi, [esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019cdbc: lea esi, [esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019cdcc: lea esi, [esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019cd7c: lea esi, [esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0016c467: lea esi, [esi]; nop; endbr32; ret; 
0x0009b2e7: lea esi, [esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x000a0a9d: lea esi, [esi]; nop; mov dword ptr [edx + 0x390], eax; ret; 
0x00091078: lea esi, [esi]; nop; mov eax, 0x16; ret; 
0x00087357: lea esi, [esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f57: lea esi, [esi]; nop; mov eax, 2; ret; 
0x000d9f67: lea esi, [esi]; nop; mov eax, 3; ret; 
0x000d9f77: lea esi, [esi]; nop; mov eax, 4; ret; 
0x000d9f87: lea esi, [esi]; nop; mov eax, 5; ret; 
0x000d9f97: lea esi, [esi]; nop; mov eax, 6; ret; 
0x000d9fa7: lea esi, [esi]; nop; mov eax, 7; ret; 
0x000424d8: lea esi, [esi]; nop; xor eax, eax; ret; 
0x0009106c: lea esi, [esi]; or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0009841c: lea esi, [esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0009a184: lea esi, [esi]; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0013f085: lea esi, [esi]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008fc74: lea esi, [esi]; pop ebx; pop esi; pop edi; ret; 
0x000c1a0c: lea esi, [esi]; pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x000c16bc: lea esi, [esi]; pop ebx; pop esi; ret; 
0x000313d4: lea esi, [esi]; pop ebx; ret; 
0x000fbbdc: lea esi, [esi]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a3f2a: lea esi, [esi]; pop ebx; xor eax, eax; ret; 
0x000ba46c: lea esi, [esi]; pop edi; pop esi; pop ebx; ret; 
0x000d9d1c: lea esi, [esi]; pop edi; pop esi; ret; 
0x000be119: lea esi, [esi]; pop esi; ret; 
0x001aa08a: lea esi, [esi]; pop esi; xor eax, eax; pop edi; ret; 
0x0003a064: lea esi, [esi]; ret; 
0x0008c782: lea esi, [esi]; sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x001a84dc: lea esi, [esi]; sub edx, 2; jb 0x1a8590; lea eax, [edi + 1]; pop edi; ret; 
0x0007fb7c: lea esi, [esi]; sub esp, 0x18; push ecx; call 0x817d0; add esp, 0x1c; ret; 
0x0017783c: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x0017772c: lea esi, [esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00175cc9: lea esi, [esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a74c2: lea esi, [esi]; sub esp, 0xc; push esi; call eax; 
0x0007d9dc: lea esi, [esi]; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000f1204: lea esi, [esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8444: lea esi, [esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016c78c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x00172e4c: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001775dc: lea esi, [esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001aa13d: lea esi, [esi]; test ah, 0xf0; jne 0x1aa160; lea eax, [edi - 8]; pop edi; ret; 
0x001a9eec: lea esi, [esi]; test ah, 1; jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x001872cd: lea esi, [esi]; test al, al; jne 0x1872f6; mov eax, 4; add esp, 0xc; ret; 
0x0005ad5c: lea esi, [esi]; test eax, eax; je 0x5ad70; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00043864: lea esi, [esi]; tzcnt ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x000e8729: lea esi, [esi]; xor eax, eax; add esp, 0xc; ret; 
0x0005382c: lea esi, [esi]; xor eax, eax; pop ebx; pop esi; ret; 
0x00043222: lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000d9d2c: lea esi, [esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c181c: lea esi, [esi]; xor eax, eax; pop edi; ret; 
0x00079ca4: lea esi, [esi]; xor eax, eax; ret; 
0x0010ba2d: lea esi, [esi]; xor eax, eax; xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x000432fc: lea esi, [esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x000a05e9: lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012e02a: lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0016d5dc: lea esi, [esp + 0x34]; push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00128b20: lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x00130ecb: lea esi, [esp + 8]; mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x000d9f1b: lea esi, cs:[esi]; add eax, 1; ret; 
0x0016c6eb: lea esi, cs:[esi]; add esp, 4; mov eax, 0x10; pop ebx; pop esi; ret; 
0x00155663: lea esi, cs:[esi]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x000a8e8b: lea esi, cs:[esi]; add esp, 4; pop ebx; pop esi; ret; 
0x0013f998: lea esi, cs:[esi]; and eax, 0xffffff; ret; 
0x000c2448: lea esi, cs:[esi]; bsf eax, eax; add eax, edx; ret; 
0x000c2468: lea esi, cs:[esi]; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1fc8: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fd8: lea esi, cs:[esi]; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x00190608: lea esi, cs:[esi]; endbr32; mov eax, 0xffffffff; ret; 
0x0017a87b: lea esi, cs:[esi]; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x000ea4e8: lea esi, cs:[esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x001a9f0b: lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f9b: lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x0012deab: lea esi, cs:[esi]; lea ecx, [esp + 0xc]; mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0010c11b: lea esi, cs:[esi]; lea ecx, [esp + 4]; mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x000d9f24: lea esi, cs:[esi]; lea esi, [esi]; add eax, 3; ret; 
0x00040705: lea esi, cs:[esi]; lea esi, [esi]; endbr32; ret; 
0x001a89a4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89b4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89c4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89d4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89e4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a8944: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a8954: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a8964: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a8974: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a8984: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec2: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8994: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9004: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a9014: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a9024: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a9034: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8fa4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fb4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fc4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fd4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fe4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ff4: lea esi, cs:[esi]; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001a9e95: lea esi, cs:[esi]; lea esi, [esi]; mov eax, ecx; ret; 
0x000d9f34: lea esi, cs:[esi]; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d3: lea esi, cs:[esi]; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f03: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f93: lea esi, cs:[esi]; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d9f43: lea esi, cs:[esi]; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de3: lea esi, cs:[esi]; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1a83: lea esi, cs:[esi]; lea esi, cs:[esi]; xor eax, eax; ret; 
0x00143693: lea esi, cs:[esi]; mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x0016e098: lea esi, cs:[esi]; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e0a8: lea esi, cs:[esi]; mov dword ptr [eax], 8; pop ebx; ret; 
0x000b3e28: lea esi, cs:[esi]; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0012c8a3: lea esi, cs:[esi]; mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000fb6a3: lea esi, cs:[esi]; mov eax, 0x40; ret; 
0x0014b283: lea esi, cs:[esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000826d3: lea esi, cs:[esi]; mov eax, 0xffffffff; ret; 
0x001a3a6b: lea esi, cs:[esi]; mov eax, 1; ja 0x1a3a79; neg eax; ret; 
0x000d9f4b: lea esi, cs:[esi]; mov eax, 1; ret; 
0x00042ddb: lea esi, cs:[esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x0013dd0b: lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0010bcbb: lea esi, cs:[esi]; mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bbb2; call eax; 
0x00131453: lea esi, cs:[esi]; mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0013efb3: lea esi, cs:[esi]; mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x000931d8: lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4a88: lea esi, cs:[esi]; mov eax, edx; pop ebx; ret; 
0x0010d66b: lea esi, cs:[esi]; mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00150473: lea esi, cs:[esi]; mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x0016e013: lea esi, cs:[esi]; mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x000b3ecb: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3edb: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3eeb: lea esi, cs:[esi]; movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x0019cd9b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019cdab: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019cdbb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019cdcb: lea esi, cs:[esi]; movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019cd7b: lea esi, cs:[esi]; movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0016c466: lea esi, cs:[esi]; nop; endbr32; ret; 
0x0009b2e6: lea esi, cs:[esi]; nop; mov dword ptr [eax + 4], edx; ret; 
0x00091077: lea esi, cs:[esi]; nop; mov eax, 0x16; ret; 
0x00087356: lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f56: lea esi, cs:[esi]; nop; mov eax, 2; ret; 
0x000d9f66: lea esi, cs:[esi]; nop; mov eax, 3; ret; 
0x000d9f76: lea esi, cs:[esi]; nop; mov eax, 4; ret; 
0x000d9f86: lea esi, cs:[esi]; nop; mov eax, 5; ret; 
0x000d9f96: lea esi, cs:[esi]; nop; mov eax, 6; ret; 
0x000d9fa6: lea esi, cs:[esi]; nop; mov eax, 7; ret; 
0x000424d7: lea esi, cs:[esi]; nop; xor eax, eax; ret; 
0x0009841b: lea esi, cs:[esi]; or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0008fc73: lea esi, cs:[esi]; pop ebx; pop esi; pop edi; ret; 
0x000b3deb: lea esi, cs:[esi]; pop ebx; ret; 
0x000be118: lea esi, cs:[esi]; pop esi; ret; 
0x0008f203: lea esi, cs:[esi]; ret; 
0x0017772b: lea esi, cs:[esi]; sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00175cc8: lea esi, cs:[esi]; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x0007d9db: lea esi, cs:[esi]; sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x000f1203: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x000f8443: lea esi, cs:[esi]; sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00172e4b: lea esi, cs:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001775db: lea esi, cs:[esi]; sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0005ad5b: lea esi, cs:[esi]; test eax, eax; je 0x5ad70; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0016c45b: lea esi, cs:[esi]; xor eax, eax; add esp, 0xc; ret; 
0x000d9d2b: lea esi, cs:[esi]; xor eax, eax; pop edi; pop esi; ret; 
0x000c181b: lea esi, cs:[esi]; xor eax, eax; pop edi; ret; 
0x00079ca3: lea esi, cs:[esi]; xor eax, eax; ret; 
0x000432fb: lea esi, cs:[esi]; xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x000a05e8: lea esi, fs:[esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012e029: lea esi, fs:[esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x00093d3c: lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00056686: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x000259f9: lea esp, [ebp - 0xc]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001398f8: lea esp, [ebp - 8]; mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0012a8df: lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x001398eb: lea esp, [ebp - 8]; xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x00069b7c: lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00069a4e: lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000df244: leave; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000efef1: leave; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00030183: leave; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x001670a3: leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x001260e3: leave; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x000c22a3: leave; add eax, ecx; ret; 
0x0003d169: leave; add edi, esi; ret 0; 
0x00042d2c: leave; bsr ecx, ecx; shl eax, cl; ret; 
0x00035185: leave; call 0x34c60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011f61a: leave; call dword ptr gs:[0x10]; 
0x0011f61a: leave; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x00071c8f: leave; clc; inc dword ptr [ecx]; ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00154a90: leave; cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x001a58dd: leave; dec edx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00124e08: leave; dec edx; stc; jmp dword ptr [ebp - 0x75]; 
0x0003c36c: leave; fstp st(1); ret; 
0x000d4cf9: leave; idiv bh; and ch, 2; lea edx, [edx - 0x162df4]; cmove eax, edx; ret; 
0x0015d63a: leave; in eax, 0xff; jmp dword ptr [ebp - 0x75]; 
0x00141658: leave; inc esp; stc; call dword ptr [eax + 0x6a]; 
0x0015f6f6: leave; inc esp; stc; call dword ptr [eax - 1]; 
0x0015ad68: leave; int1; call dword ptr [eax + 0x6a]; 
0x0015bd23: leave; int1; call dword ptr [ecx + 0x6a]; 
0x0010b984: leave; je 0x10b9a0; cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x00127487: leave; je 0x12748d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0013531d: leave; je 0x135328; xor eax, eax; pop ebx; ret; 
0x00139782: leave; je 0x139798; ret; 
0x000437a3: leave; je 0x437b0; pop ebx; ret; 
0x00086292: leave; je 0x86298; mov byte ptr [edx], 0; pop ebx; ret; 
0x000c229e: leave; je 0xc22b0; bsf ecx, ecx; add eax, ecx; ret; 
0x00113281: leave; jne 0x113263; xor eax, eax; pop ebx; ret; 
0x00133279: leave; jne 0x133288; mov eax, edx; pop ebx; pop esi; ret; 
0x001332f4: leave; jne 0x133300; mov eax, edx; pop ebx; pop esi; ret; 
0x001334e8: leave; jne 0x1334f0; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b3d: leave; jne 0x133b48; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b9d: leave; jne 0x133ba8; mov eax, edx; pop ebx; pop esi; ret; 
0x00133d88: leave; jne 0x133d90; mov eax, edx; pop ebx; pop esi; ret; 
0x0016e034: leave; jne 0x16e058; mov dword ptr [eax], 0; pop ebx; ret; 
0x0018614f: leave; jne 0x186158; ret; 
0x000a0df6: leave; jne 0xa0e00; add esp, 8; pop ebx; ret; 
0x000c34dc: leave; jne 0xc34e1; xor eax, eax; ret; 
0x000d9ff7: leave; jne 0xd9fd8; add eax, 1; ret; 
0x000d9fcd: leave; jne 0xd9ff2; ret; 
0x000f1011: leave; jne 0xf0ff3; xor eax, eax; pop ebx; ret; 
0x000f3b21: leave; jne 0xf3b03; xor eax, eax; pop ebx; ret; 
0x000f4911: leave; jne 0xf48f3; xor eax, eax; pop ebx; ret; 
0x000f7441: leave; jne 0xf7423; xor eax, eax; pop ebx; ret; 
0x000f8251: leave; jne 0xf8233; xor eax, eax; pop ebx; ret; 
0x00121acd: leave; js 0x121ad8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000fba29: leave; js 0xfba30; ret; 
0x000e7f5d: leave; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000986f3: leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00099309: leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00099086: leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0009a96a: leave; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000c07f4: leave; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000e7b7a: leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x00042e30: leave; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x0014e9d7: leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x00040564: leave; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00091260: leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x0004386b: leave; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x00043301: leave; pop ebx; mov eax, ecx; ret; 
0x00123ba5: leave; pop edi; stc; call dword ptr [eax - 0x73]; 
0x000fb1d5: leave; pop edi; stc; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x00116ec3: leave; ret 0xfff0; 
0x00042d2f: leave; shl eax, cl; ret; 
0x000c1a5b: leave; sub edx, ecx; jbe 0xc1a90; add eax, ecx; ret; 
0x00162fe3: leave; test ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00043612: leave; xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042e38: leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x0009571a: leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b39b8: les eax, ptr [0x5b5f0000]; ret; 
0x00089e58: les eax, ptr [0xec830000]; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x0003bef2: les eax, ptr [eax + 0x5b]; pop esi; pop edi; fsubp st(1); ret; 
0x0003be80: les eax, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x0016c6f1: les eax, ptr [eax + edi*4]; adc byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0005b8d1: les eax, ptr [eax + edi*4]; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a7161: les eax, ptr [eax + edi*4]; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0012d2bf: les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a78a8: les eax, ptr [eax]; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0012c18f: les eax, ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d351: les eax, ptr [eax]; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c235d: les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a8706: les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1ee2: les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0014986b: les eax, ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012528f: les eax, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00083277: les eax, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x001481fb: les eax, ptr [ebx + ebx*2]; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x0003a2be: les eax, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00026002: les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00025019: les eax, ptr [ebx + ebx*2]; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x001a0d2a: les eax, ptr [ebx + ebx*2]; ret; 
0x00189f0d: les eax, ptr [ebx - 0x17af0007]; pop ecx; aad 0xef; jmp dword ptr [esi - 0x70]; 
0x000923a3: les eax, ptr [ebx - 0x17af0007]; ret; 
0x0016f07f: les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00120789: les eax, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; ret; 
0x0016e778: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; jmp eax; 
0x0013f15d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00094d7d: les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00098151: les eax, ptr [ecx + ecx*4]; fmul dword ptr [ecx - 0x16a1a436]; cmp dl, 0xff; jmp dword ptr [esi - 0x70]; 
0x001380f0: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0015318d: les eax, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5f], 1; ret; 
0x0005af33: les eax, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00114c78: les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001a9ef1: les eax, ptr [ecx]; jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x000d3806: les eax, ptr [ecx]; ret 0x148d; 
0x000af9f0: les eax, ptr [ecx]; ret; 
0x0013465f: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016fa32: les eax, ptr [edi + ecx]; mov dh, 0xc0; pop ebx; pop esi; ret; 
0x00094608: les eax, ptr [edi + esi*8]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0003c367: les eax, ptr [edx]; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003bc95: les eax, ptr [edx]; je 0x3bc9b; fchs; ret; 
0x0003c035: les eax, ptr [edx]; je 0x3c03b; fchs; ret; 
0x001a7d8a: les eax, ptr [edx]; jne 0x1a7e20; lea eax, [edi - 8]; pop edi; ret; 
0x001a890a: les eax, ptr [edx]; jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a8b49: les eax, ptr [edx]; jne 0x1a8bf0; add edx, 8; jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8f51: les eax, ptr [edx]; jne 0x1a9000; test ah, 4; jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x001a35c1: les eax, ptr [esi + ebx*2]; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0009121a: les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x0010e57e: les ebp, ptr [eax + 0x5b]; ret; 
0x001aae80: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00033b42: les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00055895: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x0008e9f6: les ebp, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0019069d: les ebp, ptr [eax]; or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x00034650: les ebp, ptr [eax]; pop ebx; ret; 
0x000df44f: les ebp, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x00177763: les ebp, ptr [ebp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00028dc9: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002f337: les ebp, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008e296: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000234cc: les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x000db676: les ebp, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00038e45: les ebp, ptr [ecx + ecx*4]; call 0x5d62eca8; ret; 
0x000e7f13: les ebp, ptr [ecx + ecx*4]; call 0x5d6ddd76; ret; 
0x000f0815: les ebp, ptr [ecx + ecx*4]; call 0x5d6e6678; ret; 
0x0010ab05: les ebp, ptr [ecx + ecx*4]; call 0x5d700968; ret; 
0x0010ec8e: les ebp, ptr [ecx + ecx*4]; call 0x5d704af1; ret; 
0x0010edac: les ebp, ptr [ecx + ecx*4]; call 0x5d704c0f; ret; 
0x0009074c: les ebp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000dc02f: les ebp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000876a1: les ebp, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0012cf5e: les ebp, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0010b5ad: les ebp, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x00070457: les ebp, ptr [esp + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0014bff5: les ebp, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003d082: les ebx, ptr [eax + 0x5b000000]; ret; 
0x0003cdeb: les ebx, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000ee065: les ebx, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000ef5b3: les ebx, ptr [eax + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016c5a7: les ebx, ptr [eax]; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x00042513: les ebx, ptr [eax]; lea eax, [ebx + 6]; pop ebx; ret; 
0x00122650: les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x0004318f: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000430fd: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00043161: les ebx, ptr [eax]; mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000430cf: les ebx, ptr [eax]; mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00179334: les ebx, ptr [eax]; pop ebx; jmp eax; 
0x000a9f79: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003c220: les ebx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000244a5: les ebx, ptr [eax]; pop ebx; ret; 
0x0009088f: les ebx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0010ef6e: les ebx, ptr [ebx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00028782: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0003b2a7: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00029ebc: les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009b353: les ebx, ptr [ebx + ebx*2]; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x00080195: les ebx, ptr [ebx + ebx*2]; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x000309f8: les ebx, ptr [ebx + ebx*2]; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00175db3: les ebx, ptr [ebx + ebx*2]; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000389cf: les ebx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000338c8: les ebx, ptr [ebx + ebx*2]; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007e6af: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000251cd: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008ab7a: les ebx, ptr [ebx + ebx*2]; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x000801d0: les ebx, ptr [ebx + ebx*2]; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x0011592f: les ebx, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0018e083: les ebx, ptr [ecx + eax*8]; clc; pop ds; ret; 
0x00148725: les ebx, ptr [ecx + eax]; add byte ptr [eax], al; ret; 
0x000e908a: les ebx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003529f: les ebx, ptr [ecx + ecx*4]; call 0x5d62b102; ret; 
0x0003e231: les ebx, ptr [ecx + ecx*4]; call 0x5d634094; ret; 
0x00080043: les ebx, ptr [ecx + ecx*4]; call 0x5d675ea6; ret; 
0x000989eb: les ebx, ptr [ecx + ecx*4]; call 0x5d68e84e; ret; 
0x00099378: les ebx, ptr [ecx + ecx*4]; call 0x5d68f1db; ret; 
0x00099ad5: les ebx, ptr [ecx + ecx*4]; call 0x5d68f938; ret; 
0x000a1ccb: les ebx, ptr [ecx + ecx*4]; call 0x5d697b2e; ret; 
0x000a1d4d: les ebx, ptr [ecx + ecx*4]; call 0x5d697bb0; ret; 
0x0010eaba: les ebx, ptr [ecx + ecx*4]; call 0x5d70491d; ret; 
0x0015297f: les ebx, ptr [ecx + ecx*4]; call 0x5d7487e2; ret; 
0x00154a43: les ebx, ptr [ecx + ecx*4]; call 0x5d74a8a6; ret; 
0x00167d3f: les ebx, ptr [ecx + ecx*4]; call 0x5d75dba2; ret; 
0x0016ab7f: les ebx, ptr [ecx + ecx*4]; call 0x5d7609e2; ret; 
0x0016b60f: les ebx, ptr [ecx + ecx*4]; call 0x5d761472; ret; 
0x0016b8df: les ebx, ptr [ecx + ecx*4]; call 0x5d761742; ret; 
0x00189d68: les ebx, ptr [ecx + ecx*4]; call 0x5d77fbcb; ret; 
0x00038803: les ebx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00039159: les ebx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000251fc: les ebx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a0a0b: les ebx, ptr [ecx]; add byte ptr [ebx - 0x74fbdbac], cl; adc dl, byte ptr [eax + 0x35c9089]; add byte ptr [eax], al; ret; 
0x0012cf1d: les ebx, ptr [edi + ecx]; mov dh, 0xc0; neg eax; ret; 
0x0017057a: les ebx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001888f8: les ebx, ptr [edi - 0x11]; jmp dword ptr [ecx]; 
0x0015b889: les ebx, ptr [edx + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x00047caa: les ebx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001440b8: les ebx, ptr [esp + ecx]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000dad21: les ecx, ptr [eax + 0x5b]; ret; 
0x000bb203: les ecx, ptr [eax + eax]; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1de: les ecx, ptr [eax + eax]; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1be: les ecx, ptr [eax + eax]; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1a1: les ecx, ptr [eax + eax]; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb174: les ecx, ptr [eax + eax]; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb15d: les ecx, ptr [eax + eax]; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb142: les ecx, ptr [eax + eax]; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb120: les ecx, ptr [eax + eax]; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010451f: les ecx, ptr [eax + edi + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0010ebee: les ecx, ptr [eax + edi*4]; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x001351ec: les ecx, ptr [eax + edx*2]; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00137071: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013756e: les ecx, ptr [eax + edx*2]; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x001352e5: les ecx, ptr [eax + edx*2]; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00134d7d: les ecx, ptr [eax + edx*2]; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00135d12: les ecx, ptr [eax + edx*2]; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00135ae6: les ecx, ptr [eax + edx*2]; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00148cec: les ecx, ptr [eax]; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00097591: les ecx, ptr [eax]; mov eax, 0x16; pop ebx; ret; 
0x0005bd81: les ecx, ptr [eax]; mov eax, 0xffffffff; pop ebx; ret; 
0x00128438: les ecx, ptr [eax]; mov eax, 1; pop ebx; ret; 
0x0006203c: les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x000536ce: les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x000895f5: les ecx, ptr [eax]; movzx eax, al; pop ebx; neg eax; ret; 
0x0016e89b: les ecx, ptr [eax]; movzx eax, al; pop ebx; ret; 
0x0010cd33: les ecx, ptr [eax]; or eax, edx; pop ebx; ret; 
0x0005a269: les ecx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00027166: les ecx, ptr [eax]; pop ebx; ret; 
0x0003c296: les ecx, ptr [eax]; ret; 
0x0003c658: les ecx, ptr [eax]; xor eax, eax; pop ebx; ret; 
0x0009d1bb: les ecx, ptr [ebp - 0x6776779]; call dword ptr [eax - 0x73]; 
0x000278b7: les ecx, ptr [ebx + 0x45c7c84d]; mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000a85c7: les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0003b4fe: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0003fc66: les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000ad7b7: les ecx, ptr [ebx + ebx*2]; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00155398: les ecx, ptr [ebx + ebx*2]; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x00148121: les ecx, ptr [ebx + ebx*2]; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0008144d: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7ca1: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x000270dd: les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016e9f6: les ecx, ptr [ebx + ecx*4]; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0005f7c0: les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017c56b: les ecx, ptr [ebx - 0x8f7b]; inc dword ptr [ecx]; ret; 
0x0017c5b7: les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x00169b4f: les ecx, ptr [ecx + 0x458bcc45]; rol byte ptr [ebx - 0x7f72f714], 1; js 0x169bbf; stc; call dword ptr [eax + 0x57]; 
0x0004b16a: les ecx, ptr [ecx + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013b906: les ecx, ptr [ecx + ebp*8]; add ecx, dword ptr [edi - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000a811c: les ecx, ptr [ecx + ebp*8]; dec ebp; fcos; jmp dword ptr [esi - 0x70]; 
0x0013c206: les ecx, ptr [ecx + ebp*8]; jae 0x13c196; stc; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0017539c: les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x000c544b: les ecx, ptr [ecx + ebp]; ret; 
0x0014f2d9: les ecx, ptr [ecx + ecx*4]; call 0x4424bc66; ret 0x148b; 
0x0003e32f: les ecx, ptr [ecx + ecx*4]; call 0x5d634192; ret; 
0x0007c505: les ecx, ptr [ecx + ecx*4]; call 0x5d672368; ret; 
0x000c6435: les ecx, ptr [ecx + ecx*4]; call 0x5d6bc298; ret; 
0x0014ef8a: les ecx, ptr [ecx + ecx*4]; call 0x5d744ded; ret; 
0x001879f9: les ecx, ptr [ecx + ecx*4]; call 0x5d77d85c; ret; 
0x000e8856: les ecx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00027945: les ecx, ptr [ecx + ecx*4]; inc ebp; fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x0007fdd8: les ecx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000b0434: les ecx, ptr [ecx + ecx*4]; ret 0x468d; 
0x00069ef6: les ecx, ptr [ecx + ecx*4]; ret 0xc031; 
0x0002324a: les ecx, ptr [ecx + ecx*4]; ret; 
0x0006d57e: les ecx, ptr [ecx + ecx*4]; test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebx - 0x4476b]; dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x000270b9: les ecx, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000eb839: les ecx, ptr [ecx*4 + 0x5e5b0245]; pop edi; pop ebp; ret; 
0x000eb722: les ecx, ptr [ecx*4 + 0x5e5b0845]; pop edi; pop ebp; ret; 
0x000a1b73: les ecx, ptr [ecx*4 - 0x19bf237a]; call dword ptr [eax + 0x57]; 
0x000a1abf: les ecx, ptr [ecx*4 - 0x19c0b37a]; call dword ptr [eax + 0x57]; 
0x000a1b4f: les ecx, ptr [ecx*4 - 0x19c3637a]; call dword ptr [eax + 0x57]; 
0x000a1b3d: les ecx, ptr [ecx*4 - 0x19c3937a]; call dword ptr [eax + 0x57]; 
0x000a1b2b: les ecx, ptr [ecx*4 - 0x19c3d37a]; call dword ptr [eax + 0x57]; 
0x000a1b19: les ecx, ptr [ecx*4 - 0x19c3f37a]; call dword ptr [eax + 0x57]; 
0x000a1b07: les ecx, ptr [ecx*4 - 0x19c4137a]; call dword ptr [eax + 0x57]; 
0x00095db4: les ecx, ptr [ecx*4 - 0x1a70c37d]; call dword ptr [eax + 0x56]; 
0x00095da2: les ecx, ptr [ecx*4 - 0x1a70e37d]; call dword ptr [eax + 0x56]; 
0x000345a8: les ecx, ptr [ecx*4 - 0x6d1cf7d]; call dword ptr [eax + 0x57]; 
0x0009c6f7: les ecx, ptr [edi + ecx]; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053559: les ecx, ptr [edi + ecx]; mov dh, 0xc0; ret; 
0x001a9eb5: les ecx, ptr [edi]; jne 0x1a9ed0; test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001248b1: les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x001740db: les ecx, ptr [edx*2 - 0x7972afad]; xor ah, byte ptr [ebp - 7]; call dword ptr [edi + 0x50]; 
0x00041864: les ecx, ptr [esp + eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005f70c: les edi, ptr [eax + 0x5b]; ret; 
0x001b0397: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00027eed: les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0015f451: les edi, ptr [eax + ecx + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000a6c9a: les edi, ptr [eax]; mov eax, ebx; pop ebx; ret 4; 
0x001474a1: les edi, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009c63d: les edi, ptr [eax]; pop ebx; ret; 
0x0002a7db: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x0002a3aa: les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x000c7a78: les edi, ptr [ebx + ebx*2]; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x000d21ca: les edi, ptr [ebx + ebx*2]; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x001b479d: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret 4; 
0x00026e68: les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00180ae0: les edi, ptr [ecx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0013fdc8: les edi, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ea612: les edi, ptr [ecx + ecx*4 - 0x30]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002f96d: les edi, ptr [ecx + ecx*4 - 0x38]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0005a572: les edi, ptr [ecx + ecx*4]; call 0x5d6503d5; ret; 
0x000d2050: les edi, ptr [ecx + ecx*4]; call 0x5d6c7eb3; ret; 
0x000e83f1: les edi, ptr [ecx + ecx*4]; call 0x5d6de254; ret; 
0x0012fdc9: les edi, ptr [ecx + ecx*4]; call 0x5d725c2c; ret; 
0x00140684: les edi, ptr [ecx + ecx*4]; call 0x5d7364e7; ret; 
0x00052274: les edi, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x00094fec: les edi, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00081fd1: les edi, ptr [ecx + esi]; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00160f48: les edi, ptr [ecx]; add al, byte ptr [eax]; mov dword ptr [esp], ebp; call ebx; 
0x00035720: les edi, ptr [ecx]; ret 0x830f; 
0x0014cd17: les edi, ptr [edx + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0009a817: les edx, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00124403: les edx, ptr [eax + 0x5b000001]; pop esi; pop edi; ret; 
0x000916c8: les edx, ptr [eax + eax + 0x5e5b0000]; ret; 
0x0003cf5d: les edx, ptr [eax + eax + 0x5f5b0000]; ret; 
0x001813aa: les edx, ptr [eax - 0x76ffffff]; rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x0017f9d1: les edx, ptr [eax - 0xf770000]; pop ebx; pop esi; ret; 
0x0011ebcf: les edx, ptr [eax]; adc byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001482ed: les edx, ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013b60e: les edx, ptr [eax]; add eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a1e62: les edx, ptr [eax]; add esp, 0x14; pop ebx; pop esi; ret; 
0x00040b6e: les edx, ptr [eax]; add esp, 0xc; ret; 
0x00184010: les edx, ptr [eax]; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0016e919: les edx, ptr [eax]; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00144ea7: les edx, ptr [eax]; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x000260f7: les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00090bc9: les edx, ptr [eax]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00128435: les edx, ptr [eax]; add esp, 8; mov eax, 1; pop ebx; ret; 
0x00027163: les edx, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0009862a: les edx, ptr [eax]; call eax; 
0x000a25c4: les edx, ptr [eax]; cmp eax, -1; je 0xa25d0; add esp, 0xc; ret; 
0x00172381: les edx, ptr [eax]; cmp eax, 1; mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x0017a9c4: les edx, ptr [eax]; cmp eax, 1; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00166310: les edx, ptr [eax]; cmp edx, 1; jg 0x166338; add esp, 0x18; pop ebx; ret; 
0x0018007d: les edx, ptr [eax]; cmp edx, 1; jg 0x1800a8; add esp, 0x18; pop ebx; ret; 
0x00180109: les edx, ptr [eax]; cmp edx, 1; jg 0x180130; add esp, 0x18; pop ebx; ret; 
0x001803e1: les edx, ptr [eax]; cmp edx, 1; jg 0x180408; add esp, 0x18; pop ebx; ret; 
0x00094670: les edx, ptr [eax]; cmp edx, 1; jg 0x94698; add esp, 0x18; pop ebx; ret; 
0x0013f03f: les edx, ptr [eax]; lea eax, [esi + edi]; pop ebx; pop esi; pop edi; ret; 
0x0012a940: les edx, ptr [eax]; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x0014842f: les edx, ptr [eax]; mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x000e79f7: les edx, ptr [eax]; mov eax, 1; add esp, 0xc; ret; 
0x00123d21: les edx, ptr [eax]; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0007cfb2: les edx, ptr [eax]; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x00123751: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x1237a0; call eax; 
0x00123895: les edx, ptr [eax]; mov eax, dword ptr [eax]; test eax, eax; je 0x123938; call eax; 
0x0013474e: les edx, ptr [eax]; mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x00179219: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x001772af: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x0017731f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x0017738f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f2: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177452: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774bf: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x0017753f: les edx, ptr [eax]; mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x00041e3c: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006127c: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x00177a30: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x0003f283: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f396: les edx, ptr [eax]; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x00157928: les edx, ptr [eax]; mov eax, dword ptr [esp]; call eax; 
0x00157abd: les edx, ptr [eax]; mov eax, ebx; call eax; 
0x0003ca8c: les edx, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00185065: les edx, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x0007a037: les edx, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0013d073: les edx, ptr [eax]; mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x000ea2ca: les edx, ptr [eax]; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x0014ae73: les edx, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000254f4: les edx, ptr [eax]; mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x001256b7: les edx, ptr [eax]; mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0013ae2c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07c: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c2: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00040cf1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a1: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a94: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x00097680: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098934: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da4: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099710: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0017723f: les edx, ptr [eax]; mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x0012bc33: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0018a0a0: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00040906: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b33: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e03: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e86: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x000dac65: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54e9: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79a9: les edx, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x0002538c: les edx, ptr [eax]; neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x00025815: les edx, ptr [eax]; neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x0014800e: les edx, ptr [eax]; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00060ee7: les edx, ptr [eax]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0002fa93: les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00121c16: les edx, ptr [eax]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00144f11: les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x00160cda: les edx, ptr [eax]; push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001579aa: les edx, ptr [eax]; push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x00149c8f: les edx, ptr [eax]; sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x001769ec: les edx, ptr [eax]; sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001763fc: les edx, ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016e239: les edx, ptr [eax]; sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x0013acb1: les edx, ptr [eax]; test eax, eax; je 0x13acc0; add esp, 8; pop ebx; ret; 
0x001602f1: les edx, ptr [eax]; test eax, eax; je 0x160300; sub esp, 0xc; push esi; call eax; 
0x00160681: les edx, ptr [eax]; test eax, eax; je 0x160690; sub esp, 0xc; push esi; call eax; 
0x0016dc41: les edx, ptr [eax]; test eax, eax; je 0x16dc50; sub esp, 0xc; push esi; call eax; 
0x0016ea04: les edx, ptr [eax]; test eax, eax; je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00042467: les edx, ptr [eax]; test eax, eax; je 0x42478; add esp, 8; pop ebx; ret; 
0x00127e5d: les edx, ptr [eax]; test eax, eax; jne 0x127e1c; add esp, 0xc; ret; 
0x00177b05: les edx, ptr [eax]; test eax, eax; jne 0x177af0; add esp, 8; pop ebx; ret; 
0x0003c976: les edx, ptr [eax]; test eax, eax; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc95: les edx, ptr [eax]; test eax, eax; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x000fafe5: les edx, ptr [eax]; test eax, eax; jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x0012f6d2: les edx, ptr [eax]; test eax, eax; js 0x12f6e0; add esp, 8; pop ebx; ret; 
0x00155600: les edx, ptr [eax]; test eax, eax; sete al; add esp, 0xc; ret; 
0x000a74d1: les edx, ptr [eax]; test ebp, ebp; jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x001877a0: les edx, ptr [eax]; test ebx, ebx; jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x0003a330: les edx, ptr [eax]; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00042c08: les edx, ptr [eax]; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000945bb: les edx, ptr [eax]; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0010e68b: les edx, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00131e41: les edx, ptr [ebx + ebx*2]; pop edi; ret; 
0x000b059c: les edx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00030107: les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d0b1: les edx, ptr [ebx + edx*2]; call dword ptr [eax + 0x10]; 
0x0003ce70: les edx, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop edi; ret; 
0x00125067: les edx, ptr [ecx + ecx*4 - 0x28]; pop ebx; pop esi; ret; 
0x000ad89c: les edx, ptr [ecx + ecx*4]; call 0x5d6a36ff; ret; 
0x00150128: les edx, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x00059f9d: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x001229fc: les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000c50f2: les edx, ptr [ecx*4 + 0x5e5b9804]; ret; 
0x00168d5f: les edx, ptr [edi + edi*8]; je 0x168d88; and al, 0x89; ret; 
0x000e8e97: les esi, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x000a09ac: les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00122c03: les esi, ptr [eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00184285: les esi, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0017c98f: les esi, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x001841bc: les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x00092f06: les esi, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0003df01: les esi, ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x00115353: les esi, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x00175e97: les esi, ptr [ebx + ebx*2 + 0x5f]; ret; 
0x00040aeb: les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x001141c2: les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x0005abdf: les esi, ptr [esp + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00086390: les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x00115d36: les esp, ptr [eax + 0x5b]; pop esi; pop edi; ret; 
0x00086199: les esp, ptr [eax + ecx]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x0003dd56: les esp, ptr [eax]; add al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009189d: les esp, ptr [eax]; add esp, 0xc; ret; 
0x001150dc: les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x0008f145: les esp, ptr [eax]; cmp eax, 0xfffff000; ja 0x8f158; add esp, 8; pop ebx; ret; 
0x00160a2e: les esp, ptr [eax]; cmp edx, 1; jg 0x160a58; add esp, 0x18; pop ebx; ret; 
0x001a7db3: les esp, ptr [eax]; jne 0x1a7e50; lea eax, [edi - 4]; pop edi; ret; 
0x001a8933: les esp, ptr [eax]; jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x001a8b73: les esp, ptr [eax]; jne 0x1a8c20; add edx, 0xc; jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8f7a: les esp, ptr [eax]; jne 0x1a9030; test ah, 0x40; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x0013c538: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0008ec39: les esp, ptr [eax]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000dc0d1: les esp, ptr [eax]; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00061faa: les esp, ptr [eax]; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0007c82f: les esp, ptr [eax]; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0012f1a8: les esp, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f778: les esp, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7e8: les esp, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc38: les esp, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd38: les esp, ptr [eax]; mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x00125c10: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012f140: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a0: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbd0: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc0: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0013034e: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x00148c3a: les esp, ptr [eax]; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x000255a4: les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x001b4886: les esp, ptr [eax]; ret; 
0x0010e7a2: les esp, ptr [ebx + ebx*2 + 0x5e]; ret; 
0x0008e848: les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000dc693: les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003d97f: les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0003c93a: les esp, ptr [ecx + eax]; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001768c4: les esp, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x001299a3: les esp, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0013fc9e: ljmp 0:0xf98110; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x000e7ae2: ljmp 0x10c4:0x83000000; mov eax, 1; add esp, 0xc; ret; 
0x0003a058: ljmp 0x11b6:0xfd03118; test dl, dl; jne 0x3a040; ret; 
0x00198b0c: ljmp 0x1251:0xc381fffe; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016c5a2: ljmp 0x18c4:0x83fff2c0; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x000fbbcf: ljmp 0x1b8:0x5bed7901; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x000b01be: ljmp 0x1c70:0x89c67508; pop ebx; pop esi; ret; 
0x00051852: ljmp 0x2444:0x8b000000; or al, 0x39; ret; 
0x0015a3b0: ljmp 0x2474:0x8b000001; sbb al, 0x83; ret 0x8301; 
0x00183a22: ljmp 0x247c:0x8bffeb08; sub byte ptr [ebp - 0x644b379], cl; call dword ptr [eax - 0x73]; 
0x000826d0: ljmp 0x2674:0x8d2effff; add byte ptr [eax - 1], bh; ret; 
0x000fbb22: ljmp 0x2cc4:0x83fff935; ret; 
0x001910d2: ljmp 0x4289:0x66fa4289; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0007cf86: ljmp 0x450f:0x107f602; ret 0xec83; 
0x000fb19b: ljmp 0x47c5:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x001a8511: ljmp 0x547:0x8d7b7206; pop edi; ret; 
0x000b9fb2: ljmp 0x5b5e:0x5f000005; ret; 
0x001353a4: ljmp 0x5bf0:0x8904c483; pop esi; ret; 
0x00081d37: ljmp 0x5bff:0xffffffb8; ret; 
0x000ac064: ljmp 0x5d5f:0x5e5b1789; ret; 
0x00173432: ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0017ef84: ljmp 0x5e5b:0x14c483ff; ret; 
0x0017ad49: ljmp 0x5e5b:0x2cc483ff; pop edi; pop ebp; ret; 
0x0019150a: ljmp 0x5f07:0x88027402; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a8521: ljmp 0x647:0x8d6b7207; pop edi; ret; 
0x000dee5c: ljmp 0x838d:0x50000002; dec ebx; inc esi; stc; call dword ptr [eax - 0x18]; 
0x001a8531: ljmp 0x847:0x8d5b7209; pop edi; ret; 
0x00071dd0: ljmp 0x870f:0x9fa8330; cmp eax, 0x89fffff2; ret 0xc083; 
0x001ac027: ljmp 0x8904:0xc283e8d1; ret; 
0x001759a8: ljmp 0x8908:0x24748bff; ret; 
0x00178ea0: ljmp 0x89c1:0x89fa89ff; ret; 
0x00061278: ljmp 0x8b10:0xc4830002; inc esp; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x000c2024: ljmp 0x8d06:0x7cc20110; inc esp; add dword ptr [eax], esi; ret; 
0x000fb282: ljmp 0x8d08:0xec83ffff; or byte ptr [ebx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fb2df: ljmp 0x8d08:0xec83ffff; or byte ptr [ebx], 0x48; stc; call dword ptr [eax - 1]; 
0x000c2014: ljmp 0x8d16:0x7cc20120; inc esp; add dword ptr [eax], esp; ret; 
0x000c2004: ljmp 0x8d26:0x7cc20130; inc esp; add dword ptr [eax], edx; ret; 
0x0003cab5: ljmp 0x9066:0x9066000f; nop; nop; mov eax, 0xad; int 0x80; 
0x001a8541: ljmp 0x947:0x8d4b720a; pop edi; ret; 
0x001a8551: ljmp 0xa47:0x8d3b720b; pop edi; ret; 
0x00190861: ljmp 0xc019:0xd8f7fffc; add esp, 0x2c; ret; 
0x000c1d41: ljmp 0xc229:0xc0bc0f10; jbe 0xc1d70; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d51: ljmp 0xc229:0xc0bc0f20; jbe 0xc1d70; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1d61: ljmp 0xc229:0xc0bc0f30; jbe 0xc1d70; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0012e40c: ljmp 0xc3:0xb8530010; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001a8561: ljmp 0xc47:0x8d2b720d; pop edi; ret; 
0x00176414: ljmp 0xc483:0x10c483ff; add al, 0x5b; pop esi; ret; 
0x00079ee5: ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0003b0c4: ljmp 0xd089:0x7fff0000; shr eax, 0x1f; ret; 
0x001a8571: ljmp 0xd47:0x8d1b720e; pop edi; ret; 
0x0013f983: ljmp 0xe181:0xc0b70f18; add byte ptr [eax], al; add al, al; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x001a8581: ljmp 0xe47:0x8d0b720f; pop edi; ret; 
0x0017328c: ljmp 0xec83:0x10c483ff; or al, 0x31; call dword ptr [esi - 0x18]; 
0x00180666: ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x000e7bac: ljmp 0xf00:0x3b8; inc ebp; ret 0x2ec3; 
0x0010d285: ljmp 0xf184:0xfefe183; add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x001a434a: ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0019b94f: ljmp 0xf702:0x89068b04; ret 0xf; 
0x0019884f: ljmp 0xf702:0x89078b04; ret 0xf; 
0x000390ca: ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00074180: ljmp 0xfc0:0x85000011; test al, bh; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x001463ec: lldt word ptr [ebx - 0x77]; ret; 
0x000bbe14: lock adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0010c59b: lock add al, byte ptr [eax]; nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x000985a0: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; call dword ptr gs:[0x10]; 
0x0008fbca: lock add byte ptr [eax], al; add byte ptr [ecx + 0x80], bh; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009e418: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; call dword ptr gs:[0x10]; 
0x00093222: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009863d: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903ef: lock add byte ptr [eax], al; add byte ptr [ecx + 0x81], bh; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960ca: lock add byte ptr [eax], al; add byte ptr [ecx + 0x87], bh; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00098031: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; mov edx, 1; call dword ptr gs:[0x10]; 
0x00189edb: lock add byte ptr [eax], al; add byte ptr [ecx + 1], bh; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097b26: lock add byte ptr [eax], al; add byte ptr [ecx + 7], bh; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000977ed: lock add byte ptr [eax], al; add byte ptr [ecx + 8], bh; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000901b6: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [ecx + 0x81]; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091479: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 0x7fffffff]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091ba0: lock add byte ptr [eax], al; add byte ptr [ecx], dh; idiv byte ptr [edx + 1]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095715: lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009880e: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a16: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b57: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bd9: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c00: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092173: lock add byte ptr [eax], al; add byte ptr [edx + 0x7fffffff], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000923f9: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097da3: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd4: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x00099999: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4c: lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fc3e: lock add byte ptr [eax], al; add byte ptr [edx + 2], bh; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000740a6: lock add dword ptr [ebx - 0x4f343], eax; call dword ptr [eax]; 
0x00189ed6: lock add dword ptr [ebx], 1; mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00131992: lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0009bcfc: lock cmpxchg dword ptr [ebx], edx; jne 0x9bd10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0009ac75: lock cmpxchg dword ptr [ebx], esi; jne 0x9ac80; xor eax, eax; pop ebx; pop esi; ret; 
0x0008f6ae: lock cmpxchg dword ptr [ecx], edx; setne al; movzx eax, al; pop ebx; ret; 
0x0009bd3f: lock cmpxchg dword ptr [edx], ecx; jne 0x9bd36; xor eax, eax; pop ebx; ret; 
0x0009bd8d: lock cmpxchg dword ptr [edx], ecx; jne 0x9bda0; xor eax, eax; pop ebx; ret; 
0x0009a96b: lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x00094f0c: lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0009a944: lock dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x00189e60: lock dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x0012ba80: lock dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x000a5d41: lock dec dword ptr [edi]; inc esp; ret 0x578d; 
0x000a655c: lock dec dword ptr [edi]; inc esp; ret 0xe821; 
0x000a139b: lock dec dword ptr [edi]; inc esp; ret 0xff31; 
0x001800b9: lock inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x0017abe7: lock inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x0017a9c1: lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0017a9c0: lock inc dword ptr es:[ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00142560: lock sub dword ptr [eax - 0xc], 1; je 0x142570; add esp, 4; pop ebx; pop esi; ret; 
0x0009aaeb: lock sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x0009e2f6: lodsb al, byte ptr [esi]; adc esp, esi; call dword ptr [edi + 0x50]; 
0x000ebed5: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [eax - 0x73], dl; adc dword ptr [eax - 0x61], -7; call dword ptr [eax - 0x18]; 
0x00070458: lodsb al, byte ptr [esi]; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00097044: lodsb al, byte ptr [esi]; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00095c5e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg ah, bl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00146e45: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebp + 0x396374ed], al; ret; 
0x000ca612: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x39082444], cl; ret; 
0x0012dc33: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x00184cf8: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x001aae81: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x00033b43: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00189350: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cdfaa], cl; add al, 0x29; ret 0x5052; 
0x000500fe: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0017158e: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x0009b460: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0005e1f9: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add dh, dh; ret; 
0x00114786: lodsb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000d099b: lodsb al, byte ptr [esi]; and al, 0x7c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0011575d: lodsb al, byte ptr [esi]; and al, 0x8c; add dword ptr [eax], eax; add byte ptr [ebx + 0x1b824ac], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00050899: lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x001ade82: lodsb al, byte ptr [esi]; and al, 0x94; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x00173fa5: lodsb al, byte ptr [esi]; and edi, ecx; call dword ptr [eax + 0x52]; 
0x0019544d: lodsb al, byte ptr [esi]; and edi, edi; inc dword ptr [ecx + 0x4440fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000abc76: lodsb al, byte ptr [esi]; call 0xc24ecc7c; ret; 
0x000e7dfd: lodsb al, byte ptr [esi]; cmp eax, -0x26; jne 0xe7e40; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0013af08: lodsb al, byte ptr [esi]; dec ebp; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00164abb: lodsb al, byte ptr [esi]; dec edx; int1; call dword ptr [eax - 0x73]; 
0x0004d5a6: lodsb al, byte ptr [esi]; idiv bh; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x0017a5da: lodsb al, byte ptr [esi]; idiv bh; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x0016eb30: lodsb al, byte ptr [esi]; in al, dx; call dword ptr [esi - 0x17]; 
0x0018edc8: lodsb al, byte ptr [esi]; in eax, dx; call dword ptr [eax + 0x6a]; 
0x00155784: lodsb al, byte ptr [esi]; inc ebp; int1; call dword ptr [eax - 0x73]; 
0x0004a3b2: lodsb al, byte ptr [esi]; jbe 0x4a3ae; call dword ptr [eax - 0x18]; 
0x0004d5e6: lodsb al, byte ptr [esi]; jbe 0x4d5e2; call dword ptr [eax - 0x18]; 
0x0005146f: lodsb al, byte ptr [esi]; jbe 0x5146b; call dword ptr [eax - 0x18]; 
0x00059d7a: lodsb al, byte ptr [esi]; jbe 0x59d76; call dword ptr [eax - 0x18]; 
0x000cab38: lodsb al, byte ptr [esi]; jbe 0xcab34; call dword ptr [eax - 0x18]; 
0x000cda66: lodsb al, byte ptr [esi]; jbe 0xcda62; call dword ptr [eax - 0x18]; 
0x000d138e: lodsb al, byte ptr [esi]; jbe 0xd138a; call dword ptr [eax - 0x18]; 
0x000d8d7e: lodsb al, byte ptr [esi]; jbe 0xd8d7a; call dword ptr [eax - 0x18]; 
0x00034627: lodsb al, byte ptr [esi]; je 0x34623; call dword ptr [eax - 0x73]; 
0x001646b8: lodsb al, byte ptr [esi]; jp 0x1646ad; call dword ptr [eax - 0x18]; 
0x0005afbf: lodsb al, byte ptr [esi]; js 0x5afbb; call dword ptr [eax - 0x73]; 
0x001556c8: lodsb al, byte ptr [esi]; mov dh, cl; call dword ptr [eax - 0x18]; 
0x00163031: lodsb al, byte ptr [esi]; mov dword ptr [0x8d500000], eax; sbb dword ptr [esp], -0xe; call dword ptr [eax - 0x18]; 
0x00093220: lodsb al, byte ptr [esi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000247bc: lodsb al, byte ptr [esi]; pop ecx; stc; call dword ptr [eax - 0x18]; 
0x000d3289: lodsb al, byte ptr [esi]; popfd; stc; call dword ptr [eax - 0x18]; 
0x00126b31: lodsb al, byte ptr [esi]; push -0xa; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0002cecf: lodsb al, byte ptr [esi]; push -7; call dword ptr [eax + 0x68]; 
0x0002cd46: lodsb al, byte ptr [esi]; push -7; call dword ptr [eax - 0x73]; 
0x00132644: lodsb al, byte ptr [esi]; push ebp; out dx, eax; call dword ptr [eax + 0x6a]; 
0x000acaa1: lodsb al, byte ptr [esi]; push edi; call 0xc24edaa7; ret; 
0x0013b5c5: lodsb al, byte ptr [esi]; push edi; stc; call dword ptr [eax - 0x18]; 
0x000a9db1: lodsb al, byte ptr [esi]; push esi; call 0xc24eadb7; ret; 
0x000de7a9: lodsb al, byte ptr [esi]; ret 0xf0; 
0x0004756a: lodsb al, byte ptr [esi]; ret 0xfff9; 
0x00173f48: lodsb al, byte ptr [esi]; ret; 
0x000a9b8e: lodsb al, byte ptr [esi]; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x001278c0: lodsb al, byte ptr [esi]; ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x000de489: lodsb al, byte ptr [esi]; sahf; stc; call dword ptr [eax - 0x73]; 
0x000830af: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00140c58: lodsb al, byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x001435b6: lodsb al, byte ptr [esi]; stc; call dword ptr [edi + 0x52]; 
0x000796fe: lodsb al, byte ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x0013cce6: lodsb al, byte ptr [esi]; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00094b55: lodsb al, byte ptr [esi]; sub cl, byte ptr [edi]; add byte ptr [0x1a82bb], al; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x000fb755: lodsd eax, dword ptr [esi]; add byte ptr [eax], al; setne al; ret; 
0x000d784e: lodsd eax, dword ptr [esi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x361f7b], cl; push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x000ca43a: lodsd eax, dword ptr [esi]; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00124872: lodsd eax, dword ptr [esi]; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00054f22: lodsd eax, dword ptr [esi]; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x000b9b60: lodsd eax, dword ptr [esi]; fimul dword ptr [eax + eax]; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000d8d5f: lodsd eax, dword ptr [esi]; mov ch, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x0003090a: lodsd eax, dword ptr [esi]; or dword ptr [esi - 7], eax; call dword ptr [eax - 0x18]; 
0x0018a0df: lodsd eax, dword ptr [esi]; or edx, esi; jmp dword ptr [esi - 0x70]; 
0x001355ca: lodsd eax, dword ptr [esi]; push ebp; stc; call dword ptr [eax - 1]; 
0x00054f3e: lodsd eax, dword ptr [esi]; ret; 
0x00146697: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x00144e30: lodsd eax, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000ea32f: lodsd eax, dword ptr [esi]; xor al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0010582b: loope 0x10582c; add esi, esi; ret; 
0x00113a28: loope 0x1139b3; ret; 
0x001291de: loope 0x1291ef; xchg ebp, eax; ret; 
0x0012940e: loope 0x12940e; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012ec2b: loope 0x12ec8f; out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0013bf8a: loope 0x13bf8b; jmp dword ptr [esi - 0x70]; 
0x0013f989: loope 0x13f98b; add byte ptr [eax], al; rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0013fc98: loope 0x13fc9a; add byte ptr [eax], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00141e78: loope 0x141e03; ret 0x25; 
0x00148ce9: loope 0x148cef; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x00150b10: loope 0x150a9b; jecxz 0x150a9d; ret 0x25; 
0x00153209: loope 0x153268; stc; call dword ptr [ebx - 0x73]; 
0x0015449b: loope 0x154454; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0015da6e: loope 0x15dacb; pop esi; pop edi; ret; 
0x00161d24: loope 0x161d86; stc; call dword ptr [eax - 0x18]; 
0x0016c7d6: loope 0x16c7d8; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016d3cb: loope 0x16d3c9; jmp dword ptr [esi - 0x70]; 
0x00173983: loope 0x17390e; ret 0x25; 
0x0017d5e4: loope 0x17d569; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0017e4d0: loope 0x17e45b; ret; 
0x0018a541: loope 0x18a4cc; ret 0x25; 
0x0018a69a: loope 0x18a61f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0018c281: loope 0x18c20c; ret 0x25; 
0x0018c3da: loope 0x18c35f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0018e241: loope 0x18e1cc; ret 0x25; 
0x0018e39a: loope 0x18e31f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0019b904: loope 0x19b8fd; ret 1; 
0x001a78fb: loope 0x1a78fd; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001b1e8f: loope 0x1b1e91; add byte ptr [eax], dl; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x00030d9c: loope 0x30d27; ret 0x25; 
0x0003102c: loope 0x30fb7; ret 0x25; 
0x0003bc93: loope 0x3bc8b; les eax, ptr [edx]; je 0x3bc9b; fchs; ret; 
0x0003c033: loope 0x3c02b; les eax, ptr [edx]; je 0x3c03b; fchs; ret; 
0x000620f5: loope 0x62129; stc; call dword ptr [eax - 0x18]; 
0x00078492: loope 0x78493; dec dword ptr [ebx - 0x4ff63]; inc dword ptr [ebx - 0x7c72f314]; adc dh, byte ptr [ebx]; stc; call dword ptr [eax - 0x18]; 
0x0007d940: loope 0x7d9a0; cli; jmp dword ptr [esi - 0x70]; 
0x0009881b: loope 0x98824; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098f7e: loope 0x98f87; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009917f: loope 0x99188; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000997a1: loope 0x997aa; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009ec05: loope 0x9eb90; ret 0x25; 
0x0009f0e5: loope 0x9f070; ret 0x25; 
0x000a61f9: loope 0xa61f3; dec dword ptr [ebp - 0x6670f7b]; call dword ptr [eax - 0x73]; 
0x000ac28e: loope 0xac2eb; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000b9acf: loope 0xb9a54; ret; 
0x000ba607: loope 0xba58c; ret; 
0x000ba623: loope 0xba5a8; ret; 
0x000ba71b: loope 0xba6aa; je 0xba745; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000bb10f: loope 0xbb094; ret; 
0x000bbd07: loope 0xbbc8c; ret; 
0x000bbd23: loope 0xbbca8; ret; 
0x000bbe1b: loope 0xbbdaa; je 0xbbe45; add byte ptr [ecx + 0x5b5e5ff8], cl; ret; 
0x000c10af: loope 0xc1034; ret; 
0x000c16bb: loope 0xc164a; je 0xc16e5; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c2356: loope 0xc22db; ret 0x6640; 
0x000c386c: loope 0xc37fb; jbe 0xc3870; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000d9efc: loope 0xd9f0d; je 0xd9f20; ret; 
0x000dee2b: loope 0xdee81; cmc; dec dword ptr [ebp - 0x661677d]; call dword ptr [eax - 0x73]; 
0x000eb242: loope 0xeb1cd; inc ebp; mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000f17b8: loope 0xf1743; ret; 
0x000f1f11: loope 0xf1e9c; ret 0x25; 
0x000f206a: loope 0xf1fef; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f42c8: loope 0xf4253; ret; 
0x000f50b8: loope 0xf5043; ret; 
0x000f5811: loope 0xf579c; ret 0x25; 
0x000f596a: loope 0xf58ef; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f7be8: loope 0xf7b73; ret; 
0x000f89f8: loope 0xf8983; ret; 
0x000f9131: loope 0xf90bc; ret 0x25; 
0x000f928a: loope 0xf920f; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000faf27: loope 0xfaeb2; ret 0x25; 
0x00199490: maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000ba29d: maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0009e510: mov ah, 0; add byte ptr [eax], al; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x000a09ad: mov ah, 0; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001987ee: mov ah, 0x14; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0008d790: mov ah, 0x1a; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0008d7bc: mov ah, 0x1a; add byte ptr [eax], al; cmp eax, 1; jg 0x8d7d0; ret; 
0x0008d7d5: mov ah, 0x1a; add byte ptr [eax], al; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x000a78bd: mov ah, 0x24; hlt; add byte ptr [eax], al; add byte ptr [ebp - 0x6663780], cl; call dword ptr [eax + 0x68]; 
0x0014c9e6: mov ah, 0x24; in al, dx; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x00148905: mov ah, 0x24; mov al, byte ptr [0x89000001]; ret; 
0x0011594c: mov ah, 0x24; mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0003e6f8: mov ah, 0x24; push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x001a96fa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; add eax, 1; pop edi; ret; 
0x0013f99a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; and eax, 0xffffff; ret; 
0x000c244a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; add eax, edx; ret; 
0x000c246a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsf eax, eax; lea eax, [eax + edx + 0x20]; ret; 
0x000c1fca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x20]; ret; 
0x000c1fda: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; bsr eax, eax; lea eax, [eax + ecx + 0x30]; ret; 
0x0019060a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 0xffffffff; ret; 
0x0017923a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; mov eax, 1; ret; 
0x0008c57a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; endbr32; xor eax, eax; ret; 
0x000ea4ea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x000d9f26: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; add eax, 3; ret; 
0x00040707: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; endbr32; ret; 
0x001a89a6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xa]; ret; 
0x001a89b6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xb]; ret; 
0x001a89c6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xd]; ret; 
0x001a89d6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xe]; ret; 
0x001a89e6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 0xf]; ret; 
0x001a8946: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 2]; ret; 
0x001a8956: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 3]; ret; 
0x001a8966: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 5]; ret; 
0x001a8976: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 6]; ret; 
0x001a8986: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 7]; ret; 
0x001a9ec4: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 8]; ret; 
0x001a8996: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [ecx + 9]; ret; 
0x001a9006: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xa]; ret; 
0x001a9016: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xc]; ret; 
0x001a9026: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xd]; ret; 
0x001a9036: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 0xe]; ret; 
0x001a8fa6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 2]; ret; 
0x001a8fb6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 4]; ret; 
0x001a8fc6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 5]; ret; 
0x001a8fd6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 6]; ret; 
0x001a8fe6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 8]; ret; 
0x001a8ff6: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; lea eax, [edx + 9]; ret; 
0x001a9e97: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; mov eax, ecx; ret; 
0x000d9f36: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, [esi]; xor eax, eax; ret; 
0x001a75d5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; add eax, 1; ret; 
0x001a9f05: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [ecx + 8]; ret; 
0x001a8f95: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; lea eax, [edx + 1]; ret; 
0x000d9f45: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; mov eax, 1; ret; 
0x000b3de5: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; pop ebx; ret; 
0x000c1a85: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0016e09a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e0aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax], 8; pop ebx; ret; 
0x00182c1a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x000b3e2a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ecx], edx; pop ebx; ret; 
0x0009845a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x16; ret; 
0x0012e3aa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2ea: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000952a2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0009c702: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, 1; add esp, 0xc; ret; 
0x001a9efa: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001a84ca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edi; pop edi; ret; 
0x000931da: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; call dword ptr gs:[0x10]; 
0x000b4a8a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; mov eax, edx; pop ebx; ret; 
0x0016c468: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; endbr32; ret; 
0x0009b2e8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov dword ptr [eax + 4], edx; ret; 
0x00091079: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x16; ret; 
0x00087358: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x000d9f58: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 2; ret; 
0x000d9f68: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 3; ret; 
0x000d9f78: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 4; ret; 
0x000d9f88: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 5; ret; 
0x000d9f98: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 6; ret; 
0x000d9fa8: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; mov eax, 7; ret; 
0x000424d9: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; nop; xor eax, eax; ret; 
0x000be11a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; pop esi; ret; 
0x0008d322: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00175cca: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000e872a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; add esp, 0xc; ret; 
0x00182bb2: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop ebx; ret; 
0x000c210a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0007c68a: mov ah, 0x26; add byte ptr [eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024eee: mov ah, 0x28; stc; call dword ptr [eax - 1]; 
0x0009a2bc: mov ah, 0x39; ret 0xd574; 
0x00060b28: mov ah, 0x46; std; dec dword ptr [ecx - 0x7c72dbfc]; stc; call dword ptr [ebp + 0x56]; 
0x0010e00c: mov ah, 0x48; stc; call dword ptr [eax - 0x18]; 
0x00025705: mov ah, 0x6f; stc; call dword ptr [eax - 0x18]; 
0x0002ac21: mov ah, 0x71; stc; call dword ptr [eax - 0x18]; 
0x000f0413: mov ah, 0x83; in al, dx; add al, 0x6a; add eax, 0x9fb8838d; stc; call dword ptr [eax - 0x73]; 
0x000ebc3f: mov ah, 0x83; in al, dx; or al, 0x8d; xor edx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x000f061a: mov ah, 0x83; in al, dx; or byte ptr [ebx - 0x7f72378b], cl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x000ebb20: mov ah, 0x83; sub al, dh; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0009e8a8: mov ah, 0x89; ret 0x458b; 
0x00035904: mov ah, 0x8d; inc ecx; sbb al, 0x89; ret 0x25; 
0x000a2a2e: mov ah, 0x8f; stc; call dword ptr [eax - 0x18]; 
0x000abbc5: mov ah, 0x9a; stc; call dword ptr [edx - 0x73]; 
0x00059c58: mov ah, 0xa6; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00144e2f: mov ah, 0xad; stc; call dword ptr [eax - 0x73]; 
0x0015143f: mov ah, 0xb1; stc; call dword ptr [eax - 0x73]; 
0x00151b1f: mov ah, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x00093002: mov ah, 0xb9; or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00137dcd: mov ah, 0xe9; ret 0xfff2; 
0x000f9cc9: mov ah, 0xeb; call dword ptr [eax + 0x6a]; 
0x0015a5c4: mov ah, 0xf9; call dword ptr [eax - 0x18]; 
0x00157f0c: mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x001500db: mov ah, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0011467e: mov ah, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0010d676: mov ah, 1; add byte ptr [eax], al; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009be3e: mov ah, 2; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000278bd: mov ah, 3; add byte ptr [eax], al; add byte ptr [ecx + 0x458bc445], cl; aam 0x89; ret; 
0x000c1083: mov ah, byte ptr [ebp + 0xc]; add byte ptr [ecx + 0x109f6dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00176ae5: mov ah, ch; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x001867a7: mov ah, dh; call dword ptr [eax - 0x18]; 
0x0003cd01: mov al, 0; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x00114cdb: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114c6c: mov al, 0; add byte ptr [eax], al; mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000c1f0c: mov al, 0; add byte ptr [eax], al; pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x0017182c: mov al, 0; add byte ptr [eax], al; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017184e: mov al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00171f90: mov al, 0; add byte ptr [eax], al; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x000c1cac: mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000356d2: mov al, 0x39; ret 0x820f; 
0x0013686c: mov al, 0x43; dec dword ptr [ebx - 0x3b7cd7b9]; adc byte ptr [ebx - 0x72affb14], al; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x56]; 
0x000c115d: mov al, 0x64; or al, 0; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000287b2: mov al, 0x70; stc; call dword ptr [eax - 0x18]; 
0x0005be26: mov al, 0x7a; stc; call dword ptr [eax - 0x73]; 
0x00093250: mov al, 0x83; in al, dx; or al, 0x8d; add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x00093204: mov al, 0x83; in al, dx; or al, 0x8d; sbb byte ptr [eax - 0x7c], 0xf9; call dword ptr [eax - 0x18]; 
0x00033364: mov al, 0x83; js 0x3337c; push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x000afb44: mov al, 0x83; ret 0x8301; 
0x00127eef: mov al, 0x83; ret 0xeb03; 
0x000893d0: mov al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x00143750: mov al, 0x84; ret 0xfff9; 
0x0009580e: mov al, 0x85; stc; call dword ptr [eax - 0x18]; 
0x000957fb: mov al, 0x86; stc; call dword ptr [eax - 0x73]; 
0x0005dd20: mov al, 0x89; inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000d3506: mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x000a12ed: mov al, 0x8b; stc; call dword ptr [eax + 0x6a]; 
0x00033d4b: mov al, 0x8b; test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33d59; call eax; 
0x00137b77: mov al, 0x8d; mov bl, 0x25; push esi; stc; call dword ptr [eax + 0x50]; 
0x0009338d: mov al, 0x8d; xchg ah, cl; test cl, bh; call dword ptr [eax - 0x73]; 
0x0009338d: mov al, 0x8d; xchg ah, cl; test cl, bh; call dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x001733b9: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x001733b9: mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x001741ec: mov al, 0x98; add byte ptr [eax], al; add al, ch; lcall 0x18c4, 0x83ffeaef; pop ebx; ret; 
0x000a67cd: mov al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x001146f7: mov al, 0xa2; stc; call dword ptr [eax - 0x18]; 
0x0011f58b: mov al, 0xa3; stc; call dword ptr [eax - 0x18]; 
0x0014f327: mov al, 0xb0; stc; call dword ptr [eax - 0x73]; 
0x00160f94: mov al, 0xb5; stc; call dword ptr [eax - 0x73]; 
0x001232a9: mov al, 0xc4; ret 0xfff9; 
0x00148c8b: mov al, 0xe8; pop ds; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x00177c32: mov al, 0xf3; call dword ptr [eax - 0x73]; 
0x000848b8: mov al, 0xf5; stc; jmp dword ptr [esi - 0x70]; 
0x0014ee3e: mov al, 0xf9; call dword ptr [eax + 0x68]; 
0x0014f810: mov al, 0xf9; call dword ptr [eax - 0x18]; 
0x0014efd7: mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0014e9a2: mov al, 0xf9; call dword ptr [edx - 0x73]; 
0x001904eb: mov al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00170513: mov al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x0010e0a4: mov al, 0xfd; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x000380e6: mov al, 0xfe; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0012e62e: mov al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011545c: mov al, 2; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0003c972: mov al, byte ptr [0x10c48300]; test eax, eax; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x000ff475: mov al, byte ptr [0x3efff8f8]; jmp eax; 
0x0003b8d1: mov al, byte ptr [0x50000000]; ret; 
0x0016bcf3: mov al, byte ptr [0x50fff963]; push 7; call 0x153e50; add esp, 0x1c; ret; 
0x00086391: mov al, byte ptr [0x5b000000]; pop esi; pop edi; ret; 
0x000b39f2: mov al, byte ptr [0x5b5f0000]; ret; 
0x000b3ddc: mov al, byte ptr [0x5f000001]; pop ebx; ret; 
0x00025520: mov al, byte ptr [0x65000000]; add eax, dword ptr [0]; ret; 
0x00187702: mov al, byte ptr [0x65000000]; mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001649e5: mov al, byte ptr [0x680000a4]; add byte ptr [eax + eax], al; add byte ptr [eax - 0x73], dl; adc dword ptr [eax + 0x500000a4], -0x73; sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x000cb7f3: mov al, byte ptr [0x81000000]; ret 0; 
0x00181659: mov al, byte ptr [0x8100005f]; ret; 
0x00172859: mov al, byte ptr [0x8100014d]; ret; 
0x00166a59: mov al, byte ptr [0x8100020b]; ret; 
0x00158459: mov al, byte ptr [0x810002f1]; ret; 
0x00149459: mov al, byte ptr [0x810003e1]; ret; 
0x00132059: mov al, byte ptr [0x81000555]; ret; 
0x0011fd59: mov al, byte ptr [0x81000678]; ret; 
0x00118a59: mov al, byte ptr [0x810006eb]; ret; 
0x00101759: mov al, byte ptr [0x8100085e]; ret; 
0x000fc059: mov al, byte ptr [0x810008b5]; ret; 
0x000ef459: mov al, byte ptr [0x81000981]; ret; 
0x000dd459: mov al, byte ptr [0x81000aa1]; ret; 
0x000a5859: mov al, byte ptr [0x81000e1d]; ret; 
0x0009d459: mov al, byte ptr [0x81000ea1]; ret; 
0x00090959: mov al, byte ptr [0x81000f6c]; ret; 
0x0008ea59: mov al, byte ptr [0x81000f8b]; ret; 
0x0008e259: mov al, byte ptr [0x81000f93]; ret; 
0x0008c159: mov al, byte ptr [0x81000fb4]; ret; 
0x00082059: mov al, byte ptr [0x81001055]; ret; 
0x00081659: mov al, byte ptr [0x8100105f]; ret; 
0x00080d59: mov al, byte ptr [0x81001068]; ret; 
0x0007c459: mov al, byte ptr [0x810010b1]; ret; 
0x00036859: mov al, byte ptr [0x8100150d]; ret; 
0x00192259: mov al, byte ptr [0x81ffff53]; ret; 
0x000fba39: mov al, byte ptr [0x83000000]; cmp al, 0x11; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x0008d9ce: mov al, byte ptr [0x832c838d]; stc; call dword ptr [eax - 0x73]; 
0x001842bb: mov al, byte ptr [0x85000003]; sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x00024f2a: mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x0012c2b1: mov al, byte ptr [0x89000000]; inc esp; and al, 0x6c; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00155ba5: mov al, byte ptr [0x89000000]; ret 0xdb31; 
0x00061459: mov al, byte ptr [0x89000000]; ret; 
0x00148907: mov al, byte ptr [0x89000001]; ret; 
0x000988b7: mov al, byte ptr [0x8900558b]; ret; 
0x0008515c: mov al, byte ptr [0x89ffff72]; ret; 
0x000d66a0: mov al, byte ptr [0x89ffffc9]; ret 0x8d89; 
0x000d66e9: mov al, byte ptr [0x89ffffc9]; test dword ptr [eax - 0x72000037], edx; inc esi; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x001262da: mov al, byte ptr [0x8d000010]; xor eax, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x00123c9d: mov al, byte ptr [0x8d08ec83]; xchg esi, eax; wait; dec edx; stc; call dword ptr [edx - 0x77]; 
0x0015668e: mov al, byte ptr [0x8d500000]; sub esp, 0x46; int1; call dword ptr [eax - 0x73]; 
0x00168c48: mov al, byte ptr [0x8dfffff8]; xchg dword ptr [eax - 0x4a], eax; stc; call dword ptr [eax - 0x73]; 
0x001a8f2c: mov al, byte ptr [0xa8000000]; inc eax; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x0009a7e0: mov al, byte ptr [0xb8000000]; scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x00095710: mov al, byte ptr [0xb8000001]; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x00121d34: mov al, byte ptr [0xb9000000]; add dword ptr [eax + eax], edx; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000c0f3c: mov al, byte ptr [0xc030010]; xchg ecx, eax; jmp ecx; 
0x0009b3e1: mov al, byte ptr [0xc4830007]; adc byte ptr [ebp - 0x72c28b40], al; inc ebp; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000390f2: mov al, byte ptr [0xc483fffe]; adc byte ptr [ecx + 0xfc085c1], cl; test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x0003d547: mov al, byte ptr [0xc7000000]; add al, 2; add byte ptr es:[eax], al; add byte ptr [eax - 1], bh; ret; 
0x0017be0b: mov al, byte ptr [0xd0878d50]; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0009335a: mov al, byte ptr [0xd231f889]; xor esi, esi; call dword ptr gs:[0x10]; 
0x00049dc2: mov al, byte ptr [0xdd000000]; test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x000a80c4: mov al, byte ptr [0xe80000a4]; ret; 
0x00049dc9: mov al, byte ptr [0xe9000000]; ret; 
0x000ddfe4: mov al, byte ptr [0xf00003e]; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x001050dd: mov al, byte ptr [0xf6000010]; ret 0xf02; 
0x000956ed: mov al, byte ptr [0xf7fffffd]; ret 0; 
0x00154f5b: mov al, byte ptr [0xf8830000]; add dword ptr [edi + 0x25], edi; add esp, 8; pop ebx; ret; 
0x0002b849: mov al, byte ptr [eax]; add byte ptr [ebx - 0x72c3db84], cl; xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x000b6216: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b6356: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000c05b9: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e56: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b1f76: mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b6374: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1f94: mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000baaea: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000bac4a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000c065b: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b94aa: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b960a: mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b63b4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd4: mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x001a7862: mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000b61f0: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b6330: mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000c0593: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e30: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b1f50: mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x0012ba7f: mov al, dh; dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x000c3827: mov al, dl; cmp al, 0; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x000b6244: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6384: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1e74: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1fa4: mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000bab0a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000bac6a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000c067b: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b94ca: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b962a: mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b63d4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1ff4: mov ax, word ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b6200: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b6340: mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b6350: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b1f70: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000c05a3: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e40: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b1f60: mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x001a8b95: mov bh, 0; add byte ptr [eax], al; lea eax, [ecx + 1]; ret; 
0x0011e25f: mov bh, 0; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0010cda9: mov bh, 0x10; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00151955: mov bh, 0x29; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151455: mov bh, 0x2e; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000a1108: mov bh, 0x39; ret 0xb374; 
0x00140795: mov bh, 0x3e; std; jmp dword ptr [ebp - 0x5f]; 
0x000a6211: mov bh, 0x43; stc; call dword ptr [eax - 0x18]; 
0x0013cee5: mov bh, 0x44; and al, 4; rol ax, 8; ret; 
0x00185a2f: mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x0014b1ca: mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0012a16b: mov bh, 0x53; stc; call dword ptr [ebx + 0x57]; 
0x0012a2ce: mov bh, 0x53; stc; call dword ptr [edi + 0x50]; 
0x000dc7a1: mov bh, 0x56; or al, 0x29; ret 0x428d; 
0x00143217: mov bh, 0x59; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x0014c8a8: mov bh, 0x59; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00169e28: mov bh, 0x80; mov dl, 0xbb; stc; jmp dword ptr [esi - 0x77]; 
0x000274d6: mov bh, 0x81; pop eax; jo 0x274d4; jmp dword ptr [esi - 0x77]; 
0x0003ea40: mov bh, 0x83; das; inc esi; stc; jmp dword ptr [esi - 0x77]; 
0x00034b88: mov bh, 0x84; push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000aff48: mov bh, 0x89; xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000381e3: mov bh, 0x93; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00027273: mov bh, 0x97; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x00181414: mov bh, 0x99; insb byte ptr es:[edi], dx; test eax, 0x728d0000; jmp dword ptr [esi - 0x7d]; 
0x001505e5: mov bh, 0xa1; hlt; dec dword ptr [ebp - 0xeccd37d]; call dword ptr [esi + 0x50]; 
0x0013b9d5: mov bh, 0xa4; hlt; jmp dword ptr [esi - 0x70]; 
0x0014c87d: mov bh, 0xc0; add esp, 0x2c; ret; 
0x0013f986: mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x00043250: mov bh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000433f0: mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000437cc: mov bh, 0xc2; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00042e0c: mov bh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00042ee0: mov bh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00121055: mov bh, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x00174dd5: mov bh, 0xe3; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0015449c: mov bh, 0xf3; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000d8bca: mov bh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000a9bd1: mov bh, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000c97d2: mov bh, 0xf8; dec dword ptr [ebx - 0x76efdbb4]; ret 0x1b8; 
0x0016f569: mov bh, 0xf9; call dword ptr [eax - 0x73]; 
0x00172a9e: mov bh, 0xf9; call dword ptr [ebp + 0x6a]; 
0x001729eb: mov bh, 0xf9; call dword ptr [edx + 0x6a]; 
0x00087a05: mov bh, 0xf9; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x00027941: mov bh, 0xff; inc dword ptr [ebx + 0x45890cc4]; fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x00034863: mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034833: mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034803: mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034743: mov bh, 4; push eax; and eax, 0x200; ret; 
0x000347a3: mov bh, 4; push eax; and eax, 0x4000; ret; 
0x000346b3: mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034773: mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034713: mov bh, 4; push eax; and eax, 0x800; ret; 
0x00034913: mov bh, 4; push eax; and eax, 1; ret; 
0x000346e3: mov bh, 4; push eax; and eax, 2; ret; 
0x000347d3: mov bh, 4; push eax; and eax, 4; ret; 
0x00034683: mov bh, 4; push eax; and eax, 8; ret; 
0x000ba61b: mov bh, 7; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00030536: mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030528: mov bh, 7; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0x77e8243c]; mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00194599: mov bh, 8; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00059f0a: mov bh, bh; jmp dword ptr [ebp - 0x75]; 
0x000fcc97: mov bh, byte ptr [ecx]; ret; 
0x001374e5: mov bh, ch; call dword ptr [eax + 0x6a]; 
0x0012c6fc: mov bh, ch; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x001aa079: mov bl, 0; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x00028f69: mov bl, 0; add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x0012344d: mov bl, 0; add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x0015e3ab: mov bl, 0x14; mov byte ptr [0xdbe80000], al; dec ebp; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00137b79: mov bl, 0x25; push esi; stc; call dword ptr [eax + 0x50]; 
0x00030ba5: mov bl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0015e5eb: mov bl, 0x34; mov byte ptr [0x9be80000], al; dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x000f3a08: mov bl, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00126396: mov bl, 0x52; stc; call dword ptr [ecx + 0x51]; 
0x0011130e: mov bl, 0x58; add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0019142f: mov bl, 0x7f; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x00190daf: mov bl, 0x83; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x0007db66: mov bl, 0x88; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0002706c: mov bl, 0x8b; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg byte ptr [eax + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x0007c73b: mov bl, 0x9c; add byte ptr [eax], al; add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00181d4a: mov bl, 0xa3; stc; call dword ptr [esi + 0x57]; 
0x0008d706: mov bl, 0xbc; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00181da7: mov bl, 0xbf; stc; call dword ptr [esi + 0x57]; 
0x001814d5: mov bl, 0xd4; or eax, 0xec830000; or byte ptr [ebp - 0x6995c45], cl; call dword ptr [edi + 0x56]; 
0x00096759: mov bl, 0xdb; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00038314: mov bl, 0xdf; call dword ptr [eax + 0x6a]; 
0x00179df1: mov bl, 0xeb; call dword ptr [eax - 0x73]; 
0x00085008: mov bl, 0xee; stc; jmp dword ptr [esi - 0x70]; 
0x00189e5f: mov bl, 0xf0; dec dword ptr [ebp + 0xb6]; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00155097: mov bl, 0xf9; call dword ptr [eax - 0x18]; 
0x001537c2: mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001539f1: mov bl, 0xf9; call dword ptr [edx - 0x73]; 
0x001901ea: mov bl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00180246: mov bl, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00114b53: mov bl, 0xfd; dec dword ptr [ebx + 0x390c2454]; ret 0x6274; 
0x00058b78: mov bl, 0xff; dec dword ptr [ebx - 0x363f7b]; call dword ptr [esi + 0x53]; 
0x0006b5dc: mov bl, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0012c92a: mov bl, 1; add byte ptr [eax], al; int 0x80; 
0x00154115: mov bl, byte ptr [eax + eax*8 - 0xe]; dec dword ptr [ecx - 0x7572a7b8]; insb byte ptr es:[edi], dx; ret 0xfff2; 
0x000bdd83: mov bl, byte ptr [eax - 0x3e7efff4]; in eax, dx; rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00039402: mov bl, byte ptr [ebp - 0x3b7c0002]; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00127aa2: mov bl, byte ptr [ebx + esi*8 + 0x1cc483ff]; ret; 
0x0012df81: mov bx, word ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000388ea: mov byte ptr [0x58fffea8], al; push dword ptr [ebx + 0x12cc]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0015971b: mov byte ptr [0x5b0cc483], al; pop esi; pop edi; pop ebp; ret; 
0x000b9bfa: mov byte ptr [0x5f000009], al; pop esi; pop ebx; ret; 
0x00180257: mov byte ptr [0x81000073], al; ret; 
0x0011ed57: mov byte ptr [0x81000688], al; ret; 
0x00103b57: mov byte ptr [0x8100083a], al; ret; 
0x000f0057: mov byte ptr [0x81000975], al; ret; 
0x000d4e57: mov byte ptr [0x81000b27], al; ret; 
0x000a2f57: mov byte ptr [0x81000e46], al; ret; 
0x0013bf7a: mov byte ptr [0x83fff8ae], al; les ebx, ptr [eax]; pop ebx; ret; 
0x00031358: mov byte ptr [0x878d0010], al; sbb al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x0009914a: mov byte ptr [0x89000000], al; ret 0xf283; 
0x0015e5ed: mov byte ptr [0x9be80000], al; dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0002a104: mov byte ptr [0xa4e80000], al; adc al, 0x11; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0015e3ad: mov byte ptr [0xdbe80000], al; dec ebp; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x001a6d6a: mov byte ptr [0xf6000000], al; ret 0x7501; 
0x00103152: mov byte ptr [0xf889ffff], al; pop ebx; pop esi; pop edi; ret; 
0x000c13ae: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf28: mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00032e35: mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x000c1434: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfae: mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c14b8: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be032: mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1623: mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a75cb: mov byte ptr [eax + 0x75], 0x45; add eax, 0xf; ret; 
0x001a7818: mov byte ptr [eax + 0xf], 0x85; rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a93b3: mov byte ptr [eax + 0xf], 0x85; xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x000c11fc: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddc6: mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1228: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdde2: mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005ab3c: mov byte ptr [eax + 8], 0; mov eax, edx; ret; 
0x000c12aa: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde34: mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005bbc9: mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x0007c42e: mov byte ptr [eax + eax + 0x488b0000], dl; pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x0013af46: mov byte ptr [eax + eax], 0x81; ret 0x1ecb; 
0x0016c165: mov byte ptr [eax + eax], al; add byte ptr [ebp - 0x69d617d], cl; call dword ptr [eax - 0x18]; 
0x0014c12d: mov byte ptr [eax + eax], al; add dh, dh; ret; 
0x000409be: mov byte ptr [eax + ecx], 0; pop ebx; pop esi; ret; 
0x0017683d: mov byte ptr [eax + esi], 0; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0017054d: mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x170540; pop ebx; ret; 
0x000959c2: mov byte ptr [eax - 7], al; call dword ptr [eax - 0x18]; 
0x001498f3: mov byte ptr [eax*4 + 0x5be775c0], 0x5e; pop edi; ret; 
0x0009930e: mov byte ptr [eax], 0; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x001a964f: mov byte ptr [eax], 0; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00123a2a: mov byte ptr [eax], 0; add esp, 0x18; mov eax, ebx; pop ebx; ret; 
0x000ac0c0: mov byte ptr [eax], 0; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00122dc1: mov byte ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00091214: mov byte ptr [eax], al; add byte ptr [eax], al; add dword ptr [ebx + 0x5f5e04c4], eax; ret; 
0x00051634: mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012d517: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d517: mov byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001a88e4: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x001a7d64: mov byte ptr [eax], al; add byte ptr [eax], al; lea eax, [edi - 0xc]; pop edi; ret; 
0x000895b4: mov byte ptr [eax], al; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000815ba: mov byte ptr [eax], al; add byte ptr [eax], al; push esi; call dword ptr [eax + 0x34]; 
0x0007c438: mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000c11c0: mov byte ptr [eax], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c09f3: mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000c07f5: mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x0005bac1: mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000c11d5: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdda0: mov byte ptr [eax], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0004c482: mov byte ptr [eax], dh; ret 0xfff9; 
0x0009efc7: mov byte ptr [ebp - 0x6764379], cl; call dword ptr [eax + 0x68]; 
0x0009f02a: mov byte ptr [ebp - 0x6764379], cl; call dword ptr [eax - 0x73]; 
0x0007c77c: mov byte ptr [ebx + 0x3e], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x001779e9: mov byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00154db3: mov byte ptr [ebx + 0x6f68], 0; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00154d2b: mov byte ptr [ebx + 0x7fa8], 0; mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x000c2409: mov byte ptr [ebx + 0xf6640ea], 0xd7; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0013f691: mov byte ptr [ebx + 2], 0; pop ebx; pop esi; pop edi; ret; 
0x000c81a0: mov byte ptr [ebx + eax*4], 0xc6; add al, 1; ret; 
0x0018142a: mov byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x00127b9f: mov byte ptr [ebx], 0; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x00143698: mov byte ptr [ebx], 0; add esp, 8; pop ebx; ret; 
0x000a0a78: mov byte ptr [ebx], al; add byte ptr [eax], al; ret; 
0x000db728: mov byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x0008848e: mov byte ptr [ecx + 0x1b], cl; add byte ptr [ebx - 0x77], dl; ret; 
0x000a0cf9: mov byte ptr [ecx + 0x3c78], al; ret; 
0x000b3e23: mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3e42: mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b3e84: mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000c3778: mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc3778; pop esi; ret; 
0x000c2f30: mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0013efba: mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x00138c7d: mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x00138c0d: mov byte ptr [ecx - 0x837b], cl; call dword ptr [ebx + 0x6a]; 
0x00111340: mov byte ptr [ecx - 7], cl; call dword ptr [eax - 0x73]; 
0x000479ce: mov byte ptr [ecx], 0; add byte ptr [ebp - 0x6cfab79], cl; call dword ptr [eax - 0x73]; 
0x0004e910: mov byte ptr [ecx], 0; add byte ptr [ebp - 0x6cfb579], cl; call dword ptr [eax - 0x73]; 
0x000a8543: mov byte ptr [ecx], 0x83; ret 0x8401; 
0x000f24c1: mov byte ptr [ecx], 0x83; ret 0x8801; 
0x00047d15: mov byte ptr [ecx], 0x83; ret 0xe901; 
0x00025f4b: mov byte ptr [ecx], 0x83; ret; 
0x000da90b: mov byte ptr [ecx], 0x83; xlatb; add byte ptr [ecx], bh; ret; 
0x00136ae5: mov byte ptr [ecx], 0x89; ret 0xb70f; 
0x00159627: mov byte ptr [ecx], 0xeb; ret; 
0x00041b3f: mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0006830a: mov byte ptr [ecx], 1; ret 0x9589; 
0x0017c28e: mov byte ptr [ecx], al; ret 0x858b; 
0x00080a40: mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0014d7d4: mov byte ptr [ecx], dh; add al, byte ptr [eax]; add byte ptr [ebx + 0x391c245c], cl; fmul dword ptr [edi]; pop dword ptr [ebx + 0x29000002]; ret; 
0x000b3e00: mov byte ptr [ecx], dl; pop ebx; ret; 
0x000bb93b: mov byte ptr [edi + 0x10], cl; lea eax, [edi + 0x11]; pop edi; pop esi; pop ebx; ret; 
0x000ba25b: mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000bb9c1: mov byte ptr [edi + 0x14], dl; lea eax, [edi + 0x15]; pop edi; pop esi; pop ebx; ret; 
0x000ba2e1: mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000bba45: mov byte ptr [edi + 0x18], cl; lea eax, [edi + 0x19]; pop edi; pop esi; pop ebx; ret; 
0x000ba365: mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba465: mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000bb7a9: mov byte ptr [edi + 2], dl; lea eax, [edi + 3]; pop edi; pop esi; pop ebx; ret; 
0x000ba109: mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x0019365a: mov byte ptr [edi + 4], bl; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000bb7d7: mov byte ptr [edi + 4], dl; lea eax, [edi + 5]; pop edi; pop esi; pop ebx; ret; 
0x000ba127: mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb84b: mov byte ptr [edi + 8], dl; lea eax, [edi + 9]; pop edi; pop esi; pop ebx; ret; 
0x000ba16b: mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x001a785e: mov byte ptr [edi + ecx], 0x85; mov al, byte ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x00163e24: mov byte ptr [edi - 3], dh; jmp dword ptr [esi - 0x70]; 
0x000c333d: mov byte ptr [edi], ah; mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x000c36e3: mov byte ptr [edi], ah; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x0019150e: mov byte ptr [edi], al; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00199749: mov byte ptr [edi], al; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000d33a9: mov byte ptr [edi], cl; mov dh, 0x14; or dh, dh; ret 0xf04; 
0x000bb782: mov byte ptr [edi], dl; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000ba0e2: mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000c0951: mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x0008c372: mov byte ptr [edx + 0x3e], al; mov edx, dword ptr [edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x00091212: mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x0013ee35: mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000bd6e0: mov byte ptr [edx + 1], bh; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000ac5a5: mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000b6219: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b6359: mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000c05bc: mov byte ptr [edx + 2], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e59: mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b1f79: mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000bd6f0: mov byte ptr [edx + 2], bh; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b6237: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; pop edi; ret; 
0x000b6377: mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000c05ea: mov byte ptr [edx + 4], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e67: mov byte ptr [edx + 4], al; mov eax, edi; pop edi; ret; 
0x000b1f97: mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000bd720: mov byte ptr [edx + 4], bh; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000ac6a8: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000ac5e8: mov byte ptr [edx + 6], 0; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b627b: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b63bb: mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000c065e: mov byte ptr [edx + 8], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e9b: mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1fdb: mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c08f4: mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000bd790: mov byte ptr [edx + 8], bh; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x001a6d65: mov byte ptr [edx + edx*8 + 0xa2840f], 0; add dh, dh; ret 0x7501; 
0x00190d15: mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195fa4: mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00193e8c: mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e7c: mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0016734c: mov byte ptr [edx*2 + 0x28245c8b], 0xe8; dec eax; ret 0xfff5; 
0x000ac570: mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x00086295: mov byte ptr [edx], 0; pop ebx; ret; 
0x00134b0a: mov byte ptr [edx], 0x20; pop ebx; pop esi; pop edi; ret; 
0x001a75ad: mov byte ptr [edx], 0x75; dec edi; test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x00134af6: mov byte ptr [edx], 0xa; pop ebx; pop esi; pop edi; ret; 
0x000b61f2: mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b6332: mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x00196603: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00194633: mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000c0595: mov byte ptr [edx], al; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e32: mov byte ptr [edx], al; mov eax, edi; pop edi; ret; 
0x000b1f52: mov byte ptr [edx], al; mov eax, edx; ret; 
0x00121d0a: mov byte ptr [edx], al; push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0007dc74: mov byte ptr [edx], bl; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007db67: mov byte ptr [edx], bl; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x001964bb: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0019450b: mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00087f51: mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x000a1a0c: mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x00081145: mov byte ptr [esi + 0x3e], al; add esp, 4; pop ebx; pop esi; ret; 
0x00084988: mov byte ptr [esi + 0x3e], al; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a399d: mov byte ptr [esi - 0x76fffffa], dl; ret; 
0x000a480d: mov byte ptr [esi - 0x7d], ah; sub al, 0x58; add dword ptr [ecx + 0x63e9047e], ecx; idiv bh; dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x0015440f: mov byte ptr [esi], 0x8a; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x0013da3c: mov byte ptr [esi], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00024785: mov byte ptr [esi], dl; ret 0x11; 
0x000938ff: mov byte ptr [esp + 0x46], 0; mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00093909: mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x00064ff0: mov byte ptr [esp + 0x62], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00194bda: mov byte ptr [esp + eax], cl; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009306d: mov byte ptr [esp + eax], dh; add byte ptr [eax + 0xaf], bh; call dword ptr gs:[0x10]; 
0x001963da: mov byte ptr [esp + eax], dh; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c11d4: mov byte ptr ss:[eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000570f7: mov ch, 0; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x3b8; 
0x001a8f87: mov ch, 0; add byte ptr [eax], al; lea eax, [edx + 0xf]; ret; 
0x0006ec5e: mov ch, 0x1a; jecxz 0x6ec61; jmp eax; 
0x001693f7: mov ch, 0x21; std; jmp dword ptr [esi - 0x70]; 
0x000a3fd7: mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x000a396e: mov ch, 0x42; stc; call dword ptr [eax - 0x18]; 
0x000a28ff: mov ch, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x00079357: mov ch, 0xaf; sti; dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x00177bc8: mov ch, 0xea; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00148d0e: mov ch, 0xee; jmp dword ptr [esi - 0x70]; 
0x000d8d41: mov ch, 0xf5; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000d8d85: mov ch, 0xf5; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x000d8d1c: mov ch, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x0015a688: mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0015a5b1: mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0011805b: mov ch, 0xfa; jmp dword ptr [esi + 3]; 
0x0017ffc6: mov ch, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000946a8: mov ch, 0xff; inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00119079: mov ch, 0xff; jmp dword ptr [ebp - 0x5f]; 
0x00059682: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362773], cl; dec dword ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x000d8708: mov ch, 4; add byte ptr [eax], al; add byte ptr [ecx - 0x362f73], cl; dec dword ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x000c8568: mov ch, 6; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x001a414d: mov ch, 8; add byte ptr [eax], al; pop ebx; ret; 
0x000bb2e7: mov ch, 9; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0005bae0: mov ch, bh; jmp dword ptr [esi - 0x70]; 
0x000d9f10: mov ch, dh; and ch, 0xf; je 0xd9f30; add eax, 2; ret; 
0x0008f6b0: mov cl, 0x11; setne al; movzx eax, al; pop ebx; ret; 
0x0009bcfe: mov cl, 0x13; jne 0x9bd10; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0003cd5b: mov cl, 0x23; add eax, 0x2cc48300; ret; 
0x0009ac77: mov cl, 0x33; jne 0x9ac80; xor eax, eax; pop ebx; pop esi; ret; 
0x0007b963: mov cl, 0x34; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00094f0e: mov cl, 0x54; and al, 4; ret; 
0x00152f1b: mov cl, 0x5d; stc; call dword ptr [eax + 0x53]; 
0x00180670: mov cl, 0x66; stc; call dword ptr [ebp + 0x50]; 
0x001814fa: mov cl, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x0007b979: mov cl, 0x70; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0007b984: mov cl, 0x94; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x000c10c5: mov cl, 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00059d5b: mov cl, 0xa5; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x0009bd41: mov cl, 0xa; jne 0x9bd36; xor eax, eax; pop ebx; ret; 
0x0009bd8f: mov cl, 0xa; jne 0x9bda0; xor eax, eax; pop ebx; ret; 
0x0009a96d: mov cl, 0xa; mov eax, 0x10; cmove eax, ecx; ret; 
0x0014528e: mov cl, 0xb8; add al, byte ptr [eax + eax]; add byte ptr [ebx + 0x3934246c], cl; ret 0x470f; 
0x000bb15c: mov cl, 0xc4; or al, 0; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007b96e: mov cl, 0xec; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x00098eed: mov cl, 0xee; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x001507ec: mov cl, 0xf9; call dword ptr [eax - 0x18]; 
0x0014fa81: mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0018049b: mov cl, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00077e10: mov cl, 0xff; dec dword ptr [ebx - 0x4ff7b]; jmp dword ptr [ebp - 0x75]; 
0x0014040b: mov cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x0012e68e: mov cl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009d9ce: mov cl, bh; call dword ptr [eax + 0x68]; 
0x0009c4f6: mov cl, bh; call dword ptr [eax - 0x18]; 
0x0009c1e8: mov cl, bh; call dword ptr [eax - 0x73]; 
0x000895b3: mov cl, byte ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000edd9e: mov cl, byte ptr [ebx - 0x76c7db84]; ret 0xf3e9; 
0x00092b6c: mov cl, byte ptr [edx]; add byte ptr [eax - 0x4e1f00d], dl; xor eax, eax; ret; 
0x0018deb2: mov cl, byte ptr [esi - 0xd]; inc dword ptr [ebx - 0x3fceef3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00154411: mov cl, byte ptr [esi]; add byte ptr [ebx - 0x77], dl; ret; 
0x000d9ef9: mov cl, dl; and cl, 0xf; je 0xd9f20; ret; 
0x000c7b0e: mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001041eb: mov cs, word ptr [ecx - 0x3e7c71fc]; add dword ptr [ecx], ecx; ret 0xf983; 
0x000c8e3e: mov cs, word ptr [edi - 0x76ffffeb]; ret; 
0x000bddc0: mov cx, word ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000f2093: mov dh, 0; add byte ptr [eax], al; add bh, al; test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x001ae68b: mov dh, 0; add byte ptr [eax], al; add bh, dh; ret 0; 
0x00189e63: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x000983e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x16], bh; ret; 
0x00134453: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x29], dl; ret 0x838d; 
0x001a778b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 0x78850f01], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf01; 
0x000a7553: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00198b1b: mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001aed5b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x24548bdb], al; and byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00061cc3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebp - 0x7cefdb8c], cl; in al, dx; or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x00109433: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0x44c7; 
0x000a9663: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x000a438b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x598b1049], cl; add al, 0xf6; ret; 
0x001a95ab: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5f0c2444], cl; ret; 
0x000a119b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x173ef797], cl; or al, 0x83; ret 0x8901; 
0x0005770b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0010bc7b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7af7c0], cl; je 0x10bb5f; call eax; 
0x0010bcd3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3f7afbc0], cl; je 0x10bbb2; call eax; 
0x00062043: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x00062b73: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x72e7db8c], cl; xchg al, al; jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x0012a523: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7972fb14], al; in al, 0xa4; stc; call dword ptr [edi - 0x7f]; 
0x0002d453: mov dh, 0; add byte ptr [eax], al; add byte ptr [ebx - 0x7ccbdbbc], cl; ret 0xc704; 
0x00058b13: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x36336b], cl; call dword ptr [eax - 0x75]; 
0x000a559b: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76e7743a], cl; ret 0xeec1; 
0x000a15e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x76efdb94], cl; ret; 
0x000298e3: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx - 0x7c3c76f5], cl; ret 0x3904; 
0x0007ba43: mov dh, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0013fcab: mov dh, 0; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0xc2; ret; 
0x0008e97b: mov dh, 0; add byte ptr [eax], al; add byte ptr [edx - 0x77], dl; ret; 
0x001a934b: mov dh, 0; add byte ptr [eax], al; add dh, dh; ret 0xf10; 
0x001a8886: mov dh, 0; add byte ptr [eax], al; mov eax, ecx; ret; 
0x0008beac: mov dh, 0; add esp, 4; pop ebx; pop esi; ret; 
0x00194631: mov dh, 0; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a3f43: mov dh, 0; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008996f: mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x00189380: mov dh, 0; ret; 
0x00087169: mov dh, 0; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00087189: mov dh, 0; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00087ef9: mov dh, 0; shr al, 4; and eax, 1; ret; 
0x00087f19: mov dh, 0; shr al, 5; and eax, 1; ret; 
0x001132b1: mov dh, 0x10; test dl, dl; je 0x113284; pop ebx; ret; 
0x000f1041: mov dh, 0x10; test dl, dl; je 0xf1014; pop ebx; ret; 
0x000f3b51: mov dh, 0x10; test dl, dl; je 0xf3b24; pop ebx; ret; 
0x000f4941: mov dh, 0x10; test dl, dl; je 0xf4914; pop ebx; ret; 
0x000f7471: mov dh, 0x10; test dl, dl; je 0xf7444; pop ebx; ret; 
0x000f8281: mov dh, 0x10; test dl, dl; je 0xf8254; pop ebx; ret; 
0x0003a05d: mov dh, 0x11; test dl, dl; jne 0x3a040; ret; 
0x001a3f46: mov dh, 0x12; sub eax, edx; ret; 
0x0017054a: mov dh, 0x14; adc dword ptr [eax - 0x27c600b0], ecx; jne 0x170540; pop ebx; ret; 
0x000d33ab: mov dh, 0x14; or dh, dh; ret 0xf04; 
0x0014847a: mov dh, 0x18; test ebx, ebx; jne 0x148448; mov eax, 1; pop ebx; ret; 
0x000afd7c: mov dh, 0x3c; cmp byte ptr [ebp - 0x7c588a01], al; ret 0xeb01; 
0x0008c6f7: mov dh, 0x40; inc dword ptr [ebx - 0x3b7c10dd]; add al, 0x5b; pop esi; ret; 
0x00193fad: mov dh, 0x40; jmp dword ptr [esi - 0x77]; 
0x000fad5a: mov dh, 0x42; add dword ptr [ebx - 0x3f7bfe3e], eax; jne 0xfad31; xor eax, eax; ret; 
0x0019e522: mov dh, 0x42; pop es; sub eax, ecx; pop ebp; ret; 
0x0019cd75: mov dh, 0x42; pop es; sub eax, ecx; ret; 
0x0019e5fe: mov dh, 0x42; push es; sub eax, ecx; pop ebp; ret; 
0x0019cde5: mov dh, 0x42; push es; sub eax, ecx; ret; 
0x00108ae9: mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000651f3: mov dh, 0x44; adc al, ah; add edi, dword ptr [esi + eax*4 - 0x73f94]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064cf3: mov dh, 0x44; adc al, ah; add edi, dword ptr [esi + eax*4 - 0x74094]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00066152: mov dh, 0x44; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065252: mov dh, 0x44; or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x0013974b: mov dh, 0x44; push eax; add eax, eax; call 0x1f41a5b; pop ebx; ret; 
0x000620ae: mov dh, 0x44; push es; aad 0x83; ret 0x101; 
0x0002a490: mov dh, 0x44; sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x00064ca2: mov dh, 0x44; xor al, ah; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0003a9a9: mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0007f4b8: mov dh, 0x45; cli; jmp dword ptr [esi - 0x70]; 
0x00062a3a: mov dh, 0x45; or eax, 0x8901e683; ret; 
0x0010ace6: mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00108e9d: mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x00166f8c: mov dh, 0x47; add dword ptr [ebp + 0x34890177], ecx; and al, 0x84; ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x001a6d92: mov dh, 0x47; test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0019e5da: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; pop ebp; ret; 
0x0019cdd1: mov dh, 0x48; add eax, 0x542b60f; sub eax, ecx; ret; 
0x00193e89: mov dh, 0x48; dec dword ptr [eax + 0x448bff4a]; and al, 8; pop ebx; ret; 
0x00195e79: mov dh, 0x48; dec dword ptr [eax - 0x2f7600b6]; pop ebx; ret; 
0x0019e51e: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019cd71: mov dh, 0x48; pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0019e5fa: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019cde1: mov dh, 0x48; push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x00106bb7: mov dh, 0x50; add al, 0x8b; mov esp, 0xf8f92c96; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00159f79: mov dh, 0x50; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x0005e861: mov dh, 0x51; or al, 0xf6; ret 0xf01; 
0x00104b8c: mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0014a867: mov dh, 0x53; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x000a7492: mov dh, 0x53; sub dh, dh; ret 0x7502; 
0x0014ee56: mov dh, 0x54; out dx, al; dec dword ptr [ebp - 0x64f137d]; call dword ptr [eax + 0x68]; 
0x00071bd5: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070a89: mov dh, 0x54; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x000712e9: mov dh, 0x54; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00072435: mov dh, 0x54; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x0013e872: mov dh, 0x55; adc dword ptr [ecx], edi; ret 0x460f; 
0x001a6e05: mov dh, 0x56; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a6d96: mov dh, 0x56; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x0005fd3d: mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x001a6dc5: mov dh, 0x56; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0007a475: mov dh, 0x57; add ecx, ebp; ret; 
0x0005c207: mov dh, 0x57; or al, 0xf6; ret 0x7401; 
0x0005eef7: mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x0013f099: mov dh, 0x5a; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0015b8c1: mov dh, 0x5a; or dh, dh; ret; 
0x00159def: mov dh, 0x5d; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x0013f171: mov dh, 0x6a; add dword ptr [ebp - 0x76fdd7bc], ecx; ret; 
0x00176271: mov dh, 0x70; daa; stc; call dword ptr [edi + 0x52]; 
0x000681c5: mov dh, 0x72; dec byte ptr [ecx + 0x72d938f3]; ret 0xf089; 
0x00127ee9: mov dh, 0x80; jp 0x127ef0; xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000b045d: mov dh, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00062d05: mov dh, 0x84; push es; dec esp; ret 0xfff8; 
0x0011e4a9: mov dh, 0x89; ret; 
0x0006b3e3: mov dh, 0x8d; push 0x88fffffa; or cl, ch; ret 0xffc5; 
0x00063587: mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001810d8: mov dh, 0xbf; stc; call dword ptr [esi + 0x53]; 
0x0009c6e5: mov dh, 0xc0; add eax, 2; add esp, 0xc; ret; 
0x0017aa29: mov dh, 0xc0; add esp, 0x1c; ret; 
0x0011ec65: mov dh, 0xc0; add esp, 0x4c; ret; 
0x0016fac9: mov dh, 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x0012573f: mov dh, 0xc0; add esp, 8; pop ebx; ret; 
0x000431af: mov dh, 0xc0; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009c6fa: mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0003c679: mov dh, 0xc0; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012286c: mov dh, 0xc0; neg eax; add esp, 0xc; ret; 
0x0012cf20: mov dh, 0xc0; neg eax; ret; 
0x000895f8: mov dh, 0xc0; pop ebx; neg eax; ret; 
0x00134662: mov dh, 0xc0; pop ebx; pop esi; neg eax; ret; 
0x00089a9a: mov dh, 0xc0; pop ebx; pop esi; pop edi; ret; 
0x0016fa35: mov dh, 0xc0; pop ebx; pop esi; ret; 
0x0008f6b6: mov dh, 0xc0; pop ebx; ret; 
0x0005b65c: mov dh, 0xc0; pop edi; ret; 
0x0003d503: mov dh, 0xc0; ret; 
0x0011ad5a: mov dh, 0xc0; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009c5c6: mov dh, 0xc0; sub eax, 2; add esp, 0xc; ret; 
0x0004334f: mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0002834b: mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0013fcb1: mov dh, 0xc2; ret; 
0x0004372c: mov dh, 0xc2; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x0006614b: mov dh, 0xc3; mov edx, dword ptr [esp + 0x20]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x001278bd: mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00042d2b: mov dh, 0xc9; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e2f: mov dh, 0xc9; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00109963: mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x367e; 
0x001a3a4a: mov dh, 0xc; push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x001769bb: mov dh, 0xcc; add esi, ebx; call dword ptr [ebp - 0x73]; 
0x000da070: mov dh, 0xdb; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x0009861c: mov dh, 0xe5; call dword ptr [eax + 0x56]; 
0x00114bd9: mov dh, 0xe8; shr dword ptr [ecx + 2], 1; add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x00179bd7: mov dh, 0xeb; call dword ptr [eax - 0x73]; 
0x00168c38: mov dh, 0xec; call dword ptr [edx + 0x52]; 
0x00181ca6: mov dh, 0xf3; stc; jmp dword ptr [ebp - 0x75]; 
0x000d8cf7: mov dh, 0xf5; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x000d8c14: mov dh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x00168bb7: mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0018feea: mov dh, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00077870: mov dh, 0xff; call dword ptr [edx - 0x73]; 
0x00119586: mov dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x0012e91e: mov dh, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b3cc6: mov dh, 2; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001a0be4: mov dh, 2; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0008dd0f: mov dh, 2; pop ebx; pop esi; ret; 
0x001893ba: mov dh, 2; pop esi; pop edi; ret; 
0x00087f87: mov dh, 2; ret; 
0x0019e53d: mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0019cd84: mov dh, 2; sub eax, ecx; ret; 
0x0008bf47: mov dh, 2; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000afcca: mov dh, 4; adc byte ptr [eax + 0x458b1104], cl; aam 0x83; ret 0x3901; 
0x000efed9: mov dh, 4; add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efed9: mov dh, 4; add byte ptr [esi - 0x70], ah; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x000c2933: mov dh, 8; cmp cl, byte ptr [edx]; jne 0xc293d; xor eax, eax; pop ebx; ret; 
0x00194509: mov dh, 8; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019e53a: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019cd81: mov dh, 8; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0011327e: mov dh, 8; test cl, cl; jne 0x113263; xor eax, eax; pop ebx; ret; 
0x000f100e: mov dh, 8; test cl, cl; jne 0xf0ff3; xor eax, eax; pop ebx; ret; 
0x000f3b1e: mov dh, 8; test cl, cl; jne 0xf3b03; xor eax, eax; pop ebx; ret; 
0x000f490e: mov dh, 8; test cl, cl; jne 0xf48f3; xor eax, eax; pop ebx; ret; 
0x000f743e: mov dh, 8; test cl, cl; jne 0xf7423; xor eax, eax; pop ebx; ret; 
0x000f824e: mov dh, 8; test cl, cl; jne 0xf8233; xor eax, eax; pop ebx; ret; 
0x000c11f9: mov dh, byte ptr [esi + 2]; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000c11d3: mov dh, byte ptr [esi]; mov byte ptr [eax], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001556c9: mov dh, cl; call dword ptr [eax - 0x18]; 
0x00127233: mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000acc0d: mov dh, dh; push esi; inc ecx; jbe 0xacc24; cmove eax, edx; ret; 
0x00155b04: mov dh, dl; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0003da2a: mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061ba2: mov dl, 0x32; stc; call dword ptr [eax + 0x6a]; 
0x0014ff5a: mov dl, 0x43; out dx, al; dec dword ptr [ebp - 0x64ef779]; call dword ptr [eax - 0x73]; 
0x0012c997: mov dl, 0x54; stc; call dword ptr [ebx - 0x18]; 
0x00178ac1: mov dl, 0x65; stc; call dword ptr [eax - 0x73]; 
0x001411d7: mov dl, 0x6c; je 0x1411d4; call dword ptr [eax + 0x56]; 
0x001b484a: mov dl, 0x74; ret 0xfff9; 
0x00191eea: mov dl, 0x81; cli; jmp dword ptr [esi - 0x70]; 
0x0016c638: mov dl, 0x83; in al, dx; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x001b487e: mov dl, 0x8c; ret 0xfff9; 
0x0011475a: mov dl, 0xa9; idiv edi; add esp, 0x2c; ret; 
0x00169e2a: mov dl, 0xbb; stc; jmp dword ptr [esi - 0x77]; 
0x000a9281: mov dl, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001516c0: mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00190377: mov dl, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00180396: mov dl, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0012e8eb: mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b9eea: mov dl, 6; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9dea: mov dl, 7; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a9b11: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaaf237e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013aeb1: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xaaf337e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a9b61: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xab2437e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013af01: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xab2537e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000a92e1: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xab5637e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0013ae61: mov dl, byte ptr [eax]; add dword ptr [eax], eax; add byte ptr [ebp - 0xab5737e], cl; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000ba0e0: mov dl, byte ptr [esi]; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x00111f45: mov ds, eax; add bh, cl; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0007b55b: mov ds, word ptr [ebx - 0x76ffffff]; ret; 
0x000bb4f9: mov dword ptr [0x5f000007], eax; pop esi; pop ebx; ret; 
0x0008f1d0: mov dword ptr [0x78], eax; ret; 
0x0008fb12: mov dword ptr [0x78], edx; pop ebx; ret; 
0x0008f199: mov dword ptr [0x7c], eax; ret; 
0x0008f278: mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x0008f24a: mov dword ptr [0x7c], edx; pop ebx; ret; 
0x0017bd56: mov dword ptr [0x810000b8], eax; ret; 
0x0017b556: mov dword ptr [0x810000c0], eax; ret; 
0x0013bf56: mov dword ptr [0x810004b6], eax; ret; 
0x0011f456: mov dword ptr [0x81000681], eax; ret; 
0x000d4d56: mov dword ptr [0x81000b28], eax; ret; 
0x00097556: mov dword ptr [0x81000f00], eax; ret; 
0x00085a56: mov dword ptr [0x8100101b], eax; ret; 
0x00061656: mov dword ptr [0x8100125f], eax; ret; 
0x00043056: mov dword ptr [0x81001445], eax; ret; 
0x0003c956: mov dword ptr [0x810014ac], eax; ret; 
0x0010a79c: mov dword ptr [0x83fffffa], eax; ret 0x8301; 
0x000b4289: mov dword ptr [0x85fffff8], eax; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0012d46f: mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00151343: mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e5b7f], cs; call dword ptr [eax - 0x73]; 
0x001630ee: mov dword ptr [0x8d500000], eax; or dword ptr [edx + ecx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00161c45: mov dword ptr [0x8d500000], eax; or esp, 0x48; int1; call dword ptr [eax - 0x73]; 
0x00163032: mov dword ptr [0x8d500000], eax; sbb dword ptr [esp], -0xe; call dword ptr [eax - 0x18]; 
0x001622f2: mov dword ptr [0x8d500000], eax; sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x00097a9a: mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], esp; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x00122afc: mov dword ptr [0xb8530011], eax; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012d246: mov dword ptr [0xc2810005], eax; retf; sti; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000df260: mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x00133415: mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x00097bb8: mov dword ptr [0xe9ac73c2], eax; cmp dh, 0xff; dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x00023007: mov dword ptr [8], eax; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x0010cf1e: mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x000799b4: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00090f6c: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005ae6a: mov dword ptr [eax + 0x10], 0; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0016f81e: mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x0008068f: mov dword ptr [eax + 0x10], ebx; mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x000c1431: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfab: mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13d0: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf4d: mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0016eeba: mov dword ptr [eax + 0x10], ecx; mov eax, edx; pop ebx; pop esi; ret; 
0x000871d9: mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x00091280: mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0010cf46: mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x0011454c: mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x000799bb: mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00042556: mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0017a5de: mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000912b4: mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00087f4c: mov dword ptr [eax + 0x14], esi; mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x001220ae: mov dword ptr [eax + 0x16], edx; ret; 
0x000c1518: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be075: mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000e91b4: mov dword ptr [eax + 0x18], 0; pop ebx; pop esi; pop edi; ret; 
0x0016f81b: mov dword ptr [eax + 0x18], ecx; mov dword ptr [eax + 0x10], ebx; mov eax, 1; pop ebx; pop esi; ret; 
0x000c14ea: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be057: mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005bd41: mov dword ptr [eax + 0x18], edx; push eax; call 0x5bbb0; add esp, 0x18; pop ebx; ret; 
0x000799c2: mov dword ptr [eax + 0x18], edx; ret; 
0x0007dc72: mov dword ptr [eax + 0x1a88], 0; ret; 
0x00024b72: mov dword ptr [eax + 0x1a90], edx; pop ebx; pop esi; ret; 
0x00024aa2: mov dword ptr [eax + 0x1a90], edx; ret; 
0x0008d808: mov dword ptr [eax + 0x1ab8], 0; mov dword ptr [eax + 0x1abc], 0; ret; 
0x0008d812: mov dword ptr [eax + 0x1abc], 0; ret; 
0x00121236: mov dword ptr [eax + 0x1c], ebx; xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008f18b: mov dword ptr [eax + 0x1c], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000b01c2: mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x000810e7: mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x000810b8: mov dword ptr [eax + 0x20], ecx; ret; 
0x0008f195: mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x000817a0: mov dword ptr [eax + 0x24], 0; pop ebx; pop esi; pop edi; ret; 
0x0008b7c0: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008b7f4: mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0012123f: mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0008f324: mov dword ptr [eax + 0x290], edx; ret; 
0x0008f344: mov dword ptr [eax + 0x294], edx; ret; 
0x0008f364: mov dword ptr [eax + 0x298], edx; ret; 
0x0008f384: mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d44: mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d24: mov dword ptr [eax + 0x2ac], edx; ret; 
0x0008b7ba: mov dword ptr [eax + 0x2c], edx; mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0016ee9e: mov dword ptr [eax + 0x2c], esi; mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x0012123c: mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x0016eea1: mov dword ptr [eax + 0x34], ebx; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0d45: mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d95: mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc5: mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a35: mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a15: mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0d15: mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d1b: mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac5: mov dword ptr [eax + 0x394], edx; ret; 
0x0009f8ce: mov dword ptr [eax + 0x3c10], 0; ret; 
0x000a08f8: mov dword ptr [eax + 0x3c14], 0; ret; 
0x000a08ee: mov dword ptr [eax + 0x3c18], 0; mov dword ptr [eax + 0x3c14], 0; ret; 
0x000a0d75: mov dword ptr [eax + 0x3c74], edx; ret; 
0x001212f1: mov dword ptr [eax + 0x40], edx; pop ebx; pop esi; ret; 
0x001871ac: mov dword ptr [eax + 0x4c], edx; ret; 
0x00024af0: mov dword ptr [eax + 0x64], edx; lea edx, [eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24af0; ret; 
0x000ea476: mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00153af1: mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x0007c42d: mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x0018784d: mov dword ptr [eax + 0x94], edx; add esp, 8; pop ebx; ret; 
0x00090f65: mov dword ptr [eax + 0xc], 0; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0004255d: mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x0009da55: mov dword ptr [eax + 0xc], ecx; ret; 
0x000864f0: mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008b7c3: mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0008f1cc: mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0017a47e: mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017a43e: mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x0009db3a: mov dword ptr [eax + 0xc], edx; pop ebx; pop esi; pop edi; ret; 
0x0017ac54: mov dword ptr [eax + 0xc], edx; ret; 
0x0013f6e4: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00091395: mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0009109c: mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x001542dc: mov dword ptr [eax + 0xf8], ecx; mov dword ptr [eax + 0xfc], edx; ret; 
0x000c13ee: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf6b: mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001542e2: mov dword ptr [eax + 0xfc], edx; ret; 
0x000c126a: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde17: mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009138e: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; ret; 
0x0014e92f: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x0008c429: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0016e0be: mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0003d387: mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0010b569: mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00099e6e: mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0013f3e3: mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016dff6: mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e04c: mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000810ad: mov dword ptr [eax + 4], ecx; mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00174217: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00174be7: mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x00087f83: mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x0016e00e: mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x000810e1: mov dword ptr [eax + 4], edx; mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bbd1: mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x000bddf9: mov dword ptr [eax + 4], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000871d3: mov dword ptr [eax + 4], edx; mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0017ac4d: mov dword ptr [eax + 4], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x0008f1c2: mov dword ptr [eax + 4], edx; mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00086259: mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0008b7f7: mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0008b7c6: mov dword ptr [eax + 4], edx; ret; 
0x0005ae73: mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000dd14c: mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000c12ee: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde7b: mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0014e936: mov dword ptr [eax + 8], 0; add esp, 0x18; pop ebx; ret; 
0x00148431: mov dword ptr [eax + 8], 0; add esp, 4; pop ebx; pop esi; ret; 
0x0010b562: mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x0008c430: mov dword ptr [eax + 8], 0; ret; 
0x00090f73: mov dword ptr [eax + 8], 0x10; xor eax, eax; ret; 
0x0005ac5d: mov dword ptr [eax + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x000810e4: mov dword ptr [eax + 8], ebx; mov dword ptr [eax + 0x20], ecx; mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bbce: mov dword ptr [eax + 8], ecx; mov dword ptr [eax + 4], edx; mov dword ptr [eax], edx; ret; 
0x00086254: mov dword ptr [eax + 8], ecx; mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0016dffd: mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0005ad09: mov dword ptr [eax + 8], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x000810b5: mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x000c12d0: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde5d: mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000d4de8: mov dword ptr [eax + 8], edx; mov eax, esi; pop ebx; pop esi; ret; 
0x001220a5: mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000799ad: mov dword ptr [eax + 8], edx; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x0010b54f: mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00171566: mov dword ptr [eax + 8], edx; ret; 
0x00121b7f: mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x00095e05: mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00034c55: mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x00176af0: mov dword ptr [eax + edx], ecx; ret; 
0x00033d49: mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x00034024: mov dword ptr [eax - 0x40], edi; test edx, edx; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0009570f: mov dword ptr [eax - 0x47ffffff], esp; lock add byte ptr [eax], al; add byte ptr [ecx], dh; leave; xor esi, esi; call dword ptr gs:[0x10]; 
0x0017ac90: mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008c423: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00099e68: mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x0010b55c: mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x00190628: mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0009da43: mov dword ptr [eax], 0; mov ecx, dword ptr [edx + 0x3bec]; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0016e037: mov dword ptr [eax], 0; pop ebx; ret; 
0x0003d38e: mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0016e0b8: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016dff0: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], 1; mov dword ptr [eax + 8], ecx; pop ebx; ret; 
0x0016e008: mov dword ptr [eax], 0x10; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0016e0a0: mov dword ptr [eax], 0xa; pop ebx; ret; 
0x0016e090: mov dword ptr [eax], 0xb; pop ebx; ret; 
0x0013f3dd: mov dword ptr [eax], 0xc; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0016e088: mov dword ptr [eax], 0xc; pop ebx; ret; 
0x00188c2d: mov dword ptr [eax], 0xec830000; add al, 0x55; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x000f0f91: mov dword ptr [eax], 0xff650000; adc eax, 0x10; ret; 
0x0009a984: mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0016e046: mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0016e01b: mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0016e0b0: mov dword ptr [eax], 8; pop ebx; ret; 
0x0016e076: mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000d9c83: mov dword ptr [eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0002b974: mov dword ptr [eax], eax; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0017a5d6: mov dword ptr [eax], ebx; lea ecx, [ecx - 0x954]; mov dword ptr [eax + 0x14], edx; mov dword ptr [eax + 4], ecx; pop ebx; ret; 
0x0008e703: mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000bddc4: mov dword ptr [eax], ecx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1268: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde15: mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008fd07: mov dword ptr [eax], ecx; mov dword ptr [edx + 0x62c], 0; ret; 
0x0008187b: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x0007f9b9: mov dword ptr [eax], ecx; mov eax, dword ptr [edx]; ret; 
0x000c122b: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdde5: mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0005af9c: mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0010a91a: mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00174212: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00174be2: mov dword ptr [eax], ecx; mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0003bd1e: mov dword ptr [eax], ecx; ret; 
0x00095158: mov dword ptr [eax], ecx; xor eax, eax; pop ebx; pop esi; ret; 
0x00072c7a: mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x00079801: mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x000dfcae: mov dword ptr [eax], edx; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00042554: mov dword ptr [eax], edx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x00086257: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; pop ebx; pop esi; ret; 
0x0005ae71: mov dword ptr [eax], edx; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x000dd14a: mov dword ptr [eax], edx; mov dword ptr [eax + 4], esi; pop ebx; pop esi; pop edi; ret; 
0x000810b3: mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x0016ef95: mov dword ptr [eax], edx; mov eax, 1; add esp, 8; pop ebx; ret; 
0x0013145e: mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000c11e7: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddb4: mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00034214: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012be86: mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000810ea: mov dword ptr [eax], edx; pop ebx; ret; 
0x0005bbd4: mov dword ptr [eax], edx; ret; 
0x00040944: mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00081d72: mov dword ptr [eax], edx; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00090d5f: mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001873da: mov dword ptr [eax], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x000aff49: mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x0003f1f2: mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x00139424: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013928a: mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x0012b035: mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x00082b2d: mov dword ptr [ebp - 0x44], eax; sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00131864: mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00131a18: mov dword ptr [ebp - 0x510], ecx; call dword ptr gs:[0x10]; 
0x000f1c07: mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8e47: mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x00139421: mov dword ptr [ebp - 0x74], eax; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x0013916c: mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x00138c0b: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x001390b2: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x00138c7b: mov dword ptr [ebp - 0x78], ecx; mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x00138fce: mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x001389db: mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x00138b9e: mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x00138ed1: mov dword ptr [ebp - 0x7c], edi; mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00139169: mov dword ptr [ebp - 0x7c], esi; mov dword ptr [ebp - 0x74], eax; push ebx; push 0; push 0x1000002; call edx; 
0x00084908: mov dword ptr [ebp - 0x7f7bf040], 0x83000000; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00138c0e: mov dword ptr [ebp - 0x84], eax; push ebx; push 0; push 0x1000005; call edx; 
0x00138ed4: mov dword ptr [ebp - 0x84], eax; push esi; push 0; push 0x1000006; call ecx; 
0x00139284: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x120], ecx; push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x00138fc8: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push ebx; push 0; push 0x1000001; call eax; 
0x001389d5: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push 0; push 0x1000003; call eax; 
0x00138b98: mov dword ptr [ebp - 0x84], edx; mov dword ptr [ebp - 0x78], ecx; push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x001390b5: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000004; call eax; 
0x00138c7e: mov dword ptr [ebp - 0x84], edx; push esi; push 0; push 0x1000007; call eax; 
0x0008eccc: mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0016ef49: mov dword ptr [ebx + 0x10], eax; add esp, 4; mov eax, 1; pop ebx; pop esi; ret; 
0x0005b636: mov dword ptr [ebx + 0x10], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0008b870: mov dword ptr [ebx + 0x10], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x000a1539: mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0014feaa: mov dword ptr [ebx + 0x10], ecx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000a75d8: mov dword ptr [ebx + 0x10], edx; mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x000871f5: mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0003c654: mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x000a727a: mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0005b715: mov dword ptr [ebx + 0x18], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0007db65: mov dword ptr [ebx + 0x1a88], esi; add esp, 4; pop ebx; pop esi; ret; 
0x0008addb: mov dword ptr [ebx + 0x1ab8], eax; add esp, 8; pop ebx; ret; 
0x0008d705: mov dword ptr [ebx + 0x1abc], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000a727d: mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x0009be3c: mov dword ptr [ebx + 0x2b4], eax; add esp, 0x18; pop ebx; ret; 
0x00081cd3: mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00125ab6: mov dword ptr [ebx + 0x4600], eax; add esp, 8; mov eax, edx; pop ebx; ret; 
0x00125b48: mov dword ptr [ebx + 0x4600], eax; add esp, 8; pop ebx; ret; 
0x00154eca: mov dword ptr [ebx + 0x4ed8], 0; call esi; 
0x00089ca1: mov dword ptr [ebx + 0x50], 0xffffffff; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001216ba: mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x00154e42: mov dword ptr [ebx + 0x5f18], 0; call esi; 
0x00188d73: mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00154dba: mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00154d32: mov dword ptr [ebx + 0x7f98], 0; call esi; 
0x00154caa: mov dword ptr [ebx + 0x8fd8], 0; call esi; 
0x001600ed: mov dword ptr [ebx + 0xa280], eax; add esp, 0x18; pop ebx; ret; 
0x000793ee: mov dword ptr [ebx + 0xa4], eax; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0016cd4d: mov dword ptr [ebx + 0xa68c], eax; add esp, 8; pop ebx; ret; 
0x000794eb: mov dword ptr [ebx + 0xac], edx; cmovne eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0016c885: mov dword ptr [ebx + 0xc], 0; mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x00182c20: mov dword ptr [ebx + 0xc], 0; pop ebx; ret; 
0x00146372: mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0008ebc9: mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x00183ee0: mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x0008e7c2: mov dword ptr [ebx + 0xc], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00090f43: mov dword ptr [ebx + 0xc], eax; add esp, 4; xor eax, eax; pop ebx; pop edi; ret; 
0x0010e497: mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0013477e: mov dword ptr [ebx + 0xc], edx; add esp, 8; pop ebx; ret; 
0x00171668: mov dword ptr [ebx + 0xc], edx; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x00182c14: mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x000a75db: mov dword ptr [ebx + 4], eax; pop ebx; pop esi; pop edi; ret; 
0x0010c951: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x0010caac: mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0010c8d7: mov dword ptr [ebx + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000550b3: mov dword ptr [ebx + 4], edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000864ba: mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x001346de: mov dword ptr [ebx + 4], edx; add esp, 8; pop ebx; ret; 
0x0005babe: mov dword ptr [ebx + 4], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x000874e3: mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x00097b31: mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0008799a: mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x000984cb: mov dword ptr [ebx + 8], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0017833a: mov dword ptr [ebx + 8], 0; push 0; push edi; call dword ptr [eax + 0x14]; 
0x00183f33: mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x0014636a: mov dword ptr [ebx + 8], eax; mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x000871ef: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0010e491: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x00175beb: mov dword ptr [ebx + 8], eax; mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0013472e: mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x000864ed: mov dword ptr [ebx + 8], edx; mov dword ptr [eax + 0xc], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00098507: mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00177d95: mov dword ptr [ebx], 0; pop ebx; pop esi; pop edi; ret; 
0x0009864d: mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x001844bc: mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x000acc90: mov dword ptr [ebx], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00087998: mov dword ptr [ebx], eax; mov dword ptr [ebx + 4], edx; xor edx, edx; mov eax, edx; pop ebx; ret; 
0x0005bf49: mov dword ptr [ebx], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00084b23: mov dword ptr [ebx], eax; pop ebx; pop esi; pop edi; ret; 
0x0016d3bb: mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x000a7280: mov dword ptr [ebx], eax; push eax; call ecx; 
0x000874df: mov dword ptr [ebx], eax; xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x00081747: mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0017a477: mov dword ptr [ebx], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x001877b8: mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x000665d7: mov dword ptr [ebx], edx; mov byte ptr [eax], cl; pop ebx; pop esi; pop edi; ret; 
0x00072c78: mov dword ptr [ebx], edx; mov dword ptr [eax], edi; pop ebx; pop esi; pop edi; ret; 
0x000864b8: mov dword ptr [ebx], edx; mov dword ptr [ebx + 4], edx; add esp, 4; pop ebx; pop esi; ret; 
0x0008c69f: mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x00150a51: mov dword ptr [ebx], esi; jne 0x150a00; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009e40e: mov dword ptr [ebx], esi; jne 0x9e3b0; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009d349: mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0009d371: mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x000a1536: mov dword ptr [ecx + 0x14], ebx; mov dword ptr [ebx + 0x10], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0017a3c5: mov dword ptr [ecx + 0x14], edx; ret; 
0x000903ba: mov dword ptr [ecx + 0x214], 1; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0008fd55: mov dword ptr [ecx + 0x62c], 0; pop ebx; ret; 
0x0007c436: mov dword ptr [ecx + 0x88], edx; ret; 
0x0014b002: mov dword ptr [ecx + 0xa], edx; pop ebx; pop esi; pop edi; ret; 
0x0017a3bd: mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x00174317: mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x000964bb: mov dword ptr [ecx + 1], edi; add byte ptr [eax], al; mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000b3e62: mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x0003009b: mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0008fd04: mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x62c], 0; ret; 
0x00079ee7: mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012748a: mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x000b3e53: mov dword ptr [ecx + 4], edx; pop ebx; ret; 
0x0003f245: mov dword ptr [ecx + 4], edx; ret 4; 
0x00091176: mov dword ptr [ecx + 4], edx; ret; 
0x000b3ea4: mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x00174314: mov dword ptr [ecx + 8], eax; mov dword ptr [ecx + 0xc], edx; mov eax, 1; pop ebx; ret; 
0x000910d7: mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x000b3e95: mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x0003d3a4: mov dword ptr [ecx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x00117675: mov dword ptr [ecx + eax], 0x16; mov eax, 1; ret; 
0x00122b2d: mov dword ptr [ecx + eax], 0xc; mov eax, 0xffffffff; pop ebx; ret; 
0x000e9355: mov dword ptr [ecx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x0002582d: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084e45: mov dword ptr [ecx + eax], 9; mov eax, 0xffffffff; ret; 
0x0005becc: mov dword ptr [ecx + edx*4], eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x00189f93: mov dword ptr [ecx + edx], eax; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00155295: mov dword ptr [ecx + edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0008f167: mov dword ptr [ecx + edx], eax; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x000613cf: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x00040787: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cd2f: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x00024f2e: mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00140fd5: mov dword ptr [ecx - 7], ebx; call dword ptr [eax + 0x6a]; 
0x00079eb7: mov dword ptr [ecx], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009a74c: mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x001769dd: mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x000c36e1: mov dword ptr [ecx], 0xf8892788; pop ebx; pop esi; pop edi; ret; 
0x000849ec: mov dword ptr [ecx], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x000859aa: mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00122b16: mov dword ptr [ecx], eax; cmp eax, ebx; jb 0x122b20; xor eax, eax; pop ebx; ret; 
0x00090e54: mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0003f241: mov dword ptr [ecx], eax; mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x0013f9d1: mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00087280: mov dword ptr [ecx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0009849c: mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0008d31e: mov dword ptr [ecx], eax; ret; 
0x00092bff: mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x0012c6f0: mov dword ptr [ecx], ebx; int 0x80; 
0x000d39e0: mov dword ptr [ecx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000b3e21: mov dword ptr [ecx], edx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3e40: mov dword ptr [ecx], edx; mov byte ptr [ecx + 4], dl; pop ebx; ret; 
0x000b3e60: mov dword ptr [ecx], edx; mov dword ptr [ecx + 3], edx; pop ebx; ret; 
0x000b3e50: mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x0013f0c2: mov dword ptr [ecx], edx; pop ebx; pop esi; pop edi; ret; 
0x000b3e11: mov dword ptr [ecx], edx; pop ebx; ret; 
0x00041c74: mov dword ptr [ecx], edx; shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00080866: mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00091521: mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000bb95d: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000bb99b: mov dword ptr [edi + 0x10], ecx; lea eax, [edi + 0x14]; pop edi; pop esi; pop ebx; ret; 
0x000ba2de: mov dword ptr [edi + 0x10], ecx; mov byte ptr [edi + 0x14], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba27d: mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba3a5: mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000bba67: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000bbab5: mov dword ptr [edi + 0x18], ecx; lea eax, [edi + 0x1c]; pop edi; pop esi; pop ebx; ret; 
0x000ba387: mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000902bf: mov dword ptr [edi + 0x214], 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0012c8d1: mov dword ptr [edi + 0x472c], ecx; pop ebx; pop esi; pop edi; ret; 
0x00172dd0: mov dword ptr [edi + 0x54], edx; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000bb97b: mov dword ptr [edi + 0xf], ecx; lea eax, [edi + 0x13]; pop edi; pop esi; pop ebx; ret; 
0x000ba29b: mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000bb817: mov dword ptr [edi + 3], edx; lea eax, [edi + 7]; pop edi; pop esi; pop ebx; ret; 
0x000ba147: mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x0013c632: mov dword ptr [edi + 4], edx; mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000ba139: mov dword ptr [edi + 4], edx; pop edi; pop esi; pop ebx; ret; 
0x000973fc: mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x000ba1ab: mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x0010ccc6: mov dword ptr [edi + 8], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0013c635: mov dword ptr [edi + 8], ecx; pop ebx; pop esi; pop edi; ret 4; 
0x000bb86d: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000bb8ab: mov dword ptr [edi + 8], edx; lea eax, [edi + 0xc]; pop edi; pop esi; pop ebx; ret; 
0x000ba18d: mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000919d7: mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001814cf: mov dword ptr [edi - 0x75000000], ebx; mov bl, 0xd4; or eax, 0xec830000; or byte ptr [ebp - 0x6995c45], cl; call dword ptr [edi + 0x56]; 
0x000ba4a0: mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x0009152e: mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00053f48: mov dword ptr [edi], eax; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00098398: mov dword ptr [edi], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0004a468: mov dword ptr [edi], ebp; stc; call dword ptr [eax - 0x18]; 
0x00053f51: mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x000ba107: mov dword ptr [edi], ecx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba125: mov dword ptr [edi], ecx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba145: mov dword ptr [edi], ecx; mov dword ptr [edi + 3], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba136: mov dword ptr [edi], ecx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000bb794: mov dword ptr [edi], edx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000bb7c2: mov dword ptr [edi], edx; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x000ba4c0: mov dword ptr [edi], edx; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba4d0: mov dword ptr [edi], edx; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x0003d6e4: mov dword ptr [edi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ba0f4: mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x00091265: mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00080863: mov dword ptr [edx + 0x10], ebx; mov dword ptr [ecx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00040a55: mov dword ptr [edx + 0x10], ecx; mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x00040a58: mov dword ptr [edx + 0x14], ebx; pop ebx; pop esi; pop edi; ret; 
0x0017a3fb: mov dword ptr [edx + 0x14], ecx; add eax, ebx; mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003c6fd: mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x00080a3d: mov dword ptr [edx + 0x14], esi; mov byte ptr [ecx], bl; add esp, 4; pop ebx; pop esi; ret; 
0x0003c703: mov dword ptr [edx + 0x18], eax; ret; 
0x0007dace: mov dword ptr [edx + 0x1a80], 0; ret; 
0x0007dae7: mov dword ptr [edx + 0x1a84], eax; ret; 
0x00087e8e: mov dword ptr [edx + 0x1a94], 0; ret; 
0x00087ea7: mov dword ptr [edx + 0x1a98], eax; ret; 
0x00087e84: mov dword ptr [edx + 0x1a9c], 0; mov dword ptr [edx + 0x1a94], 0; ret; 
0x0008d78e: mov dword ptr [edx + 0x1ab4], 0; ret; 
0x0008d7a7: mov dword ptr [edx + 0x1ab8], eax; ret; 
0x0008d784: mov dword ptr [edx + 0x1abc], 0; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x0008f3c2: mov dword ptr [edx + 0x1b08], eax; ret; 
0x00099826: mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0003d803: mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x0003d7ee: mov dword ptr [edx + 0x1f4], ecx; ret; 
0x000fd4a9: mov dword ptr [edx + 0x20], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00115218: mov dword ptr [edx + 0x20], esi; mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0008f246: mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0011521b: mov dword ptr [edx + 0x24], edi; mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x0011521e: mov dword ptr [edx + 0x28], eax; pop esi; pop edi; ret; 
0x001217d5: mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x000a0a76: mov dword ptr [edx + 0x388], eax; ret; 
0x000a0aa1: mov dword ptr [edx + 0x390], eax; ret; 
0x0009a377: mov dword ptr [edx + 0x3b34], eax; xor eax, eax; ret; 
0x0009d34c: mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0009da4f: mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x000a51b0: mov dword ptr [edx + 0x3c68], 0; pop ebx; pop esi; ret; 
0x001217d2: mov dword ptr [edx + 0x3c], edi; mov dword ptr [edx + 0x34], eax; pop ebx; pop esi; pop edi; ret; 
0x0011765d: mov dword ptr [edx + 0x3e], eax; xor eax, eax; ret; 
0x001190fd: mov dword ptr [edx + 0x42], eax; xor eax, eax; ret; 
0x0008fd09: mov dword ptr [edx + 0x62c], 0; ret; 
0x000895b2: mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x00059f99: mov dword ptr [edx + 0xc], eax; add esp, 0x14; mov eax, edx; pop ebx; pop esi; ret 4; 
0x00174c7f: mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x0017a400: mov dword ptr [edx + 0xc], eax; mov eax, ebx; pop ebx; ret; 
0x0003c700: mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x000b6267: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b6397: mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000c062a: mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e87: mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1fb7: mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0011522e: mov dword ptr [edx + 4], 0; pop esi; pop edi; ret; 
0x001151ca: mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x000b6249: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6389: mov dword ptr [edx + 4], eax; lea eax, [edx + 5]; ret; 
0x000ba9e8: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; pop edi; ret; 
0x000bac37: mov dword ptr [edx + 4], eax; lea eax, [edx + 7]; ret; 
0x000baae7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000bac47: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b94a7: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b9607: mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000bac67: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b9627: mov dword ptr [edx + 4], eax; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000bab47: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000baca7: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b9507: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b9667: mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c060c: mov dword ptr [edx + 4], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e79: mov dword ptr [edx + 4], eax; mov eax, edi; pop edi; ret; 
0x000ac58a: mov dword ptr [edx + 4], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b1fa9: mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x0005ad67: mov dword ptr [edx + 4], eax; ret; 
0x001274b1: mov dword ptr [edx + 4], eax; test eax, eax; je 0x1274ba; mov dword ptr [eax], edx; ret; 
0x00099ec1: mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000ac695: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000ac5d5: mov dword ptr [edx + 4], ebx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x0010caa9: mov dword ptr [edx + 4], ecx; mov dword ptr [ebx + 4], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00199799: mov dword ptr [edx + 4], ecx; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0005b57f: mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x000b62bb: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63fb: mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000c069e: mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1edb: mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b201b: mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x0005ad4d: mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000b9024: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b61ab: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b641b: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7fcb: mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b629d: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63dd: mov dword ptr [edx + 8], eax; lea eax, [edx + 9]; ret; 
0x0008fb0e: mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x000c0680: mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3bdb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1deb: mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b4b54: mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b1ffd: mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x0005ac86: mov dword ptr [edx + 8], ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00095c9c: mov dword ptr [edx + 8], ecx; cmp eax, 0x21; jne 0x95ca8; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x000fc112: mov dword ptr [edx + eax*4], edi; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0009b9ed: mov dword ptr [edx + eax], 0x16; add esp, 4; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x00125dd5: mov dword ptr [edx + eax], 0x16; add esp, 4; pop ebx; pop esi; ret; 
0x0013aa3d: mov dword ptr [edx + eax], 0x16; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x0003d45d: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; pop ebx; ret; 
0x0003c9dd: mov dword ptr [edx + eax], 0x16; mov eax, 0xffffffff; ret; 
0x0007c7cc: mov dword ptr [edx + eax], 0x16; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a62bd: mov dword ptr [edx + eax], 0x16; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0018770d: mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x0003bc70: mov dword ptr [edx + eax], 0x22; add esp, 0x18; pop ebx; ret; 
0x0003c33e: mov dword ptr [edx + eax], 0x22; add esp, 8; pop ebx; ret; 
0x0003d54b: mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0009bd5d: mov dword ptr [edx + eax], 0xb; mov eax, 0xffffffff; pop ebx; ret; 
0x000e92fd: mov dword ptr [edx + eax], 2; xor eax, eax; add esp, 0xc; ret; 
0x00124305: mov dword ptr [edx + eax], 2; xor eax, eax; pop ebx; ret; 
0x0013e230: mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00191baa: mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x00190d2f: mov dword ptr [edx - 0xa], eax; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190d36: mov dword ptr [edx - 2], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193f1d: mov dword ptr [edx - 2], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f0d: mov dword ptr [edx - 2], ecx; mov eax, edx; pop ebx; ret; 
0x00190d56: mov dword ptr [edx - 3], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193fb1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195fa1: mov dword ptr [edx - 3], ecx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x00190cf2: mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e39: mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00193de5: mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de5: mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0017a436: mov dword ptr [edx - 4], ecx; mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00190d12: mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193e36: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e36: mov dword ptr [edx - 5], ecx; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x00190d32: mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190cef: mov dword ptr [edx - 8], eax; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190d0f: mov dword ptr [edx - 9], eax; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00084b0f: mov dword ptr [edx], 0; pop ebx; pop esi; pop edi; ret; 
0x0005ad54: mov dword ptr [edx], 0; ret; 
0x000b8105: mov dword ptr [edx], 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x001151c4: mov dword ptr [edx], 0xffffffff; mov dword ptr [edx + 4], 0xffffffff; pop esi; pop edi; ret; 
0x00090ea2: mov dword ptr [edx], eax; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0008e7a2: mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x0003c49c: mov dword ptr [edx], eax; add esp, 4; ret; 
0x000b6204: mov dword ptr [edx], eax; lea eax, [edx + 1]; pop edi; ret; 
0x000b6344: mov dword ptr [edx], eax; lea eax, [edx + 1]; ret; 
0x000b9102: mov dword ptr [edx], eax; lea eax, [edx + 3]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000ac674: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop ebx; pop esi; ret; 
0x000b6132: mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b6362: mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000ac688: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop ebx; pop esi; ret; 
0x000b7f5f: mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000ac698: mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000ac6ac: mov dword ptr [edx], eax; lea eax, [edx + 6]; pop ebx; pop esi; ret; 
0x000b6214: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b6354: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b1e54: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b1f74: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000b6372: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1f92: mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b6382: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1fa2: mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x0008fd53: mov dword ptr [edx], eax; mov dword ptr [ecx + 0x62c], 0; pop ebx; ret; 
0x00060623: mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000b6262: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b6392: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1e82: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1fb2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b95f2: mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000c05a7: mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b6f: mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1d72: mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000ac5b4: mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b4c22: mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b1f64: mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00040ed4: mov dword ptr [edx], eax; xor eax, eax; add esp, 8; pop ebx; ret; 
0x00090d42: mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015657a: mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00191ba4: mov dword ptr [edx], ebx; mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000e7bc4: mov dword ptr [edx], ebx; pop ebx; ret; 
0x000d40df: mov dword ptr [edx], ecx; add dword ptr [eax], eax; add byte ptr [ebx - 0x1f3e4fab], cl; add ch, byte ptr [ecx]; ret 0x28b; 
0x000f0d2a: mov dword ptr [edx], ecx; add esp, 0x24; pop ebx; pop esi; ret; 
0x000813dc: mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0012748d: mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x00196424: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00194484: mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00080694: mov dword ptr [edx], ecx; pop ebx; ret; 
0x00040bc8: mov dword ptr [edx], ecx; ret; 
0x0007f825: mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000ea376: mov dword ptr [edx], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000ac651: mov dword ptr [edx], esi; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000ac5a1: mov dword ptr [edx], esi; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000ac599: mov dword ptr [edx], esi; mov eax, edx; pop ebx; pop esi; ret; 
0x0005b77e: mov dword ptr [esi + 0x10], eax; mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x0017a86a: mov dword ptr [esi + 0x10], eax; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0009d374: mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0009d3f3: mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x0010b11b: mov dword ptr [esi + 0x14], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00115d9a: mov dword ptr [esi + 0x14], eax; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00169873: mov dword ptr [esi + 0x18], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0005b781: mov dword ptr [esi + 0x18], edx; pop ebx; pop esi; pop edi; ret; 
0x00133e0c: mov dword ptr [esi + 0x20], eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00103123: mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x0008b8e2: mov dword ptr [esi + 0x28], 0; add esp, 4; pop ebx; pop esi; ret; 
0x00159810: mov dword ptr [esi + 0xc], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016c038: mov dword ptr [esi + 0xc], eax; push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00040ae7: mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00079573: mov dword ptr [esi + 4], eax; mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0008d3c5: mov dword ptr [esi + 4], eax; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00122a8e: mov dword ptr [esi + 4], ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001786b3: mov dword ptr [esi + 8], 1; push 0; push edi; call dword ptr [eax + 0x14]; 
0x0008953f: mov dword ptr [esi + 8], eax; mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00079576: mov dword ptr [esi + 8], eax; pop ebx; pop esi; pop edi; ret; 
0x0017a5d9: mov dword ptr [esi + esi*8 + 0x5089ffff], ebp; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x00155854: mov dword ptr [esi - 7], ebx; call dword ptr [eax - 0x18]; 
0x0008bd74: mov dword ptr [esi], eax; add esp, 4; pop ebx; pop esi; ret; 
0x00081cd1: mov dword ptr [esi], eax; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x001544c0: mov dword ptr [esi], ecx; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00189397: mov dword ptr [esi], edx; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000550e7: mov dword ptr [esi], edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00124eef: mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000dbae4: mov dword ptr [esp + 0x104], edi; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000645f2: mov dword ptr [esp + 0x10], 0; jmp eax; 
0x000645a2: mov dword ptr [esp + 0x10], 1; jmp eax; 
0x0015791e: mov dword ptr [esp + 0x10], eax; call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0008e225: mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016c6e0: mov dword ptr [esp + 0x10], edx; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0008e13d: mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0016e51b: mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0008326f: mov dword ptr [esp + 0x10], esi; mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00179a1f: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x00179a58: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x00081999: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x00081849: mov dword ptr [esp + 0x10], esi; pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x00070dfc: mov dword ptr [esp + 0x14], 0; jmp edx; 
0x0007117c: mov dword ptr [esp + 0x14], 1; jmp edx; 
0x0003402b: mov dword ptr [esp + 0x14], eax; call edx; 
0x0013019a: mov dword ptr [esp + 0x14], eax; mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0008e139: mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000e7fee: mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0016f16e: mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00053416: mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x000960d5: mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0002332a: mov dword ptr [esp + 0x18], 0x20; call dword ptr gs:[0x10]; 
0x0012fe7c: mov dword ptr [esp + 0x18], eax; lea eax, [esp + 0x10]; mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000e7fe5: mov dword ptr [esp + 0x18], eax; mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x001301a2: mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00130946: mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x000e7c60: mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x001222a8: mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011575c: mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00064ff7: mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000dee90: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd41: mov dword ptr [esp + 0x1c], edx; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000707f9: mov dword ptr [esp + 0x20], 1; jmp edx; 
0x0003da25: mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00184afb: mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017932c: mov dword ptr [esp + 0x20], edx; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x000643f8: mov dword ptr [esp + 0x24], 0; jmp ecx; 
0x00071b74: mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00065930: mov dword ptr [esp + 0x24], 1; mov edi, ecx; jmp eax; 
0x00177441: mov dword ptr [esp + 0x24], 5; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012fe84: mov dword ptr [esp + 0x24], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121d01: mov dword ptr [esp + 0x24], eax; mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000dbc89: mov dword ptr [esp + 0x24], ebx; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00041a86: mov dword ptr [esp + 0x24], edx; call eax; 
0x0012fd9a: mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00071b94: mov dword ptr [esp + 0x28], 1; jmp eax; 
0x000659b8: mov dword ptr [esp + 0x28], 1; mov edi, ecx; jmp eax; 
0x0012fd9e: mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00114f39: mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0009df49: mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001772a2: mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0006471a: mov dword ptr [esp + 0x2c], 1; mov edi, ecx; jmp eax; 
0x0016024f: mov dword ptr [esp + 0x2c], eax; call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0009df7f: mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0012f40a: mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009a8d8: mov dword ptr [esp + 0x2c], eax; mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x000a017f: mov dword ptr [esp + 0x2c], edx; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x000704f3: mov dword ptr [esp + 0x30], 0; jmp ebx; 
0x00071ba4: mov dword ptr [esp + 0x30], 1; jmp eax; 
0x0009a8e3: mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012f412: mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db956: mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00071c14: mov dword ptr [esp + 0x34], 1; jmp eax; 
0x000a0183: mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x0012f4be: mov dword ptr [esp + 0x34], eax; lea eax, [esp + 0x24]; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c7318: mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x00177232: mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c4b4e: mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0012f551: mov dword ptr [esp + 0x34], esi; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00065a10: mov dword ptr [esp + 0x38], 1; mov edi, ecx; jmp eax; 
0x0012f4c6: mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000709bc: mov dword ptr [esp + 0x3c], 0; jmp edx; 
0x00071bb4: mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00065940: mov dword ptr [esp + 0x3c], 1; mov edi, ecx; jmp eax; 
0x0012de52: mov dword ptr [esp + 0x3c], esi; mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000659a8: mov dword ptr [esp + 0x40], 1; mov edi, ecx; jmp eax; 
0x000652a6: mov dword ptr [esp + 0x44], 0; jmp eax; 
0x00065970: mov dword ptr [esp + 0x44], 1; mov edi, ecx; jmp eax; 
0x0009f9f5: mov dword ptr [esp + 0x44], 2; call dword ptr gs:[0x10]; 
0x00070e62: mov dword ptr [esp + 0x48], 1; jmp eax; 
0x001223f0: mov dword ptr [esp + 0x4c], edx; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x00121c87: mov dword ptr [esp + 0x4c], esi; mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115b06: mov dword ptr [esp + 0x5c], esi; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012c2ab: mov dword ptr [esp + 0x68], eax; mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0012c2b5: mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x000a738e: mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0012f212: mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0011effa: mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00024e36: mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x0007c579: mov dword ptr [esp + 0xc], ecx; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x0008e19c: mov dword ptr [esp + 0xc], ecx; pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00179e8f: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794df: mov dword ptr [esp + 0xc], edx; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0003bd12: mov dword ptr [esp + 0xc], edx; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0010bfd1: mov dword ptr [esp + 0xc], edx; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00055285: mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000552ff: mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x00171596: mov dword ptr [esp + 4], eax; jmp edx; 
0x0012f65a: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f2ef: mov dword ptr [esp + 4], eax; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00070db5: mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071c9a: mov dword ptr [esp + 4], ecx; jmp edx; 
0x000e812b: mov dword ptr [esp + 4], ecx; lea ecx, [esp + 4]; mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x00071b60: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071b70: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071b90: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00071ba0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071c10: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x34], 1; jmp eax; 
0x00071bb0: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x00070e5e: mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070fdb: mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0017a087: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a063: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x001842c3: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0016ed73: mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0008f1fd: mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0007c682: mov dword ptr [esp + 4], edx; jmp eax; 
0x0003c3eb: mov dword ptr [esp + 4], edx; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0016c86c: mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x000e8133: mov dword ptr [esp + 8], eax; mov eax, 0x108; call dword ptr gs:[0x10]; 
0x0012f2f7: mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012f20a: mov dword ptr [esp + 8], eax; mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001846d0: mov dword ptr [esp + 8], ecx; call eax; 
0x00171592: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], eax; jmp edx; 
0x0017a083: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a05f: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed6f: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed93: mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009390e: mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0003c0c3: mov dword ptr [esp + 8], edx; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000951f5: mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007c583: mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x001864b1: mov dword ptr [esp], eax; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00175acd: mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x000a08cd: mov dword ptr [esp], eax; call esi; 
0x000552bc: mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0009e227: mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], esi; call edi; 
0x00160f4c: mov dword ptr [esp], ebp; call ebx; 
0x00160bb6: mov dword ptr [esp], ebp; call edi; 
0x001508b4: mov dword ptr [esp], ebp; call esi; 
0x00027040: mov dword ptr [esp], ebx; call edi; 
0x000260dd: mov dword ptr [esp], ebx; call esi; 
0x001508aa: mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00026250: mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268fa: mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00061a50: mov dword ptr [esp], ebx; sub esp, 8; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000552fc: mov dword ptr [esp], edx; mov dword ptr [esp + 4], eax; fld xword ptr [esp]; add esp, 0x1c; ret; 
0x0016c8f0: mov dword ptr [esp], edx; sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0016c90c: mov dword ptr [esp], edx; sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x000fd716: mov dword ptr [esp], esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016c533: mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0002f7ba: mov dword ptr [esp], esi; call ebx; 
0x0009e22f: mov dword ptr [esp], esi; call edi; 
0x00160258: mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x001398d6: mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0012f409: mov dword ptr fs:[esp + 0x2c], eax; mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000c7317: mov dword ptr fs:[esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b4d: mov dword ptr fs:[esp + 0x34], edx; push eax; push ebp; call esi; 
0x0008f1cf: mov dword ptr gs:[0x78], eax; ret; 
0x0008fb11: mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x0008f198: mov dword ptr gs:[0x7c], eax; ret; 
0x0008f277: mov dword ptr gs:[0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x0008f249: mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x000c11e3: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddb0: mov dx, word ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba0f0: mov dx, word ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0009534f: mov eax, 0; cmova eax, edx; add esp, 8; pop ebx; ret; 
0x00099f1a: mov eax, 0; cmova eax, edx; ret; 
0x001a4272: mov eax, 0; jne 0x1a49f0; pop ebx; ret; 
0x001a40ab: mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a59ea: mov eax, 0; jne 0x1a5c30; pop ebx; ret; 
0x001a70a4: mov eax, 0; jne 0x1a72d0; pop ebx; ret; 
0x001a7161: mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x0011f6e3: mov eax, 0; pop edi; cmova eax, edx; ret; 
0x0008d71a: mov eax, 0x100001a; add esp, 4; pop ebx; pop esi; ret; 
0x00129467: mov eax, 0x101; call dword ptr gs:[0x10]; 
0x0013bee5: mov eax, 0x1024448b; pop ebx; pop esi; pop edi; ret; 
0x000a002b: mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a05ed: mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a0414: mov eax, 0x105; call dword ptr gs:[0x10]; 
0x000a034c: mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a025e: mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000a028b: mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000e8137: mov eax, 0x108; call dword ptr gs:[0x10]; 
0x000e7fe9: mov eax, 0x108; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x000e7e07: mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0009aaa0: mov eax, 0x10; add esp, 0xc; ret; 
0x0009a96f: mov eax, 0x10; cmove eax, ecx; ret; 
0x0016c6f3: mov eax, 0x10; pop ebx; pop esi; ret; 
0x00099838: mov eax, 0x10; pop ebx; ret; 
0x00043193: mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x001a96ea: mov eax, 0x10; pop edi; ret; 
0x000e7b95: mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x00090567: mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009fafb: mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0009ff6c: mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0009f918: mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012c8a8: mov eax, 0x11c; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x0012d24f: mov eax, 0x123; call dword ptr gs:[0x10]; 
0x0012d24f: mov eax, 0x123; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x12d268; ret; 
0x0012e71d: mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0012e76a: mov eax, 0x125; call dword ptr gs:[0x10]; 
0x00121433: mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012132f: mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0011f23d: mov eax, 0x128; call dword ptr gs:[0x10]; 
0x0011f306: mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00114e67: mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x00115956: mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x0012d1e1: mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x00120c0d: mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x0011ed27: mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x001206fd: mov eax, 0x130; call dword ptr gs:[0x10]; 
0x0011ff72: mov eax, 0x131; call dword ptr gs:[0x10]; 
0x00114ce6: mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114ae7: mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0003e05b: mov eax, 0x135; xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0012eaa6: mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0009300b: mov eax, 0x137; call dword ptr gs:[0x10]; 
0x001144dc: mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00120e4f: mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0012eaea: mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012e02e: mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b8: mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012dd9c: mov eax, 0x146; call dword ptr gs:[0x10]; 
0x0012ceda: mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012e596: mov eax, 0x149; call dword ptr gs:[0x10]; 
0x000f0ef0: mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0ef0: mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x0011480d: mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0011f65a: mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0011f610: mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0012e746: mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0009a8e7: mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x0012eb1a: mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012d72d: mov eax, 0x154; call dword ptr gs:[0x10]; 
0x001222a1: mov eax, 0x154; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012eb57: mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012c2b9: mov eax, 0x157; call dword ptr gs:[0x10]; 
0x00129e16: mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012e7d7: mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012eb8a: mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0006140b: mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000a1a07: mov eax, 0x163; mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000405c6: mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0012ebba: mov eax, 0x164; call dword ptr gs:[0x10]; 
0x000eb51e: mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00091298: mov eax, 0x16; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x0009115c: mov eax, 0x16; cmp edx, 2; jbe 0x91170; ret; 
0x00090c8f: mov eax, 0x16; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000a7163: mov eax, 0x16; pop ebx; pop esi; ret; 
0x000913a0: mov eax, 0x16; pop ebx; ret; 
0x000983b0: mov eax, 0x16; pop esi; pop edi; ret; 
0x00091080: mov eax, 0x16; ret; 
0x000908ba: mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0012d3b1: mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012d5a7: mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0012ebea: mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012ec16: mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000e7dec: mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000e7f66: mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000e7b7b: mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x000a03c0: mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a0552: mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0012df8a: mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00120d89: mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00130cf8: mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0008fa1d: mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x0012e982: mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x00128af8: mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012e8bd: mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e857: mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e65a: mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e5f7: mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e62d: mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e68d: mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0012e8ea: mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012c929: mov eax, 0x1b3; int 0x80; 
0x0011467d: mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0010d675: mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0012e91d: mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x0012e9b7: mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x000ea516: mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012e817: mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e9ea: mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x00114c77: mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x000d3740: mov eax, 0x1d4458b; ret 0x1689; 
0x000fb5cd: mov eax, 0x20; cmp dword ptr [ecx + edx], 0x26; je 0xfb5bf; mov eax, 0xffffffff; ret; 
0x000fb626: mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00043101: mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00114570: mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00129df0: mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00129df0: mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003ccca: mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00061340: mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f1f0: mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ffa0: mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114796: mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0003e7a1: mov eax, 0x29fffffc; ret; 
0x0010e455: mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122b00: mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000b4a84: mov eax, 0x2efffff0; lea esi, [esi]; mov eax, edx; pop ebx; ret; 
0x00197b2a: mov eax, 0x300041f; sbb al, 0x8b; jmp ebx; 
0x0019702a: mov eax, 0x300042a; sbb al, 0x8b; jmp ebx; 
0x001957aa: mov eax, 0x3000440; sbb al, 0x8b; jmp ebx; 
0x00192d2a: mov eax, 0x3000468; sbb al, 0x8b; jmp ebx; 
0x000bdcbe: mov eax, 0x30010d2; or al, 0x91; jmp ecx; 
0x001229a6: mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0012e200: mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00121d0f: mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0010c3fa: mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0007772c: mov eax, 0x39ffffca; ret 0x840f; 
0x0006a43d: mov eax, 0x39fffffb; ret 0x840f; 
0x0006d8fa: mov eax, 0x39fffffb; ret 0x850f; 
0x00120b96: mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00120b96: mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00122b86: mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012bc70: mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001147c0: mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000f0f00: mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0f00: mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x00042f6d: mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000fb6a8: mov eax, 0x40; ret; 
0x000f0ee0: mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000f0ee0: mov eax, 0x41; call dword ptr gs:[0x10]; ret; 
0x0010c5a0: mov eax, 0x42; call dword ptr gs:[0x10]; 
0x00129bba: mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00122210: mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005416e: mov eax, 0x4f8d0103; add al, 0xf; xchg edx, eax; ret 0x789; 
0x000dc360: mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x001206b0: mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012eac6: mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00129dca: mov eax, 0x57; call dword ptr gs:[0x10]; 
0x0012871a: mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0012a9f0: mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123f40: mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00114c0a: mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00091194: mov eax, 0x5f; cmovne eax, edx; ret; 
0x00122890: mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001228ed: mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be9d: mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012f216: mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0012e79d: mov eax, 0x67; call dword ptr gs:[0x10]; 
0x000df038: mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000df1c0: mov eax, 0x68; mov edx, esi; call dword ptr gs:[0x10]; 
0x0008a4ec: mov eax, 0x6a000000; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0012e3b0: mov eax, 0x6a; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d2f0: mov eax, 0x6b; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012d077: mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012bec6: mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdf6: mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e486: mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129da6: mov eax, 0x73; call dword ptr gs:[0x10]; 
0x00024b5c: mov eax, 0x744c7139; sbb dword ptr [ebp - 0x1b505370], ecx; jmp dword ptr [ebp + 0x33]; 
0x0012ea86: mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0013094a: mov eax, 0x75; call dword ptr gs:[0x10]; 
0x00130444: mov eax, 0x75; mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x0019048a: mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x00130490: mov eax, 0x75; xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0013105f: mov eax, 0x75; xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0003cac9: mov eax, 0x77; int 0x80; 
0x0012c6eb: mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x000ea41e: mov eax, 0x78; mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x0012991a: mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e4b6: mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e45d: mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012866d: mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0004056a: mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0003c438: mov eax, 0x7f800000; and edx, 0x7fffffff; sub eax, edx; shr eax, 0x1f; ret; 
0x0012e53d: mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0013c723: mov eax, 0x7fffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00042e31: mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042e4f: mov eax, 0x80000000; xor ecx, 0x1f; shr eax, cl; ret; 
0x0012e6e7: mov eax, 0x80; call dword ptr gs:[0x10]; 
0x00187445: mov eax, 0x81000001; ret 0x59cb; 
0x00183f45: mov eax, 0x81000036; ret 0x8ecb; 
0x00173d45: mov eax, 0x81000138; ret 0x90cb; 
0x00156a45: mov eax, 0x8100030b; ret 0x63cb; 
0x00154045: mov eax, 0x81000335; ret 0x8dcb; 
0x0013d145: mov eax, 0x810004a4; ret 0xfccb; 
0x0013af45: mov eax, 0x810004c6; ret 0x1ecb; 
0x0012f345: mov eax, 0x81000582; ret 0xdacb; 
0x0012d345: mov eax, 0x810005a2; ret 0xfacb; 
0x0012d245: mov eax, 0x810005a3; ret 0xfbcb; 
0x00124845: mov eax, 0x8100062d; ret 0x85cb; 
0x00122b45: mov eax, 0x8100064a; ret 0xa2cb; 
0x00117645: mov eax, 0x810006ff; ret 0x57cb; 
0x000c3845: mov eax, 0x81000c3d; ret 0x95cb; 
0x000abc45: mov eax, 0x81000db9; ret 0x11cb; 
0x000a9d45: mov eax, 0x81000dd8; ret 0x30cb; 
0x000a0a45: mov eax, 0x81000e6b; ret 0xc3cb; 
0x00089445: mov eax, 0x81000fe1; ret 0x39cb; 
0x0012e56d: mov eax, 0x81; call dword ptr gs:[0x10]; 
0x00191341: mov eax, 0x81ffff62; ret; 
0x0012e6b6: mov eax, 0x82; call dword ptr gs:[0x10]; 
0x00161274: mov eax, 0x83000000; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x0016d9a3: mov eax, 0x83000002; ret; 
0x0008addd: mov eax, 0x8300001a; les ecx, ptr [eax]; pop ebx; ret; 
0x00083099: mov eax, 0x833c868d; stc; call dword ptr [eax - 0x73]; 
0x0012ea62: mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00056886: mov eax, 0x83ffffc9; mov ebp, 0xffffc9d0; adc byte ptr [ecx - 0x362743], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x00068738: mov eax, 0x83fffffb; in al, dx; or al, 0x29; ret; 
0x0006c813: mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x000f0ec6: mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114be6: mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012e4aa: mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012d516: mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012d516: mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0003da21: mov eax, 0x89000000; inc esp; and al, 0x20; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x00095f22: mov eax, 0x89000000; ret 0xe281; 
0x00160254: mov eax, 0x89000246; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0005d4a0: mov eax, 0x8910c483; ret 0x458b; 
0x00169e15: mov eax, 0x8910c483; ret; 
0x000d776d: mov eax, 0x89ffffc9; ret 0x12e9; 
0x000d6433: mov eax, 0x89ffffc9; ret 0xb48d; 
0x00068743: mov eax, 0x89fffffb; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00069a49: mov eax, 0x89fffffb; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0008aa12: mov eax, 0x8b000000; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x00121572: mov eax, 0x8b530011; dec esp; and al, 0x10; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00069a72: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00069c10: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069e02: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000684d8: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000682ff: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00068760: mov eax, 0x8bfffffb; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0011effe: mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00028027: mov eax, 0x8d0cec83; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x001153aa: mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00087360: mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0014636d: mov eax, 0x92; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0013179b: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x0013172a: mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x001318dd: mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x000f0f76: mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bba: mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286ca: mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00127be6: mov eax, 0x98; call dword ptr gs:[0x10]; 
0x001286f0: mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c23a: mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x00093d41: mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00106819: mov eax, 0x9c249c89; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x00092dff: mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0010bf56: mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x000940aa: mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0009c694: mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c694: mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0010bf76: mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf96: mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0010c024: mov eax, 0xa1; call dword ptr gs:[0x10]; 
0x0012d46e: mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012beea: mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012ea27: mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012e88d: mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x00139d6e: mov eax, 0xa9d8828d; stc; call dword ptr [eax - 0x73]; 
0x00120bc0: mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012d687: mov eax, 0xac; call dword ptr gs:[0x10]; 
0x0012dc32: mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0003cac0: mov eax, 0xad; int 0x80; 
0x0003cb5c: mov eax, 0xae; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbff: mov eax, 0xae; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093072: mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009df44: mov eax, 0xaf; mov dword ptr [esp + 0x28], ecx; mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000951f0: mov eax, 0xaf; mov dword ptr [esp + 8], edx; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000232bc: mov eax, 0xaf; mov ebx, ebp; mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009e20f: mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0009427e: mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0003debd: mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003cd00: mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0003da29: mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0011e25e: mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00114c73: mov eax, 0xb8000000; les eax, ptr [ecx]; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x001a9662: mov eax, 0xb8000000; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00114ce2: mov eax, 0xb8000000; xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e4da: mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e50a: mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x000eaf3d: mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0003d27a: mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0010e4d1: mov eax, 0xbe; int 0x80; 
0x0010e4d1: mov eax, 0xbe; int 0x80; push ecx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x001221c0: mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000bbd29: mov eax, 0xc181000c; add al, 0xf2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd16: mov eax, 0xc181000c; pop ss; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000df23e: mov eax, 0xc189051e; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdf258; mov eax, edx; ret; 
0x0010bd4f: mov eax, 0xc3810007; ret 0x1310; 
0x0012e37e: mov eax, 0xc3; call dword ptr gs:[0x10]; 
0x0012e410: mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0010792c: mov eax, 0xc483fff1; adc cl, ch; ret 0xfffb; 
0x0012d2be: mov eax, 0xc4; call dword ptr gs:[0x10]; 
0x0012d350: mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d03e: mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0012d0d0: mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ec9d: mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x000f0f90: mov eax, 0xc7; call dword ptr gs:[0x10]; 
0x000f0f90: mov eax, 0xc7; call dword ptr gs:[0x10]; ret; 
0x000eff00: mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000eff00: mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efef0: mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efef0: mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x001145b6: mov eax, 0xc; call dword ptr gs:[0x10]; 
0x001a96b6: mov eax, 0xc; pop edi; ret; 
0x0009084c: mov eax, 0xc; pop esi; pop edi; ret; 
0x000efee0: mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efee0: mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x00129cb0: mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c10: mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x000eff1a: mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0010c380: mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00114e2d: mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x0010c525: mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x00129a56: mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000f0f4d: mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x0010c475: mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00129976: mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000f0f1d: mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0011462d: mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0010c5ed: mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2dd: mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012db96: mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db96: mov eax, 0xd7; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012db76: mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012db76: mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e94a: mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012793d: mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012785d: mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x000fba84: mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000e90f7: mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x000e8f4e: mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00101f41: mov eax, 0xdd048d; add byte ptr [eax], al; add byte ptr [ecx], al; ret 0x4489; 
0x00114f3d: mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x001210c8: mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x000952a8: mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012ec30: mov eax, 0xe0; call dword ptr gs:[0x10]; ret; 
0x00129d37: mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127707: mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b27: mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00125b72: mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127532: mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a92: mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012755d: mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012758d: mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123abd: mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0012949a: mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275ba: mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123aea: mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00090661: mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000958d6: mov eax, 0xf0; mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00096687: mov eax, 0xf0; mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009859f: mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fbc9: mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009e417: mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00093221: mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0009863c: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903ee: mov eax, 0xf0; mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960c9: mov eax, 0xf0; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x00098030: mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x00189eda: mov eax, 0xf0; mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00097b25: mov eax, 0xf0; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x000977ec: mov eax, 0xf0; mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009880d: mov eax, 0xf0; mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099a15: mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b56: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bd8: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098bff: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092172: mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000923f8: mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00097da2: mov eax, 0xf0; mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd3: mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00099998: mov eax, 0xf0; mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f4b: mov eax, 0xf0; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fc3d: mov eax, 0xf0; mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009555a: mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x00092374: mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00091409: mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00095714: mov eax, 0xf0; xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fa74: mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00098063: mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000901b5: mov eax, 0xf0; xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091478: mov eax, 0xf0; xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b9f: mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009ab20: mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092daf: mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0009458b: mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001145e0: mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0017a36b: mov eax, 0xfc123fe8; jmp dword ptr [esi - 0x70]; 
0x0012cd80: mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e5c2: mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000fb5b2: mov eax, 0xff; cmp edx, 0x9123683e; jne 0xfb620; ret; 
0x0005dd23: mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000eb37f: mov eax, 0xfffbabe8; jmp dword ptr [ebp - 0x75]; 
0x00168927: mov eax, 0xfffdb5e9; dec dword ptr [ebx + 0x39202444]; ret 0x1074; 
0x00077dfe: mov eax, 0xffffffb; test eax, esp; ret; 
0x0010e49a: mov eax, 0xfffffff2; pop ebx; ret; 
0x000eb48a: mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00025834: mov eax, 0xffffffff; add esp, 0xc; ret; 
0x0012c7ac: mov eax, 0xffffffff; add esp, 8; pop ebx; ret; 
0x0013f858: mov eax, 0xffffffff; cmp byte ptr [edx + 2], 0; jne 0x13f869; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0008c634: mov eax, 0xffffffff; mov edx, eax; ret; 
0x0002f68f: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000613d2: mov eax, 0xffffffff; pop ebx; pop esi; pop edi; ret; 
0x0004078a: mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cd32: mov eax, 0xffffffff; pop ebx; ret; 
0x0005b63a: mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x00024f31: mov eax, 0xffffffff; ret; 
0x0005b7b7: mov eax, 1; add esp, 0xc; ret; 
0x00123d23: mov eax, 1; add esp, 8; pop ebx; ret; 
0x0009f758: mov eax, 1; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x0012c708: mov eax, 1; call dword ptr gs:[0x10]; 
0x000fb72d: mov eax, 1; cmp dword ptr [ecx + edx], 0x26; je 0xfb742; mov eax, 0xffffffff; ret; 
0x0019ce30: mov eax, 1; ja 0x19ce39; neg eax; ret; 
0x0019e670: mov eax, 1; ja 0x19e679; neg eax; pop ebp; ret; 
0x001a3a70: mov eax, 1; ja 0x1a3a79; neg eax; ret; 
0x001a3d60: mov eax, 1; ja 0x1a3d69; neg eax; pop ebp; ret; 
0x001a3f20: mov eax, 1; ja 0x1a3f29; neg eax; ret; 
0x001a4a07: mov eax, 1; ja 0x1a4a10; neg eax; ret; 
0x001a5c78: mov eax, 1; ja 0x1a5c81; neg eax; ret; 
0x001a72f1: mov eax, 1; ja 0x1a72fa; neg eax; ret; 
0x001a5906: mov eax, 1; jg 0x1a5910; neg eax; ret; 
0x001a5c31: mov eax, 1; jg 0x1a5c40; neg eax; ret; 
0x001a9d31: mov eax, 1; jg 0x1a9d40; neg eax; ret; 
0x000d9d40: mov eax, 1; jg 0xd9d49; neg eax; ret; 
0x0017a3c0: mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x000c3367: mov eax, 1; mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007cfb4: mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x0005b8d3: mov eax, 1; pop ebx; pop esi; ret; 
0x0012843a: mov eax, 1; pop ebx; ret; 
0x00053d78: mov eax, 1; pop esi; pop edi; ret; 
0x00060625: mov eax, 1; ret; 
0x00172386: mov eax, 1; sbb eax, -1; add esp, 0xc; ret; 
0x000fba23: mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x0014c903: mov eax, 1; xor eax, 1; pop ebx; ret; 
0x00042de0: mov eax, 1; xor edx, edx; pop ebx; ret; 
0x001872e0: mov eax, 2; add esp, 0xc; ret; 
0x00042d55: mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00042d25: mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e06: mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0016e506: mov eax, 2; pop ebx; pop esi; ret; 
0x000d9f60: mov eax, 2; ret; 
0x000944d0: mov eax, 3; add esp, 0xc; ret; 
0x000e7bad: mov eax, 3; cmovne eax, edx; ret; 
0x00094b98: mov eax, 3; ret; 
0x001872d4: mov eax, 4; add esp, 0xc; ret; 
0x001a960d: mov eax, 4; pop edi; ret; 
0x000d9f80: mov eax, 4; ret; 
0x001398fb: mov eax, 5; pop ebx; pop esi; pop ebp; ret; 
0x0010ebf0: mov eax, 5; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000d9f90: mov eax, 5; ret; 
0x0013dc4b: mov eax, 6; call dword ptr gs:[0x10]; 
0x0013dc4b: mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x0009f5a0: mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000d9fa0: mov eax, 6; ret; 
0x000d9fb0: mov eax, 7; ret; 
0x001872c4: mov eax, 8; add esp, 0xc; ret; 
0x000a0cf1: mov eax, 8; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x000430d3: mov eax, 8; pop ebx; sub eax, edx; ret; 
0x001a9666: mov eax, 8; pop edi; ret; 
0x0011ecd0: mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010ca51: mov eax, 9; pop esi; pop edi; ret; 
0x00176aeb: mov eax, dword ptr [0]; mov dword ptr [eax + edx], ecx; ret; 
0x001946c1: mov eax, dword ptr [0x3000451]; sbb al, 0x8b; jmp ebx; 
0x000c2959: mov eax, dword ptr [0x3001087]; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x000b41dc: mov eax, dword ptr [0x5bfffffd]; ret; 
0x00099821: mov eax, dword ptr [0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x0017c958: mov eax, dword ptr [0x810000ac]; ret; 
0x0016fc58: mov eax, dword ptr [0x81000179]; ret; 
0x00061058: mov eax, dword ptr [0x81001265]; ret; 
0x0003c158: mov eax, dword ptr [0x810014b4]; ret; 
0x0017397b: mov eax, dword ptr [0x83000000]; rcr byte ptr [ebx], 0x89; loope 0x17390e; ret 0x25; 
0x000a9656: mov eax, dword ptr [0x83000001]; ret 0xe901; 
0x001505e6: mov eax, dword ptr [0x838dfff4]; sub al, 0x33; int1; call dword ptr [esi + 0x50]; 
0x00079b5b: mov eax, dword ptr [0x83fffff9]; les ecx, ptr [ebx + edx*2]; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0018e1fb: mov eax, dword ptr [0x89fff353]; ret; 
0x0018a4fb: mov eax, dword ptr [0x89fff390]; ret; 
0x00092e6b: mov eax, dword ptr [0x8bfffa14]; jl 0x92e96; add al, 0x8d; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x001586e2: mov eax, dword ptr [0x8d500000]; or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x0010bf6b: mov eax, dword ptr [0xc3fff18f]; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x00099ee5: mov eax, dword ptr [8]; ret; 
0x00094f05: mov eax, dword ptr [8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00083273: mov eax, dword ptr [eax + 0x10]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00150138: mov eax, dword ptr [eax + 0x10]; ret; 
0x0002606e: mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0002608e: mov eax, dword ptr [eax + 0x10bc]; ret; 
0x0002f80e: mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00131ffe: mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00124333: mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0008e141: mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0017a798: mov eax, dword ptr [eax + 0x14]; ret; 
0x0005b01c: mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080b3c: mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x00032e65: mov eax, dword ptr [eax + 0x178]; mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000342f5: mov eax, dword ptr [eax + 0x178]; mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0008e1a1: mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x001396cc: mov eax, dword ptr [eax + 0x18]; ret; 
0x000c3886: mov eax, dword ptr [eax + 0x1c8]; ret; 
0x0008e844: mov eax, dword ptr [eax + 0x1c]; add esp, 0x24; pop ebx; pop esi; jmp eax; 
0x0008f1a4: mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x001398bb: mov eax, dword ptr [eax + 0x1c]; push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016c546: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16c556; sub esp, 0xc; push esi; call eax; 
0x0016ca19: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16ca29; sub esp, 0xc; push esi; call eax; 
0x0016d934: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16d944; sub esp, 0xc; push edi; call eax; 
0x0016e5cc: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x16e5dc; sub esp, 0xc; push esi; call eax; 
0x00171faa: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x171fba; sub esp, 0xc; push esi; call eax; 
0x001734b3: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x1734c3; sub esp, 0xc; push esi; call eax; 
0x0017366e: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x17367e; sub esp, 0xc; push edi; call eax; 
0x00174a18: mov eax, dword ptr [eax + 0x1c]; test eax, eax; je 0x174a28; sub esp, 0xc; push ebp; call eax; 
0x000c3896: mov eax, dword ptr [eax + 0x1cc]; ret; 
0x001489c5: mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x000c38a6: mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38b6: mov eax, dword ptr [eax + 0x1d4]; ret; 
0x00034bce: mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x000c38c6: mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38d6: mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38e6: mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38f6: mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3906: mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3916: mov eax, dword ptr [eax + 0x1ec]; ret; 
0x0003d7ae: mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d78e: mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00132004: mov eax, dword ptr [eax + 0x20]; ret; 
0x00124339: mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0016e877: mov eax, dword ptr [eax + 0x2398]; sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x00034994: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000348e3: mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0008f27e: mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x00172174: mov eax, dword ptr [eax + 0x2c]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00034964: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000348a3: mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00178264: mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008d2fe: mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8d318; ret; 
0x00040c91: mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00034b0c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034aec: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034acc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034a4c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x00034a8c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000349ec: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034a6c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034a2c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003492c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x00034a0c: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x00034aac: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x000349cc: mov eax, dword ptr [eax + 0x34]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0008d6a8: mov eax, dword ptr [eax + 0x34]; ret; 
0x00024af6: mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24af0; ret; 
0x00124290: mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00124318: mov eax, dword ptr [eax + 0x35c]; pop ebx; ret; 
0x00034b2c: mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00084e29: mov eax, dword ptr [eax + 0x38]; test eax, eax; js 0x84e38; ret; 
0x001842b9: mov eax, dword ptr [eax + 0x3a0]; test eax, eax; je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x00094b5e: mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0009dad2: mov eax, dword ptr [eax + 0x3be4]; test eax, eax; jne 0x9dae7; ret; 
0x00034b4c: mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00124310: mov eax, dword ptr [eax + 0x3c]; pop ebx; ret; 
0x000425be: mov eax, dword ptr [eax + 0x40]; ret; 
0x0013238d: mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x00187198: mov eax, dword ptr [eax + 0x4c]; ret; 
0x001503f2: mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x001871b8: mov eax, dword ptr [eax + 0x50]; ret; 
0x00032e70: mov eax, dword ptr [eax + 0x54]; ret; 
0x00187238: mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c8: mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e498: mov eax, dword ptr [eax + 0x64]; ret; 
0x000815b8: mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000a72d4: mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00034bee: mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x0008f3b6: mov eax, dword ptr [eax + 0x90]; shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1b08], eax; ret; 
0x00034bae: mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002551e: mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x0003d545: mov eax, dword ptr [eax + 0xa0]; mov dword ptr [edx + eax], 0x26; mov eax, 0xffffffff; ret; 
0x0010a912: mov eax, dword ptr [eax + 0xbc]; mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x000792eb: mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x00080adb: mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x0013cebe: mov eax, dword ptr [eax + 0xc8]; add eax, dword ptr gs:[0]; ret; 
0x00179a24: mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x0013988d: mov eax, dword ptr [eax + 0xc]; push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00124855: mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x0009dab7: mov eax, dword ptr [eax + 0xc]; test eax, eax; jne 0x9dab0; pop ebx; ret; 
0x0008d67e: mov eax, dword ptr [eax + 0xe6c]; ret; 
0x000a7614: mov eax, dword ptr [eax + 4]; add ecx, edx; test eax, eax; jne 0xa7610; mov eax, ecx; ret; 
0x00179330: mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x0008e229: mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0008fd01: mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x62c], 0; ret; 
0x001242ee: mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0010bc20: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bb5f; call eax; 
0x0010bcd8: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x10bbb2; call eax; 
0x00150400: mov eax, dword ptr [eax + 4]; test eax, eax; je 0x15040c; cmp dword ptr [eax + 8], edx; jne 0x150400; ret; 
0x000a7548: mov eax, dword ptr [eax + 4]; test eax, eax; jne 0xa7540; xor eax, eax; ret; 
0x00121aa8: mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00090d3c: mov eax, dword ptr [eax + 8]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001398d3: mov eax, dword ptr [eax + 8]; mov dword ptr [esp], esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00179a5d: mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x00090ddc: mov eax, dword ptr [eax + 8]; sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0008d33c: mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x0010bc80: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bb5f; call eax; 
0x0010bcc0: mov eax, dword ptr [eax + 8]; test eax, eax; je 0x10bbb2; call eax; 
0x00034967: mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x00034302: mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0018715c: mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x0018717c: mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000348a6: mov eax, dword ptr [eax + edx*4]; ret; 
0x000871a8: mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087158: mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x0009830c: mov eax, dword ptr [eax]; and eax, 0xf000dff; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00092bac: mov eax, dword ptr [eax]; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000a0a53: mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x000a0cd3: mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x000a0a93: mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x0008d31c: mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x000813da: mov eax, dword ptr [eax]; mov dword ptr [edx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00034992: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000348e1: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034962: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x000348a1: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00040c8f: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x34]; add esp, 4; pop ebx; pop esi; ret; 
0x00032e6e: mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00175bf0: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x001719c0: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0017186c: mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00095e50: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009adc8: mov eax, dword ptr [eax]; mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000e8e08: mov eax, dword ptr [eax]; ret; 
0x000982ac: mov eax, dword ptr [eax]; sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00092b8c: mov eax, dword ptr [eax]; sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000982cc: mov eax, dword ptr [eax]; shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003148c: mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00175abc: mov eax, dword ptr [eax]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00123753: mov eax, dword ptr [eax]; test eax, eax; je 0x1237a0; call eax; 
0x00123897: mov eax, dword ptr [eax]; test eax, eax; je 0x123938; call eax; 
0x00092da4: mov eax, dword ptr [ebp + 0x18]; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00174f91: mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x00171f8e: mov eax, dword ptr [ebp + 0xb0]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00132a67: mov eax, dword ptr [ebp + 4]; call 0x131e60; pop edx; pop ecx; pop eax; ret; 
0x000e9e43: mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x00098626: mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0012b03a: mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000e9b3e: mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00086ad6: mov eax, dword ptr [ebp - 0x3c]; sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x000f1c10: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1803: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f1b6c: mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x00183d65: mov eax, dword ptr [ebp - 0x5c]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x000f8e50: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8a43: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f8dac: mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x0016c89c: mov eax, dword ptr [ebx + 0x10]; add esp, 0xc; push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000871f2: mov eax, dword ptr [ebx + 0x10]; mov dword ptr [ebx + 0x14], eax; add esp, 8; pop ebx; ret; 
0x0016c88c: mov eax, dword ptr [ebx + 0x10]; push 0; push esi; call dword ptr [eax + 0x14]; 
0x0016c793: mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0016c7dd: mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016ca03: mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00176d00: mov eax, dword ptr [ebx + 0x10c]; pop ebx; pop esi; pop edi; ret; 
0x0016de23: mov eax, dword ptr [ebx + 0x14]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00176c68: mov eax, dword ptr [ebx + 0x17c]; pop ebx; pop esi; pop edi; ret; 
0x00176d90: mov eax, dword ptr [ebx + 0x198]; pop ebx; pop esi; pop edi; ret; 
0x00176e20: mov eax, dword ptr [ebx + 0x1a8]; pop ebx; pop esi; pop edi; ret; 
0x000a74fd: mov eax, dword ptr [ebx + 0x20]; je 0xa7510; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0016e82d: mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x001744a8: mov eax, dword ptr [ebx + 0x50]; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x001744c4: mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0017182a: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0017184c: mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x0010e494: mov eax, dword ptr [ebx + 0xc]; mov dword ptr [ebx + 0xc], eax; mov eax, 0xfffffff2; pop ebx; ret; 
0x0008ff8d: mov eax, dword ptr [ebx + 0xc]; pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00178360: mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016ef2d: mov eax, dword ptr [ebx + 0xc]; sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0016d493: mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016d0ad: mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0016d4a6: mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00172e0e: mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016eded: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ee3b: mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x0016cf8e: mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00172e53: mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0016d470: mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0008e700: mov eax, dword ptr [ebx + 8]; mov dword ptr [eax], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0013472b: mov eax, dword ptr [ebx + 8]; mov dword ptr [ebx + 8], edx; add esp, 8; pop ebx; ret; 
0x001775e3: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001777e2: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0008ec1b: mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00177843: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00177733: mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x000984bc: mov eax, dword ptr [ebx + 8]; test eax, eax; je 0x984d5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0012ac02: mov eax, dword ptr [ebx + 8]; test eax, eax; jne 0x12ac28; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x001a33e2: mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bd5: mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0016e514: mov eax, dword ptr [ebx + ecx*4 - 0x138]; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00033d4c: mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x001763f9: mov eax, dword ptr [ebx]; add esp, 0x10; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00189e25: mov eax, dword ptr [ebx]; add esp, 4; pop ebx; pop esi; jmp eax; 
0x00175bee: mov eax, dword ptr [ebx]; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x00175ac8: mov eax, dword ptr [ebx]; mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0008eb44: mov eax, dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x00132043: mov eax, dword ptr [ecx + 0x47f4]; add word ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00187700: mov eax, dword ptr [ecx + 0xa0]; mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x00087138: mov eax, dword ptr [ecx + 0xc]; xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x000b6264: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; pop edi; ret; 
0x000b6394: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000c0627: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e84: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edi; pop edi; ret; 
0x000b1fb4: mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x0014c8cf: mov eax, dword ptr [ecx + 4]; cmp dword ptr [edx + 0x14], eax; sete al; pop ebx; movzx eax, al; ret; 
0x000bac44: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000baca4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b95f4: mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000b6245: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6385: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1e75: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1fa5: mov eax, dword ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000bab2a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000bac8a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b94ea: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b964a: mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b63f4: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2014: mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000bab4a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000bacaa: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000c06bb: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b950a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b966a: mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bab0b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000bac6b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000c067c: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b94cb: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b962b: mov eax, dword ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b6414: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2034: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b63d5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1ff5: mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x00081d22: mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0008d36b: mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0006ec54: mov eax, dword ptr [ecx + eax*4 - 0x73934]; lea eax, [ecx + eax - 0x1ce54b]; jmp eax; 
0x000348de: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003489e: mov eax, dword ptr [ecx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x000a9caa: mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a9c7a: mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x00092c21: mov eax, dword ptr [ecx]; and eax, 0xfffffffe; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000b6130: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; pop edi; ret; 
0x000b6360: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 3]; ret; 
0x000b7f5d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; lea eax, [edx + 4]; pop edi; pop ebx; ret; 
0x000b6370: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; lea eax, [edx + 4]; ret; 
0x000b1f90: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov al, byte ptr [ecx + 4]; mov byte ptr [edx + 4], al; mov eax, edx; ret; 
0x000b6380: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000b1fa0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov ax, word ptr [ecx + 4]; mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000b6390: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; lea eax, [edx + 6]; ret; 
0x000b1fb0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 3]; mov dword ptr [edx + 3], eax; mov eax, edx; ret; 
0x000b95f0: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, dword ptr [ecx + 4]; mov dword ptr [edx + 4], eax; mov eax, edx; ret; 
0x000c05d3: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b6d: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1d70: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edi; pop edi; ret; 
0x000b4c20: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; pop ebx; ret; 
0x000b1f80: mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x00171a8b: mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000b6201: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b6341: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b6351: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b1f71: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000c05a4: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e41: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b1f61: mov eax, dword ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000c295f: mov eax, dword ptr [ecx]; retf 0xce01; jmp ebx; 
0x0008199e: mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0008184e: mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x0009308b: mov eax, dword ptr [edi + 0x228]; push edx; call eax; 
0x00174a05: mov eax, dword ptr [edi + 0x50]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016e282: mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016e18c: mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016e23e: mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x001769f1: mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x0016ea3b: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016e9f8: mov eax, dword ptr [edi + 8]; push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x00090706: mov eax, dword ptr [edi]; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0016c7a9: mov eax, dword ptr [edi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x00087232: mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000c3880: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1c8]; ret; 
0x000c3890: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1cc]; ret; 
0x000c38a0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d0]; ret; 
0x000c38b0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d4]; ret; 
0x000c38c0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1d8]; ret; 
0x000c38d0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1dc]; ret; 
0x000c38e0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e0]; ret; 
0x000c38f0: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e4]; ret; 
0x000c3900: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1e8]; ret; 
0x000c3910: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1ec]; ret; 
0x000c3920: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000c3870: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0012484f: mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0xc]; test eax, eax; je 0x12485d; ret; 
0x00087240: mov eax, dword ptr [edx + 0x14]; sub eax, dword ptr [edx + 0x10]; ret; 
0x00087102: mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x001763f2: mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x00087110: mov eax, dword ptr [edx + 0x20]; sub eax, dword ptr [edx + 0x1c]; ret; 
0x0009a99b: mov eax, dword ptr [edx + 0x80]; and eax, 0x39; cmp eax, 8; je 0x9a9aa; ret; 
0x0012c2af: mov eax, dword ptr [edx + 0xa0]; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0017a398: mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0014c916: mov eax, dword ptr [edx + 4]; cmp dword ptr [ecx + 4], eax; sete al; pop ebx; movzx eax, al; ret; 
0x0008d2f8: mov eax, dword ptr [edx + 4]; lea ecx, [eax + 0x30]; mov eax, dword ptr [eax + 0x30]; test eax, eax; jne 0x8d318; ret; 
0x0017a080: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0017a05c: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x24]; 
0x0016ed6c: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 4]; 
0x0016ed90: mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0017a139: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 0x24]; 
0x00179689: mov eax, dword ptr [edx + 4]; push ecx; push edx; call dword ptr [eax + 4]; 
0x00121ad0: mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0008dd48: mov eax, dword ptr [edx + 8]; mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x000a6acd: mov eax, dword ptr [edx + eax + 4]; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x00032e6b: mov eax, dword ptr [edx + eax]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x54]; ret; 
0x000342fb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003498b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003495b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003485b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003482b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347fb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003473b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003479b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346ab: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003476b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003470b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003490b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346db: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347cb: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003467b: mov eax, dword ptr [edx + eax]; mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x001489cb: mov eax, dword ptr [edx + eax]; ret; 
0x00090348: mov eax, dword ptr [edx]; mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0008187d: mov eax, dword ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000819ed: mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x0007f9bb: mov eax, dword ptr [edx]; ret; 
0x00089a0e: mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x0016d8ce: mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0011ae44: mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x000fd548: mov eax, dword ptr [esi + 0x3c]; add esp, 4; pop ebx; pop esi; ret; 
0x00175759: mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00114f36: mov eax, dword ptr [esi + 0xc]; mov dword ptr [esp + 0x28], eax; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00189379: mov eax, dword ptr [esi + 4]; pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00179ad1: mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0017558b: mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00174f5d: mov eax, dword ptr [esi]; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0013bd51: mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x0003bbe4: mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x000413e4: mov eax, dword ptr [esp + 0x10]; call eax; 
0x0003bd21: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fadd st(0); mov dword ptr [eax], ecx; ret; 
0x0003bd16: mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00190624: mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x00132389: mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x000945e9: mov eax, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x000c333f: mov eax, dword ptr [esp + 0x10]; pop ebx; pop esi; pop edi; ret; 
0x001436c1: mov eax, dword ptr [esp + 0x10]; sub eax, ebx; add esp, 8; pop ebx; ret; 
0x00129e4c: mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00024d51: mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017349f: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00188cae: mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00114331: mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016c52f: mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000a08c9: mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0003813e: mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xc24c0; add esp, 0x1c; ret; 
0x0017921b: mov eax, dword ptr [esp + 0x1c]; sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x0016c7c9: mov eax, dword ptr [esp + 0x20]; call eax; 
0x0008e963: mov eax, dword ptr [esp + 0x24]; call eax; 
0x0012f65e: mov eax, dword ptr [esp + 0x24]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016e59d: mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00041a56: mov eax, dword ptr [esp + 0x28]; call eax; 
0x00041a82: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0012f2f3: mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 8], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0016025b: mov eax, dword ptr [esp + 0x2c]; call eax; 
0x0002f408: mov eax, dword ptr [esp + 0x30]; call eax; 
0x00061a5e: mov eax, dword ptr [esp + 0x34]; call eax; 
0x00084493: mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000c4896: mov eax, dword ptr [esp + 0x38]; call eax; 
0x0012f20e: mov eax, dword ptr [esp + 0x38]; mov dword ptr [esp + 0xc], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00171889: mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0013019e: mov eax, dword ptr [esp + 0x3c]; mov dword ptr [esp + 0x18], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001772b1: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177321: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177391: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f4: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177454: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c1: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177541: mov eax, dword ptr [esp + 0x3c]; sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x000c455f: mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00173816: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x001736bc: mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000285a9: mov eax, dword ptr [esp + 0x48]; call eax; 
0x0016db35: mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0002aeca: mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002c9b4: mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002bb71: mov eax, dword ptr [esp + 0x58]; call eax; 
0x0016dbf8: mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0012fd96: mov eax, dword ptr [esp + 0x60]; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000db2a1: mov eax, dword ptr [esp + 0x64]; call eax; 
0x0012f40e: mov eax, dword ptr [esp + 0x68]; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00121d05: mov eax, dword ptr [esp + 0x74]; lea ecx, [eax + 0x5402]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0016d91c: mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0009e50d: mov eax, dword ptr [esp + 0xb4]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0003da1e: mov eax, dword ptr [esp + 0xb8]; mov dword ptr [esp + 0x20], eax; mov eax, 0xb2; call dword ptr gs:[0x10]; 
0x0009a8dc: mov eax, dword ptr [esp + 0xc8]; mov dword ptr [esp + 0x30], eax; mov eax, 0x14f; call dword ptr gs:[0x10]; 
0x00134e80: mov eax, dword ptr [esp + 0xc]; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x00041e3e: mov eax, dword ptr [esp + 0xc]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0006127e: mov eax, dword ptr [esp + 0xc]; add esp, 0x18; pop ebx; ret; 
0x0003c0c7: mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00090e56: mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000a72d0: mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00131458: mov eax, dword ptr [esp + 0xc]; mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x0003bca0: mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000c11c2: mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a9422: mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0015492d: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x00177a32: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a81: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x0003f285: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f398: mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0017a754: mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013f3a4: mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x000911a0: mov eax, dword ptr [esp + 4]; and dword ptr [eax + 8], 0xfffffffb; xor eax, eax; ret; 
0x00087ee4: mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a4: mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013ced4: mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x0008f39f: mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x0009a940: mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x0010cf1a: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x0010cf42: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x000912b0: mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x00099e64: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000915b4: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0009a980: mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x00150134: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a794: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x00178260: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x30]; add eax, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x0008d6a4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00187194: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001871b4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187244: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187234: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e494: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121aa4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x00187178: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4]; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000871a4: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087154: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000a0a4f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x000a0ccf: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x000a0a8f: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x000e8e04: mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017a774: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114544: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00091094: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef4: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008d334: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187154: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031484: mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0010cee4: mov eax, dword ptr [esp + 4]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00087ef4: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00087f14: mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008d6b4: mov eax, dword ptr [esp + 4]; ret; 
0x0008b464: mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x000c2ce1: mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000944f4: mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x0003c3ef: mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00090d5b: mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0013dc45: mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00196426: mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0007c63b: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00034b24: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b44: mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x0003c7fb: mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0010cdab: mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x00190cf5: mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000c2cb7: mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000bdda2: mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0015792a: mov eax, dword ptr [esp]; call eax; 
0x00033d46: mov eax, dword ptr [esp]; mov dword ptr [eax + esi*4], ecx; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x00187605: mov eax, dword ptr [esp]; ret; 
0x0002d1da: mov eax, dword ptr fs:[esp + 0x58]; call eax; 
0x00176aea: mov eax, dword ptr gs:[0]; mov dword ptr [eax + edx], ecx; ret; 
0x00099820: mov eax, dword ptr gs:[0x68]; mov dword ptr [edx + 0x1c], eax; xor eax, eax; pop ebx; ret; 
0x00099ee4: mov eax, dword ptr gs:[8]; ret; 
0x00094f04: mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00090288: mov eax, ebp; call dword ptr gs:[0x10]; 
0x00041b3b: mov eax, ebp; imul eax, esi; add eax, edi; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00091cb4: mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x000537e5: mov eax, ebp; pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0003ba65: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00028b85: mov eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0003e24c: mov eax, ebp; pop edi; pop ebp; ret; 
0x00035346: mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000c71db: mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x00157abf: mov eax, ebx; call eax; 
0x000c24b0: mov eax, ebx; cmovne eax, edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a8c79: mov eax, ebx; cmovne eax, edx; add esp, 0x18; pop ebx; ret; 
0x0013efb8: mov eax, ebx; mov byte ptr [ecx + edx], 0; pop ebx; ret; 
0x00087f4f: mov eax, ebx; mov byte ptr [edx], cl; pop ebx; pop esi; ret; 
0x00127895: mov eax, ebx; pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x0016e77a: mov eax, ebx; pop ebx; pop esi; jmp eax; 
0x00038805: mov eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013c53a: mov eax, ebx; pop ebx; pop esi; pop edi; ret 4; 
0x0003427a: mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00094d7f: mov eax, ebx; pop ebx; pop esi; ret; 
0x0003b37a: mov eax, ebx; pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x00055897: mov eax, ebx; pop ebx; ret 4; 
0x0006203e: mov eax, ebx; pop ebx; ret; 
0x0013f88f: mov eax, ebx; shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0003f243: mov eax, ecx; mov dword ptr [ecx + 4], edx; ret 4; 
0x00080692: mov eax, ecx; mov dword ptr [edx], ecx; pop ebx; ret; 
0x0007f823: mov eax, ecx; mov dword ptr [edx], edi; pop ebx; pop esi; pop edi; ret; 
0x000291b9: mov eax, ecx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000dc0d3: mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x000d9d91: mov eax, ecx; pop ebx; pop esi; ret; 
0x0009ff81: mov eax, ecx; pop ebx; ret; 
0x0008dcb1: mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f837: mov eax, ecx; pop edi; ret; 
0x000309fb: mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00114095: mov eax, ecx; pop esi; pop edi; ret; 
0x0013f9d3: mov eax, ecx; ret 4; 
0x0003415c: mov eax, ecx; ret; 
0x00091d49: mov eax, edi; call dword ptr gs:[0x10]; 
0x00041a4e: mov eax, edi; imul eax, ebp; add eax, ebx; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00064fee: mov eax, edi; mov byte ptr [esp + 0x62], 0x20; mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00103121: mov eax, edi; mov dword ptr [esi + 0x20], ecx; pop ebx; pop esi; pop edi; ret; 
0x00065a88: mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00064ca9: mov eax, edi; mov edi, ecx; jmp eax; 
0x000c0529: mov eax, edi; pop ebx; pop edi; ret; 
0x0002fb6b: mov eax, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00061fac: mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000338cc: mov eax, edi; pop edi; pop ebp; ret; 
0x000b3b71: mov eax, edi; pop edi; pop ebx; ret; 
0x000ba720: mov eax, edi; pop edi; pop esi; pop ebx; ret; 
0x000b1d74: mov eax, edi; pop edi; ret; 
0x000338ff: mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x00089fdc: mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x0009c460: mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00091309: mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009335b: mov eax, edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003b07f: mov eax, edx; add esp, 0x1c; ret 4; 
0x00035176: mov eax, edx; add esp, 0xc; ret; 
0x0005b7b0: mov eax, edx; call 0x5b550; mov eax, 1; add esp, 0xc; ret; 
0x000795a0: mov eax, edx; call 0x79300; mov eax, 1; add esp, 0xc; ret; 
0x00024d80: mov eax, edx; call dword ptr gs:[0x10]; 
0x000ac5a3: mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x00191ece: mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001867fe: mov eax, edx; mov edx, dword ptr [ecx + 0x110]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0003dee8: mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x0015318f: mov eax, edx; pop ebx; pop edi; ret; 
0x00026293: mov eax, edx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013d075: mov eax, edx; pop ebx; pop esi; pop edi; ret; 
0x00059f9f: mov eax, edx; pop ebx; pop esi; ret 4; 
0x00053f9a: mov eax, edx; pop ebx; pop esi; ret; 
0x000336e6: mov eax, edx; pop ebx; ret; 
0x000ac414: mov eax, edx; pop edi; pop ebp; ret; 
0x00192331: mov eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0003ed4c: mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00053891: mov eax, edx; pop esi; pop edi; ret; 
0x000336d4: mov eax, edx; ret; 
0x0003b0c9: mov eax, edx; shr eax, 0x1f; ret; 
0x00091d42: mov eax, edx; shr eax, 3; je 0x91d78; mov eax, edi; call dword ptr gs:[0x10]; 
0x000b4228: mov eax, edx; sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3f81; pop ebx; ret; 
0x000b4140: mov eax, edx; sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb3f81; pop ebx; ret; 
0x000b415e: mov eax, edx; sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb3f81; pop ebx; ret; 
0x000b417e: mov eax, edx; sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3f81; pop ebx; ret; 
0x000b41a2: mov eax, edx; sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3f81; pop ebx; ret; 
0x000b41d2: mov eax, edx; sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3f81; pop ebx; ret; 
0x000b4202: mov eax, edx; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3f81; pop ebx; ret; 
0x000b4014: mov eax, edx; sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3f81; pop ebx; ret; 
0x000b4036: mov eax, edx; sub ebx, 2; lea ecx, [edx + 2]; jne 0xb3f81; pop ebx; ret; 
0x000b405c: mov eax, edx; sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3f81; pop ebx; ret; 
0x000b4074: mov eax, edx; sub ebx, 4; lea ecx, [edx + 4]; jne 0xb3f81; pop ebx; ret; 
0x000b409a: mov eax, edx; sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3f81; pop ebx; ret; 
0x000b40bc: mov eax, edx; sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3f81; pop ebx; ret; 
0x000b40da: mov eax, edx; sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x000b40f8: mov eax, edx; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb3f81; pop ebx; ret; 
0x000b411e: mov eax, edx; sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3f81; pop ebx; ret; 
0x00042ead: mov eax, edx; xor edx, edx; ret; 
0x00089542: mov eax, esi; add esp, 4; pop ebx; pop esi; ret; 
0x00040ae5: mov eax, esi; mov dword ptr [esi + 0xc], edx; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x00089a97: mov eax, esi; movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x0005b657: mov eax, esi; pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x0003aebd: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x0002df27: mov eax, esi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00047186: mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000a7d8a: mov eax, esi; pop ebx; pop esi; ret 4; 
0x00061129: mov eax, esi; pop ebx; pop esi; ret; 
0x000389d2: mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00041d6f: mov eax, esi; pop esi; pop edi; ret; 
0x0010d6f9: mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000c2021: mov ebp, 0x10ea83c0; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x30]; ret; 
0x00042efe: mov ebp, 0x1c083c0; ret; 
0x000431cd: mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00043292: mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043648: mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000431b2: mov ebp, 0x1ff083c0; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x00043598: mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00043253: mov ebp, 0x1ff083c0; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000c21db: mov ebp, 0x1ff083c0; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00043218: mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x000435c3: mov ebp, 0x1ff083c2; ret; 
0x00043611: mov ebp, 0x1ff183c9; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042e37: mov ebp, 0x1ff183c9; shr eax, cl; ret; 
0x000432df: mov ebp, 0x1ff183ca; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00042f68: mov ebp, 0x1ff283d1; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000436dd: mov ebp, 0x1ff383db; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x000c2011: mov ebp, 0x20ea83c0; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x20]; ret; 
0x0014b27f: mov ebp, 0x2efffffe; lea esi, [esi]; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x000c2001: mov ebp, 0x30ea83c0; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c20f2: mov ebp, 0x30f801ff; in eax, dx; add eax, ecx; pop edi; ret; 
0x0008505f: mov ebp, 0x39000001; ret; 
0x000c1ff1: mov ebp, 0x40ea83c0; add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x001a5b6f: mov ebp, 0x5b000000; ret; 
0x000c18a6: mov ebp, 0x5ff801c0; ret; 
0x000c20b5: mov ebp, 0x5ff801ff; ret; 
0x00175e3c: mov ebp, 0x81000117; ret; 
0x0015da3c: mov ebp, 0x8100029b; ret; 
0x000e913c: mov ebp, 0x810009e4; ret; 
0x0006105f: mov ebp, 0x838b001d; dec esp; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00134a7f: mov ebp, 0x83fffffa; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00089aff: mov ebp, 0x83fffffa; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x000d7d23: mov ebp, 0x89d189f0; ret; 
0x000a440f: mov ebp, 0x89ffffc6; call 0xa46d3; add cl, al; call 0xfda7d32; inc edi; ret 0xc083; 
0x00116c9f: mov ebp, 0x89fffff0; ret; 
0x0014661f: mov ebp, 0x89fffffd; ret 0xffb8; 
0x00169e0f: mov ebp, 0x8bfffd17; push ebp; mov eax, 0x8910c483; ret; 
0x0004a1c6: mov ebp, 0x8bffffef; jl 0x4a1f1; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x00138eb5: mov ebp, 0x8bfffffe; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x00121d33: mov ebp, 0xa0; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00108ae4: mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x000436f1: mov ebp, 0xf0835bc2; pop ds; ret; 
0x00141d88: mov ebp, 0xffff32e9; jmp dword ptr [esi - 0x70]; 
0x0010addf: mov ebp, 0xffff84d; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x000588f0: mov ebp, 0xffffc9ac; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000d5cd9: mov ebp, 0xffffc9cc; adc byte ptr [edi], cl; test ebx, ecx; or al, 0; add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x000d5b4c: mov ebp, 0xffffc9cc; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x0005688b: mov ebp, 0xffffc9d0; adc byte ptr [ecx - 0x362743], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x0006dc2e: mov ebp, 0xfffffa6c; dec dword ptr [edi]; test byte ptr [edi], dh; ret; 
0x000685c2: mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00067bd9: mov ebp, 0xfffffa6c; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0005cee7: mov ebp, 0xffffff64; add byte ptr [edi], cl; xchg ebp, eax; ret; 
0x00115756: mov ebp, dword ptr [0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0003c7f7: mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00121d3d: mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x000a7e91: mov ebp, dword ptr [ebp + 0x36e8fff9]; ret; 
0x00139833: mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00120f95: mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00115763: mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0009bdf5: mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00070fd7: mov ebp, dword ptr [esp + 0x40]; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0018760d: mov ebp, dword ptr [esp]; ret; 
0x00115755: mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0016d47a: mov ebp, eax; pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x00087352: mov ebp, ecx; mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0005b9ca: mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0012c702: mov ebp, esi; call ebx; 
0x0012c702: mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0003c8cc: mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x00040565: mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00130f3e: mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00131069: mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x0019050a: mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000c0f3b: mov ebx, 0x30010a0; or al, 0x91; jmp ecx; 
0x000dc35b: mov ebx, 0x5300160a; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x0012dc37: mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0005ba54: mov ebx, 0x79f8838d; stc; call dword ptr [eax - 0x73]; 
0x0014a0ec: mov ebx, 0x8000768d; jl 0x14a117; add byte ptr es:[edi], cl; test dword ptr [ebp - 0x7c000003], esp; ret; 
0x00163e3e: mov ebx, 0x81000237; ret; 
0x00157f3e: mov ebx, 0x810002f6; ret; 
0x00135ae1: mov ebx, 0x8300003b; les ecx, ptr [eax + edx*2]; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x000fde63: mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7ef7d], cl; call dword ptr [eax + 0x55]; 
0x00144cf5: mov ebx, 0x89fffffe; ret; 
0x0008f35a: mov ebx, 0x8b001ada; push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0002b311: mov ebx, 0x8bfffffe; jl 0x2b33c; cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0012b621: mov ebx, 0x8dfffff5; jbe 0x12b628; ret; 
0x00047a7b: mov ebx, 0xc4830007; adc byte ptr [ecx - 0x7ab3dbbc], cl; ror byte ptr [edi], 0x84; ret 0x29; 
0x0013038c: mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00170a01: mov ebx, 0xe8fff79a; cmpsb byte ptr [esi], byte ptr es:[edi]; stosd dword ptr es:[edi], eax; cld; jmp dword ptr [esi - 0x70]; 
0x00130499: mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00130449: mov ebx, 0xe; mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00175a57: mov ebx, 0xfc5b53e8; jmp dword ptr [esi - 0x70]; 
0x0012940b: mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00142546: mov ebx, 0xff9064e8; jmp dword ptr [esi - 0x70]; 
0x00032654: mov ebx, 0xfffc96e9; push esi; ret 0xf03; 
0x00121334: mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012997b: mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000a089f: mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0014637c: mov ebx, 2; call dword ptr gs:[0x10]; 
0x0004257a: mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0013087a: mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00093c42: mov ebx, 2; mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d6d6: mov ebx, 2; xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0019048f: mov ebx, 3; call dword ptr gs:[0x10]; 
0x00130941: mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x0012c8ad: mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x00124ee9: mov ebx, dword ptr [0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0016b08a: mov ebx, dword ptr [0xec83000d]; adc al, 0x8d; cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x000425b5: mov ebx, dword ptr [eax + 0x34]; mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x00094585: mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00099f01: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000945f1: mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x00191ba6: mov ebx, dword ptr [eax + ecx - 4]; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000342d3: mov ebx, dword ptr [eax + ecx]; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x0013dc49: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0013dc49: mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; pop ebx; ret; 
0x000a0548: mov ebx, dword ptr [eax]; mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x000707b3: mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x001317a0: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x001318d1: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x0013172f: mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00131853: mov ebx, dword ptr [ebp - 0x500]; mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0009321e: mov ebx, dword ptr [ebp - 0x54]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x000a0290: mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x0010d670: mov ebx, dword ptr [ebx + 4]; xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000a034a: mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a03be: mov ebx, dword ptr [ebx]; mov eax, 0x198; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0013982b: mov ebx, dword ptr [ecx]; mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x00090708: mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0015aee5: mov ebx, dword ptr [edi - 7]; call dword ptr [eax + 0x55]; 
0x00120f93: mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x001a49d3: mov ebx, dword ptr [edx + 0xc]; cmp ecx, ebx; mov eax, 0; jne 0x1a49f0; pop ebx; ret; 
0x0009034a: mov ebx, dword ptr [edx + 4]; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x00092da7: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00092df0: mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0005341e: mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0013dd09: mov ebx, dword ptr [esi]; lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0011f30b: mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bec4: mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00098503: mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00129463: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214ac: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e63: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed23: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb53: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e853: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9b3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e813: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6e3: mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea23: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d683: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d33: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127703: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b23: mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc80: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0006139f: mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012142c: mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012d473: mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00186124: mov ebx, dword ptr [esp + 0x14]; jne 0x186130; pop ebx; ret; 
0x0012d1e6: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaf80: mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013850d: mov ebx, dword ptr [esp + 0x18]; je 0x138520; add esp, 8; pop ebx; ret; 
0x00129e48: mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012c6e3: mov ebx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001210c0: mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011e25a: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012108c: mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010bfd9: mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a0256: mov ebx, dword ptr [esp + 0x20]; test ebx, ebx; js 0xa0288; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000dee98: mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00129cac: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c0c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c37c: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c521: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c471: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5e9: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2d9: mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012dd49: mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0c0: mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e7f55: mov ebx, dword ptr [esp + 0x40]; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010c0ca: mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e7e: mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7bfa: mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00130cf0: mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012de5a: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223f8: mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000df030: mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012d729: mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012e022: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b0: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df82: mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000df0a0: mov ebx, dword ptr [esp + 0x60]; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00120e47: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d81: mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013e233: mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00121c8f: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115b0e: mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012d070: mov ebx, dword ptr [esp + 0x84]; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009f911: mov ebx, dword ptr [esp + 0x90]; mov eax, 0x119; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012d148: mov ebx, dword ptr [esp + 0x94]; mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0009a7dd: mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0012c193: mov ebx, dword ptr [esp + 0xc0]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0004075e: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fc97: mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e90ee: mov ebx, dword ptr [esp + 0xc]; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011ff6e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012d3ad: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012e97e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea5e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012d3e0: mov ebx, dword ptr [esp + 0xc]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125b6e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012752e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a8e: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5be: mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000712ed: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00070a8d: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x00072439: mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x0008fcc6: mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012e766: mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eaa2: mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012eae6: mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced6: mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012e592: mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011f656: mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012e742: mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012eb16: mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00129e12: mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012eb86: mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe6: mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012ec12: mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0012e656: mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea512: mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012e9e6: mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc6: mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114792: mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x001229a2: mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c3f6: mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00120b92: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00120b92: mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00122b82: mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00129bb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012eac2: mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00129dc6: mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128716: mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c06: mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012bec2: mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdf2: mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e482: mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129da2: mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea82: mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00129916: mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e4b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e6b2: mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ec2: mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114be2: mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012e4a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012d512: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012d512: mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001153a6: mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0f72: mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bb6: mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c6: mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00127be2: mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c236: mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf26: mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010bf52: mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010bf72: mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf92: mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012bee6: mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d6: mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e506: mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d276: mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001145b2: mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000eff16: mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012db92: mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db72: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012db72: mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e946: mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129496: mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b6: mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae6: mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x00061349: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000fba89: mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012ec49: mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e719: mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f239: mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c09: mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f9: mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114809: mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b9: mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e629: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e689: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114679: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e919: mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e9: mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be99: mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e799: mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e459: mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128669: mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e539: mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e569: mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c269: mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e889: mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf39: mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec99: mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e29: mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f49: mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f19: mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114629: mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127939: mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127859: mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127559: mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127589: mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab9: mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0003cd05: mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011f615: mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x00091bd0: mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091b9c: mov ebx, dword ptr [esp]; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001875fd: mov ebx, dword ptr [esp]; ret; 
0x0012de59: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223f7: mov ebx, dword ptr fs:[esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x0012d728: mov ebx, dword ptr fs:[esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00124ee8: mov ebx, dword ptr gs:[0x14]; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00090565: mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012c706: mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x000232c1: mov ebx, ebp; mov edx, ebp; call dword ptr gs:[0x10]; 
0x000951f9: mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x000999a4: mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000958db: mov ebx, ebp; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012c923: mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x001508ad: mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0009151f: mov ebx, edi; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00088218: mov ebx, edi; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000973f5: mov ebx, edi; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x00098c0b: mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009668c: mov ebx, edi; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003ccd6: mov ebx, edx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00120ba2: mov ebx, edx; ret; 
0x000300ff: mov ebx, esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a0030: mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0008e310: mov ebx, esp; sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x001210cd: mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0003deb6: mov ecx, 0x4c8b0005; and al, 0x20; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x00121d38: mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0012c8b2: mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000985a4: mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fbce: mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x00164740: mov ecx, 0x8100022e; ret; 
0x00163240: mov ecx, 0x81000243; ret; 
0x00161b40: mov ecx, 0x8100025a; ret; 
0x00042440: mov ecx, 0x81001451; ret; 
0x000903c4: mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x000901bc: mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00184786: mov ecx, 0x81; mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0008fc8a: mov ecx, 0x81; mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00098641: mov ecx, 0x81; xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x000903f3: mov ecx, 0x81; xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x000960ce: mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000ec154: mov ecx, 0x8900150c; ret; 
0x00126bc8: mov ecx, 0x89fff94e; push esi; or al, 0x8d; xchg ebx, eax; cld; ret 0xffe7; 
0x0010e92e: mov ecx, 0xa218838d; stc; call dword ptr [eax - 0x73]; 
0x000bbcfa: mov ecx, 0xc181000c; xor esi, edx; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ea46e: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00093003: mov ecx, 0xc; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00175c7e: mov ecx, 0xcec8390; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x001904e8: mov ecx, 0xfab0c2e8; jmp dword ptr [esi - 0x70]; 
0x0003c374: mov ecx, 0xff7fffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003c044: mov ecx, 0xffefffff; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x0003bdd9: mov ecx, 0xfffe; sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0010d67a: mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c336c: mov ecx, 0xffffffff; cmovb eax, ecx; ret; 
0x0007f830: mov ecx, 0xffffffff; pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x0017a479: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x0017a439: mov ecx, 1; mov dword ptr [eax + 0xc], edx; mov eax, ecx; ret; 
0x00154ab0: mov ecx, 1; mov eax, ecx; ret; 
0x00098035: mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x000d9da2: mov ecx, 1; pop ebx; pop esi; mov eax, ecx; ret; 
0x00189edf: mov ecx, 1; xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x000973f7: mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x000958df: mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00097b2a: mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0003cd09: mov ecx, 8; call dword ptr gs:[0x10]; 
0x000977f1: mov ecx, 8; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0015bd22: mov ecx, cs; int1; call dword ptr [ecx + 0x6a]; 
0x0016c912: mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00171a8d: mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000425bb: mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x0007c433: mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00092daa: mov ecx, dword ptr [eax + 4]; mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0016cb53: mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x000810b0: mov ecx, dword ptr [eax + 8]; mov dword ptr [eax], edx; mov dword ptr [eax + 8], edx; mov dword ptr [eax + 0x20], ecx; ret; 
0x00135319: mov ecx, dword ptr [eax + 8]; test ecx, ecx; je 0x135328; xor eax, eax; pop ebx; ret; 
0x00193de2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195de2: mov ecx, dword ptr [eax - 4]; mov dword ptr [edx - 4], ecx; mov eax, edx; pop ebx; ret; 
0x0009b2de: mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9b2f0; ret; 
0x00194482: mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00095558: mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fcff: mov ecx, dword ptr [eax]; mov eax, dword ptr [eax + 4]; mov dword ptr [ecx + 4], eax; mov dword ptr [eax], ecx; mov dword ptr [edx + 0x62c], 0; ret; 
0x0018614c: mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x186158; ret; 
0x0010d6e2: mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00026253: mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x001484b4: mov ecx, dword ptr [ebp - 0x3fceff8a]; ret; 
0x001317a6: mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x001318d7: mov ecx, dword ptr [ebp - 0x508]; mov eax, 0x92; mov edx, 8; call dword ptr gs:[0x10]; 
0x00131735: mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x0013185e: mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00093299: mov ecx, dword ptr [ebp - 0x5c]; xor edx, edx; mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x00093358: mov ecx, dword ptr [ebp - 0x60]; mov eax, edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a7383: mov ecx, dword ptr [ebp - 0x74ffd98c]; xchg edi, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x00091406: mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091306: mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0009ab1d: mov ecx, dword ptr [ebx + 4]; mov eax, 0xf0; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001a0bd0: mov ecx, dword ptr [ebx + ebx*4 - 0x7b740009]; or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a0bce: mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00134939: mov ecx, dword ptr [ebx + ecx]; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x000712f1: mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00070a91: mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x0007243d: mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00028e72: mov ecx, dword ptr [ebx - 0x72b3db84]; xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0013f183: mov ecx, dword ptr [ebx - 0x74d7db84]; je 0x13f1af; sub al, 0x83; ret 0x8902; 
0x000a58b2: mov ecx, dword ptr [ecx + ecx]; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x000923f5: mov ecx, dword ptr [edi + 0x10]; mov eax, 0xf0; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095275: mov ecx, dword ptr [edi + 0x68]; mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000914b6: mov ecx, dword ptr [edi + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091528: mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x0009070b: mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0008232e: mov ecx, dword ptr [edx + 0x10]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x0008dd4b: mov ecx, dword ptr [edx + 0x14]; cmp eax, ecx; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x0016e030: mov ecx, dword ptr [edx + 0x18]; test ecx, ecx; jne 0x16e058; mov dword ptr [eax], 0; pop ebx; ret; 
0x000845e1: mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00174214: mov ecx, dword ptr [edx + 0x28]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00174be4: mov ecx, dword ptr [edx + 0x30]; mov dword ptr [eax + 4], ecx; mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0009da49: mov ecx, dword ptr [edx + 0x3bec]; mov dword ptr [edx + 0x3bec], eax; mov dword ptr [eax + 0xc], ecx; ret; 
0x0013144a: mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x131458; ret; 
0x0009034d: mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x000d9ff2: mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9fd8; add eax, 1; ret; 
0x0013977f: mov ecx, dword ptr [edx]; test ecx, ecx; je 0x139798; ret; 
0x000d9fca: mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9ff2; ret; 
0x00121aca: mov ecx, dword ptr [edx]; test ecx, ecx; js 0x121ad8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000d9c60: mov ecx, dword ptr [esi + 0x1c]; cmp dword ptr [edi + 0x1c], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x00092df3: mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x000d9ce0: mov ecx, dword ptr [esi + 0x34]; cmp dword ptr [edi + 0x34], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000d9d00: mov ecx, dword ptr [esi + 0x3c]; cmp dword ptr [edi + 0x3c], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x0009055e: mov ecx, dword ptr [esi + 8]; mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000d9bbb: mov ecx, dword ptr [esi]; cmp dword ptr [edi], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000bdde0: mov ecx, dword ptr [esi]; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bddc1: mov ecx, dword ptr [esi]; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010b981: mov ecx, dword ptr [esi]; test ecx, ecx; je 0x10b9a0; cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x00191ed0: mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x001213a8: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012c925: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0012bc6c: mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x001131e8: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff6a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e97a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea5a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b6a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012752a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a8a: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5ba: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0008fcc2: mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012238b: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00040756: mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012232b: mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00121328: mov ecx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x0012945f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214a8: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e5f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed1f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb4f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7cf: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e84f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5ef: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9af: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e80f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6df: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea1f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d67f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d2f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001276ff: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b1f: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc7c: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00121428: mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00130391: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0011f2fe: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x00061397: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001903ff: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013087f: mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00066156: mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065256: mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x0012d466: mov ecx, dword ptr [esp + 0x18]; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00064987: mov ecx, dword ptr [esp + 0x18]; movzx eax, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x0009397d: mov ecx, dword ptr [esp + 0x18]; xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009df4f: mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0016edd7: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ee16: mov ecx, dword ptr [esp + 0x1c]; lea edx, [ecx + 4]; push edx; push ebx; call dword ptr [eax]; 
0x00129e44: mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0003deb9: mov ecx, dword ptr [esp + 0x20]; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x00130ecf: mov ecx, dword ptr [esp + 0x30]; mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011f0bc: mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0009df79: mov ecx, dword ptr [esp + 0x38]; mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00070db1: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071c96: mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000a05e5: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x0012e026: mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b4: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df86: mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012d725: mov ecx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x000a0658: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a054a: mov ecx, dword ptr [esp + 0x64]; mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0011f003: mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fa19: mov ecx, dword ptr [esp + 0xc]; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x000fba80: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0008fa70: mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x00061345: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012ec45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e715: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f235: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c05: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114805: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e625: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e685: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114675: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e915: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e795: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e455: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128665: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e535: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e565: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c265: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e885: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf35: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec95: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e25: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f45: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f15: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114625: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127935: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127855: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127555: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127585: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab5: mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00099ef9: mov ecx, dword ptr [esp + 0xc]; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x000254f6: mov ecx, dword ptr [esp + 0xc]; sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x00091158: mov ecx, dword ptr [esp + 4]; mov eax, 0x16; cmp edx, 2; jbe 0x91170; ret; 
0x00099a11: mov ecx, dword ptr [esp + 4]; mov eax, 0xf0; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000fba1f: mov ecx, dword ptr [esp + 4]; mov eax, 1; test ecx, ecx; js 0xfba30; ret; 
0x0009dace: mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3be4]; test eax, eax; jne 0x9dae7; ret; 
0x000919d0: mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00130cf4: mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012e762: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eae2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f652: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb82: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e652: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9e2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3f2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00129bb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00129dc2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128712: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c02: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129912: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012e4a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001153a2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127bb2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c232: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf22: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bee2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e502: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d272: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff12: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e942: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129492: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae2: mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000c54e8: mov ecx, dword ptr [esp + 8]; mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc550a; ret; 
0x000dc365: mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00094278: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c47: mov ecx, dword ptr [esp + 8]; xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x00187611: mov ecx, dword ptr [esp]; ret; 
0x00093357: mov ecx, dword ptr es:[ebp - 0x60]; mov eax, edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0012bc7c: mov ecx, eax; cmp eax, 0xfffff000; ja 0x12bc90; mov eax, ecx; pop ebx; ret; 
0x0009ff78: mov ecx, eax; cmp eax, 0xfffff000; ja 0x9ff88; mov eax, ecx; pop ebx; ret; 
0x00095338: mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010d8f8: mov ecx, eax; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010da54: mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x000df241: mov ecx, eax; ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdf258; mov eax, edx; ret; 
0x00120622: mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0009efcb: mov ecx, edi; call dword ptr [eax + 0x68]; 
0x0009e63e: mov ecx, edi; call dword ptr [eax - 0x18]; 
0x0009db57: mov ecx, edi; call dword ptr [eax - 0x73]; 
0x0009e214: mov ecx, edi; call dword ptr gs:[0x10]; 
0x000952bf: mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000a03c5: mov ecx, edx; call dword ptr gs:[0x10]; 
0x0007c42b: mov ecx, edx; mov dword ptr [eax + 0x94], ecx; mov ecx, dword ptr [eax + 0x58]; mov dword ptr [ecx + 0x88], edx; ret; 
0x00092170: mov ecx, edx; mov eax, 0xf0; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000c2d79: mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0009f91d: mov ecx, esi; call dword ptr gs:[0x10]; 
0x000405c4: mov ecx, esi; mov eax, 0x163; xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009a7db: mov ecx, esi; mov ebx, dword ptr [esp + 0xa0]; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ea423: mov ecx, esi; mov edx, esi; call dword ptr gs:[0x10]; 
0x00181d84: mov ecx, esi; stc; call dword ptr [ecx - 0x77]; 
0x001397d7: mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0015c54c: mov ecx, ss; int1; call dword ptr [eax + 0x6a]; 
0x000eb529: mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x00097042: mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00197d23: mov edi, 0x300041d; sbb al, 0x8b; jmp ebx; 
0x00197223: mov edi, 0x3000428; sbb al, 0x8b; jmp ebx; 
0x001955a3: mov edi, 0x3000442; sbb al, 0x8b; jmp ebx; 
0x00192b23: mov edi, 0x300046a; sbb al, 0x8b; jmp ebx; 
0x000bb1e3: mov edi, 0x30010fc; or al, 0x99; jmp ecx; 
0x000b9b83: mov edi, 0x3001111; or al, 0x99; jmp ecx; 
0x000b9a03: mov edi, 0x3001112; or al, 0x91; jmp ecx; 
0x0008547d: mov edi, 0x39000000; ret; 
0x00144cc6: mov edi, 0x39fe5f4c; sar dword ptr [eax], 0xf; dec edi; ret; 
0x000a9c51: mov edi, 0x450ffff6; ret 0x66c3; 
0x000d9c4d: mov edi, 0x5f000000; pop esi; ret; 
0x000bb6dd: mov edi, 0x5f000005; pop esi; pop ebx; ret; 
0x0010e3ba: mov edi, 0x850f001f; cmp eax, 0xf7fffffd; ret 0x67; 
0x001221c1: mov edi, 0x8b000000; dec esp; and al, 0xc; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123c7e: mov edi, 0x8d08ec83; xchg esi, eax; cwde; dec edx; stc; call dword ptr [edx - 0x77]; 
0x0005f7bc: mov edi, 0xc483ffff; or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0015f03d: mov edi, 0xe8fffffb; push -0x3b; std; jmp dword ptr [esi - 0x70]; 
0x000a0ec9: mov edi, 0xec830019; or al, 0x8d; nop; js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x000dfff6: mov edi, 0xf600001d; ret; 
0x00064cfb: mov edi, 0xf889fff8; mov edi, ecx; jmp eax; 
0x00065904: mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x00098058: mov edi, 0xfffcf7e9; jmp dword ptr [esi - 0x70]; 
0x0003c7f4: mov edi, dword ptr [eax + 8]; mov ebp, dword ptr [eax + 0xc]; nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x00121d32: mov edi, dword ptr [ebp + 0xa0]; mov ecx, 0x5401; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x0009e224: mov edi, dword ptr [ebp]; mov dword ptr [esp], ebp; call 0x23190; mov dword ptr [esp], esi; call edi; 
0x00139830: mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0009c465: mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00120f98: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00120f98: mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; pop ebp; pop edi; pop ebx; ret; 
0x000f1c04: mov edi, dword ptr [edx + ebx]; mov dword ptr [ebp - 0x5b0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f8e44: mov edi, dword ptr [edx + ebx]; mov dword ptr [ebp - 0x5c0], edx; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x00130f43: mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000659e0: mov edi, dword ptr [esp + 0x18]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00065a78: mov edi, dword ptr [esp + 0x18]; movzx eax, byte ptr [esi + eax - 0x20]; add edi, dword ptr [ecx + eax*4 - 0x73e94]; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00190407: mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0011f6ca: mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x000eaf88: mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012c6e7: mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x0009bdf1: mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00130ed7: mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x0011f0c4: mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000a08a7: mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x0012061a: mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0016dbf3: mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x000650da: mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x001875f9: mov edi, dword ptr [esp]; ret; 
0x00093983: mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x000e8f4c: mov edi, eax; mov eax, 0xdc; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000c2c5d: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00162a08: mov edi, ebp; jmp dword ptr [esi - 0x70]; 
0x000a12ee: mov edi, ecx; call dword ptr [eax + 0x6a]; 
0x0013c20a: mov edi, ecx; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00064722: mov edi, ecx; jmp eax; 
0x000645f0: mov edi, ecx; mov dword ptr [esp + 0x10], 0; jmp eax; 
0x000645a0: mov edi, ecx; mov dword ptr [esp + 0x10], 1; jmp eax; 
0x00064ff5: mov edi, ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x000652a4: mov edi, ecx; mov dword ptr [esp + 0x44], 0; jmp eax; 
0x00198b17: mov edi, edi; jecxz 0x198aa8; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x001999f0: mov edi, edi; jecxz 0x1999dc; add eax, 0x81fffedc; ret; 
0x00199af7: mov edi, edi; jecxz 0x199a88; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x0019a9f0: mov edi, edi; jecxz 0x19a9dc; add eax, 0x81fffecc; ret; 
0x0019aaf7: mov edi, edi; jecxz 0x19aa88; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax], bh; ret 0x840f; 
0x00070da6: mov edi, edx; cmp ecx, 0x5a; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00172a51: mov edi, esp; dec dword ptr [ebp - 0x69b757d]; call dword ptr [edi + 0x6a]; 
0x000908c1: mov edx, 0; cmove eax, edx; ret; 
0x0009daee: mov edx, 0; cmovne eax, edx; ret; 
0x00130450: mov edx, 0x100; call dword ptr gs:[0x10]; 
0x001220a8: mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x000437d5: mov edx, 0x10; cmove eax, edx; ret; 
0x0009118f: mov edx, 0x16; mov eax, 0x5f; cmovne eax, edx; ret; 
0x00043752: mov edx, 0x20; cmove eax, edx; ret; 
0x000fb613: mov edx, 0x20; cmovne eax, edx; ret; 
0x00152e8d: mov edx, 0x39000001; ret 0x840f; 
0x0013173b: mov edx, 0x40; call dword ptr gs:[0x10]; 
0x000fb62b: mov edx, 0x40; cmove eax, edx; ret; 
0x000a930f: mov edx, 0x450ffff5; ret 0xc35b; 
0x0012432e: mov edx, 0x64; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; test eax, eax; cmove eax, edx; ret; 
0x0002c63b: mov edx, 0x68fff92a; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00093397: mov edx, 0x68fff93f; ret 0; 
0x00098648: mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x00098812: mov edx, 0x7fffffff; setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009147f: mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091b5b: mov edx, 0x7fffffff; xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00096bdd: mov edx, 0x7fffffff; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c04: mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092177: mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00176c3f: mov edx, 0x81000109; ret; 
0x001246c2: mov edx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x0007810e: mov edx, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0005a679: mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x00083b6a: mov edx, 0x89000002; ret 0x468b; 
0x00051452: mov edx, 0x8bfffe2e; jl 0x5147d; sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x0017a67b: mov edx, 0x8d50fff9; xor dword ptr [ecx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00096977: mov edx, 0x8dfffffe; xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x0006133c: mov edx, 0xb853001d; add byte ptr es:[eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00090281: mov edx, 0xfffffffe; xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x00129980: mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001a38a5: mov edx, 0xffffffff; cmovbe eax, edx; pop esi; pop ebp; pop ebx; ret; 
0x000a9179: mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0002834d: mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00150478: mov edx, 0xffffffff; mov eax, edx; pop ebx; pop esi; ret; 
0x000a91c3: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a91af: mov edx, 0xffffffff; pop ebx; cmove eax, edx; add eax, 1; ret; 
0x000903fa: mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x001256b9: mov edx, 1; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000901c1: mov edx, 1; call dword ptr gs:[0x10]; 
0x0018478b: mov edx, 1; lea ebx, [eax + 0x1c]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009e412: mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00087148: mov edx, 1; mov eax, edx; ret; 
0x00150488: mov edx, 1; pop ebx; pop esi; mov eax, edx; ret; 
0x0008fc8f: mov edx, 1; push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00091ba6: mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00024d75: mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000931d1: mov edx, 1; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00097da7: mov edx, 1; xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091bd8: mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091eb4: mov edx, 1; xor esi, esi; lea ebx, [edi + eax + 0x20]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009999d: mov edx, 1; xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00091f50: mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00131859: mov edx, 2; mov ecx, dword ptr [ebp - 0x510]; mov dword ptr [ebp - 0x4e8], eax; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x00124f86: mov edx, 2; test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0008fbd3: mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0008fc42: mov edx, 2; xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001318e2: mov edx, 8; call dword ptr gs:[0x10]; 
0x00043734: mov edx, 8; cmove eax, edx; ret; 
0x0013aede: mov edx, ds; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x00187707: mov edx, dword ptr [0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001489bf: mov edx, dword ptr [0]; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x00095dff: mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008f18f: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008f1c6: mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00090e68: mov edx, dword ptr [eax + 0x10]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00024b0e: mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x001755b2: mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x00175ac1: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x001719c2: mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00174f62: mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016c7ae: mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0008b7bd: mov edx, dword ptr [eax + 0x24]; mov dword ptr [eax + 0x24], ecx; mov dword ptr [eax + 0xc], edx; mov dword ptr [eax + 4], edx; ret; 
0x0017729f: mov edx, dword ptr [eax + 0x28]; mov dword ptr [esp + 0x28], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000425b8: mov edx, dword ptr [eax + 0x38]; mov ecx, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + 0x40]; ret; 
0x000871d6: mov edx, dword ptr [eax + 0xc]; mov dword ptr [eax + 0x10], edx; add esp, 8; pop ebx; ret; 
0x0008f1fa: mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x00175aca: mov edx, dword ptr [eax + 4]; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x0016ccfc: mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x00173df9: mov edx, dword ptr [eax + 4]; push ecx; push eax; call dword ptr [edx + 8]; 
0x00177236: mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00166e06: mov edx, dword ptr [eax + ebx]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0009869b: mov edx, dword ptr [eax]; and edx, 2; je 0x986b0; xor eax, eax; add esp, 0xc; ret; 
0x000c54ec: mov edx, dword ptr [eax]; cmp ecx, edx; jne 0xc550a; ret; 
0x0010a918: mov edx, dword ptr [eax]; mov dword ptr [eax], ecx; mov eax, edx; ret; 
0x00092dad: mov edx, dword ptr [eax]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010cf18: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x108], edx; xor eax, eax; ret; 
0x00090d98: mov edx, dword ptr [eax]; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x000822f6: mov edx, dword ptr [eax]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x00186497: mov edx, dword ptr [eax]; test edx, edx; jne 0x1864a8; add esp, 8; pop ebx; ret; 
0x0003d66e: mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x000268fd: mov edx, dword ptr [ebp - 0x44]; call edx; 
0x000911cd: mov edx, dword ptr [ebx + 0x18]; and dword ptr [edx + 8], 0x7fffffff; and dword ptr [edx + 0xc], 0xfffffffe; add esp, 8; pop ebx; ret; 
0x00040941: mov edx, dword ptr [ebx + 2]; mov dword ptr [eax], edx; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0008e79f: mov edx, dword ptr [ebx + 8]; mov dword ptr [edx], eax; add esp, 4; pop ebx; pop esi; ret; 
0x000336cf: mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0012d3d5: mov edx, dword ptr [ebx + ecx]; cmp edx, 0x26; je 0x12d433; pop ebx; pop esi; ret; 
0x00091d40: mov edx, dword ptr [ebx]; mov eax, edx; shr eax, 3; je 0x91d78; mov eax, edi; call dword ptr gs:[0x10]; 
0x0008ef44: mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x00186800: mov edx, dword ptr [ecx + 0x110]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0008e6eb: mov edx, dword ptr [ecx + 0x18]; mov dword ptr [eax], edx; add esp, 4; pop ebx; pop esi; ret; 
0x00034c4c: mov edx, dword ptr [ecx + 0x2c]; add edx, 0x200; mov dword ptr [eax + ebx], edx; pop ebx; pop esi; ret; 
0x000607ab: mov edx, dword ptr [ecx + edi*4 - 8]; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x00182c0f: mov edx, dword ptr [ecx]; add edx, dword ptr [eax + 8]; mov dword ptr [ebx + 0xc], edx; pop ebx; ret; 
0x00090658: mov edx, dword ptr [edi + 0x10]; test edx, edx; je 0x90698; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x000a7388: mov edx, dword ptr [edi + 0x8c]; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0009070e: mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x0016e211: mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0016e018: mov edx, dword ptr [edx + 0x10]; mov dword ptr [eax], 7; mov dword ptr [eax + 4], edx; pop ebx; ret; 
0x0016e043: mov edx, dword ptr [edx + 0x14]; mov dword ptr [eax], 6; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0013979f: mov edx, dword ptr [edx + 0x14]; xor eax, eax; test edx, edx; sete al; ret; 
0x0016e073: mov edx, dword ptr [edx + 0x20]; mov dword ptr [eax], 9; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0017421a: mov edx, dword ptr [edx + 0x2c]; mov dword ptr [eax + 8], edx; ret; 
0x00174bea: mov edx, dword ptr [edx + 0x34]; mov dword ptr [eax + 8], edx; ret; 
0x0008c375: mov edx, dword ptr [edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x0008722f: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x000870ff: mov edx, dword ptr [edx + 0x58]; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00171560: mov edx, dword ptr [edx + 0x8c]; mov dword ptr [eax + 8], edx; ret; 
0x0007c67c: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007c57d: mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 8], edx; pop ebx; jmp eax; 
0x000fba37: mov edx, dword ptr [edx + 0xa0]; cmp dword ptr [ecx + edx], 0x26; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x00024f28: mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003cd27: mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012d26f: mov edx, dword ptr [edx + 0xa0]; neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00090350: mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0013f6e1: mov edx, dword ptr [edx + 0xc]; mov dword ptr [eax + 0xc], edx; xor eax, eax; pop ebx; pop esi; ret; 
0x00159f0f: mov edx, dword ptr [edx + 8]; pop ebx; pop esi; mov eax, edx; ret; 
0x00081083: mov edx, dword ptr [edx]; cmp eax, ecx; cmovg eax, ecx; test edx, edx; jne 0x81080; ret; 
0x00095d62: mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008f322: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f342: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f362: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f382: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d42: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d22: mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x0013145c: mov edx, dword ptr [edx]; mov dword ptr [eax], edx; mov eax, 1; ret; 
0x000908b8: mov edx, dword ptr [edx]; mov eax, 0x16; test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x0009b2dc: mov edx, dword ptr [edx]; mov ecx, dword ptr [eax]; cmp dword ptr [edx + 0x14], ecx; je 0x9b2f0; ret; 
0x000a0d42: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d92: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a32: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a12: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0d12: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac2: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d72: mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x000c4a11: mov edx, dword ptr [edx]; xor eax, eax; test edx, edx; sete al; ret; 
0x000bde12: mov edx, dword ptr [esi + 3]; mov dword ptr [eax], ecx; mov dword ptr [eax + 3], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001799fa: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a33: mov edx, dword ptr [esi + 4]; push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x000c1213: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddd0: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012be84: mov edx, dword ptr [esi]; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ba110: mov edx, dword ptr [esi]; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000c11e4: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddb1: mov edx, dword ptr [esi]; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba0f1: mov edx, dword ptr [esi]; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x0003de0e: mov edx, dword ptr [esp + 0x10]; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x00099efd: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00115c3b: mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012ec41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e711: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f231: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c01: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114801: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e621: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e681: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114671: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e911: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e791: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e451: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128661: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e531: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e561: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c261: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e881: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf31: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec91: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e21: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f41: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f11: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114621: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127931: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127851: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127551: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127581: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab1: mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00095334: mov edx, dword ptr [esp + 0x10]; mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0005b799: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5b7b0; add esp, 0xc; ret; 
0x00079589: mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x795a0; add esp, 0xc; ret; 
0x0003518b: mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x000986b0: mov edx, dword ptr [esp + 0x14]; call 0x98540; xor eax, eax; add esp, 0xc; ret; 
0x0012238f: mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000945ed: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0018de8e: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0004075a: mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff66: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e976: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea56: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b66: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127526: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a86: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b6: mov edx, dword ptr [esp + 0x14]; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0016d4c9: mov edx, dword ptr [esp + 0x14]; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00130395: mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012d59e: mov edx, dword ptr [esp + 0x18]; cmp esi, -1; je 0x12d5c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010b54b: mov edx, dword ptr [esp + 0x18]; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x0011f302: mov edx, dword ptr [esp + 0x18]; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bec0: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006139b: mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012945b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00114e5b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed1b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb4b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7cb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e84b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5eb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9ab: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e80b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6db: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea1b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d67b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d2b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001276fb: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b1b: mov edx, dword ptr [esp + 0x18]; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00190403: mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130883: mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a99c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17a9b0; add esp, 0xc; ret; 
0x0017ab0c: mov edx, dword ptr [esp + 0x18]; test edx, edx; jne 0x17ab20; add esp, 0xc; ret; 
0x0012d1dd: mov edx, dword ptr [esp + 0x1c]; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012d46a: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009e20b: mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000eaf7c: mov edx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0012f1aa: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f77a: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7ea: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc3a: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd3a: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0013ae2e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07e: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c4: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00040cf3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a3: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a96: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x00097682: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098936: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da6: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c2: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099712: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c8bd: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb29: mov edx, dword ptr [esp + 0x1c]; sub edx, dword ptr gs:[0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x00129e40: mov edx, dword ptr [esp + 0x20]; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0006614d: mov edx, dword ptr [esp + 0x20]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x000eb481: mov edx, dword ptr [esp + 0x24]; call 0xeb130; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x0010bfd5: mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009bde9: mov edx, dword ptr [esp + 0x24]; mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x0012b79e: mov edx, dword ptr [esp + 0x2c]; sub edx, dword ptr gs:[0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x00190482: mov edx, dword ptr [esp + 0x34]; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000dee94: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd45: mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0b8: mov edx, dword ptr [esp + 0x34]; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00130ed3: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120616: mov edx, dword ptr [esp + 0x38]; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0015d94b: mov edx, dword ptr [esp + 0x3c]; call edx; 
0x00177241: mov edx, dword ptr [esp + 0x3c]; sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x00156576: mov edx, dword ptr [esp + 0x40]; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00065173: mov edx, dword ptr [esp + 0x4c]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x001223f4: mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001302c1: mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x00114ae0: mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x001149b7: mov edx, dword ptr [esp + 0xa8]; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114cdf: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x132; call dword ptr gs:[0x10]; 
0x00114c70: mov edx, dword ptr [esp + 0xb8]; mov eax, 0x1c4; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0017a778: mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007c63f: mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00129410: mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c495: mov edx, dword ptr [esp + 0xc]; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0018717f: mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000e7bc0: mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000df0a4: mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00095278: mov edx, dword ptr [esp + 0xc]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000952bb: mov edx, dword ptr [esp + 0xc]; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00121f6f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x0012447f: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00125c12: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012bc35: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f142: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbd2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x001300c0: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130350: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x001465e3: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146632: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x00148c3c: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x00175e0b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x0017631b: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x0018a0a2: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x0003e1b3: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x00040908: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b35: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e05: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e88: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x0005ae21: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x000dac67: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54eb: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79ab: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000efeb8: mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x00099ebd: mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915dd: mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00034b28: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b48: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001503ee: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x000342fe: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003498e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003495e: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0017a394: mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003dee4: mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00090561: mov edx, dword ptr [esp + 4]; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00095d5e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008f31e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f33e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f35e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f37e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d3e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d1e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a0a2e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a0e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0abe: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d6e: mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0003485e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003482e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347fe: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003473e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003479e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346ae: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003476e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003470e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003490e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346de: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347ce: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003467e: mov edx, dword ptr [esp + 4]; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x000799b0: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00114548: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017ac50: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; ret; 
0x00091098: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef8: mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0013e22c: mov edx, dword ptr [esp + 8]; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124261: mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00091294: mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x0008d338: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187158: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031488: mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00186148: mov edx, dword ptr [esp + 8]; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x186158; ret; 
0x00117658: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190f8: mov edx, dword ptr [esp + 8]; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00091278: mov edx, dword ptr [esp + 8]; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00095e52: mov edx, dword ptr [esp + 8]; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009adca: mov edx, dword ptr [esp + 8]; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00187601: mov edx, dword ptr [esp]; ret; 
0x0008c374: mov edx, dword ptr ds:[edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x00122b62: mov edx, dword ptr es:[edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00187706: mov edx, dword ptr gs:[0]; mov dword ptr [edx + eax], 0x16; xor eax, eax; ret; 
0x001489be: mov edx, dword ptr gs:[0]; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x00095dfe: mov edx, dword ptr gs:[0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x0008f18e: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0008f1c5: mov edx, dword ptr gs:[0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x00043191: mov edx, eax; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000430ff: mov edx, eax; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x00043163: mov edx, eax; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00092372: mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x000430d1: mov edx, eax; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00091cb2: mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x0007e76d: mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x0008c639: mov edx, eax; ret; 
0x000232c3: mov edx, ebp; call dword ptr gs:[0x10]; 
0x0009df7d: mov edx, ebp; mov dword ptr [esp + 0x2c], eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008ded7: mov edx, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00130497: mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x0012eaa0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012e590: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012e740: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00129e10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012ec10: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea510: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x00114790: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x001229a0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00120b90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00120b90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00122b80: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012eac0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x0012bec0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdf0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e480: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129da0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea80: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e4b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e6b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ec0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114be0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012d510: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012d510: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x000f0f70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127be0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010bf50: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010bf70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x001145b0: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012db90: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012db70: mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e760: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eae0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f650: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb80: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e650: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9e0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3f0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00129bb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x00129dc0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128710: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c00: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x00129910: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0012e4a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x001153a0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127bb0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c230: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf20: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012bee0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e500: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d270: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff10: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e940: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129490: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae0: mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0009df4d: mov edx, ecx; mov ecx, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00071c94: mov edx, ecx; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp edx; 
0x0011f6c8: mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0009306a: mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0008a54d: mov edx, edi; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008a587: mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x000df1c5: mov edx, esi; call dword ptr gs:[0x10]; 
0x001a890e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 8]; ret; 
0x001a7d8e: mov es, word ptr [eax]; add byte ptr [eax], al; lea eax, [edi - 8]; pop edi; ret; 
0x000371ce: mov es, word ptr [ebp + 0x1fffffd]; lds ebp, ptr [ecx]; ret; 
0x000838e8: mov es, word ptr [ebx - 0x74fffffc]; push edx; add al, 0x8b; jl 0x83917; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0014e785: mov es, word ptr [ebx]; add byte ptr [ecx + 0xee68cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0004866d: mov esi, 0x243c83d3; adc byte ptr [ebx - 0x6af068cc], cl; ret 0xd789; 
0x00047bc9: mov esi, 0x243c83db; adc byte ptr [edi], cl; xchg esp, eax; ret 0xc8b; 
0x000e0874: mov esi, 0x246c8903; add al, 0x83; ret; 
0x00130f92: mov esi, 0x31570010; call dword ptr [esi + 0x53]; 
0x000a7121: mov esi, 0x3c64; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x0009329e: mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x0010ba2a: mov esi, 0x768dfff9; add byte ptr [ecx], dh; rol byte ptr [edi + 0x3fec87], 0; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0010b13b: mov esi, 0x810007c4; ret; 
0x000fd73b: mov esi, 0x8100089e; ret; 
0x000e7db9: mov esi, 0x83000000; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0016db4c: mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0011028c: mov esi, 0x83fffffe; ret 0x8902; 
0x0004153e: mov esi, 0x89000817; ret; 
0x000310db: mov esi, 0x893a3cd0; push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x0006322a: mov esi, 0x89c68900; ret 0x44c7; 
0x0006f25d: mov esi, 0x89c68900; ret; 
0x001469ae: mov esi, 0x89ffff4b; ret 0x2eb8; 
0x0005a116: mov esi, 0x8b1b244c; je 0x5a141; sbb al, 0x89; ret 0xc801; 
0x00139399: mov esi, 0xc483ffef; adc byte ptr [eax - 0x73], dl; xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x000ac2c4: mov esi, 0xda390114; je 0xac2c0; pop ebx; ret; 
0x001a9dde: mov esi, 0xf6000000; ret 0xf0f; 
0x000ac325: mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x00190ec1: mov esi, 0xff6736e8; inc dword ptr [ecx + 0x48299c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013a6d6: mov esi, 0xfff9c4e8; jmp dword ptr [esi - 0x70]; 
0x000323d1: mov esi, 0xffff3be9; push esi; ret 0xf03; 
0x0012c8b7: mov esi, 5; call dword ptr gs:[0x10]; 
0x00093c4d: mov esi, 8; call dword ptr gs:[0x10]; 
0x0003cb61: mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00093904: mov esi, 8; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0010d6dd: mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003cc04: mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093065: mov esi, 8; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x00053410: mov esi, dword ptr [0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0010d6f0: mov esi, dword ptr [ebp - 0x144]; push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000e9b3b: mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x001508a8: mov esi, dword ptr [ebx]; mov dword ptr [esp], ebx; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0013982d: mov esi, dword ptr [ecx + 4]; mov edi, dword ptr [ecx + 8]; mov ebp, dword ptr [ecx + 0xc]; nop; jmp edx; 
0x0012232f: mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012dc84: mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012c91f: mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x0011f6c4: mov esi, dword ptr [esp + 0x18]; mov edx, ecx; mov edi, dword ptr [esp + 0x1c]; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0011594b: mov esi, dword ptr [esp + 0x1bc]; lea edx, [esp + 0x2c]; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000613a3: mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00064990: mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x0012d1ea: mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaf84: mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00061403: mov esi, dword ptr [esp + 0x20]; test edi, edi; je 0x61430; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x0005341a: mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0009bded: mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00128aec: mov esi, dword ptr [esp + 0x2c]; lea eax, [ebx - 1]; cmp eax, 2; jbe 0x128b20; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0012061e: mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0012dc2e: mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0010c0c6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e7a: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7bf6: mov esi, dword ptr [esp + 0x44]; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0016d8ca: mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0012de56: mov esi, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00120e4b: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d85: mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00115b0a: mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00121c8b: mov esi, dword ptr [esp + 0x78]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x0012d14f: mov esi, dword ptr [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x001149be: mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00114c7c: mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0005bc9c: mov esi, dword ptr [esp + 0xc]; push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x000a065c: mov esi, dword ptr [esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a054e: mov esi, dword ptr [esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x00187609: mov esi, dword ptr [esp]; ret; 
0x000a065b: mov esi, dword ptr fs:[esp + 4]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a054d: mov esi, dword ptr fs:[esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0005340f: mov esi, dword ptr gs:[0x14]; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x00181429: mov esi, eax; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x0011a604: mov esi, eax; jmp dword ptr [ebp - 0x5f]; 
0x00087354: mov esi, eax; lea esi, cs:[esi]; nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x0016d5e7: mov esi, eax; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0012df8f: mov esi, edi; call dword ptr gs:[0x10]; 
0x000aa51b: mov esi, edi; jmp dword ptr [ebp - 0x75]; 
0x0013044e: mov esi, edi; mov edx, 0x100; call dword ptr gs:[0x10]; 
0x00047196: mov esi, edx; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000471a3: mov esi, edx; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x000960d3: mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000c2c5f: mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000c2cdf: mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2cb5: mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2d1f: mov esi, edx; ret; 
0x000acddd: mov esi, esi; push esi; inc ecx; jbe 0xacdf4; cmove eax, edx; ret; 
0x0014e78a: mov esi, fs; push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x00043353: mov esp, 0x1508dc0; mov eax, edx; ret; 
0x0009a745: mov esp, 0x1b2cc3; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x0004336c: mov esp, 0x1c283d0; test eax, eax; cmovne eax, edx; ret; 
0x00069a78: mov esp, 0x1fffffb; ret 0x9589; 
0x00069c16: mov esp, 0x1fffffb; ret 0xd801; 
0x00069e08: mov esp, 0x1fffffb; ret 0xf001; 
0x000684de: mov esp, 0x1fffffb; ret 0xf801; 
0x0006065f: mov esp, 0x24424; add byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax + 0x68]; 
0x00035a6d: mov esp, 0x2e55808d; stc; call dword ptr [eax - 0x18]; 
0x00194726: mov esp, 0x3000452; sbb al, 0xbb; jmp ebx; 
0x000c103a: mov esp, 0x300109f; or al, 0x91; jmp ecx; 
0x00090330: mov esp, 0x3900060b; ret; 
0x00082544: mov esp, 0x3900768d; ret; 
0x0005d75a: mov esp, 0x39c829d2; ret 0x8d0f; 
0x000358fc: mov esp, 0x408dc189; add dword ptr [ecx + 0x418db445], ecx; sbb al, 0x89; ret 0x25; 
0x00174098: mov esp, 0x43024; add al, ch; sbb eax, 0x8900002c; ret; 
0x00095272: mov esp, 0x4f8b0005; push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00082b2f: mov esp, 0x5250d029; push edi; call dword ptr [ebx + 0x38]; 
0x000952b8: mov esp, 0x548b0005; and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00135607: mov esp, 0x558e808d; stc; call dword ptr [eax - 1]; 
0x001355c7: mov esp, 0x55ad808d; stc; call dword ptr [eax - 1]; 
0x001b0398: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret 4; 
0x00027eee: mov esp, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x00180ae1: mov esp, 0x5b000001; pop esi; pop edi; pop ebp; ret; 
0x0014cd18: mov esp, 0x5b000002; pop esi; pop edi; pop ebp; ret; 
0x0015f452: mov esp, 0x5b000008; pop esi; pop edi; pop ebp; ret; 
0x000b9fe0: mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000b9ce0: mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x000b07da: mov esp, 0x5fd001d2; pop esi; ret; 
0x000c1d01: mov esp, 0x5ff801c0; ret; 
0x000c1031: mov esp, 0x65d9e8d2; or al, 0; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ff7: mov esp, 0x6613e8d2; or al, 0; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fd3: mov esp, 0x6637e8d2; or al, 0; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb5: mov esp, 0x6655e8d2; or al, 0; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10f5: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb155: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b15: mov esp, 0x72da39d2; movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0004347e: mov esp, 0x74c085c8; or al, 0x83; rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x000c1d31: mov esp, 0x76c229c0; cmp dword ptr [ecx], eax; clc; pop edi; ret; 
0x000c1d44: mov esp, 0x76c229c0; lea eax, es:[edi + eax + 0x10]; pop edi; ret; 
0x000c1d64: mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c1d54: mov esp, 0x76c229c0; push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000aaa78: mov esp, 0x80fff5eb; in eax, 2; lea edx, [edx - 0x179ac4]; cmove eax, edx; ret; 
0x0009463d: mov esp, 0x81000f2f; ret; 
0x00197d3d: mov esp, 0x81fffef8; ret; 
0x0019763d: mov esp, 0x81fffeff; ret; 
0x0019723d: mov esp, 0x81ffff03; ret; 
0x00196b3d: mov esp, 0x81ffff0a; ret; 
0x0019583d: mov esp, 0x81ffff1d; ret; 
0x0019383d: mov esp, 0x81ffff3d; ret; 
0x00094d78: mov esp, 0x83000000; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0008d707: mov esp, 0x8300001a; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000eb245: mov esp, 0x83c0458b; ror byte ptr [edi], 0x89; ret 0x25; 
0x000b99f3: mov esp, 0x83ce01d2; ret 0x2910; 
0x000b07e4: mov esp, 0x83d001d2; rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x000b07fe: mov esp, 0x83d001d2; sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000b07f1: mov esp, 0x83d001d2; shl byte ptr [eax], 0x5f; pop esi; ret; 
0x00068305: mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x0007c900: mov esp, 0x8b000000; inc esi; push 0x850fc085; ret 0; 
0x00050894: mov esp, 0x8b000000; lodsb al, byte ptr [esi]; and al, 0x8c; sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0005e69a: mov esp, 0x8b000000; test byte ptr [eax], ah; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x000a9b68: mov esp, 0x8bfff54d; cdq; pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x00145f90: mov esp, 0x8bfffffb; inc ebp; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00068766: mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x0011594e: mov esp, 0x8d000001; push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x001086bf: mov esp, 0x9024; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x000bdd31: mov esp, 0x98d9e8d2; or al, 0; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf7: mov esp, 0x9913e8d2; or al, 0; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a78a0: mov esp, 0xa8000000; inc eax; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x00043730: mov esp, 0xbad284c0; or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x0004374e: mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x000d34ab: mov esp, 0xc0830a8b; add al, 0x83; ret 0x8904; 
0x0016de68: mov esp, 0xc4830000; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000bb00a: mov esp, 0xc600e8d2; or al, 0; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe5: mov esp, 0xc625e8d2; or al, 0; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000437d0: mov esp, 0xd28566c0; mov edx, 0x10; cmove eax, edx; ret; 
0x000b99da: mov esp, 0xdc30e8d2; or al, 0; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b5: mov esp, 0xdc55e8d2; or al, 0; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00104cb6: mov esp, 0xf824; add byte ptr [edi], cl; dec esp; ret; 
0x00065a82: mov esp, 0xf8c16c81; dec dword ptr [ecx + 0x247c8bf8]; pop eax; jmp eax; 
0x000e018f: mov esp, 0xf8e4e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000e08d2: mov esp, 0xf8e63886; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000fb833: mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00106bbb: mov esp, 0xf8f92c96; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00111f44: mov esp, 0xf902d88e; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0017ffc3: mov esp, 0xfbb5e7e8; jmp dword ptr [esi - 0x70]; 
0x000acae6: mov esp, 0xfffe848; inc esp; ret 0x66c3; 
0x0013ae8e: mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x0010d6f2: mov esp, 0xfffffffe; jbe 0x10d719; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x001234f7: mov esp, dword ptr [ecx + ebx*2 - 7]; call dword ptr [ecx + 0x50]; 
0x0009aa91: mov esp, dword ptr [edi + edi*8 + 0x20c483ff]; add esp, 0xc; ret; 
0x0003c7ff: mov esp, ecx; jmp edx; 
0x00172bc9: mov esp, edi; jmp dword ptr [esi - 0x70]; 
0x00095d91: mov fs, ebp; call dword ptr [eax - 0x73]; 
0x000b4288: mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0007627e: mov fs, word ptr [ecx + edx - 0x117d0000]; add dword ptr [ecx], edi; ret 0x840f; 
0x00092df4: mov fs, word ptr [edx + eax]; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00106c30: mov fs, word ptr [edx]; dec eax; stc; call dword ptr [eax - 0x77]; 
0x000c1111: mov gs, eax; cli; or al, 0; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b31: mov gs, eax; fcmovu st(0), st(2); or al, 0; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb171: mov gs, eax; lcall 0x29c1, 0x81000cc4; std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001592bb: mov gs, eax; out dx, eax; and bh, dh; jmp dword ptr [esi - 0x70]; 
0x0013cf71: mov gs, word ptr [eax]; pop eax; stc; dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x001b3982: mov gs, word ptr [ebx - 0x76fffff8]; ret; 
0x0013560a: mov ss, word ptr [ebp - 7]; call dword ptr [eax - 1]; 
0x000d655e: mov ss, word ptr [edi - 0x7cffffd9]; in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363373]; call dword ptr [eax - 0x73]; 
0x00106f26: mov ss, word ptr [esi + 0x3f]; stc; call dword ptr [eax - 0x17]; 
0x000ba010: mov word ptr [0x5e5f0000], es; pop ebx; ret; 
0x000c13cf: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf4c: mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001220ad: mov word ptr [eax + 0x16], dx; ret; 
0x000c14e9: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be056: mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bddf8: mov word ptr [eax + 4], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12cf: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde5c: mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001b0cc8: mov word ptr [eax + eax*4], fs; add byte ptr [eax], al; add cl, ch; ret; 
0x001578bf: mov word ptr [eax + eax], es; add byte ptr [ecx - 0x74dbdbbc], cl; test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x00120881: mov word ptr [eax + ecx*4], fs; add dword ptr [eax], eax; add byte ptr [ebx + 0x518d0cc4], al; call dword ptr [edx + 0x56]; 
0x000bddc3: mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00042553: mov word ptr [eax], dx; mov dword ptr [eax + 0x14], 5; mov dword ptr [eax + 0xc], 0x1000b; xor eax, eax; ret; 
0x000c11e6: mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddb3: mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0010cdaf: mov word ptr [eax], dx; xor eax, eax; ret; 
0x000a72d6: mov word ptr [eax], es; add byte ptr [eax], al; call dword ptr [eax]; 
0x00171562: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000a738a: mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x0011efff: mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003dbd5: mov word ptr [eax], es; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x3dbe9; add esp, 0x9c; ret; 
0x00151349: mov word ptr [ebp - 0x64e5b7f], cs; call dword ptr [eax - 0x73]; 
0x0013927d: mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x00095cae: mov word ptr [ebp - 7], gs; call dword ptr [eax - 0x73]; 
0x0016d46f: mov word ptr [ebx - 0x137cfbbd], cs; or al, 0x53; call dword ptr [eax + 0x10]; 
0x001a33e5: mov word ptr [ebx - 0x37d60009], ds; pop ebp; pop ebx; ret; 
0x001a0bd8: mov word ptr [ebx - 0x37d60009], ds; pop ebx; ret; 
0x000712f2: mov word ptr [ebx - 0x736b4], ss; add ecx, eax; jmp ecx; 
0x00070a92: mov word ptr [ebx - 0x73734], ss; add ecx, eax; jmp ecx; 
0x0007243e: mov word ptr [ebx - 0x73834], ss; add ecx, eax; jmp ecx; 
0x001a0bd1: mov word ptr [ebx - 0x7b740009], ds; or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a0bcf: mov word ptr [ebx - 0x86474], cs; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x00149376: mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x00029bf5: mov word ptr [ebx - 7], gs; call dword ptr [eax + 0x68]; 
0x00029a54: mov word ptr [ebx - 7], gs; call dword ptr [eax - 0x73]; 
0x0003ddd5: mov word ptr [ebx], ss; add byte ptr [eax], al; push eax; call 0x98dd0; add esp, 0x1c; ret; 
0x0014b001: mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x000b3e52: mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000b3e94: mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x00139423: mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x00192c6d: mov word ptr [ecx - 1], cs; inc dword ptr [ecx + 0x4696fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0002ef88: mov word ptr [ecx - 7], gs; call dword ptr [eax - 0x73]; 
0x000b3e20: mov word ptr [ecx], dx; mov byte ptr [ecx + 2], dl; pop ebx; ret; 
0x000b3e10: mov word ptr [ecx], dx; pop ebx; ret; 
0x0011575f: mov word ptr [ecx], es; add byte ptr [eax], al; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0012c6fa: mov word ptr [ecx], ss; mov bh, ch; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x000bb95c: mov word ptr [edi + 0x10], cx; lea eax, [edi + 0x12]; pop edi; pop esi; pop ebx; ret; 
0x000ba27c: mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000bba66: mov word ptr [edi + 0x18], cx; lea eax, [edi + 0x1a]; pop edi; pop esi; pop ebx; ret; 
0x000ba386: mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba138: mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x000bb86c: mov word ptr [edi + 8], dx; lea eax, [edi + 0xa]; pop edi; pop esi; pop ebx; ret; 
0x000ba18c: mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000fda00: mov word ptr [edi - 0xe], ss; dec dword ptr [ecx - 0x7b17dbcc]; push edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015f16b: mov word ptr [edi - 0xf], es; call dword ptr [eax - 0x73]; 
0x00024f58: mov word ptr [edi - 7], fs; call dword ptr [eax + 0x6a]; 
0x000ba106: mov word ptr [edi], cx; mov byte ptr [edi + 2], dl; pop edi; pop esi; pop ebx; ret; 
0x000bb793: mov word ptr [edi], dx; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000ba0f3: mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000b9e10: mov word ptr [edi], es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0011765c: mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190fc: mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x000b6248: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; pop edi; ret; 
0x000b6388: mov word ptr [edx + 4], ax; lea eax, [edx + 5]; ret; 
0x000c060b: mov word ptr [edx + 4], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e78: mov word ptr [edx + 4], ax; mov eax, edi; pop edi; ret; 
0x000b1fa8: mov word ptr [edx + 4], ax; mov eax, edx; ret; 
0x000ac694: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; lea eax, [edx + 5]; pop ebx; pop esi; ret; 
0x000ac5d4: mov word ptr [edx + 4], bx; mov dword ptr [edx], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000b629c: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63dc: mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000c067f: mov word ptr [edx + 8], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1ebc: mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1ffc: mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x0006615b: mov word ptr [edx - 0x74014], es; jmp ecx; 
0x0013ae68: mov word ptr [edx - 0xb], cs; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00190d35: mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193f1c: mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f0c: mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00190d55: mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193fb0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195fa0: mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0002dbbf: mov word ptr [edx - 7], gs; call dword ptr [eax + 0x68]; 
0x0002d728: mov word ptr [edx - 7], gs; call dword ptr [eax - 0x73]; 
0x000b6203: mov word ptr [edx], ax; lea eax, [edx + 1]; pop edi; ret; 
0x000b6343: mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b6213: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; pop edi; ret; 
0x000b6353: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; lea eax, [edx + 2]; ret; 
0x000b1e53: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edi; pop edi; ret; 
0x000b1f73: mov word ptr [edx], ax; mov al, byte ptr [ecx + 2]; mov byte ptr [edx + 2], al; mov eax, edx; ret; 
0x000c05a6: mov word ptr [edx], ax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1e43: mov word ptr [edx], ax; mov eax, edi; pop edi; ret; 
0x000b1f63: mov word ptr [edx], ax; mov eax, edx; ret; 
0x0019655b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x0019459b: mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ac650: mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000ac5a0: mov word ptr [edx], si; mov eax, edx; mov byte ptr [edx + 2], 0; pop ebx; pop esi; ret; 
0x000ac598: mov word ptr [edx], si; mov eax, edx; pop ebx; pop esi; ret; 
0x000a9d2c: mov word ptr [esi + 0x41f6ffe7], ss; jne 0xa9d36; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x00064995: mov word ptr [esi - 0x73e94], es; jmp ecx; 
0x0006525b: mov word ptr [esi - 0x73f14], es; jmp ecx; 
0x00024f75: mov word ptr [esi], fs; push ss; add byte ptr [0x217e9b], al; lea eax, [eax - 0x6908c]; ret; 
0x000500fc: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9bdb8c], cl; ret 0xf7ff; 
0x0005e1f7: mov word ptr [esp + ebp*4], fs; add byte ptr [eax], al; add dh, dh; ret; 
0x000d066c: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000491ba: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9cec: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x001b1e05: mov word ptr [esp + ebx*4], fs; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000dba82: mov word ptr [esp + esi], fs; add dword ptr [eax], eax; add byte ptr [ecx], bl; fimul dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x00193e19: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e19: movd dword ptr [eax - 8], mm0; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001944b9: movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019404a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019603a: movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000bbcf1: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f1: movdqa xmmword ptr [edi], xmm0; add edi, 0x10; call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00190fae: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019603f: movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00190fde: movdqa xmmword ptr [edx - 0x11], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019100e: movdqa xmmword ptr [edx - 0x12], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019106e: movdqa xmmword ptr [edx - 0x14], xmm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019109e: movdqa xmmword ptr [edx - 0x15], xmm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001910ce: movdqa xmmword ptr [edx - 0x16], xmm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019113e: movdqa xmmword ptr [edx - 0x18], xmm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019116e: movdqa xmmword ptr [edx - 0x19], xmm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911ae: movdqa xmmword ptr [edx - 0x1a], xmm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194045: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196035: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00190fa9: movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190fa4: movdqa xmmword ptr [edx - 0x30], xmm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000b61e0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6490: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b1e20: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b20b0: movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bdf10: movdqu xmm0, xmmword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15d0: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be10d: movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1570: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ad: movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1590: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0cd: movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15b0: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ed: movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13aa: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf24: movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfa7: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c140a: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf87: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13ea: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf67: movdqu xmmword ptr [eax], xmm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1387: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf14: movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13cb: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf48: movdqu xmmword ptr [eax], xmm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15cc: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be109: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c156c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0a9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c158c: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0c9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15ac: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0e9: movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be029: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be06c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be08c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c148c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be009: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be04d: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c144c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfc9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c146c: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfe9: movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bbb2d: movdqu xmmword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ba460: movdqu xmmword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba43d: movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bbd7c: movdqu xmmword ptr [edi + 0x30], xmm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ba67c: movdqu xmmword ptr [edi + 0x30], xmm7; pop edi; pop esi; pop ebx; ret; 
0x000bbacd: movdqu xmmword ptr [edi + 0xd], xmm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ba3dd: movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3fd: movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bbb0d: movdqu xmmword ptr [edi + 0xf], xmm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ba41d: movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba560: movdqu xmmword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb924: movdqu xmmword ptr [edi], xmm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ba257: movdqu xmmword ptr [edi], xmm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba2b7: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba297: movdqu xmmword ptr [edi], xmm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba278: movdqu xmmword ptr [edi], xmm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba439: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3d9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3f9: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba419: movdqu xmmword ptr [edi], xmm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba339: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba2f9: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba319: movdqu xmmword ptr [edi], xmm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba244: movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b61e4: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6494: movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b1e24: movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b20b4: movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x0018a39d: movhlps xmm7, xmm3; jmp dword ptr [esi - 0x70]; 
0x000c14b3: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be02d: movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1513: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be070: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1543: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be090: movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1490: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be00d: movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c14e4: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be051: movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1450: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfcd: movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1470: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfed: movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1330: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdebd: movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1350: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdedd: movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1370: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdefd: movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12ea: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde77: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c130a: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde97: movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1287: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde24: movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12cb: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde58: movlpd qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c132c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdeb9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c134c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bded9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c136c: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdef9: movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3ec4: movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ed4: movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ee4: movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3ef4: movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3e80: movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3ea0: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eb0: movlpd qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e90: movlpd qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ec0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ed0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ee0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3ef0: movlpd qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3e70: movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000bba1d: movlpd qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ba360: movlpd qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba3a0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba3c0: movlpd qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba381: movlpd qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba33d: movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba2fd: movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000bb9fd: movlpd qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ba31d: movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba544: movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb8cd: movlpd qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ba1ed: movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba554: movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba20d: movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba22d: movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba4e0: movlpd qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb834: movlpd qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ba167: movlpd qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba1a7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba1c7: movlpd qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba188: movlpd qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ba540: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba1e9: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba550: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba209: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba229: movlpd qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba154: movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bab6d: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000baccd: movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000c06e0: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b952d: movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b968d: movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b62dd: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643d: movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1efd: movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b205d: movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000bab8d: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000baced: movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000c0700: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b954d: movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ad: movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b62fd: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645d: movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f1d: movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b207d: movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000babad: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0d: movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000c0720: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b956d: movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96cd: movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b631d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647d: movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f3d: movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4b00: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b209d: movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000baa3c: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2d: movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b941c: movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ed: movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b8008: movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c094c: movlpd qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000c057c: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c18: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6cc: movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b90a9: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6164: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a4: movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7f8f: movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd7a7: movlpd qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd7c7: movlpd qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b6277: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b63b7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1e97: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1fd7: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c08f0: movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b62b7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63f7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1ed7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b2017: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b61a7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b6417: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7fc7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3bd7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1de7: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b4b50: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b2037: movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd7e7: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd807: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001aa824: movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0525: movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b9f: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da4: movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4bc9: movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1fc4: movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6298: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63d8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1eb8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1ff8: movlpd qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b62d9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6439: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2059: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b62f9: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b6459: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f19: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b2079: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6319: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b6479: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f39: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4afc: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b2099: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b8004: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c0578: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c14: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6c8: movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000bab64: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9524: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9684: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab84: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9544: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad04: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9564: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa33: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad24: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9413: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e4: movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000bab68: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc8: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000c06db: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b9528: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9688: movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab88: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9548: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a8: movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad08: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9568: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c8: movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa37: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad28: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9417: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e8: movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b63b0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd0: movlpd xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b63f0: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2010: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b6410: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2030: movlpd xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6160: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7f8b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001aa820: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0521: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b9b: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4bc5: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1fc0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bacc0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9680: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bace0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b96a0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000bad00: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b96c0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000bad20: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b96e0: movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b6430: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b2050: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6450: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2070: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6470: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2090: movlpd xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bde30: movlpd xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1283: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde20: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba150: movlpd xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b62d4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6434: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef4: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2054: movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6454: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2074: movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6474: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2094: movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bdeb4: movlpd xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c14b4: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be02e: movlps qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1514: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be071: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1544: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be091: movlps qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1491: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be00e: movlps qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c14e5: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be052: movlps qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1451: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfce: movlps qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1471: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfee: movlps qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1331: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdebe: movlps qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1351: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdede: movlps qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1371: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdefe: movlps qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12eb: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde78: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c130b: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde98: movlps qword ptr [eax], xmm0; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1288: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde25: movlps qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12cc: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde59: movlps qword ptr [eax], xmm0; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c132d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdeba: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c134d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdeda: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c136d: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdefa: movlps qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000b3ec5: movlps qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ed5: movlps qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ee5: movlps qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3ef5: movlps qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3e81: movlps qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3ea1: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 7], edx; pop ebx; ret; 
0x000b3eb1: movlps qword ptr [ecx], xmm0; mov dword ptr [ecx + 8], edx; pop ebx; ret; 
0x000b3e91: movlps qword ptr [ecx], xmm0; mov word ptr [ecx + 8], dx; pop ebx; ret; 
0x000b3ec1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 5], xmm0; pop ebx; ret; 
0x000b3ed1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 6], xmm0; pop ebx; ret; 
0x000b3ee1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 7], xmm0; pop ebx; ret; 
0x000b3ef1: movlps qword ptr [ecx], xmm0; movlpd qword ptr [ecx + 8], xmm0; pop ebx; ret; 
0x000b3e71: movlps qword ptr [ecx], xmm0; pop ebx; ret; 
0x000bba1e: movlps qword ptr [edi + 0x10], xmm2; lea eax, [edi + 0x18]; pop edi; pop esi; pop ebx; ret; 
0x000ba361: movlps qword ptr [edi + 0x10], xmm2; mov byte ptr [edi + 0x18], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba3a1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x17], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba3c1: movlps qword ptr [edi + 0x10], xmm2; mov dword ptr [edi + 0x18], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba382: movlps qword ptr [edi + 0x10], xmm2; mov word ptr [edi + 0x18], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba33e: movlps qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba2fe: movlps qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000bb9fe: movlps qword ptr [edi + 0xf], xmm3; lea eax, [edi + 0x17]; pop edi; pop esi; pop ebx; ret; 
0x000ba31e: movlps qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba545: movlps qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb8ce: movlps qword ptr [edi + 5], xmm1; lea eax, [edi + 0xd]; pop edi; pop esi; pop ebx; ret; 
0x000ba1ee: movlps qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba555: movlps qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba20e: movlps qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba22e: movlps qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba4e1: movlps qword ptr [edi - 1], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bb835: movlps qword ptr [edi], xmm0; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x000ba168: movlps qword ptr [edi], xmm0; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba1a8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba1c8: movlps qword ptr [edi], xmm0; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba189: movlps qword ptr [edi], xmm0; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ba541: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba1ea: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba551: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba20a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba22a: movlps qword ptr [edi], xmm0; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba155: movlps qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bab6e: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacce: movlps qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000c06e1: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b952e: movlps qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b968e: movlps qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000b62de: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643e: movlps qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1efe: movlps qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b205e: movlps qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000bab8e: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bacee: movlps qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000c0701: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b954e: movlps qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ae: movlps qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b62fe: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645e: movlps qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f1e: movlps qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b207e: movlps qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000babae: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0e: movlps qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000c0721: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b956e: movlps qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ce: movlps qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b631e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647e: movlps qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f3e: movlps qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4b01: movlps qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b209e: movlps qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000baa3d: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2e: movlps qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b941d: movlps qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ee: movlps qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b8009: movlps qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c094d: movlps qword ptr [edx + 8], xmm1; mov byte ptr [edx + 0x10], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000c057d: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c19: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6cd: movlps qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000b90aa: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6165: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a5: movlps qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7f90: movlps qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x000bd7a8: movlps qword ptr [edx], xmm0; mov al, byte ptr [ecx + 8]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000bd7c8: movlps qword ptr [edx], xmm0; mov ax, word ptr [ecx + 8]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b6278: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b63b8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1e98: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1fd8: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000c08f1: movlps qword ptr [edx], xmm0; mov byte ptr [edx + 8], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b62b8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63f8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1ed8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b2018: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b61a8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b6418: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b7fc8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xc]; pop edi; pop ebx; ret; 
0x000b3bd8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1de8: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b4b51: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b2038: movlps qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000bd7e8: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 7]; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000bd808: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x001aa825: movlps qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0526: movlps qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3ba0: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da5: movlps qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4bca: movlps qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1fc5: movlps qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000b6299: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63d9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1eb9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1ff9: movlps qword ptr [edx], xmm0; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000b62da: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b643a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1efa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b205a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b62fa: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b645a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f1a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b207a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b631a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b647a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f3a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4afd: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b209a: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000b8005: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; lea eax, [edx + 0x10]; pop edi; pop ebx; ret; 
0x000c0579: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3c15: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; pop ebx; ret; 
0x000bd6c9: movlps qword ptr [edx], xmm0; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000bab65: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9525: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9685: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab85: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9545: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad05: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9565: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa34: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad25: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9414: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e5: movlps qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000bab69: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; pop edi; ret; 
0x000bacc9: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000c06dc: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b9529: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edi; pop edi; ret; 
0x000b9689: movlps xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bab89: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bace9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b9549: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96a9: movlps xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000baba9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad09: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b9569: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96c9: movlps xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000baa38: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad29: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b9418: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edi; pop edi; ret; 
0x000b96e9: movlps xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b63b1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1fd1: movlps xmm0, qword ptr [ecx]; mov al, byte ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b63f1: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b2011: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b6411: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b2031: movlps xmm0, qword ptr [ecx]; mov eax, dword ptr [ecx + 8]; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6161: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; pop edi; ret; 
0x000b63a1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x000b7f8c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 8]; pop edi; pop ebx; ret; 
0x001aa821: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, dword ptr [ecx + 8]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000c0522: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b3b9c: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; pop ebx; ret; 
0x000b1da1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b4bc6: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; pop ebx; ret; 
0x000b1fc1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bacc1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; lea eax, [edx + 0xc]; ret; 
0x000b9681: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 5]; movlpd qword ptr [edx + 5], xmm0; mov eax, edx; ret; 
0x000bace1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000b96a1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 6]; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000bad01: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000b96c1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 7]; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000bad21: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b96e1: movlps xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; movlpd xmm0, qword ptr [ecx + 8]; movlpd qword ptr [edx + 8], xmm0; mov eax, edx; ret; 
0x000b6431: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b2051: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6451: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2071: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6471: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2091: movlps xmm0, qword ptr [ecx]; movlpd xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bde31: movlps xmm0, qword ptr [esi]; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1284: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde21: movlps xmm0, qword ptr [esi]; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba151: movlps xmm0, qword ptr [esi]; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000b62d5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; pop edi; ret; 
0x000b6435: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; lea eax, [edx + 0xc]; ret; 
0x000b1ef5: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edi; pop edi; ret; 
0x000b2055: movlps xmm1, qword ptr [ecx + 5]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 5], xmm1; mov eax, edx; ret; 
0x000b6455: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b2075: movlps xmm1, qword ptr [ecx + 6]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x000b6475: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b2095: movlps xmm1, qword ptr [ecx + 7]; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x000bdeb5: movlps xmm1, qword ptr [esi + 5]; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 5], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0019404b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019603b: movq mm0, qword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x000b61e1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6491: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b1e21: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000b20b1: movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edx; ret; 
0x000bdf11: movq mm0, qword ptr [esi]; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15d1: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be10e: movq qword ptr [eax + 0x10], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1571: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ae: movq qword ptr [eax + 0xd], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1591: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ce: movq qword ptr [eax + 0xe], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15b1: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ee: movq qword ptr [eax + 0xf], mm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13ab: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf25: movq qword ptr [eax], mm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfa8: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov byte ptr [eax + 0x14], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c140b: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf88: movq qword ptr [eax], mm0; mov dword ptr [eax + 0x10], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13eb: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf68: movq qword ptr [eax], mm0; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1388: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf15: movq qword ptr [eax], mm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c13cc: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf49: movq qword ptr [eax], mm0; mov word ptr [eax + 0x10], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15cd: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be10a: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c156d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0aa: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c158d: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ca: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c15ad: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0ea: movq qword ptr [eax], mm0; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be02a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov byte ptr [eax + 0x18], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be06d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x17], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be08d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov dword ptr [eax + 0x18], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c148d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be00a: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be04e: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0x10], xmm2; mov word ptr [eax + 0x18], cx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c144d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfca: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c146d: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfea: movq qword ptr [eax], mm0; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bbb2e: movq qword ptr [edi + 0x10], mm2; lea eax, [edi + 0x20]; pop edi; pop esi; pop ebx; ret; 
0x000ba461: movq qword ptr [edi + 0x10], mm2; mov byte ptr [edi + 0x20], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba43e: movq qword ptr [edi + 0x10], mm2; pop edi; pop esi; pop ebx; ret; 
0x000bbd7d: movq qword ptr [edi + 0x30], mm7; lea eax, [edi + 0x40]; pop edi; pop esi; pop ebx; ret; 
0x000ba67d: movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x000bbace: movq qword ptr [edi + 0xd], mm2; lea eax, [edi + 0x1d]; pop edi; pop esi; pop ebx; ret; 
0x000ba3de: movq qword ptr [edi + 0xd], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3fe: movq qword ptr [edi + 0xe], mm2; pop edi; pop esi; pop ebx; ret; 
0x000bbb0e: movq qword ptr [edi + 0xf], mm2; lea eax, [edi + 0x1f]; pop edi; pop esi; pop ebx; ret; 
0x000ba41e: movq qword ptr [edi + 0xf], mm2; pop edi; pop esi; pop ebx; ret; 
0x000ba561: movq qword ptr [edi - 1], mm0; pop edi; pop esi; pop ebx; ret; 
0x000bbcf2: movq qword ptr [edi], mm0; add edi, 0x10; call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f2: movq qword ptr [edi], mm0; add edi, 0x10; call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb925: movq qword ptr [edi], mm0; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000ba258: movq qword ptr [edi], mm0; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba2b8: movq qword ptr [edi], mm0; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba298: movq qword ptr [edi], mm0; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba279: movq qword ptr [edi], mm0; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba43a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3da: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3fa: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba41a: movq qword ptr [edi], mm0; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba33a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba2fa: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba31a: movq qword ptr [edi], mm0; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba245: movq qword ptr [edi], mm0; pop edi; pop esi; pop ebx; ret; 
0x0019447d: movq qword ptr [edx + 4], xmm0; mov ecx, dword ptr [eax]; mov dword ptr [edx], ecx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190faf: movq qword ptr [edx - 0x10], mm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196040: movq qword ptr [edx - 0x10], mm0; mov eax, edx; pop ebx; ret; 
0x00190fdf: movq qword ptr [edx - 0x11], mm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019100f: movq qword ptr [edx - 0x12], mm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019106f: movq qword ptr [edx - 0x14], mm0; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019109f: movq qword ptr [edx - 0x15], mm0; mov dword ptr [edx - 5], eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001910cf: movq qword ptr [edx - 0x16], mm0; mov dword ptr [edx - 6], eax; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019113f: movq qword ptr [edx - 0x18], mm0; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019116f: movq qword ptr [edx - 0x19], mm0; movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911af: movq qword ptr [edx - 0x1a], mm0; movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194046: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196036: movq qword ptr [edx - 0x20], mm0; movdqa xmm0, xmmword ptr [eax - 0x10]; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, edx; pop ebx; ret; 
0x00190faa: movq qword ptr [edx - 0x20], mm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00190fa5: movq qword ptr [edx - 0x30], mm0; movdqa xmmword ptr [edx - 0x20], xmm0; movdqa xmmword ptr [edx - 0x10], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001911b3: movq qword ptr [edx - 0xa], xmm0; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193f5d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f4d: movq qword ptr [edx - 0xa], xmm0; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00191143: movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e1d: movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x00191173: movq qword ptr [edx - 9], xmm0; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193ecd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195ebd: movq qword ptr [edx - 9], xmm0; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000b61e5: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6495: movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b1e25: movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b20b5: movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x001944bc: movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00193e18: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e18: movq xmm0, qword ptr [eax - 8]; movq qword ptr [edx - 8], xmm0; mov eax, edx; pop ebx; ret; 
0x001944b8: movq xmm0, qword ptr [eax]; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0002a108: movsb byte ptr es:[edi], byte ptr [esi]; adc al, 0x11; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x00077d58: movsb byte ptr es:[edi], byte ptr [esi]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00177715: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add bh, bh; je 0x177740; sbb al, 0x53; call eax; 
0x000d1050: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x000d7d18: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx - 0x362f4b], cl; dec dword ptr [edi]; mov ebp, 0x89d189f0; ret; 
0x000d9c68: movsb byte ptr es:[edi], byte ptr [esi]; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x0013b9d6: movsb byte ptr es:[edi], byte ptr [esi]; hlt; jmp dword ptr [esi - 0x70]; 
0x000aca21: movsb byte ptr es:[edi], byte ptr [esi]; idiv bh; cmovne eax, edx; ret; 
0x00028f68: movsb byte ptr es:[edi], byte ptr [esi]; mov bl, 0; add byte ptr [ebx - 0x72b3db84], cl; xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x0015d4ba: movsb byte ptr es:[edi], byte ptr [esi]; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0015134c: movsb byte ptr es:[edi], byte ptr [esi]; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x00183a68: movsb byte ptr es:[edi], byte ptr [esi]; or bl, ch; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + edi*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0015d945: movsb byte ptr es:[edi], byte ptr [esi]; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x000c2c5b: movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x0014939a: movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x000ba62e: movsb byte ptr es:[edi], byte ptr [esi]; pop es; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00183d67: movsb byte ptr es:[edi], byte ptr [esi]; push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x00137573: movsb byte ptr es:[edi], byte ptr [esi]; push ebx; call dword ptr [esi + 0x14]; 
0x0012a5b2: movsb byte ptr es:[edi], byte ptr [esi]; push ebx; stc; call dword ptr [edi + 0x50]; 
0x00122ac1: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x811f; 
0x000db3da: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8902; 
0x0017e916: movsb byte ptr es:[edi], byte ptr [esi]; ret 0x8903; 
0x00048b11: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0017e8f5: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x0011580f: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00091ad4: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x00047343: movsb byte ptr es:[edi], byte ptr [esi]; ret 0xfff9; 
0x000db221: movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00123a37: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0012a52e: movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edi - 0x7f]; 
0x00114668: movsb byte ptr es:[edi], byte ptr [esi]; stosb byte ptr es:[edi], al; idiv edi; add esp, 0x2c; ret; 
0x0016d917: movsb byte ptr es:[edi], byte ptr [esi]; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00158108: movsb byte ptr es:[edi], byte ptr [esi]; xor al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x0005dbd1: movsb byte ptr es:[edi], byte ptr [esi]; xor ecx, edi; call dword ptr [eax + 0x57]; 
0x0009329b: movsb byte ptr es:[edi], byte ptr [esi]; xor edx, edx; mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x00124862: movsb byte ptr es:[edi], byte ptr fs:[esi]; stc; call dword ptr [eax - 0x73]; 
0x00059da5: movsd dword ptr es:[di], dword ptr [si]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x0010d55f: movsd dword ptr es:[edi], dword ptr [esi]; add al, 0; add dh, dh; ret 0xf20; 
0x00183347: movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c10fa: movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb15a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b1a: movsd dword ptr es:[edi], dword ptr [esi]; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00128767: movsd dword ptr es:[edi], dword ptr [esi]; imul esi, esi, 0x28c483ff; pop ebx; ret; 
0x0017d007: movsd dword ptr es:[edi], dword ptr [esi]; in eax, 0xfb; jmp dword ptr [esi - 0x70]; 
0x000a81a6: movsd dword ptr es:[edi], dword ptr [esi]; inc esp; stc; call dword ptr [eax + 0x57]; 
0x00086e57: movsd dword ptr es:[edi], dword ptr [esi]; ja 0x86e59; jmp dword ptr [ecx]; 
0x00154017: movsd dword ptr es:[edi], dword ptr [esi]; js 0x15400c; jmp dword ptr [ebp - 0x75]; 
0x00130871: movsd dword ptr es:[edi], dword ptr [esi]; lds edx, ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x00091211: movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00153af0: movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000fb625: movsd dword ptr es:[edi], dword ptr [esi]; mov eax, 0x20; mov edx, 0x40; cmove eax, edx; ret; 
0x00162a07: movsd dword ptr es:[edi], dword ptr [esi]; mov edi, ebp; jmp dword ptr [esi - 0x70]; 
0x000c2cde: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2cb4: movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00090e19: movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000c2cb2: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2d1b: movsd dword ptr es:[edi], dword ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x00042dbe: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x0006cd18: movsd dword ptr es:[edi], dword ptr [esi]; ret 0xffff; 
0x00053f3e: movsd dword ptr es:[edi], dword ptr [esi]; ret; 
0x0012ba79: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0012ba69: movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00160fb3: movsd dword ptr es:[edi], dword ptr [esi]; std; call dword ptr [eax + 0x50]; 
0x00059d37: movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059d12: movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00059dcb: movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x0018105b: movsd dword ptr es:[edi], dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x000c2d1d: movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000c2cb1: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2d1a: movsw word ptr es:[edi], word ptr [esi]; rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x0019b6ea: movsx edi, si; inc dword ptr [ecx + 0x3e9f2c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000ac2c3: movsx edx, byte ptr [ecx + eax]; cmp edx, ebx; je 0xac2c0; pop ebx; ret; 
0x0009c6e4: movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x0017aa28: movzx eax, al; add esp, 0x1c; ret; 
0x0011ec64: movzx eax, al; add esp, 0x4c; ret; 
0x0016fac8: movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0012573e: movzx eax, al; add esp, 8; pop ebx; ret; 
0x000431ae: movzx eax, al; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0009c6f9: movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x0003c678: movzx eax, al; mov dword ptr [ebx + 0x18], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0012286b: movzx eax, al; neg eax; add esp, 0xc; ret; 
0x0012cf1f: movzx eax, al; neg eax; ret; 
0x000895f7: movzx eax, al; pop ebx; neg eax; ret; 
0x00134661: movzx eax, al; pop ebx; pop esi; neg eax; ret; 
0x00089a99: movzx eax, al; pop ebx; pop esi; pop edi; ret; 
0x0016fa34: movzx eax, al; pop ebx; pop esi; ret; 
0x0008f6b5: movzx eax, al; pop ebx; ret; 
0x0005b65b: movzx eax, al; pop edi; ret; 
0x0003d502: movzx eax, al; ret; 
0x0011ad59: movzx eax, al; sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x0009c5c5: movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0004334e: movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0014c87c: movzx eax, ax; add esp, 0x2c; ret; 
0x0013f985: movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0004324f: movzx eax, ax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000433ef: movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0006614a: movzx eax, bl; mov edx, dword ptr [esp + 0x20]; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00066151: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065251: movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x000651f2: movzx eax, byte ptr [eax + edx - 0x20]; add edi, dword ptr [esi + eax*4 - 0x73f94]; mov eax, edi; mov edi, ecx; jmp eax; 
0x00064cf2: movzx eax, byte ptr [eax + edx - 0x20]; add edi, dword ptr [esi + eax*4 - 0x74094]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0013974a: movzx eax, byte ptr [eax + edx*2 + 1]; shr al, 6; and eax, 1; pop ebx; ret; 
0x00064ca1: movzx eax, byte ptr [eax + esi - 0x20]; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x0008c6f6: movzx eax, byte ptr [eax - 1]; and dword ptr [ebx], 0xffffffef; add esp, 4; pop ebx; pop esi; ret; 
0x001a41ed: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a72b7: movzx eax, byte ptr [eax - 1]; cmp al, byte ptr [edx - 1]; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x00193fac: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f9c: movzx eax, byte ptr [eax - 1]; mov word ptr [edx - 3], cx; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x0008beab: movzx eax, byte ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x00194630: movzx eax, byte ptr [eax]; mov byte ptr [edx], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001a3f42: movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008996e: movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0018937f: movzx eax, byte ptr [eax]; ret; 
0x00087168: movzx eax, byte ptr [eax]; shr al, 2; and eax, 1; xor eax, 1; ret; 
0x00087188: movzx eax, byte ptr [eax]; shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00087ef8: movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00087f18: movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x001a3a45: movzx eax, byte ptr [edi + ecx]; movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x000fad59: movzx eax, byte ptr [edx + 1]; add edx, 1; test al, al; jne 0xfad31; xor eax, eax; ret; 
0x0013f863: movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0019e55d: movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019cd94: movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019e57d: movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0019cda4: movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019e59d: movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019cdb4: movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019e5bd: movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019cdc4: movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019e5dd: movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0019cdd4: movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019e5fd: movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019cde4: movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019e521: movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019cd74: movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a0be3: movzx eax, byte ptr [edx]; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x0008dd0e: movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x001893b9: movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x00087f86: movzx eax, byte ptr [edx]; ret; 
0x0019e53c: movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019cd83: movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0008bf46: movzx eax, byte ptr [edx]; sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x00065a7c: movzx eax, byte ptr [esi + eax - 0x20]; add edi, dword ptr [ecx + eax*4 - 0x73e94]; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x0006498b: movzx eax, byte ptr [esi + eax - 0x20]; mov esi, dword ptr [esp + 0x20]; add ecx, dword ptr [esi + eax*4 - 0x73e94]; jmp ecx; 
0x0002834a: movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x0013fcb0: movzx eax, dl; ret; 
0x0004372b: movzx eax, dl; tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000437cb: movzx eax, dx; tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00034b87: movzx eax, word ptr [eax + edx*2 + 0x100]; and eax, dword ptr [esp + 8]; ret; 
0x00034862: movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x00034832: movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x00034802: movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x00034742: movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x000347a2: movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346b2: movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x00034772: movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x00034712: movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x00034912: movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346e2: movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347d2: movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x00034682: movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x0013cee4: movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x000da06f: movzx ebx, bl; lea ebx, [ebx + ebx - 1]; mov eax, ebx; pop ebx; pop esi; ret; 
0x00148479: movzx ebx, byte ptr [eax]; test ebx, ebx; jne 0x148448; mov eax, 1; pop ebx; ret; 
0x0014c8a7: movzx ebx, word ptr [ecx + 2]; xor eax, eax; cmp word ptr [edx + 2], bx; je 0x14c8b8; pop ebx; ret; 
0x001278bc: movzx ecx, al; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0019e810: movzx ecx, byte ptr [eax + 0xf]; cmp byte ptr [edx + 0xf], cl; jne 0x19e670; pop ebp; xor eax, eax; ret; 
0x0019e559: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; pop ebp; ret; 
0x0019cd90: movzx ecx, byte ptr [eax + 1]; movzx eax, byte ptr [edx + 1]; sub eax, ecx; ret; 
0x0019e579: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; pop ebp; ret; 
0x0019cda0: movzx ecx, byte ptr [eax + 2]; movzx eax, byte ptr [edx + 2]; sub eax, ecx; ret; 
0x0019e599: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; pop ebp; ret; 
0x0019cdb0: movzx ecx, byte ptr [eax + 3]; movzx eax, byte ptr [edx + 3]; sub eax, ecx; ret; 
0x0019e5b9: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; pop ebp; ret; 
0x0019cdc0: movzx ecx, byte ptr [eax + 4]; movzx eax, byte ptr [edx + 4]; sub eax, ecx; ret; 
0x0019e5d9: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; pop ebp; ret; 
0x0019cdd0: movzx ecx, byte ptr [eax + 5]; movzx eax, byte ptr [edx + 5]; sub eax, ecx; ret; 
0x0019e5f9: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019cde0: movzx ecx, byte ptr [eax + 6]; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x0019e51d: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019cd70: movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001a40a4: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a715a: movzx ecx, byte ptr [eax - 1]; cmp cl, byte ptr [edx - 1]; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x00193e88: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e78: movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x000c2932: movzx ecx, byte ptr [eax]; cmp cl, byte ptr [edx]; jne 0xc293d; xor eax, eax; pop ebx; ret; 
0x00194508: movzx ecx, byte ptr [eax]; mov byte ptr [edx], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0019e539: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; pop ebp; ret; 
0x0019cd80: movzx ecx, byte ptr [eax]; movzx eax, byte ptr [edx]; sub eax, ecx; ret; 
0x0011327d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0x113263; xor eax, eax; pop ebx; ret; 
0x000f100d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf0ff3; xor eax, eax; pop ebx; ret; 
0x000f3b1d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf3b03; xor eax, eax; pop ebx; ret; 
0x000f490d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf48f3; xor eax, eax; pop ebx; ret; 
0x000f743d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf7423; xor eax, eax; pop ebx; ret; 
0x000f824d: movzx ecx, byte ptr [eax]; test cl, cl; jne 0xf8233; xor eax, eax; pop ebx; ret; 
0x001a3a49: movzx ecx, byte ptr [esi + ecx]; sub eax, ecx; pop esi; pop edi; ret; 
0x00042d2a: movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e2e: movzx ecx, cl; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00042e0b: movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x00042edf: movzx ecx, cx; mov eax, 0x80000000; bsr ecx, ecx; xor ecx, 0x1f; shr eax, cl; ret; 
0x00193f18: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195f08: movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x00194598: movzx ecx, word ptr [eax]; mov word ptr [edx], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00159f78: movzx edx, byte ptr [eax + 9]; pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x001132b0: movzx edx, byte ptr [eax]; test dl, dl; je 0x113284; pop ebx; ret; 
0x000f1040: movzx edx, byte ptr [eax]; test dl, dl; je 0xf1014; pop ebx; ret; 
0x000f3b50: movzx edx, byte ptr [eax]; test dl, dl; je 0xf3b24; pop ebx; ret; 
0x000f4940: movzx edx, byte ptr [eax]; test dl, dl; je 0xf4914; pop ebx; ret; 
0x000f7470: movzx edx, byte ptr [eax]; test dl, dl; je 0xf7444; pop ebx; ret; 
0x000f8280: movzx edx, byte ptr [eax]; test dl, dl; je 0xf8254; pop ebx; ret; 
0x000712e8: movzx edx, byte ptr [ebx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00072434: movzx edx, byte ptr [ebx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x00170549: movzx edx, byte ptr [ecx + edx]; mov byte ptr [eax - 1], dl; cmp eax, ebx; jne 0x170540; pop ebx; ret; 
0x0003a05c: movzx edx, byte ptr [ecx]; test dl, dl; jne 0x3a040; ret; 
0x00071bd4: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070a88: movzx edx, byte ptr [edx + esi - 0x20]; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x001a3f45: movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x001a6da4: movzx edx, byte ptr [esi - 0x10]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a6e04: movzx edx, byte ptr [esi - 0xa]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a6dd4: movzx edx, byte ptr [esi - 0xd]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a6dc4: movzx edx, byte ptr [esi - 0xe]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x001a6d95: movzx edx, byte ptr [esi - 9]; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x0010cda8: movzx edx, word ptr [eax]; mov eax, dword ptr [esp + 8]; mov word ptr [eax], dx; xor eax, eax; ret; 
0x001911b7: mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x0009c529: mul ch; jmp dword ptr [ebp - 0x5d]; 
0x00024919: mul dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x000c1000: neg byte ptr [edi + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x00149cf8: neg dword ptr [ebx - 7]; call dword ptr [eax - 0x18]; 
0x0014eca8: neg dword ptr [ebx - 7]; call dword ptr [eax - 0x73]; 
0x0012286e: neg eax; add esp, 0xc; ret; 
0x001a35b7: neg eax; add esp, 4; pop ebp; pop ebx; ret; 
0x001a0d27: neg eax; add esp, 4; pop ebx; ret; 
0x0003deea: neg eax; cmovs eax, edx; ret; 
0x000c6dee: neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0008f165: neg eax; mov dword ptr [ecx + edx], eax; add esp, 8; mov eax, 0xffffffff; pop ebx; ret; 
0x00040785: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; pop esi; ret; 
0x0003cd2d: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; pop ebx; ret; 
0x0012d275: neg eax; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x00024f26: neg eax; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x0003c41b: neg eax; or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0019e677: neg eax; pop ebp; ret; 
0x0002538e: neg eax; pop ebx; adc edx, 0; neg edx; ret; 
0x0009460a: neg eax; pop ebx; pop esi; ret; 
0x000fba94: neg eax; pop ebx; ret; 
0x001a52e7: neg eax; pop edi; pop ebp; pop ebx; ret; 
0x0004dce1: neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x001a4d87: neg eax; pop edi; pop ebx; ret; 
0x001a9c47: neg eax; pop edi; pop esi; pop ebx; ret; 
0x000d9d17: neg eax; pop edi; pop esi; ret; 
0x000537a3: neg eax; pop esi; pop edi; ret; 
0x000895fb: neg eax; ret; 
0x0008801e: neg eax; sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008e247: neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190864: neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00025817: neg eax; sbb eax, eax; add esp, 0xc; ret; 
0x00061314: neg eax; sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00040a96: neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x000e7ba8: neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00099f13: neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x0011f6dc: neg edx; cmp eax, 0xfffff000; mov eax, 0; pop edi; cmova eax, edx; ret; 
0x00025394: neg edx; ret; 
0x0011454d: nop; adc byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x001578ca: nop; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x0009f914: nop; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00034bf0: nop; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0009a818: nop; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001086c1: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x317cf314], al; call dword ptr [edi - 0x18]; 
0x0002c4c1: nop; add byte ptr [eax], al; add byte ptr [ebx - 0x76dbdb84], cl; ret 0xfa29; 
0x000626a3: nop; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x00176d82: nop; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0008f3b8: nop; add byte ptr [eax], al; add cl, al; call 0x1e976cd; mov dword ptr [edx + 0x1b08], eax; ret; 
0x001b3778: nop; add byte ptr [eax], al; add cl, ch; jmp esi; 
0x0010a798: nop; add byte ptr [edi], cl; test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x00034969: nop; add byte ptr [edx], al; add byte ptr [eax], al; ret; 
0x001733ba: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x001733ba: nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x00124404: nop; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00116da4: nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x001813ab: nop; add dword ptr [eax], eax; add byte ptr [ecx + 0x5f5e5bd0], cl; ret; 
0x0005ac6f: nop; add dword ptr [edx + 4], 1; add esp, 4; pop ebx; pop esi; ret; 
0x00032e36: nop; add dword ptr [edx], edx; add byte ptr [eax], al; lea eax, [eax + 0x11cc]; ret; 
0x000d9fff: nop; add eax, 2; ret; 
0x000536ff: nop; add eax, dword ptr [esp]; ret; 
0x000a715f: nop; add esp, 4; mov eax, 0x16; pop ebx; pop esi; ret; 
0x0013bd9f: nop; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x00189e2f: nop; add esp, 4; pop ebx; pop esi; ret; 
0x0010a8ef: nop; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00024b0f: nop; and byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b19; ret; 
0x0009844f: nop; and dword ptr [eax], 0xbfffffff; xor eax, eax; ret; 
0x001a7fff: nop; and eax, 0x1fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fdf: nop; and eax, 0x3ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a800f: nop; and eax, 0x3fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a7fef: nop; and eax, 0x7ff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a801f: nop; and eax, 0x7fff; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000c1d0f: nop; bsf eax, eax; lea eax, [eax + edi + 0x10]; pop edi; ret; 
0x000c245f: nop; bsf eax, eax; lea eax, [eax + edx + 0x10]; ret; 
0x000c243f: nop; bsf eax, eax; lea eax, [eax + edx - 0x10]; ret; 
0x000c1faf: nop; bsr eax, eax; add eax, ecx; ret; 
0x000c1fbf: nop; bsr eax, eax; lea eax, [eax + ecx + 0x10]; ret; 
0x000436ef: nop; bsr eax, edx; pop ebx; xor eax, 0x1f; ret; 
0x000adcbc: nop; dec eax; wait; stc; call dword ptr [edx - 0x73]; 
0x000a1f6b: nop; dec esp; add al, 0; add byte ptr [ecx], bh; ret; 
0x0012d23f: nop; endbr32; call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094b4f: nop; endbr32; call 0x187605; add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0003d77f: nop; endbr32; call 0x187605; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f7ff: nop; endbr32; call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0002605f: nop; endbr32; call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0009c68f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c68f: nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008d60f: nop; endbr32; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008be4f: nop; endbr32; mov eax, 0xffffffff; ret; 
0x0016e71f: nop; endbr32; mov eax, 2; ret; 
0x0008f19f: nop; endbr32; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003bbdf: nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0017a74f: nop; endbr32; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00087edf: nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0003499f: nop; endbr32; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013cecf: nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000915af: nop; endbr32; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x0015012f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0008d69f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x0018718f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x0009e48f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121a9f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x0008719f: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x000e8dff: nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00099edf: nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00094eff: nop; endbr32; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0013cedf: nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098dbf: nop; endbr32; nop; xor eax, eax; ret; 
0x0010e44f: nop; endbr32; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024ccf: nop; endbr32; ret; 
0x0009157f: nop; endbr32; xor eax, eax; ret; 
0x0003bf5f: nop; fild dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; fscale; fstp st(1); ret; 
0x000b9b7d: nop; fimul dword ptr [eax + eax]; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00034304: nop; inc eax; ret; 
0x0010a146: nop; int1; inc dword ptr [ebx + 0x478910c4]; sbb al, 0x89; ret 0xc085; 
0x000a0d76: nop; je 0xa0db5; add byte ptr [eax], al; ret; 
0x00184940: nop; jl 0x184946; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00190c80: nop; jl 0x190c86; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000acbd5: nop; jl 0xacc2e; call 0x4c8b59dc; ret 0xfff6; 
0x0008676c: nop; jle 0x8676e; jmp dword ptr [ecx]; 
0x00139836: nop; jmp edx; 
0x0002ac44: nop; jno 0x2ac40; call dword ptr [eax - 0x18]; 
0x0002ac44: nop; jno 0x2ac40; call dword ptr [eax - 0x18]; ret 0x96; 
0x0002b865: nop; jno 0x2b861; call dword ptr [eax - 0x18]; 
0x0002c56e: nop; jno 0x2c56a; call dword ptr [eax - 0x18]; 
0x0002dbaf: nop; jno 0x2dbab; call dword ptr [eax - 0x18]; 
0x0002f0be: nop; jno 0x2f0ba; call dword ptr [eax - 0x18]; 
0x000a0d16: nop; jo 0xa0d1c; add byte ptr [eax], al; mov dword ptr [eax + 0x378], 1; ret; 
0x0005bce4: nop; jp 0x5bce0; call dword ptr [eax - 0x73]; 
0x00059947: nop; js 0x59943; call dword ptr [eax - 0x73]; 
0x00059bcb: nop; js 0x59bc7; call dword ptr [eax - 0x73]; 
0x00059bf0: nop; js 0x59bec; call dword ptr [eax - 0x73]; 
0x00059c1a: nop; js 0x59c16; call dword ptr [eax - 0x73]; 
0x00059c3f: nop; js 0x59c3b; call dword ptr [eax - 0x73]; 
0x00059c64: nop; js 0x59c60; call dword ptr [eax - 0x73]; 
0x00059c89: nop; js 0x59c85; call dword ptr [eax - 0x73]; 
0x00059cae: nop; js 0x59caa; call dword ptr [eax - 0x73]; 
0x00059cd3: nop; js 0x59ccf; call dword ptr [eax - 0x73]; 
0x00059cf8: nop; js 0x59cf4; call dword ptr [eax - 0x73]; 
0x00059d1d: nop; js 0x59d19; call dword ptr [eax - 0x73]; 
0x00059d42: nop; js 0x59d3e; call dword ptr [eax - 0x73]; 
0x00059d67: nop; js 0x59d63; call dword ptr [eax - 0x73]; 
0x00059d8c: nop; js 0x59d88; call dword ptr [eax - 0x73]; 
0x00059db1: nop; js 0x59dad; call dword ptr [eax - 0x73]; 
0x000a0ed0: nop; js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x000a0e7c: nop; js 0xa0e87; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000eb99a: nop; lahf; stc; call dword ptr [eax - 0x73]; 
0x001a893f: nop; lea eax, [ecx + 1]; ret; 
0x0003d7ff: nop; lea eax, [ecx - 1]; mov dword ptr [edx + 0x1f0], eax; mov eax, ecx; ret; 
0x001aa12f: nop; lea eax, [edi - 0xc]; pop edi; ret; 
0x000d4caf: nop; lea ebx, [eax + 0xc]; mov eax, ebx; pop ebx; ret; 
0x000d4c9f: nop; lea ebx, [eax + 8]; mov eax, ebx; pop ebx; ret; 
0x000e7c8f: nop; lea ecx, [esp + 0x14]; mov eax, 0x10a; call dword ptr gs:[0x10]; 
0x000336df: nop; lea edx, [ecx - 0x6d324]; mov eax, edx; pop ebx; ret; 
0x00128b1f: nop; lea esi, [esp + 8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000abbc4: nop; mov ah, 0x9a; stc; call dword ptr [edx - 0x73]; 
0x000ff474: nop; mov al, byte ptr [0x3efff8f8]; jmp eax; 
0x000baa4f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; pop edi; ret; 
0x000b632f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; lea eax, [edx]; ret; 
0x000b1f4f: nop; mov al, byte ptr [ecx]; mov byte ptr [edx], al; mov eax, edx; ret; 
0x000b633f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; lea eax, [edx + 1]; ret; 
0x000b1f5f: nop; mov ax, word ptr [ecx]; mov word ptr [edx], ax; mov eax, edx; ret; 
0x000ac56f: nop; mov byte ptr [edx], 0; mov eax, edx; pop ebx; pop esi; ret; 
0x000a0d44: nop; mov dword ptr [eax + 0x34c], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0d94: nop; mov dword ptr [eax + 0x350], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0dc4: nop; mov dword ptr [eax + 0x354], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0a34: nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a14: nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0d14: nop; mov dword ptr [eax + 0x370], edx; mov dword ptr [eax + 0x378], 1; ret; 
0x000a0ac4: nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d74: nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0009b2ef: nop; mov dword ptr [eax + 4], edx; ret; 
0x000b3e4f: nop; mov dword ptr [ecx], edx; mov word ptr [ecx + 4], dx; pop ebx; ret; 
0x000ba49f: nop; mov dword ptr [edi - 1], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba4af: nop; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000a0aa0: nop; mov dword ptr [edx + 0x390], eax; ret; 
0x00071b7f: nop; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00071b5f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x1c], 1; jmp eax; 
0x00071b6f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x24], 1; jmp eax; 
0x00071b8f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x28], 1; jmp eax; 
0x00071b9f: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x30], 1; jmp eax; 
0x00071baf: nop; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x3c], 1; jmp eax; 
0x001846cf: nop; mov dword ptr [esp + 8], ecx; call eax; 
0x000f0eef: nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0eef: nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00092adf: nop; mov eax, 0x16; pop ebx; ret; 
0x0009107f: nop; mov eax, 0x16; ret; 
0x00129def: nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x00129def: nop; mov eax, 0x24; call dword ptr gs:[0x10]; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000f0eff: nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0eff: nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x0010c59f: nop; mov eax, 0x42; call dword ptr gs:[0x10]; 
0x0008735f: nop; mov eax, 0x92; call dword ptr gs:[0x10]; 
0x001286ef: nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c28f: nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003cabf: nop; mov eax, 0xad; int 0x80; 
0x000efeff: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efeff: nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efeef: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efeef: nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000efedf: nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efedf: nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0008fbc8: nop; mov eax, 0xf0; mov ecx, 0x80; mov edx, 2; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009802f: nop; mov eax, 0xf0; mov ecx, 1; mov edx, 1; call dword ptr gs:[0x10]; 
0x0013ee3f: nop; mov eax, 0xffffffff; ret; 
0x0019e66f: nop; mov eax, 1; ja 0x19e679; neg eax; pop ebp; ret; 
0x001a3d5f: nop; mov eax, 1; ja 0x1a3d69; neg eax; pop ebp; ret; 
0x000d9f5f: nop; mov eax, 2; ret; 
0x000944cf: nop; mov eax, 3; add esp, 0xc; ret; 
0x000d9f6f: nop; mov eax, 3; ret; 
0x000d9f7f: nop; mov eax, 4; ret; 
0x000d9f8f: nop; mov eax, 5; ret; 
0x000d9f9f: nop; mov eax, 6; ret; 
0x000d9faf: nop; mov eax, 7; ret; 
0x0012428f: nop; mov eax, dword ptr [eax + 0x35c]; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0018715e: nop; mov eax, dword ptr [eax]; ret; 
0x00176cff: nop; mov eax, dword ptr [ebx + 0x10c]; pop ebx; pop esi; pop edi; ret; 
0x000b1f7f: nop; mov eax, dword ptr [ecx]; mov dword ptr [edx], eax; mov eax, edx; ret; 
0x0017a07f: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x20]; 
0x0016ed8f: nop; mov eax, dword ptr [edx + 4]; mov dword ptr [esp + 8], ecx; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0003bc9f: nop; mov eax, dword ptr [esp + 0xc]; or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x0009a93f: nop; mov eax, dword ptr [esp + 4]; lock dec dword ptr [eax]; jne 0x9a950; xor eax, eax; ret; 
0x000912af: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax + 0x14], edx; xor eax, eax; ret; 
0x0009a97f: nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0003c7fa: nop; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x0009c45f: nop; mov eax, edi; sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0005b7af: nop; mov eax, edx; call 0x5b550; mov eax, 1; add esp, 0xc; ret; 
0x0007959f: nop; mov eax, edx; call 0x79300; mov eax, 1; add esp, 0xc; ret; 
0x001a8f8f: nop; mov eax, edx; ret; 
0x001210bf: nop; mov ebx, dword ptr [esp + 0x20]; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0012e0af: nop; mov ebx, dword ptr [esp + 0x60]; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x00091bcf: nop; mov ebx, dword ptr [esp]; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00154aaf: nop; mov ecx, 1; mov eax, ecx; ret; 
0x0009efdd: nop; mov ecx, edi; call dword ptr [eax - 0x18]; 
0x000bddcf: nop; mov edx, dword ptr [esi]; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00114adf: nop; mov edx, dword ptr [esp + 0xa8]; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x0018717e: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x000e7bbf: nop; mov edx, dword ptr [esp + 0xc]; mov dword ptr [edx], ebx; pop ebx; ret; 
0x0012e58f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012e73f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00129e0f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012ec0f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea50f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0011478f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0012299f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00120b8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00122b7f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012bebf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdef: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e47f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129d9f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea7f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e4af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e6af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ebf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114bdf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012d50f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000f0f6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bdf: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010bf4f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x001145af: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012db8f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db6f: nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012cecf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0011f64f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012eb0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x0012eb7f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebaf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebdf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012e64f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x0012e9df: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccbf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x0010c3ef: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x0012870f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x0012990f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0011539f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x00127baf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286bf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x0010c22f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf1f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0012e4cf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e4ff: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d26f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x000eff0f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012e93f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x0012948f: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275af: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123adf: nop; mov edx, ebx; mov ecx, dword ptr [esp + 8]; mov ebx, dword ptr [esp + 4]; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x000ba48f: nop; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x000ac64f: nop; mov word ptr [edx], si; lea eax, [edx + 1]; pop ebx; pop esi; ret; 
0x000b648f: nop; movdqu xmm0, xmmword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; lea eax, [edx + 0xf]; ret; 
0x000b3e7f: nop; movlpd qword ptr [ecx], xmm0; mov byte ptr [ecx + 8], dl; pop ebx; ret; 
0x000b3e6f: nop; movlpd qword ptr [ecx], xmm0; pop ebx; ret; 
0x000b639f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; lea eax, [edx + 7]; ret; 
0x001aa80f: nop; movlpd xmm0, qword ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edx; ret; 
0x000536fe: nop; nop; add eax, dword ptr [esp]; ret; 
0x0009c68d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c68d: nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0016e71d: nop; nop; endbr32; mov eax, 2; ret; 
0x0003bbdd: nop; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00087edd: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x0013cecd: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000e8dfd: nop; nop; endbr32; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x00099edd: nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x0013cede: nop; nop; endbr32; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098dbd: nop; nop; endbr32; nop; xor eax, eax; ret; 
0x00024ccd: nop; nop; endbr32; ret; 
0x0009157d: nop; nop; endbr32; xor eax, eax; ret; 
0x000f0eee: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; 
0x000f0eee: nop; nop; mov eax, 0x14; call dword ptr gs:[0x10]; ret; 
0x00129ded: nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x000f0efe: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; 
0x000f0efe: nop; nop; mov eax, 0x40; call dword ptr gs:[0x10]; ret; 
0x001286ed: nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c28d: nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003cabd: nop; nop; mov eax, 0xad; int 0x80; 
0x000efefe: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; 
0x000efefe: nop; nop; mov eax, 0xc8; call dword ptr gs:[0x10]; ret; 
0x000efeee: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; 
0x000efeee: nop; nop; mov eax, 0xc9; call dword ptr gs:[0x10]; ret; 
0x000efedd: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; 
0x000efedd: nop; nop; mov eax, 0xca; call dword ptr gs:[0x10]; ret; 
0x0009a97d: nop; nop; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 1; xor eax, eax; ret; 
0x0012e58d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0012e73d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x00129e0d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012ec0d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x000ea50d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0011478e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x0012299d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x00120b8e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00122b7d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x0012bebd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bded: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e47d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129d9d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea7d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x0010e4ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e6ad: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ebe: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x0012d50e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x000f0f6d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bdd: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010bf4d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x001145ae: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x0012db8e: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db6d: nop; nop; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x000536fc: nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x0016e71b: nop; nop; nop; endbr32; mov eax, 2; ret; 
0x00099edb: nop; nop; nop; endbr32; mov eax, dword ptr gs:[8]; ret; 
0x00024ccb: nop; nop; nop; endbr32; ret; 
0x0009157b: nop; nop; nop; endbr32; xor eax, eax; ret; 
0x00129deb: nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x001286eb: nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c28b: nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003cabb: nop; nop; nop; mov eax, 0xad; int 0x80; 
0x000536fa: nop; nop; nop; nop; add eax, dword ptr [esp]; ret; 
0x00024cc9: nop; nop; nop; nop; endbr32; ret; 
0x00129de9: nop; nop; nop; nop; mov eax, 0x24; call dword ptr gs:[0x10]; 
0x001286e9: nop; nop; nop; nop; mov eax, 0x99; call dword ptr gs:[0x10]; 
0x0010c289: nop; nop; nop; nop; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0003cab9: nop; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x00024b73: nop; nop; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c117d: nop; or al, 0; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00026108: nop; or al, 0x70; stc; call dword ptr [edx - 0x73]; 
0x0003ee1d: nop; or al, 0x76; stc; call dword ptr [edx - 0x73]; 
0x0010cf47: nop; or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0010cf1f: nop; or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0009116f: nop; or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x0003cac7: nop; pop eax; mov eax, 0x77; int 0x80; 
0x00081868: nop; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a72ef: nop; pop ebx; mov eax, 1; ja 0x1a72fa; neg eax; ret; 
0x00179a6f: nop; pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x001a7b4f: nop; pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x0017164f: nop; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a58ef: nop; pop ebx; xor eax, eax; ret; 
0x000c7a7e: nop; pop edi; pop ebp; ret; 
0x001a3d4f: nop; pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000c69df: nop; ret 0x4b8b; 
0x000a7c14: nop; ret 0xdb31; 
0x0013730c: nop; ret 0xfff8; 
0x000ef67c: nop; ret 1; 
0x000348a8: nop; ret; 
0x00024b74: nop; sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000535ec: nop; sbb eax, 0xc4830007; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008203c: nop; stc; call dword ptr [eax - 0x18]; 
0x0008d9e4: nop; stc; call dword ptr [eax - 0x18]; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x00180f9f: nop; sti; jmp dword ptr [esi - 0x70]; 
0x001a950f: nop; sub edi, 3; jb 0x1a95b0; lea eax, [eax + 2]; pop edi; ret; 
0x001a951f: nop; sub edi, 5; jb 0x1a95b0; lea eax, [eax + 4]; pop edi; ret; 
0x001a952f: nop; sub edi, 6; jb 0x1a95b0; lea eax, [eax + 5]; pop edi; ret; 
0x001a84ef: nop; sub edx, 3; jb 0x1a8590; lea eax, [edi + 2]; pop edi; ret; 
0x001a84ff: nop; sub edx, 5; jb 0x1a8590; lea eax, [edi + 4]; pop edi; ret; 
0x001a850f: nop; sub edx, 6; jb 0x1a8590; lea eax, [edi + 5]; pop edi; ret; 
0x000e9e3f: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f17ff: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8a3f: nop; sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00175c7f: nop; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x001aa1bf: nop; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x000a5d6c: nop; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x000921df: nop; xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x0009805f: nop; xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x000a25cf: nop; xor eax, eax; add esp, 0xc; ret; 
0x00098115: nop; xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00091dd8: nop; xor eax, eax; pop ebx; pop edi; ret; 
0x00095a68: nop; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x000fbc3f: nop; xor eax, eax; pop ebx; pop esi; ret; 
0x00042f7f: nop; xor eax, eax; pop ebx; ret; 
0x000424df: nop; xor eax, eax; ret; 
0x000ac3af: nop; xor edx, edx; pop ebx; mov eax, edx; ret; 
0x000ea40e: not byte ptr [ebp - 0x18]; fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x00122387: not byte ptr [ebx + 0x31]; fisttp dword ptr [ebx - 0x74efdbb4]; push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0013038a: not byte ptr [ebx - 0x45]; or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0008fcc0: not byte ptr [ebx - 0x75]; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098501: not byte ptr [ebx - 0x75]; pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0003bd80: not eax; and eax, ecx; ret; 
0x0003b30e: not eax; and eax, edx; ret; 
0x0004328f: not eax; bsr eax, eax; xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00094b87: not eax; lea eax, [eax*8 + 6]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0004340e: not eax; movzx eax, al; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000434c0: not eax; movzx eax, ax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0003c10d: not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0017abec: not eax; shr eax, 0x1f; ret; 
0x0004342f: not eax; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000e7b80: not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009555f: not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0004374a: not edx; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x001742fa: notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x000c386a: notrack jmp ecx; lea esi, [esi]; mov eax, dword ptr [edx + 0x110]; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x001a84bf: or ah, 0; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x00032e3c: or ah, 0x11; add byte ptr [eax], al; ret; 
0x0013aeb7: or ah, 0x50; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00158667: or ah, 0xc4; int1; call dword ptr [eax - 1]; 
0x000c3897: or ah, 1; add byte ptr [eax], al; ret; 
0x00191ba8: or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000c2ce4: or ah, bh; pop edi; ret; 
0x0005e002: or ah, byte ptr [ebx - 3]; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x001623c2: or ah, byte ptr [ecx - 7]; call dword ptr [eax - 0x18]; 
0x00162563: or ah, byte ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x000a61ec: or al, 0; add byte ptr [eax - 0x73], dl; test edx, edx; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x00159812: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0016c887: or al, 0; add byte ptr [eax], al; add byte ptr [ebx + 0x6a1043], cl; push esi; call dword ptr [eax + 0x14]; 
0x00122fa9: or al, 0; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x4e0f; 
0x00049f54: or al, 0; add byte ptr [eax], al; add cl, ch; ret; 
0x0013cebf: or al, 0; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x001145b7: or al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000ea46f: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00093004: or al, 0; add byte ptr [eax], al; lea ebx, [eax + 0x6c]; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x0013f3df: or al, 0; add byte ptr [eax], al; mov dword ptr [eax + 4], 0x29; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00122b30: or al, 0; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0016e08a: or al, 0; add byte ptr [eax], al; pop ebx; ret; 
0x001a96b7: or al, 0; add byte ptr [eax], al; pop edi; ret; 
0x0009084d: or al, 0; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x001263ab: or al, 0; add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x00126391: or al, 0; add byte ptr [ebp - 0x6ad4c7d], cl; call dword ptr [ecx + 0x51]; 
0x001440ba: or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a295e: or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000d6074: or al, 0; add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000d5ce2: or al, 0; add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x00076dfc: or al, 0; add byte ptr [ecx], bh; ret 0x840f; 
0x000c2955: or al, 0; add ebx, 0x1087a1; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; add esi, ecx; jmp ebx; 
0x000c16af: or al, 0; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c11a4: or al, 0; add ecx, 0x109ece; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c117f: or al, 0; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c115f: or al, 0; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1142: or al, 0; add ecx, 0x109f30; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10a3: or al, 0; add ecx, 0x109f4f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1115: or al, 0; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1085: or al, 0; add ecx, 0x109f6d; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10fe: or al, 0; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10e3: or al, 0; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1060: or al, 0; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c10c1: or al, 0; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1036: or al, 0; add ecx, 0x109fbc; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c101d: or al, 0; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ffc: or al, 0; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fd8: or al, 0; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fba: or al, 0; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0f37: or al, 0; add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd85: or al, 0; add ecx, 0x10d1ed; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd60: or al, 0; add ecx, 0x10d212; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd36: or al, 0; add ecx, 0x10d23c; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd1d: or al, 0; add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcfc: or al, 0; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcd8: or al, 0; add ecx, 0x10d29a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcba: or al, 0; add ecx, 0x10d2b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdc9e: or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bbe0f: or al, 0; add ecx, 0x10f08f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd2a: or al, 0; add ecx, 0x10f204; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd17: or al, 0; add ecx, 0x10f217; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbcfb: or al, 0; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb204: or al, 0; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1df: or al, 0; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1bf: or al, 0; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1a2: or al, 0; add ecx, 0x10fcfc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb103: or al, 0; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb175: or al, 0; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb15e: or al, 0; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb143: or al, 0; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb121: or al, 0; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb02f: or al, 0; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb00f: or al, 0; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafea: or al, 0; add ecx, 0x10fe34; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000ba70f: or al, 0; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba62a: or al, 0; add ecx, 0x1107a4; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba617: or al, 0; add ecx, 0x1107b7; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5fb: or al, 0; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9bc4: or al, 0; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b9f: or al, 0; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b7f: or al, 0; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b62: or al, 0; add ecx, 0x1111dc; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ac3: or al, 0; add ecx, 0x1111fb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b9b35: or al, 0; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b1e: or al, 0; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b03: or al, 0; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ae1: or al, 0; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b99ff: or al, 0; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99df: or al, 0; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99ba: or al, 0; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0005adbb: or al, 0; add esp, 0x1c; ret; 
0x0014fa70: or al, 0; je 0x14fa7e; add dword ptr [eax + 8], 1; je 0x14fa9d; add esp, 0xc; ret; 
0x000c3a28: or al, 0; pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00124ef2: or al, 0x10; add byte ptr [eax], al; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00176af1: or al, 0x10; ret; 
0x000313d0: or al, 0x18; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x00087bbd: or al, 0x19; ret 0x157d; 
0x0012d54e: or al, 0x1b; pop ebx; shr eax, cl; and eax, 3; ret; 
0x00187612: or al, 0x24; ret; 
0x000dc7a3: or al, 0x29; ret 0x428d; 
0x000838f7: or al, 0x29; ret 0xfac1; 
0x00054be2: or al, 0x29; ret; 
0x000e4b9c: or al, 0x29; retf 0x490f; ret 0x1c8d; 
0x001165ff: or al, 0x29; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0013e231: or al, 0x2a; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000a85c8: or al, 0x2b; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x001278c2: or al, 0x30; ror byte ptr [ecx], 0xc8; ret; 
0x000ec9b0: or al, 0x31; call dword ptr [eax - 0x18]; 
0x000ec9b0: or al, 0x31; call dword ptr [eax - 0x18]; push 0xc4830004; adc byte ptr [ecx], bh; ret; 
0x00140a31: or al, 0x31; call dword ptr [ebp + 1]; 
0x0007be0d: or al, 0x31; call dword ptr [ebp - 0x18]; 
0x00088b7c: or al, 0x31; call dword ptr [ebx - 0x18]; 
0x00173293: or al, 0x31; call dword ptr [esi - 0x18]; 
0x001397d4: or al, 0x31; fisttp dword ptr [ecx + 0xbab8e1]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000270ba: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00040f5b: or al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00098776: or al, 0x31; rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098f0d: or al, 0x31; rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x0008713a: or al, 0x31; rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x00081744: or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000a4742: or al, 0x39; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x001a49d5: or al, 0x39; fnstcw word ptr [eax]; jne 0x1a49f0; pop ebx; ret; 
0x0014c93a: or al, 0x39; inc ebx; or al, 0x75; ret; 
0x0004354e: or al, 0x39; rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x0002c363: or al, 0x39; ret 0x1a73; 
0x000aa7c2: or al, 0x39; ret 0x2b73; 
0x000e90f1: or al, 0x39; ret 0x470f; 
0x00114b59: or al, 0x39; ret 0x6274; 
0x001836be: or al, 0x39; ret 0x820f; 
0x0002de97: or al, 0x39; ret 0x840f; 
0x00029afd: or al, 0x39; ret; 
0x00077dfb: or al, 0x3b; test dword ptr [eax + 0xffffffb], edi; test eax, esp; ret; 
0x000ac800: or al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000a4612: or al, 0x43; stc; call dword ptr [eax - 0x18]; 
0x00123b7c: or al, 0x45; add byte ptr [eax], al; add esp, 4; pop ebx; pop esi; ret; 
0x000a9c10: or al, 0x45; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000eb9ad: or al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x001630f4: or al, 0x4a; int1; call dword ptr [eax - 0x73]; 
0x00160baf: or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d96: or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x0002823b: or al, 0x50; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0016c872: or al, 0x50; call dword ptr [ecx + 0xc]; 
0x00175cd2: or al, 0x50; call dword ptr [edx + 0x10]; 
0x000a75ac: or al, 0x50; call edx; 
0x0015791c: or al, 0x50; mov dword ptr [esp + 0x10], eax; call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0016024d: or al, 0x50; mov dword ptr [esp + 0x2c], eax; call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x001351ed: or al, 0x50; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00137072: or al, 0x50; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x0013756f: or al, 0x50; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x001352e6: or al, 0x50; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00134d7e: or al, 0x50; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00135d13: or al, 0x50; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00135ae7: or al, 0x50; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x00026249: or al, 0x51; call 0x184910; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268f3: or al, 0x52; call 0x184910; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x00179ec9: or al, 0x52; push ebx; call dword ptr [eax + 0x20]; 
0x00179e96: or al, 0x52; push ebx; call dword ptr [eax + 0x24]; 
0x001794e6: or al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x00179489: or al, 0x52; push ebx; call dword ptr [eax]; 
0x000e7dd8: or al, 0x52; push ebx; call eax; 
0x0017985d: or al, 0x52; push ecx; call dword ptr [eax + 4]; 
0x00157ab5: or al, 0x53; call 0x184910; add esp, 0x10; mov eax, ebx; call eax; 
0x00160f45: or al, 0x53; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x0002f7b3: or al, 0x53; call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x0016d475: or al, 0x53; call dword ptr [eax + 0x10]; 
0x00088bb0: or al, 0x53; call dword ptr [edi + 0x44]; 
0x000813c5: or al, 0x53; call dword ptr [esi + 0x10]; 
0x00088019: or al, 0x53; call dword ptr [esi + 0x30]; 
0x0005f7c1: or al, 0x53; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016d8c3: or al, 0x55; call 0x114650; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00174a0a: or al, 0x55; call dword ptr [eax + 0x10]; 
0x0016ea10: or al, 0x55; call dword ptr [esi]; 
0x00174a21: or al, 0x55; call eax; 
0x00160ce7: or al, 0x55; call edi; 
0x00173814: or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00131ff5: or al, 0x56; add eax, 0xae1b0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000260d6: or al, 0x56; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x00032c39: or al, 0x56; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016ca08: or al, 0x56; call dword ptr [eax + 0x10]; 
0x00086adb: or al, 0x56; call dword ptr [eax + 0x30]; 
0x0008c191: or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0007ed96: or al, 0x56; call dword ptr [ebx + 0x2c]; 
0x0007bebb: or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0007ee7f: or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0018915c: or al, 0x56; call dword ptr [ebx + 0x44]; 
0x0008bdeb: or al, 0x56; call dword ptr [edi + 0x34]; 
0x001892b1: or al, 0x56; call dword ptr [edi + 0x44]; 
0x000a74ca: or al, 0x56; call eax; 
0x0012c944: or al, 0x56; call edx; 
0x0012c944: or al, 0x56; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0017349d: or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0016c03a: or al, 0x56; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0005bc9f: or al, 0x56; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0013988f: or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00027039: or al, 0x57; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x0016ea41: or al, 0x57; call dword ptr [eax + 0x10]; 
0x0016e9fe: or al, 0x57; call dword ptr [eax + 8]; 
0x0016d93d: or al, 0x57; call eax; 
0x0016d91a: or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00024826: or al, 0x59; stc; call dword ptr [eax - 0x18]; 
0x000a92c1: or al, 0x5b; call 0xc24ea2c7; ret; 
0x0017166a: or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x0008e19f: or al, 0x5b; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x000ad7b8: or al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00155399: or al, 0x5b; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x00148122: or al, 0x5b; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0008144e: or al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000a7ca2: or al, 0x5b; pop esi; pop edi; pop ebp; ret 4; 
0x000270de: or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000901d3: or al, 0x5b; pop esi; pop edi; ret; 
0x000c11c5: or al, 0x5b; pop esi; ret; 
0x0008ff8f: or al, 0x5b; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x00182c16: or al, 0x5b; ret; 
0x0003c108: or al, 0x5b; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0012c89b: or al, 0x5b; setg al; pop esi; pop edi; ret; 
0x00125cc3: or al, 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00179a26: or al, 0x5e; pop edi; jmp eax; 
0x001992e0: or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a5a: or al, 0x5f; call 0x1875fd; add ebx, 0x4207f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019598a: or al, 0x5f; call 0x1875fd; add ebx, 0x43ecf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019398a: or al, 0x5f; call 0x1875fd; add ebx, 0x45c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b7fd0: or al, 0x5f; pop ebx; ret; 
0x000bb8b0: or al, 0x5f; pop esi; pop ebx; ret; 
0x000b62e4: or al, 0x5f; ret; 
0x0012d0dc: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12d0f0; pop ebx; ret; 
0x0012d35c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12d370; pop ebx; ret; 
0x0012e41c: or al, 0x65; call dword ptr [0x10]; cmp eax, 0xfffff000; ja 0x12e430; pop ebx; ret; 
0x0008fc9a: or al, 0x65; call dword ptr [0x10]; pop ebx; pop esi; ret; 
0x0008f1ce: or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x00095dfd: or al, 0x65; mov edx, dword ptr [0x68]; mov dword ptr [eax + 8], edx; xor edx, edx; mov eax, edx; ret; 
0x00154930: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x00177a35: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a84: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x0003b075: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e4: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003f288: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39b: or al, 0x65; sub eax, dword ptr [0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x000254f9: or al, 0x65; sub ecx, dword ptr [0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x00121f72: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x00124482: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00125c15: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012bc38: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f145: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f311: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f391: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f67c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012fbd5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012ffac: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c3: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130131: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x00130353: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x0014659e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465e6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146635: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x00148c3f: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x00172c55: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e0e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x0017631e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x001763a1: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x001792d0: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c0: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x00179697: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x00179737: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x00179879: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x0017990d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a147: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1e7: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a287: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a327: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa1e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa7e: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aae8: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab98: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff83: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x0018047d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x00181037: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x0018720d: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a5: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190250: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x0003e1b6: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0004090b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b38: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e08: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8b: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x00041ea9: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x0005ae24: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0009cd8c: or al, 0x65; sub edx, dword ptr [0x14]; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x000c6569: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dac6a: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54ee: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79ae: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000efebb: or al, 0x65; sub edx, dword ptr [0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x001b09f0: or al, 0x66; cmp eax, 0x840f0400; sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x0008d5ca: or al, 0x68; add byte ptr [eax], 0; add al, ch; ret; 
0x001352eb: or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x000ea902: or al, 0x68; out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x00123bca: or al, 0x68; rcr byte ptr [edi], 0; add al, ch; ret; 
0x001770ce: or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x000a71f2: or al, 0x6a; add eax, 0x4485838d; stc; call dword ptr [eax - 0x73]; 
0x00034622: or al, 0x6a; add eax, 0x74ac838d; stc; call dword ptr [eax - 0x73]; 
0x000894ae: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018900a: or al, 0x6a; add ebp, dword ptr [edx + 1]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00188ee8: or al, 0x6a; add ebp, dword ptr [edx + 2]; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0002e362: or al, 0x6a; stc; call dword ptr [eax - 0x73]; 
0x000dc733: or al, 0x6b; ret; 
0x0002ac77: or al, 0x6b; stc; call dword ptr [eax + 0x68]; 
0x0002a844: or al, 0x6b; stc; call dword ptr [eax - 0x73]; 
0x00028f72: or al, 0x6c; stc; call dword ptr [eax + 0x68]; 
0x00028e04: or al, 0x6c; stc; call dword ptr [eax - 0x73]; 
0x00027076: or al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x00026109: or al, 0x70; stc; call dword ptr [edx - 0x73]; 
0x00114191: or al, 0x72; in eax, dx; call dword ptr [eax + 0x56]; 
0x0002db33: or al, 0x72; stc; call dword ptr [eax - 0x73]; 
0x0014c93d: or al, 0x75; ret; 
0x0003ee1e: or al, 0x76; stc; call dword ptr [edx - 0x73]; 
0x0014838e: or al, 0x7f; ret; 
0x00079794: or al, 0x7f; stc; call dword ptr [eax - 0x73]; 
0x0008fcc9: or al, 0x80; int1; and dword ptr [ebp - 1], 0x1015; add byte ptr [ebx + 0x5e], bl; ret; 
0x001aae7e: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret 4; 
0x00110360: or al, 0x81; les ebp, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x000e326f: or al, 0x81; les edi, ptr [eax + eax + 0x5e5b0000]; pop edi; pop ebp; ret; 
0x0005ad63: or al, 0x83; call 0x448366b; ret; 
0x00083429: or al, 0x83; in al, dx; add al, 0x29; ret 0xfac1; 
0x0008ab94: or al, 0x83; in al, dx; add al, 0x50; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x001770cb: or al, 0x83; in al, dx; or al, 0x6a; adc al, 0xe8; ret 0xeac0; 
0x0008743d: or al, 0x83; in al, dx; or al, 0x83; ret; 
0x001708df: or al, 0x83; in al, dx; or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x00179acd: or al, 0x83; in al, dx; or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x0015b048: or al, 0x83; inc esp; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x001086c7: or al, 0x83; into; call dword ptr [edi - 0x18]; 
0x00187dc1: or al, 0x83; jnp 0x187dfd; jmp dword ptr [ebp - 0x75]; 
0x000864f2: or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016f07d: or al, 0x83; les eax, ptr [ecx + eax]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00183ee2: or al, 0x83; les ebp, ptr [eax]; pop ebx; ret; 
0x0005a7c7: or al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00061281: or al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0003b2a5: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0005296f: or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0009d08d: or al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0003c97b: or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b4fc: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x00088f8c: or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0008144b: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; jmp eax; 
0x0005b82b: or al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0002d15a: or al, 0x83; les edi, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x0005a847: or al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0016c453: or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x0009031b: or al, 0x83; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00144f64: or al, 0x83; les edx, ptr [eax]; pop esi; pop edi; pop ebp; ret; 
0x00041e41: or al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00059f9b: or al, 0x83; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00040ae9: or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x00159625: or al, 0x83; mov byte ptr [ecx], 0xeb; ret; 
0x0016734a: or al, 0x83; mov byte ptr [edx*2 + 0x28245c8b], 0xe8; dec eax; ret 0xfff5; 
0x000c1813: or al, 0x83; out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x000c6d8a: or al, 0x83; rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000c1dc3: or al, 0x83; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x00083d78: or al, 0x83; ret 0x2b2c; 
0x000deba9: or al, 0x83; ret 0x3909; 
0x00172376: or al, 0x83; ret 0x5208; 
0x000a11a5: or al, 0x83; ret 0x8901; 
0x000f0be4: or al, 0x83; ret 0x8902; 
0x00102976: or al, 0x83; ret 0xc704; 
0x00037371: or al, 0x83; ret; 
0x00105fa4: or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00043483: or al, 0x83; rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x0013f4ff: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013f5a4: or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0011ce76: or al, 0x85; ror byte ptr [edi], 0x84; ret 0xfffc; 
0x0013aaaa: or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x0012c914: or al, 0x85; ror byte ptr [edi], cl; test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0004aa7e: or al, 0x85; sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], esi; ret 0xfff9; 
0x00043f73: or al, 0x85; sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x00123c7a: or al, 0x85; sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5676a], cl; call dword ptr [edx - 0x77]; 
0x00123c99: or al, 0x85; sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5646a], cl; call dword ptr [edx - 0x77]; 
0x0009dab9: or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x0012dc29: or al, 0x85; sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0012b5ef: or al, 0x85; sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12b600; ret; 
0x001b3c9b: or al, 0x85; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x001867a6: or al, 0x88; hlt; call dword ptr [eax - 0x18]; 
0x0014071d: or al, 0x89; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x0003f240: or al, 0x89; add dword ptr [ecx + 0x45189c8], ecx; ret 4; 
0x0014f2da: or al, 0x89; call 0x4424bc66; ret 0x148b; 
0x0003e330: or al, 0x89; call 0x5d634192; ret; 
0x0007c506: or al, 0x89; call 0x5d672368; ret; 
0x000c6436: or al, 0x89; call 0x5d6bc298; ret; 
0x0014ef8b: or al, 0x89; call 0x5d744ded; ret; 
0x001879fa: or al, 0x89; call 0x5d77d85c; ret; 
0x00091308: or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008b7f3: or al, 0x89; dec eax; and al, 0x89; push eax; add al, 0x5b; ret; 
0x0013927a: or al, 0x89; dec ebp; mov word ptr [ebp - 0x9773], cs; dec dword ptr [ecx - 0x836b]; dec dword ptr [ecx - 0x11f73]; call dword ptr [ecx - 1]; 
0x000e8857: or al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0009d112: or al, 0x89; fiadd dword ptr [ebp - 0x76e28b40]; ret; 
0x0013dacb: or al, 0x89; fimul word ptr [edi]; xchg ebx, eax; ret; 
0x00027946: or al, 0x89; inc ebp; fmul qword ptr [ebp - 0x216f537d]; call dword ptr [eax - 0x73]; 
0x0003c653: or al, 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0003a637: or al, 0x89; inc edi; or byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x4f89; 
0x0005b77d: or al, 0x89; inc esi; adc byte ptr [ecx + 0x5e5b1856], cl; pop edi; ret; 
0x0008d3c4: or al, 0x89; inc esi; add al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00114f38: or al, 0x89; inc esp; and al, 0x28; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x00105fa0: or al, 0x89; je 0x105f66; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000f1255: or al, 0x89; lea eax, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5bf7b]; jmp dword ptr [ebp - 0x5f]; 
0x000682d3: or al, 0x89; lea ebp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x59b7b]; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006935e: or al, 0x89; lea esi, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00069b7a: or al, 0x89; lea esp, [edx + edi*8 - 1]; call dword ptr [ebx - 0x18]; 
0x00142d62: or al, 0x89; pop eax; or al, 0xe9; ret 0xfffe; 
0x001377ea: or al, 0x89; pop edi; or al, 0x89; ret 0x4589; 
0x0009db39: or al, 0x89; push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x00035a6a: or al, 0x89; push ebp; mov esp, 0x2e55808d; stc; call dword ptr [eax - 0x18]; 
0x0013477d: or al, 0x89; push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0007fdd9: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0013327b: or al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0017ea2b: or al, 0x89; ret 0x25; 
0x0017fb5e: or al, 0x89; ret 0x408d; 
0x0010c702: or al, 0x89; ret 0x438d; 
0x001377ed: or al, 0x89; ret 0x4589; 
0x000b0435: or al, 0x89; ret 0x468d; 
0x00083d98: or al, 0x89; ret 0x48d; 
0x000298d9: or al, 0x89; ret 0x4c89; 
0x00089bd0: or al, 0x89; ret 0x532b; 
0x0018310a: or al, 0x89; ret 0x808b; 
0x00069ef7: or al, 0x89; ret 0xc031; 
0x0009472e: or al, 0x89; ret 0xc889; 
0x00099d33: or al, 0x89; ret 0xca81; 
0x000a17a3: or al, 0x89; ret 0xca83; 
0x00183218: or al, 0x89; ret 0xd889; 
0x00095a28: or al, 0x89; ret 0xe281; 
0x000963ba: or al, 0x89; ret 0xe283; 
0x0008e012: or al, 0x89; ret 0xe989; 
0x000a31f1: or al, 0x89; ret 0xfa29; 
0x0003bcf7: or al, 0x89; ret 0xff25; 
0x0002324b: or al, 0x89; ret; 
0x000952be: or al, 0x89; stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000329bb: or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x000329bb: or al, 0x89; test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; ret 0xff07; 
0x0006d57f: or al, 0x89; test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebx - 0x4476b]; dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x0009b2db: or al, 0x8b; adc cl, byte ptr [ebx + 0x144a3908]; je 0x9b2f0; ret; 
0x0013145b: or al, 0x8b; adc cl, byte ptr [ecx + 0x1b810]; add byte ptr [eax], al; ret; 
0x000a7351: or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x0014ec15: or al, 0x8b; add byte ptr [ecx], bh; ret 0x5473; 
0x0016cb52: or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0013988c: or al, 0x8b; inc eax; or al, 0x56; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000e9e42: or al, 0x8b; inc ebp; aam 0x56; call eax; 
0x00174f90: or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x0016cf8d: or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00172ef5: or al, 0x8b; inc ebx; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x0017835f: or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x000c69d4: or al, 0x8b; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x001769f0: or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0016e9f7: or al, 0x8b; inc edi; or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0003bd15: or al, 0x8b; inc esp; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00185bd1: or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00134e7f: or al, 0x8b; inc esp; and al, 0xc; add eax, 0x2000001; push eax; call dword ptr [ebp + 0x14]; 
0x0010cf41: or al, 0x8b; inc esp; and al, 4; mov dword ptr [eax + 0x10c], edx; xor eax, eax; ret; 
0x00090d5a: or al, 0x8b; inc esp; and al, 8; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001062ce: or al, 0x8b; je 0x1062f6; sub al, 0x83; ret; 
0x0009c464: or al, 0x8b; jg 0x9c474; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x0002e067: or al, 0x8b; jl 0x2e08f; adc byte ptr [ecx - 0x76c3dbbc], cl; fmul dword ptr [ecx - 0x7cfbdbbc]; rol byte ptr [edx], 0x39; ret 0x820f; 
0x000e8805: or al, 0x8b; jl 0xe882d; and byte ptr [ebx - 0x7cdbdb8c], cl; jmp dword ptr [ebx + 0x77]; 
0x000e9b3a: or al, 0x8b; jne 0xe9b12; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000ea04a: or al, 0x8b; jne 0xea022; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x00138de6: or al, 0x8b; lea esi, [edi + edi*8 - 1]; dec dword ptr [ebx - 0x9b43]; dec dword ptr [ecx - 0x11b73]; push esi; ret 0xf02; 
0x000712f0: or al, 0x8b; mov word ptr [ebx - 0x736b4], ss; add ecx, eax; jmp ecx; 
0x00070a90: or al, 0x8b; mov word ptr [ebx - 0x73734], ss; add ecx, eax; jmp ecx; 
0x0007243c: or al, 0x8b; mov word ptr [ebx - 0x73834], ss; add ecx, eax; jmp ecx; 
0x00061348: or al, 0x8b; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0012ec48: or al, 0x8b; pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e718: or al, 0x8b; pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f238: or al, 0x8b; pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c08: or al, 0x8b; pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114808: or al, 0x8b; pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e628: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e688: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114678: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e918: or al, 0x8b; pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e8: or al, 0x8b; pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be98: or al, 0x8b; pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e798: or al, 0x8b; pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e458: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128668: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e538: or al, 0x8b; pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e568: or al, 0x8b; pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c268: or al, 0x8b; pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e888: or al, 0x8b; pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf38: or al, 0x8b; pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec98: or al, 0x8b; pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e28: or al, 0x8b; pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f48: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f18: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114628: or al, 0x8b; pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127938: or al, 0x8b; pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127858: or al, 0x8b; pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127558: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127588: or al, 0x8b; pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab8: or al, 0x8b; pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0016ccfb: or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x0015b76d: or al, 0x8b; push edi; add al, 0xf7; ret 0xfffd; 
0x00099efc: or al, 0x8b; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x0010bfd4: or al, 0x8b; push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0016e513: or al, 0x8b; test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x0007c57c: or al, 0x8b; xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x00024849: or al, 0x8d; adc ah, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0007bcc1: or al, 0x8d; adc dword ptr [eax - 6], -1; call dword ptr [eax - 0x73]; 
0x00069e7a: or al, 0x8d; adc dword ptr [edx], 0x33; stc; call dword ptr [eax - 0x18]; 
0x0009fb9f: or al, 0x8d; adc eax, -0x77; stc; call dword ptr [eax - 0x18]; 
0x00093253: or al, 0x8d; add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x000f2ee8: or al, 0x8d; add al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0011f43e: or al, 0x8d; add dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x001694c8: or al, 0x8d; add dword ptr [edx + 0x63], -7; call dword ptr [eax - 0x18]; 
0x0003f16a: or al, 0x8d; and dword ptr [eax], 0x76; stc; call dword ptr [eax - 0x18]; 
0x0003a127: or al, 0x8d; and edi, 0x2e; stc; call dword ptr [eax - 0x18]; 
0x00165928: or al, 0x8d; bnd call dword ptr [eax - 0x18]; 
0x000798ca: or al, 0x8d; cmp byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x0011f48e: or al, 0x8d; cmp dword ptr [eax - 0x5d], -7; call dword ptr [eax - 0x18]; 
0x00087e3f: or al, 0x8d; cmp dword ptr [eax - 0x7d], -7; call dword ptr [eax - 0x18]; 
0x00095db5: or al, 0x8d; cmp dword ptr [edi + ecx*4], -0x1b; call dword ptr [eax + 0x56]; 
0x000b39b2: or al, 0x8d; dec edx; or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x000eb83a: or al, 0x8d; inc ebp; add bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000eb723: or al, 0x8d; inc ebp; or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015443d: or al, 0x8d; inc ebx; add al, 0x50; call edi; 
0x000a1d7c: or al, 0x8d; inc ecx; jmp dword ptr [ecx]; 
0x000a2575: or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00134057: or al, 0x8d; inc esp; pop es; add dword ptr [ecx], edi; ret; 
0x000a42db: or al, 0x8d; inc esp; ret; 
0x00171c5b: or al, 0x8d; je 0x171c85; add byte ptr [ecx], ch; ret; 
0x000a0ece: or al, 0x8d; nop; js 0xa0e6c; stc; call dword ptr [edx - 0x73]; 
0x00024824: or al, 0x8d; or al, 0x59; stc; call dword ptr [eax - 0x18]; 
0x0005bb83: or al, 0x8d; or byte ptr [eax + 0x7a], 0xf9; call dword ptr [eax - 0x73]; 
0x00079791: or al, 0x8d; or byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x00084913: or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00183458: or al, 0x8d; or dword ptr [ebx + edi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0010b786: or al, 0x8d; or dword ptr [edi + 0x48], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dd966: or al, 0x8d; or dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0005c5a1: or al, 0x8d; pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00149347: or al, 0x8d; popfd; jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x0014931b: or al, 0x8d; popfd; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00149373: or al, 0x8d; popfd; mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x00149397: or al, 0x8d; popfd; movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x0017429c: or al, 0x8d; push ebx; dec esp; push edx; call eax; 
0x00120889: or al, 0x8d; push ecx; call dword ptr [edx + 0x56]; 
0x00179e92: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e2: or al, 0x8d; push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00186d77: or al, 0x8d; sbb byte ptr [eax + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00093207: or al, 0x8d; sbb byte ptr [eax - 0x7c], 0xf9; call dword ptr [eax - 0x18]; 
0x00092d6f: or al, 0x8d; sbb byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x00145cd9: or al, 0x8d; sbb byte ptr [edx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x00094551: or al, 0x8d; sbb dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x00148a42: or al, 0x8d; sbb dword ptr [ebx + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x00095da3: or al, 0x8d; sbb dword ptr [edi + ecx*4], -0x1b; call dword ptr [eax + 0x56]; 
0x0010ee82: or al, 0x8d; sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x0013a196: or al, 0x8d; sub ah, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x00154521: or al, 0x8d; sub dword ptr [eax], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x000eb1d2: or al, 0x8d; sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x0011bd52: or al, 0x8d; sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0002802a: or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x00069a46: or al, 0x8d; test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x0012a5a2: or al, 0x8d; test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x0002511f: or al, 0x8d; test dword ptr [edi + ebp*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0014a58a: or al, 0x8d; test dword ptr [esi], esi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000c6a57: or al, 0x8d; xchg ah, ah; pushfd; stc; call dword ptr [eax - 0x18]; 
0x000a1b08: or al, 0x8d; xchg ah, ch; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x000e2fe4: or al, 0x8d; xchg al, dl; sahf; stc; call dword ptr [eax - 0x73]; 
0x00148f9c: or al, 0x8d; xchg byte ptr [eax - 0x52], al; stc; call dword ptr [eax - 0x73]; 
0x0014901a: or al, 0x8d; xchg byte ptr [eax - 0x52], bh; stc; call dword ptr [eax - 0x73]; 
0x0013c742: or al, 0x8d; xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0013ed8f: or al, 0x8d; xchg byte ptr [ebx + ebp*4], ah; stc; call dword ptr [eax - 0x73]; 
0x0002502b: or al, 0x8d; xchg byte ptr [edi + ebp*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x000a1ac0: or al, 0x8d; xchg byte ptr [edi + edi - 0x1a], cl; call dword ptr [eax + 0x57]; 
0x00122c52: or al, 0x8d; xchg byte ptr [edi], ch; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000a1b3e: or al, 0x8d; xchg byte ptr [esp + edi - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x00113089: or al, 0x8d; xchg dword ptr [eax - 0x5e], eax; stc; call dword ptr [eax - 0x73]; 
0x0009e62a: or al, 0x8d; xchg dword ptr [eax - 0x77], esi; stc; call dword ptr [eax - 0x73]; 
0x0017c745: or al, 0x8d; xchg dword ptr [eax], ecx; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000873fc: or al, 0x8d; xchg dword ptr [ecx], ecx; aas; stc; call dword ptr [eax + 0x56]; 
0x00113175: or al, 0x8d; xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x73]; 
0x000a4fbd: or al, 0x8d; xchg eax, eax; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a4e0a: or al, 0x8d; xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x00126bce: or al, 0x8d; xchg ebx, eax; cld; ret 0xffe7; 
0x000eb6f2: or al, 0x8d; xchg edx, esi; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000345a9: or al, 0x8d; xor dword ptr [eax], 0x2e; stc; call dword ptr [eax + 0x57]; 
0x000360c1: or al, 0x8d; xor dword ptr [ecx + 0x2e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000ebc42: or al, 0x8d; xor edx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x00139835: or al, 0x90; jmp edx; 
0x0003c7f9: or al, 0x90; mov eax, dword ptr [esp + 8]; mov esp, ecx; jmp edx; 
0x000b99c3: or al, 0x91; jmp ecx; 
0x000b9aea: or al, 0x99; jmp ecx; 
0x000a78c4: or al, 0x99; stc; call dword ptr [eax + 0x68]; 
0x000a7dce: or al, 0x9a; stc; call dword ptr [eax + 0x68]; 
0x000c4c7f: or al, 0x9c; stc; call dword ptr [eax - 0x73]; 
0x0012bab0: or al, 0xa5; stc; call dword ptr [eax - 0x18]; 
0x001a9ee3: or al, 0xa8; add dword ptr [ebp + 0x18], esi; lea eax, [ecx + 4]; ret; 
0x000aa8e0: or al, 0xa8; idiv bh; cmovne eax, edx; ret; 
0x0009a929: or al, 0xa; add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x00140c57: or al, 0xac; stc; call dword ptr [eax - 0x73]; 
0x00033d4a: or al, 0xb0; mov eax, dword ptr [ebx + esi*4 - 0x814]; test eax, eax; je 0x33d59; call eax; 
0x001516bf: or al, 0xb2; stc; call dword ptr [eax - 0x73]; 
0x0012209d: or al, 0xb4; jg 0x1220a0; inc dword ptr [ebx + 0x508930ca]; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x001a5c1f: or al, 0xb8; add byte ptr [eax], al; add byte ptr [eax], al; jne 0x1a5c30; pop ebx; ret; 
0x0017a3bf: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [ecx + 0x14], edx; ret; 
0x00174319: or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0010ebef: or al, 0xb8; add eax, 0x5b000000; pop esi; pop edi; pop ebp; ret; 
0x000fba83: or al, 0xb8; fild dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00125b71: or al, 0xb8; in eax, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e5c1: or al, 0xb8; inc dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d3b0: or al, 0xb8; js 0x12d3b5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d03d: or al, 0xb8; lds eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d2bd: or al, 0xb8; les eax, ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00098bd4: or al, 0xb8; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0011effd: or al, 0xb8; mov word ptr [eax], es; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7b94: or al, 0xb8; or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00127531: or al, 0xb8; out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a91: or al, 0xb8; out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e37d: or al, 0xb8; ret; 
0x0012e981: or al, 0xb8; test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0011ff71: or al, 0xb8; xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013493a: or al, 0xb; test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0018345b: or al, 0xbb; stc; call dword ptr [eax - 0x18]; 
0x00061714: or al, 0xc2; push eax; push dword ptr [esp + 0x1c]; call 0x11f360; add esp, 0x1c; ret; 
0x000bb101: or al, 0xc5; or al, 0; add ecx, 0x10fd1b; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0003a5f0: or al, 0xd6; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x0003c498: or al, 0xd9; add al, 0x24; mov dword ptr [edx], eax; add esp, 4; ret; 
0x0003c4d7: or al, 0xd9; sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000b9b01: or al, 0xdb; or al, 0; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003c0ca: or al, 0xdd; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0011bd2a: or al, 0xdf; in eax, dx; call dword ptr [edx - 0x73]; 
0x0009032e: or al, 0xe8; mov esp, 0x3900060b; ret; 
0x0017abe3: or al, 0xe8; push edi; test al, 0xf0; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x00130347: or al, 0xe8; ret; 
0x00175395: or al, 0xe8; xor eax, 0x83fffc71; les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x0013b907: or al, 0xe9; add ecx, dword ptr [edi - 9]; dec dword ptr [ebp - 0x7417ff8a]; out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000abc15: or al, 0xe9; call 0x8e0abc14; nop; mov ah, 0x9a; stc; call dword ptr [edx - 0x73]; 
0x0013ba33: or al, 0xe9; daa; test al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000a811d: or al, 0xe9; dec ebp; fcos; jmp dword ptr [esi - 0x70]; 
0x0013c207: or al, 0xe9; jae 0x13c196; stc; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0013b9d3: or al, 0xe9; mov bh, 0xa4; hlt; jmp dword ptr [esi - 0x70]; 
0x0013ba03: or al, 0xe9; out 0xa6, eax; hlt; jmp dword ptr [esi - 0x70]; 
0x00142edb: or al, 0xe9; outsd dx, dword ptr [esi]; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x000fe9d9: or al, 0xe9; ret 0xfffb; 
0x0017539d: or al, 0xe9; ret 0xfffc; 
0x00142d65: or al, 0xe9; ret 0xfffe; 
0x001a3d3f: or al, 0xe; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a3a4b: or al, 0xe; sub eax, ecx; pop esi; pop edi; ret; 
0x000404c1: or al, 0xeb; ret 0x748d; 
0x001802e1: or al, 0xeb; ret 0x838b; 
0x00166351: or al, 0xeb; ret; 
0x0005c209: or al, 0xf6; ret 0x7401; 
0x00136152: or al, 0xf6; ret 0x7504; 
0x0005e863: or al, 0xf6; ret 0xf01; 
0x00138243: or al, 0xf6; ret 0xf04; 
0x0005eef9: or al, 0xf6; ret 0xf40; 
0x00055ccf: or al, 0xf7; ret 0; 
0x001a94c4: or al, 0xf; and ch, 0; add byte ptr [eax], al; lea eax, [eax + 0xb]; pop edi; ret; 
0x0009a8ff: or al, 0xf; inc edi; ret 0x948b; 
0x0009c6f8: or al, 0xf; mov dh, 0xc0; lea eax, [eax + eax + 2]; ret; 
0x0005355a: or al, 0xf; mov dh, 0xc0; ret; 
0x0007b559: or al, 0xf; mov ds, word ptr [ebx - 0x76ffffff]; ret; 
0x00089df6: or al, 0xf; test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000d9c05: or al, 0xf; test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000b9d63: or al, 0xf; test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb3c6: or al, 0xf; test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b39b5: or al, 0xf; test esp, eax; add eax, 0x5b5f0000; ret; 
0x0013521d: or al, 0xf; xchg ebp, eax; ret 0x44c7; 
0x0009c6e0: or al, 0xf; xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x001a8494: or al, 0xf; xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x000911d9: or al, 0xfe; add esp, 8; pop ebx; ret; 
0x001969dd: or al, 0xff; inc dword ptr [ecx + 0x431c0c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009182e: or al, 0xff; jae 0x91836; call dword ptr [ebx]; 
0x000984c5: or al, 0xff; jae 0x984cd; call dword ptr [ebx]; 
0x0015079b: or al, 0xff; je 0x1507c3; adc al, ch; pop ebx; jp 0x150798; jmp dword ptr [ebp - 0x75]; 
0x00160848: or al, 0xff; je 0x160870; pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x00175391: or al, 0xff; je 0x1753b9; or al, 0xe8; xor eax, 0x83fffc71; les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x00024e39: or al, 0xff; je 0x24e61; inc eax; push dword ptr [esp + 0x40]; call ecx; 
0x0008ed1e: or al, 0xff; je 0x8ed46; sub al, 0x52; push ecx; push edi; call eax; 
0x00094826: or al, 0xff; je 0x9484e; adc al, 0xe8; pushal; ret; 
0x000243a3: or al, 0xff; jne 0x24373; call dword ptr [ebp - 0x38]; 
0x0009c467: or al, 0xff; jo 0x9c46f; call dword ptr [eax]; 
0x0015e3a9: or al, 0xff; mov bl, 0x14; mov byte ptr [0xdbe80000], al; dec ebp; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0015e5e9: or al, 0xff; mov bl, 0x34; mov byte ptr [0x9be80000], al; dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00097038: or al, 1; add byte ptr [eax], al; add byte ptr [ebp + 0xf0a0054], cl; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x000a9e94: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc072; 
0x000a9f51: or al, 1; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0xc372; 
0x0010ce0a: or al, 1; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x00176d02: or al, 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x000c3887: or al, 1; add byte ptr [eax], al; ret; 
0x00148717: or al, 1; add byte ptr [eax], al; sub edx, dword ptr gs:[0x14]; jne 0x14874d; add esp, 0x11c; ret; 
0x0010cf48: or al, 1; add byte ptr [eax], al; xor eax, eax; ret; 
0x0017a83b: or al, 1; jle 0x17a853; pop ebx; pop esi; pop edi; ret; 
0x0009aaee: or al, 1; pop ebx; pop esi; pop edi; ret; 
0x0017a77b: or al, 1; push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x00083b79: or al, 1; ret 0xc101; 
0x00047e0f: or al, 1; ret 0xd389; 
0x0013dab4: or al, 1; ret 0xf983; 
0x00116588: or al, 1; ret 0xfa81; 
0x0002f63c: or al, 1; ret; 
0x00106814: or al, 1; ror dword ptr [ebx - 0x637647c4], cl; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0002ca01: or al, 3; cmp byte ptr [ebx + 0x39102444], cl; ret; 
0x00134e83: or al, 5; add dword ptr [eax], eax; add byte ptr [edx], al; push eax; call dword ptr [ebp + 0x14]; 
0x001a42f6: or al, 7; add byte ptr [eax], al; pop ebx; ret; 
0x00066154: or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x00065254: or al, ah; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [esi + eax*4 - 0x73f14]; jmp ecx; 
0x000c2f2c: or al, al; je 0xc2f34; mov byte ptr [ecx + edx + 3], ah; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00033092: or al, byte ptr [0xc4830009]; adc byte ptr [ebp - 0x3f7cfe88], cl; sbb al, 0x89; out 0x89, al; ret 0x25; 
0x000a3926: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add dword ptr [eax], -0x6e; stc; call dword ptr [eax - 0x18]; 
0x000a3902: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sbb dword ptr [eax - 0x6f], -7; call dword ptr [eax - 0x18]; 
0x000699e8: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x0015d4c7: or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg ebx, ebp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x000eaf22: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000516b2: or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00040bc4: or al, byte ptr [eax]; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00120bc1: or al, byte ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0016e0a2: or al, byte ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x00126225: or al, byte ptr [eax]; add byte ptr [ebp - 0x6b0357d], cl; call dword ptr [ecx + 0x51]; 
0x0015b88b: or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001a2bae: or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00043f6d: or al, byte ptr [eax]; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x001b2f00: or al, byte ptr [eax]; add byte ptr [ecx + 0x7c89113c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x0006f7aa: or al, byte ptr [eax]; add byte ptr [ecx - 0x7cdbdbac], cl; ret 0x8904; 
0x000bb23d: or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0006f259: or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x00071d83: or al, byte ptr [eax]; add dh, al; inc esp; and al, 8; add dword ptr [ebx - 0x7cfbdba4], ecx; ret; 
0x00092b6d: or al, byte ptr [eax]; nop; endbr32; xor eax, eax; ret; 
0x0009a92a: or al, byte ptr [eax]; nop; nop; endbr32; xor eax, eax; ret; 
0x0018df08: or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121acb: or al, byte ptr [ebp - 0x74f78737]; inc edx; or byte ptr [0x100f], ah; ret; 
0x000813dd: or al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000a4ffd: or al, byte ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0006e2a5: or al, byte ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000f0d2b: or al, byte ptr [ebx + 0x5e5b24c4]; ret; 
0x001609c5: or al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x000a7d86: or al, byte ptr [ebx - 0xf76eb3c]; pop ebx; pop esi; ret 4; 
0x001482eb: or al, byte ptr [ecx + 0x110c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0014800c: or al, byte ptr [ecx + 0x810c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0009f702: or al, byte ptr [ecx + 0x90c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012c14a: or al, byte ptr [ecx + 0xe0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000e7b96: or al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a8842: or al, byte ptr [ecx]; add byte ptr [eax], al; test al, 2; jne 0x1a8940; mov eax, ecx; ret; 
0x000caab3: or al, byte ptr [edi]; add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0017ef82: or al, byte ptr [edx - 0x16]; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000dc3fb: or al, ch; jmp esp; 
0x00095327: or al, ch; ret; 
0x000a1352: or bh, 0x41; stc; call dword ptr [eax - 0x18]; 
0x0018dfa2: or bh, ah; idiv edi; add esp, 0x2c; ret; 
0x00191ecc: or bh, ah; mov eax, edx; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00191bac: or bh, ah; mov eax, edx; pop ebx; ret; 
0x00177c21: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x00172261: or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x001769dc: or bh, al; add dword ptr [esi], ecx; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x00196d65: or bh, bh; inc dword ptr [ecx + 0x42d78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196b3e: or bh, bh; inc dword ptr [ecx + 0x42f9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012f9e2: or bh, bh; je 0x12f99b; add byte ptr [ebx - 0x7cacfe3a], al; ret; 
0x0016c7c3: or bh, bh; je 0x16c7eb; sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00171883: or bh, bh; je 0x1718ab; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x001744f8: or bh, bh; je 0x174520; cmp byte ptr [esi - 0x75], dl; inc esp; and al, 0x3c; call eax; 
0x00174f77: or bh, bh; je 0x174f9f; adc byte ptr [edi - 0x75], dl; inc esp; and al, 0x28; call eax; 
0x001775e5: or bh, bh; je 0x17760d; adc al, 0x53; call dword ptr [eax]; 
0x001777e4: or bh, bh; je 0x17780c; sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x00185f2d: or bh, bh; je 0x185f55; or al, 0x8b; inc esp; and al, 0x14; call eax; 
0x00036282: or bh, bh; je 0x362aa; sbb byte ptr [ebp - 0x18], dl; ret; 
0x0003cd55: or bh, bh; je 0x3cd7d; sub al, 0xe8; mov cl, 0x23; add eax, 0x2cc48300; ret; 
0x0008ec1d: or bh, bh; je 0x8ec45; xor byte ptr [edx + 0x51], dl; call eax; 
0x000cc133: or bh, bh; je 0xcc15b; adc byte ptr [eax - 0x18], dl; ret 0x679; 
0x000cf6b3: or bh, bh; je 0xcf6db; or byte ptr [eax - 0x18], dl; ret 0x643; 
0x000cf933: or bh, bh; je 0xcf95b; or byte ptr [eax - 0x18], dl; ret 0x641; 
0x000e7f5b: or bh, bh; leave; lcall 0, 0xaa870f3b; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000986f1: or bh, bh; leave; lcall 0, 0xc4870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00099307: or bh, bh; leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x00099084: or bh, bh; leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x000415c6: or bh, bh; push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0009a96e: or bh, byte ptr [eax + 0x10]; cmove eax, ecx; ret; 
0x0016e505: or bh, byte ptr [eax + 2]; pop ebx; pop esi; ret; 
0x000fb737: or bh, byte ptr [eax - 1]; ret; 
0x000d9da1: or bh, byte ptr [ecx + 1]; pop ebx; pop esi; mov eax, ecx; ret; 
0x0009daeb: or bh, byte ptr [edx + esi*8 - 0x46]; add byte ptr [eax], al; add byte ptr [eax], al; cmovne eax, edx; ret; 
0x00134d62: or bh, byte ptr [esi - 9]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x001535bf: or bh, cl; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x001894bb: or bh, dh; ret 0x202; 
0x00121af6: or bh, dh; ret 0xeff0; 
0x0003c4ff: or bh, dh; ret 0xffff; 
0x00094b86: or bh, dh; ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0015cc3e: or bl, 0x5f; stc; call dword ptr [eax - 1]; 
0x000911a6: or bl, bh; xor eax, eax; ret; 
0x00122a6d: or bl, byte ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x0012dc95: or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x00087f52: or bl, byte ptr [ebx + 0x5e]; ret; 
0x0012d1fd: or bl, byte ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0009459d: or bl, byte ptr [ebx - 9]; fcomp dword ptr [esi + 0x5f]; ret; 
0x00140fa7: or bl, byte ptr [ecx - 7]; call dword ptr [eax + 0x6a]; 
0x000bb872: or bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x001991c0: or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00183a23: or bl, ch; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [ebx + edi*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x00183a46: or bl, ch; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [edi + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000fedb9: or bl, ch; jge 0x83101435; ret; 
0x001867d2: or bl, ch; xchg al, ch; salc; dec ebp; sti; jmp dword ptr [esi - 0x70]; 
0x0013614c: or bl, ch; xor byte ptr [eax - 0x9f3af75], dl; ret 0x7504; 
0x001944b7: or bl, dh; movd dword ptr [eax], mm0; movq qword ptr [edx], xmm0; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0006061a: or byte ptr [0x100], ah; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00121aaa: or byte ptr [0x100f], ah; ret; 
0x0005cf62: or byte ptr [bx + si], al; add dh, dh; ret 0xf40; 
0x00091213: or byte ptr [eax + 0x1000000], 0x83; les eax, ptr [esi + ebx*2]; pop edi; ret; 
0x000e8136: or byte ptr [eax + 0x108], bh; call dword ptr gs:[0x10]; 
0x0012ec4c: or byte ptr [eax + 0x10e], bh; call dword ptr gs:[0x10]; 
0x0012e71c: or byte ptr [eax + 0x124], bh; call dword ptr gs:[0x10]; 
0x0011f23c: or byte ptr [eax + 0x128], bh; call dword ptr gs:[0x10]; 
0x00120c0c: or byte ptr [eax + 0x12d], bh; call dword ptr gs:[0x10]; 
0x001206fc: or byte ptr [eax + 0x130], bh; call dword ptr gs:[0x10]; 
0x001144db: or byte ptr [eax + 0x13e], bh; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011480c: or byte ptr [eax + 0x14a], bh; call dword ptr gs:[0x10]; 
0x00091297: or byte ptr [eax + 0x16], bh; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x00097592: or byte ptr [eax + 0x16], bh; pop ebx; ret; 
0x00130cf7: or byte ptr [eax + 0x1a4], bh; call dword ptr gs:[0x10]; 
0x0007dc73: or byte ptr [eax + 0x1a], 0; add byte ptr [eax], al; ret; 
0x00128b23: or byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x0012e8bc: or byte ptr [eax + 0x1ac], bh; call dword ptr gs:[0x10]; 
0x0012e62c: or byte ptr [eax + 0x1b0], bh; call dword ptr gs:[0x10]; 
0x0012e68c: or byte ptr [eax + 0x1b1], bh; call dword ptr gs:[0x10]; 
0x0011467c: or byte ptr [eax + 0x1b4], bh; call dword ptr gs:[0x10]; 
0x0012e91c: or byte ptr [eax + 0x1b6], bh; call dword ptr gs:[0x10]; 
0x000bddc5: or byte ptr [eax + 0x448b0270], cl; and al, 8; pop esi; ret; 
0x0009ff63: or byte ptr [eax + 0x47752f3b], al; add ebx, 1; mov eax, 0x116; call dword ptr gs:[0x10]; 
0x0007b7a9: or byte ptr [eax + 0x56], dl; call dword ptr [ebx + 0x48]; 
0x00088925: or byte ptr [eax + 0x56], dl; call dword ptr [edi + 0x48]; 
0x00095a67: or byte ptr [eax + 0x5e5bc031], dl; pop edi; ret; 
0x001228ec: or byte ptr [eax + 0x61], bh; call dword ptr gs:[0x10]; 
0x0012be9c: or byte ptr [eax + 0x65], bh; call dword ptr gs:[0x10]; 
0x0012f2fa: or byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012e79c: or byte ptr [eax + 0x67], bh; call dword ptr gs:[0x10]; 
0x00134330: or byte ptr [eax + 0x6a], dl; and al, ch; aaa; ret; 
0x00190489: or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0005bb85: or byte ptr [eax + 0x7a], 0xf9; call dword ptr [eax - 0x73]; 
0x0012e45c: or byte ptr [eax + 0x7b], bh; call dword ptr gs:[0x10]; 
0x0012866c: or byte ptr [eax + 0x7d], bh; call dword ptr gs:[0x10]; 
0x0012e53c: or byte ptr [eax + 0x7f], bh; call dword ptr gs:[0x10]; 
0x0012e56c: or byte ptr [eax + 0x81], bh; call dword ptr gs:[0x10]; 
0x0014636c: or byte ptr [eax + 0x92], bh; mov dword ptr [ebx + 0xc], 1; add edx, 1; mov ebx, 2; call dword ptr gs:[0x10]; 
0x0010c26c: or byte ptr [eax + 0x9c], bh; call dword ptr gs:[0x10]; 
0x0012e88c: or byte ptr [eax + 0xa9], bh; call dword ptr gs:[0x10]; 
0x000eaf3c: or byte ptr [eax + 0xb], bh; call dword ptr gs:[0x10]; 
0x0011ec9c: or byte ptr [eax + 0xc6], bh; call dword ptr gs:[0x10]; 
0x00114e2c: or byte ptr [eax + 0xcf], bh; call dword ptr gs:[0x10]; 
0x000f0f4c: or byte ptr [eax + 0xd1], bh; call dword ptr gs:[0x10]; 
0x000f0f1c: or byte ptr [eax + 0xd3], bh; call dword ptr gs:[0x10]; 
0x0011462c: or byte ptr [eax + 0xd4], bh; call dword ptr gs:[0x10]; 
0x0012793c: or byte ptr [eax + 0xda], bh; call dword ptr gs:[0x10]; 
0x0012785c: or byte ptr [eax + 0xdb], bh; call dword ptr gs:[0x10]; 
0x0012755c: or byte ptr [eax + 0xe8], bh; call dword ptr gs:[0x10]; 
0x0012758c: or byte ptr [eax + 0xe9], bh; call dword ptr gs:[0x10]; 
0x00123abc: or byte ptr [eax + 0xea], bh; call dword ptr gs:[0x10]; 
0x0013f62b: or byte ptr [eax + 0xf000000], al; inc edx; ret 0x2ec3; 
0x00099cc8: or byte ptr [eax + 0xf0], bh; mov edx, 0x7fffffff; xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00099c9e: or byte ptr [eax + 0xf0], bh; mov edx, 1; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00095559: or byte ptr [eax + 0xf0], bh; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x000c12a9: or byte ptr [eax + 0xf660870], cl; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00128439: or byte ptr [eax + 1], bh; pop ebx; ret; 
0x000a9304: or byte ptr [eax + ebx*2 - 0x1c7c000b], 1; lea edx, [edx - 0xa4534]; cmovne eax, edx; pop ebx; ret; 
0x000fd60d: or byte ptr [eax + ecx - 0x58], dh; add dword ptr [edi], ecx; test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x00176f25: or byte ptr [eax + edi*2 - 0x7d], dh; ret 0x8901; 
0x000cf937: or byte ptr [eax - 0x18], dl; ret 0x641; 
0x000cf6b7: or byte ptr [eax - 0x18], dl; ret 0x643; 
0x001409c7: or byte ptr [eax - 0x18], dl; ret 0xfd44; 
0x000b960c: or byte ptr [eax - 0x2f76f7be], cl; ret; 
0x000c4fd2: or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x0011418d: or byte ptr [eax - 0x73], dl; or dword ptr [edx + esi*2], 0xffffffed; call dword ptr [eax + 0x56]; 
0x001581e7: or byte ptr [eax - 0x73], dl; xchg dword ptr [esi], esp; pop edi; stc; call dword ptr [ecx + 0x50]; 
0x00114d73: or byte ptr [eax - 0x73], dl; xchg esp, ebx; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x000c0950: or byte ptr [eax - 0x776ef86], cl; pop ebx; pop edi; ret; 
0x000c065d: or byte ptr [eax - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b94ac: or byte ptr [eax - 0x776f7be], cl; pop edi; ret; 
0x000fd60f: or byte ptr [eax - 0x777af0ff], ch; add byte ptr [eax], al; add dh, dh; ret 0x7420; 
0x0009c4f4: or byte ptr [eax - 0x78], 0xf9; call dword ptr [eax - 0x18]; 
0x0005bd82: or byte ptr [eax - 1], bh; pop ebx; ret; 
0x000a7582: or byte ptr [eax - 1], dl; jae 0xa75ab; call edx; 
0x00134d5b: or byte ptr [eax - 1], dl; je 0x134d84; adc al, ch; or bh, byte ptr [esi - 9]; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x00126d76: or byte ptr [eax - 7], dl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x0008f3c3: or byte ptr [eax], 0x1b; add byte ptr [eax], al; ret; 
0x00197de0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x41cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c80: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x41e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b20: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x41fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979c0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42118; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197860: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42278; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197700: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x423d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197440: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42698; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972e0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x427f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197180: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42958; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197020: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42ab8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ec0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x42c18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ce0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x43b78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b90: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x43cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a40: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x43e18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001958f0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x43f68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957a0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x440b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195650: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44208; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195110: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194fc0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e70: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x449e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d20: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44b38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194bd0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44c88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a80: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ce0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x458f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b90: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x45a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a40: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x45b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938f0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x45ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001937a0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x45e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193650: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x45f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193500: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x460d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001933b0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193260: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193110: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x464c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192fc0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192e70: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d20: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x468b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192bd0: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a80: or byte ptr [eax], ah; pop edi; call 0x1875fd; add ebx, 0x46b58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c1fd5: or byte ptr [eax], ah; ret; 
0x00023008: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; jmp dword ptr [ebx + 0xc]; 
0x00116d9b: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6f7bf00a], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0018369b: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0xcdb8; 
0x00148433: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008c3cb: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0x40c7; 
0x0017833c: or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x00115094: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001872c5: or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0xc; ret; 
0x0003cd0a: or byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a0cf2: or byte ptr [eax], al; add byte ptr [eax], al; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x00043735: or byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00098446: or byte ptr [eax], al; add byte ptr [eax], al; inc eax; xor eax, eax; ret; 
0x0003cb62: or byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x00093905: or byte ptr [eax], al; add byte ptr [eax], al; mov byte ptr [esp + 0x47], 0; mov dword ptr [esp + 8], edx; call dword ptr gs:[0x10]; 
0x0010d6de: or byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x0003cc05: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00093066: or byte ptr [eax], al; add byte ptr [eax], al; mov edx, edi; lea ecx, [eax + 0x474]; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0016e0b2: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x000430d4: or byte ptr [eax], al; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x001a9667: or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x00099ee6: or byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00098421: or byte ptr [eax], al; add byte ptr [eax], al; xor byte ptr [ecx], 0xc0; ret; 
0x00094f06: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x000977f2: or byte ptr [eax], al; add byte ptr [eax], al; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00062698: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00148010: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0008619b: or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003e6fb: or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0012616b: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; cmp cl, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x00126150: or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x0004cda4: or byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b9ca5: or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015133f: or byte ptr [eax], al; add byte ptr [edi], cl; mov dword ptr [0x8b9c72c2], eax; dec ebp; mov word ptr [ebp - 0x64e5b7f], cs; call dword ptr [eax - 0x73]; 
0x0015c0a2: or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0005cf63: or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x000a0f2a: or byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a25c1: or byte ptr [eax], al; add esp, 0x10; cmp eax, -1; je 0xa25d0; add esp, 0xc; ret; 
0x000a0e7e: or byte ptr [eax], al; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00038147: or byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005ab3e: or byte ptr [eax], al; mov eax, edx; ret; 
0x000409c0: or byte ptr [eax], al; pop ebx; pop esi; ret; 
0x000a29a3: or byte ptr [eax], ch; add byte ptr [eax], cl; add byte ptr [ecx - 0x72dfdbbc], cl; xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0009127e: or byte ptr [eax], cl; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00091263: or byte ptr [eax], cl; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x000c1fe5: or byte ptr [eax], dh; ret; 
0x0003ad19: or byte ptr [eax], dl; add byte ptr [ebp - 0x1116feba], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000c1fc5: or byte ptr [eax], dl; ret; 
0x000a0343: or byte ptr [ebp + 0x10479db], al; fisttp dword ptr [ebx + 0x106b81b]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0014c1fa: or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0007e4d3: or byte ptr [ebp + 0x393074c9], al; ret; 
0x000880c4: or byte ptr [ebp + 0x396774c9], al; ret; 
0x0007f884: or byte ptr [ebp + 0x396f74c9], al; ret; 
0x00086f68: or byte ptr [ebp + 0x3f840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000542b3: or byte ptr [ebp + 0x478d0450], cl; add al, 0xf; xchg edx, eax; ret; 
0x00141f78: or byte ptr [ebp + 0x490c83], cl; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x00055acf: or byte ptr [ebp + 0x490f1f43], cl; ret; 
0x0007b7a5: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00088921: or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [edi + 0x48]; 
0x00089e5e: or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x00088617: or byte ptr [ebp + 0x50382444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00083772: or byte ptr [ebp + 0x50402444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e7c5a: or byte ptr [ebp + 0x511c244c], cl; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0011432e: or byte ptr [ebp + 0x51], dl; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000f844a: or byte ptr [ebp + 0x52082454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x000e7dd4: or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x000f120a: or byte ptr [ebp + 0x52142454], cl; push eax; call dword ptr [ecx + 0x20]; 
0x001760b7: or byte ptr [ebp + 0x52202454], cl; push eax; call edi; 
0x0018972a: or byte ptr [ebp + 0x52382454], cl; push esi; call dword ptr [eax + 0x48]; 
0x0016c8f5: or byte ptr [ebp + 0x5540246c], cl; push eax; call dword ptr [ecx + 8]; 
0x0008bf4b: or byte ptr [ebp + 0x5650015a], cl; call dword ptr [ebp + 0xc]; 
0x0008cb08: or byte ptr [ebp + 0x57840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000b7fcd: or byte ptr [ebp + 0x5b5f0c42], cl; ret; 
0x000b800c: or byte ptr [ebp + 0x5b5f1042], cl; ret; 
0x0007f2fa: or byte ptr [ebp + 0x5d840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000eb11f: or byte ptr [ebp + 0x5e5bf465], cl; pop edi; pop ebp; ret; 
0x000bb84d: or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000bb86f: or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000bb8ad: or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x0005cf5d: or byte ptr [ebp + 0x678f0fff], al; or byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x00066b6f: or byte ptr [ebp + 0x6c840fc0], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0008c7e8: or byte ptr [ebp + 0x77840fc0], al; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0007cd88: or byte ptr [ebp + 0x77840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001884f8: or byte ptr [ebp + 0x7840fc0], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a4738: or byte ptr [ebp + 0x94c9f], cl; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x000f48a4: or byte ptr [ebp + 4], ch; add byte ptr [ebx - 0x5ab43], cl; dec dword ptr [ebp - 0x65f5379]; call dword ptr [eax + 0x68]; 
0x0009a946: or byte ptr [ebp + 7], dh; xor eax, eax; ret; 
0x0007aaf3: or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x0011bd27: or byte ptr [ebp - 0x1220f36d], cl; call dword ptr [edx - 0x73]; 
0x0008479c: or byte ptr [ebp - 0x147bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000fb29e: or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x000fb109: or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x000fb142: or byte ptr [ebp - 0x15337b], cl; call dword ptr [eax + 0x52]; 
0x0012b61b: or byte ptr [ebp - 0x16f78b40], al; mov ebx, 0x8dfffff5; jbe 0x12b628; ret; 
0x0007fe79: or byte ptr [ebp - 0x17bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000e870e: or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x0009f952: or byte ptr [ebp - 0x19d6a379], cl; call dword ptr [eax - 0x73]; 
0x00031db4: or byte ptr [ebp - 0x1af7b], cl; call dword ptr [eax - 1]; 
0x00087cc6: or byte ptr [ebp - 0x1b54337d], cl; call dword ptr [eax - 0x73]; 
0x0007f6a8: or byte ptr [ebp - 0x207bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00027154: or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x0007c8c3: or byte ptr [ebp - 0x337bf037], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000803fd: or byte ptr [ebp - 0x357bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d6565: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363373]; call dword ptr [eax - 0x73]; 
0x000d6e17: or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x36576b]; dec dword ptr [ebp - 0x35e343]; call dword ptr [eax - 0x73]; 
0x00058c57: or byte ptr [ebp - 0x361773], cl; dec dword ptr [ebp - 0x35f363]; call dword ptr [edx - 0x77]; 
0x000b01bf: or byte ptr [ebp - 0x3a], dh; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00085478: or byte ptr [ebp - 0x407bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014ba10: or byte ptr [ebp - 0x41c6b], cl; call dword ptr [edi + 0x52]; 
0x0008505a: or byte ptr [ebp - 0x427bf037], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00108adf: or byte ptr [ebp - 0x427bf040], al; add dword ptr [eax], eax; add byte ptr [edi], cl; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0012a0b3: or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x00085c68: or byte ptr [ebp - 0x487bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0014c900: or byte ptr [ebp - 0x48], dh; add dword ptr [eax], eax; add byte ptr [eax], al; xor eax, 1; pop ebx; ret; 
0x000aff46: or byte ptr [ebp - 0x49], dh; mov dword ptr [eax], esi; pop ebx; pop esi; pop edi; ret; 
0x00085607: or byte ptr [ebp - 0x577bf040], al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000291fc: or byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000f1d4a: or byte ptr [ebp - 0x59f7b], cl; call dword ptr [eax - 0x75]; 
0x000f8f8a: or byte ptr [ebp - 0x5ab7b], cl; call dword ptr [eax - 0x75]; 
0x0018263a: or byte ptr [ebp - 0x6450345], cl; call dword ptr [edi + 0x56]; 
0x00160f91: or byte ptr [ebp - 0x64a4f7f], cl; call dword ptr [eax - 0x73]; 
0x00154b78: or byte ptr [ebp - 0x64caf7f], cl; call dword ptr [eax - 0x73]; 
0x001537e1: or byte ptr [ebp - 0x64cc779], cl; call dword ptr [eax - 0x73]; 
0x0014d023: or byte ptr [ebp - 0x650737a], cl; call dword ptr [eax - 0x73]; 
0x0012edb0: or byte ptr [ebp - 0x6597779], cl; call dword ptr [eax + 0x55]; 
0x0012edcb: or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x0012ede9: or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x0011b81b: or byte ptr [ebp - 0x65d237a], cl; call dword ptr [eax - 0x73]; 
0x00111cae: or byte ptr [ebp - 0x65dbf79], cl; call dword ptr [eax - 0x73]; 
0x00110adb: or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x001106d9: or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax - 0x73]; 
0x00111c21: or byte ptr [ebp - 0x65de779], cl; call dword ptr [eax - 0x73]; 
0x000eb997: or byte ptr [ebp - 0x6606f7f], cl; call dword ptr [eax - 0x73]; 
0x000893cd: or byte ptr [ebp - 0x67c4f7a], cl; call dword ptr [eax - 0x73]; 
0x0008666e: or byte ptr [ebp - 0x67ca379], cl; call dword ptr [eax - 0x73]; 
0x0007d971: or byte ptr [ebp - 0x67ce771], cl; jmp dword ptr [ebp - 0x75]; 
0x00038982: or byte ptr [ebp - 0x68aef6d], cl; call dword ptr [edx - 0x77]; 
0x00030a9c: or byte ptr [ebp - 0x68b9b79], cl; call dword ptr [eax + 0x56]; 
0x000337eb: or byte ptr [ebp - 0x68b9b7b], cl; call dword ptr [eax + 0x56]; 
0x000282a1: or byte ptr [ebp - 0x68f6b7f], cl; call dword ptr [eax - 0x73]; 
0x001810b7: or byte ptr [ebp - 0x699316a], cl; call dword ptr [edx - 0x77]; 
0x00181512: or byte ptr [ebp - 0x699316d], cl; call dword ptr [edx - 0x77]; 
0x00181d82: or byte ptr [ebp - 0x6993175], cl; call dword ptr [ecx - 0x77]; 
0x00181535: or byte ptr [ebp - 0x6994045], cl; call dword ptr [edi + 0x56]; 
0x001810d6: or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x00181da5: or byte ptr [ebp - 0x699404d], cl; call dword ptr [esi + 0x57]; 
0x001814f7: or byte ptr [ebp - 0x6994e55], cl; call dword ptr [ebp + 0x56]; 
0x0018066d: or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x001814dc: or byte ptr [ebp - 0x6995c45], cl; call dword ptr [edi + 0x56]; 
0x00181d48: or byte ptr [ebp - 0x6995c4d], cl; call dword ptr [esi + 0x57]; 
0x001708e2: or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x0016a2fc: or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x51]; 
0x0016acf8: or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x57]; 
0x00169b58: or byte ptr [ebp - 0x69d8780], cl; call dword ptr [eax + 0x57]; 
0x001607f9: or byte ptr [ebp - 0x69f676f], cl; call dword ptr [edx + 0x50]; 
0x001602e2: or byte ptr [ebp - 0x69fa36d], cl; call dword ptr [edx + 0x50]; 
0x000fb1d2: or byte ptr [ebp - 0x6a03668], cl; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x00123ba2: or byte ptr [ebp - 0x6a0367d], cl; call dword ptr [eax - 0x73]; 
0x00154501: or byte ptr [ebp - 0x6a2327d], cl; call dword ptr [eax - 1]; 
0x0012b81b: or byte ptr [ebp - 0x6ac017d], cl; call dword ptr [eax + 0x56]; 
0x0012602c: or byte ptr [ebp - 0x6aea17d], cl; call dword ptr [eax + 0x55]; 
0x001261c1: or byte ptr [ebp - 0x6b12a7d], cl; call dword ptr [eax + 0x55]; 
0x001261a6: or byte ptr [ebp - 0x6b15c7d], cl; call dword ptr [eax + 0x55]; 
0x0012618b: or byte ptr [ebp - 0x6b1907d], cl; call dword ptr [eax + 0x55]; 
0x00126170: or byte ptr [ebp - 0x6b1c57d], cl; call dword ptr [eax + 0x55]; 
0x00126155: or byte ptr [ebp - 0x6b1f77d], cl; call dword ptr [eax + 0x55]; 
0x0012613a: or byte ptr [ebp - 0x6b2437d], cl; call dword ptr [eax + 0x55]; 
0x0012611f: or byte ptr [ebp - 0x6b2877d], cl; call dword ptr [eax + 0x55]; 
0x00126104: or byte ptr [ebp - 0x6b2b97d], cl; call dword ptr [eax + 0x55]; 
0x001260e9: or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x001260ce: or byte ptr [ebp - 0x6b3307d], cl; call dword ptr [eax + 0x55]; 
0x001260b3: or byte ptr [ebp - 0x6b3657d], cl; call dword ptr [eax + 0x55]; 
0x00126098: or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x0012607d: or byte ptr [ebp - 0x6b3e57d], cl; call dword ptr [eax + 0x55]; 
0x00126062: or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x00126047: or byte ptr [ebp - 0x6b4a37d], cl; call dword ptr [eax + 0x55]; 
0x00123ca0: or byte ptr [ebp - 0x6b5646a], cl; call dword ptr [edx - 0x77]; 
0x00123c81: or byte ptr [ebp - 0x6b5676a], cl; call dword ptr [edx - 0x77]; 
0x00123c62: or byte ptr [ebp - 0x6b56d6a], cl; call dword ptr [edx - 0x77]; 
0x000fdec5: or byte ptr [ebp - 0x6b7be7d], cl; call dword ptr [eax + 0x55]; 
0x000fe222: or byte ptr [ebp - 0x6b7c57d], cl; call dword ptr [eax + 0x55]; 
0x000fe11d: or byte ptr [ebp - 0x6b7cb7d], cl; call dword ptr [eax + 0x55]; 
0x000fdff1: or byte ptr [ebp - 0x6b7d17d], cl; call dword ptr [eax + 0x55]; 
0x000fdc5a: or byte ptr [ebp - 0x6b7d77d], cl; call dword ptr [eax + 0x55]; 
0x000fdd21: or byte ptr [ebp - 0x6b7e37d], cl; call dword ptr [eax + 0x55]; 
0x000fe0ba: or byte ptr [ebp - 0x6b7e97d], cl; call dword ptr [eax + 0x55]; 
0x000fde69: or byte ptr [ebp - 0x6b7ef7d], cl; call dword ptr [eax + 0x55]; 
0x000fb287: or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax + 0x53]; 
0x000fb2e4: or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax - 1]; 
0x000dd87a: or byte ptr [ebp - 0x6b9d27d], cl; call dword ptr [eax + 0x56]; 
0x000dd342: or byte ptr [ebp - 0x6ba077d], cl; call dword ptr [eax + 0x56]; 
0x000a712b: or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x001555f1: or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x0015ac30: or byte ptr [ebp - 0x6beb379], cl; call dword ptr [eax + 0x53]; 
0x000fdd5f: or byte ptr [ebp - 0x6c0a97d], cl; call dword ptr [eax + 0x55]; 
0x00061da0: or byte ptr [ebp - 0x6cd3c7a], cl; call dword ptr [eax + 0x53]; 
0x00061cce: or byte ptr [ebp - 0x6cf826d], cl; call dword ptr [esi + 0x52]; 
0x00039ed7: or byte ptr [ebp - 0x6d12a7b], cl; call dword ptr [eax + 0x53]; 
0x00124ab3: or byte ptr [ebp - 0x6d1907a], cl; call dword ptr [eax - 1]; 
0x00123673: or byte ptr [ebp - 0x6d1907d], cl; call dword ptr [eax + 0x6a]; 
0x0014a17f: or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x52]; 
0x0014a1c1: or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x53]; 
0x00141a72: or byte ptr [ebp - 0x6d32380], cl; call dword ptr [eax + 0x56]; 
0x000301a7: or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x00030189: or byte ptr [ebp - 0x6d4816d], cl; call dword ptr [edx + 0x50]; 
0x0013fdda: or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax + 0x53]; 
0x00149cee: or byte ptr [ebp - 0x6d6987b], cl; call dword ptr [eax - 0x73]; 
0x000dd905: or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax + 0x56]; 
0x001253a5: or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax - 0x73]; 
0x0012565a: or byte ptr [ebp - 0x6d6987d], cl; call dword ptr [eax - 0x73]; adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x0007313f: or byte ptr [ebp - 0x6d7bf040], al; add al, 0; add byte ptr [ecx], bh; ret; 
0x0007d039: or byte ptr [ebp - 0x717bf040], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0012bc67: or byte ptr [ebp - 0x74bb8a40], al; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0003124c: or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x0008f2ea: or byte ptr [ebp - 0x74ee8b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0008f1f5: or byte ptr [ebp - 0x74f18b2e], al; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00115754: or byte ptr [ebp - 0x75], ah; sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x0014c128: or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x0008fb10: or byte ptr [ebp - 0x77], ah; adc eax, 0x78; pop ebx; ret; 
0x000b9cda: or byte ptr [ebp - 0x7af0f781], cl; mov esp, 0x5f000008; pop esi; pop ebx; ret; 
0x00086f64: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00066b6b: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x00085474: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0007f2f6: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001884f4: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000803f9: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x0007313b: or byte ptr [ebp - 0x7af78a37], al; ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x0012b5cb: or byte ptr [ebp - 0x7afb8b40], al; sal byte ptr [ebp + 4], cl; ret; 
0x001810cf: or byte ptr [ebp - 0x7ccb8b40], al; in al, dx; or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x000984be: or byte ptr [ebp - 0x7ced8b40], al; in al, dx; or al, 0xff; jae 0x984cd; call dword ptr [ebx]; 
0x00185013: or byte ptr [ebp - 0x7cfbdbbc], cl; ret; 
0x000d5d55: or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x0013f8ec: or byte ptr [ebp - 0x7d37d], cl; call dword ptr [eax + 0x6a]; 
0x00173b01: or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x00173b62: or byte ptr [ebp - 0x8b7b], cl; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x00173cda: or byte ptr [ebp - 0x9b7b], cl; call dword ptr [eax + 0x6a]; 
0x000815e4: or byte ptr [ebp - 0x9fa8b37], al; ret 0x7408; 
0x0017eba6: or byte ptr [ebp - 0xa37b], cl; call dword ptr [eax + 0x6a]; 
0x0017f19e: or byte ptr [ebp - 0xa77b], cl; call dword ptr [eax - 1]; 
0x0016c63b: or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x00176bf2: or byte ptr [ebp - 0xc63437d], cl; call dword ptr [eax - 0x73]; 
0x00174a2a: or byte ptr [ebp - 0xc86c37d], cl; call dword ptr [eax - 0x73]; 
0x00150409: or byte ptr [ebp - 0xc], dh; ret; 
0x00171fbc: or byte ptr [ebp - 0xcb1e37d], cl; call dword ptr [eax - 0x73]; 
0x00138e51: or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x0011457c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114590; pop ebx; ret; 
0x001145ec: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x114600; pop ebx; ret; 
0x001147cc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1147e0; pop ebx; ret; 
0x0011ecdc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ecf0; pop ebx; ret; 
0x0011f1fc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11f210; pop ebx; ret; 
0x0011ffa8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x11ffc0; pop ebx; ret; 
0x001206bc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1206d0; pop ebx; ret; 
0x00120bc8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120be0; pop ebx; ret; 
0x00120fc8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x120fe0; pop ebx; ret; 
0x001221cc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x1221e0; pop ebx; ret; 
0x0012221c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x122230; pop ebx; ret; 
0x00123f4c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x123f60; pop ebx; ret; 
0x0012a9fc: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12aa10; pop ebx; ret; 
0x0012cd88: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12cda0; pop ebx; ret; 
0x0012e20c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x12e220; pop ebx; ret; 
0x0006134c: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x61360; pop ebx; ret; 
0x0009f5a8: or byte ptr [ebp - 1], ah; adc eax, 0x10; cmp eax, 0xfffff000; ja 0x9f5c0; pop ebx; ret; 
0x000fba8c: or byte ptr [ebp - 1], ah; adc eax, 0x10; neg eax; pop ebx; ret; 
0x0016e9fa: or byte ptr [ebp - 1], dl; jbe 0x16ea0b; push edi; call dword ptr [eax + 8]; 
0x0016ea3d: or byte ptr [ebp - 1], dl; jbe 0x16ea4e; push edi; call dword ptr [eax + 0x10]; 
0x0008e6ea: or byte ptr [ebx + 0x10891851], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00087f7d: or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00087fbb: or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00099eb7: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915d7: or byte ptr [ebx + 0x137701f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00099e87: or byte ptr [ebx + 0x137702f8], al; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000982ab: or byte ptr [ebx + 0x1cf8c100], cl; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00092bab: or byte ptr [ebx + 0x1e08300], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000982cb: or byte ptr [ebx + 0x1fe8c100], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0017186b: or byte ptr [ebx + 0x20508b00], cl; push esi; push eax; call dword ptr [edx + 4]; 
0x0016e18b: or byte ptr [ebx + 0x206a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x00090d3e: or byte ptr [ebx + 0x28901e0], al; xor eax, eax; ret; 
0x000838f3: or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x0012af74: or byte ptr [ebx + 0x33fffee3], al; push esi; call edi; 
0x000a31e3: or byte ptr [ebx + 0x35083], cl; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x0016d3b7: or byte ptr [ebx + 0x38908ec], al; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x0011435c: or byte ptr [ebx + 0x39142444], cl; ret; 
0x001ad977: or byte ptr [ebx + 0x39782474], cl; ret; 
0x000c69d7: or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x000871f1: or byte ptr [ebx + 0x43891043], cl; adc al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00172ef2: or byte ptr [ebx + 0x438b0cc6], al; add al, 0x56; push ebx; call dword ptr [eax + 0x24]; 
0x00095c9e: or byte ptr [ebx + 0x47521f8], al; add dword ptr [edx + 4], 1; add esp, 0xc; ret; 
0x0016c911: or byte ptr [ebx + 0x50552048], cl; call dword ptr [ecx + 8]; 
0x0016c7ad: or byte ptr [ebx + 0x50562050], cl; call dword ptr [edx + 4]; 
0x00174f61: or byte ptr [ebx + 0x50572050], cl; call dword ptr [edx + 4]; 
0x00172e52: or byte ptr [ebx + 0x53560443], cl; call dword ptr [eax + 0x24]; 
0x00179ad0: or byte ptr [ebx + 0x56530446], cl; call dword ptr [eax + 4]; 
0x00081b97: or byte ptr [ebx + 0x56], dl; call dword ptr [edi + 0x18]; 
0x001398ba: or byte ptr [ebx + 0x56a1c40], cl; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x00142d5f: or byte ptr [ebx + 0x58890c5a], cl; or al, 0xe9; ret 0xfffe; 
0x000c122c: or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bdde6: or byte ptr [ebx + 0x5e082444], cl; ret; 
0x000ac4c5: or byte ptr [ebx + 0x5e5b02c0], al; pop edi; pop ebp; ret; 
0x0005ac5f: or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0008db05: or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0003a0e7: or byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00039fba: or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x001b479b: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret 4; 
0x0008d0ac: or byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x00094470: or byte ptr [ebx + 0x5e5b4cc4], al; pop edi; pop ebp; ret; 
0x0017200e: or byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0009255e: or byte ptr [ebx + 0x5e5b6cc4], al; pop edi; pop ebp; ret; 
0x000d2f95: or byte ptr [ebx + 0x5e], bl; mov eax, edi; pop edi; pop ebp; ret; 
0x00159f11: or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x0005a26a: or byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013c637: or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0005bac2: or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0004076f: or byte ptr [ebx + 0x5e], bl; ret; 
0x0008187c: or byte ptr [ebx + 0x5f5e5b02], cl; ret; 
0x00121f6e: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x001300bf: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x0003e1b2: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0005ae20: or byte ptr [ebx + 0x650c2454], cl; sub edx, dword ptr [0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0013dc48: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013dc48: or byte ptr [ebx + 0x6b818], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00105f99: or byte ptr [ebx + 0x748b8134], cl; or al, 0x89; je 0x105f66; or al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x0016edec: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x0016ee3a: or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax]; 
0x001775e2: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x14; push ebx; call dword ptr [eax]; 
0x001777e1: or byte ptr [ebx + 0x74ff0843], cl; and al, 0x1c; push ebx; call dword ptr [eax + 0xc]; 
0x0016c792: or byte ptr [ebx + 0x74ff1043], cl; and al, 0x14; push esi; call dword ptr [eax + 4]; 
0x001744c3: or byte ptr [ebx + 0x74ff5043], cl; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0018614b: or byte ptr [ebx + 0x75c98508], cl; push es; ret; 
0x001378b2: or byte ptr [ebx + 0x7d89a47d], cl; fsub st(0), st(0); ret 0xffe6; 
0x00172e0d: or byte ptr [ebx + 0x86a0443], cl; push ebx; call dword ptr [eax + 0x18]; 
0x0016e23d: or byte ptr [ebx + 0x86a0447], cl; push edi; call dword ptr [eax + 0x18]; 
0x0018715b: or byte ptr [ebx + 0x8b9004], cl; ret; 
0x0008996b: or byte ptr [ebx + 0xa], dh; movzx eax, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0009830b: or byte ptr [ebx + 0xdff2500], cl; add byte ptr [edi], cl; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00096b62: or byte ptr [ebx + 0xf0b808], cl; add byte ptr [eax], al; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0013f4fe: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013f5a3: or byte ptr [ebx + eax*4], cl; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x00134a32: or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0003ddd4: or byte ptr [ebx + edx - 0x17b00000], 0xf1; scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x001769ea: or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x000fedb5: or byte ptr [ebx - 0x14f7dbac], cl; jge 0x83101435; ret; 
0x00172abb: or byte ptr [ebx - 0x16fbdbbc], cl; pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000313cd: or byte ptr [ebx - 0x17], bl; or al, 0x18; add byte ptr [eax], al; lea esi, [esi]; pop ebx; ret; 
0x0016e281: or byte ptr [ebx - 0x1a7cfbb9], cl; cld; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016e210: or byte ptr [ebx - 0x1f7cfba9], cl; cld; push eax; push edi; call dword ptr [edx + 0x18]; 
0x0003c0c6: or byte ptr [ebx - 0x22f3dbbc], cl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x00125065: or byte ptr [ebx - 0x2776ab3c], al; pop ebx; pop esi; ret; 
0x00154007: or byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x001229fa: or byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0008d37a: or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x000d6b45: or byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x00135318: or byte ptr [ebx - 0x367af7b8], cl; je 0x135328; xor eax, eax; pop ebx; ret; 
0x0008dd4a: or byte ptr [ebx - 0x37c6ebb6], cl; cmovb eax, ecx; sub eax, dword ptr [edx + 0xc]; ret; 
0x00103f93: or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x001734b2: or byte ptr [ebx - 0x3f7ae3c0], cl; je 0x1734c3; sub esp, 0xc; push esi; call eax; 
0x0016ea02: or byte ptr [ebx - 0x3f7aef3c], al; je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00170667: or byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x0010c3f5: or byte ptr [ebx - 0x47fbdba4], cl; cmp dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e945: or byte ptr [ebx - 0x47fbdba4], cl; fld dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000eff15: or byte ptr [ebx - 0x47fbdba4], cl; int 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012ebe5: or byte ptr [ebx - 0x47fbdba4], cl; jge 0x12ebee; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129915: or byte ptr [ebx - 0x47fbdba4], cl; jns 0x12991d; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e8e5: or byte ptr [ebx - 0x47fbdba4], cl; mov dl, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001153a5: or byte ptr [ebx - 0x47fbdba4], cl; pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012e4a5: or byte ptr [ebx - 0x47fbdba4], cl; xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00091157: or byte ptr [ebx - 0x47fbdbb4], cl; push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00073923: or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00077b4a: or byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ecx - 0x51f73]; dec dword ptr [ebx - 0x52b73]; call dword ptr [ecx + 0x50]; 
0x00041577: or byte ptr [ebx - 0x50f0fb14], al; ret 0x5750; 
0x000739c6: or byte ptr [ebx - 0x5576b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00071dce: or byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x0006c316: or byte ptr [ebx - 0x58f63], cl; call dword ptr [edx + 0x50]; 
0x0006ab1e: or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x0006767f: or byte ptr [ebx - 0x5ab4b], cl; call dword ptr [eax - 1]; 
0x00067502: or byte ptr [ebx - 0x5b773], cl; jmp dword ptr [ebp - 0x5f]; 
0x000c93a7: or byte ptr [ebx - 0x5bf0ff26], al; ret 0xc102; 
0x000d194e: or byte ptr [ebx - 0x72d7dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0015793c: or byte ptr [ebx - 0x72dfdbbc], cl; adc bh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000d2272: or byte ptr [ebx - 0x72dfdbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x000ce0a2: or byte ptr [ebx - 0x72e3dbbc], cl; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x00190067: or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [edi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x0015cc38: or byte ptr [ebx - 0x72e7dbbc], cl; or bl, 0x5f; stc; call dword ptr [eax - 1]; 
0x0010987b: or byte ptr [ebx - 0x72ebdbb4], cl; xchg ecx, eax; dec ecx; dec eax; stc; call dword ptr [edx - 1]; 
0x00140a7d: or byte ptr [ebx - 0x72ebdbbc], cl; cmp byte ptr [edi], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x0015b18a: or byte ptr [ebx - 0x72ebdbbc], cl; cmp byte ptr [esi + 0x5f], 0xf9; call dword ptr [eax + 0x55]; 
0x00088fe8: or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [edi], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x00160b92: or byte ptr [ebx - 0x72efdbac], cl; xchg edx, eax; pop esp; pushal; stc; call dword ptr [edx + 0x50]; 
0x00153202: or byte ptr [ebx - 0x72efdbbc], cl; cwde; loope 0x153268; stc; call dword ptr [ebx - 0x73]; 
0x00145cd5: or byte ptr [ebx - 0x72f3dbbc], cl; sbb byte ptr [edx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x0017782a: or byte ptr [ebx - 0x73], dl; push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x000fb3e8: or byte ptr [ebx - 0x73], dl; xor bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00090ddb: or byte ptr [ebx - 0x73ef7c0], cl; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x0003c7f6: or byte ptr [ebx - 0x746ff398], cl; inc esp; and al, 8; mov esp, ecx; jmp edx; 
0x00130ece: or byte ptr [ebx - 0x74cfdbb4], cl; push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00099ef8: or byte ptr [ebx - 0x74f3dbb4], cl; push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00034b47: or byte ptr [ebx - 0x74fbdbac], cl; inc eax; cmp al, 0x8b; add al, 0x90; ret; 
0x00187177: or byte ptr [ebx - 0x74fbdbbc], cl; add al, 0x90; mov edx, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; ret; 
0x0017825f: or byte ptr [ebx - 0x74fbdbbc], cl; inc eax; xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x00125f68: or byte ptr [ebx - 0x76afdb84], cl; inc edi; or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0012f20d: or byte ptr [ebx - 0x76c7dbbc], cl; inc esp; and al, 0xc; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x000432c8: or byte ptr [ebx - 0x76f3dbac], cl; ret; 
0x00090560: or byte ptr [ebx - 0x76fbdbac], cl; ret; 
0x00070e54: or byte ptr [ebx - 0x79f0a506], al; bound ecx, qword ptr [0x4c890000]; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x0014da8b: or byte ptr [ebx - 0x7b72f714], al; and al, 0xb0; add byte ptr [eax], al; add byte ptr [eax + 0x6a], dl; add eax, ebp; ret 0xf9a2; 
0x00126ff0: or byte ptr [ebx - 0x7bf0fe01], al; ret 0xfff5; 
0x00125f6f: or byte ptr [ebx - 0x7cb3dbac], cl; ret; 
0x0017d412: or byte ptr [ebx - 0x7ccbdbac], cl; ret 0x5204; 
0x00041423: or byte ptr [ebx - 0x7ce3dbac], cl; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000a9f61: or byte ptr [ebx - 0x7cebdb84], cl; ret 0x8301; 
0x000f061d: or byte ptr [ebx - 0x7f72378b], cl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x0017c2bd: or byte ptr [ebx - 0x8f7b], cl; inc dword ptr [ecx]; ret; 
0x00120f97: or byte ptr [ebx - 0x9afb81], cl; adc eax, 0x10; pop ebp; pop edi; pop ebx; ret; 
0x0008daa7: or byte ptr [ebx - 0xe7dbbc], cl; je 0x8dad3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0013852e: or byte ptr [ebx - 1], dl; jae 0x138563; call eax; 
0x000fb289: or byte ptr [ebx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fb2e6: or byte ptr [ebx], 0x48; stc; call dword ptr [eax - 1]; 
0x00153b28: or byte ptr [ebx], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x00153b28: or byte ptr [ebx], 0x5e; stc; call dword ptr [eax - 0x18]; fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0002de91: or byte ptr [ebx], al; cmp byte ptr [ebx + 0x390c2444], cl; ret 0x840f; 
0x0008f3c4: or byte ptr [ebx], bl; add byte ptr [eax], al; ret; 
0x000ad9e8: or byte ptr [ebx], dl; mov eax, esi; pop ebx; pop esi; ret; 
0x0005bbd0: or byte ptr [ecx + 0x10890450], cl; ret; 
0x000810e6: or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x001444e0: or byte ptr [ecx + 0x12c244c], cl; ret; 
0x00124264: or byte ptr [ecx + 0x1b802], cl; add byte ptr [eax], al; ret; 
0x0003b07e: or byte ptr [ecx + 0x1cc483d0], cl; ret 4; 
0x0018fe74: or byte ptr [ecx + 0x23e95bd8], cl; retf; clc; jmp dword ptr [esi - 0x70]; 
0x001578ff: or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13180], cl; call dword ptr [eax + 0x55]; 
0x0015d188: or byte ptr [ecx + 0x244c8bda], cl; and al, 0x29; ret 0xca39; 
0x00100e87: or byte ptr [ecx + 0x293c244c], cl; fimul dword ptr [ecx - 0x769fdbbc]; ret; 
0x0012b034: or byte ptr [ecx + 0x30ffd055], cl; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x000a75d7: or byte ptr [ecx + 0x43891053], cl; add al, 0x5b; pop esi; pop edi; ret; 
0x000c1269: or byte ptr [ecx + 0x448b0350], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000bde16: or byte ptr [ecx + 0x448b0350], cl; and al, 8; pop esi; ret; 
0x00086256: or byte ptr [ecx + 0x4508910], cl; pop ebx; pop esi; ret; 
0x000864b7: or byte ptr [ecx + 0x4538913], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0008e7a1: or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x0008e702: or byte ptr [ecx + 0x4c48308], cl; pop ebx; pop esi; ret; 
0x00089541: or byte ptr [ecx + 0x4c483f0], cl; pop ebx; pop esi; ret; 
0x00177238: or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000810e0: or byte ptr [ecx + 0x58890450], cl; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x00142d5c: or byte ptr [ecx + 0x5a8b0858], cl; or al, 0x89; pop eax; or al, 0xe9; ret 0xfffe; 
0x00070da5: or byte ptr [ecx + 0x5af983d7], cl; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0013e22f: or byte ptr [ecx + 0x5c8b2a0c], cl; and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x000ac1b4: or byte ptr [ecx + 0x5f5e5bd8], cl; pop ebp; ret; 
0x000342d5: or byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x000d2f7f: or byte ptr [ecx + 0x5f5e5bf8], cl; pop ebp; ret; 
0x000810b2: or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x0016d3ba: or byte ptr [ecx + 0x873ff03], cl; push esi; call dword ptr [ebx + 0xc]; 
0x000951f8: or byte ptr [ecx + 0x8beeb], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000b411d: or byte ptr [ecx + 0x9eb83d0], cl; lea ecx, [edx + 9]; jne 0xb3f81; pop ebx; ret; 
0x001adebf: or byte ptr [ecx + 0xacc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x000b413f: or byte ptr [ecx + 0xaeb83d0], cl; lea ecx, [edx + 0xa]; jne 0xb3f81; pop ebx; ret; 
0x001b0395: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret 4; 
0x0011ba73: or byte ptr [ecx + 0xbcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00040ae4: or byte ptr [ecx + 0xc5689f0], cl; add esp, 0x34; pop ebx; pop esi; ret 4; 
0x0005af9d: or byte ptr [ecx + 0xcc483d0], cl; ret; 
0x000b417d: or byte ptr [ecx + 0xceb83d0], cl; lea ecx, [edx + 0xc]; jne 0xb3f81; pop ebx; ret; 
0x0013fc96: or byte ptr [ecx + 0xe1], al; rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0005ec78: or byte ptr [ecx + 0xf], al; xchg esp, eax; ret 0x6a52; 
0x000e565f: or byte ptr [ecx + 0xfcc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003cd08: or byte ptr [ecx + 8], bh; call dword ptr gs:[0x10]; 
0x0013d1da: or byte ptr [ecx + eax], 0xf0; call dword ptr [eax - 0x73]; 
0x000f100f: or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x000390c6: or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0003c043: or byte ptr [ecx - 0x100001], bh; sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000291f6: or byte ptr [ecx - 0x14fbdba4], cl; or byte ptr [ebp - 0x57cff8a], cl; add al, 0x74; sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000826c9: or byte ptr [ecx - 0x16fbdbbc], cl; popfd; ljmp 0x2674:0x8d2effff; add byte ptr [eax - 1], bh; ret; 
0x00038625: or byte ptr [ecx - 0x1cf6b], cl; call dword ptr [eax - 1]; 
0x000b966c: or byte ptr [ecx - 0x2f76f7be], cl; ret; 
0x00082b2c: or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x001398d5: or byte ptr [ecx - 0x373edbcc], cl; or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x00091264: or byte ptr [ecx - 0x3776efbe], cl; ret; 
0x000864ef: or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x000a73cd: or byte ptr [ecx - 0x3e05fe08], cl; clc; add eax, dword ptr [ecx]; ret 0x38b; 
0x0009127f: or byte ptr [ecx - 0x3fceefb0], cl; ret; 
0x0009109b: or byte ptr [ecx - 0x3fcef3b0], cl; ret; 
0x0010cefb: or byte ptr [ecx - 0x3fcefbb0], cl; ret; 
0x0010ca41: or byte ptr [ecx - 0x3fcefbbd], cl; pop ebx; pop esi; pop edi; ret; 
0x00109d93: or byte ptr [ecx - 0x3ff001e], al; dec dword ptr [ecx]; retf 0x5489; ret; 
0x00171667: or byte ptr [ecx - 0x47a4f3ad], cl; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x00072cc3: or byte ptr [ecx - 0x4f77b], cl; dec dword ptr [ecx - 0x4eb4b]; dec dword ptr [ecx - 0x4ff63]; dec dword ptr [ecx - 0x53373]; jmp dword ptr [ebp - 0x5f]; 
0x0007334b: or byte ptr [ecx - 0x5577b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00069cad: or byte ptr [ecx - 0x58b6b], cl; dec dword ptr [ebx - 0x58f63]; call dword ptr [ecx + 0x50]; 
0x0006bee5: or byte ptr [ecx - 0x58b73], cl; call dword ptr [eax - 1]; 
0x0006b49f: or byte ptr [ecx - 0x5eb63], cl; call dword ptr [eax - 1]; 
0x00040897: or byte ptr [ecx - 0x7235c622], cl; pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x00175e5b: or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0004e369: or byte ptr [ecx - 0x76dbdbbc], cl; ret 0x74ff; 
0x001364a7: or byte ptr [ecx - 0x76e3dbbc], cl; ret; 
0x00080f74: or byte ptr [ecx - 0x76f3dbbc], cl; ret; 
0x0017219c: or byte ptr [ecx - 0x76f7dbb4], cl; inc esp; and al, 4; jmp edx; 
0x000c06bd: or byte ptr [ecx - 0x776f7be], cl; pop ebx; pop edi; ret; 
0x000b950c: or byte ptr [ecx - 0x776f7be], cl; pop edi; ret; 
0x00077df8: or byte ptr [ecx - 0x7ac4f38e], cl; mov eax, 0xffffffb; test eax, esp; ret; 
0x000a3995: or byte ptr [ecx - 0x7ae3dbac], cl; ror byte ptr [edi], cl; mov byte ptr [esi - 0x76fffffa], dl; ret; 
0x0016acf1: or byte ptr [ecx - 0x7cfbdbbc], cl; in al, dx; or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x57]; 
0x0013f627: or byte ptr [ecx - 0x7ff7db84], al; add byte ptr [eax], al; add byte ptr [edi], cl; inc edx; ret 0x2ec3; 
0x0012489d: or byte ptr [ecx - 0xa37b], cl; dec dword ptr [ecx + 0x14a165f3]; add byte ptr [eax], al; add byte ptr [ecx - 0x79721bbb], cl; les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x0003336d: or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0017f40a: or byte ptr [ecx - 0xeb73], cl; dec dword ptr [ecx - 0xe77b]; dec dword ptr [ebp - 0xa77b]; dec dword ptr [ecx - 0xe36b]; call dword ptr [eax + 0x6a]; 
0x0016ed96: or byte ptr [ecx - 0xfbdbac], cl; and byte ptr [ebp - 0x3fceff8a], cl; ret; 
0x0017a086: or byte ptr [ecx - 0xfbdbac], cl; pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x000a7504: or byte ptr [ecx - 1], dl; jae 0xa752d; call eax; 
0x0003f532: or byte ptr [ecx - 1], dl; je 0x3f55b; dec esp; call eax; 
0x0002abb7: or byte ptr [ecx - 7], dh; call dword ptr [eax - 0x18]; 
0x001786b5: or byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [edx], ch; push edi; call dword ptr [eax + 0x14]; 
0x000e8138: or byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000e7fea: or byte ptr [ecx], al; add byte ptr [eax], al; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0010cdea: or byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [esp + 8]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x0010cf20: or byte ptr [ecx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0014fa76: or byte ptr [ecx], al; je 0x14fa9d; add esp, 0xc; ret; 
0x000a1145: or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x00081290: or byte ptr [ecx], al; ret 0x3e89; 
0x0003a76a: or byte ptr [ecx], al; ret 0x8952; 
0x0008de44: or byte ptr [ecx], al; ret 0xc801; 
0x0004b2cf: or byte ptr [ecx], al; ret 0xd389; 
0x000aa38a: or byte ptr [ecx], al; ret 0xfe83; 
0x0011b1d2: or byte ptr [ecx], al; ret; 
0x000385a3: or byte ptr [ecx], al; ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x000754c8: or byte ptr [ecx], al; ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x00091072: or byte ptr [ecx], al; xor eax, eax; ret; 
0x000944f7: or byte ptr [ecx], bh; inc esp; and al, 4; sete al; movzx eax, al; ret; 
0x00033a8d: or byte ptr [ecx], bh; ret 0x1474; 
0x001009ef: or byte ptr [ecx], bh; ret 0x1c7e; 
0x0019a8bc: or byte ptr [ecx], bh; ret 0x1d72; 
0x001009e5: or byte ptr [ecx], bh; ret 0x267e; 
0x0019668c: or byte ptr [ecx], bh; ret 0x2d72; 
0x0017e60f: or byte ptr [ecx], bh; ret 0x3c75; 
0x0014ea52: or byte ptr [ecx], bh; ret 0x460f; 
0x00104a74: or byte ptr [ecx], bh; ret 0x474; 
0x000f281e: or byte ptr [ecx], bh; ret 0x830f; 
0x0006f75e: or byte ptr [ecx], bh; ret 0x840f; 
0x00088521: or byte ptr [ecx], bh; ret 0x8c74; 
0x001579db: or byte ptr [ecx], bh; ret 0xc074; 
0x00189872: or byte ptr [ecx], bh; ret 0xd889; 
0x000ad6d4: or byte ptr [ecx], bh; ret 0xe775; 
0x000a2108: or byte ptr [ecx], bh; ret 0xf375; 
0x000ffd32: or byte ptr [ecx], bh; ret 0xf475; 
0x0002eaf9: or byte ptr [ecx], bh; ret; 
0x0005a674: or byte ptr [ecx], bh; retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x001713bd: or byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00087bb7: or byte ptr [ecx], bh; ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x000a8a49: or byte ptr [ecx], ch; ret 0x348d; 
0x0008aa1b: or byte ptr [ecx], ch; ret 0xfa39; 
0x000a2902: or byte ptr [ecx], ch; ret 0xfa83; 
0x00080e23: or byte ptr [ecx], ch; ret; 
0x0007456f: or byte ptr [ecx], ch; ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003fd00: or byte ptr [ecx], cl; ret 0xd389; 
0x0011f618: or byte ptr [ecx], dh; leave; call dword ptr gs:[0x10]; 
0x000e7b78: or byte ptr [ecx], dh; leave; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0009125e: or byte ptr [ecx], dh; leave; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00099777: or byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x0016fede: or byte ptr [ecx], dh; ret 0xc889; 
0x0009427b: or byte ptr [ecx], dh; sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x00093c4a: or byte ptr [ecx], dh; sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x000b7f95: or byte ptr [edi + 0x5b], bl; ret; 
0x000ba16d: or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000d9d07: or byte ptr [edi + 0x5e], bl; ret; 
0x00024f57: or byte ptr [edi + 0x6a50fff9], 1; call 0x120f60; add esp, 0x1c; ret; 
0x001990a0: or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x00079793: or byte ptr [edi + edi*2], 0xf9; call dword ptr [eax - 0x73]; 
0x0008f376: or byte ptr [edi], 0; add eax, 0x1ada9b; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008f356: or byte ptr [edi], 0; add eax, 0x1adabb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f336: or byte ptr [edi], 0; add eax, 0x1adadb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f316: or byte ptr [edi], 0; add eax, 0x1adafb; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f396: or byte ptr [edi], 0; add edx, 0x1ada7b; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x0013fca5: or byte ptr [edi], 0x44; ret 0x8dc3; 
0x0013f993: or byte ptr [edi], 0x45; ret 0x2ec3; 
0x00068cf2: or byte ptr [edi], 0x84; ret 2; 
0x0007e3f6: or byte ptr [edi], 0x84; ret; 
0x00087264: or byte ptr [edi], 0x95; ret 0xc283; 
0x000ed003: or byte ptr [edi], 0xa3; ret 0x830f; 
0x00042e35: or byte ptr [edi], 0xbd; leave; xor ecx, 0x1f; shr eax, cl; ret; 
0x000381e1: or byte ptr [edi], cl; mov bh, 0x93; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x000895f6: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; neg eax; ret; 
0x0016e89c: or byte ptr [edi], cl; mov dh, 0xc0; pop ebx; ret; 
0x001278bb: or byte ptr [edi], cl; mov dh, 0xc8; shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x0019e53b: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; pop ebp; ret; 
0x0019cd82: or byte ptr [edi], cl; mov dh, 2; sub eax, ecx; ret; 
0x00133413: or byte ptr [edi], cl; mov dword ptr [0xc2920fd8], eax; mov eax, edx; pop ebx; pop esi; ret; 
0x000ccb8d: or byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c69dd: or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00100f8c: or byte ptr [edi], cl; sahf; ret 0x5420; 
0x0003a63a: or byte ptr [edi], cl; scasd eax, dword ptr es:[edi]; ret 0x4f89; 
0x001a845a: or byte ptr [edi], cl; sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a3cb8: or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000649a9: or byte ptr [edi], cl; test byte ptr [edx - 0x72ffffeb], dh; push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x000b9cdd: or byte ptr [edi], cl; test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000d9bea: or byte ptr [edi], cl; test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x00082398: or byte ptr [edi], cl; test ecx, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000a49ff: or byte ptr [edi], cl; xchg dl, cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x45480], cl; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x000a4edb: or byte ptr [edi], cl; xchg ebp, eax; ret 0xe2c1; 
0x0012cf59: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012cf18: or byte ptr [edi], cl; xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00159758: or byte ptr [edi], cl; xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x00064ec5: or byte ptr [edi], cl; xchg esp, eax; ret 0xc221; 
0x001220a7: or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00184069: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x24]; 
0x001840f0: or byte ptr [edx + 0x50], dl; call dword ptr [ebx + 0x28]; 
0x000f844e: or byte ptr [edx + 0x50], dl; call dword ptr [ecx + 0x20]; 
0x001722d5: or byte ptr [edx + 0x6a], dl; add eax, 0x6c838d50; je 0x1722d8; call dword ptr [eax - 0x18]; 
0x00177c95: or byte ptr [edx + 0x6a], dl; add eax, 0x6c838d50; je 0x177c98; call dword ptr [eax - 0x18]; 
0x000c11f8: or byte ptr [edx + 0x70880276], cl; add cl, byte ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x0019565a: or byte ptr [edx + 4], al; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00192bda: or byte ptr [edx + 4], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000acbdb: or byte ptr [edx + eax*8 - 0xa], 0xff; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000a7dcd: or byte ptr [edx + ebx*4], 0xf9; call dword ptr [eax + 0x68]; 
0x0013ae67: or byte ptr [edx + ecx*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x00082cec: or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008988c: or byte ptr [edx - 1], ch; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0011ae49: or byte ptr [edx - 1], dl; jbe 0x11ae5a; call dword ptr [esi + 0x24]; 
0x0011bf6c: or byte ptr [edx - 1], dl; jbe 0x11bf7d; call dword ptr [esi + 0x24]; 
0x0011d0dc: or byte ptr [edx - 1], dl; jbe 0x11d0ed; call dword ptr [esi + 0x24]; 
0x00140fa6: or byte ptr [edx], 0x59; stc; call dword ptr [eax + 0x6a]; 
0x00172195: or byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4c8908c0], al; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x000c2934: or byte ptr [edx], bh; or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0016e87f: or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0003eff7: or byte ptr [edx], ch; push edx; call eax; 
0x0007b92e: or byte ptr [edx], ch; push esi; call dword ptr [ebx + 8]; 
0x0008c68a: or byte ptr [esi + 0x53], dl; call dword ptr [edi + 0x18]; 
0x000e7d9a: or byte ptr [esi + 0x53], dl; call eax; 
0x000413e1: or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00179a5f: or byte ptr [esi + 0x5f], bl; jmp eax; 
0x000bd792: or byte ptr [esi + 0xf], ah; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000bde96: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov dword ptr [eax + 8], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c12ac: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde36: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bde57: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [eax]; mov word ptr [eax + 8], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000baa3b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; pop edi; ret; 
0x000bad2c: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; lea eax, [edx + 0xf]; ret; 
0x000b941b: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edi; pop edi; ret; 
0x000b96ec: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx + 8]; mov eax, edx; ret; 
0x000b6276: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; pop edi; ret; 
0x000b63b6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; lea eax, [edx + 8]; ret; 
0x000b1e96: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edi; pop edi; ret; 
0x000b1fd6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov byte ptr [edx + 8], al; mov eax, edx; ret; 
0x000b61a6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; pop edi; ret; 
0x000b6416: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; lea eax, [edx + 0xb]; ret; 
0x000b1de6: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edi; pop edi; ret; 
0x000b4b4f: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; pop ebx; ret; 
0x000b2036: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov dword ptr [edx + 8], eax; mov eax, edx; ret; 
0x000b6297: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; pop edi; ret; 
0x000b63d7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; lea eax, [edx + 9]; ret; 
0x000b1eb7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edi; pop edi; ret; 
0x000b1ff7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; mov word ptr [edx + 8], ax; mov eax, edx; ret; 
0x000bd6c7: or byte ptr [esi + 0xf], ah; adc eax, dword ptr [edx]; movlpd qword ptr [edx + 8], xmm1; mov eax, edi; pop edi; ret; 
0x000c088a: or byte ptr [esi + 0xf], ah; adc ecx, dword ptr [edx + 8]; mov eax, edi; pop ebx; pop edi; ret; 
0x000a9c02: or byte ptr [esi + edi - 0x7e09000b], 0x9c; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x00123bf7: or byte ptr [esi - 0x18], dl; or edi, dword ptr [edx]; push es; add byte ptr [ecx + 0x119216c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x0014384e: or byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x0016e59b: or byte ptr [esi - 0x75], dl; inc esp; and al, 0x28; call dword ptr [eax + 0x18]; 
0x001190fb: or byte ptr [esi - 0x77], ah; inc edx; inc edx; xor eax, eax; ret; 
0x0011765b: or byte ptr [esi - 0x77], ah; inc edx; xor eax, eax; ret; 
0x0019459a: or byte ptr [esi - 0x77], ah; or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0014b000: or byte ptr [esi - 0x77], ah; push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x001aa4fd: or byte ptr [esi - 0x7d], bl; ret 0x830c; 
0x000a73f5: or byte ptr [esi - 1], dl; jae 0xa741e; call eax; 
0x00126158: or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x0009f596: or byte ptr [esi], 0; add edx, 0x19d87b; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000905fb: or byte ptr [esi], al; add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000b9d66: or byte ptr ss:[eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00162745: or ch, ah; jmp dword ptr [ebp - 0x75]; 
0x0003c28e: or ch, bl; sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00095191: or ch, byte ptr [ebx + ebx]; add byte ptr [eax], al; jne 0x951a0; xor eax, eax; pop ebx; ret; 
0x0003e288: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x4d950; add esp, 0x1c; ret; 
0x0003e2c8: or ch, byte ptr [edx]; push dword ptr [esp + 0x1c]; call 0x51680; add esp, 0x1c; ret; 
0x00085568: or ch, dl; stc; jmp dword ptr [esi - 0x70]; 
0x00124e07: or cl, 0x4a; stc; jmp dword ptr [ebp - 0x75]; 
0x000d7117: or cl, 0xff; call dword ptr [edx - 0x75]; 
0x000d7952: or cl, 0xff; inc dword ptr [ebx - 0x2c7c003f]; call dword ptr [ebx + 0x51]; 
0x00090dde: or cl, al; clc; add al, byte ptr [ebx + 0x28901e0]; xor eax, eax; ret; 
0x00149b0b: or cl, bh; jmp dword ptr [esi - 0x70]; 
0x0003c3f2: or cl, bl; inc esp; and al, 4; mov dword ptr [eax], ecx; ret; 
0x0007f9b5: or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x00194485: or cl, byte ptr [ebx + 0x5b082444]; ret; 
0x00138236: or cl, byte ptr [ebx + 0xfed852e]; test byte ptr [edi - 0x74ffffff], dl; push esi; or al, 0xf6; ret 0xf04; 
0x00087137: or cl, byte ptr [ebx - 0x2dcef3bf]; test eax, eax; setne dl; mov eax, edx; ret; 
0x00196425: or cl, byte ptr [ebx - 0x74f7dbbc]; dec esp; and al, 0x10; add eax, ecx; pop ebx; ret; 
0x00077df5: or cl, byte ptr [ecx + 0x7289087a]; or al, 0x3b; test dword ptr [eax + 0xffffffb], edi; test eax, esp; ret; 
0x00035175: or cl, byte ptr [ecx + 0xcc483d0]; ret; 
0x00064b24: or cl, byte ptr [ecx + 0xf542454]; xchg esp, eax; ret 0x748b; 
0x0005da7b: or cl, byte ptr [ecx - 0x8773]; call dword ptr [eax + 0x52]; 
0x00103f91: or cl, byte ptr [ecx]; or byte ptr [ebx - 0x3d7cfb40], al; add al, 0x39; ret; 
0x000433ee: or cl, byte ptr [edi]; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0008996d: or cl, byte ptr [edi]; mov dh, 0; pop ebx; pop esi; pop edi; ret; 
0x0003a9a7: or cl, byte ptr [edi]; mov dh, 0x44; xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x0004334d: or cl, byte ptr [edi]; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00097040: or cl, byte ptr [edi]; mov edi, 0x2ac85; add byte ptr [ecx], bh; ret 0x4f0f; 
0x00075224: or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x000b9d25: or cl, byte ptr [edi]; test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb368: or cl, byte ptr [edi]; test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3d27: or cl, byte ptr [edi]; test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0015b77c: or cl, byte ptr [edi]; xchg ebp, eax; ret 0xd120; 
0x00064dfe: or cl, byte ptr [edi]; xchg esp, eax; ret 0xc629; 
0x0007d1d8: or cl, ch; cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x0012b61f: or cl, ch; mov ebx, 0x8dfffff5; jbe 0x12b628; ret; 
0x0006b3ea: or cl, ch; ret 0xffc5; 
0x00157b94: or cl, ch; ret 0xfffe; 
0x001ac7df: or cl, ch; ret; 
0x000c34db: or cl, cl; jne 0xc34e1; xor eax, eax; ret; 
0x0009adcd: or cl, dl; call 0xc03ab05d; ret; 
0x00090d7e: or cl, dl; clc; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00157907: or dh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x00121430: or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012132c: or dh, 0x80; mov eax, 0x127; mov ebx, 0xffffff9c; call dword ptr gs:[0x10]; 
0x00131066: or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x00115752: or dh, 8; mov ebp, dword ptr gs:[0x14]; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00091067: or dh, bh; xor eax, eax; ret; 
0x001a5c75: or dh, byte ptr [eax + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; ja 0x1a5c81; neg eax; ret; 
0x00081c75: or dh, byte ptr [eax + edx + 0x39]; sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008f4ea: or dh, byte ptr [ebp + 0x43]; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x0009bd90: or dh, byte ptr [ebp + 0xd]; xor eax, eax; pop ebx; ret; 
0x000c2936: or dh, byte ptr [ebp + 4]; xor eax, eax; pop ebx; ret; 
0x0003bc25: or dh, byte ptr [ebp + 8]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x0009bd42: or dh, byte ptr [ebp - 0xf]; xor eax, eax; pop ebx; ret; 
0x000fd507: or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a9562: or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001a8542: or dh, byte ptr [edx + 0x4b]; lea eax, [edi + 9]; pop edi; ret; 
0x001a5903: or dh, byte ptr [edx + ebx - 0x48]; add dword ptr [eax], eax; add byte ptr [eax], al; jg 0x1a5910; neg eax; ret; 
0x000685be: or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0014e9d3: or dh, byte ptr [edx + edx + 0x31]; leave; mov eax, ecx; pop ebx; pop esi; ret; 
0x0009a293: or dh, byte ptr [esi + eax*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x000751af: or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x0009a17b: or dh, byte ptr [esi + ecx*2 + 0x5b]; xor eax, eax; pop esi; pop edi; ret; 
0x0015b839: or dh, byte ptr [esp + edx*8 - 0x7d]; ret 0x8014; 
0x000a58ba: or dh, dh; ret 0x7404; 
0x000d33ad: or dh, dh; ret 0xf04; 
0x001b1e97: or dh, dh; ret 0xf07; 
0x000a164b: or dh, dh; ret 0xf0f; 
0x000a3adf: or dh, dh; ret; 
0x00121fec: or dl, byte ptr [eax + eax]; push dword ptr [esp + 0x1c]; call 0x1274c0; add esp, 0x1c; ret; 
0x000d5904: or dl, ch; cmc; dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x000409b9: or dword ptr [eax + 0x18], 0; add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x0010402e: or dword ptr [eax + 0x2cd1d201], edx; and al, 0x83; ret; 
0x000c3826: or dword ptr [eax + 0x3cd0], 1; xor eax, eax; pop ebx; ret; 
0x001452a5: or dword ptr [eax + 0x5a], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x0013179a: or dword ptr [eax + 0x92], edi; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; call dword ptr gs:[0x10]; 
0x00091070: or dword ptr [eax + 8], 1; xor eax, eax; ret; 
0x0009127c: or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x00050d28: or dword ptr [eax + eax], eax; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x00121fc2: or dword ptr [eax + eax], edx; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00177c30: or dword ptr [eax + esi*4], 0xfffffff3; call dword ptr [eax - 0x73]; 
0x00060824: or dword ptr [eax - 0x46], 0xfffffff8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x000a38f4: or dword ptr [eax - 0x67], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x0012cf53: or dword ptr [eax - 1], eax; inc dword ptr [ebx - 0x6af0f708]; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x00084915: or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x00123b7b: or dword ptr [eax*2 - 0x3b7d0000], 4; pop ebx; pop esi; ret; 
0x00098445: or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x00126157: or dword ptr [eax], 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00098420: or dword ptr [eax], 0x80000000; xor eax, eax; ret; 
0x0011ea76: or dword ptr [eax], 0xffffffa3; stc; call dword ptr [eax - 0x18]; 
0x0015d946: or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0015d9d7: or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4b], ecx; stc; call dword ptr [eax - 0x18]; 
0x0005c6ff: or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x000a1aa2: or dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ecx + 0x98486], cl; add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x0016e078: or dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [eax + 4], ecx; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x00025830: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; add esp, 0xc; ret; 
0x00084e48: or dword ptr [eax], eax; add byte ptr [eax], al; mov eax, 0xffffffff; ret; 
0x0011ecd1: or dword ptr [eax], eax; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010ca52: or dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000cb624: or dword ptr [eax], eax; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x6eb; 
0x000a1aac: or dword ptr [eax], eax; add byte ptr [ebp - 0x19c0937a], cl; call dword ptr [eax + 0x57]; 
0x000a473c: or dword ptr [eax], eax; add byte ptr [ebx + 0x390c246c], cl; fimul word ptr [ebp - 0x6af0d5fc]; ret; 
0x0006e558: or dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000574d3: or dword ptr [eax], eax; add byte ptr [ebx - 0x36377b], cl; jmp dword ptr [ebp - 0x75]; 
0x0006706d: or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x001261bc: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; aad 0x4e; stc; call dword ptr [eax + 0x55]; 
0x00126186: or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; outsd dx, dword ptr [esi]; dec esi; stc; call dword ptr [eax + 0x55]; 
0x00138bdf: or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x000a6d2b: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dbdbbc], cl; ret; 
0x00071cb0: or dword ptr [eax], eax; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x000a5c79: or dword ptr [eax], eax; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x000a58b4: or dword ptr [eax], eax; add byte ptr [ecx - 0x9f7dbb4], cl; ret 0x7404; 
0x0006f1f7: or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x000a2110: or dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000d7eed: or dword ptr [eax], eax; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000b9bfb: or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0008a6c9: or dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x00095332: or dword ptr [eax], eax; mov edx, dword ptr [esp + 0x10]; mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0009c68a: or dword ptr [eax], eax; nop; nop; endbr32; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x00139893: or dword ptr [ebp + 0x33], esp; add eax, 0x18; call eax; 
0x0002501f: or dword ptr [ebp + 0x33], esp; add eax, 0x18; jmp eax; 
0x0013d0a6: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d183: or dword ptr [ebp + 0x33], esp; add eax, 0x18; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1ea: or dword ptr [ebp + 0x33], esp; add eax, 0x18; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ac: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; jmp eax; 
0x00154bbb: or dword ptr [ebp + 0x33], esp; add eax, 0x18; pop edi; pop ebp; ret; 
0x00154801: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push eax; call edx; 
0x001398c2: or dword ptr [ebp + 0x33], esp; add eax, 0x18; push esi; call eax; 
0x0003f5f1: or dword ptr [ebp + 0x33], esp; add eax, 0x18; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x00126279: or dword ptr [ebp + 0x50], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x000b9cfd: or dword ptr [ebp - 0x7af0f681], ecx; cdq; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3d02: or dword ptr [ebp - 0x7af0f6b6], ecx; je 0xb3d0c; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000dee62: or dword ptr [ebx + 0x46], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000dfc9e: or dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x000a85e6: or dword ptr [ebx + 0x5e5b0cc4], eax; pop edi; pop ebp; ret; 
0x001771b6: or dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x00159f7b: or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x001303a6: or dword ptr [ebx + 0x5e], ebx; pop edi; pop ebp; ret; 
0x0010cee3: or dword ptr [ebx + 0x66042444], ecx; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a0bd7: or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5b; ret; 
0x001a33e4: or dword ptr [ebx + ebx*4 - 0x37d60009], 0x5d; pop ebx; ret; 
0x00149a72: or dword ptr [ebx + ecx - 0x7d], esi; ret; 
0x0018345a: or dword ptr [ebx + edi*4], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00094606: or dword ptr [ebx - 0x2708fb3c], eax; pop ebx; pop esi; ret; 
0x000a6c98: or dword ptr [ebx - 0x2776c73c], eax; pop ebx; ret 4; 
0x00055893: or dword ptr [ebx - 0x2776d73c], eax; pop ebx; ret 4; 
0x000da0c1: or dword ptr [ebx - 0x3f7afb3e], eax; jne 0xda0bc; xor edx, edx; mov eax, edx; ret; 
0x0014529f: or dword ptr [ebx - 0x72dfdba4], ecx; or dword ptr [eax + 0x5a], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x00105f9c: or dword ptr [ebx - 0x76f30d8c], 0x830cc274; rol byte ptr [ecx], 0x39; ret; 
0x0011f31e: or dword ptr [ebx - 0x77], ebx; rcr byte ptr [esi + 0x5f], 1; ret; 
0x0003e79b: or dword ptr [ebx - 0x7af0f206], eax; mov eax, 0x29fffffc; ret; 
0x0005d3b0: or dword ptr [ebx - 0x7bf09908], eax; ret; 
0x00171fb0: or dword ptr [ebx - 0xa9f314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcb1e37d], cl; call dword ptr [eax - 0x73]; 
0x00174a1e: or dword ptr [ebx - 0xaaf314], eax; rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc86c37d], cl; call dword ptr [eax - 0x73]; 
0x00164c69: or dword ptr [ebx], 0x62; stc; call dword ptr [eax - 0x18]; 
0x0003ce6e: or dword ptr [ecx + 0x114c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0003c938: or dword ptr [ecx + 0x124c4], eax; add byte ptr [ebx + 0x5e], bl; ret; 
0x00024b71: or dword ptr [ecx + 0x1a9090], ecx; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c335d: or dword ptr [ecx + 0x42], eax; test al, al; jne 0xc3358; xor eax, eax; ret; 
0x0013f88e: or dword ptr [ecx + 0x4e0c1d8], ecx; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0012637d: or dword ptr [ecx + 0x52], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x001878c6: or dword ptr [ecx + 0x5f5e5bf8], ecx; ret; 
0x0003d002: or dword ptr [ecx + 0x94c4], eax; add byte ptr [ebx + 0x5f], bl; ret; 
0x0007c739: or dword ptr [ecx + 0x9cb3], ecx; add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x00091170: or dword ptr [ecx + 8], 0x40; xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x00176d01: or dword ptr [ecx + eax], 0; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013d10a: or dword ptr [ecx + eax], 0xfffffff0; call dword ptr [eax - 0x73]; 
0x00141f7a: or dword ptr [ecx + ecx*2], 0; add byte ptr [ecx - 0x4977b], cl; call dword ptr [eax - 1]; 
0x000a6d29: or dword ptr [ecx + ecx], 0x24448900; and al, 0x89; ret; 
0x00149fec: or dword ptr [ecx + esi*8 - 0x7c], esi; ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x0014a1bc: or dword ptr [ecx + esi*8 - 0x7d], esi; in al, dx; or byte ptr [ebp - 0x6d1927b], cl; call dword ptr [eax + 0x53]; 
0x00186e19: or dword ptr [ecx - 0x76dbdbbc], ecx; ret; 
0x0015445d: or dword ptr [ecx - 0x7cfb6cbc], ecx; ret 0x8301; 
0x00123513: or dword ptr [ecx - 0xb], ebp; jmp dword ptr [ebp - 0x5f]; 
0x0003a201: or dword ptr [ecx], 0x46; stc; dec dword ptr [edi]; inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x000e7e08: or dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001396c6: or dword ptr [ecx], edi; dec eax; add al, 0x75; hlt; mov eax, dword ptr [eax + 0x18]; ret; 
0x000a7718: or dword ptr [ecx], edi; ret 0x3374; 
0x0018365c: or dword ptr [ecx], edi; ret 0x430f; 
0x0017f3cf: or dword ptr [ecx], edi; ret; 
0x0002abc3: or dword ptr [ecx], edx; add byte ptr [ebx - 0x72bbdb84], cl; xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0010b788: or dword ptr [edi + 0x48], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000bb850: or dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x001867fb: or dword ptr [edi + 0xf], esi; mov eax, edx; mov edx, dword ptr [ecx + 0x110]; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x00199130: or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00096873: or dword ptr [edi + edi*8 + 0x10c483ff], ecx; pop ebx; pop esi; pop edi; ret; 
0x00103143: or dword ptr [edi + edi*8 + 0x5bf889ff], edx; pop esi; pop edi; ret; 
0x0019763a: or dword ptr [edi - 0x18], ebx; mov esp, 0x81fffeff; ret; 
0x0018ad03: or dword ptr [edi - 0xd], edi; call dword ptr [edi - 1]; 
0x000dd968: or dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0003ed63: or dword ptr [edi], 0x5e; stc; call dword ptr [eax - 0x18]; 
0x0013c92a: or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00150114: or dword ptr [edi], ecx; lahf; ret; 
0x00109961: or dword ptr [edi], ecx; mov dh, 0xc; or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x367e; 
0x000431cb: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; add eax, 1; ret; 
0x00043646: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x00043596: or dword ptr [edi], ecx; mov ebp, 0x1ff083c0; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x000b9d00: or dword ptr [edi], ecx; test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b3d05: or dword ptr [edi], ecx; test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x00071dd4: or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x000e1209: or dword ptr [edi], ecx; xchg dword ptr [eax - 0x7c000012], edx; ret; 
0x000e09fa: or dword ptr [edi], ecx; xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x000390d1: or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00132da7: or dword ptr [edi], ecx; xchg esi, eax; ret; 
0x000873ff: or dword ptr [edi], edi; stc; call dword ptr [eax + 0x56]; 
0x00060aa4: or dword ptr [edx + 0x32], 0xfffffff9; call dword ptr [esi + 0x6a]; 
0x001a9552: or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001a8532: or dword ptr [edx + 0x5b], esi; lea eax, [edi + 8]; pop edi; ret; 
0x00165b84: or dword ptr [edx + 0x62], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x00091261: or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00187690: or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0003d448: or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x001630f3: or dword ptr [edx + ecx*2], 0xfffffff1; call dword ptr [eax - 0x73]; 
0x00175e61: or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x00114190: or dword ptr [edx + esi*2], 0xffffffed; call dword ptr [eax + 0x56]; 
0x001516be: or dword ptr [edx + esi*4], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x00030234: or dword ptr [edx + esi], 0xffffffdf; call dword ptr [esi + 0x50]; 
0x0002a103: or dword ptr [edx - 0x5b180000], esp; adc al, 0x11; add byte ptr [ebx - 0x72c3db8c], cl; xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0018ea03: or dword ptr [edx - 0xd], eax; call dword ptr [edi - 1]; 
0x001623c1: or dword ptr [edx], 0x61; stc; call dword ptr [eax - 0x18]; 
0x00162562: or dword ptr [edx], 0x61; stc; call dword ptr [eax - 0x73]; 
0x0009c4ed: or dword ptr [edx], ebx; add byte ptr [ebx - 0x7f72e714], al; dec eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x000b9b39: or dword ptr [edx], edx; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0004057d: or dword ptr [esi + 0x31fffe49], 0xffffffc0; ret; 
0x0012c933: or dword ptr [esi + 0x5b], ebx; jl 0x24f10; ret; 
0x000c1f03: or dword ptr [esi + 0xf], esp; xlatb; ret 0xc085; 
0x001a87c3: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1f73: or dword ptr [esi + 0xf], esp; xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x00172269: or dword ptr [esi + edx*2], 0xfffffff3; call dword ptr [eax - 0x73]; 
0x0016cd4e: or dword ptr [esi - 0x3b7d0000], 8; pop ebx; ret; 
0x0003090b: or dword ptr [esi - 7], eax; call dword ptr [eax - 0x18]; 
0x0003a202: or dword ptr [esi - 7], eax; dec dword ptr [edi]; inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0003a121: or dword ptr [esi - 7], eax; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x0016c5aa: or dword ptr [esi], 0; pop ebx; ret; 
0x0007c5dc: or dword ptr [esi], 0x20; add esp, 4; pop ebx; pop esi; ret; 
0x0008db03: or dword ptr [esi], 8; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009055b: or dword ptr [esi], eax; add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000ea4e7: or dword ptr [esi], ebp; lea esi, [esi]; hlt; mov eax, edx; call dword ptr gs:[0x10]; 
0x00087cd6: or dword ptr [esp + ebp*4], 0xffffffe4; call dword ptr [eax - 0x73]; 
0x00121089: or dword ptr [esp + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013efaa: or eax, 0x1175c085; mov eax, ebx; pop ebx; ret; 
0x000254fc: or eax, 0x14; jne 0x25507; add esp, 0x1c; ret; 
0x000dbfbd: or eax, 0x14; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x0018a786: or eax, 0x16850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b3d79: or eax, 0x200850f; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000f9376: or eax, 0x26850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00098310: or eax, 0x2890f00; xor eax, eax; ret; 
0x000d7eec: or eax, 0x31000009; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000a6acc: or eax, 0x402448b; sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x001a9582: or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001842c2: or eax, 0x4245489; jmp dword ptr [eax + 0x30]; 
0x000445cc: or eax, 0x44830000; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x001a8562: or eax, 0x478d2b72; or al, 0x5f; ret; 
0x00070e5b: or eax, 0x4c890000; and al, 4; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00040c12: or eax, 0x5b04c483; pop esi; ret; 
0x00138512: or eax, 0x5b08c483; ret; 
0x0016f276: or eax, 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x00122821: or eax, 0x5b54c483; pop esi; ret; 
0x0016c5ea: or eax, 0x5e5bc031; pop edi; ret; 
0x0017070a: or eax, 0x5ec0315b; pop edi; ret; 
0x000bbad1: or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000f5a56: or eax, 0x6850f02; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000ba3d8: or eax, 0x77f0ff3; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x0005e045: or eax, 0x7a; stc; call dword ptr [eax - 0x18]; 
0x000c156b: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0a8: or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00172bec: or eax, 0x8100014a; ret; 
0x001471ec: or eax, 0x81000404; ret; 
0x0013acec: or eax, 0x810004c9; ret; 
0x0012ffec: or eax, 0x81000576; ret; 
0x001255ec: or eax, 0x81000620; ret; 
0x00081dec: or eax, 0x81001058; ret; 
0x0007f7ec: or eax, 0x8100107e; ret; 
0x000b9d87: or eax, 0x812850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000be0b1: or eax, 0x824448b; pop esi; ret; 
0x0007b79f: or eax, 0x83000001; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x000e1830: or eax, 0x8302b60f; ret; 
0x00062a3c: or eax, 0x8901e683; ret; 
0x000bb3fa: or eax, 0x89f850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0013038d: or eax, 0x8b000000; dec esp; and al, 0x14; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0016ccf8: or eax, 0x8b0cec83; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00199370: or eax, 0x8b1c035f; jmp ebx; 
0x000512ff: or eax, 0x8bfffe30; jl 0x5132a; sub byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x000a532d: or eax, 0x8d500000; xchg dword ptr [eax], esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00042d51: or eax, 0xb801e983; add al, byte ptr [eax]; add byte ptr [eax], al; bsr ecx, ecx; shl eax, cl; ret; 
0x000c1574: or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x001968d8: or eax, 0xc381ffff; add eax, 0x3000432; sbb al, 0x8b; jmp ebx; 
0x0009aaea: or eax, 0xc6b83f0; add dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000b4aeb: or eax, 0xcd840f00; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0012920f: or eax, 0xdb000001; test al, 0xc; ret 0xfff9; 
0x0005b9af: or eax, 0xe0868d00; jns 0x5b9af; call dword ptr [eax - 0x73]; 
0x001814d7: or eax, 0xec830000; or byte ptr [ebp - 0x6995c45], cl; call dword ptr [edi + 0x56]; 
0x00181d43: or eax, 0xec830000; or byte ptr [ebp - 0x6995c4d], cl; call dword ptr [esi + 0x57]; 
0x000b3d76: or eax, 0xf0d4a8d; test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000bb3f7: or eax, 0xf0d7f8d; test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000b9d84: or eax, 0xf0d7f8d; test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00099081: or eax, 0xff087b81; leave; lcall 1, 0x39870f3b; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00099304: or eax, 0xff087e81; leave; lcall 0, 0xc6870f3b; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x0003bca4: or eax, 0xffff8000; inc eax; shr eax, 0x1f; ret; 
0x000a142c: or eax, 0xffffff8c; stc; call dword ptr [eax + 0x6a]; 
0x0015539b: or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x00060620: or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000ad741: or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000eaf3e: or eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009bd60: or eax, dword ptr [eax]; add byte ptr [eax], al; mov eax, 0xffffffff; pop ebx; ret; 
0x0016e092: or eax, dword ptr [eax]; add byte ptr [eax], al; pop ebx; ret; 
0x0012623f: or eax, dword ptr [eax]; add byte ptr [ebp - 0x6afff7d], cl; call dword ptr [edx + 0x52]; 
0x00071dc6: or eax, dword ptr [eax]; add byte ptr [ebx + 0x438d0055], cl; or byte ptr [ebx - 0x57ccf16], al; or dword ptr [edi], ecx; xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x00145489: or eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00080877: or eax, dword ptr [eax]; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x00071a40: or eax, dword ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x448b; 
0x0014d56b: or eax, dword ptr [eax]; add byte ptr [ecx - 0x7c8bdbbc], cl; ret; 
0x00063226: or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x00042560: or eax, dword ptr [eax]; add dword ptr [eax], eax; xor eax, eax; ret; 
0x0006171e: or eax, dword ptr [eax]; add esp, 0x1c; ret; 
0x001a96ae: or eax, dword ptr [eax]; je 0x1a9732; mov eax, 0xc; pop edi; ret; 
0x00027068: or eax, dword ptr [ebp - 0x744c8a37]; inc ebx; and byte ptr [ebp - 0x72178b40], al; xchg byte ptr [eax + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x0012d3d7: or eax, dword ptr [ebx + 0x567426fa]; pop ebx; pop esi; ret; 
0x00081748: or eax, dword ptr [ebx + 0x5e5b04c4]; ret; 
0x0012c834: or eax, dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0016df44: or eax, dword ptr [ebx - 0x3fcefb3c]; pop ebx; pop esi; ret; 
0x00149a74: or eax, dword ptr [ebx - 0x49f0fe3d]; adc esi, esi; ret 0x75df; 
0x00024b0a: or eax, dword ptr [ebx - 0x6f74ffdf]; and byte ptr [ecx], al; add byte ptr [eax], al; test edx, edx; je 0x24b19; ret; 
0x0008f3be: or eax, dword ptr [ebx - 0x7d76fe20]; or byte ptr [ebx], bl; add byte ptr [eax], al; ret; 
0x00080d34: or eax, dword ptr [ecx + 0x14cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00180ade: or eax, dword ptr [ecx + 0x1bcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003cde9: or eax, dword ptr [ecx + 0x9cc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005b0c0: or eax, dword ptr [ecx + 0xbcc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0005b1c8: or eax, dword ptr [ecx + 0xccc4]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00090331: or eax, dword ptr [esi]; add byte ptr [ecx], bh; ret; 
0x0003bde6: or eax, ecx; ret; 
0x0003c41d: or eax, ecx; sar eax, 0x1f; not eax; and eax, edx; ret; 
0x00177d94: or eax, edi; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013f9cd: or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x00121b15: or eax, edx; mov dword ptr [ecx + 8], eax; xor eax, eax; pop ebx; ret; 
0x00092bfd: or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00055283: or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000552ba: or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x001302bf: or eax, edx; mov edx, dword ptr [esp + 0x6c]; sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x0019069f: or eax, edx; pop ebx; movzx eax, al; neg eax; ret; 
0x0010cd35: or eax, edx; pop ebx; ret; 
0x001278a3: or eax, edx; ret; 
0x00098498: or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0012791c: or eax, esi; pop esi; pop edi; ret; 
0x000bb202: or eax, esp; or al, 0; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001262c7: or ebp, 0x50; stc; call dword ptr [eax + 0x55]; 
0x001497de: or ebp, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x00154503: or ebp, 0x5d; stc; call dword ptr [eax - 1]; 
0x000e8712: or ebp, eax; push 0x89fffffc; ret 0xc085; 
0x00112e6d: or ebp, ebx; jo 0x112df4; ret; 
0x00183df5: or ebp, edx; jmp dword ptr [esi - 0x70]; 
0x001537db: or ebp, esi; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], edi; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x001422b3: or ebx, 0x65; stc; call dword ptr [esi + 0x6a]; 
0x0010da4e: or ebx, 0xffffffff; or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00130f54: or ebx, dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000613b4: or ebx, dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000bb890: or ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x00199250: or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019583a: or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff1d; ret; 
0x0019383a: or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff3d; ret; 
0x00153b29: or ebx, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; 
0x00153b29: or ebx, dword ptr [esi - 7]; call dword ptr [eax - 0x18]; fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0015f6f5: or ecx, 0x44; stc; call dword ptr [eax - 1]; 
0x00123ba4: or ecx, 0x5f; stc; call dword ptr [eax - 0x73]; 
0x00109965: or ecx, dword ptr [eax - 0x3f7cf8f4]; add dword ptr [ecx], edi; ret 0x367e; 
0x000fb28a: or ecx, dword ptr [eax - 7]; call dword ptr [eax + 0x53]; 
0x000fb2e7: or ecx, dword ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00149a6c: or ecx, dword ptr [ebp - 0x57fff8a]; or dword ptr [ebx + ecx - 0x7d], esi; ret; 
0x000b4162: or ecx, dword ptr [ebp - 0x7af0f4b6]; adc eax, 0x5bfffffe; ret; 
0x000aae9b: or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000280fb: or ecx, dword ptr [ebp - 0x7cffd98c]; ret; 
0x00057bd5: or ecx, dword ptr [ebx - 0x36737b]; inc dword ptr [ecx]; ret 0xbe0f; 
0x000ea2f9: or ecx, dword ptr [ecx - 0x16fbdbbc]; fnsave dword ptr [esp + edi*8]; jmp dword ptr [esi - 0x70]; 
0x00099d2f: or ecx, dword ptr [ecx - 0x76f3dbac]; ret 0xca81; 
0x000995ef: or ecx, dword ptr [ecx - 0x76f7dbac]; ret 0xca81; 
0x000a6f8c: or ecx, dword ptr [edi]; inc esi; ret 0x8388; 
0x000b4165: or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000bb396: or ecx, dword ptr [edi]; test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3d55: or ecx, dword ptr [edi]; test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000788dc: or ecx, dword ptr [edi]; test esp, edi; add byte ptr [eax], al; add dh, dh; ret; 
0x0003c971: or ecx, dword ptr [edx - 0x3b7cfffb]; adc byte ptr [ebp - 0x7cf38a40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00077e93: or ecx, ebp; dec edx; ret; 
0x001260d0: or edi, 0x4c; stc; call dword ptr [eax + 0x55]; 
0x00098414: or edi, dword ptr [eax + 0x16]; ret; 
0x000a0cf0: or edi, dword ptr [eax + 8]; cmova eax, edx; mov byte ptr [ecx + 0x3c78], al; ret; 
0x0017a478: or edi, dword ptr [ecx + 1]; mov dword ptr [eax + 0xc], edx; mov eax, ecx; pop ebx; ret; 
0x000fb699: or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x00123bfa: or edi, dword ptr [edx]; push es; add byte ptr [ecx + 0x119216c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00130cec: or edi, ebp; je 0x130d50; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x00196c9e: or edi, edi; inc dword ptr [ecx + 0x42e3fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196c05: or edi, edi; inc dword ptr [ecx + 0x42ed8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00196aa5: or edi, edi; inc dword ptr [ecx + 0x43038c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a9c46: or edi, esi; fcomp dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000d9d16: or edi, esi; fcomp dword ptr [edi + 0x5e]; ret; 
0x0004342e: or edi, esi; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x001220a2: or edx, 0x30; mov dword ptr [eax + 8], edx; mov edx, 0x100; mov word ptr [eax + 0x16], dx; ret; 
0x00126229: or edx, 0x4f; stc; call dword ptr [ecx + 0x51]; 
0x0010da51: or edx, 0xffffffff; mov ecx, eax; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00091cb6: or edx, 2; call dword ptr gs:[0x10]; 
0x000fb697: or edx, eax; or edi, dword ptr [edx + 0x20]; cmovne eax, edx; ret; 
0x00121b7d: or edx, ecx; mov dword ptr [eax + 8], edx; xor eax, eax; pop ebx; ret; 
0x000df25e: or edx, edi; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x0002f80a: or edx, esi; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x0018a0e0: or edx, esi; jmp dword ptr [esi - 0x70]; 
0x00024ed0: or esi, 0x28; stc; call dword ptr [eax - 1]; 
0x0015669a: or esi, 0x5e; stc; call dword ptr [eax - 0x18]; 
0x0015682d: or esi, 0x5e; stc; call dword ptr [eax - 0x73]; 
0x0003bfc4: or esi, dword ptr [ebp + 9]; fadd st(0); add esp, 0x18; pop ebx; ret; 
0x001a9572: or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a8552: or esi, dword ptr [edx + 0x3b]; lea eax, [edi + 0xa]; pop edi; ret; 
0x00056881: or esi, dword ptr [esp + ebp*8 - 0x75]; test dword ptr [eax - 0x7c000037], edi; mov ebp, 0xffffc9d0; adc byte ptr [ecx - 0x362743], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x0009575d: or esi, dword ptr [esp - 0x77]; ret 0xd5e9; 
0x00127918: or esi, eax; xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x0004328e: or esi, edi; ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0014761b: or esi, esi; ret 0xf02; 
0x000dfffe: or esi, esi; ret; 
0x00161c4a: or esp, 0x48; int1; call dword ptr [eax - 0x73]; 
0x0006ec56: or esp, 0x8dfff8c6; test byte ptr [ecx], al; mov ch, 0x1a; jecxz 0x6ec61; jmp eax; 
0x001514de: or esp, 0xffffffb1; stc; call dword ptr [eax - 0x73]; 
0x00151bbe: or esp, 0xffffffb2; stc; call dword ptr [eax - 0x73]; 
0x001586e7: or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x0011dc47: or esp, 4; stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00164c6a: or esp, dword ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0013b0d4: or esp, edi; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00127533: out 0, al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00123a93: out 0, eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a491b: out 0, eax; add byte ptr [eax], al; pop ebx; ret; 
0x00152f94: out 0x21, eax; ret; 
0x0003a12a: out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x000f74a5: out 0x35, eax; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000940a2: out 0x40, al; jne 0x938cc; mov eax, 0x9d; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x00190f6a: out 0x42, eax; jo 0x190eef; ret 0x80; 
0x001498f8: out 0x5b, eax; pop esi; pop edi; ret; 
0x000901a8: out 0x81, eax; ret; 
0x000367b9: out 0x83, al; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00090243: out 0x83, eax; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00075238: out 0x83, eax; ret; 
0x000258c7: out 0x89, al; ret 0x25; 
0x001353f7: out 0x89, al; ret; 
0x00025967: out 0x89, eax; ret 0x25; 
0x0009a1b0: out 0x89, eax; ret 0xe283; 
0x000539c0: out 0x89, eax; ret; 
0x00048945: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e665a: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d6a0b: out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x000fbc34: out 0x8d, eax; jbe 0xfbc38; lea eax, [ecx + 1]; pop ebx; pop esi; ret; 
0x0013ba05: out 0xa6, eax; hlt; jmp dword ptr [esi - 0x70]; 
0x0017ffc5: out 0xb5, eax; sti; jmp dword ptr [esi - 0x70]; 
0x00182ba9: out 0xb8, al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005b9ae: out 0xd, al; add byte ptr [ebp - 0x6861f7a], cl; call dword ptr [eax - 0x73]; 
0x0014e78b: out 0xe, al; add byte ptr [ebx - 0x77], dl; ret; 
0x0016f283: out 0xe8, al; daa; ret; 
0x0019271b: out 0xf, eax; je 0x192730; call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019471b: out 0xf, eax; je 0x194730; call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019670d: out 0xf, eax; je 0x196730; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00198950: out 0xf, eax; je 0x198970; call 0x1875fd; add ebx, 0x414c7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x00199930: out 0xf, eax; je 0x199950; call 0x1875fd; add ebx, 0x406a7; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019a930: out 0xf, eax; je 0x19a950; call 0x1875fd; add ebx, 0x3f867; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019abfb: out 0xf4, eax; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000e08d5: out 0xf8, al; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00095cc8: out 0xf9, al; dec dword ptr [ebp - 0x692737f]; call dword ptr [eax - 0x73]; 
0x00095d06: out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x000858a1: out 0xf9, eax; jmp dword ptr [esi - 0x70]; 
0x0016cdb8: out 0xfc, eax; jmp dword ptr [esi - 0x70]; 
0x00077f4c: out 0xff, al; call dword ptr [ecx + 0x51]; 
0x000e2348: out 0xff, al; call dword ptr [edi + 0x57]; 
0x000692ec: out 0xff, al; call dword ptr [edx - 0x73]; 
0x0018669d: out 0xff, al; dec dword ptr [ebx - 0x76f7dbb4]; ret 0xd2e9; 
0x0013b99f: out 0xff, al; jmp dword ptr [esi - 0x70]; 
0x000e22c7: out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000e78fb: out 0xff, eax; call dword ptr [ebx + 0x57]; 
0x000acb23: out 0xff, eax; cmove eax, edx; ret; 
0x0013b912: out 0xff, eax; jmp dword ptr [esi - 0x70]; 
0x000a9d2e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000a9cee: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000abc6e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000aa89e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000acb5e: out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x001856ab: out 3, al; pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x000dffec: out 4, al; add al, 0x66; cmp esi, 0x840f0400; mov edi, 0xf600001d; ret; 
0x000c316e: out dx, al; add al, 0x83; out dx, al; add al, 0xf7; ret 0; 
0x000c3171: out dx, al; add al, 0xf7; ret 0; 
0x0017c18e: out dx, al; add byte ptr [eax], al; add byte ptr [ebx - 0x9f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000c1c0e: out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x00134ca7: out dx, al; add dword ptr [ebx - 0x2b], esi; add esp, 4; pop ebx; pop esi; ret; 
0x00076284: out dx, al; add dword ptr [ecx], edi; ret 0x840f; 
0x00098eef: out dx, al; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x00127e4d: out dx, al; call dword ptr [eax - 0x73]; 
0x0014fa9b: out dx, al; dec dword ptr [ebp - 0x64ed37f]; call dword ptr [eax - 0x73]; 
0x0014ff5c: out dx, al; dec dword ptr [ebp - 0x64ef779]; call dword ptr [eax - 0x73]; 
0x0014ee58: out dx, al; dec dword ptr [ebp - 0x64f137d]; call dword ptr [eax + 0x68]; 
0x001537dc: out dx, al; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], edi; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x00134442: out dx, al; dec dword ptr [ecx + 0x44e82434]; in eax, dx; out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00142f85: out dx, al; dec dword ptr [ecx - 0x76d3dbbc]; ret; 
0x0003ad20: out dx, al; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0013763e: out dx, al; inc dword ptr [ebx + 0x478b10c4]; sbb al, 0x89; ret 0x572b; 
0x0013d463: out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013444a: out dx, al; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0013a36f: out dx, al; jmp dword ptr [esi - 0x70]; 
0x0012d54c: out dx, al; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x000bb11f: out dx, al; les ecx, ptr [eax + eax]; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00198b0b: out dx, al; ljmp 0x1251:0xc381fffe; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001742b6: out dx, al; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00191012: out dx, al; mov word ptr [edx - 2], ax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00194203: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001961b3: out dx, al; movzx ecx, word ptr [eax - 2]; mov word ptr [edx - 2], cx; mov eax, edx; pop ebx; ret; 
0x0015d9d6: out dx, al; or dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax - 0x4b], ecx; stc; call dword ptr [eax - 0x18]; 
0x001831c4: out dx, al; stc; call dword ptr [eax - 0x18]; 
0x001831c4: out dx, al; stc; call dword ptr [eax - 0x18]; inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x00085009: out dx, al; stc; jmp dword ptr [esi - 0x70]; 
0x000c1815: out dx, eax; adc byte ptr [ecx], al; clc; pop edi; ret; 
0x001a94ec: out dx, eax; adc byte ptr [edi], cl; cmp byte ptr [eax + eax + 0x408d0000], 0xf; pop edi; ret; 
0x000ed044: out dx, eax; add al, 0x89; ret; 
0x000ea904: out dx, eax; add byte ptr [eax], al; add al, ch; ret; 
0x000fb610: out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x000c9aef: out dx, eax; add cl, byte ptr [ecx + 0x29d001f8]; ret; 
0x000d7f2b: out dx, eax; add cl, byte ptr [ecx - 0x1607fe30]; ret 0xfff5; 
0x001a9521: out dx, eax; add eax, 0x87820f; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x00081c01: out dx, eax; add esp, 4; pop ebx; pop esi; ret; 
0x001592bd: out dx, eax; and bh, dh; jmp dword ptr [esi - 0x70]; 
0x00132646: out dx, eax; call dword ptr [eax + 0x6a]; 
0x00131558: out dx, eax; call dword ptr [eax - 0x18]; 
0x00141243: out dx, eax; call dword ptr [ebx + 0x50]; 
0x0012c91b: out dx, eax; call dword ptr [ebx + 0x56]; 
0x00139995: out dx, eax; call dword ptr [edx - 0x3f]; 
0x001367c9: out dx, eax; dec dword ptr [ebx - 0x72e3dba4]; cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x0012c90f: out dx, eax; dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0015b58b: out dx, eax; dec dword ptr [ecx - 0x76d7dbbc]; ret; 
0x001328ba: out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x00194c73: out dx, eax; dec ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0011447f: out dx, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0019970a: out dx, eax; fdivp st(6); inc dword ptr [ecx + 0x40652c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00040415: out dx, eax; idiv edi; dec dword ptr [ebp - 0x6d3237b]; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0012ac18: out dx, eax; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x0013939a: out dx, eax; inc dword ptr [ebx - 0x72afef3c]; xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x00140eda: out dx, eax; inc dword ptr [ebx - 0x72aff33c]; xchg dword ptr [esi], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x0012ec2d: out dx, eax; inc ebx; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x0012ea9d: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012eabd: out dx, eax; inc ebx; mov edx, ebx; mov ebx, dword ptr [esp + 4]; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00130ced: out dx, eax; je 0x130d50; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x001888fa: out dx, eax; jmp dword ptr [ecx]; 
0x00124ae0: out dx, eax; jmp dword ptr [esi - 0x70]; 
0x001759a7: out dx, eax; ljmp 0x8908:0x24748bff; ret; 
0x00190fe2: out dx, eax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0008c69e: out dx, eax; mov dword ptr [ebx], edx; pop ebx; pop esi; pop edi; ret; 
0x0009d370: out dx, eax; mov dword ptr [ecx + 0x10], eax; mov dword ptr [esi + 0x10], ecx; pop ebx; pop esi; ret; 
0x0013bd50: out dx, eax; mov eax, dword ptr [esp + 0x10]; add esp, 4; pop ebx; pop esi; ret; 
0x000d9d90: out dx, eax; mov eax, ecx; pop ebx; pop esi; ret; 
0x00194133: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00196103: out dx, eax; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x0018df07: out dx, eax; or al, byte ptr [eax]; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001a9561: out dx, eax; or dh, byte ptr [edx + 0x4b]; lea eax, [eax + 9]; pop edi; ret; 
0x001a9551: out dx, eax; or dword ptr [edx + 0x5b], esi; lea eax, [eax + 8]; pop edi; ret; 
0x001a9581: out dx, eax; or eax, 0x408d2b72; or al, 0x5f; ret; 
0x001a9571: out dx, eax; or esi, dword ptr [edx + 0x3b]; lea eax, [eax + 0xa]; pop edi; ret; 
0x0005b9ad: out dx, eax; out 0xd, al; add byte ptr [ebp - 0x6861f7a], cl; call dword ptr [eax - 0x73]; 
0x0003def9: out dx, eax; pop ds; add byte ptr [ebx - 0x7f72e714], al; les esi, ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x00081ba7: out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x001a9541: out dx, eax; pop es; jb 0x1a95b0; lea eax, [eax + 6]; pop edi; ret; 
0x001936f3: out dx, eax; pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a9591: out dx, eax; push cs; jb 0x1a95b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x0012c6fd: out dx, eax; push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x001a9531: out dx, eax; push es; jb 0x1a95b0; lea eax, [eax + 5]; pop edi; ret; 
0x001a3fb4: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a4975: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x001a3f9f: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a495b: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a3f8a: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a3f75: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001a4941: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001a4041: out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00182067: out dx, eax; stc; jmp dword ptr [ebp - 0x75]; 
0x000bb033: out dx, eax; std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0014fca5: out dx, eax; xor al, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0014fda5: out dx, eax; xor ebp, ebp; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x001927c8: outsb dx, byte ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00130cdf: outsb dx, byte ptr [esi]; add al, 0x89; ret; 
0x00179fad: outsb dx, byte ptr [esi]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0018e07f: outsb dx, byte ptr [esi]; clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x001894ba: outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x000c4744: outsb dx, byte ptr [esi]; pop es; add byte ptr [ebp - 0x6640b7e], cl; call dword ptr [eax - 0x73]; 
0x00023a0e: outsb dx, byte ptr [esi]; ret 6; 
0x0014a1ee: outsb dx, byte ptr [esi]; ret; 
0x0009c6f2: outsb dx, byte ptr [esi]; sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00190d72: outsb dx, byte ptr [esi]; shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x000daad9: outsb dx, byte ptr [esi]; stc; call dword ptr [eax + 0x56]; 
0x0013938a: outsb dx, byte ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x001a3f71: outsd dx, dword ptr [esi]; adc ah, byte ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001926c2: outsd dx, dword ptr [esi]; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0006a1ef: outsd dx, dword ptr [esi]; add al, byte ptr [eax]; add byte ptr [ebx - 0x5ab4b], cl; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0013332d: outsd dx, dword ptr [esi]; add bh, cl; jmp dword ptr [ebp - 0x75]; 
0x00154dbd: outsd dx, dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x001a304d: outsd dx, dword ptr [esi]; add eax, 0xc1830000; adc byte ptr [esi + 0xf], ah; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000b61e2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; pop edi; ret; 
0x000b6492: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; lea eax, [edx + 0xf]; ret; 
0x000b1e22: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edi; pop edi; ret; 
0x000b20b2: outsd dx, dword ptr [esi]; add ebx, esi; movq qword ptr [edx], mm0; mov eax, edx; ret; 
0x0008c2fe: outsd dx, dword ptr [esi]; and byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x001a47c2: outsd dx, dword ptr [esi]; dec eax; ret 0xff3; 
0x001a4722: outsd dx, dword ptr [esi]; dec eax; ret; 
0x0012618e: outsd dx, dword ptr [esi]; dec esi; stc; call dword ptr [eax + 0x55]; 
0x001a1246: outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00142edd: outsd dx, dword ptr [esi]; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x001956f3: outsd dx, dword ptr [esi]; inc ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000f0b71: outsd dx, dword ptr [esi]; inc edi; stc; call dword ptr [eax - 0x73]; 
0x000a712e: outsd dx, dword ptr [esi]; inc esp; stc; call dword ptr [ebx + 0x50]; 
0x000bb42d: outsd dx, dword ptr [esi]; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0013438d: outsd dx, dword ptr [esi]; push ebp; stc; call dword ptr [eax - 1]; 
0x001a4348: outsd dx, dword ptr [esi]; push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a47c7: outsd dx, dword ptr [esi]; push edx; ret 0xc2bb; 
0x001a4727: outsd dx, dword ptr [esi]; push edx; ret; 
0x000bdf12: outsd dx, dword ptr [esi]; push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001394ba: outsd dx, dword ptr [esi]; push esi; stc; call dword ptr [eax - 1]; 
0x000ffded: outsd dx, dword ptr [esi]; ret; 
0x00123676: outsd dx, dword ptr [esi]; stc; call dword ptr [eax + 0x6a]; 
0x0002502f: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x000256f6: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x000f0623: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x75]; 
0x00124ab6: outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 1]; 
0x00164668: outsd dx, dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x000f3b86: outsd dx, dword ptr [esi]; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x000bb013: paddd mm2, qword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0011745d: paddsw mm7, mm7; jmp dword ptr [esi - 0x77]; 
0x000c1dc1: pcmpeqb mm1, qword ptr [ebx + eax*4]; rcl dword ptr [eax], 0x83; ret 0x2910; 
0x000c1f9f: pcmpeqb mm1, qword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xc2010; xor eax, eax; ret; 
0x001a87c1: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x000c1f71: pcmpeqb mm1, qword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x001aa18a: pcmpeqb mm2, qword ptr [ebx]; and eax, 1; je 0x1aa170; lea eax, [edi - 0x10]; pop edi; ret; 
0x0019471c: pcmpeqb mm2, qword ptr [ecx]; call 0x1875fd; add ebx, 0x452bc; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0019271c: pcmpeqb mm2, qword ptr [ecx]; call 0x1875fd; add ebx, 0x4703c; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d9f14: pcmpeqb mm3, qword ptr [ecx]; add eax, 2; ret; 
0x0019670e: pcmpeqb mm3, qword ptr [edi]; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000d9efd: pcmpeqb mm4, qword ptr [eax]; ret; 
0x000c1f9e: pcmpeqb xmm1, xmmword ptr [ecx + 0x20]; pmovmskb eax, xmm1; test eax, eax; jne 0xc2010; xor eax, eax; ret; 
0x001a87c0: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x000c1f70: pcmpeqb xmm1, xmmword ptr [ecx]; pmovmskb eax, xmm1; test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x001a9eb6: pcmpeqw mm2, qword ptr [edi]; test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001a9e85: pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x000ba137: pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x001a8c73: pmovmskb eax, mm1; and eax, edx; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x000c1c39: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c2434: pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c1f11: pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x001a832d: pmovmskb eax, mm1; test eax, eax; jne 0x1a8400; xor eax, eax; pop edi; ret; 
0x001a87c5: pmovmskb eax, mm1; test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x001a8804: pmovmskb eax, mm1; test eax, eax; jne 0x1a8a80; xor eax, eax; ret; 
0x000c1cdf: pmovmskb eax, mm1; test eax, eax; jne 0xc1d40; xor eax, eax; pop edi; ret; 
0x000c1ca5: pmovmskb eax, mm1; test eax, eax; jne 0xc1d60; xor eax, eax; pop edi; ret; 
0x000c1f75: pmovmskb eax, mm1; test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x000c1fa4: pmovmskb eax, mm1; test eax, eax; jne 0xc2010; xor eax, eax; ret; 
0x001a8c72: pmovmskb eax, xmm1; and eax, edx; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x000c1c38: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c2433: pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000c1f10: pmovmskb eax, xmm1; bsr eax, eax; add eax, ecx; ret; 
0x001a832c: pmovmskb eax, xmm1; test eax, eax; jne 0x1a8400; xor eax, eax; pop edi; ret; 
0x001a87c4: pmovmskb eax, xmm1; test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x001a8803: pmovmskb eax, xmm1; test eax, eax; jne 0x1a8a80; xor eax, eax; ret; 
0x000c1cde: pmovmskb eax, xmm1; test eax, eax; jne 0xc1d40; xor eax, eax; pop edi; ret; 
0x000c1ca4: pmovmskb eax, xmm1; test eax, eax; jne 0xc1d60; xor eax, eax; pop edi; ret; 
0x000c1f74: pmovmskb eax, xmm1; test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x000c1fa3: pmovmskb eax, xmm1; test eax, eax; jne 0xc2010; xor eax, eax; ret; 
0x000c229a: pmovmskb ecx, mm0; test ecx, ecx; je 0xc22b0; bsf ecx, ecx; add eax, ecx; ret; 
0x000c2299: pmovmskb ecx, xmm0; test ecx, ecx; je 0xc22b0; bsf ecx, ecx; add eax, ecx; ret; 
0x0013fcfd: pop ax; stc; call dword ptr [eax + 0x6a]; 
0x0018796d: pop ds; aad 0xf8; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x0012a3b4: pop ds; aas; stc; call dword ptr [eax + 0x6a]; 
0x00197b2b: pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00057e54: pop ds; add al, 0x83; ret; 
0x000d69b8: pop ds; add al, byte ptr [eax]; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x000a0e0b: pop ds; add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0009a8a1: pop ds; add byte ptr [eax], al; add byte ptr [ebp - 0x76e3db8c], cl; ret; 
0x00050ef1: pop ds; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x001a8002: pop ds; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0003defa: pop ds; add byte ptr [ebx - 0x7f72e714], al; les esi, ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x0010e3bb: pop ds; add byte ptr [edi], cl; test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000d9bed: pop ds; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x0004321c: pop ds; add eax, 1; pop ebx; ret; 
0x000431d1: pop ds; add eax, 1; ret; 
0x001a329d: pop ds; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000432e3: pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00041cd8: pop ds; add esp, 4; pop ebx; pop esi; ret; 
0x0010cd31: pop ds; add esp, 8; or eax, edx; pop ebx; ret; 
0x000ffed0: pop ds; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00196710: pop ds; call 0x1875fd; add ebx, 0x4354a; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0011f6d0: pop ds; call dword ptr gs:[0x10]; 
0x00170bad: pop ds; cli; jmp dword ptr [ebp - 0x75]; 
0x00195843: pop ds; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009434b: pop ds; inc eax; stc; call dword ptr [eax - 0x18]; 
0x001a7fa2: pop ds; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000ba097: pop ds; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb73a: pop ds; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x001881bd: pop ds; jns 0x1881b0; jmp dword ptr [ebp - 0x75]; 
0x000436e1: pop ds; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00043615: pop ds; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00043296: pop ds; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004364c: pop ds; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000431b6: pop ds; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0004359c: pop ds; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00043257: pop ds; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x0017ab30: pop ds; lock inc dword ptr [ebx - 0x77cef3c]; add dword ptr [edi], ecx; xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000982d0: pop ds; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011eff9: pop ds; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00042f6c: pop ds; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00120f94: pop ds; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0003c421: pop ds; not eax; and eax, edx; ret; 
0x0003c10c: pop ds; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x00055282: pop ds; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000552b9: pop ds; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x00197bc3: pop ds; pop ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00053f52: pop ds; pop ebx; pop esi; pop edi; ret; 
0x000bbb14: pop ds; pop edi; pop esi; pop ebx; ret; 
0x0003b380: pop ds; pop edi; ret; 
0x00189a04: pop ds; push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0003b0cd: pop ds; ret; 
0x000c21df: pop ds; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x00042e3b: pop ds; shr eax, cl; ret; 
0x0003bde2: pop ds; shr ecx, 0x10; or eax, ecx; ret; 
0x001970c3: pop ds; sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003bd7d: pop ds; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00148c8d: pop ds; sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x0012ac08: pop ds; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000bb70d: pop dword ptr [0x5e5f0000]; pop ebx; ret; 
0x001153ab: pop dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a9e8d: pop dword ptr [eax]; add byte ptr [eax], al; lea eax, [ecx + 4]; ret; 
0x0014d7e0: pop dword ptr [ebx + 0x29000002]; ret; 
0x000f1d8e: pop dword ptr [edi - 7]; call dword ptr [eax - 0x73]; 
0x000df24a: pop dword ptr [edx]; jbe 0xdf258; mov eax, edx; ret; 
0x00030765: pop eax; aam 0x80; sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x001856ad: pop eax; adc al, 0x39; fimul word ptr [edi]; xchg edx, eax; ret; 
0x0015b263: pop eax; adc al, 0x89; ret; 
0x0016f81f: pop eax; adc byte ptr [eax + 1], bh; pop ebx; pop esi; ret; 
0x00080690: pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x0007f821: pop eax; adc byte ptr [ecx + 0x5b3a89c8], cl; pop esi; pop edi; ret; 
0x00031e54: pop eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x840f; 
0x00198a0a: pop eax; adc eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ceb: pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00103462: pop eax; add al, 0xf7; ret; 
0x0005d15a: pop eax; add ch, cl; ret; 
0x001232a4: pop eax; add dword ptr [eax], eax; add ah, bl; mov al, 0xc4; ret 0xfff9; 
0x000a4811: pop eax; add dword ptr [ecx + 0x63e9047e], ecx; idiv bh; dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x0011130f: pop eax; add ecx, edi; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0011eb02: pop eax; add esp, 0xe4; pop ebx; pop esi; ret; 
0x000fd442: pop eax; and al, 0x8b; inc eax; xor byte ptr [ecx], bh; ret; 
0x000b01bb: pop eax; and byte ptr [ebx - 0x398af716], al; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x00174c7c: pop eax; bswap eax; mov dword ptr [edx + 0xc], eax; mov eax, 1; pop ebx; ret; 
0x000aca62: pop eax; call 0xc24eda67; ret; 
0x0002bb74: pop eax; call eax; 
0x000feeac: pop eax; cld; dec dword ptr [ebx - 0x76efdbb4]; ret 0x448b; 
0x0013ae86: pop eax; cmc; inc dword ptr [ebx - 0x6d72fe1d]; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x0012edec: pop eax; cmpsb byte ptr [esi], byte ptr es:[edi]; stc; call dword ptr [eax + 0x55]; 
0x001b3c94: pop eax; fcos; dec dword ptr [ebx - 0x7af3db8c]; test byte ptr [edi], -0x7c; ret 0xfffd; 
0x00192a8a: pop eax; imul eax, dword ptr [eax + eax], 3; sbb al, 0x8b; jmp ebx; 
0x000ac484: pop eax; inc dword ptr [ebx + 0x5e5b08c4]; pop edi; pop ebp; ret; 
0x0019550a: pop eax; inc ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ea474: pop eax; insb byte ptr es:[edi], dx; mov dword ptr [eax + 0x6c], ebx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x00093009: pop eax; insb byte ptr es:[edi], dx; mov eax, 0x137; call dword ptr gs:[0x10]; 
0x000650dd: pop eax; jmp eax; 
0x000c1473: pop eax; jnp 0x5b1838be; pop esi; ret; 
0x000bdff0: pop eax; jnp 0x5e14043b; ret; 
0x00027275: pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x000274d8: pop eax; jo 0x274d4; jmp dword ptr [esi - 0x77]; 
0x000c22b7: pop eax; lea esi, cs:[esi]; xor eax, eax; ret; 
0x0007c435: pop eax; mov dword ptr [ecx + 0x88], edx; ret; 
0x000895b1: pop eax; mov dword ptr [edx + 0x88], ecx; pop ebx; pop esi; pop edi; ret; 
0x0003cac8: pop eax; mov eax, 0x77; int 0x80; 
0x0016d4a5: pop eax; mov eax, dword ptr [ebx + 4]; pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x00087231: pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00087101: pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x0002de3f: pop eax; mov eax, dword ptr [esp + 0x50]; call eax; 
0x000c2c5c: pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000fb679: pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x0009032d: pop eax; or al, 0xe8; mov esp, 0x3900060b; ret; 
0x00142d64: pop eax; or al, 0xe9; ret 0xfffe; 
0x0014c1f9: pop eax; or byte ptr [ebp + 0x1e850fed], al; add al, byte ptr [eax]; add dh, dh; ret; 
0x0014c127: pop eax; or byte ptr [ebp - 0x777af013], al; add al, 0; add dh, dh; ret; 
0x00142d5e: pop eax; or byte ptr [ebx + 0x58890c5a], cl; or al, 0xe9; ret 0xfffe; 
0x0005ac5e: pop eax; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000810e5: pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0014c49c: pop eax; or dh, dh; ret; 
0x00154dbc: pop eax; outsd dx, dword ptr [esi]; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00053f4a: pop eax; pop ebx; pop esi; pop edi; ret; 
0x000d9cb7: pop eax; pop edi; pop esi; ret; 
0x001736b7: pop eax; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0016d47c: pop eax; pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0016db2e: pop eax; pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016e596: pop eax; pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016dc2c: pop eax; pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x001630fb: pop eax; popal; stc; call dword ptr [eax - 0x18]; 
0x0016328e: pop eax; popal; stc; call dword ptr [eax - 0x73]; 
0x000c74be: pop eax; popfd; stc; call dword ptr [eax - 0x73]; 
0x000c1453: pop eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdfd0: pop eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00197c8a: pop eax; push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000388ee: pop eax; push dword ptr [ebx + 0x12cc]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0002f3ff: pop eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002de3b: pop eax; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0016084c: pop eax; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285a4: pop eax; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d0d: pop eax; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00160850: pop eax; push esi; call edi; 
0x000c52f8: pop eax; pushfd; stc; call dword ptr [eax - 0x73]; 
0x00132a71: pop eax; ret; 
0x000dee44: pop eax; sahf; stc; call dword ptr [eax - 0x18]; 
0x000dee44: pop eax; sahf; stc; call dword ptr [eax - 0x18]; ret 0xf554; 
0x0013fcfe: pop eax; stc; call dword ptr [eax + 0x6a]; 
0x0013ccf7: pop eax; stc; call dword ptr [eax - 0x18]; 
0x0013cf94: pop eax; stc; call dword ptr [ecx + 0x50]; 
0x0013cf79: pop eax; stc; call dword ptr [ecx - 0x77]; 
0x0013cf73: pop eax; stc; dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x0019718a: pop eax; sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007ff37: pop eax; sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0009320a: pop eax; test cl, bh; call dword ptr [eax - 0x18]; 
0x000a3908: pop eax; xchg ecx, eax; stc; call dword ptr [eax - 0x18]; 
0x0016eea2: pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000425b6: pop eax; xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x000d498d: pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x000273ba: pop ebp; aam 0xe8; lahf; ret 9; 
0x00173ae9: pop ebp; adc al, 0x8d; xchg esi, ecx; stc; call dword ptr [eax + 0x53]; 
0x000b9ae5: pop ebp; adc dl, byte ptr [ecx]; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00193844: pop ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0005bb77: pop ebp; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x00123f41: pop ebp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00159df0: pop ebp; add byte ptr [eax], bh; sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x00110981: pop ebp; add cl, ch; ret; 
0x0007f2ff: pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000dc2ed: pop ebp; add esp, 0x24; pop ebx; pop esi; ret; 
0x00162ea9: pop ebp; bnd call dword ptr [eax - 1]; 
0x00129e5a: pop ebp; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x001293e0: pop ebp; idiv bh; add esp, 0x2c; ret; 
0x0007c9c4: pop ebp; in al, 0x6a; call dword ptr [esi - 0x18]; 
0x000250b5: pop ebp; jmp eax; 
0x000c1119: pop ebp; lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009321f: pop ebp; lodsb al, byte ptr [esi]; mov eax, 0xf0; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x0017c28d: pop ebp; mov byte ptr [ecx], al; ret 0x858b; 
0x0003415b: pop ebp; mov eax, ecx; ret; 
0x000fbfbd: pop ebp; neg eax; ret; 
0x0003b30d: pop ebp; not eax; and eax, edx; ret; 
0x00079a7e: pop ebp; or byte ptr [ecx], bh; ret; 
0x0013d462: pop ebp; out dx, al; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000c30cd: pop ebp; pop ebx; pop esi; pop edi; ret; 
0x001a33eb: pop ebp; pop ebx; ret; 
0x001a35c5: pop ebp; pop ebx; xor eax, eax; ret; 
0x00120fa2: pop ebp; pop edi; pop ebx; ret; 
0x000537e8: pop ebp; pop esi; pop edi; ret; 
0x0014b946: pop ebp; pop esp; stc; call dword ptr [eax - 0x18]; 
0x00126330: pop ebp; push ecx; stc; call dword ptr [eax + 0x55]; 
0x0003aec2: pop ebp; ret 4; 
0x00023404: pop ebp; ret; 
0x000adba9: pop ebp; rol byte ptr [ecx], 1; ret; 
0x00153106: pop ebp; sar edx, 1; imul eax, edx, 0xb6db6db7; ret; 
0x001a599c: pop ebp; sbb al, 0xfe; inc dword ptr [ecx + 0x34a04c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00152f1c: pop ebp; stc; call dword ptr [eax + 0x53]; 
0x00152ed4: pop ebp; stc; call dword ptr [eax + 0x56]; 
0x0014ff55: pop ebp; stc; call dword ptr [eax - 0x18]; 
0x001516d0: pop ebp; stc; call dword ptr [eax - 0x18]; aaa; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00151810: pop ebp; stc; call dword ptr [eax - 0x18]; imul dword ptr [edx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151590: pop ebp; stc; call dword ptr [eax - 0x18]; ja 0x1515c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151a90: pop ebp; stc; call dword ptr [eax - 0x18]; ja 0x151abf; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151950: pop ebp; stc; call dword ptr [eax - 0x18]; mov bh, 0x29; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151450: pop ebp; stc; call dword ptr [eax - 0x18]; mov bh, 0x2e; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001514f0: pop ebp; stc; call dword ptr [eax - 0x18]; pop ss; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001519f0: pop ebp; stc; call dword ptr [eax - 0x18]; pop ss; sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x001518b0: pop ebp; stc; call dword ptr [eax - 0x18]; push edi; sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x00151770: pop ebp; stc; call dword ptr [eax - 0x18]; xchg edi, eax; sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00151630: pop ebp; stc; call dword ptr [eax - 0x18]; xlatb; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00154505: pop ebp; stc; call dword ptr [eax - 1]; 
0x0015320a: pop ebp; stc; call dword ptr [ebx - 0x73]; 
0x0016588a: pop ebp; std; jmp dword ptr [esi - 0x70]; 
0x0004dce4: pop ebp; xor eax, 0x7fffffff; ret; 
0x0019e683: pop ebp; xor eax, eax; ret; 
0x00025390: pop ebx; adc edx, 0; neg edx; ret; 
0x00193a4b: pop ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010d671: pop ebx; add al, 0x31; sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001503ad: pop ebx; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xor dword ptr [edx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x00182955: pop ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x1442474], cl; ret; 
0x000c18a1: pop ebx; add dword ptr [eax], eax; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000437b6: pop ebx; add eax, 0x20; ret; 
0x00059dbd: pop ebx; add eax, 0x8d500000; xchg al, ch; das; stc; call dword ptr [eax - 0x18]; 
0x0004a4ed: pop ebx; add eax, 0x8d500000; xchg eax, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x00176d80: pop ebx; add eax, 0x90; pop esi; pop edi; ret; 
0x00176e10: pop ebx; add eax, 0x94; pop esi; pop edi; ret; 
0x00127897: pop ebx; and edx, 0xfff; and eax, 0xfffff000; or eax, edx; ret; 
0x000a92c2: pop ebx; call 0xc24ea2c7; ret; 
0x00175a5a: pop ebx; cld; jmp dword ptr [esi - 0x70]; 
0x000a91c8: pop ebx; cmove eax, edx; add eax, 0x21; ret; 
0x000a91b4: pop ebx; cmove eax, edx; add eax, 1; ret; 
0x0010e476: pop ebx; cmove eax, edx; ret; 
0x00041d6b: pop ebx; cmove esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000eaf49: pop ebx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00040576: pop ebx; cmp eax, 0xfffff001; jae 0x24f10; xor eax, eax; ret; 
0x0013ceba: pop ebx; dec dword ptr [edi]; add byte ptr [ebx + 0xc880], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x00172ac1: pop ebx; idiv edi; jmp dword ptr [esi - 0x70]; 
0x0012c935: pop ebx; jl 0x24f10; ret; 
0x0007c587: pop ebx; jmp eax; 
0x001507a1: pop ebx; jp 0x150798; jmp dword ptr [ebp - 0x75]; 
0x001a9554: pop ebx; lea eax, [eax + 8]; pop edi; ret; 
0x0009b355: pop ebx; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x0004386c: pop ebx; lea eax, [ecx + 0x20]; ret; 
0x001a8bf4: pop ebx; lea eax, [ecx + 9]; ret; 
0x00080197: pop ebx; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x001a8534: pop ebx; lea eax, [edi + 8]; pop edi; ret; 
0x000983af: pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0009084b: pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x0005b639: pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x001a3f1f: pop ebx; mov eax, 1; ja 0x1a3f29; neg eax; ret; 
0x001a4a06: pop ebx; mov eax, 1; ja 0x1a4a10; neg eax; ret; 
0x001a72f0: pop ebx; mov eax, 1; ja 0x1a72fa; neg eax; ret; 
0x001a5c30: pop ebx; mov eax, 1; jg 0x1a5c40; neg eax; ret; 
0x001a9d30: pop ebx; mov eax, 1; jg 0x1a9d40; neg eax; ret; 
0x00053d77: pop ebx; mov eax, 1; pop esi; pop edi; ret; 
0x0010ca50: pop ebx; mov eax, 9; pop esi; pop edi; ret; 
0x0008e1a0: pop ebx; mov eax, dword ptr [eax + 0x18]; pop esi; jmp eax; 
0x00179a23: pop ebx; mov eax, dword ptr [eax + 0xc]; pop esi; pop edi; jmp eax; 
0x00179a5c: pop ebx; mov eax, dword ptr [eax + 8]; pop esi; pop edi; jmp eax; 
0x0008199d: pop ebx; mov eax, dword ptr [edi + 0x10]; pop esi; pop edi; jmp eax; 
0x0008184d: pop ebx; mov eax, dword ptr [edi + 0x14]; pop esi; pop edi; jmp eax; 
0x000819ec: pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x00089a0d: pop ebx; mov eax, dword ptr [esi + 0x10]; pop esi; pop edi; jmp eax; 
0x00035345: pop ebx; mov eax, ebp; pop esi; pop edi; pop ebp; ret; 
0x000309fa: pop ebx; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00114094: pop ebx; mov eax, ecx; pop esi; pop edi; ret; 
0x000432e7: pop ebx; mov eax, ecx; ret; 
0x000338fe: pop ebx; mov eax, edi; pop esi; pop edi; pop ebp; ret; 
0x0003ed4b: pop ebx; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x00053890: pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x000336d3: pop ebx; mov eax, edx; ret; 
0x0003c13e: pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x000389d1: pop ebx; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x00041daa: pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x0007e76c: pop ebx; mov edx, eax; pop esi; pop edi; pop ebp; ret; 
0x0008a586: pop ebx; mov edx, edi; pop esi; pop edi; pop ebp; ret; 
0x001906a1: pop ebx; movzx eax, al; neg eax; ret; 
0x0014c8d8: pop ebx; movzx eax, al; ret; 
0x001893b8: pop ebx; movzx eax, byte ptr [edx]; pop esi; pop edi; ret; 
0x0009459e: pop ebx; neg eax; pop esi; pop edi; ret; 
0x000895fa: pop ebx; neg eax; ret; 
0x000e7ba7: pop ebx; neg edx; cmp eax, -0x16; mov eax, 3; cmovne eax, edx; ret; 
0x00099f12: pop ebx; neg edx; cmp eax, 0xfffff000; mov eax, 0; cmova eax, edx; ret; 
0x000b9c41: pop ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0015539a: pop ebx; or eax, 1; pop esi; pop edi; pop ebp; ret; 
0x000537e7: pop ebx; pop ebp; pop esi; pop edi; ret; 
0x0019e682: pop ebx; pop ebp; xor eax, eax; ret; 
0x0003ce75: pop ebx; pop edi; ret; 
0x00158ea2: pop ebx; pop edi; stc; call dword ptr [eax + 0x6a]; 
0x00122ada: pop ebx; pop esi; add eax, ecx; adc edx, 0; ret; 
0x00159f7c: pop ebx; pop esi; and edx, 0xf; mov eax, edx; ret; 
0x000c6e10: pop ebx; pop esi; cmovg eax, edx; pop edi; ret; 
0x0011ff7e: pop ebx; pop esi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00083279: pop ebx; pop esi; jmp eax; 
0x000c7a7a: pop ebx; pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x0009d347: pop ebx; pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0003e24a: pop ebx; pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008dcaf: pop ebx; pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f835: pop ebx; pop esi; mov eax, ecx; pop edi; ret; 
0x000d9da7: pop ebx; pop esi; mov eax, ecx; ret; 
0x000338ca: pop ebx; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00103135: pop ebx; pop esi; mov eax, edi; pop edi; ret; 
0x000ac412: pop ebx; pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00094ea9: pop ebx; pop esi; mov eax, edx; ret; 
0x0005b659: pop ebx; pop esi; movzx eax, al; pop edi; ret; 
0x00134664: pop ebx; pop esi; neg eax; ret; 
0x0012a8e2: pop ebx; pop esi; pop ebp; ret; 
0x00114e73: pop ebx; pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003bef4: pop ebx; pop esi; pop edi; fsubp st(1); ret; 
0x001841be: pop ebx; pop esi; pop edi; jmp eax; 
0x0018937c: pop ebx; pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00028784: pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x000620dc: pop ebx; pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x0003aebf: pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00023401: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0013c53c: pop ebx; pop esi; pop edi; ret 4; 
0x000255a6: pop ebx; pop esi; pop edi; ret; 
0x000c1a10: pop ebx; pop esi; pop edi; xor eax, eax; ret; 
0x00040aed: pop ebx; pop esi; ret 4; 
0x00024b78: pop ebx; pop esi; ret; 
0x0002501b: pop ebx; pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000fbf4b: pop ebx; pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x00053821: pop ebx; pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x001284e5: pop ebx; pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00097738: pop ebx; pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003b37c: pop ebx; pop esi; shr eax, 0x1f; pop edi; ret; 
0x000c19b9: pop ebx; pop esi; sub eax, 0x10; pop edi; ret; 
0x0008ab7c: pop ebx; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008ff90: pop ebx; pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001a7b50: pop ebx; pop esi; xor eax, eax; pop edi; ret; 
0x00051c25: pop ebx; pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x001947c7: pop ebx; push ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00120bbb: pop ebx; ret 0x11; 
0x00143451: pop ebx; ret 0xfffe; 
0x00055899: pop ebx; ret 4; 
0x000244a7: pop ebx; ret; 
0x0003c109: pop ebx; sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x000801d2: pop ebx; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00043553: pop ebx; setb al; ret; 
0x0012c89c: pop ebx; setg al; pop esi; pop edi; ret; 
0x00125d0e: pop ebx; setne al; pop esi; pop edi; movzx eax, al; ret; 
0x0012d550: pop ebx; shr eax, cl; and eax, 3; ret; 
0x00148a46: pop ebx; stc; call dword ptr [eax - 0x18]; 
0x0014eca9: pop ebx; stc; call dword ptr [eax - 0x73]; 
0x0014931f: pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x000bb147: pop ebx; std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00176cf0: pop ebx; sub eax, -0x80; pop esi; pop edi; ret; 
0x00042f72: pop ebx; sub eax, edx; ret; 
0x0002752b: pop ebx; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x001228b0: pop ebx; sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x0012c6f6: pop ebx; test eax, eax; jl 0x24f10; je 0x12c702; ret; 
0x00043623: pop ebx; xor eax, 0x1f; ret; 
0x000405e9: pop ebx; xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00053d4f: pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x001a0d2e: pop ebx; xor eax, eax; ret; 
0x00189f13: pop ecx; aad 0xef; jmp dword ptr [esi - 0x70]; 
0x000a1537: pop ecx; adc al, 0x89; dec ebx; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00143218: pop ecx; adc cl, byte ptr [ebp - 0x2ff4d]; jmp dword ptr [esi - 0x7d]; 
0x00193c34: pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a4371: pop ecx; add al, 0xf6; ret; 
0x001092fc: pop ecx; add al, 0xf7; ret; 
0x0014c8a9: pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000afb3d: pop ecx; add dword ptr [ecx + 0x75ff851e], ecx; mov al, 0x83; ret 0x8301; 
0x000af28d: pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x00040bc1: pop ecx; add ecx, 0xa; mov dword ptr [edx], ecx; ret; 
0x00128b17: pop ecx; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001210af: pop ecx; add esp, 0x14; pop ebx; pop esi; ret; 
0x00160746: pop ecx; add esp, 4; pop ebx; pop esi; ret; 
0x0005dfb3: pop ecx; arpl bp, di; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x0005c5a3: pop ecx; dec byte ptr [ebx - 0x8f73]; call dword ptr [ebx - 0x75]; 
0x00122fc8: pop ecx; dec edx; stc; call dword ptr [eax - 1]; 
0x001390ee: pop ecx; fdivr qword ptr [ecx]; ret; 
0x0007bfd8: pop ecx; jne 0x7bfd5; jmp dword ptr [esi - 0x70]; 
0x0010e4d0: pop ecx; mov eax, 0xbe; int 0x80; 
0x00132a70: pop ecx; pop eax; ret; 
0x00154436: pop ecx; pop ebx; pop esi; pop edi; ret; 
0x0003c6cc: pop ecx; pop edx; ret; 
0x0016c7fb: pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c3a2b: pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00046ffd: pop ecx; ret; 
0x000a720f: pop ecx; stc; call dword ptr [eax + 0x6a]; 
0x000247bd: pop ecx; stc; call dword ptr [eax - 0x18]; 
0x00141235: pop ecx; stc; call dword ptr [eax - 0x73]; 
0x00024765: pop ecx; stc; call dword ptr [eax - 1]; 
0x00060773: pop ecx; stc; call dword ptr [ebp + 0x50]; 
0x001234f9: pop ecx; stc; call dword ptr [ecx + 0x50]; 
0x00141158: pop ecx; stc; dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x0019365b: pop edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00154e45: pop edi; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00091195: pop edi; add byte ptr [eax], al; add byte ptr [edi], cl; inc ebp; ret 0x8dc3; 
0x0003e651: pop edi; add dword ptr [ebx + 0x39142444], ecx; ret; 
0x000bb73d: pop edi; add eax, 0x5e5f0000; pop ebx; ret; 
0x00198cb1: pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000534ac: pop edi; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x001792d9: pop edi; add esp, 0x18; pop ebx; ret; 
0x0019abf3: pop edi; call 0x1875fd; add ebx, 0x3f4e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aae9: pop edi; call 0x1875fd; add ebx, 0x3f5f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a9e2: pop edi; call 0x1875fd; add ebx, 0x3f6f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bf3: pop edi; call 0x1875fd; add ebx, 0x40327; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ae9: pop edi; call 0x1875fd; add ebx, 0x40431; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999e2: pop edi; call 0x1875fd; add ebx, 0x40538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c13: pop edi; call 0x1875fd; add ebx, 0x41147; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198b09: pop edi; call 0x1875fd; add ebx, 0x41251; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198a02: pop edi; call 0x1875fd; add ebx, 0x41358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001987e6: pop edi; call 0x1875fd; add ebx, 0x414b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e99: pop edi; call 0x1875fd; add ebx, 0x41c41; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197e7b: pop edi; call 0x1875fd; add ebx, 0x41c5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197de2: pop edi; call 0x1875fd; add ebx, 0x41cf8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d1b: pop edi; call 0x1875fd; add ebx, 0x41dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197c82: pop edi; call 0x1875fd; add ebx, 0x41e58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197bbb: pop edi; call 0x1875fd; add ebx, 0x41f1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197b22: pop edi; call 0x1875fd; add ebx, 0x41fb8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a5b: pop edi; call 0x1875fd; add ebx, 0x4207f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001979c2: pop edi; call 0x1875fd; add ebx, 0x42118; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001978fb: pop edi; call 0x1875fd; add ebx, 0x421df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197862: pop edi; call 0x1875fd; add ebx, 0x42278; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019779b: pop edi; call 0x1875fd; add ebx, 0x4233f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197702: pop edi; call 0x1875fd; add ebx, 0x423d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019763b: pop edi; call 0x1875fd; add ebx, 0x4249f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001975a2: pop edi; call 0x1875fd; add ebx, 0x42538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001974db: pop edi; call 0x1875fd; add ebx, 0x425ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197442: pop edi; call 0x1875fd; add ebx, 0x42698; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019737b: pop edi; call 0x1875fd; add ebx, 0x4275f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001972e2: pop edi; call 0x1875fd; add ebx, 0x427f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019721b: pop edi; call 0x1875fd; add ebx, 0x428bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197182: pop edi; call 0x1875fd; add ebx, 0x42958; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001970bb: pop edi; call 0x1875fd; add ebx, 0x42a1f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197022: pop edi; call 0x1875fd; add ebx, 0x42ab8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f5b: pop edi; call 0x1875fd; add ebx, 0x42b7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196ec2: pop edi; call 0x1875fd; add ebx, 0x42c18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196dfb: pop edi; call 0x1875fd; add ebx, 0x42cdf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196d62: pop edi; call 0x1875fd; add ebx, 0x42d78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c9b: pop edi; call 0x1875fd; add ebx, 0x42e3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196c02: pop edi; call 0x1875fd; add ebx, 0x42ed8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196b3b: pop edi; call 0x1875fd; add ebx, 0x42f9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196aa2: pop edi; call 0x1875fd; add ebx, 0x43038; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001967cf: pop edi; call 0x1875fd; add ebx, 0x433cb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d99: pop edi; call 0x1875fd; add ebx, 0x43ac1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195d7b: pop edi; call 0x1875fd; add ebx, 0x43adf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195ce2: pop edi; call 0x1875fd; add ebx, 0x43b78; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c2b: pop edi; call 0x1875fd; add ebx, 0x43c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195b92: pop edi; call 0x1875fd; add ebx, 0x43cc8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195adb: pop edi; call 0x1875fd; add ebx, 0x43d7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195a42: pop edi; call 0x1875fd; add ebx, 0x43e18; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019598b: pop edi; call 0x1875fd; add ebx, 0x43ecf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001958f2: pop edi; call 0x1875fd; add ebx, 0x43f68; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019583b: pop edi; call 0x1875fd; add ebx, 0x4401f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001957a2: pop edi; call 0x1875fd; add ebx, 0x440b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001956eb: pop edi; call 0x1875fd; add ebx, 0x4416f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195652: pop edi; call 0x1875fd; add ebx, 0x44208; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019559b: pop edi; call 0x1875fd; add ebx, 0x442bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195502: pop edi; call 0x1875fd; add ebx, 0x44358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019544b: pop edi; call 0x1875fd; add ebx, 0x4440f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001953b2: pop edi; call 0x1875fd; add ebx, 0x444a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952fb: pop edi; call 0x1875fd; add ebx, 0x4455f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195262: pop edi; call 0x1875fd; add ebx, 0x445f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951ab: pop edi; call 0x1875fd; add ebx, 0x446af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195112: pop edi; call 0x1875fd; add ebx, 0x44748; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019505b: pop edi; call 0x1875fd; add ebx, 0x447ff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194fc2: pop edi; call 0x1875fd; add ebx, 0x44898; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f0b: pop edi; call 0x1875fd; add ebx, 0x4494f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194e72: pop edi; call 0x1875fd; add ebx, 0x449e8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194dbb: pop edi; call 0x1875fd; add ebx, 0x44a9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194d22: pop edi; call 0x1875fd; add ebx, 0x44b38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194c6b: pop edi; call 0x1875fd; add ebx, 0x44bef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194bd2: pop edi; call 0x1875fd; add ebx, 0x44c88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194b1b: pop edi; call 0x1875fd; add ebx, 0x44d3f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194a82: pop edi; call 0x1875fd; add ebx, 0x44dd8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001947bf: pop edi; call 0x1875fd; add ebx, 0x4515b; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d99: pop edi; call 0x1875fd; add ebx, 0x45841; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193d7b: pop edi; call 0x1875fd; add ebx, 0x4585f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193ce2: pop edi; call 0x1875fd; add ebx, 0x458f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c2b: pop edi; call 0x1875fd; add ebx, 0x459af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193b92: pop edi; call 0x1875fd; add ebx, 0x45a48; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193adb: pop edi; call 0x1875fd; add ebx, 0x45aff; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193a42: pop edi; call 0x1875fd; add ebx, 0x45b98; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019398b: pop edi; call 0x1875fd; add ebx, 0x45c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001938f2: pop edi; call 0x1875fd; add ebx, 0x45ce8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019383b: pop edi; call 0x1875fd; add ebx, 0x45d9f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001937a2: pop edi; call 0x1875fd; add ebx, 0x45e38; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001936eb: pop edi; call 0x1875fd; add ebx, 0x45eef; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193652: pop edi; call 0x1875fd; add ebx, 0x45f88; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019359b: pop edi; call 0x1875fd; add ebx, 0x4603f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193502: pop edi; call 0x1875fd; add ebx, 0x460d8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019344b: pop edi; call 0x1875fd; add ebx, 0x4618f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001933b2: pop edi; call 0x1875fd; add ebx, 0x46228; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001932fb: pop edi; call 0x1875fd; add ebx, 0x462df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193262: pop edi; call 0x1875fd; add ebx, 0x46378; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931ab: pop edi; call 0x1875fd; add ebx, 0x4642f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193112: pop edi; call 0x1875fd; add ebx, 0x464c8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019305b: pop edi; call 0x1875fd; add ebx, 0x4657f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192fc2: pop edi; call 0x1875fd; add ebx, 0x46618; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f0b: pop edi; call 0x1875fd; add ebx, 0x466cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192e72: pop edi; call 0x1875fd; add ebx, 0x46768; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192dbb: pop edi; call 0x1875fd; add ebx, 0x4681f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192d22: pop edi; call 0x1875fd; add ebx, 0x468b8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192c6b: pop edi; call 0x1875fd; add ebx, 0x4696f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192bd2: pop edi; call 0x1875fd; add ebx, 0x46a08; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192b1b: pop edi; call 0x1875fd; add ebx, 0x46abf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192a82: pop edi; call 0x1875fd; add ebx, 0x46b58; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001927bf: pop edi; call 0x1875fd; add ebx, 0x46edb; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000aa8a7: pop edi; call 0xc24eb8ac; ret; 
0x0011f6e8: pop edi; cmova eax, edx; ret; 
0x000c6df2: pop edi; cmovg eax, edx; ret; 
0x00114e75: pop edi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00197383: pop edi; daa; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003bef6: pop edi; fsubp st(1); ret; 
0x00195303: pop edi; inc ebp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000bba00: pop edi; jge 0x5e6ad14e; pop ebx; ret; 
0x00081852: pop edi; jmp eax; 
0x000ba320: pop edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x0019a71c: pop edi; mov eax, dword ptr [esp + 8]; mov ecx, dword ptr [esp + 0x10]; add eax, ecx; pop ebx; ret; 
0x00191510: pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00120d80: pop edi; mov ebx, dword ptr [esp + 0x60]; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00125d13: pop edi; movzx eax, al; ret; 
0x0018937e: pop edi; movzx eax, byte ptr [eax]; ret; 
0x001a295d: pop edi; or al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000c16ae: pop edi; or al, 0; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001377ec: pop edi; or al, 0x89; ret 0x4589; 
0x00134a31: pop edi; or byte ptr [ebx + ebp*8 + 0x5b], dh; mov eax, ecx; pop esi; pop edi; ret; 
0x0007976e: pop edi; or byte ptr [ecx], bh; ret; 
0x001888f9: pop edi; out dx, eax; jmp dword ptr [ecx]; 
0x00193d83: pop edi; pop eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00129e59: pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x000250b4: pop edi; pop ebp; jmp eax; 
0x0003415a: pop edi; pop ebp; mov eax, ecx; ret; 
0x000fbfbc: pop edi; pop ebp; neg eax; ret; 
0x0003b30c: pop edi; pop ebp; not eax; and eax, edx; ret; 
0x001a52c2: pop edi; pop ebp; pop ebx; ret; 
0x001a35c4: pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003aec1: pop edi; pop ebp; ret 4; 
0x00023403: pop edi; pop ebp; ret; 
0x00153105: pop edi; pop ebp; sar edx, 1; imul eax, edx, 0xb6db6db7; ret; 
0x0004dce3: pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x0019e681: pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x000b3922: pop edi; pop ebx; ret; 
0x0014907d: pop edi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x000b9be0: pop edi; pop esi; pop ebx; ret; 
0x000b07de: pop edi; pop esi; ret; 
0x000ba300: pop edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0013c53e: pop edi; ret 4; 
0x000255a8: pop edi; ret; 
0x00197e83: pop edi; sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015ac1d: pop edi; stc; call dword ptr [eax + 0x55]; 
0x00123946: pop edi; stc; call dword ptr [eax + 0x6a]; 
0x00123946: pop edi; stc; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x00157f1c: pop edi; stc; call dword ptr [eax - 0x18]; 
0x00123ba6: pop edi; stc; call dword ptr [eax - 0x73]; 
0x0015cc40: pop edi; stc; call dword ptr [eax - 1]; 
0x001581ec: pop edi; stc; call dword ptr [ecx + 0x50]; 
0x001582b2: pop edi; stc; call dword ptr [ecx - 0x17]; 
0x000fb1d6: pop edi; stc; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x0016567e: pop edi; std; jmp dword ptr [esi - 0x70]; 
0x001a3d51: pop edi; xor eax, eax; pop ebp; ret; 
0x000c1a12: pop edi; xor eax, eax; ret; 
0x00040a59: pop edx; adc al, 0x5b; pop esi; pop edi; ret; 
0x00080864: pop edx; adc byte ptr [ecx + 0x4c48331], cl; pop ebx; pop esi; ret; 
0x00193ae4: pop edx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001b0f83: pop edx; add al, 0x83; ret 0xc104; 
0x001ab510: pop edx; add al, 0x83; ret 0xd304; 
0x000ac696: pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x0008068d: pop edx; add al, 0x89; pop eax; adc byte ptr [ecx + 0x5b0a89c8], cl; ret; 
0x000956e2: pop edx; add al, byte ptr [eax]; add byte ptr [ebx + 0x458901c0], al; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x0014c8af: pop edx; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x0008bf4d: pop edx; add dword ptr [eax + 0x56], edx; call dword ptr [ebp + 0xc]; 
0x00127ece: pop edx; add dword ptr [ebp - 0x27], esi; mov eax, esi; pop ebx; pop esi; ret; 
0x0013f09a: pop edx; add dword ptr [ebp - 0x76fde7bc], ecx; ret; 
0x0004089d: pop edx; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x00172c6c: pop edx; and al, 0x83; ret 0x8b18; 
0x000fd4aa: pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ea269: pop edx; cli; jmp dword ptr [esi - 0x70]; 
0x000fd713: pop edx; dec dword ptr [ecx + 0x72e82434]; pop edx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000fd71b: pop edx; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000a8c4c: pop edx; inc dword ptr [ebx - 0x2288fe06]; pop ebx; pop esi; pop edi; ret; 
0x000650d3: pop edx; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00070e57: pop edx; jbe 0x71bc0; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00070daa: pop edx; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000eb51d: pop edx; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x001a49d4: pop edx; or al, 0x39; fnstcw word ptr [eax]; jne 0x1a49f0; pop ebx; ret; 
0x00142d61: pop edx; or al, 0x89; pop eax; or al, 0xe9; ret 0xfffe; 
0x000a17a2: pop edx; or al, 0x89; ret 0xca83; 
0x0005ac87: pop edx; or byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00142d5b: pop edx; or byte ptr [ecx + 0x5a8b0858], cl; or al, 0x89; pop eax; or al, 0xe9; ret 0xfffe; 
0x0017be9a: pop edx; or byte ptr [ecx], bh; ret; 
0x0007d1d7: pop edx; or cl, ch; cmp esi, -1; jmp dword ptr [esi - 0x70]; 
0x000a3ade: pop edx; or dh, dh; ret; 
0x000a639d: pop edx; pop ebx; pop esi; ret; 
0x00132a6f: pop edx; pop ecx; pop eax; ret; 
0x0016c7fa: pop edx; pop ecx; push 0; push esi; call dword ptr [eax + 0x14]; 
0x000c3a2a: pop edx; pop ecx; push ebx; push dword ptr [edi]; call esi; 
0x00145cdc: pop edx; pop edx; stc; call dword ptr [eax + 0x53]; 
0x001736b8: pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0016d47d: pop edx; push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0016db2f: pop edx; push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0016e597: pop edx; push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x0016d4a9: pop edx; push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0016dc2d: pop edx; push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003c6cd: pop edx; ret; 
0x001452a7: pop edx; stc; call dword ptr [eax + 0x51]; 
0x00145cdd: pop edx; stc; call dword ptr [eax + 0x53]; 
0x00145564: pop edx; stc; call dword ptr [eax + 0x68]; 
0x00144e43: pop edx; stc; call dword ptr [eax - 0x18]; 
0x000c1ce5: pop edx; xor eax, eax; pop edi; ret; 
0x000a31ec: pop es; adc byte ptr [ebx - 0x76f3db84], cl; ret 0xfa29; 
0x000ba600: pop es; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001998f2: pop es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198e5f: pop es; add al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00196f59: pop es; add al, 0x5f; call 0x1875fd; add ebx, 0x42b7f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194f09: pop es; add al, 0x5f; call 0x1875fd; add ebx, 0x4494f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00192f09: pop es; add al, 0x5f; call 0x1875fd; add ebx, 0x466cf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198d3f: pop es; add bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0009152f: pop es; add byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005b8f7: pop es; add byte ptr [eax], al; add byte ptr [ebx - 0x3fcefb3c], al; pop ebx; pop esi; ret; 
0x000973f8: pop es; add byte ptr [eax], al; add byte ptr [ecx - 0x9cefba9], cl; xor edx, edx; call dword ptr gs:[0x10]; 
0x000316be: pop es; add byte ptr [eax], al; add byte ptr [edi], cl; inc esp; ret 0xf289; 
0x00127e2c: pop es; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x0004a6ff: pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a7ff2: pop es; add byte ptr [eax], al; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x001a427a: pop es; add byte ptr [eax], al; pop ebx; ret; 
0x000b9dbb: pop es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c49d9: pop es; add byte ptr [ebp - 0x663ff7b], cl; call dword ptr [eax - 0x73]; 
0x000c4745: pop es; add byte ptr [ebp - 0x6640b7e], cl; call dword ptr [eax - 0x73]; 
0x00044871: pop es; add byte ptr [ebx + 0xc8b10c4], al; and al, 0xe9; popfd; idiv edi; jmp dword ptr [esi - 0x70]; 
0x000535ee: pop es; add byte ptr [ebx - 0x3b7cef3c], al; add al, 0x5b; pop esi; ret; 
0x000caab4: pop es; add byte ptr [ebx - 0x72b7db84], cl; xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x000c74b6: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7152: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4cca: pop es; add byte ptr [ebx - 0x72e3db84], cl; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c504c: pop es; add byte ptr [ebx - 0x72e3dbac], cl; or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x00030537: pop es; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x00030529: pop es; add byte ptr [ecx - 0x76e3dbbc], cl; lds ecx, ptr [ecx + 0x77e8243c]; mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x001884fd: pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000f045f: pop es; add dword ptr [ecx], eax; ret; 
0x0013405a: pop es; add dword ptr [ecx], edi; ret; 
0x00198caf: pop es; add dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00196b39: pop es; add dword ptr [edi - 0x18], ebx; mov esp, 0x81ffff0a; ret; 
0x0007cf89: pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x00198eef: pop es; add eax, 0x8b1c035f; jmp ebx; 
0x00198dcf: pop es; add ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x000bbcf4: pop es; add edi, 0x10; call 0x187611; add ecx, 0x10f233; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000ba5f4: pop es; add edi, 0x10; call 0x187611; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008f0f4: pop es; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00092b62: pop es; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x000df44d: pop es; add esp, 0x28; xor eax, eax; pop ebx; ret; 
0x00124211: pop es; add esp, 0x30; pop ebx; pop esi; pop edi; ret; 
0x0012f61c: pop es; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x0003dbe1: pop es; add esp, 0x9c; ret; 
0x000a0df8: pop es; add esp, 8; pop ebx; ret; 
0x00091ebd: pop es; and byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001693c9: pop es; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016bcf9: pop es; call 0x153e50; add esp, 0x1c; ret; 
0x0016bd18: pop es; call 0x153f30; add esp, 0x1c; ret; 
0x001998bb: pop es; cli; jmp dword ptr [esi - 0x70]; 
0x000b90af: pop es; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x00182735: pop es; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x000b4b45: pop es; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00025e05: pop es; in eax, 0; add byte ptr [ebp - 0x68ffb7f], cl; call dword ptr [eax - 0x73]; 
0x001a8522: pop es; jb 0x1a8590; lea eax, [edi + 6]; pop edi; ret; 
0x001a9542: pop es; jb 0x1a95b0; lea eax, [eax + 6]; pop edi; ret; 
0x001a8be2: pop es; jl 0x1a8c50; lea eax, [ecx + 7]; ret; 
0x00184a30: pop es; jmp dword ptr [ecx]; 
0x001a7f92: pop es; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x000b3ce1: pop es; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40e1: pop es; jne 0xb3f81; pop ebx; ret; 
0x000b8562: pop es; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b9cbf: pop es; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb302: pop es; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000bb927: pop es; lea eax, [edi + 0x10]; pop edi; pop esi; pop ebx; ret; 
0x000bb88d: pop es; lea eax, [edi + 0xb]; pop edi; pop esi; pop ebx; ret; 
0x000bb911: pop es; lea eax, [edi + 0xf]; pop edi; pop esi; pop ebx; ret; 
0x000bb837: pop es; lea eax, [edi + 8]; pop edi; pop esi; pop ebx; ret; 
0x001aa128: pop es; lea eax, [edi - 0x10]; pop edi; ret; 
0x000b62bd: pop es; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63fd: pop es; lea eax, [edx + 0xa]; ret; 
0x000b8fd4: pop es; lea eax, [edx + 0xe]; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b6321: pop es; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b6481: pop es; lea eax, [edx + 0xe]; ret; 
0x000b3cde: pop es; lea ecx, [edx + 7]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40de: pop es; lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x0019948f: pop es; maxps xmm0, xmmword ptr [ebx]; sbb al, 0x8b; jmp ebx; 
0x000c3777: pop es; mov byte ptr [ecx + eax], 0; dec ecx; jne 0xc3778; pop esi; ret; 
0x000ba25a: pop es; mov byte ptr [edi + 0x10], cl; pop edi; pop esi; pop ebx; ret; 
0x000ba16a: pop es; mov byte ptr [edi + 8], dl; pop edi; pop esi; pop ebx; ret; 
0x000ba2ba: pop es; mov dword ptr [edi + 0x10], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba29a: pop es; mov dword ptr [edi + 0xf], ecx; pop edi; pop esi; pop ebx; ret; 
0x000ba1aa: pop es; mov dword ptr [edi + 7], edx; pop edi; pop esi; pop ebx; ret; 
0x000ba1ca: pop es; mov dword ptr [edi + 8], edx; pop edi; pop esi; pop ebx; ret; 
0x0009ae3a: pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000bab2c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000bac8c: pop es; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000c069d: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop ebx; pop edi; ret; 
0x000b94ec: pop es; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b964c: pop es; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x00060622: pop es; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x000a9ca9: pop es; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000a9c79: pop es; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000c12f0: pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde7d: pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0009ff80: pop es; mov eax, ecx; pop ebx; ret; 
0x000c06a0: pop es; mov eax, edi; pop ebx; pop edi; ret; 
0x000b1edd: pop es; mov eax, edi; pop edi; ret; 
0x000b4b04: pop es; mov eax, edx; pop ebx; ret; 
0x000b201d: pop es; mov eax, edx; ret; 
0x00090707: pop es; mov ebx, dword ptr [edi + 4]; mov ecx, dword ptr [edi + 8]; mov edx, dword ptr [edi + 0xc]; call dword ptr gs:[0x10]; 
0x001a0bcd: pop es; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000ba27b: pop es; mov word ptr [edi + 0x10], cx; pop edi; pop esi; pop ebx; ret; 
0x000ba18b: pop es; mov word ptr [edi + 8], dx; pop edi; pop esi; pop ebx; ret; 
0x000ba43c: pop es; movdqu xmmword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3dc: pop es; movdqu xmmword ptr [edi + 0xd], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba3fc: pop es; movdqu xmmword ptr [edi + 0xe], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba41c: pop es; movdqu xmmword ptr [edi + 0xf], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000bde76: pop es; movlpd qword ptr [eax], xmm0; mov dword ptr [eax + 7], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdef8: pop es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 7], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba33c: pop es; movlpd qword ptr [edi + 0x10], xmm2; pop edi; pop esi; pop ebx; ret; 
0x000ba2fc: pop es; movlpd qword ptr [edi + 0xe], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba31c: pop es; movlpd qword ptr [edi + 0xf], xmm3; pop edi; pop esi; pop ebx; ret; 
0x000ba543: pop es; movlpd qword ptr [edi + 5], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba1ec: pop es; movlpd qword ptr [edi + 5], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba553: pop es; movlpd qword ptr [edi + 6], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000ba20c: pop es; movlpd qword ptr [edi + 6], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000ba22c: pop es; movlpd qword ptr [edi + 7], xmm1; pop edi; pop esi; pop ebx; ret; 
0x000babac: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; pop edi; ret; 
0x000bad0c: pop es; movlpd qword ptr [edx + 7], xmm0; lea eax, [edx + 0xe]; ret; 
0x000c071f: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b956c: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edi; pop edi; ret; 
0x000b96cc: pop es; movlpd qword ptr [edx + 7], xmm0; mov eax, edx; ret; 
0x000b62b6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; pop edi; ret; 
0x000b63f6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; lea eax, [edx + 0xa]; ret; 
0x000b1ed6: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edi; pop edi; ret; 
0x000b2016: pop es; movlpd qword ptr [edx], xmm0; mov dword ptr [edx + 7], eax; mov eax, edx; ret; 
0x000b6318: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; pop edi; ret; 
0x000b6478: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; lea eax, [edx + 0xe]; ret; 
0x000b1f38: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edi; pop edi; ret; 
0x000b4afb: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; pop ebx; ret; 
0x000b2098: pop es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 7], xmm1; mov eax, edx; ret; 
0x0017aa27: pop es; movzx eax, al; add esp, 0x1c; ret; 
0x0011ec63: pop es; movzx eax, al; add esp, 0x4c; ret; 
0x0014c87b: pop es; movzx eax, ax; add esp, 0x2c; ret; 
0x0019e520: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; pop ebp; ret; 
0x0019cd73: pop es; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x001992df: pop es; or al, 0x5f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197a59: pop es; or al, 0x5f; call 0x1875fd; add ebx, 0x4207f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195989: pop es; or al, 0x5f; call 0x1875fd; add ebx, 0x43ecf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193989: pop es; or al, 0x5f; call 0x1875fd; add ebx, 0x45c4f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001991bf: pop es; or bl, byte ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x0019909f: pop es; or byte ptr [edi + 3], bl; sbb al, 0x8b; jmp ebx; 
0x000c3825: pop es; or dword ptr [eax + 0x3cd0], 1; xor eax, eax; pop ebx; ret; 
0x0019912f: pop es; or dword ptr [edi + 3], ebx; sbb al, 0x8b; jmp ebx; 
0x00197639: pop es; or dword ptr [edi - 0x18], ebx; mov esp, 0x81fffeff; ret; 
0x0019936f: pop es; or eax, 0x8b1c035f; jmp ebx; 
0x0019924f: pop es; or ebx, dword ptr [edi + 3]; sbb al, 0x8b; jmp ebx; 
0x00195839: pop es; or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff1d; ret; 
0x00193839: pop es; or ebx, dword ptr [edi - 0x18]; mov esp, 0x81ffff3d; ret; 
0x00095d05: pop es; out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x00153b30: pop es; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00053f49: pop es; pop eax; pop ebx; pop esi; pop edi; ret; 
0x00130898: pop es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00089598: pop es; pop ebx; pop esi; pop edi; ret; 
0x000ac63f: pop es; pop ebx; pop esi; ret; 
0x000b3ea6: pop es; pop ebx; ret; 
0x00189ef8: pop es; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00199010: pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019737a: pop es; pop edi; call 0x1875fd; add ebx, 0x4275f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001952fa: pop es; pop edi; call 0x1875fd; add ebx, 0x4455f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001932fa: pop es; pop edi; call 0x1875fd; add ebx, 0x462df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019150f: pop es; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000ba157: pop es; pop edi; pop esi; pop ebx; ret; 
0x000b616a: pop es; pop edi; ret; 
0x0019900f: pop es; pop es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019974a: pop es; pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x001993ff: pop es; push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001263b0: pop es; push ebx; stc; call dword ptr [edx + 0x52]; 
0x00198f7f: pop es; push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a8e2b: pop es; ret; 
0x0013a18c: pop es; sar eax, 5; add esp, 0xc; ret; 
0x0019e524: pop es; sub eax, ecx; pop ebp; ret; 
0x0019cd77: pop es; sub eax, ecx; ret; 
0x000b858a: pop es; sub ebx, 8; lea ecx, [edx + 8]; jne 0xb83d1; pop ebx; ret; 
0x0016c7aa: pop es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x001781a5: pop es; xor al, 0xfc; call dword ptr [eax - 0x73]; 
0x000ad8bd: pop es; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009881c: pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015978a: pop es; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x00098399: pop es; xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x0009a948: pop es; xor eax, eax; ret; 
0x000d32ae: pop esi; adc dh, dh; dec dword ptr [ebp - 0x661cf7d]; call dword ptr [eax - 0x73]; 
0x001936f4: pop esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00122a8f: pop esi; add al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x00111148: pop esi; add al, 0x89; ret 0x7c8b; 
0x0002a11e: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002b989: pop esi; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0002888a: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6d54579], cl; call dword ptr [eax - 0x73]; 
0x00029bfb: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457a], cl; call dword ptr [eax - 0x73]; 
0x0002ced5: pop esi; add dword ptr [eax], eax; add byte ptr [ebp - 0x6d5457f], cl; call dword ptr [eax - 0x73]; 
0x0008426d: pop esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x00122adb: pop esi; add eax, ecx; adc edx, 0; ret; 
0x000fbfb8: pop esi; and eax, 1; pop edi; pop ebp; neg eax; ret; 
0x00159f7d: pop esi; and edx, 0xf; mov eax, edx; ret; 
0x0016a673: pop esi; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016a773: pop esi; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016a6c7: pop esi; arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x0010e443: pop esi; bnd jmp dword ptr [esi - 0x70]; 
0x000c19f2: pop esi; bsr eax, eax; add eax, edi; sub eax, 0x10; pop edi; ret; 
0x0019b8ec: pop esi; call 0x1875fd; add ebx, 0x3e8ee; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0007d941: pop esi; cli; jmp dword ptr [esi - 0x70]; 
0x00034156: pop esi; cmove ecx, eax; pop edi; pop ebp; mov eax, ecx; ret; 
0x000c6e11: pop esi; cmovg eax, edx; pop edi; ret; 
0x00193d9b: pop esi; cmp bh, bh; inc dword ptr [ecx + 0x45841c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000a181c: pop esi; cmp byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00032e2e: pop esi; cmp dl, 0xff; cmove edx, ecx; mov byte ptr [eax + 0x1201], dl; lea eax, [eax + 0x11cc]; ret; 
0x0011ff7f: pop esi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0007ac75: pop esi; idiv bh; jmp dword ptr [esi - 0x70]; 
0x00197e9b: pop esi; idiv esi; inc dword ptr [ecx + 0x41c41c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0009eb12: pop esi; inc ecx; stc; call dword ptr [eax - 0x18]; 
0x000a23d8: pop esi; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000a24b4: pop esi; inc edx; stc; call dword ptr [eax + 0x56]; 
0x0008327a: pop esi; jmp eax; 
0x000c7a7b: pop esi; lea eax, [eax + edx*4]; pop edi; pop ebp; ret; 
0x001aa0ce: pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x0009d348: pop esi; mov dword ptr [ecx + 0x10], eax; mov dword ptr [edx + 0x3be8], ecx; ret; 
0x0003e24b: pop esi; mov eax, ebp; pop edi; pop ebp; ret; 
0x0008dcb0: pop esi; mov eax, ecx; pop edi; pop ebp; ret; 
0x0007f836: pop esi; mov eax, ecx; pop edi; ret; 
0x000d9da8: pop esi; mov eax, ecx; ret; 
0x000338cb: pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x00103136: pop esi; mov eax, edi; pop edi; ret; 
0x000ac413: pop esi; mov eax, edx; pop edi; pop ebp; ret; 
0x00094eaa: pop esi; mov eax, edx; ret; 
0x0005b65a: pop esi; movzx eax, al; pop edi; ret; 
0x000c6ded: pop esi; neg eax; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0004dce0: pop esi; neg eax; pop edi; pop ebp; xor eax, 0x7fffffff; ret; 
0x00134665: pop esi; neg eax; ret; 
0x00188aa9: pop esi; out dx, eax; jmp dword ptr [ecx]; 
0x001a38ad: pop esi; pop ebp; pop ebx; ret; 
0x001a388e: pop esi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0012a8e3: pop esi; pop ebp; ret; 
0x0012c934: pop esi; pop ebx; jl 0x24f10; ret; 
0x000b9be1: pop esi; pop ebx; ret; 
0x0012c6f5: pop esi; pop ebx; test eax, eax; jl 0x24f10; je 0x12c702; ret; 
0x0019abf2: pop esi; pop edi; call 0x1875fd; add ebx, 0x3f4e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019aae8: pop esi; pop edi; call 0x1875fd; add ebx, 0x3f5f1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a9e1: pop esi; pop edi; call 0x1875fd; add ebx, 0x3f6f8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199bf2: pop esi; pop edi; call 0x1875fd; add ebx, 0x40327; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199ae8: pop esi; pop edi; call 0x1875fd; add ebx, 0x40431; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001999e1: pop esi; pop edi; call 0x1875fd; add ebx, 0x40538; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198c12: pop esi; pop edi; call 0x1875fd; add ebx, 0x41147; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198b08: pop esi; pop edi; call 0x1875fd; add ebx, 0x41251; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198a01: pop esi; pop edi; call 0x1875fd; add ebx, 0x41358; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00114e74: pop esi; pop edi; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0003bef5: pop esi; pop edi; fsubp st(1); ret; 
0x00081851: pop esi; pop edi; jmp eax; 
0x0019974b: pop esi; pop edi; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00125d12: pop esi; pop edi; movzx eax, al; ret; 
0x0018937d: pop esi; pop edi; movzx eax, byte ptr [eax]; ret; 
0x00129e58: pop esi; pop edi; pop ebp; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x00028785: pop esi; pop edi; pop ebp; jmp eax; 
0x000620dd: pop esi; pop edi; pop ebp; mov eax, ecx; ret; 
0x001a52c1: pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001a35c3: pop esi; pop edi; pop ebp; pop ebx; xor eax, eax; ret; 
0x0003aec0: pop esi; pop edi; pop ebp; ret 4; 
0x00023402: pop esi; pop edi; pop ebp; ret; 
0x0019e680: pop esi; pop edi; pop ebx; pop ebp; xor eax, eax; ret; 
0x001a4d5d: pop esi; pop edi; pop ebx; ret; 
0x0013c53d: pop esi; pop edi; ret 4; 
0x000255a7: pop esi; pop edi; ret; 
0x00123945: pop esi; pop edi; stc; call dword ptr [eax + 0x6a]; 
0x00123945: pop esi; pop edi; stc; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x001a3d50: pop esi; pop edi; xor eax, eax; pop ebp; ret; 
0x000c1a11: pop esi; pop edi; xor eax, eax; ret; 
0x000cadbe: pop esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00092df1: pop esi; push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00092da8: pop esi; push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0012602f: pop esi; push ecx; stc; call dword ptr [eax + 0x55]; 
0x000b391e: pop esi; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00040aee: pop esi; ret 4; 
0x00024b79: pop esi; ret; 
0x0002501c: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x000250a9: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00154bb8: pop esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x000fbf4c: pop esi; sar eax, 1; pop edi; pop ebp; ret; 
0x000fef88: pop esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x00195d9b: pop esi; sbb bh, bh; inc dword ptr [ecx + 0x43ac1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00053822: pop esi; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x001284e6: pop esi; setne al; pop edi; movzx eax, al; ret; 
0x00097739: pop esi; shl eax, 4; pop edi; pop ebp; ret; 
0x0003b37d: pop esi; shr eax, 0x1f; pop edi; ret; 
0x001578e8: pop esi; stc; call dword ptr [eax + 0x55]; 
0x0003ed65: pop esi; stc; call dword ptr [eax - 0x18]; 
0x00153b2a: pop esi; stc; call dword ptr [eax - 0x18]; fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00154525: pop esi; stc; call dword ptr [eax - 0x73]; 
0x000c19ba: pop esi; sub eax, 0x10; pop edi; ret; 
0x0008ab7d: pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x0008ff91: pop esi; sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x001aa0e9: pop esi; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x000c29d2: pop esi; xor eax, eax; pop ebx; ret; 
0x001a52d0: pop esi; xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001a7b51: pop esi; xor eax, eax; pop edi; ret; 
0x00051c26: pop esi; xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x00047cab: pop esp; add al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001938fb: pop esp; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012a9f1: pop esp; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000e908b: pop esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000fb0e2: pop esp; add eax, 0xee80000; lds ecx, ptr [eax]; add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x0010ef6f: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00124292: pop esp; add eax, dword ptr [eax]; add byte ptr [ebx - 0x76f7dbac], cl; add bh, byte ptr [eax + 1]; ret; 
0x001485c3: pop esp; add esp, 0x118; pop ebx; ret; 
0x0011f30c: pop esp; and al, 0x10; call dword ptr gs:[0x10]; 
0x0010bec5: pop esp; and al, 0x10; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x00098504: pop esp; and al, 0x10; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x00129464: pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x001214ad: pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00114e64: pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed24: pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb54: pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7d4: pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e854: pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5f4: pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9b4: pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e814: pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6e4: pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea24: pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d684: pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d34: pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x00127704: pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b24: pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x0012dc81: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x000613a0: pop esp; and al, 0x10; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012142d: pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x0012d474: pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x00186125: pop esp; and al, 0x14; jne 0x186130; pop ebx; ret; 
0x0012d1e7: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000eaf81: pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0013850e: pop esp; and al, 0x18; je 0x138520; add esp, 8; pop ebx; ret; 
0x00129e49: pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0012c6e4: pop esp; and al, 0x18; mov edi, dword ptr [esp + 0x28]; mov eax, 0x78; mov dword ptr [ecx], ebx; int 0x80; 
0x001210c1: pop esp; and al, 0x20; lea edx, [esp + 4]; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x0011e25b: pop esp; and al, 0x20; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012108d: pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0010bfda: pop esp; and al, 0x20; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000a0257: pop esp; and al, 0x20; test ebx, ebx; js 0xa0288; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000dbc8a: pop esp; and al, 0x24; push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x000dee99: pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00129cad: pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c0d: pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c37d: pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c522: pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c472: pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5ea: pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2da: pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0012dd4a: pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0c1: pop esp; and al, 0x30; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x000e7f56: pop esp; and al, 0x40; cmp dword ptr [ecx + 8], 0x3b9ac9ff; ja 0xe8010; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x0010c0cb: pop esp; and al, 0x40; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00121e7f: pop esp; and al, 0x40; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x000e7bfb: pop esp; and al, 0x40; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00130cf1: pop esp; and al, 0x50; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012de5b: pop esp; and al, 0x60; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223f9: pop esp; and al, 0x60; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000df031: pop esp; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012d72a: pop esp; and al, 0x60; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x0012e023: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b1: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df83: pop esp; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000df0a1: pop esp; and al, 0x60; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00120e48: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d82: pop esp; and al, 0x60; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0013e234: pop esp; and al, 0x6c; mov eax, 6; call dword ptr gs:[0x10]; 
0x00121c90: pop esp; and al, 0x70; lea edx, [esp + 0x28]; call dword ptr gs:[0x10]; 
0x00115b0f: pop esp; and al, 0x70; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0004075f: pop esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0008fc98: pop esp; and al, 0xc; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000e90ef: pop esp; and al, 0xc; cmp edx, eax; cmova edx, eax; mov eax, 0xdc; call dword ptr gs:[0x10]; 
0x0011ff6f: pop esp; and al, 0xc; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012d3ae: pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x0012e97f: pop esp; and al, 0xc; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea5f: pop esp; and al, 0xc; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x0012d3e1: pop esp; and al, 0xc; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x00125b6f: pop esp; and al, 0xc; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x0012752f: pop esp; and al, 0xc; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a8f: pop esp; and al, 0xc; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5bf: pop esp; and al, 0xc; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x000712ee: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00070a8e: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x0007243a: pop esp; and al, 0xc; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x0008fcc7: pop esp; and al, 0xc; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0012e767: pop esp; and al, 4; mov eax, 0x125; call dword ptr gs:[0x10]; 
0x0012eaa3: pop esp; and al, 4; mov eax, 0x136; call dword ptr gs:[0x10]; 
0x0012eae7: pop esp; and al, 4; mov eax, 0x142; call dword ptr gs:[0x10]; 
0x0012ced7: pop esp; and al, 4; mov eax, 0x148; call dword ptr gs:[0x10]; 
0x0012e593: pop esp; and al, 4; mov eax, 0x149; call dword ptr gs:[0x10]; 
0x0011f657: pop esp; and al, 4; mov eax, 0x14b; call dword ptr gs:[0x10]; 
0x0012e743: pop esp; and al, 4; mov eax, 0x14c; call dword ptr gs:[0x10]; 
0x0012eb17: pop esp; and al, 4; mov eax, 0x152; call dword ptr gs:[0x10]; 
0x00129e13: pop esp; and al, 4; mov eax, 0x158; call dword ptr gs:[0x10]; 
0x0012eb87: pop esp; and al, 4; mov eax, 0x15a; call dword ptr gs:[0x10]; 
0x0012ebb7: pop esp; and al, 4; mov eax, 0x164; call dword ptr gs:[0x10]; 
0x0012ebe7: pop esp; and al, 4; mov eax, 0x17d; call dword ptr gs:[0x10]; 
0x0012ec13: pop esp; and al, 4; mov eax, 0x17e; call dword ptr gs:[0x10]; 
0x0012e657: pop esp; and al, 4; mov eax, 0x1ae; call dword ptr gs:[0x10]; 
0x0012e8e7: pop esp; and al, 4; mov eax, 0x1b2; call dword ptr gs:[0x10]; 
0x000ea513: pop esp; and al, 4; mov eax, 0x1b; call dword ptr gs:[0x10]; 
0x0012e9e7: pop esp; and al, 4; mov eax, 0x1c0; call dword ptr gs:[0x10]; 
0x0003ccc7: pop esp; and al, 4; mov eax, 0x25; call dword ptr gs:[0x10]; 
0x00114793: pop esp; and al, 4; mov eax, 0x29; call dword ptr gs:[0x10]; 
0x001229a3: pop esp; and al, 4; mov eax, 0x33; call dword ptr gs:[0x10]; 
0x0010c3f7: pop esp; and al, 4; mov eax, 0x39; call dword ptr gs:[0x10]; 
0x00120b93: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; 
0x00120b93: pop esp; and al, 4; mov eax, 0x3c; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x00122b83: pop esp; and al, 4; mov eax, 0x3d; call dword ptr gs:[0x10]; 
0x00129bb7: pop esp; and al, 4; mov eax, 0x4a; call dword ptr gs:[0x10]; 
0x0012eac3: pop esp; and al, 4; mov eax, 0x56; call dword ptr gs:[0x10]; 
0x00129dc7: pop esp; and al, 4; mov eax, 0x57; call dword ptr gs:[0x10]; 
0x00128717: pop esp; and al, 4; mov eax, 0x5b; call dword ptr gs:[0x10]; 
0x00114c07: pop esp; and al, 4; mov eax, 0x5e; call dword ptr gs:[0x10]; 
0x0012bec3: pop esp; and al, 4; mov eax, 0x6e; call dword ptr gs:[0x10]; 
0x0012bdf3: pop esp; and al, 4; mov eax, 0x6f; call dword ptr gs:[0x10]; 
0x0012e483: pop esp; and al, 4; mov eax, 0x71; call dword ptr gs:[0x10]; 
0x00129da3: pop esp; and al, 4; mov eax, 0x73; call dword ptr gs:[0x10]; 
0x0012ea83: pop esp; and al, 4; mov eax, 0x74; call dword ptr gs:[0x10]; 
0x00129917: pop esp; and al, 4; mov eax, 0x79; call dword ptr gs:[0x10]; 
0x0010e4b3: pop esp; and al, 4; mov eax, 0x7a; call dword ptr gs:[0x10]; 
0x0012e6b3: pop esp; and al, 4; mov eax, 0x82; call dword ptr gs:[0x10]; 
0x000f0ec3: pop esp; and al, 4; mov eax, 0x84; call dword ptr gs:[0x10]; 
0x00114be3: pop esp; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x0012e4a7: pop esp; and al, 4; mov eax, 0x86; call dword ptr gs:[0x10]; 
0x0012d513: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; 
0x0012d513: pop esp; and al, 4; mov eax, 0x88; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x001153a7: pop esp; and al, 4; mov eax, 0x8f; call dword ptr gs:[0x10]; 
0x000f0f73: pop esp; and al, 4; mov eax, 0x93; call dword ptr gs:[0x10]; 
0x00127bb7: pop esp; and al, 4; mov eax, 0x96; call dword ptr gs:[0x10]; 
0x001286c7: pop esp; and al, 4; mov eax, 0x97; call dword ptr gs:[0x10]; 
0x00127be3: pop esp; and al, 4; mov eax, 0x98; call dword ptr gs:[0x10]; 
0x0010c237: pop esp; and al, 4; mov eax, 0x9a; call dword ptr gs:[0x10]; 
0x0010bf27: pop esp; and al, 4; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x0010bf53: pop esp; and al, 4; mov eax, 0x9d; call dword ptr gs:[0x10]; 
0x0010bf73: pop esp; and al, 4; mov eax, 0x9f; call dword ptr gs:[0x10]; 
0x0010bf93: pop esp; and al, 4; mov eax, 0xa0; call dword ptr gs:[0x10]; 
0x0012bee7: pop esp; and al, 4; mov eax, 0xa6; call dword ptr gs:[0x10]; 
0x0012e4d7: pop esp; and al, 4; mov eax, 0xb8; call dword ptr gs:[0x10]; 
0x0012e507: pop esp; and al, 4; mov eax, 0xb9; call dword ptr gs:[0x10]; 
0x0003d277: pop esp; and al, 4; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x001145b3: pop esp; and al, 4; mov eax, 0xc; call dword ptr gs:[0x10]; 
0x000eff17: pop esp; and al, 4; mov eax, 0xcd; call dword ptr gs:[0x10]; 
0x0012db93: pop esp; and al, 4; mov eax, 0xd7; call dword ptr gs:[0x10]; 
0x0012db73: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; 
0x0012db73: pop esp; and al, 4; mov eax, 0xd8; call dword ptr gs:[0x10]; mov ebx, edx; ret; 
0x0012e947: pop esp; and al, 4; mov eax, 0xd9; call dword ptr gs:[0x10]; 
0x00129497: pop esp; and al, 4; mov eax, 0xeb; call dword ptr gs:[0x10]; 
0x001275b7: pop esp; and al, 4; mov eax, 0xec; call dword ptr gs:[0x10]; 
0x00123ae7: pop esp; and al, 4; mov eax, 0xed; call dword ptr gs:[0x10]; 
0x0006134a: pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x000fba8a: pop esp; and al, 8; call dword ptr gs:[0x10]; neg eax; pop ebx; ret; 
0x0012ec4a: pop esp; and al, 8; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e71a: pop esp; and al, 8; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f23a: pop esp; and al, 8; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c0a: pop esp; and al, 8; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206fa: pop esp; and al, 8; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x001144d9: pop esp; and al, 8; mov eax, 0x13e; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011480a: pop esp; and al, 8; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8ba: pop esp; and al, 8; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e62a: pop esp; and al, 8; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e68a: pop esp; and al, 8; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x0011467a: pop esp; and al, 8; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e91a: pop esp; and al, 8; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228ea: pop esp; and al, 8; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be9a: pop esp; and al, 8; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e79a: pop esp; and al, 8; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e45a: pop esp; and al, 8; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x0012866a: pop esp; and al, 8; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e53a: pop esp; and al, 8; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e56a: pop esp; and al, 8; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c26a: pop esp; and al, 8; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e88a: pop esp; and al, 8; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf3a: pop esp; and al, 8; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec9a: pop esp; and al, 8; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e2a: pop esp; and al, 8; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f4a: pop esp; and al, 8; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f1a: pop esp; and al, 8; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x0011462a: pop esp; and al, 8; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x0012793a: pop esp; and al, 8; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x0012785a: pop esp; and al, 8; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x0012755a: pop esp; and al, 8; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x0012758a: pop esp; and al, 8; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123aba: pop esp; and al, 8; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x0003cd06: pop esp; and al, 8; mov ecx, 8; call dword ptr gs:[0x10]; 
0x0011f616: pop esp; and al, 8; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0019559d: pop esp; and bh, bh; inc dword ptr [ecx + 0x442bfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c20b3: pop esp; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0016dbfb: pop esp; call eax; 
0x00029de4: pop esp; call edi; 
0x0012604a: pop esp; dec ebx; stc; call dword ptr [eax + 0x55]; 
0x000df32b: pop esp; fucompi st(1); call dword ptr [eax - 0x73]; 
0x000df295: pop esp; fucompi st(1); call dword ptr [ecx + 0x52]; 
0x00129fe4: pop esp; idiv bh; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000cd324: pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0016f562: pop esp; in al, dx; call dword ptr [eax - 0x73]; 
0x0003de14: pop esp; jp 0x3de0f; jmp dword ptr [ebp - 1]; 
0x0003de64: pop esp; jp 0x3de5f; jmp dword ptr [ebp - 1]; 
0x0015ae53: pop esp; leave; int1; call dword ptr [eax + 0x6a]; 
0x00177231: pop esp; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x001a96e9: pop esp; mov eax, 0x10; pop edi; ret; 
0x0002f407: pop esp; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002c9b3: pop esp; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00092def: pop esp; mov ebx, dword ptr [esi + 0x68]; mov ecx, dword ptr [esi + 0x224]; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0009e6f3: pop esp; mov ecx, edi; call dword ptr [eax - 0x73]; 
0x00172a50: pop esp; mov edi, esp; dec dword ptr [ebp - 0x69b757d]; call dword ptr [edi + 0x6a]; 
0x00115b09: pop esp; mov esi, dword ptr [esp + 0x74]; mov ebx, dword ptr [esp + 0x70]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x00191ba7: pop esp; or ah, bh; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x001440b9: pop esp; or al, 0; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00191bab: pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x000ef5b4: pop esp; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00196c9d: pop esp; or edi, edi; inc dword ptr [ecx + 0x42e3fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000df249: pop esp; pop dword ptr [edx]; jbe 0xdf258; mov eax, edx; ret; 
0x00028783: pop esp; pop ebx; pop esi; pop edi; pop ebp; jmp eax; 
0x0003b2a8: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret 4; 
0x00029ebd: pop esp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00091ebc: pop esp; pop es; and byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x000285a0: pop esp; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c9af: pop esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002914c: pop esp; push dword ptr [esp + 0x64]; call edi; 
0x00153ba7: pop esp; push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00160239: pop esp; pushal; stc; call dword ptr [eax + 0x55]; 
0x00160c3d: pop esp; pushal; stc; call dword ptr [eax - 1]; 
0x001602e5: pop esp; pushal; stc; call dword ptr [edx + 0x50]; 
0x0014f68b: pop esp; ret 0x8904; 
0x000c552c: pop esp; ret 0xffe9; 
0x0014b2a5: pop esp; ret; 
0x00139993: pop esp; retf 0xffef; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0003d7a5: pop esp; sahf; adc al, 0; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x000da073: pop esp; sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014a58e: pop esp; stc; call dword ptr [eax - 0x18]; 
0x0014ee4a: pop esp; stc; call dword ptr [eax - 0x73]; 
0x00173430: pop esp; std; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00034ba5: pop esp; sub dl, byte ptr [0x826b0500]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0010e56f: pop esp; sub edx, dword ptr gs:[0x14]; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x0009f955: pop esp; sub esi, esp; call dword ptr [eax - 0x73]; 
0x00047821: pop esp; xchg dword ptr [ebx + eax*4], eax; ret; 
0x000707b4: pop esp; xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x00095f1a: pop gs; add byte ptr [eax], al; add byte ptr [eax + 0xf], al; test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x00088fef: pop ss; aas; stc; call dword ptr [eax - 0x75]; 
0x000bbd1b: pop ss; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0005e01a: pop ss; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ecx + esi - 7], cl; call dword ptr [eax - 0x18]; 
0x0004d398: pop ss; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x5152; 
0x000c3c1d: pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x0009aa51: pop ss; add esp, 0x24; pop ebx; pop esi; ret; 
0x00086197: pop ss; add esp, 0x824; pop ebx; pop esi; ret; 
0x00189e75: pop ss; and al, 0xf8; jmp dword ptr [esi - 0x70]; 
0x000c1a58: pop ss; bsf ecx, ecx; sub edx, ecx; jbe 0xc1a90; add eax, ecx; ret; 
0x001988db: pop ss; cli; jmp dword ptr [esi - 0x70]; 
0x0003f5fa: pop ss; cmp edx, 1; jg 0x3f6c0; call eax; 
0x0013fd07: pop ss; inc dword ptr [ebx - 0x2776d73c]; pop ebx; ret; 
0x000b9f17: pop ss; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bba97: pop ss; lea eax, [edi + 0x1b]; pop edi; pop esi; pop ebx; ret; 
0x000bb783: pop ss; lea eax, [edi + 1]; pop edi; pop esi; pop ebx; ret; 
0x000bb795: pop ss; lea eax, [edi + 2]; pop edi; pop esi; pop ebx; ret; 
0x000bb7c3: pop ss; lea eax, [edi + 4]; pop edi; pop esi; pop ebx; ret; 
0x001aa118: pop ss; lea eax, [edi - 0x10]; pop edi; ret; 
0x000ba4c1: pop ss; mov byte ptr [edi + 4], dl; pop edi; pop esi; pop ebx; ret; 
0x000d9ef8: pop ss; mov cl, dl; and cl, 0xf; je 0xd9f20; ret; 
0x0018ff95: pop ss; mov dh, 0xfa; jmp dword ptr [esi - 0x70]; 
0x00180395: pop ss; mov dl, 0xfb; jmp dword ptr [esi - 0x70]; 
0x00188df8: pop ss; mov dword ptr [ebx + 0x68], 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0005ad4c: pop ss; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x0008e138: pop ss; mov dword ptr [esp + 0x14], ecx; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x0017558a: pop ss; mov eax, dword ptr [esi]; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x000c151a: pop ss; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00177a80: pop ss; mov eax, dword ptr [esp + 0xc]; sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x000be077: pop ss; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000336ce: pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x000ba4d1: pop ss; mov word ptr [edi + 4], dx; pop edi; pop esi; pop ebx; ret; 
0x001514f5: pop ss; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0003d6e5: pop ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ea248: pop ss; pop ebx; pop esi; pop edi; ret; 
0x000ba0e3: pop ss; pop edi; pop esi; pop ebx; ret; 
0x001a3fb9: pop ss; ret 0x2c73; 
0x001a497a: pop ss; ret 0x3273; 
0x001a3fa4: pop ss; ret 0x3e73; 
0x001a4960: pop ss; ret 0x4c73; 
0x001a3f8f: pop ss; ret 0x5073; 
0x001a3f7a: pop ss; ret 0x6273; 
0x001a4946: pop ss; ret 0x6673; 
0x001a3915: pop ss; ret 0x830f; 
0x001519f5: pop ss; sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x0007c5c4: pop ss; sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000f1a3e: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8c7e: pop ss; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x001a9eb8: pop ss; test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x0005ad48: pop ss; test eax, eax; jne 0x5ad64; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x000fe2b5: pop ss; xor edi, ecx; call dword ptr [edx + 0x52]; 
0x00198901: popal; adc al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0004a44b: popal; adc dword ptr [edi], ecx; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x00193454: popal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000b816b: popal; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00146fab: popal; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0004a1dc: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x4a1df; call dword ptr [eax - 0x18]; 
0x0004d531: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x4d534; call dword ptr [eax - 0x18]; 
0x00051216: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x51219; call dword ptr [eax - 0x18]; 
0x00059953: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0x59956; call dword ptr [eax - 0x18]; 
0x000d11cd: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0xd11d0; call dword ptr [eax - 0x18]; 
0x000d8abf: popal; add eax, 0x8d500000; xchg dword ptr [eax], ebx; js 0xd8ac2; call dword ptr [eax - 0x18]; 
0x0007d218: popal; cli; jmp dword ptr [esi - 0x70]; 
0x000b4793: popal; jmp dword ptr [esi + 0xf]; 
0x0010792b: popal; mov eax, 0xc483fff1; adc cl, ch; ret 0xfffb; 
0x001631c4: popal; popal; stc; call dword ptr [eax - 0x18]; 
0x00176dcb: popal; ret 0xffea; 
0x000fb5be: popal; ret; 
0x00162f93: popal; stc; call dword ptr [eax + 0x6a]; 
0x001623c3: popal; stc; call dword ptr [eax - 0x18]; 
0x00162564: popal; stc; call dword ptr [eax - 0x73]; 
0x00163d85: popal; stc; call dword ptr [ecx - 1]; 
0x000f4976: popal; sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001708d8: popfd; add byte ptr [eax], al; add byte ptr [ecx - 0x7cf3dbbc], cl; in al, dx; or byte ptr [ebp - 0x69c617d], cl; call dword ptr [eax - 1]; 
0x00048bcc: popfd; das; stc; call dword ptr [eax + 0x56]; 
0x00057871: popfd; das; stc; call dword ptr [eax + 0x57]; 
0x0004487a: popfd; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00149349: popfd; jge 0x1493a7; stc; call dword ptr [ebx - 0x18]; 
0x0014931d: popfd; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x000826cf: popfd; ljmp 0x2674:0x8d2effff; add byte ptr [eax - 1], bh; ret; 
0x000d669f: popfd; mov al, byte ptr [0x89ffffc9]; ret 0x8d89; 
0x00149375: popfd; mov word ptr [ebx - 7], ds; call dword ptr [ebx - 0x18]; 
0x00149399: popfd; movsb byte ptr es:[edi], byte ptr [esi]; pop ebx; stc; call dword ptr [ebx - 0x18]; 
0x00077f4b: popfd; out 0xff, al; call dword ptr [ecx + 0x51]; 
0x0013a8c9: popfd; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00163d84: popfd; popal; stc; call dword ptr [ecx - 1]; 
0x00059669: popfd; ror cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000738bf: popfd; sar dl, 0xff; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x000c718b: popfd; stc; call dword ptr [eax - 0x18]; 
0x000c7108: popfd; stc; call dword ptr [eax - 0x73]; 
0x00172208: por mm7, mm7; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x000bdf66: psllq mm1, qword ptr [edi]; jg 0xbdf6b; mov dword ptr [eax + 0xf], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfe8: psllq mm1, qword ptr [edi]; jg 0xbdfed; movlpd qword ptr [eax + 0xf], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0e8: psllq mm1, qword ptr [edi]; jg 0xbe0ed; movdqu xmmword ptr [eax + 0xf], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001aa881: punpckhwd mm0, mm0; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x0015b58a: push -0x11; dec dword ptr [ecx - 0x76d7dbbc]; ret; 
0x0016ed42: push -0x38; cld; jmp dword ptr [esi - 0x70]; 
0x0015f042: push -0x3b; std; jmp dword ptr [esi - 0x70]; 
0x00059ca2: push -0x5a; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x0011ec84: push -0x64; call 0x114c30; add esp, 0x1c; ret; 
0x0011f140: push -0x64; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f164: push -0x64; call 0x115710; add esp, 0x1c; ret; 
0x0012e29c: push -0x64; call 0x11f2e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f2c7: push -0x64; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f390: push -0x64; call 0x8f110; add esp, 0x2c; ret; 
0x00126b32: push -0xa; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x000bc0b4: push -0xa; ret 0x7520; 
0x000bc0b9: push -0xa; ret 0x7540; 
0x0010e4cc: push -0xf; inc ebx; pop ecx; mov eax, 0xbe; int 0x80; 
0x0010e523: push -1; call 0x10e630; add esp, 0x1c; ret; 
0x0010e4fd: push -1; call 0x10e8a0; add esp, 0x1c; ret; 
0x00082ced: push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008988d: push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x000614f5: push -1; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x001791c8: push -1; push ebp; push esi; call edi; 
0x0007cbb1: push -6; jmp dword ptr [esi - 0x70]; 
0x0002c5a2: push -7; call dword ptr [eax + 0x68]; 
0x0002b1d7: push -7; call dword ptr [eax - 0x73]; 
0x0012e3b1: push 0; add byte ptr [eax], al; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0010c429: push 0; call 0x10c3f0; add esp, 0x1c; ret; 
0x0012bf1b: push 0; call 0x12c160; add esp, 0x1c; ret; 
0x00167408: push 0; call 0x153e50; add esp, 0x1c; ret; 
0x00167427: push 0; call 0x153f30; add esp, 0x1c; ret; 
0x0003523d: push 0; call 0x351e0; add esp, 0x1c; ret; 
0x00036845: push 0; call 0x367d0; add esp, 0x2c; ret; 
0x0003d567: push 0; call 0x3ce00; add esp, 0x1c; ret; 
0x0017401b: push 0; call 0x79f50; add esp, 0x18; pop ebx; ret; 
0x000fba63: push 0; call 0x8f110; add esp, 0x2c; ret; 
0x000907df: push 0; call 0x8fd70; add esp, 0x1c; ret; 
0x000c425a: push 0; call 0xc47a0; add esp, 0x1c; ret; 
0x000e7adf: push 0; call 0xe7bd0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00138ba8: push 0; call eax; 
0x0003ddd1: push 0; lea eax, [eax + 0x138c]; push eax; call 0x98dd0; add esp, 0x1c; ret; 
0x000c5232: push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x0010c427: push 0; push 0; call 0x10c3f0; add esp, 0x1c; ret; 
0x000fba61: push 0; push 0; call 0x8f110; add esp, 0x2c; ret; 
0x000c5230: push 0; push 0; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000fba5f: push 0; push 0; push 0; call 0x8f110; add esp, 0x2c; ret; 
0x00025d6e: push 0; push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x00127a99: push 0; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00123a62: push 0; push 0; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00025d70: push 0; push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007bdde: push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x000894b3: push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x00188eed: push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00088e28: push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0008a336: push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008cf2c: push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00083e86: push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00083c3d: push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x00138fd2: push 0; push 0x1000001; call eax; 
0x00139170: push 0; push 0x1000002; call edx; 
0x001389df: push 0; push 0x1000003; call eax; 
0x001390bc: push 0; push 0x1000004; call eax; 
0x00138c15: push 0; push 0x1000005; call edx; 
0x00138edb: push 0; push 0x1000006; call ecx; 
0x00138c85: push 0; push 0x1000007; call eax; 
0x001351ef: push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00134fc9: push 0; push 0x2000004; call eax; 
0x0009b887: push 0; push 1; push eax; call 0x8f990; add esp, 0x2c; ret; 
0x0003cd52: push 0; push 8; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x000846ab: push 0; push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x0015281f: push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x0010e4f7: push 0; push dword ptr [esp + 0x18]; push -1; call 0x10e8a0; add esp, 0x1c; ret; 
0x0012e1d7: push 0; push dword ptr [esp + 0x1c]; call 0x12e1f0; add esp, 0x1c; ret; 
0x001766b5: push 0; push dword ptr [esp + 0x1c]; call 0x176520; add esp, 0x10; add esp, 0xc; ret; 
0x0003ebf7: push 0; push dword ptr [esp + 0x1c]; call 0x3e360; add esp, 0x1c; ret; 
0x00187737: push 0; push dword ptr [esp + 0x1c]; call 0x3ee50; add esp, 0x1c; ret; 
0x0003e267: push 0; push dword ptr [esp + 0x1c]; call 0x47110; add esp, 0x1c; ret; 
0x0003e289: push 0; push dword ptr [esp + 0x1c]; call 0x4d950; add esp, 0x1c; ret; 
0x0003e2c9: push 0; push dword ptr [esp + 0x1c]; call 0x51680; add esp, 0x1c; ret; 
0x0012799d: push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00085d8b: push 0; push dword ptr [esp + 0x1c]; call 0x7ec60; add esp, 0x1c; ret; 
0x000a8cd7: push 0; push dword ptr [esp + 0x1c]; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x0003d997: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d920; add esp, 0x1c; ret; 
0x00047131: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004a731: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e0b1: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0007f4c7: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x000c7b41: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x000cdb9b: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb520; add esp, 0x1c; ret; 
0x000d14eb: push 0; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x00123a64: push 0; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x000351ef: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x00094eeb: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x000c7095: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4c05: push 0; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0018989a: push 0; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4f95: push 0; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0011e100: push 0; push eax; call 0x120d30; add esp, 0x10; add esp, 0xc; ret; 
0x0009762d: push 0; push eax; call 0x96c80; add esp, 0x18; pop ebx; ret; 
0x00025d72: push 0; push eax; push dword ptr [ebx + 4]; call edi; 
0x0007bde0: push 0; push ebp; call dword ptr [esi + 0x40]; 
0x0007e933: push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016e880: push 0; push ebx; call dword ptr [eax + 0x14]; 
0x000894b5: push 0; push ebx; call dword ptr [eax + 0x24]; 
0x00188eef: push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00088e2a: push 0; push ebx; call dword ptr [esi + 0x40]; 
0x0012aad3: push 0; push ebx; call esi; 
0x00029142: push 0; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002970c: push 0; push ebx; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x0008e152: push 0; push ecx; push edx; call 0x1827a0; add esp, 0x1c; ret; 
0x00178341: push 0; push edi; call dword ptr [eax + 0x14]; 
0x001736b9: push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x000c4e73: push 0; push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0015242f: push 0; push edi; push ebx; call edx; 
0x0008a4f0: push 0; push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0003eff8: push 0; push edx; call eax; 
0x0016d14f: push 0; push edx; push 4; push ebx; call dword ptr [eax]; 
0x00089fd8: push 0; push edx; push eax; mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x000838b1: push 0; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0016c7fc: push 0; push esi; call dword ptr [eax + 0x14]; 
0x0008a338: push 0; push esi; call dword ptr [eax + 0x40]; 
0x0008cf2e: push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x00083e88: push 0; push esi; call dword ptr [ebx + 0x40]; 
0x0007b92f: push 0; push esi; call dword ptr [ebx + 8]; 
0x00083c3f: push 0; push esi; call dword ptr [edi + 0x40]; 
0x00028ac0: push 0; push esi; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x00138fd4: push 0x1000001; call eax; 
0x00139172: push 0x1000002; call edx; 
0x001389e1: push 0x1000003; call eax; 
0x001390be: push 0x1000004; call eax; 
0x00138c17: push 0x1000005; call edx; 
0x00138edd: push 0x1000006; call ecx; 
0x00138c87: push 0x1000007; call eax; 
0x00127de3: push 0x1018; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0010f720: push 0x107aae8; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x0007d9e3: push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0002a48e: push 0x1a44b60f; add al, 0x88; inc esp; sbb eax, 0x83028b00; ret; 
0x0010decb: push 0x1fff8fc; fdivr dword ptr [esi]; jmp eax; 
0x000f36b6: push 0x1fffffb; rol byte ptr [ecx], 1; ret; 
0x00134d81: push 0x2000001; call dword ptr [ebp + 0x14]; 
0x001351f1: push 0x2000002; call dword ptr [ebp + 0x14]; 
0x00135d16: push 0x2000003; call dword ptr [ebx + 0x14]; 
0x00134fcb: push 0x2000004; call eax; 
0x00137077: push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00135aea: push 0x2000006; call dword ptr [ebx + 0x14]; 
0x0016e18f: push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x00092df2: push 0x2248e8b; add byte ptr [eax], al; lea edx, [esi + 0x220]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x00178b67: push 0x2260; push 0x2260; push dword ptr [esp + 0x1c]; call 0x1788a0; add esp, 0x1c; ret; 
0x00178b6c: push 0x2260; push dword ptr [esp + 0x1c]; call 0x1788a0; add esp, 0x1c; ret; 
0x00186e18: push 0x24448909; and al, 0x89; ret; 
0x00095045: push 0x24448b52; adc byte ptr [ebp - 0x1a7f1380], cl; call dword ptr [eax - 0x73]; 
0x000e09b7: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e0a4e: push 0x2474ff50; sub byte ptr [ebx - 0x72dbdbbc], cl; sub byte ptr [ebx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x00183d6b: push 0x28; push edi; call eax; 
0x001958fa: push 0x300043f; sbb al, 0x8b; jmp ebx; 
0x00192e7a: push 0x3000467; sbb al, 0x8b; jmp ebx; 
0x0012f411: push 0x30244489; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001880cd: push 0x30; stc; call dword ptr [eax - 0x73]; 
0x00099a73: push 0x39000000; ret 0x6574; 
0x00099317: push 0x39000000; ret 0x6974; 
0x0009898a: push 0x39000000; ret 0x7e74; 
0x00098701: push 0x39000000; ret 0x840f; 
0x00097e36: push 0x39000000; ret 0x850f; 
0x0006c21e: push 0x39fffffa; ret 0x840f; 
0x000a51b2: push 0x3c; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0013b25e: push 0x3d838d50; inc eax; stc; call dword ptr [eax - 0x18]; 
0x001600e3: push 0x400; call 0x23198; mov dword ptr [ebx + 0xa280], eax; add esp, 0x18; pop ebx; ret; 
0x00160cdf: push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x000a9cf7: push 0x440fffe8; ret 0x66c3; 
0x0003c7f8: push 0x448b900c; and al, 8; mov esp, ecx; jmp edx; 
0x001895df: push 0x52016a99; push eax; push esi; call dword ptr [edi + 0x40]; 
0x00121fc1: push 0x5409; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00121feb: push 0x540a; push dword ptr [esp + 0x1c]; call 0x1274c0; add esp, 0x1c; ret; 
0x0002bb70: push 0x5824448b; call eax; 
0x0009fcfe: push 0x5b2cc483; pop esi; pop edi; pop ebp; ret; 
0x0013b3e3: push 0x5b4cc483; pop esi; pop edi; pop ebp; ret; 
0x0014bab2: push 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x000fb5ba: push 0x61759123; ret; 
0x00163295: push 0x61; stc; call dword ptr [eax - 0x18]; 
0x0017efa1: push 0x66; stc; call dword ptr [eax - 0x18]; 
0x0002bb6c: push 0x682474ff; mov eax, dword ptr [esp + 0x58]; call eax; 
0x00154db5: push 0x6f; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00028aca: push 0x702474ff; call ebx; 
0x00029716: push 0x702474ff; call edi; 
0x00127ab9: push 0x8000; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00090d17: push 0x80; push dword ptr [esp + 0x1c]; call 0x90c40; add esp, 0x18; pop ebx; ret; 
0x0009103b: push 0x80; push dword ptr [esp + 0x1c]; call 0x90f80; add esp, 0x1c; ret; 
0x00099f47: push 0x80; push dword ptr [esp + 0x1c]; call 0x99ef0; add esp, 0x18; pop ebx; ret; 
0x000b8565: push 0x80fffffe; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x0013c795: push 0x810004ae; ret 0x67b; 
0x00125b95: push 0x8100061a; ret 0x727b; 
0x0011ff95: push 0x81000676; ret 0xce7b; 
0x00115495: push 0x81000721; ret 0x797b; 
0x000a9295: push 0x81000de3; ret 0x3b7b; 
0x0009f595: push 0x81000e80; ret 0xd87b; 
0x0008f395: push 0x81000f82; ret 0xda7b; 
0x0005ad95: push 0x810012c8; ret 0x207b; 
0x0003f52c: push 0x83000001; in al, dx; or byte ptr [ecx - 1], dl; je 0x3f55b; dec esp; call eax; 
0x0006122e: push 0x8300001a; cli; add dword ptr [edi + 0x31], edi; add esp, 0x18; pop ebx; ret; 
0x0006c2af: push 0x83fffffa; clc; dec dword ptr [ecx - 0x76658a3a]; test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x0007c906: push 0x850fc085; ret 0; 
0x0006b3e5: push 0x88fffffa; or cl, ch; ret 0xffc5; 
0x0008e7be: push 0x89000001; inc ebx; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0006c216: push 0x89fffffa; ret 0x858b; 
0x000e8714: push 0x89fffffc; ret 0xc085; 
0x0013941d: push 0x89ffffff; inc ebp; mov word ptr [ecx - 0x11f73], cs; call dword ptr [ecx - 1]; 
0x0014f686: push 0x8b000001; pop esp; ret 0x8904; 
0x00092da9: push 0x8b04488b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x0012a01a: push 0x8bfffffb; inc ebp; adc byte ptr [ecx - 0x49b7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0017bddd: push 0x8bffffff; inc ebp; sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000302e6: push 0x8dffffff; add dword ptr [eax], 0x73; stc; call dword ptr [eax - 0x73]; 
0x000c52f2: push 0x8dffffff; xchg byte ptr [eax - 0x64], bl; stc; call dword ptr [eax - 0x73]; 
0x00142562: push 0x97401f4; add esp, 4; pop ebx; pop esi; ret; 
0x0012c2ae: push 0xa0828b; add byte ptr [eax], al; mov dword ptr [esp + 0x6c], eax; mov eax, 0x157; call dword ptr gs:[0x10]; 
0x0016b778: push 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x0016b797: push 0xa; call 0x153f30; add esp, 0x1c; ret; 
0x0003e287: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x4d950; add esp, 0x1c; ret; 
0x0003e2c7: push 0xa; push 0; push dword ptr [esp + 0x1c]; call 0x51680; add esp, 0x1c; ret; 
0x0005addb: push 0xa; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7d220; add esp, 0x1c; ret; 
0x001302fb: push 0xb; call 0x8f110; add esp, 0x2c; ret; 
0x00095277: push 0xc24548b; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00190daa: push 0xc381ffff; mov bl, 0x83; add al, 0; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x000ec996: push 0xc4830004; adc byte ptr [ecx], bh; ret; 
0x0003c701: push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x00175c2d: push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0017a742: push 0xe; cld; jmp dword ptr [esi - 0x70]; 
0x00041954: push 0xf6000001; ret 0xf03; 
0x001463eb: push 0xf; add byte ptr [ebx - 0x77], dl; ret; 
0x000db498: push 0xfffde2e9; jmp dword ptr [esi - 0x70]; 
0x00050c8a: push 0xffff883; test byte ptr [ebx + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00188d75: push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x00024f5d: push 1; call 0x120f60; add esp, 0x1c; ret; 
0x00167868: push 1; call 0x153e50; add esp, 0x1c; ret; 
0x00167887: push 1; call 0x153f30; add esp, 0x1c; ret; 
0x000894b1: push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018900d: push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0008a334: push 1; push 0; push 0; push esi; call dword ptr [eax + 0x40]; 
0x00083e84: push 1; push 0; push 0; push esi; call dword ptr [ebx + 0x40]; 
0x00085d89: push 1; push 0; push dword ptr [esp + 0x1c]; call 0x7ec60; add esp, 0x1c; ret; 
0x001483d7: push 1; push dword ptr [esp + 0x1c]; call 0x148300; add esp, 0x1c; ret; 
0x00098207: push 1; push dword ptr [esp + 0x1c]; call 0x980c0; add esp, 0x1c; ret; 
0x0007c537: push 1; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x0011b438: push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0003c6c1: push 1; push dword ptr [esp + 8]; call 0x3c640; pop ecx; pop edx; ret; 
0x0009aab9: push 1; push eax; call 0x8f990; add esp, 0x28; pop ebx; ret; 
0x0009b889: push 1; push eax; call 0x8f990; add esp, 0x2c; ret; 
0x0016cf7f: push 1; push ebx; call dword ptr [eax]; 
0x0007a7a9: push 1; push ebx; call eax; 
0x0012aae7: push 1; push ebx; call esi; 
0x000835cb: push 1; push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x001895e1: push 1; push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0007b190: push 1; push esi; call eax; 
0x00167bd8: push 2; call 0x153e50; add esp, 0x1c; ret; 
0x0017ff21: push 2; lea eax, [eax - 0x6996d]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x0007bddc: push 2; push 0; push 0; push ebp; call dword ptr [esi + 0x40]; 
0x00188eeb: push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00088e26: push 2; push 0; push 0; push ebx; call dword ptr [esi + 0x40]; 
0x00083c3b: push 2; push 0; push 0; push esi; call dword ptr [edi + 0x40]; 
0x001412e7: push 2; push dword ptr [esp + 0x1c]; call 0x140620; add esp, 0x1c; ret; 
0x0011b7dd: push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016903f: push 2; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x0016d0a8: push 2; push ebx; call dword ptr [eax]; 
0x0012aafa: push 2; push ebx; call esi; 
0x000e79f2: push 3; add byte ptr [eax], al; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x00168c98: push 3; call 0x153e50; add esp, 0x1c; ret; 
0x00168cb7: push 3; call 0x153f30; add esp, 0x1c; ret; 
0x000894af: push 3; push 1; push 0; push 0; push ebx; call dword ptr [eax + 0x24]; 
0x0018900b: push 3; push 1; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x00188ee9: push 3; push 2; push 0; push 0; push ebx; call dword ptr [edi + 0x24]; 
0x0012ab2b: push 3; push ebx; call edx; 
0x001769c7: push 3; push edi; call dword ptr [eax]; 
0x00192b24: push 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00169ff8: push 4; call 0x153e50; add esp, 0x1c; ret; 
0x0016a017: push 4; call 0x153f30; add esp, 0x1c; ret; 
0x00175b5b: push 4; push eax; call dword ptr [edx + 0x14]; 
0x0016d152: push 4; push ebx; call dword ptr [eax]; 
0x0016a678: push 5; call 0x153e50; add esp, 0x1c; ret; 
0x0016a697: push 5; call 0x153f30; add esp, 0x1c; ret; 
0x00035237: push 5; push dword ptr [esp + 0x18]; push 0; call 0x351e0; add esp, 0x1c; ret; 
0x00035217: push 5; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x0011b6b4: push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0016d5e2: push 5; push ebx; call dword ptr [eax]; 
0x001398be: push 5; ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0016aa18: push 6; call 0x153e50; add esp, 0x1c; ret; 
0x0016aa37: push 6; call 0x153f30; add esp, 0x1c; ret; 
0x00175b6e: push 6; push eax; call dword ptr [edx + 0x14]; 
0x0016bcf8: push 7; call 0x153e50; add esp, 0x1c; ret; 
0x0016bd17: push 7; call 0x153f30; add esp, 0x1c; ret; 
0x0016b098: push 8; call 0x153e50; add esp, 0x1c; ret; 
0x0016b0b7: push 8; call 0x153f30; add esp, 0x1c; ret; 
0x0016de87: push 8; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1799b0; add esp, 0x1c; ret; 
0x0003cd54: push 8; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00172dd3: push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016e241: push 8; push edi; call dword ptr [eax + 0x18]; 
0x0016b4a8: push 9; call 0x153e50; add esp, 0x1c; ret; 
0x0016b4c7: push 9; call 0x153f30; add esp, 0x1c; ret; 
0x000fef32: push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x0004250e: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x438d18c4], al; push es; pop ebx; ret; 
0x001769df: push cs; add byte ptr [eax], al; add byte ptr [ebx + 0x575104c1], al; call dword ptr [eax + 8]; 
0x0013044a: push cs; add byte ptr [eax], al; add byte ptr [ecx + 0x100bafe], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00070dae: push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x0008d681: push cs; add byte ptr [eax], al; ret; 
0x0003a5f2: push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x00059c10: push cs; add byte ptr [ebx - 0x36374b], cl; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x0005147e: push cs; add byte ptr [ebx - 0x72d7db84], cl; xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x0004d618: push cs; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x001503ec: push cs; add byte ptr [ebx - 0x74fbdbac], cl; sub byte ptr [eax - 0x7affffb2], 0xc0; jne 0x150407; ret; 
0x0014e78c: push cs; add byte ptr [ebx - 0x77], dl; ret; 
0x001544c1: push cs; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000a1e34: push cs; add byte ptr [ecx + 0x19afdec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00183a7e: push cs; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + 0x67], eax; stc; call dword ptr [eax - 0x18]; 
0x001762af: push cs; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x00115cc8: push cs; add esp, 0x54; pop ebx; pop esi; ret; 
0x001203a8: push cs; add esp, 0x64; pop ebx; pop esi; ret; 
0x00115ac8: push cs; add esp, 0x74; pop ebx; pop esi; ret; 
0x0005b7a1: push cs; add esp, 0xc; ret; 
0x001146d1: push cs; add esp, 4; pop ebx; pop esi; ret; 
0x0009b9b9: push cs; add esp, 4; xor eax, eax; pop ebx; pop esi; ret; 
0x00148cd9: push cs; add esp, 8; mov eax, edx; pop ebx; ret; 
0x000895d1: push cs; add esp, 8; pop ebx; ret; 
0x0009bd01: push cs; add esp, 8; xor eax, eax; pop ebx; ret; 
0x0007c5dd: push cs; and byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x000c2cc4: push cs; call ecx; 
0x0017a743: push cs; cld; jmp dword ptr [esi - 0x70]; 
0x000b8fd7: push cs; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000d9bbc: push cs; cmp dword ptr [edi], ecx; jne 0xd9d10; pop edi; pop esi; ret; 
0x000a8f79: push cs; cmp eax, 0x430ff839; shr byte ptr [ecx], 1; ret 0xf001; 
0x001242e9: push cs; cmp ecx, edx; jne 0x1242e0; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x00130ddc: push cs; dec ebx; add byte ptr [eax], al; add bl, ch; ret; 
0x000614ce: push cs; dec esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x0012e262: push cs; idiv bh; add esp, 0x2c; ret; 
0x001a8572: push cs; jb 0x1a8590; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a9592: push cs; jb 0x1a95b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a8c32: push cs; jl 0x1a8c50; lea eax, [ecx + 0xe]; ret; 
0x000b3da9: push cs; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41d9: push cs; jne 0xb3f81; pop ebx; ret; 
0x000b86aa: push cs; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000bb42a: push cs; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000fb0e7: push cs; lds ecx, ptr [eax]; add byte ptr [ecx + 0x141d29c7], al; add byte ptr [ecx - 0x156343], cl; jmp dword ptr [ebp - 0x75]; 
0x000bb9e1: push cs; lea eax, [edi + 0x16]; pop edi; pop esi; pop ebx; ret; 
0x000bbaf1: push cs; lea eax, [edi + 0x1e]; pop edi; pop esi; pop ebx; ret; 
0x000b3da6: push cs; lea ecx, [edx + 0xe]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41d6: push cs; lea ecx, [edx + 0xe]; jne 0xb3f81; pop ebx; ret; 
0x000bdde1: push cs; mov byte ptr [eax + 4], dh; mov dword ptr [eax], ecx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1454: push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x001a9421: push cs; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000bdfd1: push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0008f1f9: push cs; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x000bddc2: push cs; mov word ptr [eax], cx; mov byte ptr [eax + 2], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000be0c8: push cs; movdqu xmmword ptr [eax], xmm0; movdqu xmmword ptr [eax + 0xe], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bdfc8: push cs; movdqu xmmword ptr [eax], xmm0; movlpd qword ptr [eax + 0xe], xmm3; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x001a3f41: push cs; movzx eax, byte ptr [eax]; movzx edx, byte ptr [edx]; sub eax, edx; ret; 
0x0008db04: push cs; or byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x0005c6fe: push cs; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x0018e07e: push cs; outsb dx, byte ptr [esi]; clc; inc dword ptr [ebx - 0x73ee33c]; pop ds; ret; 
0x00092161: push cs; pop ebx; pop esi; pop edi; ret; 
0x00199400: push cs; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00197d1a: push cs; pop edi; call 0x1875fd; add ebx, 0x41dbf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00195c2a: push cs; pop edi; call 0x1875fd; add ebx, 0x43c2f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00193c2a: push cs; pop edi; call 0x1875fd; add ebx, 0x459af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba301: push cs; pop edi; pop esi; pop ebx; ret; 
0x000b6324: push cs; pop edi; ret; 
0x00024e34: push cs; push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x000b6484: push cs; ret; 
0x001a3d40: push cs; sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a3a4c: push cs; sub eax, ecx; pop esi; pop edi; ret; 
0x000b86d4: push cs; sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb83d1; pop ebx; ret; 
0x000a7501: push cs; sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0010b982: push cs; test ecx, ecx; je 0x10b9a0; cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x00083896: push cs; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x000986a1: push cs; xor eax, eax; add esp, 0xc; ret; 
0x00197c8b: push ds; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0014c1ff: push ds; add al, byte ptr [eax]; add dh, dh; ret; 
0x000df23f: push ds; add eax, 0xc9c1c189; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x000e9441: push ds; add esp, 0x14; pop ebx; pop esi; ret; 
0x0012f31a: push ds; add esp, 0x18; pop ebx; ret; 
0x000982f0: push ds; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003c111: push ds; and eax, edx; ret; 
0x000c396e: push ds; clc; cmc; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000de49c: push ds; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000ba067: push ds; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb70a: push ds; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x0013dd0a: push ds; lea esi, cs:[esi]; mov eax, 6; call dword ptr gs:[0x10]; 
0x0012baee: push ds; mov al, dh; dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x000d8bee: push ds; mov bh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000d9ff1: push ds; mov ecx, dword ptr [edx + eax*4 + 4]; test ecx, ecx; jne 0xd9fd8; add eax, 1; ret; 
0x0012d5b9: push ds; pop ebx; pop esi; pop edi; ret; 
0x0003b30b: push ds; pop edi; pop ebp; not eax; and eax, edx; ret; 
0x000bbaf4: push ds; pop edi; pop esi; pop ebx; ret; 
0x001582b1: push ds; pop edi; stc; call dword ptr [ecx - 0x17]; 
0x0012d242: push ds; sti; call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00094b52: push ds; sti; call 0x187605; add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008d672: push ds; sti; call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d7a2: push ds; sti; call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d782: push ds; sti; call 0x187605; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x0002f802: push ds; sti; call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00026082: push ds; sti; call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026062: push ds; sti; call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00024f92: push ds; sti; call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x00024f72: push ds; sti; call 0x187605; add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x0009c692: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c692: push ds; sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008c632: push ds; sti; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008be52: push ds; sti; mov eax, 0xffffffff; ret; 
0x0016c482: push ds; sti; mov eax, 1; ret; 
0x0016e712: push ds; sti; mov eax, 2; ret; 
0x0008f1a2: push ds; sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003bbe2: push ds; sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00190622: push ds; sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017a752: push ds; sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x00087ee2: push ds; sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a2: push ds; sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013ced2: push ds; sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x000915b2: push ds; sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00150132: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a792: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008d6a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00187192: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001871b2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187242: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187232: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e492: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121aa2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000871a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087152: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8e02: push ds; sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x001871a2: push ds; sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x0008d6b2: push ds; sti; mov eax, dword ptr [esp + 4]; ret; 
0x0008b462: push ds; sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x00099ee2: push ds; sti; mov eax, dword ptr gs:[8]; ret; 
0x00094f02: push ds; sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0017a392: push ds; sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0013cee2: push ds; sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00098dc2: push ds; sti; nop; xor eax, eax; ret; 
0x0010e452: push ds; sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024cd2: push ds; sti; ret; 
0x000349b2: push ds; sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008c582: push ds; sti; xor eax, eax; ret; 
0x0016e829: push ds; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0012af71: push ds; sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x0003032c: push dword ptr [eax + 0x10e4]; call 0x12b5e0; add esp, 0x1c; ret; 
0x0016c44c: push dword ptr [eax + 0x14]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001733b8: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x001733b8: push dword ptr [eax + 0x190]; push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0008a6c3: push dword ptr [eax + 0x38]; call 0x11f090; add esp, 0x18; pop ebx; ret; 
0x001741eb: push dword ptr [eax + 0x98]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0017abe1: push dword ptr [eax + 0xc]; call 0x85440; add esp, 0x1c; not eax; shr eax, 0x1f; ret; 
0x0009c468: push dword ptr [eax + 4]; call dword ptr [eax]; 
0x000dad81: push dword ptr [eax + 4]; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x0011ae47: push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0017fe8d: push dword ptr [eax + edx - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0014a700: push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000734dd: push dword ptr [eax + esi - 0x7d]; in al, dx; or al, 0x83; ret; 
0x00187731: push dword ptr [eax - 0x18b4]; push 0; push dword ptr [esp + 0x1c]; call 0x3ee50; add esp, 0x1c; ret; 
0x00140c05: push dword ptr [eax - 0x77]; ret; 
0x00090887: push dword ptr [eax]; call 0x23190; add esp, 0x18; xor eax, eax; pop ebx; ret; 
0x0005b402: push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0005b022: push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080ae1: push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x00080b42: push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x00038142: push dword ptr [eax]; call 0xc24c0; add esp, 0x1c; ret; 
0x000dad84: push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x000c4563: push dword ptr [eax]; call edi; 
0x0012b038: push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0003813c: push dword ptr [eax]; mov eax, dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0xc24c0; add esp, 0x1c; ret; 
0x001396fc: push dword ptr [eax]; push dword ptr [esp + 0x1c]; call 0x137e50; add esp, 0x1c; ret; 
0x000eafd7: push dword ptr [eax]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xeb470; add esp, 0x1c; ret; 
0x0007ed91: push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00131727: push dword ptr [ebp + 0x38]; mov eax, 0x92; mov ebx, dword ptr [ebp - 0x500]; mov ecx, dword ptr [ebp - 0x508]; mov edx, 0x40; call dword ptr gs:[0x10]; 
0x00174f34: push dword ptr [ebp + 0x50]; push edi; call dword ptr [eax + 0x14]; 
0x0007ed94: push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x0013a8ff: push dword ptr [ebp + 0xe]; pop ebx; pop esi; pop edi; ret; 
0x0007e456: push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0007ff3c: push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c939: push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x00189371: push dword ptr [ebp + eax + 1]; ret 0x5689; 
0x0007c638: push dword ptr [ebp + edx - 0x75]; inc esp; and al, 8; mov edx, dword ptr [esp + 0xc]; add esp, 0x1c; ret; 
0x00122bc8: push dword ptr [ebp + esi*2 - 0x77]; ret; 
0x00139431: push dword ptr [ebp - 0x11c]; call edx; 
0x00138ba2: push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x0007eb58: push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x000846ad: push dword ptr [ebp - 0x2c]; push edx; push ebx; push esi; call eax; 
0x00036b3e: push dword ptr [ebp - 0x31]; pop ebx; pop esi; pop edi; ret; 
0x000243a4: push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0012b03d: push dword ptr [ebp - 0x38]; call eax; 
0x00137074: push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x000f1c16: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1809: push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f8e56: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8a49: push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x00137571: push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000f1b72: push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000f1a43: push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8db2: push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x000f8c83: push dword ptr [ebp - 0x5ec]; call esi; 
0x00183d68: push dword ptr [ebp - 0x60]; push 0x28; push edi; call eax; 
0x00081866: push dword ptr [ebp - 0x70]; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0013942b: push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00139291: push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x000388ef: push dword ptr [ebx + 0x12cc]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0016c8a2: push dword ptr [ebx + 0x229c]; push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x000a73f7: push dword ptr [ebx + 0x24]; call eax; 
0x000a7584: push dword ptr [ebx + 0x24]; call edx; 
0x00138530: push dword ptr [ebx + 0x30]; call eax; 
0x001744ab: push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00171830: push dword ptr [ebx + 0xa8]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0009182f: push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x00183f2a: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx + 8], eax; add esp, 0x28; pop ebx; ret; 
0x001844b3: push dword ptr [ebx + 4]; call dword ptr [edx + 0x380]; mov dword ptr [ebx], eax; add esp, 0x28; pop ebx; ret; 
0x0003f1f6: push dword ptr [ebx + 4]; call eax; 
0x00025d13: push dword ptr [ebx + 4]; call edi; 
0x00023000: push dword ptr [ebx + 4]; jmp dword ptr [ebx + 8]; 
0x00159c48: push dword ptr [ebx + 4]; push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0016d3bd: push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x00081bfc: push dword ptr [ebx + eax - 0x7d]; and ebp, edi; add esp, 4; pop ebx; pop esi; ret; 
0x00081ba2: push dword ptr [ebx + eax - 0x7d]; out dx, eax; pop ebx; pop esi; pop edi; ret; 
0x00027034: push dword ptr [ebx + edx - 0x7d]; in al, dx; or al, 0x57; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x001684a9: push dword ptr [ebx - 0x75]; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x0008ecc5: push dword ptr [ebx]; call 0x184820; mov dword ptr [ebx + 0x10], eax; add esp, 0x18; pop ebx; ret; 
0x0008ebc2: push dword ptr [ebx]; call 0x1848e0; mov dword ptr [ebx + 0xc], eax; add esp, 0x18; pop ebx; ret; 
0x0016f652: push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x0016ef34: push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00082cef: push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0012ac0c: push dword ptr [ebx]; call esi; 
0x00185bca: push dword ptr [ebx]; push dword ptr [edi]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00184b72: push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00159c4b: push dword ptr [ebx]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0012af78: push dword ptr [ebx]; push esi; call edi; 
0x0012c6fe: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; 
0x0012c6fe: push dword ptr [ecx + eax - 0x3d]; mov ebp, esi; call ebx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0012d5a4: push dword ptr [ecx + ebx - 0x48]; jl 0x12d5ab; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00033368: push dword ptr [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ecx - 0xe76b], cl; call dword ptr [eax + 0x56]; 
0x0004342c: push dword ptr [ecx + ecx - 9]; sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0017e5a8: push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0008988f: push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0010498c: push dword ptr [ecx]; fucomi st(3); ret 0xc901; 
0x000586b7: push dword ptr [ecx]; imul byte ptr [ecx]; ret; 
0x00159e53: push dword ptr [ecx]; jmp dword ptr [esi - 0x77]; 
0x00184af9: push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001895fd: push dword ptr [ecx]; rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x000d5e7d: push dword ptr [ecx]; rol byte ptr [ebx - 0x363343], cl; call dword ptr [eax]; 
0x0009f755: push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x000434fa: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000434db: push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x9e0f; 
0x00121344: push dword ptr [edi + 0x19]; pop ebx; pop esi; pop edi; ret; 
0x00121443: push dword ptr [edi + 0x1a]; pop ebx; pop esi; pop edi; ret; 
0x001213c1: push dword ptr [edi + 0x1c]; pop ebx; pop esi; pop edi; ret; 
0x001214c0: push dword ptr [edi + 0x1d]; pop ebx; pop esi; pop edi; ret; 
0x0012d5b7: push dword ptr [edi + 0x1e]; pop ebx; pop esi; pop edi; ret; 
0x0009fb0d: push dword ptr [edi + 0x20]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012d482: push dword ptr [edi + 0x3b]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008f14b: push dword ptr [edi + 0xa]; add esp, 8; pop ebx; ret; 
0x0012d1fb: push dword ptr [edi + 0xa]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x0012dc93: push dword ptr [edi + 0xa]; pop ebx; pop esi; pop edi; ret; 
0x001131fb: push dword ptr [edi + 0xa]; pop ebx; pop esi; ret; 
0x0012bc82: push dword ptr [edi + 0xb]; mov eax, ecx; pop ebx; ret; 
0x00130f52: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000613b2: push dword ptr [edi + 0xb]; pop ebx; pop esi; pop edi; ret; 
0x0011b43e: push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x000901d1: push dword ptr [edi + 0xc]; pop ebx; pop esi; pop edi; ret; 
0x0003cd19: push dword ptr [edi + 4]; pop ebx; ret; 
0x00098518: push dword ptr [edi + 5]; pop ebx; pop esi; pop edi; ret; 
0x00061358: push dword ptr [edi + 5]; pop ebx; ret; 
0x000eaf97: push dword ptr [edi + 6]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000e9107: push dword ptr [edi + 6]; pop ebx; pop esi; ret; 
0x0012d25f: push dword ptr [edi + 6]; ret; 
0x0009ff7e: push dword ptr [edi + 7]; mov eax, ecx; pop ebx; ret; 
0x00130896: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0012233e: push dword ptr [edi + 7]; pop ebx; pop esi; pop edi; ret; 
0x00115c4e: push dword ptr [edi + 7]; pop ebx; pop esi; ret; 
0x000dc376: push dword ptr [edi + 7]; pop ebx; ret; 
0x00189ef6: push dword ptr [edi + 7]; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x000c5239: push dword ptr [edi + 8]; call ebx; 
0x0004076d: push dword ptr [edi + 8]; pop ebx; pop esi; ret; 
0x0011f31c: push dword ptr [edi + 9]; pop ebx; mov eax, edx; pop esi; pop edi; ret; 
0x001303a4: push dword ptr [edi + 9]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0009f5b4: push dword ptr [edi + 9]; pop ebx; ret; 
0x0008609e: push dword ptr [edi + ebx*8 - 0x7b]; sar byte ptr [eax + 0x33], 1; ret; 
0x0018901e: push dword ptr [edi + ecx - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x000c3ad3: push dword ptr [edi]; call ebx; 
0x000c3a2d: push dword ptr [edi]; call esi; 
0x000415c9: push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c4894: push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x00185bcc: push dword ptr [edi]; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0015216d: push dword ptr [edi]; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0007c62b: push dword ptr [edx + 0x98]; call eax; 
0x001877eb: push dword ptr [edx + 0x98]; call eax; cdq; add esp, 0x10; add esp, 0xc; ret; 
0x0003367e: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0x33690; add esp, 0x1c; ret; 
0x000abd1e: push dword ptr [edx + eax]; push dword ptr [esp + 0x1c]; call 0xabd30; add esp, 0x1c; ret; 
0x001142f3: push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0010f72b: push dword ptr [edx + ebx*8 - 0x77]; ret 0xc085; 
0x0016d47e: push dword ptr [esi + 0x10]; push ebx; call dword ptr [esi + 0x14]; 
0x0010d6fb: push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0010d6f6: push dword ptr [esi + 0x20]; mov eax, esi; push dword ptr [esi + 0x18]; push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x0007c5cd: push dword ptr [esi + 0x98]; call eax; 
0x0009459b: push dword ptr [esi + 0xa]; pop ebx; neg eax; pop esi; pop edi; ret; 
0x0011ae4b: push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x0016ea3f: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016e9fc: push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000308b0: push dword ptr [esi + 4]; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010d6fe: push dword ptr [esi + 8]; call dword ptr [eax + 0xc]; 
0x000d4b53: push dword ptr [esi + 8]; call ebx; 
0x00094604: push dword ptr [esi + 9]; add esp, 4; neg eax; pop ebx; pop esi; ret; 
0x000435bf: push dword ptr [esi + eax + 0xf]; mov ebp, 0x1ff083c2; ret; 
0x000d4c13: push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00188547: push dword ptr [esi - 0x75]; inc esi; sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x0016f172: push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x00184af7: push dword ptr [esi]; push dword ptr [ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000415c7: push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00184b74: push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x001579b7: push dword ptr [esp + 0x10]; call edi; 
0x00184aff: push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00083a01: push dword ptr [esp + 0x10]; push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x00174f78: push dword ptr [esp + 0x10]; push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0016c8a8: push dword ptr [esp + 0x10]; push esi; call dword ptr [eax + 0xc]; 
0x00083a05: push dword ptr [esp + 0x10]; push esi; call dword ptr [ebx + 0x40]; 
0x000a7513: push dword ptr [esp + 0x14]; call eax; 
0x00024d4d: push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016cc0a: push dword ptr [esp + 0x14]; push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x00152821: push dword ptr [esp + 0x14]; push ebp; call edi; 
0x001775e6: push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x0016c796: push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x0017fef1: push dword ptr [esp + 0x18]; lea eax, [eax - 0x6996d]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x0005b018: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080b38: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0x16c]; push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x000792e7: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x00080ad7: push dword ptr [esp + 0x18]; mov eax, dword ptr [eax + 0xc0]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x0011ec80: push dword ptr [esp + 0x18]; push -0x64; call 0x114c30; add esp, 0x1c; ret; 
0x0011f13c: push dword ptr [esp + 0x18]; push -0x64; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f160: push dword ptr [esp + 0x18]; push -0x64; call 0x115710; add esp, 0x1c; ret; 
0x0010e51f: push dword ptr [esp + 0x18]; push -1; call 0x10e630; add esp, 0x1c; ret; 
0x0010e4f9: push dword ptr [esp + 0x18]; push -1; call 0x10e8a0; add esp, 0x1c; ret; 
0x0012bf17: push dword ptr [esp + 0x18]; push 0; call 0x12c160; add esp, 0x1c; ret; 
0x00035239: push dword ptr [esp + 0x18]; push 0; call 0x351e0; add esp, 0x1c; ret; 
0x000c4256: push dword ptr [esp + 0x18]; push 0; call 0xc47a0; add esp, 0x1c; ret; 
0x00127999: push dword ptr [esp + 0x18]; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x00091037: push dword ptr [esp + 0x18]; push 0x80; push dword ptr [esp + 0x1c]; call 0x90f80; add esp, 0x1c; ret; 
0x000a8ca7: push dword ptr [esp + 0x18]; push dword ptr [esp + 0x20]; call 0xc2c90; add esp, 0x18; pop ebx; ret; 
0x0003f34b: push dword ptr [esp + 0x18]; push eax; push eax; call 0x3f3b0; add esp, 0x1c; ret; 
0x0009cc3f: push dword ptr [esp + 0x1c]; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8b1: push dword ptr [esp + 0x1c]; call 0x10e750; add esp, 0x1c; ret; 
0x0011508f: push dword ptr [esp + 0x1c]; call 0x1150a0; add esp, 0x1c; ret; 
0x0011f273: push dword ptr [esp + 0x1c]; call 0x11f2b0; add esp, 0x1c; ret; 
0x00061717: push dword ptr [esp + 0x1c]; call 0x11f360; add esp, 0x1c; ret; 
0x00123579: push dword ptr [esp + 0x1c]; call 0x123420; add esp, 0x18; pop ebx; ret; 
0x0002449b: push dword ptr [esp + 0x1c]; call 0x1234a0; add esp, 0x18; pop ebx; ret; 
0x00125c48: push dword ptr [esp + 0x1c]; call 0x125ca0; add esp, 0x1c; ret; 
0x00121ff0: push dword ptr [esp + 0x1c]; call 0x1274c0; add esp, 0x1c; ret; 
0x0012a772: push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0012e1d9: push dword ptr [esp + 0x1c]; call 0x12e1f0; add esp, 0x1c; ret; 
0x00130851: push dword ptr [esp + 0x1c]; call 0x130df0; add esp, 0x1c; ret; 
0x001396fe: push dword ptr [esp + 0x1c]; call 0x137e50; add esp, 0x1c; ret; 
0x0013800e: push dword ptr [esp + 0x1c]; call 0x137f00; add esp, 0x18; pop ebx; ret; 
0x0013c778: push dword ptr [esp + 0x1c]; call 0x13c790; add esp, 0x1c; ret; 
0x0013cab8: push dword ptr [esp + 0x1c]; call 0x13cad0; add esp, 0x1c; ret; 
0x001412e9: push dword ptr [esp + 0x1c]; call 0x140620; add esp, 0x1c; ret; 
0x001483d9: push dword ptr [esp + 0x1c]; call 0x148300; add esp, 0x1c; ret; 
0x00190653: push dword ptr [esp + 0x1c]; call 0x1558c0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001906c3: push dword ptr [esp + 0x1c]; call 0x1567d0; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190983: push dword ptr [esp + 0x1c]; call 0x162500; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001909f3: push dword ptr [esp + 0x1c]; call 0x163230; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190b53: push dword ptr [esp + 0x1c]; call 0x164c00; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x00190c03: push dword ptr [esp + 0x1c]; call 0x165b20; neg eax; sbb eax, eax; add esp, 0x1c; ret; 
0x001766d6: push dword ptr [esp + 0x1c]; call 0x176420; add esp, 0x10; add esp, 0xc; ret; 
0x001766b7: push dword ptr [esp + 0x1c]; call 0x176520; add esp, 0x10; add esp, 0xc; ret; 
0x00178b71: push dword ptr [esp + 0x1c]; call 0x1788a0; add esp, 0x1c; ret; 
0x0016de8d: push dword ptr [esp + 0x1c]; call 0x1799b0; add esp, 0x1c; ret; 
0x00179c15: push dword ptr [esp + 0x1c]; call 0x179a80; add esp, 0x1c; ret; 
0x001883d3: push dword ptr [esp + 0x1c]; call 0x187ac0; add esp, 0x18; pop ebx; ret; 
0x00043003: push dword ptr [esp + 0x1c]; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x00043067: push dword ptr [esp + 0x1c]; call 0x1aa890; add esp, 0x18; pop ebx; ret; 
0x000a7641: push dword ptr [esp + 0x1c]; call 0x23010; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0002ff80: push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010be83: push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000244b7: push dword ptr [esp + 0x1c]; call 0x24482; add esp, 0x1c; ret; 
0x00033681: push dword ptr [esp + 0x1c]; call 0x33690; add esp, 0x1c; ret; 
0x0003521d: push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x0003d99d: push dword ptr [esp + 0x1c]; call 0x3d920; add esp, 0x1c; ret; 
0x0003ebf9: push dword ptr [esp + 0x1c]; call 0x3e360; add esp, 0x1c; ret; 
0x0003ec2e: push dword ptr [esp + 0x1c]; call 0x3ed70; add esp, 0x1c; ret; 
0x00187739: push dword ptr [esp + 0x1c]; call 0x3ee50; add esp, 0x1c; ret; 
0x000409f8: push dword ptr [esp + 0x1c]; call 0x40a10; add esp, 0x1c; ret; 
0x00042cc8: push dword ptr [esp + 0x1c]; call 0x42ce0; add esp, 0x1c; ret; 
0x0003e269: push dword ptr [esp + 0x1c]; call 0x47110; add esp, 0x1c; ret; 
0x000470f9: push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004a6f9: push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0003e28b: push dword ptr [esp + 0x1c]; call 0x4d950; add esp, 0x1c; ret; 
0x0004e079: push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0003e2cb: push dword ptr [esp + 0x1c]; call 0x51680; add esp, 0x1c; ret; 
0x001279f1: push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x0012799f: push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x0005acb2: push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0005acd3: push dword ptr [esp + 0x1c]; call 0x66570; add esp, 0x1c; ret; 
0x0005aff2: push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x0006df71: push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x00080b63: push dword ptr [esp + 0x1c]; call 0x72c10; add esp, 0x1c; ret; 
0x00072c21: push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x00079f62: push dword ptr [esp + 0x1c]; call 0x79e20; add esp, 0x1c; ret; 
0x00085a63: push dword ptr [esp + 0x1c]; call 0x7b8c0; add esp, 0x18; pop ebx; ret; 
0x0007c53d: push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x0005ade1: push dword ptr [esp + 0x1c]; call 0x7d220; add esp, 0x1c; ret; 
0x00085d70: push dword ptr [esp + 0x1c]; call 0x7eab0; add esp, 0x1c; ret; 
0x00085d8d: push dword ptr [esp + 0x1c]; call 0x7ec60; add esp, 0x1c; ret; 
0x0008601d: push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x18; pop ebx; ret; 
0x0005ab02: push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x000861dd: push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x18; pop ebx; ret; 
0x0005ac12: push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x1c; ret; 
0x000866ad: push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x18; pop ebx; ret; 
0x0013afae: push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x1c; ret; 
0x0008daba: push dword ptr [esp + 0x1c]; call 0x8d9f0; add esp, 0x18; pop ebx; ret; 
0x00090d1c: push dword ptr [esp + 0x1c]; call 0x90c40; add esp, 0x18; pop ebx; ret; 
0x00091040: push dword ptr [esp + 0x1c]; call 0x90f80; add esp, 0x1c; ret; 
0x00098209: push dword ptr [esp + 0x1c]; call 0x980c0; add esp, 0x1c; ret; 
0x00099f4c: push dword ptr [esp + 0x1c]; call 0x99ef0; add esp, 0x18; pop ebx; ret; 
0x0009e47c: push dword ptr [esp + 0x1c]; call 0x9dc00; cmp eax, 1; sbb eax, eax; add esp, 0x1c; ret; 
0x0009fb8f: push dword ptr [esp + 0x1c]; call 0x9fad0; add esp, 0x18; pop ebx; ret; 
0x0009f5ed: push dword ptr [esp + 0x1c]; call 0x9fc10; add esp, 0x1c; ret; 
0x000aaab5: push dword ptr [esp + 0x1c]; call 0xaaae0; add esp, 0x1c; ret; 
0x000abd21: push dword ptr [esp + 0x1c]; call 0xabd30; add esp, 0x1c; ret; 
0x000ad73c: push dword ptr [esp + 0x1c]; call 0xad750; add esp, 0x1c; ret; 
0x000ad979: push dword ptr [esp + 0x1c]; call 0xada40; add esp, 0x1c; ret; 
0x000d4d2f: push dword ptr [esp + 0x1c]; call 0xc2c10; add esp, 0x18; pop ebx; ret; 
0x000d4d6f: push dword ptr [esp + 0x1c]; call 0xc2d00; add esp, 0x18; pop ebx; ret; 
0x000a8cd9: push dword ptr [esp + 0x1c]; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x0013bcb5: push dword ptr [esp + 0x1c]; call 0xc5100; add esp, 0x18; pop ebx; ret; 
0x000c5391: push dword ptr [esp + 0x1c]; call 0xc5170; add esp, 0x1c; ret; 
0x000c5565: push dword ptr [esp + 0x1c]; call 0xc5580; add esp, 0x1c; ret; 
0x0013bf75: push dword ptr [esp + 0x1c]; call 0xc6e20; add esp, 0x18; pop ebx; ret; 
0x000c7b09: push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x000cadf7: push dword ptr [esp + 0x1c]; call 0xcb520; add esp, 0x1c; ret; 
0x000ce4d9: push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x000d2fd9: push dword ptr [esp + 0x1c]; call 0xd3000; add esp, 0x1c; ret; 
0x000da126: push dword ptr [esp + 0x1c]; call 0xd4d10; add esp, 0x14; pop ebx; pop esi; ret; 
0x000dbe29: push dword ptr [esp + 0x1c]; call 0xdaeb0; add esp, 0x18; pop ebx; ret; 
0x000eaf1d: push dword ptr [esp + 0x1c]; call 0xeaf30; add esp, 0x1c; ret; 
0x000eafdd: push dword ptr [esp + 0x1c]; call 0xeb470; add esp, 0x1c; ret; 
0x000db29d: push dword ptr [esp + 0x1c]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00134fc5: push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x0013b15a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0013bc1a: push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x0007c5c9: push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0009cc3b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8ad: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e750; add esp, 0x1c; ret; 
0x00123575: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x123420; add esp, 0x18; pop ebx; ret; 
0x00024497: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1234a0; add esp, 0x18; pop ebx; ret; 
0x0012a76e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013084d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x130df0; add esp, 0x1c; ret; 
0x0013800a: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x137f00; add esp, 0x18; pop ebx; ret; 
0x0016de89: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1799b0; add esp, 0x1c; ret; 
0x00043063: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x1aa890; add esp, 0x18; pop ebx; ret; 
0x00035219: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x351e0; add esp, 0x1c; ret; 
0x0003d999: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3d920; add esp, 0x1c; ret; 
0x0003ee6c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ed70; add esp, 0x1c; ret; 
0x00047133: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004a6f5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e075: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0005acae: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0005accf: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66570; add esp, 0x1c; ret; 
0x0005afee: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x0006df6d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x00080b5f: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c10; add esp, 0x1c; ret; 
0x000c3e1e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x00079f5e: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79e20; add esp, 0x1c; ret; 
0x0007c539: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7c450; add esp, 0x1c; ret; 
0x0005addd: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7d220; add esp, 0x1c; ret; 
0x00085d6c: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7eab0; add esp, 0x1c; ret; 
0x00086019: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x18; pop ebx; ret; 
0x0005aafe: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x000861d9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x18; pop ebx; ret; 
0x000866a9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x18; pop ebx; ret; 
0x000ad975: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xada40; add esp, 0x1c; ret; 
0x000d4d2b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2c10; add esp, 0x18; pop ebx; ret; 
0x000d4d6b: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc2d00; add esp, 0x18; pop ebx; ret; 
0x0013bcb1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5100; add esp, 0x18; pop ebx; ret; 
0x000c538d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5170; add esp, 0x1c; ret; 
0x000c7b43: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x000cdb9d: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb520; add esp, 0x1c; ret; 
0x000ce4d5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x000d2fd5: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd3000; add esp, 0x1c; ret; 
0x000eafd9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xeb470; add esp, 0x1c; ret; 
0x0013bac6: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x66260; add esp, 0x1c; ret; 
0x0013bc16: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [eax]; call 0x72940; add esp, 0x1c; ret; 
0x0009cc37: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10b5c0; add esp, 0x1c; ret; 
0x0010e8a9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x10e750; add esp, 0x1c; ret; 
0x0012a789: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x00130849: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x130df0; add esp, 0x1c; ret; 
0x0003ee68: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x3ed70; add esp, 0x1c; ret; 
0x0004a6f1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x0004e071: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x0005b0e9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x0006df69: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x000c3ee9: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x000ad971: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xada40; add esp, 0x1c; ret; 
0x000c5389: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc5170; add esp, 0x1c; ret; 
0x000ce4d1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x000d2fd1: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xd3000; add esp, 0x1c; ret; 
0x000dbaeb: push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x001777e5: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016edf0: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ee3e: push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00177719: push dword ptr [esp + 0x1c]; push ebx; call eax; 
0x0016c7c4: push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00187347: push dword ptr [esp + 0x20]; call 0x1871c0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00187383: push dword ptr [esp + 0x20]; call 0x187230; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0018732b: push dword ptr [esp + 0x20]; call 0x187240; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00127db3: push dword ptr [esp + 0x20]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x000a8cab: push dword ptr [esp + 0x20]; call 0xc2c90; add esp, 0x18; pop ebx; ret; 
0x0012a7ba: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013a72a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0013a97a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x0013985a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x0013a11a: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x1c; ret; 
0x0013afaa: push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x1c; ret; 
0x001877e6: push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x001348cd: push dword ptr [esp + 0x20]; push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00152170: push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008eec7: push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00061a5a: push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x0011f2c3: push dword ptr [esp + 0x28]; push -0x64; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f38c: push dword ptr [esp + 0x28]; push -0x64; call 0x8f110; add esp, 0x2c; ret; 
0x000614f1: push dword ptr [esp + 0x28]; push -1; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x00036841: push dword ptr [esp + 0x28]; push 0; call 0x367d0; add esp, 0x2c; ret; 
0x001302f7: push dword ptr [esp + 0x28]; push 0xb; call 0x8f110; add esp, 0x2c; ret; 
0x00034645: push dword ptr [esp + 0x28]; push eax; call 0x34370; add esp, 0x28; pop ebx; ret; 
0x00171836: push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0010c87d: push dword ptr [esp + 0x2c]; call 0x10dbb0; add esp, 0x2c; ret; 
0x0011f297: push dword ptr [esp + 0x2c]; call 0x11f2e0; add esp, 0x2c; ret; 
0x001237f5: push dword ptr [esp + 0x2c]; call 0x123700; add esp, 0x28; pop ebx; ret; 
0x0012398d: push dword ptr [esp + 0x2c]; call 0x123810; add esp, 0x28; pop ebx; ret; 
0x00136a19: push dword ptr [esp + 0x2c]; call 0x1367f0; add esp, 0x28; pop ebx; ret; 
0x001412cf: push dword ptr [esp + 0x2c]; call 0x1407d0; add esp, 0x2c; ret; 
0x001413f5: push dword ptr [esp + 0x2c]; call 0x141300; add esp, 0x2c; ret; 
0x00141b9d: push dword ptr [esp + 0x2c]; call 0x1415d0; add esp, 0x2c; ret; 
0x0019085b: push dword ptr [esp + 0x2c]; call 0x15f2b0; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00160144: push dword ptr [esp + 0x2c]; call 0x1609d0; add esp, 0x20; add esp, 8; pop ebx; ret; 
0x0019091b: push dword ptr [esp + 0x2c]; call 0x161d90; neg eax; sbb eax, eax; add esp, 0x2c; ret; 
0x00176ab7: push dword ptr [esp + 0x2c]; call 0x1768f0; add esp, 0x2c; ret; 
0x0018631f: push dword ptr [esp + 0x2c]; call 0x1861c0; add esp, 0x28; pop ebx; ret; 
0x000351f5: push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x00036815: push dword ptr [esp + 0x2c]; call 0x367d0; add esp, 0x2c; ret; 
0x00041bd5: push dword ptr [esp + 0x2c]; call 0x41790; add esp, 0x2c; ret; 
0x000438d3: push dword ptr [esp + 0x2c]; call 0x43900; add esp, 0x2c; ret; 
0x0004d8ff: push dword ptr [esp + 0x2c]; call 0x4d9a0; add esp, 0x2c; ret; 
0x0005162f: push dword ptr [esp + 0x2c]; call 0x516c0; add esp, 0x2c; ret; 
0x00051fff: push dword ptr [esp + 0x2c]; call 0x520a0; add esp, 0x2c; ret; 
0x000526df: push dword ptr [esp + 0x2c]; call 0x52780; add esp, 0x2c; ret; 
0x0007d749: push dword ptr [esp + 0x2c]; call 0x7d570; add esp, 0x2c; ret; 
0x000614f7: push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x00080235: push dword ptr [esp + 0x2c]; call 0x80060; add esp, 0x28; pop ebx; ret; 
0x00080c81: push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x28; pop ebx; ret; 
0x00080aa9: push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013b54b: push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x0008c51d: push dword ptr [esp + 0x2c]; call 0x8c440; add esp, 0x28; pop ebx; ret; 
0x00128762: push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x28; pop ebx; ret; 
0x0003cd56: push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00094ef1: push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x0009fbc5: push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbf5: push dword ptr [esp + 0x2c]; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d4a: push dword ptr [esp + 0x2c]; call 0xc4d60; add esp, 0x2c; ret; 
0x000cdd7f: push dword ptr [esp + 0x2c]; call 0xcde10; add esp, 0x2c; ret; 
0x000d164f: push dword ptr [esp + 0x2c]; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f5f: push dword ptr [esp + 0x2c]; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d266f: push dword ptr [esp + 0x2c]; call 0xd2700; add esp, 0x2c; ret; 
0x000dfceb: push dword ptr [esp + 0x2c]; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30dd: push dword ptr [esp + 0x2c]; call 0xe54b0; add esp, 0x2c; ret; 
0x000f0e2b: push dword ptr [esp + 0x2c]; call 0xf0650; add esp, 0x28; pop ebx; ret; 
0x000f0d63: push dword ptr [esp + 0x2c]; call 0xf0cb0; add esp, 0x28; pop ebx; ret; 
0x000c4890: push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0010dc39: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dbb0; add esp, 0x2c; ret; 
0x0011f293: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11f2e0; add esp, 0x2c; ret; 
0x001237f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x123700; add esp, 0x28; pop ebx; ret; 
0x00123989: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x123810; add esp, 0x28; pop ebx; ret; 
0x00136a15: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1367f0; add esp, 0x28; pop ebx; ret; 
0x001413f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x141300; add esp, 0x2c; ret; 
0x00141b99: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1415d0; add esp, 0x2c; ret; 
0x00176ab3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1768f0; add esp, 0x2c; ret; 
0x000351f1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x00036811: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x367d0; add esp, 0x2c; ret; 
0x00041bd1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41790; add esp, 0x2c; ret; 
0x000469c9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43900; add esp, 0x2c; ret; 
0x0004d8fb: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d9a0; add esp, 0x2c; ret; 
0x00051669: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x516c0; add esp, 0x2c; ret; 
0x00051ffb: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x520a0; add esp, 0x2c; ret; 
0x000526db: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52780; add esp, 0x2c; ret; 
0x0007d745: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d570; add esp, 0x2c; ret; 
0x00080231: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80060; add esp, 0x28; pop ebx; ret; 
0x00080c7d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x28; pop ebx; ret; 
0x00080aa5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0008c519: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8c440; add esp, 0x28; pop ebx; ret; 
0x000407b6: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x00094eed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x0009fbc1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbf1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d46: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4d60; add esp, 0x2c; ret; 
0x000cddb9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcde10; add esp, 0x2c; ret; 
0x000d1689: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f99: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d26a9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2700; add esp, 0x2c; ret; 
0x000dfce7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30d9: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe54b0; add esp, 0x2c; ret; 
0x000f0e27: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf0650; add esp, 0x28; pop ebx; ret; 
0x000f0d5f: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xf0cb0; add esp, 0x28; pop ebx; ret; 
0x0010dc35: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x10dbb0; add esp, 0x2c; ret; 
0x001413ed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x141300; add esp, 0x2c; ret; 
0x00141b95: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1415d0; add esp, 0x2c; ret; 
0x00176aaf: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x1768f0; add esp, 0x2c; ret; 
0x000367e1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x35ee0; add esp, 0x2c; ret; 
0x0003680d: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x367d0; add esp, 0x2c; ret; 
0x00041bcd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x41790; add esp, 0x2c; ret; 
0x000469c5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x43900; add esp, 0x2c; ret; 
0x0004d8f7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x4d9a0; add esp, 0x2c; ret; 
0x00051665: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x516c0; add esp, 0x2c; ret; 
0x00051ff7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x520a0; add esp, 0x2c; ret; 
0x000526d7: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x52780; add esp, 0x2c; ret; 
0x0007d741: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x7d570; add esp, 0x2c; ret; 
0x00080aa1: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x000407b2: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x0009fbbd: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fd70; add esp, 0x2c; ret; 
0x0009fbed: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x9fee0; add esp, 0x2c; ret; 
0x000c4d42: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xc4d60; add esp, 0x2c; ret; 
0x000cddb5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xcde10; add esp, 0x2c; ret; 
0x000d1685: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd16e0; add esp, 0x2c; ret; 
0x000d1f95: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd1ff0; add esp, 0x2c; ret; 
0x000d26a5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xd2700; add esp, 0x2c; ret; 
0x000dfce3: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xdfdf0; add esp, 0x2c; ret; 
0x000e30d5: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0xe54b0; add esp, 0x2c; ret; 
0x000c7097: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x000c4c07: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0008e9d4: push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x0008a61d: push dword ptr [esp + 0x2c]; push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x0009aa8b: push dword ptr [esp + 0x2c]; push edx; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x0008ed1f: push dword ptr [esp + 0x2c]; push edx; push ecx; push edi; call eax; 
0x0012c745: push dword ptr [esp + 0x30]; call 0x12c6a0; add esp, 0x2c; ret; 
0x00157cba: push dword ptr [esp + 0x30]; lea eax, [esp + 0x48]; push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c622: push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000dbaef: push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00025d0f: push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0011b43a: push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0011b7df: push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00159c4d: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0018989c: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4e76: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00159c51: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; call esi; 
0x0008eb46: push dword ptr [esp + 0x30]; push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0013b598: push dword ptr [esp + 0x30]; push edx; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x0008ec1e: push dword ptr [esp + 0x30]; push edx; push ecx; call eax; 
0x00171852: push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x001898a0: push dword ptr [esp + 0x30]; push esi; call dword ptr [ebx + 0x40]; 
0x000c4f97: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00157cc3: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000c742b: push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0013b946: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013b546: push dword ptr [esp + 0x34]; push edx; push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x0008c290: push dword ptr [esp + 0x38]; push 0; push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x0016903b: push dword ptr [esp + 0x38]; push 2; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x00061a56: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000c709b: push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00088282: push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x000c4c0f: push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00080033: push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00171884: push dword ptr [esp + 0x38]; push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x00145835: push dword ptr [esp + 0x3c]; call 0x1450e0; add esp, 0x3c; ret; 
0x00169041: push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x00175915: push dword ptr [esp + 0x3c]; call 0x175620; add esp, 0x3c; ret; 
0x0008e9dd: push dword ptr [esp + 0x3c]; call eax; 
0x00159c55: push dword ptr [esp + 0x3c]; call esi; 
0x000c4c0b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00145831: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1450e0; add esp, 0x3c; ret; 
0x0016906f: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x00175911: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x175620; add esp, 0x3c; ret; 
0x0014582d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x1450e0; add esp, 0x3c; ret; 
0x0016906b: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x168e70; add esp, 0x3c; ret; 
0x0017590d: push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; push dword ptr [esp + 0x3c]; call 0x175620; add esp, 0x3c; ret; 
0x0008ad0c: push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00175d3c: push dword ptr [esp + 0x3c]; push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0008eb4a: push dword ptr [esp + 0x3c]; push ecx; call eax; 
0x0008e9d8: push dword ptr [esp + 0x3c]; push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00024ea8: push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x00024e3e: push dword ptr [esp + 0x40]; call ecx; 
0x00024de7: push dword ptr [esp + 0x40]; call esi; 
0x00024ea4: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x00024e3a: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x00024de3: push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x000c742f: push dword ptr [esp + 0x40]; push ebp; call esi; 
0x001579b3: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x001579af: push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0016db30: push dword ptr [esp + 0x48]; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0003f534: push dword ptr [esp + 0x4c]; call eax; 
0x0015d2f0: push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00029ddd: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002f400: push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002de3c: push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002f3fc: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002de38: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00160849: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; push esi; call edi; 
0x000285a1: push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x00025d0a: push dword ptr [esp + 0x58]; push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x0016084d: push dword ptr [esp + 0x58]; push esi; call edi; 
0x00029de1: push dword ptr [esp + 0x5c]; call edi; 
0x0002f404: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x0002c9b0: push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002859d: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002c9ac: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x00029149: push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002a308: push dword ptr [esp + 0x60]; call esi; 
0x000285a5: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002aec6: push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00029145: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002a304: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x0002aec2: push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002914d: push dword ptr [esp + 0x64]; call edi; 
0x0002e684: push dword ptr [esp + 0x64]; call esi; 
0x0002d1d7: push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0015d2ec: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002e680: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call esi; 
0x0002d1d3: push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb6d: push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb69: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x00028ac7: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x00029713: push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x00028ac3: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x0002970f: push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x00028acb: push dword ptr [esp + 0x70]; call ebx; 
0x00029717: push dword ptr [esp + 0x70]; call edi; 
0x0016cc0e: push dword ptr [esp + 0x74]; push eax; call dword ptr [ecx]; 
0x0008a16a: push dword ptr [esp + 0xbc]; push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x000a8e1c: push dword ptr [esp + 0xc]; call 0xa8d00; add esp, 0xc; test eax, eax; jne 0xa8e33; ret; 
0x00185bce: push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x001352e8: push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00160ce4: push dword ptr [esp + 0xc]; push ebp; call edi; 
0x00189771: push dword ptr [esp + 0xcc]; push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00104b88: push dword ptr [esp + 0xf]; mov dh, 0x52; sbb al, 0xf6; ret 0xf08; 
0x0003c6c3: push dword ptr [esp + 8]; call 0x3c640; pop ecx; pop edx; ret; 
0x000415c3: push dword ptr [esp + 8]; push dword ptr [esi]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0008a171: push dword ptr [esp + 8]; push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0008a175: push dword ptr [esp + 8]; push esi; call dword ptr [ebx + 0x40]; 
0x0016e598: push dword ptr [esp + 8]; push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x000413de: push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000c20b1: push dword ptr [esp + ebx*2 + 0xf]; mov ebp, 0x5ff801ff; ret; 
0x000c69d2: push dword ptr [esp + ecx - 0x75]; inc ecx; or byte ptr [ebx + 0x418901c0], al; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00187976: push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x00160cdc: push dword ptr [esp]; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001579ac: push dword ptr [esp]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0015d2ef: push dword ptr fs:[esp + 0x50]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002e683: push dword ptr fs:[esp + 0x64]; call esi; 
0x0002d1d6: push dword ptr fs:[esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x00184af8: push dword ptr ss:[ecx]; mov dword ptr [esp + 0x20], ecx; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x000415c8: push dword ptr ss:[edi]; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00184b75: push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0017a5df: push eax; adc al, 0x89; dec eax; add al, 0x5b; ret; 
0x0017a77d: push eax; adc al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; ret; 
0x000c14b6: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be030: push eax; adc byte ptr [eax + 0x448b1870], cl; and al, 8; pop esi; ret; 
0x000e8706: push eax; adc byte ptr [ebp - 0x74f88b2e], al; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x001763f7: push eax; adc byte ptr [ebx + 0x10c48303], cl; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000c22b1: push eax; adc byte ptr [ebx + 0x58ebf0e2], al; lea esi, cs:[esi]; xor eax, eax; ret; 
0x000c1493: push eax; adc byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000be010: push eax; adc byte ptr [ebx + 0x5e082444], cl; ret; 
0x000791e9: push eax; adc byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx - 0x77]; 
0x000c1516: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be073: push eax; adc byte ptr [ecx + 0x448b1748], cl; and al, 8; pop esi; ret; 
0x000c1546: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 0xc; pop ebx; pop esi; ret; 
0x000be093: push eax; adc byte ptr [ecx + 0x448b1848], cl; and al, 8; pop esi; ret; 
0x000864eb: push eax; adc byte ptr [ecx + 0x50890853], cl; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0016d478: push eax; adc byte ptr [ecx - 0xa5a73b], cl; jbe 0x16d491; push ebx; call dword ptr [esi + 0x14]; 
0x0016eeb1: push eax; adc byte ptr [ecx], al; sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000c14e7: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000be054: push eax; adc byte ptr [esi - 0x77], ah; dec eax; sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x00185a30: push eax; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x00031e32: push eax; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x0014b1cb: push eax; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0016ccfd: push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00173dfa: push eax; add al, 0x51; push eax; call dword ptr [edx + 8]; 
0x0008625a: push eax; add al, 0x5b; pop esi; ret; 
0x0008b7f8: push eax; add al, 0x5b; ret; 
0x0008f1c3: push eax; add al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0xc], edx; mov dword ptr gs:[0x78], eax; ret; 
0x0007f9b2: push eax; add al, 0x73; or cl, byte ptr [ebp + 0x889044a]; mov eax, dword ptr [edx]; ret; 
0x000ffd2e: push eax; add al, 0x83; ror byte ptr [eax], 0x39; ret 0xf475; 
0x00072c76: push eax; add al, 0x89; adc ecx, dword ptr [ecx + 0x5f5e5b38]; ret; 
0x00175acb: push eax; add al, 0x89; add al, 0x24; call dword ptr [edx + 0x10]; 
0x000810e2: push eax; add al, 0x89; pop eax; or byte ptr [ecx + 0x10892048], cl; pop ebx; ret; 
0x0016efc3: push eax; add al, 0x89; push ebx; adc bl, ch; ret; 
0x0008f1fb: push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x000bddfa: push eax; add al, 0x8b; inc esp; and al, 8; pop esi; ret; 
0x00106bb8: push eax; add al, 0x8b; mov esp, 0xf8f92c96; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x0017ac4e: push eax; add al, 0x8b; push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x000542b5: push eax; add al, 0x8d; inc edi; add al, 0xf; xchg edx, eax; ret; 
0x00023e63: push eax; add al, 0xeb; ret 0x44e8; 
0x00023f6d: push eax; add al, 0xeb; ret; 
0x0012b2d1: push eax; add al, 0xf6; ret 0x7401; 
0x0009c52e: push eax; add al, byte ptr [eax]; add byte ptr [ebp - 0x1a0a737d], cl; call dword ptr [ecx + 0x50]; 
0x00034b8a: push eax; add byte ptr [ecx], al; add byte ptr [eax], al; and eax, dword ptr [esp + 8]; ret; 
0x000f2876: push eax; add cl, byte ptr [ecx - 0x47f7b]; call dword ptr [edx - 0x77]; 
0x0008258a: push eax; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x0003cb58: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cbfb: push eax; add dword ptr [eax], eax; add byte ptr [eax + 0xae], bh; mov esi, 8; mov edx, ebp; call dword ptr gs:[0x10]; 
0x00037870: push eax; add dword ptr [ebx - 0x7ccfdbbc], ecx; ret; 
0x000665d5: push eax; add dword ptr [ecx + 0x5b088813], ecx; pop esi; pop edi; ret; 
0x000649b1: push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x000a8c77: push eax; add dword ptr [ecx - 0x3dbaf028], ecx; add esp, 0x18; pop ebx; ret; 
0x00169ad7: push eax; add eax, 0x18; push eax; call 0x169880; add esp, 0x2c; ret; 
0x00032c3c: push eax; add eax, 0xc483ffff; adc al, 0x5b; pop esi; ret; 
0x000a31e6: push eax; add eax, dword ptr [eax]; add byte ptr [ebp - 0x74eff8bc], cl; jl 0xa3215; or al, 0x89; ret 0xfa29; 
0x000658fb: push eax; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf44244c], cl; mov edi, 0xfc985d0; inc ebp; ret 0xc189; 
0x0013974d: push eax; add eax, eax; call 0x1f41a5b; pop ebx; ret; 
0x0007cf83: push eax; add eax, ecx; ljmp 0x450f:0x107f602; ret 0xec83; 
0x000c126b: push eax; add ecx, dword ptr [ebx + 0x5b0c2444]; pop esi; ret; 
0x000bde18: push eax; add ecx, dword ptr [ebx + 0x5e082444]; ret; 
0x00124beb: push eax; add ecx, dword ptr [edi]; dec eax; ret 0xf8c1; 
0x0007f11d: push eax; add esp, 0x20; pop ebx; pop esi; pop edi; ret; 
0x001755b3: push eax; and byte ptr [ebp + 0xe0249c], cl; add byte ptr [eax], al; push ebx; push eax; call dword ptr [edx + 8]; 
0x0008f196: push eax; and byte ptr [ebp - 0x5d], ah; jl 0x8f19c; add byte ptr [eax], al; ret; 
0x0014770a: push eax; and byte ptr [ebx + 0x420f1afe], al; ret 0xb60f; 
0x000810ab: push eax; and byte ptr [ecx + 0x488b0448], cl; or byte ptr [ecx + 0x8508910], cl; mov dword ptr [eax + 0x20], ecx; ret; 
0x00174f63: push eax; and byte ptr [edi + 0x50], dl; call dword ptr [edx + 4]; 
0x0006f1f2: push eax; and byte ptr [edi], cl; test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0006f5df: push eax; and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x0006f73c: push eax; and byte ptr [edi], cl; test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x0016c7af: push eax; and byte ptr [esi + 0x50], dl; call dword ptr [edx + 4]; 
0x00034865: push eax; and eax, 0x1000; ret; 
0x00034835: push eax; and eax, 0x100; ret; 
0x00034805: push eax; and eax, 0x2000; ret; 
0x00034745: push eax; and eax, 0x200; ret; 
0x000347a5: push eax; and eax, 0x4000; ret; 
0x000346b5: push eax; and eax, 0x400; ret; 
0x00034775: push eax; and eax, 0x8000; ret; 
0x00034715: push eax; and eax, 0x800; ret; 
0x00034915: push eax; and eax, 1; ret; 
0x000346e5: push eax; and eax, 2; ret; 
0x000347d5: push eax; and eax, 4; ret; 
0x00034685: push eax; and eax, 8; ret; 
0x00169ff3: push eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016a0f3: push eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016a0f3: push eax; arpl cx, di; call dword ptr [eax - 0x18]; ret; 
0x001153fb: push eax; call 0x115530; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0011545a: push eax; call 0x115710; add esp, 0x10; add esp, 0xc; ret; 
0x0005adb7: push eax; call 0x11f360; add esp, 0x1c; ret; 
0x0011e102: push eax; call 0x120d30; add esp, 0x10; add esp, 0xc; ret; 
0x00125c77: push eax; call 0x125d90; add esp, 0x1c; ret; 
0x0002ffd0: push eax; call 0x128710; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000a0f26: push eax; call 0x12ee30; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0014abb6: push eax; call 0x14aaa0; add esp, 0x14; pop ebx; pop esi; ret; 
0x00169adb: push eax; call 0x169880; add esp, 0x2c; ret; 
0x00160bb0: push eax; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d97: push eax; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x00042fd8: push eax; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x0002823c: push eax; call 0x23190; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0010be00: push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00034649: push eax; call 0x34370; add esp, 0x28; pop ebx; ret; 
0x001462b1: push eax; call 0x351e0; add esp, 0x10; add esp, 0xc; ret; 
0x00173d8a: push eax; call 0x351e0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000efe76: push eax; call 0x351e0; add esp, 0x14; pop ebx; pop esi; ret; 
0x0003f350: push eax; call 0x3f3b0; add esp, 0x1c; ret; 
0x00040e37: push eax; call 0x40920; add esp, 0x10; add esp, 0xc; ret; 
0x00040b67: push eax; call 0x40ea0; add esp, 0x10; add esp, 0xc; ret; 
0x0005bd44: push eax; call 0x5bbb0; add esp, 0x18; pop ebx; ret; 
0x00087fd3: push eax; call 0x8bb60; add esp, 0x1c; ret; 
0x0009aabb: push eax; call 0x8f990; add esp, 0x28; pop ebx; ret; 
0x0009b88b: push eax; call 0x8f990; add esp, 0x2c; ret; 
0x000dd5a9: push eax; call 0x8fc80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0007dc39: push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x0010ba81: push eax; call 0x8fc80; call dword ptr [esi]; 
0x0009a117: push eax; call 0x90b90; add esp, 0x1c; ret; 
0x0009762f: push eax; call 0x96c80; add esp, 0x18; pop ebx; ret; 
0x0016c5a0: push eax; call 0x98690; add esp, 0x18; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x000281fe: push eax; call 0x98690; add esp, 0x1c; ret; 
0x0003ddd9: push eax; call 0x98dd0; add esp, 0x1c; ret; 
0x0003deb3: push eax; call 0x99850; mov ecx, dword ptr [esp + 0x20]; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x001597b8: push eax; call 0xc2920; add esp, 0x1c; ret; 
0x000a0e08: push eax; call 0xc2d40; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x000df29b: push eax; call 0xdaeb0; add esp, 0x1c; ret; 
0x000dada5: push eax; call 0xdd5c0; add esp, 0x1c; ret; 
0x00134e89: push eax; call dword ptr [ebp + 0x14]; 
0x0005bca2: push eax; call dword ptr [ebp + 0x1c]; 
0x0018406b: push eax; call dword ptr [ebx + 0x24]; 
0x001840f2: push eax; call dword ptr [ebx + 0x28]; 
0x0016cb56: push eax; call dword ptr [ecx + 0x10]; 
0x000f1210: push eax; call dword ptr [ecx + 0x20]; 
0x0016c873: push eax; call dword ptr [ecx + 0xc]; 
0x0016c8fb: push eax; call dword ptr [ecx + 8]; 
0x0016cc12: push eax; call dword ptr [ecx]; 
0x0016ccff: push eax; call dword ptr [edx + 0x10]; 
0x00175b5d: push eax; call dword ptr [edx + 0x14]; 
0x001719c5: push eax; call dword ptr [edx + 0xc]; 
0x0016c7b2: push eax; call dword ptr [edx + 4]; 
0x00173dfd: push eax; call dword ptr [edx + 8]; 
0x00175d43: push eax; call dword ptr [edx]; 
0x0002aecd: push eax; call eax; 
0x00084497: push eax; call ebx; 
0x0009004d: push eax; call ecx; 
0x00154441: push eax; call edi; 
0x000a75ad: push eax; call edx; 
0x000a9b19: push eax; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x000425b9: push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x0009bd8c: push eax; cmpxchg dword ptr [edx], ecx; jne 0x9bda0; xor eax, eax; pop ebx; ret; 
0x001949d2: push eax; dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001871ad: push eax; dec esp; ret; 
0x000fef2b: push eax; inc dword ptr [ebx - 0x78f00306]; push cs; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x001212f2: push eax; inc eax; pop ebx; pop esi; ret; 
0x001469a1: push eax; inc eax; stc; call dword ptr [eax + 0x56]; 
0x00053003: push eax; insb byte ptr es:[edi], dx; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00040561: push eax; insb byte ptr es:[edi], dx; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00043259: push eax; int1; mov eax, edx; ret; 
0x000a0cd7: push eax; jbe 0xa0ce0; ret; 
0x000c15b3: push eax; jnp 0x5b1839fe; pop esi; ret; 
0x000be0f0: push eax; jnp 0x5e14053b; ret; 
0x000ebedc: push eax; lahf; stc; call dword ptr [eax - 0x18]; 
0x000edc14: push eax; lahf; stc; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x0005adb0: push eax; lea eax, [edx - 0x6cf83]; push eax; call 0x11f360; add esp, 0x1c; ret; 
0x000d4b4d: push eax; lea eax, [esp + 0x34]; push eax; push dword ptr [esi + 8]; call ebx; 
0x0002f54a: push eax; lea eax, [esp + 0x78]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x00024af1: push eax; lea edx, fs:[eax + 0x34]; mov eax, dword ptr [eax + 0x34]; test eax, eax; jne 0x24af0; ret; 
0x000bb1bd: push eax; les ecx, ptr [eax + eax]; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00154b7b: push eax; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x0015791d: push eax; mov dword ptr [esp + 0x10], eax; call 0x184910; add esp, 0x10; mov eax, dword ptr [esp]; call eax; 
0x0016024e: push eax; mov dword ptr [esp + 0x2c], eax; call 0x184910; mov dword ptr [esp], esi; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00024e35: push eax; mov dword ptr [esp + 0xc], eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call ecx; 
0x001586e1: push eax; mov eax, dword ptr [0x8d500000]; or esp, 0xffffffba; int1; call dword ptr [eax - 0x18]; 
0x0011ae43: push eax; mov eax, dword ptr [esi + 0x20]; push dword ptr [eax + ecx]; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00041a55: push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0015d2f3: push eax; mov eax, dword ptr [esp + 0x48]; call eax; 
0x000db95a: push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00089fdb: push eax; mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x00130cf3: push eax; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012ba94: push eax; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x00081743: push eax; or al, 0x31; ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x0009db3b: push eax; or al, 0x5b; pop esi; pop edi; ret; 
0x0008f1cd: push eax; or al, 0x65; mov dword ptr [0x78], eax; ret; 
0x000864f1: push eax; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a2574: push eax; or al, 0x8d; inc edx; jmp dword ptr [ecx]; 
0x00136151: push eax; or al, 0xf6; ret 0x7504; 
0x0003e6fa: push eax; or byte ptr [eax], al; add byte ptr [ebx + 0x688d04ec], al; call dword ptr [ebp + 0x56]; 
0x0011bd26: push eax; or byte ptr [ebp - 0x1220f36d], cl; call dword ptr [edx - 0x73]; 
0x0003124b: push eax; or byte ptr [ebp - 0x74d88a2e], al; inc ebx; add al, 0x83; ret; 
0x00150408: push eax; or byte ptr [ebp - 0xc], dh; ret; 
0x00087f7c: push eax; or byte ptr [ebx + 0x10], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x00087fba: push eax; or byte ptr [ebx + 0x12], dh; lea ecx, [edx + 1]; mov dword ptr [eax + 4], ecx; movzx eax, byte ptr [edx]; ret; 
0x000c12d1: push eax; or byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bde5e: push eax; or byte ptr [ebx + 0x5e082444], cl; ret; 
0x001769e9: push eax; or byte ptr [ebx - 0x137cef3c], al; or al, 0x8b; inc edi; add al, 0x57; call dword ptr [eax + 0x10]; 
0x0008d379: push eax; or byte ptr [ebx - 0x2fd6f7bf], cl; ret; 
0x0016ea01: push eax; or byte ptr [ebx - 0x3f7aef3c], al; je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00177237: push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000381e0: push eax; or byte ptr [edi], cl; mov bh, 0x93; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x001220a6: push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x00159f7a: push eax; or dword ptr [ebx + 0x5e], ebx; and edx, 0xf; mov eax, edx; ret; 
0x000be0b0: push eax; or eax, 0x824448b; pop esi; ret; 
0x000c1573: push eax; or eax, 0xc24448b; pop ebx; pop esi; ret; 
0x00098496: push eax; or eax, edx; xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x001216bc: push eax; pop ebx; pop esi; pop edi; ret; 
0x000c12ef: push eax; pop es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde7c: push eax; pop es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00167407: push eax; push 0; call 0x153e50; add esp, 0x1c; ret; 
0x0017401a: push eax; push 0; call 0x79f50; add esp, 0x18; pop ebx; ret; 
0x001351ee: push eax; push 0; push 0x2000002; call dword ptr [ebp + 0x14]; 
0x0015281e: push eax; push 0; push dword ptr [esp + 0x14]; push ebp; call edi; 
0x001279c0: push eax; push 0; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x0016b777: push eax; push 0xa; call 0x153e50; add esp, 0x1c; ret; 
0x00024f5c: push eax; push 1; call 0x120f60; add esp, 0x1c; ret; 
0x00167867: push eax; push 1; call 0x153e50; add esp, 0x1c; ret; 
0x0011b437: push eax; push 1; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x00167bd7: push eax; push 2; call 0x153e50; add esp, 0x1c; ret; 
0x0011b7dc: push eax; push 2; push dword ptr [esp + 0x30]; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00168c97: push eax; push 3; call 0x153e50; add esp, 0x1c; ret; 
0x00169ff7: push eax; push 4; call 0x153e50; add esp, 0x1c; ret; 
0x0016a677: push eax; push 5; call 0x153e50; add esp, 0x1c; ret; 
0x0011b6b3: push eax; push 5; push dword ptr [esp + 0x30]; push dword ptr [edi + 0xc]; call dword ptr [edi + 0x24]; 
0x0016aa17: push eax; push 6; call 0x153e50; add esp, 0x1c; ret; 
0x0016bcf7: push eax; push 7; call 0x153e50; add esp, 0x1c; ret; 
0x0016b097: push eax; push 8; call 0x153e50; add esp, 0x1c; ret; 
0x0016b4a7: push eax; push 9; call 0x153e50; add esp, 0x1c; ret; 
0x000c1593: push eax; push cs; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000be0d0: push eax; push cs; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00137073: push eax; push dword ptr [ebp - 0x4c]; push 0x2000005; call dword ptr [ebx + 0x14]; 
0x00137570: push eax; push dword ptr [ebp - 0x5c]; push ebx; call dword ptr [esi + 0x14]; 
0x000f1a42: push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8c82: push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a7583: push eax; push dword ptr [ebx + 0x24]; call edx; 
0x001744aa: push eax; push dword ptr [ebx + 0x48]; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00025d74: push eax; push dword ptr [ebx + 4]; call edi; 
0x0016ef33: push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x000434f9: push eax; push dword ptr [ecx]; sar byte ptr [ecx], 1; ret 0x920f; 
0x000c3ad2: push eax; push dword ptr [edi]; call ebx; 
0x000d4b52: push eax; push dword ptr [esi + 8]; call ebx; 
0x0011f272: push eax; push dword ptr [esp + 0x1c]; call 0x11f2b0; add esp, 0x1c; ret; 
0x00061716: push eax; push dword ptr [esp + 0x1c]; call 0x11f360; add esp, 0x1c; ret; 
0x001235ac: push eax; push dword ptr [esp + 0x1c]; call 0x123420; add esp, 0x18; pop ebx; ret; 
0x00125c47: push eax; push dword ptr [esp + 0x1c]; call 0x125ca0; add esp, 0x1c; ret; 
0x0013c777: push eax; push dword ptr [esp + 0x1c]; call 0x13c790; add esp, 0x1c; ret; 
0x0013cab7: push eax; push dword ptr [esp + 0x1c]; call 0x13cad0; add esp, 0x1c; ret; 
0x001766d5: push eax; push dword ptr [esp + 0x1c]; call 0x176420; add esp, 0x10; add esp, 0xc; ret; 
0x00179c14: push eax; push dword ptr [esp + 0x1c]; call 0x179a80; add esp, 0x1c; ret; 
0x000244b6: push eax; push dword ptr [esp + 0x1c]; call 0x24482; add esp, 0x1c; ret; 
0x000409f7: push eax; push dword ptr [esp + 0x1c]; call 0x40a10; add esp, 0x1c; ret; 
0x00042cc7: push eax; push dword ptr [esp + 0x1c]; call 0x42ce0; add esp, 0x1c; ret; 
0x001279f0: push eax; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x0009fb8e: push eax; push dword ptr [esp + 0x1c]; call 0x9fad0; add esp, 0x18; pop ebx; ret; 
0x000ac70c: push eax; push dword ptr [esp + 0x1c]; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x000dbe28: push eax; push dword ptr [esp + 0x1c]; call 0xdaeb0; add esp, 0x18; pop ebx; ret; 
0x0012a76d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0005acad: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0005acce: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66570; add esp, 0x1c; ret; 
0x0005afed: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x66600; add esp, 0x1c; ret; 
0x00080a7d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x00080b5e: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72c10; add esp, 0x1c; ret; 
0x000c3e1d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x72ca0; add esp, 0x1c; ret; 
0x00079f5d: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x79e20; add esp, 0x1c; ret; 
0x0005aafd: push eax; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x0015216f: push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0011f38b: push eax; push dword ptr [esp + 0x28]; push -0x64; call 0x8f110; add esp, 0x2c; ret; 
0x001412ce: push eax; push dword ptr [esp + 0x2c]; call 0x1407d0; add esp, 0x2c; ret; 
0x0018631e: push eax; push dword ptr [esp + 0x2c]; call 0x1861c0; add esp, 0x28; pop ebx; ret; 
0x0011f292: push eax; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x11f2e0; add esp, 0x2c; ret; 
0x001744c6: push eax; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00157cc2: push eax; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x00024de2: push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x00029ddc: push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002de37: push eax; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x58]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002c9ab: push eax; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x54]; call eax; 
0x0002a303: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; call esi; 
0x0002aec1: push eax; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x0002e67f: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call esi; 
0x0002d1d2: push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x0002bb68: push eax; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x68]; mov eax, dword ptr [esp + 0x58]; call eax; 
0x001352e7: push eax; push dword ptr [esp + 0xc]; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0003f34f: push eax; push eax; call 0x3f3b0; add esp, 0x1c; ret; 
0x00040e36: push eax; push eax; call 0x40920; add esp, 0x10; add esp, 0xc; ret; 
0x00040b66: push eax; push eax; call 0x40ea0; add esp, 0x10; add esp, 0xc; ret; 
0x000c4b52: push eax; push ebp; call esi; 
0x0008aa93: push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x000835ce: push eax; push ebx; call dword ptr [edi + 0x40]; 
0x0008854a: push eax; push ebx; call dword ptr [esi + 0x40]; 
0x00188cac: push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00134d7f: push eax; push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0008ef47: push eax; push ecx; call edx; 
0x001799fd: push eax; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a36: push eax; push ecx; push esi; call dword ptr [edx + 8]; 
0x00174f36: push eax; push edi; call dword ptr [eax + 0x14]; 
0x0016e123: push eax; push edi; call dword ptr [ecx + 0x18]; 
0x0016e217: push eax; push edi; call dword ptr [edx + 0x18]; 
0x00135d14: push eax; push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0005f865: push eax; push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016c44f: push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0016c44f: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x001733be: push eax; push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0008eac4: push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00082b32: push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00083b4d: push eax; push edx; push esi; call ecx; 
0x0016c528: push eax; push esi; call 0x16de30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x0009861f: push eax; push esi; call 0x8f1b0; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x0008bf4f: push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000838b4: push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0007b7aa: push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008976b: push eax; push esi; call dword ptr [edi + 0x38]; 
0x001895e4: push eax; push esi; call dword ptr [edi + 0x40]; 
0x00088926: push eax; push esi; call dword ptr [edi + 0x48]; 
0x00089e63: push eax; push esi; call dword ptr [edx + 0x48]; 
0x0008a0c7: push eax; push esi; call edx; 
0x000c3acc: push eax; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0015d949: push eax; push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x00135ae8: push eax; push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x001220af: push eax; push ss; ret; 
0x0003b8d5: push eax; ret; 
0x0013c923: push eax; rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x0008f18c: push eax; sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x00134ac6: push eax; sbb al, 0x89; ret; 
0x0005bbc6: push eax; sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x00027270: push eax; sbb dword ptr [edi], ecx; mov bh, 0x97; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x0014b674: push eax; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00126261: push eax; stc; call dword ptr [eax + 0x55]; 
0x001262e1: push eax; stc; call dword ptr [ecx + 0x51]; 
0x00126245: push eax; stc; call dword ptr [edx + 0x52]; 
0x00126d77: push eax; stc; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x0012738f: push eax; stc; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x0017236c: push eax; sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0003726a: push eax; sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x001772a0: push eax; sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x00174a07: push eax; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0013e873: push ebp; adc dword ptr [ecx], edi; ret 0x460f; 
0x000649b4: push ebp; add al, 0xc6; add byte ptr [0xfffb62e9], ah; jmp dword ptr [esi - 0x70]; 
0x001975a4: push ebp; add bh, bh; inc dword ptr [ecx + 0x42538c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00121fa7: push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00071dca: push ebp; add byte ptr [ebp - 0x157cf7bd], cl; xor byte ptr [ebx - 0x78f0f606], al; cmp eax, 0x89fffff2; ret 0xc083; 
0x000b00f7: push ebp; add byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000b8077: push ebp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0010a979: push ebp; and al, 0x8b; inc ebp; sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x0010a98e: push ebp; and al, 0x8b; inc ebp; xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0016d8c4: push ebp; call 0x114650; mov esi, dword ptr [esp + 0x48]; mov eax, dword ptr [esi + 0x20]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x00174a0b: push ebp; call dword ptr [eax + 0x10]; 
0x00088286: push ebp; call dword ptr [eax + 0x1c]; 
0x0008ad10: push ebp; call dword ptr [esi + 0x20]; 
0x0007bde2: push ebp; call dword ptr [esi + 0x40]; 
0x0016ea11: push ebp; call dword ptr [esi]; 
0x00174a22: push ebp; call eax; 
0x00152825: push ebp; call edi; 
0x000c4b53: push ebp; call esi; 
0x000bdcb8: push ebp; cdq; or al, 0; add ecx, 0x10d2b8; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99b8: push ebp; fmul qword ptr [eax + eax]; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0015dc1d: push ebp; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0005dd1f: push ebp; mov al, 0x89; inc ebp; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x000d3505: push ebp; mov al, 0x8b; inc ebp; aam 1; ret 0x5389; 
0x00137b76: push ebp; mov al, 0x8d; mov bl, 0x25; push esi; stc; call dword ptr [eax + 0x50]; 
0x00031357: push ebp; mov byte ptr [0x878d0010], al; sbb al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x000d373f: push ebp; mov eax, 0x1d4458b; ret 0x1689; 
0x00169e14: push ebp; mov eax, 0x8910c483; ret; 
0x00139d6d: push ebp; mov eax, 0xa9d8828d; stc; call dword ptr [eax - 0x73]; 
0x00173815: push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00120f92: push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x00035a6c: push ebp; mov esp, 0x2e55808d; stc; call dword ptr [eax - 0x18]; 
0x000c0fb8: push ebp; or al, 0; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00196aa4: push ebp; or edi, edi; inc dword ptr [ecx + 0x43038c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00132645: push ebp; out dx, eax; call dword ptr [eax + 0x6a]; 
0x001328b9: push ebp; out dx, eax; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x0015242e: push ebp; push 0; push edi; push ebx; call edx; 
0x0016ea3e: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016e9fb: push ebp; push dword ptr [esi + 0xc]; push edi; call dword ptr [eax + 8]; 
0x000dbc8d: push ebp; push dword ptr [esp + 0x30]; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00025d0e: push ebp; push dword ptr [esp + 0x30]; push dword ptr [ebx + 4]; call edi; 
0x00024ea3: push ebp; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x0002859c: push ebp; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0016c8fa: push ebp; push eax; call dword ptr [ecx + 8]; 
0x00153ba9: push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0011432f: push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0016e288: push ebp; push edi; call dword ptr [eax + 0x18]; 
0x00088402: push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007e935: push ebp; push edi; push ebx; call dword ptr [esi + 0x24]; 
0x000884cf: push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0008a621: push ebp; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00189778: push ebp; push edi; push esi; call dword ptr [ebx + 0x40]; 
0x00175d40: push ebp; push edi; push esi; push eax; call dword ptr [edx]; 
0x0007d9e5: push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0008aa94: push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x001791ca: push ebp; push esi; call edi; 
0x001769c5: push ebp; push esi; push 3; push edi; call dword ptr [eax]; 
0x00122067: push ebp; push esp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x000bdd21: push ebp; rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000f6f37: push ebp; ret 0xfff2; 
0x000310e0: push ebp; ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x00131a8e: push ebp; stc; call dword ptr [eax + 0x57]; 
0x00131afc: push ebp; stc; call dword ptr [eax + 0x6a]; 
0x00035a70: push ebp; stc; call dword ptr [eax - 0x18]; 
0x0013438e: push ebp; stc; call dword ptr [eax - 1]; 
0x00134c2b: push ebp; stc; call dword ptr [ebp - 1]; 
0x0013445e: push ebp; stc; call dword ptr [edx + 0x50]; 
0x00166028: push ebp; std; jmp dword ptr [esi - 0x70]; 
0x0014b9af: push ebp; sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000f096a: push ebx; adc al, 0x8d; and byte ptr [ebx + 0x30], 0xf9; call dword ptr [eax - 0x77]; 
0x0016efc6: push ebx; adc bl, ch; ret; 
0x000a75d9: push ebx; adc byte ptr [ecx + 0x5e5b0443], cl; pop edi; ret; 
0x00089c2d: push ebx; adc byte ptr [ecx], bh; ret 0x2773; 
0x00071449: push ebx; add al, 0; add byte ptr [ecx], al; ret; 
0x001946d8: push ebx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00185283: push ebx; add al, 0x29; ret 0xea39; 
0x000874e4: push ebx; add al, 0x5b; pop esi; ret; 
0x000fbb99: push ebx; add al, 0x74; xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x000864bb: push ebx; add al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001346df: push ebx; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x000c71c1: push ebx; add al, 0x83; ret; 
0x0005babf: push ebx; add al, 0x88; or byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0010d821: push ebx; add al, 0x8b; inc ebx; or byte ptr [ecx], bh; ret 0x840f; 
0x00081d31: push ebx; add al, 0xc1; cli; add ch, bl; ljmp 0x5bff:0xffffffb8; ret; 
0x00027298: push ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; sti; ret 9; 
0x001206b1: push ebx; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00040942: push ebx; add cl, byte ptr [ecx - 0x7c3fcef0]; les ecx, ptr [eax]; pop ebx; ret; 
0x0014a868: push ebx; add dword ptr [ecx - 0x72e3dbbc], ecx; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x0018406d: push ebx; and al, 0x89; ret; 
0x00026101: push ebx; and byte ptr [ebp - 0x720d8b2e], al; nop; or al, 0x70; stc; call dword ptr [edx - 0x73]; 
0x001389be: push ebx; and byte ptr [ebx - 0x137ce785], cl; add al, 0x83; ret; 
0x00157ab6: push ebx; call 0x184910; add esp, 0x10; mov eax, ebx; call eax; 
0x00160f46: push ebx; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x0002f7b4: push ebx; call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x0013fd04: push ebx; call 0x614b0; add esp, 0x28; mov eax, ebx; pop ebx; ret; 
0x0016cf91: push ebx; call dword ptr [eax + 0x10]; 
0x0016d4ab: push ebx; call dword ptr [eax + 0x14]; 
0x00172dd5: push ebx; call dword ptr [eax + 0x18]; 
0x00179ecb: push ebx; call dword ptr [eax + 0x20]; 
0x000894b7: push ebx; call dword ptr [eax + 0x24]; 
0x00081713: push ebx; call dword ptr [eax + 0xc]; 
0x0016eddf: push ebx; call dword ptr [eax + 4]; 
0x0016cf81: push ebx; call dword ptr [eax]; 
0x0016d0aa: push ebx; call dword ptr [eax]; mov eax, dword ptr [ebx + 4]; add esp, 0x14; push ebx; call dword ptr [eax + 0x10]; 
0x0007da65: push ebx; call dword ptr [ebp + 0x1c]; 
0x0008a4f4: push ebx; call dword ptr [ebp + 0x40]; 
0x0008c872: push ebx; call dword ptr [ebp + 0xc]; 
0x0008c68c: push ebx; call dword ptr [edi + 0x18]; 
0x00188ef1: push ebx; call dword ptr [edi + 0x24]; 
0x000835cf: push ebx; call dword ptr [edi + 0x40]; 
0x00088bb1: push ebx; call dword ptr [edi + 0x44]; 
0x0008cc35: push ebx; call dword ptr [edi + 0xc]; 
0x000813c6: push ebx; call dword ptr [esi + 0x10]; 
0x00137574: push ebx; call dword ptr [esi + 0x14]; 
0x00081c31: push ebx; call dword ptr [esi + 0x18]; 
0x0007e937: push ebx; call dword ptr [esi + 0x24]; 
0x0008801a: push ebx; call dword ptr [esi + 0x30]; 
0x000884d1: push ebx; call dword ptr [esi + 0x3c]; 
0x0008854b: push ebx; call dword ptr [esi + 0x40]; 
0x0008b841: push ebx; call dword ptr [esi + 0xc]; 
0x000932a2: push ebx; call dword ptr gs:[0x10]; 
0x0007a7ab: push ebx; call eax; 
0x0012ab2d: push ebx; call edx; 
0x0012aad5: push ebx; call esi; 
0x0017429e: push ebx; dec esp; push edx; call eax; 
0x0012609b: push ebx; dec esp; stc; call dword ptr [eax + 0x55]; 
0x000efe79: push ebx; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00094bf7: push ebx; inc eax; stc; call dword ptr [eax + 0x6a]; 
0x000fb677: push ebx; inc esi; pop eax; mov edx, 0x20; cmovne eax, edx; ret; 
0x00029dd7: push ebx; lea eax, [esp + 0x6c]; push eax; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; call edi; 
0x0002e677: push ebx; lea eax, [esp + 0x80]; push eax; push dword ptr [esp + 0x64]; push dword ptr [esp + 0x64]; call esi; 
0x00053001: push ebx; lea edx, [eax + 0x6c]; lea ecx, [ecx + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0004055f: push ebx; lea edx, [eax + 0x6c]; xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0017782b: push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0011f60f: push ebx; mov eax, 0x14b; mov ebx, dword ptr [esp + 8]; xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011456f: push ebx; mov eax, 0x21; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0006133f: push ebx; mov eax, 0x26; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011f1ef: push ebx; mov eax, 0x27; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011ff9f: push ebx; mov eax, 0x28; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0010e454: push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00122aff: push ebx; mov eax, 0x2d; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e1ff: push ebx; mov eax, 0x34; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x001147bf: push ebx; mov eax, 0x3f; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012220f: push ebx; mov eax, 0x4c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000dc35f: push ebx; mov eax, 0x4f; mov ecx, dword ptr [esp + 8]; xor ebx, ebx; call dword ptr gs:[0x10]; 
0x001206af: push ebx; mov eax, 0x53; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012a9ef: push ebx; mov eax, 0x5c; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00123f3f: push ebx; mov eax, 0x5d; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012288f: push ebx; mov eax, 0x60; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00120bbf: push ebx; mov eax, 0xa; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0003ccff: push ebx; mov eax, 0xb0; mov ebx, dword ptr [esp + 8]; mov ecx, 8; call dword ptr gs:[0x10]; 
0x001221bf: push ebx; mov eax, 0xbf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012e40f: push ebx; mov eax, 0xc3; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d34f: push ebx; mov eax, 0xc4; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d0cf: push ebx; mov eax, 0xc5; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x001145df: push ebx; mov eax, 0xf; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0012cd7f: push ebx; mov eax, 0xfe; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009f59f: push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0011eccf: push ebx; mov eax, 9; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0005f867: push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00188cad: push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x001348d2: push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0013dc44: push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00130f3d: push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00190509: push ebx; mov ebx, 0x18; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0013038b: push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x0012940a: push ebx; mov ebx, 0xfee1dead; mov edx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000a089e: push ebx; mov ebx, 1; sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00130879: push ebx; mov ebx, 2; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00098502: push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x001131e7: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fcc1: push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00040755: push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dc7b: push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00061396: push ebx; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00115c3a: push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012ec40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e710: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f230: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c00: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114800: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e620: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e680: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114670: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e910: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e790: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e450: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128660: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e530: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e560: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c260: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e880: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf30: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec90: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e20: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f40: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f10: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114620: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127930: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127850: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127550: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127580: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab0: push ebx; mov edx, dword ptr [esp + 0x10]; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x000ba67b: push ebx; movq qword ptr [edi + 0x30], mm7; pop edi; pop esi; pop ebx; ret; 
0x00171669: push ebx; or al, 0x5b; mov eax, 1; pop esi; pop edi; ret; 
0x00182c15: push ebx; or al, 0x5b; ret; 
0x0013477f: push ebx; or al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003b4fb: push ebx; or al, 0x83; les ecx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x000a7350: push ebx; or al, 0x8b; adc eax, dword ptr [ecx]; ret 0x1089; 
0x0008e7a0: push ebx; or byte ptr [ecx + 0x4c48302], cl; pop ebx; pop esi; ret; 
0x000864ee: push ebx; or byte ptr [ecx - 0x3b7cf3b0], cl; add al, 0x5b; pop esi; ret; 
0x000a164a: push ebx; or dh, dh; ret 0xf0f; 
0x000fb60f: push ebx; out dx, eax; add byte ptr [eax], al; mov edx, 0x20; cmovne eax, edx; ret; 
0x00175a59: push ebx; pop ebx; cld; jmp dword ptr [esi - 0x70]; 
0x0010b71c: push ebx; pop ebx; mov eax, 0xc; pop esi; pop edi; ret; 
0x00138fd1: push ebx; push 0; push 0x1000001; call eax; 
0x0013916f: push ebx; push 0; push 0x1000002; call edx; 
0x00138c14: push ebx; push 0; push 0x1000005; call edx; 
0x00134d80: push ebx; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x0007eb57: push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0013852f: push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x000c3a2c: push ebx; push dword ptr [edi]; call esi; 
0x0007c5c8: push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x0002f3fb: push ebx; push dword ptr [esp + 0x58]; push dword ptr [esp + 0x54]; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x00029144: push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002970e: push ebx; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x001755bc: push ebx; push eax; call dword ptr [edx + 8]; 
0x001216bb: push ebx; push eax; pop ebx; pop esi; pop edi; ret; 
0x00153ba8: push ebx; push ebp; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x00189a05: push ebx; push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x00079948: push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0005f7c2: push ebx; push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00179ad4: push ebx; push esi; call dword ptr [eax + 4]; 
0x00081b98: push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000846b1: push ebx; push esi; call eax; 
0x00136bad: push ebx; push esi; stc; call dword ptr [eax - 0x75]; 
0x00138ebd: push ebx; sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x000fb767: push ebx; setne al; ret; 
0x001263cd: push ebx; stc; call dword ptr [eax + 0x55]; 
0x0012b81f: push ebx; stc; call dword ptr [eax + 0x56]; 
0x0012a4d0: push ebx; stc; call dword ptr [eax + 0x57]; 
0x0012a6e6: push ebx; stc; call dword ptr [eax + 0x68]; 
0x000609c4: push ebx; stc; call dword ptr [eax + 0x6a]; 
0x00128f4c: push ebx; stc; call dword ptr [eax - 1]; 
0x0012a16c: push ebx; stc; call dword ptr [ebx + 0x57]; 
0x0012a2cf: push ebx; stc; call dword ptr [edi + 0x50]; 
0x0012810d: push ebx; stc; call dword ptr [edx + 0x50]; 
0x001263b1: push ebx; stc; call dword ptr [edx + 0x52]; 
0x001747b4: push ebx; sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000a7493: push ebx; sub dh, dh; ret 0x7502; 
0x0018de8a: push ebx; sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0007ee82: push ebx; xor al, 0x89; ret 0xc483; 
0x001390ad: push ebx; xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x000512b9: push ebx; xor dh, bh; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x00122388: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00122328: push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0003de0b: push ebx; xor ebx, ebx; mov edx, dword ptr [esp + 0x10]; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x00042574: push ebx; xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0008fc94: push ebx; xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00087509: push ecx; adc al, 0xeb; ret; 
0x00198b11: push ecx; adc al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00159755: push ecx; adc byte ptr [edx + 8], dh; setne al; movzx eax, al; neg eax; ret; 
0x0002f7b7: push ecx; adc eax, 0x24348900; call ebx; 
0x0019443b: push ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016eddc: push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ee1b: push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000b3e43: push ecx; add al, 0x5b; ret; 
0x00079ee8: push ecx; add al, 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x000614a6: push ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0002624a: push ecx; call 0x184910; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x0007fb83: push ecx; call 0x817d0; add esp, 0x1c; ret; 
0x001797db: push ecx; call dword ptr [eax + 4]; 
0x00179813: push ecx; call dword ptr [eax]; 
0x0012088b: push ecx; call dword ptr [edx + 0x56]; 
0x0008eb4e: push ecx; call eax; 
0x0008ef48: push ecx; call edx; 
0x0010e4d8: push ecx; cmp eax, 0xfffff001; jae 0x24f10; ret; 
0x0016bcfb: push ecx; cmp esi, 0x1cc483ff; ret; 
0x00079cb4: push ecx; fst dword ptr [eax]; add byte ptr [ecx + 0x1c315cc6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000efb52: push ecx; inc edi; stc; call dword ptr [eax - 0x18]; 
0x000c7313: push ecx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c52c8: push ecx; lea ecx, [esp + 0x44]; push ecx; push dword ptr [edi + 8]; call ebx; 
0x000c4559: push ecx; lea ecx, [esp + 0x54]; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x0012a8de: push ecx; lea esp, [ebp - 8]; pop ebx; pop esi; pop ebp; ret; 
0x000e7c5f: push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x00114330: push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x0008e962: push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000c455e: push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x001836bd: push ecx; or al, 0x39; ret 0x820f; 
0x0016c452: push ecx; or al, 0x83; les edx, ptr [eax]; add esp, 0xc; ret; 
0x00174318: push ecx; or al, 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0005e862: push ecx; or al, 0xf6; ret 0xf01; 
0x0014b003: push ecx; or bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x0017e60e: push ecx; or byte ptr [ecx], bh; ret 0x3c75; 
0x0006706c: push ecx; or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x00141157: push ecx; pop ecx; stc; dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x000b3ea5: push ecx; pop es; pop ebx; ret; 
0x00175c2c: push ecx; push 0xd; push eax; call dword ptr [edx + 0x14]; 
0x0012ab2a: push ecx; push 3; push ebx; call edx; 
0x00175b5a: push ecx; push 4; push eax; call dword ptr [edx + 0x14]; 
0x0016d5e1: push ecx; push 5; push ebx; call dword ptr [eax]; 
0x00175b6d: push ecx; push 6; push eax; call dword ptr [edx + 0x14]; 
0x0013942a: push ecx; push dword ptr [ebp - 0xc0]; push dword ptr [ebp - 0x11c]; call edx; 
0x00139290: push ecx; push dword ptr [ebp - 0xc0]; push ebx; call eax; 
0x000a7505: push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x000c5238: push ecx; push dword ptr [edi + 8]; call ebx; 
0x0007c62a: push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0008e9dc: push ecx; push dword ptr [esp + 0x3c]; call eax; 
0x00171ade: push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x0003f533: push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x00177239: push ecx; push eax; call dword ptr [edx + 0xc]; 
0x00173dfc: push ecx; push eax; call dword ptr [edx + 8]; 
0x0008a0c6: push ecx; push eax; push esi; call edx; 
0x0007da64: push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00171add: push ecx; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x001769e6: push ecx; push edi; call dword ptr [eax + 8]; 
0x0008ed24: push ecx; push edi; call eax; 
0x0008eac2: push ecx; push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008e154: push ecx; push edx; call 0x1827a0; add esp, 0x1c; ret; 
0x0017a16a: push ecx; push edx; call dword ptr [eax + 0x20]; 
0x0017a13c: push ecx; push edx; call dword ptr [eax + 0x24]; 
0x0017968c: push ecx; push edx; call dword ptr [eax + 4]; 
0x001792fa: push ecx; push edx; call dword ptr [eax]; 
0x0016f16c: push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000df299: push ecx; push edx; push eax; call 0xdaeb0; add esp, 0x1c; ret; 
0x001799fe: push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a37: push ecx; push esi; call dword ptr [edx + 8]; 
0x00189a06: push ecx; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0008e6ec: push ecx; sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00126030: push ecx; stc; call dword ptr [eax + 0x55]; 
0x001262fb: push ecx; stc; call dword ptr [edx + 0x52]; 
0x00034c4d: push ecx; sub al, 0x81; ret 0x200; 
0x000327ec: push ecx; sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x0012aace: push ecx; sub esp, 4; push edi; push 0; push ebx; call esi; 
0x000ba2e2: push edi; adc al, 0x5f; pop esi; pop ebx; ret; 
0x000bba43: push edi; adc byte ptr [eax + 0x478d184f], cl; sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x000ba363: push edi; adc byte ptr [eax + 0x5e5f184f], cl; pop ebx; ret; 
0x000ba463: push edi; adc byte ptr [eax + 0x5e5f204f], cl; pop ebx; ret; 
0x00090659: push edi; adc byte ptr [ebp + 0x313974d2], al; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000bba20: push edi; adc byte ptr [ebp + 0x5e5f1847], cl; pop ebx; ret; 
0x000bbb30: push edi; adc byte ptr [ebp + 0x5e5f2047], cl; pop ebx; ret; 
0x000bbab3: push edi; adc byte ptr [ecx + 0x478d184f], cl; sbb al, 0x5f; pop esi; pop ebx; ret; 
0x000ba3a3: push edi; adc byte ptr [ecx + 0x5e5f174f], cl; pop ebx; ret; 
0x000ba3c3: push edi; adc byte ptr [ecx + 0x5e5f184f], cl; pop ebx; ret; 
0x000ba340: push edi; adc byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bba64: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000ba384: push edi; adc byte ptr [esi - 0x77], ah; dec edi; sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000ba128: push edi; add al, 0x5f; pop esi; pop ebx; ret; 
0x0013c633: push edi; add al, 0x89; dec edi; or byte ptr [ebx + 0x5e], bl; pop edi; ret 4; 
0x0006f75a: push edi; add al, 0x8b; inc edi; or byte ptr [ecx], bh; ret 0x840f; 
0x0015b76f: push edi; add al, 0xf7; ret 0xfffd; 
0x0008cb0d: push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000ba10a: push edi; add bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0015a95a: push edi; add byte ptr [eax - 0x73], dl; xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000bb7aa: push edi; add cl, byte ptr [ebp + 0x5e5f0347]; pop ebx; ret; 
0x0009de25: push edi; add dword ptr [ecx], edi; ret 0x830f; 
0x000ba148: push edi; add ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x000bb818: push edi; add ecx, dword ptr [ebp + 0x5e5f0747]; pop ebx; ret; 
0x0007a476: push edi; add ecx, ebp; ret; 
0x0011ebcd: push edi; add esp, 0x1010; pop ebx; pop esi; pop edi; ret; 
0x0002703a: push edi; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x000a08c3: push edi; call 0x23190; mov eax, dword ptr [esp + 0x1c]; mov dword ptr [esp], eax; call esi; 
0x0009e205: push edi; call 0x3d370; mov edx, dword ptr [esp + 0x1c]; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000a9d72: push edi; call 0xc24ead77; ret; 
0x000acaa2: push edi; call 0xc24edaa7; ret; 
0x0016ea42: push edi; call dword ptr [eax + 0x10]; 
0x00174f37: push edi; call dword ptr [eax + 0x14]; 
0x0016e191: push edi; call dword ptr [eax + 0x18]; 
0x00080037: push edi; call dword ptr [eax + 0x1c]; 
0x00174f4e: push edi; call dword ptr [eax + 4]; 
0x0016e9ff: push edi; call dword ptr [eax + 8]; 
0x001769c9: push edi; call dword ptr [eax]; 
0x00082b34: push edi; call dword ptr [ebx + 0x38]; 
0x0016e124: push edi; call dword ptr [ecx + 0x18]; 
0x0016e218: push edi; call dword ptr [edx + 0x18]; 
0x0008ed25: push edi; call eax; 
0x000ba4a1: push edi; call ptr [edi + 0x5e]; pop ebx; ret; 
0x000fda01: push edi; dec dword ptr [ecx - 0x7b17dbcc]; push edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00182775: push edi; fdivr st(7); jmp dword ptr [esi - 0x70]; 
0x00058bac: push edi; in al, 0xff; dec dword ptr [ecx - 0x361f6b]; call dword ptr [eax - 0x75]; 
0x000fda09: push edi; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x000bbb10: push edi; jge 0x5e6ada5e; pop ebx; ret; 
0x000ba420: push edi; maxps xmm3, xmmword ptr [esi + 0x5b]; ret; 
0x00119585: push edi; mov dh, 0xff; jmp dword ptr [ebp - 0x75]; 
0x001544bf: push edi; mov dword ptr [esi], ecx; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000413e3: push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00174f7c: push edi; mov eax, dword ptr [esp + 0x28]; call eax; 
0x001736bb: push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0016dbf7: push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0016d91b: push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0003b2a4: push edi; or al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret 4; 
0x0005c208: push edi; or al, 0xf6; ret 0x7401; 
0x0005eef8: push edi; or al, 0xf6; ret 0xf40; 
0x000bb84c: push edi; or byte ptr [ebp + 0x5e5f0947], cl; pop ebx; ret; 
0x000bb86e: push edi; or byte ptr [ebp + 0x5e5f0a47], cl; pop ebx; ret; 
0x000bb8ac: push edi; or byte ptr [ebp + 0x5e5f0c47], cl; pop ebx; ret; 
0x00082b2b: push edi; or byte ptr [ecx - 0x2fd643bb], cl; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x000ba16c: push edi; or byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bbad0: push edi; or eax, 0x5f1d478d; pop esi; pop ebx; ret; 
0x000ba1ac: push edi; pop es; pop edi; pop esi; pop ebx; ret; 
0x0012aad2: push edi; push 0; push ebx; call esi; 
0x00135d15: push edi; push 0x2000003; call dword ptr [ebx + 0x14]; 
0x0012aae6: push edi; push 1; push ebx; call esi; 
0x0012aaf9: push edi; push 2; push ebx; call esi; 
0x000a1e33: push edi; push cs; add byte ptr [ecx + 0x19afdec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000ba400: push edi; push cs; pop edi; pop esi; pop ebx; ret; 
0x0007ff3b: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c938: push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0016f651: push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x000c4e75: push edi; push dword ptr [esp + 0x30]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x00079949: push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x00171a90: push edi; push eax; call dword ptr [ecx + 8]; 
0x00174f65: push edi; push eax; call dword ptr [edx + 4]; 
0x0008eac3: push edi; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00120f91: push edi; push ebp; mov ebx, dword ptr [edi]; mov ebp, dword ptr [edi + 8]; mov edi, dword ptr [edi + 4]; call dword ptr gs:[0x10]; 
0x0016d4aa: push edi; push ebx; call dword ptr [eax + 0x14]; 
0x0007e936: push edi; push ebx; call dword ptr [esi + 0x24]; 
0x000884d0: push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0008a622: push edi; push ebx; call dword ptr [esi + 0x40]; 
0x00152431: push edi; push ebx; call edx; 
0x0005f866: push edi; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x000614a5: push edi; push ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00041a80: push edi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008e960: push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00189779: push edi; push esi; call dword ptr [ebx + 0x40]; 
0x0005f7c3: push edi; push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0016dc2e: push edi; push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x00175d41: push edi; push esi; push eax; call dword ptr [edx]; 
0x0008a4f2: push edi; push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x00172dd1: push edi; push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x000956f0: push edi; ret 0; 
0x0010e3c2: push edi; ret 0x67; 
0x0005b405: push edi; scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013cb0c: push edi; stc; call dword ptr [eax + 0x6a]; 
0x0013a0b6: push edi; stc; call dword ptr [eax - 0x18]; 
0x001518b5: push edi; sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x000300b8: push edi; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0008bde8: push edi; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0017abe5: push edi; test al, 0xf0; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x000fb6ea: push edi; xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x00175ac6: push edx; adc byte ptr [ebx + 0x4508b03], cl; mov dword ptr [esp], eax; call dword ptr [edx + 0x10]; 
0x001a85e8: push edx; adc byte ptr [ecx], ch; ret 0xe183; 
0x001a3f86: push edx; adc byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x00194727: push edx; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x000838ee: push edx; add al, 0x8b; jl 0x83917; or byte ptr [ebx + 0x290c246c], cl; ret 0xfac1; 
0x00029ab8: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000287e1: push edx; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000b3d2a: push edx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x001a3f9b: push edx; and byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x0008e155: push edx; call 0x1827a0; add esp, 0x1c; ret; 
0x000268f4: push edx; call 0x184910; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x0009aa8f: push edx; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x0009757a: push edx; call 0x96c80; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x001763f5: push edx; call dword ptr [eax + 0x10]; 
0x0017a16b: push edx; call dword ptr [eax + 0x20]; 
0x0017a13d: push edx; call dword ptr [eax + 0x24]; 
0x0010db2a: push edx; call dword ptr [eax + 0xc]; 
0x0017968d: push edx; call dword ptr [eax + 4]; 
0x001792fb: push edx; call dword ptr [eax]; 
0x0007e459: push edx; call dword ptr [ebx + 0x1c]; 
0x0016c450: push edx; call dword ptr [ecx + 0xc]; 
0x0016c450: push edx; call dword ptr [ecx + 0xc]; add esp, 0x10; add esp, 0xc; ret; 
0x001733bf: push edx; call dword ptr [ecx + 0xc]; add esp, 0x1c; ret; 
0x0003effa: push edx; call eax; 
0x0007e5f9: push edx; cli; jmp dword ptr [esi - 0x70]; 
0x001a432b: push edx; fisub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a40eb: push edx; fisub word ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a43bb: push edx; fldenv [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a418b: push edx; frstor dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a445b: push edx; fsub dword ptr [esi + 0xf]; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x00040aa7: push edx; imul edx, dword ptr [eax + eax], -0x7f; ret; 
0x000c4b49: push edx; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0007a7a4: push edx; lea edx, [ebx + 0x28]; push edx; push 1; push ebx; call eax; 
0x0008448e: push edx; lea edx, [esi + 0x28]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0007b18b: push edx; lea edx, [esi + 0x28]; push edx; push 1; push esi; call eax; 
0x0008456d: push edx; lea edx, [esi + 4]; push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x0016cf77: push edx; lea edx, [esi - 0xcfc34]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016d0a0: push edx; lea edx, [esi - 0xcfc34]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001a4349: push edx; ljmp 0xf66:0xd1ef0f66; cmp byte ptr [edi], dl; ret 0x830f; 
0x0016f16d: push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0008eac5: push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00041a81: push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x00084492: push edx; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000fb658: push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x001755b1: push edx; mov edx, dword ptr [eax + 0x20]; lea ebx, [esp + 0xe0]; push ebx; push eax; call dword ptr [edx + 8]; 
0x0018105a: push edx; movsd dword ptr es:[edi], dword ptr [esi]; sti; jmp dword ptr [esi - 0x70]; 
0x000a0c44: push edx; or al, 0x83; ret; 
0x00159f10: push edx; or byte ptr [ebx + 0x5e], bl; mov eax, edx; ret; 
0x000a1144: push edx; or byte ptr [ecx], al; lds edi, ptr [ecx]; ret; 
0x0014ea51: push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x000acb5d: push edx; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x00087230: push edx; pop eax; mov eax, dword ptr [edx + 0x10]; sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x00087100: push edx; pop eax; mov eax, dword ptr [edx + 0x1c]; sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00154b8e: push edx; pop esi; stc; call dword ptr [eax - 0x18]; 
0x0016cf7e: push edx; push 1; push ebx; call dword ptr [eax]; 
0x0007a7a8: push edx; push 1; push ebx; call eax; 
0x0007b18f: push edx; push 1; push esi; call eax; 
0x0016d0a7: push edx; push 2; push ebx; call dword ptr [eax]; 
0x0016d151: push edx; push 4; push ebx; call dword ptr [eax]; 
0x0003032b: push edx; push dword ptr [eax + 0x10e4]; call 0x12b5e0; add esp, 0x1c; ret; 
0x0011ae4a: push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00127a53: push edx; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x0012a7b9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x129ff0; add esp, 0x1c; ret; 
0x0013a729: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x66260; add esp, 0x1c; ret; 
0x0013a979: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x72940; add esp, 0x1c; ret; 
0x00139859: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x85e90; add esp, 0x1c; ret; 
0x0013a119: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x860f0; add esp, 0x1c; ret; 
0x0013afa9: push edx; push dword ptr [esp + 0x20]; push dword ptr [esp + 0x1c]; call 0x86520; add esp, 0x1c; ret; 
0x0008eec6: push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0013b59c: push edx; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x0013b94a: push edx; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013b54a: push edx; push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x000c488f: push edx; push dword ptr [esp + 0x2c]; push dword ptr [edi]; mov eax, dword ptr [esp + 0x38]; call eax; 
0x0012c744: push edx; push dword ptr [esp + 0x30]; call 0x12c6a0; add esp, 0x2c; ret; 
0x0008ad0b: push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00115459: push edx; push eax; call 0x115710; add esp, 0x10; add esp, 0xc; ret; 
0x000281fd: push edx; push eax; call 0x98690; add esp, 0x1c; ret; 
0x000df29a: push edx; push eax; call 0xdaeb0; add esp, 0x1c; ret; 
0x000dada4: push edx; push eax; call 0xdd5c0; add esp, 0x1c; ret; 
0x0005bca1: push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x0018406a: push edx; push eax; call dword ptr [ebx + 0x24]; 
0x001840f1: push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000f120f: push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001760bc: push edx; push eax; call edi; 
0x00089fda: push edx; push eax; mov eax, edi; push esi; call dword ptr [eax + 0x40]; 
0x000244b5: push edx; push eax; push dword ptr [esp + 0x1c]; call 0x24482; add esp, 0x1c; ret; 
0x000835cd: push edx; push eax; push ebx; call dword ptr [edi + 0x40]; 
0x00088549: push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x00188cab: push edx; push eax; push ebx; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x000838b3: push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x0008976a: push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x001895e3: push edx; push eax; push esi; call dword ptr [edi + 0x40]; 
0x0016d4cd: push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00179eca: push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00172e6c: push edx; push ebx; call dword ptr [eax + 0x24]; 
0x0016edde: push edx; push ebx; call dword ptr [eax + 4]; 
0x0016ee1d: push edx; push ebx; call dword ptr [eax]; 
0x0008037a: push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000e7dd9: push edx; push ebx; call eax; 
0x000846b0: push edx; push ebx; push esi; call eax; 
0x001797da: push edx; push ecx; call dword ptr [eax + 4]; 
0x00179812: push edx; push ecx; call dword ptr [eax]; 
0x0008ec22: push edx; push ecx; call eax; 
0x0008e961: push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0008ed23: push edx; push ecx; push edi; call eax; 
0x00174f4d: push edx; push edi; call dword ptr [eax + 4]; 
0x00082b33: push edx; push edi; call dword ptr [ebx + 0x38]; 
0x0013d0b2: push edx; push edi; call eax; 
0x0016f650: push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00199710: push edx; push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018972f: push edx; push esi; call dword ptr [eax + 0x48]; 
0x00179b1e: push edx; push esi; call dword ptr [eax]; 
0x0013d18f: push edx; push esi; call eax; 
0x00083b4e: push edx; push esi; call ecx; 
0x0007557a: push edx; ret 0; 
0x001a47c8: push edx; ret 0xc2bb; 
0x0007c74a: push edx; ret; 
0x00139997: push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x00104b8d: push edx; sbb al, 0xf6; ret 0xf08; 
0x001a47eb: push edx; shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a489b: push edx; shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a474b: push edx; shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0012637f: push edx; stc; call dword ptr [eax + 0x55]; 
0x00126397: push edx; stc; call dword ptr [ecx + 0x51]; 
0x001397d1: push edx; sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x00079aba: push edx; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0008c376: push edx; xor al, 0x85; sal byte ptr [ebp - 0x1c], cl; ret; 
0x001a3fb0: push edx; xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x000620b0: push es; aad 0x83; ret 0x101; 
0x000f5a5a: push es; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x001057f9: push es; adc byte ptr [ebx - 0x75], dh; pop eax; add al, 0xf7; ret; 
0x000ba714: push es; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00199711: push es; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019993c: push es; add al, 0; add ebx, dword ptr [ebx + edi*4]; jmp ebx; 
0x0008fd58: push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008fd0c: push es; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0013dc4c: push es; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; pop ebx; ret; 
0x0009f5f3: push es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a4382: push es; add byte ptr [eax], al; pop ebx; ret; 
0x000b391f: push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b9eba: push es; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0009055c: push es; add byte ptr [ebx + 0x548b084e], cl; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0014820d: push es; add byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x00030418: push es; add byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x00034e00: push es; add byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x000c8569: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x10; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000cb6e9: push es; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x000d8cd3: push es; add byte ptr [ebx - 0x364b43], cl; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x00124847: push es; add byte ptr [ecx + 0x1185cbc2], al; add byte ptr [ebx + 0x11082], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x00123bfc: push es; add byte ptr [ecx + 0x119216c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000ac5ea: push es; add byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x000ac6aa: push es; add byte ptr [ecx + 0x6428d02], cl; pop ebx; pop esi; ret; 
0x00090332: push es; add byte ptr [ecx], bh; ret; 
0x001a964b: push es; add byte ptr [edi], cl; test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x000815b1: push es; add dh, byte ptr [ebp + 0x7b]; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000d5ccf: push es; add eax, 0x8d2e0000; je 0xd5cfd; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x0008f469: push es; add esp, 0x14; pop ebx; pop esi; ret; 
0x0014e909: push es; add esp, 0x18; pop ebx; ret; 
0x0003d97d: push es; add esp, 0x24; pop ebx; pop esi; ret; 
0x00120f4a: push es; add esp, 0x34; pop ebx; pop esi; ret; 
0x0017a974: push es; add esp, 0x54; pop ebx; pop esi; ret; 
0x0008bd75: push es; add esp, 4; pop ebx; pop esi; ret; 
0x00139751: push es; and eax, 1; pop ebx; ret; 
0x00042efc: push es; bsr eax, eax; add eax, 1; ret; 
0x000435c1: push es; bsr eax, edx; xor eax, 0x1f; ret; 
0x0016aa19: push es; call 0x153e50; add esp, 0x1c; ret; 
0x0016aa38: push es; call 0x153f30; add esp, 0x1c; ret; 
0x00062d07: push es; dec esp; ret 0xfff8; 
0x00174b96: push es; in al, dx; call dword ptr [eax - 0x73]; 
0x0010d1b2: push es; in eax, dx; call dword ptr [ebp + 0x6a]; 
0x001a8512: push es; jb 0x1a8590; lea eax, [edi + 5]; pop edi; ret; 
0x001a9532: push es; jb 0x1a95b0; lea eax, [eax + 5]; pop edi; ret; 
0x00177051: push es; jg 0x177040; add esp, 4; pop ebx; pop esi; ret; 
0x001a8bd2: push es; jl 0x1a8c50; lea eax, [ecx + 6]; ret; 
0x000b3cc3: push es; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40c3: push es; jne 0xb3f81; pop ebx; ret; 
0x000b8534: push es; jne 0xb83d1; cmp byte ptr [eax], 1; sbb eax, -1; pop ebx; ret; 
0x000b9ca1: push es; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x000bb2e4: push es; jne 0xbbca0; pop edi; pop esi; pop ebx; ret; 
0x000c2029: push es; lea eax, [ecx + eax + 0x30]; ret; 
0x000bb8f1: push es; lea eax, [edi + 0xe]; pop edi; pop esi; pop ebx; ret; 
0x000c1d69: push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b6301: push es; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b6461: push es; lea eax, [edx + 0xd]; ret; 
0x000b3cc0: push es; lea ecx, [edx + 6]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40c0: push es; lea ecx, [edx + 6]; jne 0xb3f81; pop ebx; ret; 
0x000bde33: push es; mov byte ptr [eax + 8], dh; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00154410: push es; mov cl, byte ptr [esi]; add byte ptr [ebx - 0x77], dl; ret; 
0x00179bd6: push es; mov dh, 0xeb; call dword ptr [eax - 0x73]; 
0x00081cd2: push es; mov dword ptr [ebx + 0x30], esi; add esp, 4; pop ebx; pop esi; ret; 
0x000c1354: push es; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdee1: push es; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x00034279: push es; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000c0704: push es; mov eax, edi; pop ebx; pop edi; ret; 
0x0007e139: push es; mov eax, edi; pop ebx; pop esi; pop edi; ret; 
0x000b1f21: push es; mov eax, edi; pop edi; ret; 
0x00094e99: push es; mov eax, edx; pop ebx; pop esi; ret; 
0x000b2081: push es; mov eax, edx; ret; 
0x001a0ca7: push es; mov ecx, dword ptr [ebx + ecx*4 - 0x86474]; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x000bdf23: push es; movdqu xmmword ptr [eax], xmm0; mov byte ptr [eax + 0x10], dh; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000c1386: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bdf13: push es; movdqu xmmword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba243: push es; movdqu xmmword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000c1286: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde23: push es; movlpd qword ptr [eax], xmm0; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000bded8: push es; movlpd qword ptr [eax], xmm0; movlpd qword ptr [eax + 6], xmm1; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba153: push es; movlpd qword ptr [edi], xmm0; pop edi; pop esi; pop ebx; ret; 
0x000bab8c: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; pop edi; ret; 
0x000bacec: push es; movlpd qword ptr [edx + 6], xmm0; lea eax, [edx + 0xd]; ret; 
0x000c06ff: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop ebx; pop edi; ret; 
0x000b954c: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edi; pop edi; ret; 
0x000b96ac: push es; movlpd qword ptr [edx + 6], xmm0; mov eax, edx; ret; 
0x000b62f8: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; pop edi; ret; 
0x000b6458: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; lea eax, [edx + 0xd]; ret; 
0x000b1f18: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edi; pop edi; ret; 
0x000b2078: push es; movlpd qword ptr [edx], xmm0; movlpd qword ptr [edx + 6], xmm1; mov eax, edx; ret; 
0x0013f862: push es; movzx eax, byte ptr [edx + 1]; shr eax, 1; ret; 
0x0019e5fc: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; pop ebp; ret; 
0x0019cde3: push es; movzx eax, byte ptr [edx + 6]; sub eax, ecx; ret; 
0x000eaf99: push es; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000ac6b0: push es; pop ebx; pop esi; ret; 
0x00042517: push es; pop ebx; ret; 
0x00198f80: push es; pop edi; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019721a: push es; pop edi; call 0x1875fd; add ebx, 0x428bf; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001951aa: push es; pop edi; call 0x1875fd; add ebx, 0x446af; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001931aa: push es; pop edi; call 0x1875fd; add ebx, 0x4642f; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000ba211: push es; pop edi; pop esi; pop ebx; ret; 
0x000b626c: push es; pop edi; ret; 
0x00175b6f: push es; push eax; call dword ptr [edx + 0x14]; 
0x000a0cd9: push es; ret; 
0x00140852: push es; sti; jmp dword ptr [esi - 0x3f]; 
0x0019e600: push es; sub eax, ecx; pop ebp; ret; 
0x0019cde7: push es; sub eax, ecx; ret; 
0x0017558c: push es; sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00174f5e: push es; sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0008c5ef: push es; xor byte ptr [ebp + 0x2d], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000fdd62: push esi; aas; stc; call dword ptr [eax + 0x55]; 
0x00106f27: push esi; aas; stc; call dword ptr [eax - 0x17]; 
0x00130243: push esi; adc al, 0x29; ret 0xca39; 
0x00030202: push esi; adc byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0009d3f4: push esi; adc byte ptr [ebx + 0x5e], bl; ret; 
0x001895bd: push esi; adc byte ptr [ecx], bh; ret 0x4d72; 
0x000ba104: push esi; add ah, byte ptr [esi - 0x77]; js 0x5e6aa365; pop ebx; ret; 
0x0007cb8c: push esi; add al, 0x39; ret; 
0x001799fb: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 0xc]; 
0x00179a34: push esi; add al, 0x50; push ecx; push esi; call dword ptr [edx + 8]; 
0x0008456f: push esi; add al, 0x52; mov eax, dword ptr [esp + 0x34]; push eax; call ebx; 
0x000ba123: push esi; add al, 0x89; js 0x5e6aa583; pop ebx; ret; 
0x000ba134: push esi; add al, 0x89; pcmpgtd mm1, qword ptr [ecx + 0x5e5f0457]; pop ebx; ret; 
0x00126414: push esi; add al, 0x89; ret 0xeac1; 
0x0014f782: push esi; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; sub al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x0007e44e: push esi; add dword ptr [eax], eax; add byte ptr [ebx - 0xa9fb14], al; jne 0x7e461; push edx; call dword ptr [ebx + 0x1c]; 
0x00131ff6: push esi; add eax, 0xae1b0500; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x000c1266: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bde13: push esi; add ecx, dword ptr [ecx + 0x3508908]; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba143: push esi; add ecx, dword ptr [ecx + 0x357890f]; pop edi; pop esi; pop ebx; ret; 
0x001141c0: push esi; add esp, 0x34; pop ebx; pop esi; ret; 
0x0012d061: push esi; add esp, 0x70; pop ebx; pop esi; pop edi; ret; 
0x000feff6: push esi; and al, 0x39; ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x00089763: push esi; and byte ptr [ebx - 0x3dd6fb14], al; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x001622f9: push esi; bnd call dword ptr [eax - 0x18]; 
0x0016c529: push esi; call 0x16de30; mov eax, dword ptr [esp + 0x18]; mov dword ptr [esp], esi; call dword ptr [eax + 0x10]; 
0x000260d7: push esi; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x00032c3a: push esi; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x000acbd7: push esi; call 0x4c8b59dc; ret 0xfff6; 
0x00098620: push esi; call 0x8f1b0; mov eax, dword ptr [ebp - 0x3c]; add esp, 0x10; call eax; 
0x000a9db2: push esi; call 0xc24eadb7; ret; 
0x0016c7e0: push esi; call dword ptr [eax + 0x10]; 
0x0016c7fe: push esi; call dword ptr [eax + 0x14]; 
0x0007d9e6: push esi; call dword ptr [eax + 0x1c]; 
0x000f4868: push esi; call dword ptr [eax + 0x20]; 
0x0007eb5b: push esi; call dword ptr [eax + 0x2c]; 
0x00086adc: push esi; call dword ptr [eax + 0x30]; 
0x000815be: push esi; call dword ptr [eax + 0x34]; 
0x00089fde: push esi; call dword ptr [eax + 0x40]; 
0x00189730: push esi; call dword ptr [eax + 0x48]; 
0x0016c8ac: push esi; call dword ptr [eax + 0xc]; 
0x0016c79a: push esi; call dword ptr [eax + 4]; 
0x00179b1f: push esi; call dword ptr [eax]; 
0x0008cf30: push esi; call dword ptr [ebp + 0x2c]; 
0x0008c192: push esi; call dword ptr [ebp + 0x30]; 
0x0008a8df: push esi; call dword ptr [ebp + 0xc]; 
0x0007c93c: push esi; call dword ptr [ebx + 0x1c]; 
0x0007ed97: push esi; call dword ptr [ebx + 0x2c]; 
0x0007bebc: push esi; call dword ptr [ebx + 0x30]; 
0x0007ee80: push esi; call dword ptr [ebx + 0x34]; 
0x0008aa95: push esi; call dword ptr [ebx + 0x38]; 
0x000838b5: push esi; call dword ptr [ebx + 0x40]; 
0x0018915d: push esi; call dword ptr [ebx + 0x44]; 
0x0007b7ab: push esi; call dword ptr [ebx + 0x48]; 
0x0016d3c0: push esi; call dword ptr [ebx + 0xc]; 
0x0007b931: push esi; call dword ptr [ebx + 8]; 
0x00081b99: push esi; call dword ptr [edi + 0x18]; 
0x0008bdec: push esi; call dword ptr [edi + 0x34]; 
0x0008976c: push esi; call dword ptr [edi + 0x38]; 
0x00083c41: push esi; call dword ptr [edi + 0x40]; 
0x001892b2: push esi; call dword ptr [edi + 0x44]; 
0x00088927: push esi; call dword ptr [edi + 0x48]; 
0x00089e64: push esi; call dword ptr [edx + 0x48]; 
0x001799ff: push esi; call dword ptr [edx + 0xc]; 
0x00179a38: push esi; call dword ptr [edx + 8]; 
0x0007b192: push esi; call eax; 
0x001ab435: push esi; call ebx; 
0x00083b4f: push esi; call ecx; 
0x0012af7a: push esi; call edi; 
0x0008a0c8: push esi; call edx; 
0x0012c945: push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x001106ef: push esi; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x001a6e06: push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x001a6d97: push esi; imul dword ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000abc9f: push esi; inc ecx; jbe 0xabcb4; cmove eax, edx; ret; 
0x000acc0f: push esi; inc ecx; jbe 0xacc24; cmove eax, edx; ret; 
0x000acddf: push esi; inc ecx; jbe 0xacdf4; cmove eax, edx; ret; 
0x000a9cef: push esi; inc ecx; jne 0xa9cf6; lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000a9d2f: push esi; inc ecx; jne 0xa9d36; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000aa89f: push esi; inc ecx; jne 0xaa8a6; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000abc6f: push esi; inc ecx; jne 0xabc76; lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000acadf: push esi; inc ecx; jne 0xacae6; lea edx, [edx - 0x17b744]; cmove eax, edx; ret; 
0x000acb5f: push esi; inc ecx; jne 0xacb66; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x000c633f: push esi; inc ecx; jne 0xc6346; cmove eax, edx; ret; 
0x000acbdf: push esi; inc ecx; jnp 0xacbe8; cmove eax, edx; ret; 
0x000c54cf: push esi; inc ecx; jnp 0xc54d8; cmove eax, edx; ret; 
0x000c552f: push esi; inc ecx; jnp 0xc5538; cmove eax, edx; ret; 
0x000c650f: push esi; inc ecx; jnp 0xc6518; cmove eax, edx; ret; 
0x000c720f: push esi; inc ecx; jnp 0xc7218; cmove eax, edx; ret; 
0x00082586: push esi; inc esp; and al, 0x50; add dh, byte ptr [edx + ebx*4 - 0x17]; ret; 
0x000c3acd: push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0012bab6: push esi; mov al, dh; dec dword ptr [ebp - 0x65a1f7d]; call dword ptr [eax - 0x73]; 
0x0005f7c4: push esi; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0017349e: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00189a07: push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x40]; 
0x0016c7c8: push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x0016e59c: push esi; mov eax, dword ptr [esp + 0x28]; call dword ptr [eax + 0x18]; 
0x00171888: push esi; mov eax, dword ptr [esp + 0x3c]; call eax; 
0x0016db34: push esi; mov eax, dword ptr [esp + 0x4c]; call eax; 
0x0013850c: push esi; mov ebx, dword ptr [esp + 0x18]; je 0x138520; add esp, 8; pop ebx; ret; 
0x0016dbf2: push esi; mov edi, dword ptr [esp + 0x4c]; push edi; mov eax, dword ptr [esp + 0x5c]; call eax; 
0x0015d94a: push esi; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0012c91e: push esi; mov esi, dword ptr [esp + 0x18]; mov ebx, ecx; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x000dc7a2: push esi; or al, 0x29; ret 0x428d; 
0x00040ae8: push esi; or al, 0x83; les esi, ptr [ebx + ebx*2]; pop esi; ret 4; 
0x00126bcd: push esi; or al, 0x8d; xchg ebx, eax; cld; ret 0xffe7; 
0x0005fd3e: push esi; or al, 0xf6; ret 0xf01; 
0x00138242: push esi; or al, 0xf6; ret 0xf04; 
0x00055cce: push esi; or al, 0xf7; ret 0; 
0x00106581: push esi; or al, 1; ret; 
0x000b9d46: push esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000fd7e7: push esi; or byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000390c5: push esi; or byte ptr [ecx + edx - 0x7d], dh; ljmp 0xfa83:0x1c18330; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x0008128f: push esi; or byte ptr [ecx], al; ret 0x3e89; 
0x001009ee: push esi; or byte ptr [ecx], bh; ret 0x1c7e; 
0x001009e4: push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x00104a73: push esi; or byte ptr [ecx], bh; ret 0x474; 
0x0008aa1a: push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x000a2901: push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x000bb346: push esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000be0a7: push esi; or eax, 0x7f0ff3; movdqu xmmword ptr [eax + 0xd], xmm2; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012d3dc: push esi; pop ebx; pop esi; ret; 
0x001389de: push esi; push 0; push 0x1000003; call eax; 
0x001390bb: push esi; push 0; push 0x1000004; call eax; 
0x00138eda: push esi; push 0; push 0x1000006; call ecx; 
0x00138c84: push esi; push 0; push 0x1000007; call eax; 
0x00135ae9: push esi; push 0x2000006; call dword ptr [ebx + 0x14]; 
0x001769c6: push esi; push 3; push edi; call dword ptr [eax]; 
0x0007e455: push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x00138ba1: push esi; push dword ptr [ebp - 0x11c]; push 0; call eax; 
0x000a73f6: push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0016c03b: push esi; push dword ptr [esp + 0x14]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00088281: push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x00080032: push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x00028ac2: push esi; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call ebx; 
0x0016c7b1: push esi; push eax; call dword ptr [edx + 4]; 
0x00175d42: push esi; push eax; call dword ptr [edx]; 
0x0016ef32: push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x0008ef46: push esi; push eax; push ecx; call edx; 
0x00088401: push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x00172e56: push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0008a4f3: push esi; push ebx; call dword ptr [ebp + 0x40]; 
0x0008c68b: push esi; push ebx; call dword ptr [edi + 0x18]; 
0x0012dc3a: push esi; push ebx; call dword ptr gs:[0x10]; 
0x000e7d9b: push esi; push ebx; call eax; 
0x001348d1: push esi; push ebx; mov eax, dword ptr [esp + 0x28]; call eax; 
0x0012dc7a: push esi; push ebx; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00122327: push esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0002f7b6: push esi; push ecx; adc eax, 0x24348900; call ebx; 
0x0016d5e0: push esi; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x0007da63: push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x000413e2: push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x0008e95f: push esi; push edi; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x00041b6d: push esi; push edx; mov eax, dword ptr [esp + 0x28]; mov dword ptr [esp + 0x24], edx; call eax; 
0x0008eec5: push esi; push edx; push dword ptr [esp + 0x24]; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0005bca0: push esi; push edx; push eax; call dword ptr [ebp + 0x1c]; 
0x00080379: push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00138df8: push esi; ret 0xf02; 
0x000323d6: push esi; ret 0xf03; 
0x000601aa: push esi; ret 0xf40; 
0x0005cf35: push esi; ret 0xf50; 
0x000306ce: push esi; ret; 
0x00139890: push esi; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000fee08: push esi; sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x0005b782: push esi; sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000aa8d6: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6a80c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9276: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b21c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bc6: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b78c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c46: push esi; sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf2c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c06: push esi; sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5450c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x00137b7b: push esi; stc; call dword ptr [eax + 0x50]; 
0x0013687d: push esi; stc; call dword ptr [eax + 0x56]; 
0x00024796: push esi; stc; call dword ptr [eax + 0x6a]; 
0x0017a682: push esi; stc; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00136bae: push esi; stc; call dword ptr [eax - 0x75]; 
0x001394bb: push esi; stc; call dword ptr [eax - 1]; 
0x001393a3: push esi; stc; call dword ptr [ebx + 0x50]; 
0x00024861: push esi; stc; call dword ptr [edi + 0x57]; 
0x0016f154: push esi; sub al, 0x89; ret; 
0x0016f184: push esi; sub al, 1; ret 0x5689; 
0x00084490: push esi; sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x001a6dc6: push esi; sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x000f1915: push esi; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x0016f189: push esi; xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x00130f3a: push esi; xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x000984ff: push esi; xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x000a4a08: push esp; add al, 0; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x0012204b: push esp; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00121ff6: push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00121d0c: push esp; add byte ptr [eax], al; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00121d3a: push esp; add byte ptr [eax], al; mov ebp, dword ptr [eax + edi]; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00121fed: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x1c]; call 0x1274c0; add esp, 0x1c; ret; 
0x00121fc3: push esp; add byte ptr [eax], al; push dword ptr [esp + 0x2c]; call 0x8f110; add esp, 0x2c; ret; 
0x0002aca6: push esp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2aca9; call dword ptr [eax - 0x18]; 
0x0002dbee: push esp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2dbf1; call dword ptr [eax - 0x18]; 
0x0002e3ff: push esp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2e402; call dword ptr [eax - 0x18]; 
0x0002f0da: push esp; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], edi; jno 0x2f0dd; call dword ptr [eax - 0x18]; 
0x000c42fd: push esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x0007d088: push esp; add dword ptr [eax], eax; add byte ptr [ebx - 0xa8fb14], al; jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0010c494: push esp; add esp, 0x24; pop ebx; pop esi; ret; 
0x0016c6e1: push esp; and al, 0x10; add esp, 4; pop ebx; pop esi; jmp eax; 
0x0003de0f: push esp; and al, 0x10; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x0008e13e: push esp; and al, 0x10; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x00099efe: push esp; and al, 0x10; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf1; call dword ptr gs:[0x10]; 
0x00115c3c: push esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012ec42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0012e712: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x124; call dword ptr gs:[0x10]; 
0x0011f232: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x128; call dword ptr gs:[0x10]; 
0x00120c02: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x12d; call dword ptr gs:[0x10]; 
0x001206f2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x130; call dword ptr gs:[0x10]; 
0x00114802: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x14a; call dword ptr gs:[0x10]; 
0x0012e8b2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1ac; call dword ptr gs:[0x10]; 
0x0012e622: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b0; call dword ptr gs:[0x10]; 
0x0012e682: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b1; call dword ptr gs:[0x10]; 
0x00114672: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b4; call dword ptr gs:[0x10]; 
0x0012e912: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x1b6; call dword ptr gs:[0x10]; 
0x001228e2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x61; call dword ptr gs:[0x10]; 
0x0012be92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x65; call dword ptr gs:[0x10]; 
0x0012e792: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x67; call dword ptr gs:[0x10]; 
0x0012e452: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7b; call dword ptr gs:[0x10]; 
0x00128662: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7d; call dword ptr gs:[0x10]; 
0x0012e532: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x7f; call dword ptr gs:[0x10]; 
0x0012e562: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x81; call dword ptr gs:[0x10]; 
0x0010c262: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0012e882: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xa9; call dword ptr gs:[0x10]; 
0x000eaf32: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xb; call dword ptr gs:[0x10]; 
0x0011ec92: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xc6; call dword ptr gs:[0x10]; 
0x00114e22: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xcf; call dword ptr gs:[0x10]; 
0x000f0f42: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd1; call dword ptr gs:[0x10]; 
0x000f0f12: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd3; call dword ptr gs:[0x10]; 
0x00114622: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xd4; call dword ptr gs:[0x10]; 
0x00127932: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xda; call dword ptr gs:[0x10]; 
0x00127852: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xdb; call dword ptr gs:[0x10]; 
0x00127552: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe8; call dword ptr gs:[0x10]; 
0x00127582: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xe9; call dword ptr gs:[0x10]; 
0x00123ab2: push esp; and al, 0x10; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; mov eax, 0xea; call dword ptr gs:[0x10]; 
0x00095335: push esp; and al, 0x10; mov ecx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0016e51c: push esp; and al, 0x10; pop ebx; pop esi; jmp eax; 
0x00179edd: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00172e69: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x00179507: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax + 4]; 
0x0017949c: push esp; and al, 0x10; push edx; push ebx; call dword ptr [eax]; 
0x001797d7: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax + 4]; 
0x0017980f: push esp; and al, 0x10; push edx; push ecx; call dword ptr [eax]; 
0x0013d0af: push esp; and al, 0x10; push edx; push edi; call eax; 
0x0013d18c: push esp; and al, 0x10; push edx; push esi; call eax; 
0x0005b79a: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x5b7b0; add esp, 0xc; ret; 
0x0007958a: push esp; and al, 0x10; test byte ptr [edx], 0x20; je 0x795a0; add esp, 0xc; ret; 
0x0003518c: push esp; and al, 0x14; add esp, 0xc; mov eax, edx; ret; 
0x000986b1: push esp; and al, 0x14; call 0x98540; xor eax, eax; add esp, 0xc; ret; 
0x00122390: push esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x000945ee: push esp; and al, 0x14; mov ebx, dword ptr [eax + 0x68]; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x0018de8f: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0004075b: push esp; and al, 0x14; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0011ff67: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e977: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea57: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b67: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127527: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a87: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b7: push esp; and al, 0x14; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0016f16f: push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000f120c: push esp; and al, 0x14; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0016d4ca: push esp; and al, 0x14; push edx; push ebx; call dword ptr [eax + 0x14]; 
0x00130396: push esp; and al, 0x18; call dword ptr gs:[0x10]; 
0x0012d59f: push esp; and al, 0x18; cmp esi, -1; je 0x12d5c0; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010b54c: push esp; and al, 0x18; mov dword ptr [eax + 8], edx; pop ebx; ret; 
0x000a0028: push esp; and al, 0x18; mov eax, 0x103; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x0011f303: push esp; and al, 0x18; mov eax, 0x129; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0010bec1: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; cmp esi, ecx; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x0006139c: push esp; and al, 0x18; mov ebx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0012945c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00114e5c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed1c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb4c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7cc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e84c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5ec: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9ac: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e80c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6dc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea1c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d67c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d2c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001276fc: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b1c: push esp; and al, 0x18; mov ecx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00190404: push esp; and al, 0x18; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x00130884: push esp; and al, 0x18; mov esi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x0017a99d: push esp; and al, 0x18; test edx, edx; jne 0x17a9b0; add esp, 0xc; ret; 
0x0017ab0d: push esp; and al, 0x18; test edx, edx; jne 0x17ab20; add esp, 0xc; ret; 
0x001222a9: push esp; and al, 0x18; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012d1de: push esp; and al, 0x1c; mov eax, 0x12c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0012d46b: push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0009e20c: push esp; and al, 0x1c; mov eax, 0xaf; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000eaf7d: push esp; and al, 0x1c; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x000dee91: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd42: push esp; and al, 0x1c; mov edx, dword ptr [esp + 0x34]; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0012f1ab: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f77b: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7eb: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc3b: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd3b: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0013ae2f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c07f: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001905c5: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x00040cf4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a4: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a97: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x00097683: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098937: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da7: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c3: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099713: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c8be: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2a: push esp; and al, 0x1c; sub edx, dword ptr gs:[0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0017932d: push esp; and al, 0x20; mov eax, dword ptr [eax + 4]; add esp, 0x18; pop ebx; jmp eax; 
0x00129e41: push esp; and al, 0x20; mov ecx, dword ptr [esp + 0x1c]; mov ebx, dword ptr [esp + 0x18]; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0006614e: push esp; and al, 0x20; movzx eax, byte ptr [eax + ecx - 0x20]; mov ecx, dword ptr [esp + 0x18]; add ecx, dword ptr [edx + eax*4 - 0x74014]; jmp ecx; 
0x001760b9: push esp; and al, 0x20; push edx; push eax; call edi; 
0x00179b1b: push esp; and al, 0x20; push edx; push esi; call dword ptr [eax]; 
0x000eb482: push esp; and al, 0x24; call 0xeb130; mov eax, 0xffffffff; add esp, 0x1c; ret; 
0x00041a87: push esp; and al, 0x24; call eax; 
0x0010bfd6: push esp; and al, 0x24; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0009bdea: push esp; and al, 0x24; mov esi, dword ptr [esp + 0x28]; mov edi, dword ptr [esp + 0x2c]; mov ebp, dword ptr [esp + 0x30]; int 0x80; 
0x00121c94: push esp; and al, 0x28; call dword ptr gs:[0x10]; 
0x001772a3: push esp; and al, 0x28; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000a0180: push esp; and al, 0x2c; mov dword ptr [esp + 0x34], 4; call dword ptr gs:[0x10]; 
0x00115953: push esp; and al, 0x2c; mov eax, 0x12c; call dword ptr gs:[0x10]; 
0x000df035: push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0012b79f: push esp; and al, 0x2c; sub edx, dword ptr gs:[0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x00190483: push esp; and al, 0x34; lea edi, [esp + 8]; mov eax, 0x75; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000dee95: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd46: push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x0011f0b9: push esp; and al, 0x34; mov ecx, dword ptr [esp + 0x38]; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x00177233: push esp; and al, 0x34; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x000c4b4f: push esp; and al, 0x34; push eax; push ebp; call esi; 
0x00130ed4: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x34]; call dword ptr gs:[0x10]; 
0x00120617: push esp; and al, 0x38; mov edi, dword ptr [esp + 0x40]; mov esi, dword ptr [esp + 0x3c]; mov ecx, ebp; call dword ptr gs:[0x10]; 
0x0017782d: push esp; and al, 0x38; push edx; call dword ptr [eax + 0xc]; 
0x0018972c: push esp; and al, 0x38; push edx; push esi; call dword ptr [eax + 0x48]; 
0x0015d94c: push esp; and al, 0x3c; call edx; 
0x00177242: push esp; and al, 0x3c; sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x00156577: push esp; and al, 0x40; mov dword ptr [edx], ebx; add esp, 0x28; pop ebx; ret; 
0x00065174: push esp; and al, 0x4c; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x001223f1: push esp; and al, 0x4c; mov edx, dword ptr [esp + 0x64]; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001223f5: push esp; and al, 0x64; mov ebx, dword ptr [esp + 0x60]; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x001302c2: push esp; and al, 0x6c; sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x0017a779: push esp; and al, 0xc; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x0007c640: push esp; and al, 0xc; add esp, 0x1c; ret; 
0x001222af: push esp; and al, 0xc; call dword ptr gs:[0x10]; 
0x0003c496: push esp; and al, 0xc; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x00179e90: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e0: push esp; and al, 0xc; lea edx, [esp + 0xc]; push edx; push ebx; call dword ptr [eax + 4]; 
0x00187180: push esp; and al, 0xc; mov dword ptr [eax], edx; ret; 
0x000e7bc1: push esp; and al, 0xc; mov dword ptr [edx], ebx; pop ebx; ret; 
0x000df0a5: push esp; and al, 0xc; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0003bd13: push esp; and al, 0xc; mov eax, dword ptr [esp + 0x10]; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x00095279: push esp; and al, 0xc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x000952bc: push esp; and al, 0xc; mov ecx, edi; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x0010bfd2: push esp; and al, 0xc; mov edx, dword ptr [esp + 0x24]; mov ebx, dword ptr [esp + 0x20]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00179ec7: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x20]; 
0x00179e94: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 0x24]; 
0x001794e4: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax + 4]; 
0x00179487: push esp; and al, 0xc; push edx; push ebx; call dword ptr [eax]; 
0x000e7dd6: push esp; and al, 0xc; push edx; push ebx; call eax; 
0x0017985b: push esp; and al, 0xc; push edx; push ecx; call dword ptr [eax + 4]; 
0x00121f70: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x00124480: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00125c13: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x0012bc36: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f143: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f2a3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012fbd3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fcc3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x001300c1: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130351: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x001465e4: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146633: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x00148c3d: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x00175e0c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x0017631c: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x0018a0a3: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x0003e1b4: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x00040909: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b36: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e06: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e89: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x0005ae22: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x000dac68: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000e54ec: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79ac: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000efeb9: push esp; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x0017a088: push esp; and al, 4; jmp dword ptr [eax + 0x20]; 
0x0017a064: push esp; and al, 4; jmp dword ptr [eax + 0x24]; 
0x001842c4: push esp; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016ed74: push esp; and al, 4; jmp dword ptr [eax + 4]; 
0x0008f1fe: push esp; and al, 4; jmp dword ptr [eax]; 
0x0007c683: push esp; and al, 4; jmp eax; 
0x00099ebe: push esp; and al, 4; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x000915de: push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001210c5: push esp; and al, 4; mov eax, 0xdd; mov ecx, 0x10; call dword ptr gs:[0x10]; 
0x00034b29: push esp; and al, 4; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b49: push esp; and al, 4; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x001503ef: push esp; and al, 4; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x000342ff: push esp; and al, 4; mov eax, dword ptr [eax + edx*4 + 0x40]; ret; 
0x0003498f: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x24]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0003495f: push esp; and al, 4; mov eax, dword ptr [eax]; mov eax, dword ptr [eax + 0x2c]; mov eax, dword ptr [eax + edx*4 + 0x200]; ret; 
0x0017a395: push esp; and al, 4; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003c3ec: push esp; and al, 4; mov eax, dword ptr [esp + 8]; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003dee5: push esp; and al, 4; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00090562: push esp; and al, 4; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00095d5f: push esp; and al, 4; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008f31f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f33f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f35f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f37f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d3f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d1f: push esp; and al, 4; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000a0a2f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a0f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0abf: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d6f: push esp; and al, 4; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0003485f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x1000; ret; 
0x0003482f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x100; ret; 
0x000347ff: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x2000; ret; 
0x0003473f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x200; ret; 
0x0003479f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x4000; ret; 
0x000346af: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x400; ret; 
0x0003476f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x8000; ret; 
0x0003470f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 0x800; ret; 
0x0003490f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 1; ret; 
0x000346df: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 2; ret; 
0x000347cf: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 4; ret; 
0x0003467f: push esp; and al, 4; movzx eax, word ptr [eax + edx*2]; and eax, 8; ret; 
0x00094f0f: push esp; and al, 4; ret; 
0x0008efd5: push esp; and al, 4; setae al; ret; 
0x0016c86d: push esp; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0009390f: push esp; and al, 8; call dword ptr gs:[0x10]; 
0x000799b1: push esp; and al, 8; mov dword ptr [eax + 0x10], 0; mov dword ptr [eax + 0x14], 2; mov dword ptr [eax + 0x18], edx; ret; 
0x00114549: push esp; and al, 8; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a9: push esp; and al, 8; mov dword ptr [eax + 0x4c], edx; ret; 
0x0017ac51: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; ret; 
0x00091099: push esp; and al, 8; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef9: push esp; and al, 8; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0013e22d: push esp; and al, 8; mov dword ptr [edx + ebp], ecx; mov ebx, dword ptr [esp + 0x6c]; mov eax, 6; call dword ptr gs:[0x10]; 
0x00124262: push esp; and al, 8; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00091295: push esp; and al, 8; mov eax, 0x16; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x0008d339: push esp; and al, 8; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187159: push esp; and al, 8; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031489: push esp; and al, 8; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x0003c0c4: push esp; and al, 8; mov eax, dword ptr [esp + 0xc]; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000951f6: push esp; and al, 8; mov ebx, ebp; mov esi, 8; call dword ptr gs:[0x10]; 
0x00186149: push esp; and al, 8; mov ecx, dword ptr [eax]; test ecx, ecx; jne 0x186158; ret; 
0x00117659: push esp; and al, 8; mov word ptr [edx + 0x3e], ax; xor eax, eax; ret; 
0x001190f9: push esp; and al, 8; mov word ptr [edx + 0x42], ax; xor eax, eax; ret; 
0x00091279: push esp; and al, 8; or dword ptr [eax + 8], 8; mov dword ptr [eax + 0x10], edx; xor eax, eax; ret; 
0x0007c584: push esp; and al, 8; pop ebx; jmp eax; 
0x000f844c: push esp; and al, 8; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x00095e53: push esp; and al, 8; shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0009adcb: push esp; and al, 8; shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000336d0: push esp; and dword ptr [eax], 0x5b; mov eax, edx; ret; 
0x0002c9b7: push esp; call eax; 
0x000a4634: push esp; cdq; stc; call dword ptr [eax + 0x68]; 
0x000a45ff: push esp; cdq; stc; call dword ptr [eax - 0x73]; 
0x000dee2c: push esp; cmc; dec dword ptr [ebp - 0x661677d]; call dword ptr [eax - 0x73]; 
0x000dee6a: push esp; cmc; jmp dword ptr [esi - 0x70]; 
0x0003f1f3: push esp; cmp eax, 0x473ff00; call eax; 
0x00122f31: push esp; dec edx; stc; call dword ptr [eax + 0x6a]; 
0x000fb765: push esp; inc esi; push ebx; setne al; ret; 
0x00157ab8: push esp; into; add al, byte ptr [eax]; add esp, 0x10; mov eax, ebx; call eax; 
0x00031fd2: push esp; jae 0x31fce; call dword ptr [eax - 0x73]; 
0x00031ff7: push esp; jae 0x31ff3; call dword ptr [eax - 0x73]; 
0x0003204b: push esp; jae 0x32047; call dword ptr [eax - 0x73]; 
0x00079aa4: push esp; jg 0x79aa0; call dword ptr [eax - 0x73]; 
0x0015189f: push esp; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x00125068: push esp; mov eax, ebx; pop ebx; pop esi; ret; 
0x0014ee57: push esp; out dx, al; dec dword ptr [ebp - 0x64f137d]; call dword ptr [eax + 0x68]; 
0x0010e68c: push esp; pop ebx; pop esi; ret; 
0x00172dd2: push esp; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x00029de0: push esp; push dword ptr [esp + 0x5c]; call edi; 
0x0002f403: push esp; push dword ptr [esp + 0x5c]; mov eax, dword ptr [esp + 0x30]; call eax; 
0x000c455d: push esp; push ecx; mov eax, dword ptr [esp + 0x40]; push dword ptr [eax]; call edi; 
0x00032e72: push esp; ret; 
0x0007891c: push esp; sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00078c69: push esp; sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x0012bb05: push esp; stc; call dword ptr [eax - 0x18]; 
0x0012c998: push esp; stc; call dword ptr [ebx - 0x18]; 
0x000c8221: push esp; test dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000959ea: push esp; test ecx, edi; call dword ptr [eax - 0x18]; 
0x000c45ef: push esp; wait; stc; call dword ptr [eax - 0x18]; 
0x00047981: push esp; xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00071bd6: push esp; xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070a8a: push esp; xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x000479d4: push esp; xor cl, bh; call dword ptr [eax - 0x73]; 
0x000712ea: push esp; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00072436: push esp; xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 
0x0018a78a: push ss; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x00026087: push ss; add byte ptr [0x216d8b], al; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026067: push ss; add byte ptr [0x216dab], al; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025517: push ss; add byte ptr [0x2178fb], al; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024f97: push ss; add byte ptr [0x217e7b], al; lea eax, [eax - 0x69094]; ret; 
0x00024f77: push ss; add byte ptr [0x217e9b], al; lea eax, [eax - 0x6908c]; ret; 
0x00024b07: push ss; add byte ptr [0x21830b], al; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x000eb588: push ss; add byte ptr [eax], al; add bl, ch; ret; 
0x00091190: push ss; add byte ptr [eax], al; add byte ptr [eax + 0x5f], bh; cmovne eax, edx; ret; 
0x00117678: push ss; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x00087520: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; pop esi; ret; 
0x0003d460: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; pop ebx; ret; 
0x0003c9e0: push ss; add byte ptr [eax], al; add byte ptr [eax - 1], bh; ret; 
0x000908bb: push ss; add byte ptr [eax], al; add byte ptr [ebp + 0xbad2], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00125dd8: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00090c90: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000a7164: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0009115d: push ss; add byte ptr [eax], al; add byte ptr [ebx + 0xa7602fa], al; ret; 
0x00091299: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x3ffffa], al; add byte ptr [edi + 0xb], dh; ret; 
0x0007c7cf: push ss; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x000a62c0: push ss; add byte ptr [eax], al; add byte ptr [ecx], dh; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000983b1: push ss; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x0004318c: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x10; pop ebx; sub eax, edx; ret; 
0x000430fa: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x20; pop ebx; sub eax, edx; ret; 
0x0004315e: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x000430cc: push ss; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 8; pop ebx; sub eax, edx; ret; 
0x00175e95: push ss; add esp, 0x74; pop ebx; pop edi; ret; 
0x0003d080: push ss; add esp, 0x98; pop ebx; ret; 
0x000c22e9: push ss; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000a1b03: push ss; clc; inc dword ptr [ebx - 0x7972f33c]; in al, dx; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x000a1b39: push ss; clc; inc dword ptr [ebx - 0x7972f33c]; insb byte ptr es:[edi], dx; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x000696ff: push ss; cmp byte ptr [eax], al; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x000fe0bd: push ss; dec eax; stc; call dword ptr [eax + 0x55]; 
0x0013aa86: push ss; idiv bh; jmp dword ptr [esi - 0x70]; 
0x000b9ee7: push ss; jne 0xba5a0; pop edi; pop esi; pop ebx; ret; 
0x00123b79: push ss; lea eax, [ebx + 0x450c]; add esp, 4; pop ebx; pop esi; ret; 
0x000c2019: push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000c1d59: push ss; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000a9c00: push ss; lea eax, [edx - 0xac174]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af60: push ss; lea eax, [edx - 0xac184]; test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x000ba0e1: push ss; mov byte ptr [edi], dl; pop edi; pop esi; pop ebx; ret; 
0x000d8cf6: push ss; mov dh, 0xf5; dec dword ptr [ebx - 0x364b43]; dec dword ptr [ebp - 0x687c379]; call dword ptr [eax - 0x73]; 
0x000c1214: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddd1: push ss; mov dword ptr [eax], edx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x0012be85: push ss; mov dword ptr [eax], edx; pop ebx; pop esi; pop edi; ret; 
0x000ba111: push ss; mov dword ptr [edi], edx; pop edi; pop esi; pop ebx; ret; 
0x000fba7f: push ss; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xdb; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00024d74: push ss; mov edx, 1; xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000c11e5: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x000bddb2: push ss; mov word ptr [eax], dx; mov eax, dword ptr [esp + 8]; pop esi; ret; 
0x000ba0f2: push ss; mov word ptr [edi], dx; pop edi; pop esi; pop ebx; ret; 
0x00189398: push ss; pop ebx; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x000550e8: push ss; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000bb9e4: push ss; pop edi; pop esi; pop ebx; ret; 
0x00162494: push ss; popal; stc; call dword ptr [eax - 0x18]; 
0x00121fa6: push ss; push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013687c: push ss; push esi; stc; call dword ptr [eax + 0x56]; 
0x00024795: push ss; push esi; stc; call dword ptr [eax + 0x6a]; 
0x00024860: push ss; push esi; stc; call dword ptr [edi + 0x57]; 
0x00024786: push ss; ret 0x11; 
0x001220b0: push ss; ret; 
0x00183a1c: push ss; stc; call dword ptr [eax - 0x18]; 
0x00169ebb: push ss; std; jmp dword ptr [esi - 0x70]; 
0x0008ad07: push ss; sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x00059d29: pushal; add al, 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + esi*2 - 7], ah; call dword ptr [eax - 0x18]; 
0x0004a556: pushal; add al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + esi*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x0019350b: pushal; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016ed78: pushal; add al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0008e76b: pushal; add al, byte ptr [eax]; add byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x00122891: pushal; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0010e395: pushal; add cl, al; call 0xfe11c9f; dec edi; ret 0xbce9; 
0x0006670e: pushal; add dword ptr [eax], eax; add byte ptr [ecx - 0x56b7b], cl; dec dword ptr [ebp - 0x56b7b]; dec dword ptr [ecx - 0x5fb7b]; call dword ptr [eax - 0x18]; 
0x000ac82c: pushal; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0017a068: pushal; and al, 0x8d; mov dh, 0; add byte ptr [eax], al; add byte ptr [eax + 1], bh; ret; 
0x0016e907: pushal; and al, byte ptr [eax]; add byte ptr [ebx - 0x7f], dl; ret; 
0x0017a08c: pushal; and byte ptr [esi - 0x70], ah; xor eax, eax; ret; 
0x0002a30b: pushal; call esi; 
0x000a20b2: pushal; cdq; stc; call dword ptr [eax - 0x73]; 
0x000b88cc: pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b43dc: pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0005bcf4: pushal; jp 0x5bcf0; call dword ptr [eax - 0x18]; 
0x0004d525: pushal; js 0x4d521; call dword ptr [eax - 0x73]; 
0x0004d5d3: pushal; js 0x4d5cf; call dword ptr [eax - 0x73]; 
0x0004d5f6: pushal; js 0x4d5f2; call dword ptr [eax - 0x73]; 
0x0004d620: pushal; js 0x4d61c; call dword ptr [eax - 0x73]; 
0x0004d643: pushal; js 0x4d63f; call dword ptr [eax - 0x73]; 
0x0004d666: pushal; js 0x4d662; call dword ptr [eax - 0x73]; 
0x0004d695: pushal; js 0x4d691; call dword ptr [eax - 0x73]; 
0x0004d6b8: pushal; js 0x4d6b4; call dword ptr [eax - 0x73]; 
0x0004d6db: pushal; js 0x4d6d7; call dword ptr [eax - 0x73]; 
0x0004d6fe: pushal; js 0x4d6fa; call dword ptr [eax - 0x73]; 
0x0004d721: pushal; js 0x4d71d; call dword ptr [eax - 0x73]; 
0x0004d744: pushal; js 0x4d740; call dword ptr [eax - 0x73]; 
0x0004d77a: pushal; js 0x4d776; call dword ptr [eax - 0x73]; 
0x0004d799: pushal; js 0x4d795; call dword ptr [eax - 0x73]; 
0x0012de5d: pushal; lea ecx, [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x001223fb: pushal; lea ecx, [esp + 4]; call dword ptr gs:[0x10]; 
0x000df033: pushal; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x0014f90c: pushal; mov al, 0xf9; call dword ptr [eax - 0x18]; 
0x0012fd99: pushal; mov dword ptr [esp + 0x24], esi; mov dword ptr [esp + 0x28], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00177531: pushal; mov dword ptr [esp + 0x34], edx; mov edx, dword ptr [eax + 8]; push ecx; push eax; call dword ptr [edx + 0xc]; 
0x0012d72c: pushal; mov eax, 0x154; call dword ptr gs:[0x10]; 
0x00171a8a: pushal; mov eax, dword ptr [ecx]; mov ecx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [ecx + 8]; 
0x000285a8: pushal; mov eax, dword ptr [esp + 0x48]; call eax; 
0x0002aec9: pushal; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00115b41: pushal; mov eax, ecx; pop ebx; pop esi; pop edi; ret; 
0x00130cef: pushal; mov ebx, dword ptr [esp + 0x50]; mov ecx, dword ptr [esp + 8]; mov eax, 0x1a4; call dword ptr gs:[0x10]; 
0x0012e025: pushal; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x145; call dword ptr gs:[0x10]; 
0x0012e0b3: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x145; mov esi, edi; call dword ptr gs:[0x10]; 
0x0012df85: pushal; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x000df0a3: pushal; mov edx, dword ptr [esp + 0xc]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00120e4a: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x140; mov ecx, edi; call dword ptr gs:[0x10]; 
0x00120d84: pushal; mov esi, dword ptr [esp + 0x6c]; mov eax, 0x19c; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000bb23c: pushal; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000911a5: pushal; or bl, bh; xor eax, eax; ret; 
0x00091066: pushal; or dh, bh; xor eax, eax; ret; 
0x00115d37: pushal; pop ebx; pop esi; pop edi; ret; 
0x000c16ad: pushal; pop edi; or al, 0; add ecx, 0x1099c3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c3c1c: pushal; pop ss; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00029148: pushal; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x0002a307: pushal; push dword ptr [esp + 0x60]; call esi; 
0x0002aec5: pushal; push dword ptr [esp + 0x60]; mov eax, dword ptr [esp + 0x50]; call eax; 
0x00079c5b: pushal; ret 0xfff9; 
0x0009482c: pushal; ret; 
0x0016023a: pushal; stc; call dword ptr [eax + 0x55]; 
0x0015f173: pushal; stc; call dword ptr [eax - 0x18]; 
0x0015f173: pushal; stc; call dword ptr [eax - 0x18]; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0015f245: pushal; stc; call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x0015f326: pushal; stc; call dword ptr [eax - 0x73]; 
0x00160c3e: pushal; stc; call dword ptr [eax - 1]; 
0x001617c1: pushal; stc; call dword ptr [ebp - 0x73]; 
0x001602e6: pushal; stc; call dword ptr [edx + 0x50]; 
0x000981d9: pushal; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x001131e4: pushfd; adc al, byte ptr [eax]; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000d3270: pushfd; adc dh, dh; dec dword ptr [ebp - 0x661cf7d]; call dword ptr [eax - 0x73]; 
0x00031e10: pushfd; adc dword ptr [eax], eax; add byte ptr [ecx], cl; ret 0x850f; 
0x00026065: pushfd; adc eax, 0xab050016; insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x0009b4d0: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x10408300], cl; add dword ptr [ebx + 0x458d1470], ecx; inc dword ptr [ebx - 0x69f00208]; ret; 
0x000a03ff: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x0003cdec: pushfd; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0013e495: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x76e3db84], cl; ret; 
0x000d066e: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7c9fdb8c], cl; ret 0xf7ff; 
0x000491bc: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7ca7dba4], cl; ret 0xf7ff; 
0x000c9cee: pushfd; add byte ptr [eax], al; add byte ptr [ebx - 0x7cabdba4], cl; ret 0xf7ff; 
0x0007c73c: pushfd; add byte ptr [eax], al; add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x001b1e07: pushfd; add byte ptr [eax], al; add byte ptr [ecx], al; sal dh, cl; ret 0x7406; 
0x000db9ef: pushfd; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010681d: pushfd; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x000fe14f: pushfd; add byte ptr [eax], al; add dh, dh; add al, 0x42; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x00115930: pushfd; add dword ptr [eax], eax; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x001aeddd: pushfd; add dword ptr [eax], eax; add byte ptr [ecx + 0x7c89193c], cl; sbb dword ptr [ebx + eax*4], eax; ret; 
0x000a9c49: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x940d36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bc9: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x948736e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9279: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x94de36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000aa8d9: pushfd; add dword ptr [eax], eax; add byte ptr [ecx*4 - 0x957f36e], al; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c09: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af69: pushfd; add dword ptr [eax], eax; add byte ptr [ecx], al; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x000a92ee: pushfd; add dword ptr [eax], eax; add dh, dh; ret; 
0x0012d071: pushfd; and al, 0x84; add byte ptr [eax], al; add byte ptr [eax + 0x6c], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0009f912: pushfd; and al, 0x90; add byte ptr [eax], al; add byte ptr [eax + 0x119], bh; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0012d149: pushfd; and al, 0x94; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000db9ed: pushfd; and al, 0x9c; add byte ptr [eax], al; add byte ptr [ecx], ch; ret; 
0x0010681b: pushfd; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x0009a7de: pushfd; and al, 0xa0; add byte ptr [eax], al; add byte ptr [eax + 0xaf], bh; mov esi, 8; call dword ptr gs:[0x10]; 
0x000ca02b: pushfd; and al, 0xb4; add byte ptr [eax], al; add byte ptr [ebx - 0x6bf0fe06], al; ret 0xc339; 
0x001755b6: pushfd; and al, 0xe0; add byte ptr [eax], al; add byte ptr [ebx + 0x50], dl; call dword ptr [edx + 8]; 
0x0015f0a6: pushfd; and al, 0xf2; call dword ptr [eax - 0x18]; 
0x0019505d: pushfd; and eax, 0xc381ffff; inc dword ptr [edi + 4]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001658a9: pushfd; bnd call dword ptr [eax - 1]; 
0x0011ec85: pushfd; call 0x114c30; add esp, 0x1c; ret; 
0x0011f141: pushfd; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f165: pushfd; call 0x115710; add esp, 0x1c; ret; 
0x0012e29d: pushfd; call 0x11f2e0; add esp, 0x20; add esp, 0xc; ret; 
0x0011f2c8: pushfd; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f391: pushfd; call 0x8f110; add esp, 0x2c; ret; 
0x000a1b53: pushfd; cmp al, 0xe6; call dword ptr [eax + 0x57]; 
0x000a92e8: pushfd; dec edx; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x0005b588: pushfd; jns 0x5b584; call dword ptr [eax - 0x73]; 
0x0005b5a4: pushfd; jns 0x5b5a0; call dword ptr [eax - 0x73]; 
0x0005b5c0: pushfd; jns 0x5b5bc; call dword ptr [eax - 0x73]; 
0x0005b5dc: pushfd; jns 0x5b5d8; call dword ptr [eax - 0x73]; 
0x000fb19a: pushfd; ljmp 0x47c5:0x808dffff; stc; call dword ptr [eax + 0x6a]; 
0x000fb281: pushfd; ljmp 0x8d08:0xec83ffff; or byte ptr [ebx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x000fb2de: pushfd; ljmp 0x8d08:0xec83ffff; or byte ptr [ebx], 0x48; stc; call dword ptr [eax - 1]; 
0x001374e4: pushfd; mov bh, ch; call dword ptr [eax + 0x6a]; 
0x000a3fd6: pushfd; mov ch, 0x38; add al, 0; add bl, ch; ret 0x9066; 
0x0009861b: pushfd; mov dh, 0xe5; call dword ptr [eax + 0x56]; 
0x00127232: pushfd; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00151a7f: pushfd; mov dl, 0xf9; call dword ptr [eax - 0x73]; 
0x0012bacc: pushfd; movsd dword ptr es:[edi], dword ptr [esi]; stc; call dword ptr [eax - 0x18]; 
0x0015b88a: pushfd; or al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x000ee066: pushfd; or byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x00128f4b: pushfd; push ebx; stc; call dword ptr [eax - 1]; 
0x000c6deb: pushfd; rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x0005f3eb: pushfd; ret 0xb60f; 
0x0004d2c0: pushfd; ret 0xca09; 
0x000475d6: pushfd; ret 0xfff9; 
0x0013af2e: pushfd; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x000c7170: pushfd; sal esi, 1; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x0008e86e: pushfd; sbb ch, ah; call dword ptr [eax - 0x18]; 
0x000c4fe4: pushfd; stc; call dword ptr [eax - 0x18]; 
0x000c49bd: pushfd; stc; call dword ptr [eax - 0x73]; 
0x000c628f: pushfd; stc; call dword ptr [edx - 0x73]; 
0x00128ff0: pushfd; stc; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x0003e2b0: pushfd; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x00082b31: rcl byte ptr [eax + 0x52]; push edi; call dword ptr [ebx + 0x38]; 
0x0008d60e: rcl byte ptr [eax - 0x4e1f00d], cl; mov eax, 0xffffffff; mov edx, eax; ret; 
0x00141654: rcl byte ptr [eax - 0x73], 0x81; leave; inc esp; stc; call dword ptr [eax + 0x6a]; 
0x0015f6f2: rcl byte ptr [eax - 0x73], 0x83; leave; inc esp; stc; call dword ptr [eax - 1]; 
0x001344cc: rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + 0x55], esi; stc; call dword ptr [eax - 1]; 
0x0002714a: rcl byte ptr [eax], 0; add byte ptr [ebp - 0x7cec8b40], al; in al, dx; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x000b07e9: rcl byte ptr [eax], 0x5f; pop esi; ret; 
0x0019badf: rcl byte ptr [eax], 0x83; ret 0x5310; 
0x0019e935: rcl byte ptr [eax], 0x83; ret 0x5710; 
0x0019961d: rcl byte ptr [eax], 0x83; ret 0x8310; 
0x001315e4: rcl byte ptr [eax], 0x83; ret 0x890c; 
0x000d90c9: rcl byte ptr [eax], 0x83; ret 0x8910; 
0x000c6d8c: rcl byte ptr [eax], 0x83; ret 0x8b10; 
0x000c105b: rcl byte ptr [eax], 0xe8; scasd eax, dword ptr es:[edi]; or al, 0; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ff4: rcl byte ptr [eax], 0xf; mov esp, 0x6613e8d2; or al, 0; add ecx, 0x109ff6; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf4: rcl byte ptr [eax], 0xf; mov esp, 0x9913e8d2; or al, 0; add ecx, 0x10d276; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdca3: rcl byte ptr [eax], cl; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001707dc: rcl byte ptr [ecx - 0x3b7d0000]; adc byte ptr [ebp - 0x7cd68b40], al; in al, dx; add al, 0x83; ret; 
0x0002485b: rcl byte ptr [ecx], cl; add byte ptr [ebp - 0x6a9e97d], cl; call dword ptr [edi + 0x57]; 
0x00178f6f: rcl byte ptr [edi - 0x18], 0x2a; cmpsb byte ptr [esi], byte ptr es:[edi]; hlt; call ecx; 
0x00178e8f: rcl byte ptr [edi - 0x18], 0xa; cmpsd dword ptr [esi], dword ptr es:[edi]; hlt; call ecx; 
0x0014529c: rcl byte ptr [edx + 0x6a]; or dword ptr [ebx - 0x72dfdba4], ecx; or dword ptr [eax + 0x5a], 0xfffffff9; call dword ptr [eax + 0x51]; 
0x0014d9cb: rcl dword ptr [eax + 0x4e4c], 0xf6; ret 0xf01; 
0x001394b6: rcl dword ptr [eax - 0x73], 0x87; outsd dx, dword ptr [esi]; push esi; stc; call dword ptr [eax - 1]; 
0x000c1dc5: rcl dword ptr [eax], 0x83; ret 0x2910; 
0x0002e3c7: rcl dword ptr [eax]; add byte ptr [ebx - 0x72c7db84], cl; xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x000bdd8a: rcl dword ptr [eax]; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdd20: rcl dword ptr [ebp - 0x2e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c1162: rcl dword ptr [ebx], 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016f16b: rcl dword ptr [ecx + 0x52], 0x89; push esp; and al, 0x14; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x000a1e32: rcl dword ptr [edi + 0xe], cl; add byte ptr [ecx + 0x19afdec6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000bbd1a: rcl dword ptr [edi], 0xf2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1063: rcl dword ptr [edx + 0x300109f], 0xc; xchg ecx, eax; jmp ecx; 
0x000bdd63: rcl dword ptr [edx], 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1020: rcl ebp, 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0018768a: rcl ebx, 0xe3; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000ba5fe: rcl ebx, 7; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bdca1: rcl esp, 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0002703c: rcr al, 1; adc eax, 0x241c8900; call edi; 
0x001324f1: rcr byte ptr [eax], 0x39; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x00169ad9: rcr byte ptr [eax], 0x50; call 0x169880; add esp, 0x2c; ret; 
0x001398ef: rcr byte ptr [ebx + 0x5e], 0x5d; ret; 
0x000251ff: rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00040f5d: rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x00026294: rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x0013d076: rcr byte ptr [ebx + 0x5e], 1; pop edi; ret; 
0x00059fa0: rcr byte ptr [ebx + 0x5e], 1; ret 4; 
0x00053f9b: rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000ac411: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; pop edi; pop ebp; ret; 
0x00094ea8: rcr byte ptr [ebx + 0x5e], cl; mov eax, edx; ret; 
0x00153190: rcr byte ptr [ebx + 0x5f], 1; ret; 
0x001906a0: rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x0003ed4a: rcr byte ptr [ebx - 0x77], cl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x000895f9: rcr byte ptr [ebx - 9], 0xd8; ret; 
0x00173980: rcr byte ptr [ebx], 0x89; loope 0x17390e; ret 0x25; 
0x0005c7e1: rcr byte ptr [ebx], 0x89; ret 0x25; 
0x000f2415: rcr byte ptr [ebx], 0x89; ret; 
0x00188ca9: rcr byte ptr [ecx - 0x74acafae], 1; inc esp; and al, 0x18; call dword ptr [eax + 0x40]; 
0x000a0d6b: rcr byte ptr [ecx], 0; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0011ad5b: rcr byte ptr [ecx], 0xd1; sbb eax, 0; pop ebx; pop esi; ret; 
0x001a52d2: rcr byte ptr [edi + 0x5d], 0x5b; ret; 
0x000ac415: rcr byte ptr [edi + 0x5d], 1; ret; 
0x00192332: rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000b07dd: rcr byte ptr [edi + 0x5e], 1; ret; 
0x001733b6: rcr byte ptr [edi + edi*8], 0xb0; nop; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00123bcc: rcr byte ptr [edi], 0; add al, ch; ret; 
0x000a639c: rcr byte ptr [edx + 0x5b], 0x5e; ret; 
0x0015476f: rcr byte ptr [edx], 0x89; ret 0x25; 
0x0010dcd6: rcr byte ptr [edx], 0x89; ret 0x8d89; 
0x000405eb: rcr byte ptr [esi + 0x5f], 0x5d; ret; 
0x00125d11: rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x0003ed4d: rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00053892: rcr byte ptr [esi + 0x5f], 1; ret; 
0x000c6dec: rcr byte ptr [esi - 9], 0xd8; cmp ecx, edi; pop edi; cmovg eax, edx; ret; 
0x00030d99: rcr byte ptr [esi], 0x89; loope 0x30d27; ret 0x25; 
0x00031029: rcr byte ptr [esi], 0x89; loope 0x30fb7; ret 0x25; 
0x000b9ae4: rcr dword ptr [ebp + 0x12], 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c1118: rcr dword ptr [ebp - 0x61], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x00053820: rcr dword ptr [ebx + 0x5e], 1; sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00127a59: rcr dword ptr [ebx + esi*8 + 0x10c483ff], cl; add esp, 0xc; ret; 
0x000bb146: rcr dword ptr [ebx - 3], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bb106: rcr dword ptr [ebx], 0xfd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000a0ccc: rcr dword ptr [ecx], 0; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x0013f547: rcr dword ptr [ecx], 0xd2; mov eax, edx; pop ebx; pop esi; ret; 
0x00043550: rcr dword ptr [ecx], 0xd3; pop ebx; setb al; ret; 
0x000b9ba2: rcr dword ptr [edi + 0x3001111], 0xc; cdq; jmp ecx; 
0x000bdcdb: rcr dword ptr [edx + 0x30010d2], 0xc; xchg ecx, eax; jmp ecx; 
0x000bb207: rcr dword ptr [edx + 0x30010fc], 0xc; cdq; jmp ecx; 
0x000c0fdb: rcr dword ptr [edx], 0xa0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99e2: rcr edi, 0x12; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb1c2: rcr edi, 0xfc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b65: rcr esp, 0x11; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0012d54a: rdpkru; lea ecx, [ebx + ebx]; pop ebx; shr eax, cl; and eax, 3; ret; 
0x0010e470: rdtsc; rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x000c2c5a: rep movsb byte ptr es:[edi], byte ptr [esi]; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x00091210: rep movsd dword ptr es:[edi], dword ptr [esi]; mov byte ptr [edx + 0x88], 1; add esp, 4; pop esi; pop edi; ret; 
0x00153aef: rep movsd dword ptr es:[edi], dword ptr [esi]; mov dword ptr [eax + 0x7c], 0; add esp, 4; pop esi; pop edi; ret; 
0x000c2cdd: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2cb3: rep movsd dword ptr es:[edi], dword ptr [esi]; mov esi, edx; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00090e18: rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000c2d1c: rep movsd dword ptr es:[edi], dword ptr [esi]; xchg edi, eax; mov esi, edx; ret; 
0x000c2d7b: rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x000c2d77: rep stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0010cd06: rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00028572: ret 0; 
0x00087537: ret 0x1000; 
0x0008fff4: ret 0x100; 
0x000620b3: ret 0x101; 
0x00184878: ret 0x105; 
0x00090375: ret 0x1074; 
0x000a7355: ret 0x1089; 
0x000a3fb1: ret 0x108; 
0x0005ab9a: ret 0x108d; 
0x000b33ba: ret 0x10; 
0x00043192: ret 0x10b8; 
0x000e2111: ret 0x10e9; 
0x000a2153: ret 0x110; 
0x0003bcdf: ret 0x1136; 
0x0009848f: ret 0x118b; 
0x00024787: ret 0x11; 
0x0003ccfa: ret 0x11b; 
0x0012bc5a: ret 0x11bb; 
0x000abc4a: ret 0x11cb; 
0x000619e5: ret 0x11f; 
0x0013bbfa: ret 0x121b; 
0x0004d259: ret 0x127e; 
0x0005b306: ret 0x12; 
0x0012bb3a: ret 0x12db; 
0x000d7772: ret 0x12e9; 
0x0010bd54: ret 0x1310; 
0x0013baaa: ret 0x136b; 
0x001227cc: ret 0x1389; 
0x0006e90d: ret 0x13; 
0x0005a293: ret 0x13eb; 
0x000fba1a: ret 0x13fb; 
0x000273d4: ret 0x142b; 
0x00033a8f: ret 0x1474; 
0x000affe4: ret 0x1489; 
0x0014f2e1: ret 0x148b; 
0x000d3808: ret 0x148d; 
0x0003b396: ret 0x14; 
0x0017a3b8: ret 0x1572; 
0x00087bbf: ret 0x157d; 
0x000b2e3a: ret 0x15; 
0x000972a9: ret 0x15e9; 
0x0008b80a: ret 0x160b; 
0x001443ef: ret 0x1674; 
0x0004318a: ret 0x1676; 
0x000c2017: ret 0x167c; 
0x000d3745: ret 0x1689; 
0x0008010a: ret 0x16; 
0x000df266: ret 0x16d; 
0x000fb6ba: ret 0x175b; 
0x0011b95d: ret 0x1772; 
0x0009b346: ret 0x1774; 
0x0012b37f: ret 0x1789; 
0x00186f85: ret 0x178b; 
0x001470d5: ret 0x1875; 
0x000c3c5c: ret 0x188b; 
0x00071e69: ret 0x18b; 
0x000dc8ab: ret 0x190; 
0x00145267: ret 0x1988; 
0x000a0b8c: ret 0x19; 
0x0002c365: ret 0x1a73; 
0x0009b32c: ret 0x1a75; 
0x001050ca: ret 0x1a8; 
0x00090b9e: ret 0x1a; 
0x00122d9f: ret 0x1b75; 
0x00049563: ret 0x1b8; 
0x00080b2b: ret 0x1b; 
0x00100deb: ret 0x1be; 
0x00170e21: ret 0x1beb; 
0x001009f1: ret 0x1c7e; 
0x00091988: ret 0x1c8b; 
0x000e4246: ret 0x1c8d; 
0x0013b13a: ret 0x1cdb; 
0x0019a8be: ret 0x1d72; 
0x000a2616: ret 0x1d73; 
0x000c17de: ret 0x1d75; 
0x000df93d: ret 0x1db9; 
0x0004e2ac: ret 0x1e74; 
0x00053e20: ret 0x1e89; 
0x000acc2a: ret 0x1eb; 
0x0013af4a: ret 0x1ecb; 
0x0013aefa: ret 0x1f1b; 
0x0013aeaa: ret 0x1f6b; 
0x0013f5ad: ret 0x1f72; 
0x00053d2d: ret 0x1f74; 
0x001a9e4e: ret 0x1f75; 
0x00040bfe: ret 0x1f; 
0x000db0eb: ret 0x1fb8; 
0x0013ae5a: ret 0x1fbb; 
0x00034c50: ret 0x200; 
0x001894bd: ret 0x202; 
0x0005ad9a: ret 0x207b; 
0x00043100: ret 0x20b8; 
0x0008ad3a: ret 0x20db; 
0x00147f37: ret 0x2174; 
0x0017ac2a: ret 0x21eb; 
0x0011ab8a: ret 0x228b; 
0x0005ab1a: ret 0x22fb; 
0x000aaa5a: ret 0x23bb; 
0x0012a9ea: ret 0x242b; 
0x0003c481: ret 0x2474; 
0x00173d69: ret 0x248c; 
0x000aa8ba: ret 0x255b; 
0x000aa87a: ret 0x259b; 
0x000258c9: ret 0x25; 
0x0015349c: ret 0x2675; 
0x000c1d47: ret 0x2676; 
0x000c2007: ret 0x267c; 
0x001009e7: ret 0x267e; 
0x000c17f9: ret 0x275; 
0x00089c30: ret 0x2773; 
0x000b0bea: ret 0x280f; 
0x000c3b4c: ret 0x288b; 
0x000d38a0: ret 0x28b; 
0x0005d42a: ret 0x2901; 
0x000b99f8: ret 0x2910; 
0x000c1e98: ret 0x2940; 
0x000e3624: ret 0x2964; 
0x0015a4bb: ret 0x2974; 
0x00047a89: ret 0x29; 
0x000287c1: ret 0x29e9; 
0x0009a36a: ret 0x2aab; 
0x00083d7a: ret 0x2b2c; 
0x000aa7c4: ret 0x2b73; 
0x0013ab42: ret 0x2c6; 
0x001a3fba: ret 0x2c73; 
0x0013a17a: ret 0x2c9b; 
0x00137272: ret 0x2d3c; 
0x0019668e: ret 0x2d72; 
0x0009690c: ret 0x2d75; 
0x000ec8b5: ret 0x2db9; 
0x000acb3a: ret 0x2db; 
0x0007b6fc: ret 0x2de9; 
0x000c2301: ret 0x2e10; 
0x001469b3: ret 0x2eb8; 
0x00028354: ret 0x2ec3; 
0x0010c4ea: ret 0x2f0; 
0x0010c3ea: ret 0x2f1; 
0x0007802a: ret 0x2f6; 
0x00035582: ret 0x2f72; 
0x00189e8a: ret 0x2f8b; 
0x00177981: ret 0x2feb; 
0x00041c6a: ret 0x3039; 
0x000a9d8a: ret 0x308b; 
0x00129d6a: ret 0x30ab; 
0x000a9d4a: ret 0x30cb; 
0x0010735c: ret 0x30f; 
0x000444c3: ret 0x3101; 
0x000a9d0a: ret 0x310b; 
0x0012ca0c: ret 0x3113; 
0x00048e19: ret 0x311c; 
0x000a9cca: ret 0x314b; 
0x00129c8a: ret 0x318b; 
0x000acafa: ret 0x31b; 
0x000a9c2a: ret 0x31eb; 
0x000a9bea: ret 0x322b; 
0x000a9baa: ret 0x326b; 
0x001a497b: ret 0x3273; 
0x000d4317: ret 0x328b; 
0x000a9b5a: ret 0x32bb; 
0x000a9b0a: ret 0x330b; 
0x00038c59: ret 0x3325; 
0x000a771a: ret 0x3374; 
0x000a8a4b: ret 0x348d; 
0x0007990a: ret 0x350b; 
0x00178d30: ret 0x3574; 
0x000acaba: ret 0x35b; 
0x00059ea1: ret 0x3674; 
0x000c1ff7: ret 0x367c; 
0x0010996d: ret 0x367e; 
0x000ac194: ret 0x3801; 
0x00103638: ret 0x3839; 
0x000c17c3: ret 0x3875; 
0x0006c38b: ret 0x389; 
0x000a73d6: ret 0x38b; 
0x000469a4: ret 0x38e9; 
0x0002868b: ret 0x3901; 
0x0003115c: ret 0x3902; 
0x0003a66a: ret 0x3903; 
0x000298ed: ret 0x3904; 
0x0005e066: ret 0x3906; 
0x001aba85: ret 0x3908; 
0x000debab: ret 0x3909; 
0x001754b0: ret 0x390c; 
0x0009ee73: ret 0x3910; 
0x0018322e: ret 0x3914; 
0x00082f3b: ret 0x393f; 
0x000a73dd: ret 0x3964; 
0x000c1d34: ret 0x3976; 
0x000e9486: ret 0x398f; 
0x000ad53e: ret 0x3990; 
0x000aca7a: ret 0x39b; 
0x0008944a: ret 0x39cb; 
0x0003943a: ret 0x39db; 
0x000da98a: ret 0x39f5; 
0x00169406: ret 0x3a0f; 
0x0003065c: ret 0x3a3c; 
0x001a9e33: ret 0x3a75; 
0x0007b160: ret 0x3a8b; 
0x000e937a: ret 0x3a9b; 
0x000e931a: ret 0x3afb; 
0x0003a2a3: ret 0x3b01; 
0x00147765: ret 0x3b04; 
0x000a92da: ret 0x3b3b; 
0x0018316d: ret 0x3b58; 
0x0017f29e: ret 0x3b74; 
0x000a929a: ret 0x3b7b; 
0x000570fd: ret 0x3b8; 
0x000a925a: ret 0x3bbb; 
0x0007dccd: ret 0x3c01; 
0x0008af19: ret 0x3c72; 
0x0017e611: ret 0x3c75; 
0x000da964: ret 0x3c8d; 
0x001190ea: ret 0x3d2b; 
0x000a9f1a: ret 0x3d73; 
0x00061418: ret 0x3d; 
0x000aca3a: ret 0x3db; 
0x001a3fa5: ret 0x3e73; 
0x00081292: ret 0x3e89; 
0x000d8f6a: ret 0x3eab; 
0x000d8eea: ret 0x3f2b; 
0x00109a87: ret 0x3f8b; 
0x000c2367: ret 0x3f; 
0x000d8e5a: ret 0x3fbb; 
0x00083d09: ret 0x3fe9; 
0x001b02de: ret 0x4000; 
0x000a9e5a: ret 0x4073; 
0x001599e1: ret 0x4089; 
0x000a02f5: ret 0x408b; 
0x00057152: ret 0x408d; 
0x00043164: ret 0x40b8; 
0x0005ab34: ret 0x40c7; 
0x00149a67: ret 0x4189; 
0x0005de06: ret 0x418d; 
0x0008858a: ret 0x41; 
0x000ac9fa: ret 0x41b; 
0x000ff199: ret 0x41e9; 
0x00027afc: ret 0x420f; 
0x00148bfa: ret 0x421b; 
0x00100675: ret 0x428b; 
0x000dc7a5: ret 0x428d; 
0x0009e568: ret 0x42e8; 
0x000c6086: ret 0x42e9; 
0x000a1a76: ret 0x430; 
0x00037618: ret 0x430f; 
0x00088aea: ret 0x432b; 
0x000382fa: ret 0x435; 
0x0017040f: ret 0x4388; 
0x00097075: ret 0x438d; 
0x0014574e: ret 0x4439; 
0x0007b49b: ret 0x447c; 
0x001348e2: ret 0x4483; 
0x000290b2: ret 0x4489; 
0x0003f9b2: ret 0x448b; 
0x0005e072: ret 0x448d; 
0x0002d481: ret 0x44c7; 
0x00023e66: ret 0x44e8; 
0x000565aa: ret 0x44f6; 
0x0013f508: ret 0x4572; 
0x00098598: ret 0x4575; 
0x00082cd7: ret 0x4589; 
0x00030fcf: ret 0x458b; 
0x00048bdb: ret 0x458d; 
0x000dca2c: ret 0x45c7; 
0x0013e876: ret 0x460f; 
0x000e87fa: ret 0x461b; 
0x00134f34: ret 0x4639; 
0x001899c3: ret 0x4689; 
0x0005c5c1: ret 0x468b; 
0x0007a716: ret 0x468d; 
0x000dcc07: ret 0x470f; 
0x00104a76: ret 0x474; 
0x000aa204: ret 0x4774; 
0x00147e4b: ret 0x4789; 
0x000355f7: ret 0x478b; 
0x0011b1b7: ret 0x478d; 
0x0016eeb9: ret 0x4889; 
0x00042ae1: ret 0x488b; 
0x00153c22: ret 0x488d; 
0x00120ea0: ret 0x489; 
0x0005aea1: ret 0x48b; 
0x00041f55: ret 0x48d; 
0x001384fa: ret 0x491b; 
0x001a81f3: ret 0x498d; 
0x000c21e4: ret 0x4a8d; 
0x000c69e0: ret 0x4b8b; 
0x0007a9d7: ret 0x4be9; 
0x000ee90b: ret 0x4be; 
0x00031d34: ret 0x4c0f; 
0x001a4961: ret 0x4c73; 
0x0009176d: ret 0x4c75; 
0x000e144a: ret 0x4c80; 
0x001b0b1b: ret 0x4c83; 
0x000298db: ret 0x4c89; 
0x0003028d: ret 0x4c8b; 
0x00031d3f: ret 0x4d0f; 
0x001895c0: ret 0x4d72; 
0x000e807a: ret 0x4d9b; 
0x000fc57d: ret 0x4e0f; 
0x00052c6f: ret 0x4e74; 
0x0007b1c8: ret 0x4e80; 
0x0013beb1: ret 0x4e8b; 
0x000e7f3a: ret 0x4edb; 
0x00097049: ret 0x4f0f; 
0x00122d65: ret 0x4f75; 
0x0003a63d: ret 0x4f89; 
0x00087e6a: ret 0x4fab; 
0x0014a298: ret 0x5001; 
0x000dc84f: ret 0x5005; 
0x00127e0a: ret 0x500b; 
0x00089769: ret 0x5052; 
0x001a3f90: ret 0x5073; 
0x000a6a21: ret 0x508d; 
0x0004d39d: ret 0x5152; 
0x000f18ae: ret 0x5201; 
0x0017d418: ret 0x5204; 
0x00172378: ret 0x5208; 
0x000e7bda: ret 0x523b; 
0x000b0b6e: ret 0x528d; 
0x00127b2a: ret 0x52eb; 
0x0019bae2: ret 0x5310; 
0x00089bd2: ret 0x532b; 
0x00127ada: ret 0x533b; 
0x000b0443: ret 0x5350; 
0x0017b52a: ret 0x5356; 
0x000c17a8: ret 0x5375; 
0x0010013e: ret 0x5388; 
0x000d350b: ret 0x5389; 
0x0011172f: ret 0x538d; 
0x0007f0b9: ret 0x5403; 
0x00100f8f: ret 0x5420; 
0x00146a27: ret 0x5439; 
0x001279da: ret 0x543b; 
0x0014ec19: ret 0x5473; 
0x00146bfc: ret 0x5484; 
0x00044911: ret 0x5488; 
0x0002e0af: ret 0x5489; 
0x000e8229: ret 0x548b; 
0x00159f92: ret 0x548d; 
0x0010731a: ret 0x5523; 
0x001a9e18: ret 0x5575; 
0x0005c4ae: ret 0x5589; 
0x00103106: ret 0x5603; 
0x001a4c74: ret 0x5608; 
0x00082f00: ret 0x562b; 
0x0005619b: ret 0x5652; 
0x000a25f2: ret 0x5657; 
0x00147f1f: ret 0x5675; 
0x000fede4: ret 0x5689; 
0x000feffc: ret 0x568b; 
0x0003deee: ret 0x56c3; 
0x000e4bc9: ret 0x56e9; 
0x001a39d5: ret 0x5708; 
0x0019e938: ret 0x5710; 
0x00137647: ret 0x572b; 
0x0005d097: ret 0x574; 
0x0004157d: ret 0x5750; 
0x0016f64f: ret 0x5752; 
0x0013f2cf: ret 0x5755; 
0x0009dbdb: ret 0x578b; 
0x000a5d45: ret 0x578d; 
0x0011764a: ret 0x57cb; 
0x0010b80f: ret 0x583b; 
0x000a3b21: ret 0x588d; 
0x000721ca: ret 0x598d; 
0x0018744a: ret 0x59cb; 
0x00051270: ret 0x59e9; 
0x000e354e: ret 0x5c29; 
0x0008fef1: ret 0x5c72; 
0x001017c1: ret 0x5c74; 
0x000da683: ret 0x5c89; 
0x000c5a03: ret 0x5c8b; 
0x000b236a: ret 0x5c8d; 
0x001a38ac: ret 0x5d5e; 
0x00153104: ret 0x5d5f; 
0x000fc192: ret 0x5d89; 
0x0007098f: ret 0x5d8d; 
0x00156fea: ret 0x5e2b; 
0x0011f6d9: ret 0x5e5b; 
0x0008977e: ret 0x5e8b; 
0x00030e65: ret 0x5f3c; 
0x0007e76e: ret 0x5f5e; 
0x001a3f7b: ret 0x6273; 
0x00114b5b: ret 0x6274; 
0x000deb69: ret 0x62e9; 
0x00156a4a: ret 0x63cb; 
0x000c62b0: ret 0x63e9; 
0x000cf93a: ret 0x641; 
0x000cf6ba: ret 0x643; 
0x000da498: ret 0x64f7; 
0x0007c70e: ret 0x6509; 
0x00099a78: ret 0x6574; 
0x000ad62d: ret 0x65e9; 
0x000f30fc: ret 0x6601; 
0x00140726: ret 0x6608; 
0x0018a351: ret 0x6610; 
0x000b92d3: ret 0x6640; 
0x001a4947: ret 0x6673; 
0x00051bdf: ret 0x6674; 
0x00043375: ret 0x66c3; 
0x000c1d67: ret 0x676; 
0x000cc13a: ret 0x679; 
0x0010e3c4: ret 0x67; 
0x0013c79a: ret 0x67b; 
0x000c2027: ret 0x67c; 
0x000427db: ret 0x6889; 
0x0002f76e: ret 0x689; 
0x00127625: ret 0x68b; 
0x0015438e: ret 0x6904; 
0x0009931c: ret 0x6974; 
0x0005ec7c: ret 0x6a52; 
0x0012cafd: ret 0x6a75; 
0x00046858: ret 0x6ae9; 
0x000246ba: ret 0x6b5; 
0x000550de: ret 0x6b89; 
0x000707c9: ret 0x6b8b; 
0x000aa5ef: ret 0x6be9; 
0x00134147: ret 0x6c6; 
0x00140721: ret 0x6c74; 
0x000fef3d: ret 0x6c8b; 
0x0015310a: ret 0x6db7; 
0x000c1a80: ret 0x6deb; 
0x000e4ea1: ret 0x6eb8; 
0x000c84ad: ret 0x6eb; 
0x000df236: ret 0x6eba; 
0x00094a99: ret 0x6f72; 
0x00117933: ret 0x6fc; 
0x00146aa7: ret 0x6fe9; 
0x0012cd26: ret 0x7089; 
0x0005d2d2: ret 0x708d; 
0x00049286: ret 0x70e9; 
0x00125b9a: ret 0x727b; 
0x000a5f32: ret 0x728d; 
0x000952dc: ret 0x72e9; 
0x0006d62d: ret 0x7374; 
0x0008c6da: ret 0x73b; 
0x0005c20b: ret 0x7401; 
0x000e98a6: ret 0x7402; 
0x000a58bc: ret 0x7404; 
0x001b1e0e: ret 0x7406; 
0x001b07a1: ret 0x7407; 
0x000815ea: ret 0x7408; 
0x000c207b: ret 0x7410; 
0x0007c311: ret 0x7420; 
0x0006323f: ret 0x7489; 
0x0003e7ed: ret 0x748b; 
0x000404c3: ret 0x748d; 
0x0004e36f: ret 0x74ff; 
0x00053f23: ret 0x7501; 
0x00083346: ret 0x7502; 
0x000322b7: ret 0x7503; 
0x000bc09c: ret 0x7504; 
0x0013f334: ret 0x7507; 
0x001a6d7e: ret 0x7508; 
0x000bc0b1: ret 0x7510; 
0x000bc0b6: ret 0x7520; 
0x000bc0bb: ret 0x7540; 
0x00114b35: ret 0x7549; 
0x000558ba: ret 0x755b; 
0x00065b58: ret 0x757c; 
0x000d446c: ret 0x7589; 
0x000aef93: ret 0x758b; 
0x00149a7c: ret 0x75df; 
0x0005582a: ret 0x75eb; 
0x000257fa: ret 0x761b; 
0x0009a494: ret 0x768d; 
0x001b0e47: ret 0x774; 
0x0015561a: ret 0x77fb; 
0x000fc030: ret 0x7839; 
0x00147725: ret 0x7875; 
0x00054176: ret 0x789; 
0x00091a9b: ret 0x78b; 
0x000aa418: ret 0x78e9; 
0x0011549a: ret 0x797b; 
0x0011543a: ret 0x79db; 
0x000da32d: ret 0x7b89; 
0x00101383: ret 0x7b8b; 
0x001343a2: ret 0x7c01; 
0x001a8bd1: ret 0x7c06; 
0x001a8be1: ret 0x7c07; 
0x001a8bf1: ret 0x7c09; 
0x001a8c01: ret 0x7c0a; 
0x001a8c11: ret 0x7c0b; 
0x001a8c21: ret 0x7c0d; 
0x001a8c31: ret 0x7c0e; 
0x001a8c41: ret 0x7c0f; 
0x001af2da: ret 0x7c39; 
0x001094d6: ret 0x7c80; 
0x0005eb10: ret 0x7c83; 
0x000aa6aa: ret 0x7c89; 
0x000ec00d: ret 0x7c8b; 
0x000ccf79: ret 0x7ce9; 
0x000a512a: ret 0x7ceb; 
0x000298b2: ret 0x7d74; 
0x001a3a15: ret 0x7e10; 
0x0009898f: ret 0x7e74; 
0x00148ec8: ret 0x7e8b; 
0x0014f5c5: ret 0x7e8d; 
0x000e50c1: ret 0x7e9; 
0x00024f1a: ret 0x7efb; 
0x000b055f: ret 0x7f7f; 
0x00185a34: ret 0x7f8; 
0x00084e1a: ret 0x7ffb; 
0x000398ca: ret 0x8001; 
0x0015b82c: ret 0x8014; 
0x00100c3e: ret 0x804; 
0x000933bb: ret 0x8089; 
0x0018310c: ret 0x808b; 
0x00190eb5: ret 0x80; 
0x000c4d1a: ret 0x80fb; 
0x000fe85f: ret 0x8104; 
0x00095128: ret 0x8108; 
0x00122ac2: ret 0x811f; 
0x000d4cda: ret 0x813b; 
0x0013c3ac: ret 0x8166; 
0x000a0cf8: ret 0x8188; 
0x000c783c: ret 0x81eb; 
0x00034c0a: ret 0x820b; 
0x0002e07a: ret 0x820f; 
0x0014da72: ret 0x828d; 
0x0002a919: ret 0x8301; 
0x0013e7a4: ret 0x8302; 
0x000b023b: ret 0x8303; 
0x00053d63: ret 0x8304; 
0x000b020b: ret 0x8305; 
0x0007b21d: ret 0x8308; 
0x00105fa3: ret 0x830c; 
0x00035722: ret 0x830f; 
0x000da05c: ret 0x8310; 
0x00096c01: ret 0x8316; 
0x00135841: ret 0x8318; 
0x000c2ba5: ret 0x8320; 
0x000e8521: ret 0x8334; 
0x00024ada: ret 0x833b; 
0x000b9324: ret 0x8340; 
0x000436f2: ret 0x835b; 
0x00122035: ret 0x8363; 
0x0014eac5: ret 0x8366; 
0x000c4427: ret 0x8380; 
0x000a6f8f: ret 0x8388; 
0x0009dbf4: ret 0x8389; 
0x00094d9e: ret 0x838b; 
0x0013445a: ret 0x838d; 
0x000d28ae: ret 0x8390; 
0x000d4a6a: ret 0x83ab; 
0x0004cc63: ret 0x83ff; 
0x0003044e: ret 0x8401; 
0x000f173c: ret 0x8402; 
0x000c2e45: ret 0x8404; 
0x0002de99: ret 0x840f; 
0x001349a6: ret 0x846f; 
0x001abae0: ret 0x8489; 
0x0003c8fb: ret 0x848b; 
0x0010c5ca: ret 0x84b; 
0x0004336f: ret 0x8501; 
0x000c7584: ret 0x8504; 
0x00070e97: ret 0x8508; 
0x0002ce9f: ret 0x850f; 
0x00056edd: ret 0x8510; 
0x00138047: ret 0x8518; 
0x000c23ba: ret 0x8540; 
0x000570ee: ret 0x8589; 
0x00031de5: ret 0x858b; 
0x00033831: ret 0x858d; 
0x0012484a: ret 0x85cb; 
0x001b481a: ret 0x85fb; 
0x000c1abf: ret 0x860f; 
0x001147ba: ret 0x865b; 
0x0012a86f: ret 0x868d; 
0x000c477a: ret 0x869b; 
0x00100f17: ret 0x86eb; 
0x000a9f6d: ret 0x872; 
0x00040f9b: ret 0x878d; 
0x00100537: ret 0x87eb; 
0x0002be31: ret 0x8801; 
0x0013f0b0: ret 0x8802; 
0x000ddae5: ret 0x880f; 
0x0014735d: ret 0x8830; 
0x001145da: ret 0x883b; 
0x000eb7ec: ret 0x8875; 
0x00152e5a: ret 0x889; 
0x00094e83: ret 0x88; 
0x0011456a: ret 0x88ab; 
0x0013c58a: ret 0x88b; 
0x00028489: ret 0x8901; 
0x000db3db: ret 0x8902; 
0x0017e917: ret 0x8903; 
0x0002cb13: ret 0x8904; 
0x0014f289: ret 0x8908; 
0x00024aa0: ret 0x8909; 
0x000e9833: ret 0x890c; 
0x000eabc1: ret 0x890f; 
0x000d90cc: ret 0x8910; 
0x001a57fa: ret 0x8912; 
0x000cd2c4: ret 0x8918; 
0x00059995: ret 0x8951; 
0x0003a76c: ret 0x8952; 
0x001861b0: ret 0x895b; 
0x0010e917: ret 0x8965; 
0x0008113d: ret 0x8966; 
0x0018448a: ret 0x898b; 
0x000c446a: ret 0x89ab; 
0x000da800: ret 0x89f5; 
0x000fce33: ret 0x8a7; 
0x0002c72b: ret 0x8b01; 
0x00039c4d: ret 0x8b02; 
0x000b0220: ret 0x8b04; 
0x000b01f0: ret 0x8b06; 
0x0002855a: ret 0x8b07; 
0x00105f98: ret 0x8b08; 
0x000c2de1: ret 0x8b10; 
0x001363ba: ret 0x8b18; 
0x000aff01: ret 0x8b20; 
0x0015be31: ret 0x8b2c; 
0x0004142d: ret 0x8b50; 
0x00103348: ret 0x8b52; 
0x000c4d36: ret 0x8b65; 
0x000430d2: ret 0x8b8; 
0x0011428a: ret 0x8b8b; 
0x000c427a: ret 0x8b9b; 
0x000eb6d9: ret 0x8b; 
0x000c423a: ret 0x8bdb; 
0x000445d9: ret 0x8c0f; 
0x0014ebb6: ret 0x8c39; 
0x00088523: ret 0x8c74; 
0x0015f474: ret 0x8c8d; 
0x0003160a: ret 0x8d01; 
0x000542ef: ret 0x8d04; 
0x0002dd80: ret 0x8d08; 
0x0005d75f: ret 0x8d0f; 
0x000340fa: ret 0x8d1b; 
0x000481b7: ret 0x8d2e; 
0x00122f2d: ret 0x8d50; 
0x0004a305: ret 0x8d52; 
0x000d66a5: ret 0x8d89; 
0x0006ac26: ret 0x8d8b; 
0x000abf99: ret 0x8d8d; 
0x0008c63a: ret 0x8dc3; 
0x0003568a: ret 0x8dc; 
0x0015404a: ret 0x8dcb; 
0x00185c00: ret 0x8deb; 
0x00109943: ret 0x8e0f; 
0x000d5a5b: ret 0x8eb; 
0x00183f4a: ret 0x8ecb; 
0x00123f3a: ret 0x8edb; 
0x0007a2e7: ret 0x8f0f; 
0x00183efa: ret 0x8f1b; 
0x0009035b: ret 0x8f8b; 
0x0002c253: ret 0x901; 
0x00079658: ret 0x9066; 
0x0014cc33: ret 0x908; 
0x00173d4a: ret 0x90cb; 
0x000825f9: ret 0x90e9; 
0x00188c8b: ret 0x9174; 
0x000434fe: ret 0x920f; 
0x000e66d3: ret 0x930; 
0x001116fb: ret 0x930f; 
0x00153aca: ret 0x934b; 
0x00041dfc: ret 0x9387; 
0x000a36b5: ret 0x9389; 
0x000a31ff: ret 0x938b; 
0x00041fa8: ret 0x93eb; 
0x0008a1d3: ret 0x940f; 
0x001239ea: ret 0x942b; 
0x001239aa: ret 0x946b; 
0x001a9e69: ret 0x9474; 
0x000c8525: ret 0x9488; 
0x00055a60: ret 0x9489; 
0x0009a805: ret 0x948b; 
0x0015392a: ret 0x94eb; 
0x0005cab0: ret 0x950f; 
0x0002fb9d: ret 0x9539; 
0x00058905: ret 0x9588; 
0x000583c9: ret 0x9589; 
0x00057a64: ret 0x958b; 
0x000c384a: ret 0x95cb; 
0x001089d8: ret 0x95e9; 
0x000887d6: ret 0x9689; 
0x0002ac4a: ret 0x96; 
0x000feec1: ret 0x972; 
0x0008ef2c: ret 0x978b; 
0x000e3552: ret 0x988d; 
0x0005352a: ret 0x98eb; 
0x0013fcd8: ret 0x998b; 
0x00121db3: ret 0x9a75; 
0x00123115: ret 0x9ae9; 
0x0006e29b: ret 0x9aeb; 
0x0010c92b: ret 0x9b8; 
0x0012cd7a: ret 0x9b; 
0x0006c28c: ret 0x9beb; 
0x0004d2be: ret 0x9c0f; 
0x00151344: ret 0x9c72; 
0x00136081: ret 0x9c74; 
0x0014f682: ret 0x9c89; 
0x0009eaea: ret 0x9ca; 
0x00129094: ret 0x9ce9; 
0x001330ea: ret 0x9d2b; 
0x000d7bc6: ret 0x9d8b; 
0x000f311c: ret 0x9d8d; 
0x00153086: ret 0x9d8f; 
0x000434df: ret 0x9e0f; 
0x000842af: ret 0x9e3b; 
0x000ac42a: ret 0x9eb; 
0x000594b3: ret 0x9f0f; 
0x000d2eea: ret 0x9f2b; 
0x00147c1f: ret 0x9f7e; 
0x0009affd: ret 0xa00; 
0x0007c40a: ret 0xa0b; 
0x000829d1: ret 0xa165; 
0x0004610f: ret 0xa1e9; 
0x00122b4a: ret 0xa2cb; 
0x00122afa: ret 0xa31b; 
0x00149ff7: ret 0xa3c; 
0x000973ea: ret 0xa41; 
0x0003a9f9: ret 0xa4eb; 
0x0012288a: ret 0xa58b; 
0x0003c3b7: ret 0xa5e; 
0x000a1c20: ret 0xa72; 
0x00078548: ret 0xa75; 
0x000a26a6: ret 0xa76f; 
0x00186086: ret 0xa773; 
0x001225ea: ret 0xa82b; 
0x000faf74: ret 0xa874; 
0x00150bff: ret 0xa875; 
0x000d3128: ret 0xa8b; 
0x0007fe2b: ret 0xa9eb; 
0x00047e32: ret 0xa; 
0x000dc937: ret 0xaac; 
0x00039103: ret 0xab8b; 
0x000dc35a: ret 0xabb; 
0x0015221a: ret 0xabfb; 
0x0012220a: ret 0xac0b; 
0x000da97e: ret 0xac0f; 
0x001221ba: ret 0xac5b; 
0x00097bb9: ret 0xac73; 
0x00088398: ret 0xaceb; 
0x0004200a: ret 0xae0b; 
0x0013b420: ret 0xaf73; 
0x000d0768: ret 0xb0e9; 
0x0003325b: ret 0xb273; 
0x000a110a: ret 0xb374; 
0x001301ea: ret 0xb3; 
0x000d6438: ret 0xb48d; 
0x000d6b11: ret 0xb589; 
0x0010d944: ret 0xb58b; 
0x0010c2ba: ret 0xb5b; 
0x001299dd: ret 0xb5eb; 
0x0002bd90: ret 0xb60f; 
0x0008ff31: ret 0xb68d; 
0x0007055b: ret 0xb70f; 
0x000515df: ret 0xb74; 
0x000fc7a6: ret 0xb75; 
0x000afad3: ret 0xb801; 
0x000e1bd0: ret 0xb850; 
0x000e4fa2: ret 0xb8; 
0x0007f2b6: ret 0xb; 
0x0006133a: ret 0xbadb; 
0x0014637a: ret 0xbb01; 
0x00127f11: ret 0xbb03; 
0x001ade89: ret 0xbc89; 
0x00049e6b: ret 0xbc8b; 
0x001142f7: ret 0xbc8d; 
0x0010e39e: ret 0xbce9; 
0x0006784a: ret 0xbd8b; 
0x0002d55d: ret 0xbde9; 
0x001897e2: ret 0xbdeb; 
0x00057bdd: ret 0xbe0f; 
0x00120fba: ret 0xbe5b; 
0x0013c22a: ret 0xbeb; 
0x00060f2a: ret 0xbeeb; 
0x001140d9: ret 0xbf01; 
0x00095baa: ret 0xbf0f; 
0x000612ea: ret 0xbf8; 
0x0010e3b8: ret 0xbf98; 
0x0003fee7: ret 0xbfe9; 
0x00026ab3: ret 0xc031; 
0x00060dca: ret 0xc04b; 
0x0013c390: ret 0xc069; 
0x000a9e9a: ret 0xc072; 
0x001579dd: ret 0xc074; 
0x000280c8: ret 0xc083; 
0x000a7bb3: ret 0xc084; 
0x000268b3: ret 0xc085; 
0x000b0a9f: ret 0xc0be; 
0x0003be15: ret 0xc0d9; 
0x0011f118: ret 0xc0eb; 
0x00083b7b: ret 0xc101; 
0x00048b12: ret 0xc102; 
0x000fc18c: ret 0xc104; 
0x0017e8f6: ret 0xc105; 
0x0005ca2a: ret 0xc108; 
0x00115810: ret 0xc10c; 
0x0005c362: ret 0xc11f; 
0x0016f169: ret 0xc129; 
0x000d7a9c: ret 0xc139; 
0x00140781: ret 0xc166; 
0x000da958: ret 0xc169; 
0x0014527a: ret 0xc183; 
0x0003792a: ret 0xc189; 
0x000c8523: ret 0xc208; 
0x00104f3a: ret 0xc209; 
0x0004490f: ret 0xc220; 
0x00064ec8: ret 0xc221; 
0x00099977: ret 0xc231; 
0x000db72f: ret 0xc238; 
0x00120bba: ret 0xc25b; 
0x00042152: ret 0xc269; 
0x000e39ee: ret 0xc26b; 
0x0002e0ad: ret 0xc275; 
0x000df264: ret 0xc281; 
0x00039c4b: ret 0xc283; 
0x000990e3: ret 0xc289; 
0x001a47c9: ret 0xc2bb; 
0x000b24ee: ret 0xc301; 
0x00053691: ret 0xc339; 
0x000a0ad8: ret 0xc33d; 
0x000a9314: ret 0xc35b; 
0x000c6e14: ret 0xc35f; 
0x000a9f57: ret 0xc372; 
0x000eb0c7: ret 0xc383; 
0x00031d42: ret 0xc389; 
0x000a0a8a: ret 0xc38b; 
0x000a0a4a: ret 0xc3cb; 
0x0005d6de: ret 0xc3e9; 
0x00029158: ret 0xc483; 
0x000daa45: ret 0xc501; 
0x000c78cc: ret 0xc529; 
0x001469d8: ret 0xc583; 
0x00098995: ret 0xc589; 
0x0004c6ef: ret 0xc5e9; 
0x0013ef38: ret 0xc602; 
0x00064e01: ret 0xc629; 
0x00049933: ret 0xc639; 
0x000c4340: ret 0xc680; 
0x00030287: ret 0xc689; 
0x000a386e: ret 0xc6eb; 
0x0002d45d: ret 0xc704; 
0x001059ff: ret 0xc708; 
0x000ac32b: ret 0xc739; 
0x0002bdc4: ret 0xc73; 
0x00096de0: ret 0xc74; 
0x001206aa: ret 0xc76b; 
0x00025426: ret 0xc789; 
0x00087459: ret 0xc7e9; 
0x0005a11f: ret 0xc801; 
0x0011657c: ret 0xc839; 
0x00081132: ret 0xc883; 
0x00025b10: ret 0xc889; 
0x00033065: ret 0xc89; 
0x00047bd1: ret 0xc8b; 
0x0014dab4: ret 0xc8c1; 
0x000a8c47: ret 0xc8d; 
0x0017052a: ret 0xc8eb; 
0x00104990: ret 0xc901; 
0x00185054: ret 0xc919; 
0x000e1be0: ret 0xc931; 
0x00091d14: ret 0xc983; 
0x000ad696: ret 0xc985; 
0x000d5cea: ret 0xc; 
0x0013c6be: ret 0xca00; 
0x0003040c: ret 0xca08; 
0x0004d2c1: ret 0xca09; 
0x00170d0f: ret 0xca0f; 
0x0003fb63: ret 0xca21; 
0x0006101c: ret 0xca29; 
0x0006a9bd: ret 0xca39; 
0x000995f5: ret 0xca81; 
0x0008ef24: ret 0xca83; 
0x000268dd: ret 0xcac1; 
0x000a033a: ret 0xcadb; 
0x000e506c: ret 0xcae9; 
0x0003761b: ret 0xcb29; 
0x00095ff7: ret 0xcb83; 
0x0006a519: ret 0xcb89; 
0x000a70c2: ret 0xcb8; 
0x0013016a: ret 0xccab; 
0x000c9ddc: ret 0xcce9; 
0x001300ea: ret 0xcd2b; 
0x000375d9: ret 0xcd89; 
0x000dc738: ret 0xcdb8; 
0x0017005a: ret 0xcdbb; 
0x0003002a: ret 0xcdeb; 
0x0005d593: ret 0xce39; 
0x0011ff9a: ret 0xce7b; 
0x00027bb8: ret 0xce80; 
0x001163b0: ret 0xce89; 
0x0012ff6a: ret 0xceab; 
0x0009e8fc: ret 0xceb; 
0x0009ff5a: ret 0xcebb; 
0x000f18a4: ret 0xd001; 
0x0007b98b: ret 0xd008; 
0x0007b96a: ret 0xd009; 
0x0004d4f5: ret 0xd029; 
0x00182bf0: ret 0xd039; 
0x000daff8: ret 0xd069; 
0x0002f62b: ret 0xd089; 
0x000aee28: ret 0xd101; 
0x001ae71e: ret 0xd104; 
0x0013997c: ret 0xd108; 
0x0015b77f: ret 0xd120; 
0x000dc795: ret 0xd129; 
0x0008fcea: ret 0xd12b; 
0x000fbc1b: ret 0xd139; 
0x00148eab: ret 0xd184; 
0x0006a809: ret 0xd189; 
0x0010a7cf: ret 0xd1e9; 
0x000ff0b7: ret 0xd201; 
0x0012d6e5: ret 0xd231; 
0x00025419: ret 0xd283; 
0x0004374f: ret 0xd285; 
0x000efb7a: ret 0xd29b; 
0x001500d8: ret 0xd2e8; 
0x001866a5: ret 0xd2e9; 
0x000adbbb: ret 0xd301; 
0x001ab513: ret 0xd304; 
0x000ecbb2: ret 0xd309; 
0x000dfd2e: ret 0xd329; 
0x000db89e: ret 0xd338; 
0x00091852: ret 0xd372; 
0x0014917b: ret 0xd384; 
0x0003fd02: ret 0xd389; 
0x000540f2: ret 0xd439; 
0x000fc489: ret 0xd473; 
0x00088a79: ret 0xd4e9; 
0x0009a1a6: ret 0xd574; 
0x00144104: ret 0xd589; 
0x000501d3: ret 0xd5e9; 
0x000adda4: ret 0xd601; 
0x000ef287: ret 0xd675; 
0x000553a2: ret 0xd689; 
0x001422d4: ret 0xd6e8; 
0x0009f72a: ret 0xd6eb; 
0x000aae7b: ret 0xd701; 
0x000e6664: ret 0xd729; 
0x0007aa36: ret 0xd739; 
0x00048678: ret 0xd789; 
0x0005f66a: ret 0xd7ab; 
0x0012f63a: ret 0xd7db; 
0x00068771: ret 0xd801; 
0x0011f60a: ret 0xd80b; 
0x000feaa4: ret 0xd839; 
0x0009f59a: ret 0xd87b; 
0x00051844: ret 0xd889; 
0x0003c08d: ret 0xd88; 
0x000ecee5: ret 0xd8eb; 
0x0003bdd4: ret 0xd8f7; 
0x00185934: ret 0xd9eb; 
0x000c7900: ret 0xd9f7; 
0x00107daf: ret 0xda01; 
0x000ecbbd: ret 0xda08; 
0x00060fa6: ret 0xda29; 
0x001099a3: ret 0xda75; 
0x0008f39a: ret 0xda7b; 
0x0012f34a: ret 0xdacb; 
0x0010e280: ret 0xdae9; 
0x0003e127: ret 0xdaf7; 
0x000a7c15: ret 0xdb31; 
0x0012f2ca: ret 0xdb4b; 
0x00106795: ret 0xdb85; 
0x000df27a: ret 0xdb9b; 
0x0005100f: ret 0xdbe9; 
0x000aa3a9: ret 0xdbf7; 
0x0011f1ea: ret 0xdc2b; 
0x0012f1ca: ret 0xdc4b; 
0x0008731f: ret 0xdd89; 
0x00082b4f: ret 0xde21; 
0x000e012f: ret 0xde72; 
0x0013eff9: ret 0xe072; 
0x0012480e: ret 0xe075; 
0x000422a0: ret 0xe083; 
0x0016fd40: ret 0xe0c1; 
0x00042dbf: ret 0xe0d3; 
0x0008c6b7: ret 0xe0eb; 
0x000a6337: ret 0xe12; 
0x0011ecca: ret 0xe14b; 
0x0002f712: ret 0xe183; 
0x0008b24e: ret 0xe280; 
0x0003a049: ret 0xe281; 
0x0002c3d2: ret 0xe283; 
0x0005c2ac: ret 0xe2c1; 
0x001aaa54: ret 0xe2d3; 
0x000f25ec: ret 0xe329; 
0x000af735: ret 0xe372; 
0x0009a21d: ret 0xe383; 
0x00025267: ret 0xe3d3; 
0x0003cc5c: ret 0xe3e9; 
0x001544b2: ret 0xe589; 
0x000fec69: ret 0xe5eb; 
0x0008e7fa: ret 0xe61b; 
0x000ade09: ret 0xe672; 
0x000547d7: ret 0xe675; 
0x00030c7f: ret 0xe683; 
0x001004d8: ret 0xe6eb; 
0x0015b347: ret 0xe74; 
0x0008e6ba: ret 0xe75b; 
0x000ad6d6: ret 0xe775; 
0x00089eba: ret 0xe7e9; 
0x001324f9: ret 0xe801; 
0x00100284: ret 0xe804; 
0x000a6560: ret 0xe821; 
0x00081fc6: ret 0xe852; 
0x000ddd8f: ret 0xe856; 
0x00125112: ret 0xe857; 
0x0005a2d3: ret 0xe883; 
0x0005a680: ret 0xe889; 
0x00053d20: ret 0xe89; 
0x00109752: ret 0xe8c0; 
0x00053737: ret 0xe8c1; 
0x00047d18: ret 0xe901; 
0x0007291c: ret 0xe904; 
0x00140784: ret 0xe908; 
0x000aaff4: ret 0xe972; 
0x00123154: ret 0xe975; 
0x0002afad: ret 0xe983; 
0x0008e014: ret 0xe989; 
0x0003fb59: ret 0xe9d1; 
0x0009b386: ret 0xe; 
0x00107cf9: ret 0xea01; 
0x0012e40a: ret 0xea0b; 
0x0016bff7: ret 0xea29; 
0x00185286: ret 0xea39; 
0x00152a54: ret 0xea3; 
0x0014f067: ret 0xea75; 
0x000475a9: ret 0xea81; 
0x0004aaca: ret 0xea83; 
0x000a873b: ret 0xea89; 
0x0010acea: ret 0xeac0; 
0x0006186f: ret 0xeac1; 
0x00085dcf: ret 0xead1; 
0x0002c02f: ret 0xead3; 
0x0007c656: ret 0xeaeb; 
0x000afd84: ret 0xeb01; 
0x00127ef1: ret 0xeb03; 
0x00159e44: ret 0xeb18; 
0x00042f8f: ret 0xeb20; 
0x000508a4: ret 0xeb39; 
0x00127e86: ret 0xeb53; 
0x0005947a: ret 0xeb83; 
0x0012e1fa: ret 0xec1b; 
0x000afcd7: ret 0xec72; 
0x000290c1: ret 0xec83; 
0x001391ef: ret 0xece9; 
0x0011e0ea: ret 0xed2b; 
0x000988cd: ret 0xed75; 
0x001440fd: ret 0xed85; 
0x0006c537: ret 0xede9; 
0x0003a34a: ret 0xee3; 
0x000c9bce: ret 0xee72; 
0x0005d42f: ret 0xee7c; 
0x000a55a5: ret 0xeec1; 
0x001368ca: ret 0xeec8; 
0x000db163: ret 0xef29; 
0x000afdc4: ret 0xef72; 
0x0012cd00: ret 0xef78; 
0x000fee0e: ret 0xef7f; 
0x0008b015: ret 0xef89; 
0x00121af8: ret 0xeff0; 
0x00069e0d: ret 0xf001; 
0x0012b974: ret 0xf009; 
0x001a8a2f: ret 0xf00; 
0x00036246: ret 0xf01; 
0x0009b465: ret 0xf02; 
0x00169135: ret 0xf039; 
0x000323d8: ret 0xf03; 
0x000a5c81: ret 0xf04; 
0x001a8bc1: ret 0xf05; 
0x0002dfbd: ret 0xf06; 
0x0003115f: ret 0xf072; 
0x000ae924: ret 0xf075; 
0x001b1e99: ret 0xf07; 
0x00043219: ret 0xf083; 
0x000681cd: ret 0xf089; 
0x00082110: ret 0xf08; 
0x000de7aa: ret 0xf0; 
0x00092373: ret 0xf0b8; 
0x001a8b7c: ret 0xf0c; 
0x000a164d: ret 0xf0f; 
0x000aa75e: ret 0xf101; 
0x0005cf70: ret 0xf10; 
0x000ccbbe: ret 0xf129; 
0x0016fec8: ret 0xf131; 
0x000f24a6: ret 0xf139; 
0x0010a983: ret 0xf189; 
0x0010d564: ret 0xf20; 
0x000c24ab: ret 0xf229; 
0x0007dbca: ret 0xf24b; 
0x0008f9f1: ret 0xf280; 
0x000987eb: ret 0xf283; 
0x000316c4: ret 0xf289; 
0x00042154: ret 0xf31d; 
0x0007daaa: ret 0xf36b; 
0x000a210a: ret 0xf375; 
0x000945ae: ret 0xf389; 
0x000409de: ret 0xf3c3; 
0x000e5f8a: ret 0xf3d1; 
0x000e5b8a: ret 0xf3d5; 
0x0009da3a: ret 0xf3db; 
0x000ec074: ret 0xf3e9; 
0x00187801: ret 0xf3eb; 
0x0005c2de: ret 0xf40; 
0x000aa039: ret 0xf475; 
0x0005c2c1: ret 0xf50; 
0x000dee4a: ret 0xf554; 
0x000cc44a: ret 0xf56c; 
0x0012566a: ret 0xf56e; 
0x00136018: ret 0xf575; 
0x000c548a: ret 0xf5dc; 
0x001828e1: ret 0xf604; 
0x0019cdf4: ret 0xf608; 
0x0003d7ca: ret 0xf64b; 
0x000b09f3: ret 0xf66; 
0x00045e37: ret 0xf685; 
0x0008d76a: ret 0xf6ab; 
0x001032cb: ret 0xf701; 
0x000dc744: ret 0xf718; 
0x001af0ac: ret 0xf729; 
0x00184f2b: ret 0xf74; 
0x000d89d8: ret 0xf751; 
0x00099f11: ret 0xf75b; 
0x00100836: ret 0xf775; 
0x0003d65a: ret 0xf7bb; 
0x000491c5: ret 0xf7ff; 
0x000665ce: ret 0xf801; 
0x0010d56d: ret 0xf80; 
0x000d6ff2: ret 0xf839; 
0x00023465: ret 0xf883; 
0x000495a4: ret 0xf889; 
0x000da8a0: ret 0xf894; 
0x000cb0ca: ret 0xf8a1; 
0x00124bef: ret 0xf8c1; 
0x0004a41b: ret 0xf92f; 
0x0005ba5e: ret 0xf930; 
0x001046b1: ret 0xf939; 
0x0005689c: ret 0xf980; 
0x000ecde1: ret 0xf983; 
0x000560a4: ret 0xf989; 
0x0014da9a: ret 0xf9a2; 
0x000543bc: ret 0xf9e9; 
0x0003f3ad: ret 0xf; 
0x000a36e5: ret 0xfa01; 
0x001988da: ret 0xfa17; 
0x0002c4ca: ret 0xfa29; 
0x00074b6e: ret 0xfa39; 
0x0003d3ca: ret 0xfa4b; 
0x0011658a: ret 0xfa81; 
0x00029b2b: ret 0xfa83; 
0x0003d37a: ret 0xfa9b; 
0x001904ea: ret 0xfab0; 
0x000336a5: ret 0xfac1; 
0x0012d34a: ret 0xfacb; 
0x0009d326: ret 0xfaef; 
0x000da4ed: ret 0xfb11; 
0x00062ee6: ret 0xfb83; 
0x0009c4c7: ret 0xfb89; 
0x0008bd37: ret 0xfb8; 
0x001ab4a7: ret 0xfbc1; 
0x0012d24a: ret 0xfbcb; 
0x0009a316: ret 0xfbd1; 
0x0013d14a: ret 0xfccb; 
0x0019078a: ret 0xfcd4; 
0x0014348a: ret 0xfd11; 
0x001674ea: ret 0xfd40; 
0x001409ca: ret 0xfd44; 
0x0012d0ca: ret 0xfd4b; 
0x0003dbea: ret 0xfd9; 
0x00125821: ret 0xfdb8; 
0x001b1bbb: ret 0xfdc1; 
0x00043f80: ret 0xfe83; 
0x001a9f8a: ret 0xfe89; 
0x00177014: ret 0xfeb8; 
0x00198937: ret 0xfeec; 
0x000329ca: ret 0xff07; 
0x0009a2d3: ret 0xff0; 
0x0015eb8a: ret 0xff10; 
0x0010a58a: ret 0xff1f; 
0x0003bcbd: ret 0xff25; 
0x000a139f: ret 0xff31; 
0x0004372d: ret 0xff3; 
0x00184e9e: ret 0xff3d; 
0x000f44da: ret 0xff48; 
0x00061715: ret 0xff50; 
0x0005d63a: ret 0xff68; 
0x00173a6a: ret 0xff81; 
0x0010d297: ret 0xff85; 
0x00078b8a: ret 0xffa3; 
0x0006c959: ret 0xffaf; 
0x00025567: ret 0xffb8; 
0x0012c8c4: ret 0xffb9; 
0x0002834c: ret 0xffba; 
0x00093fda: ret 0xffbb; 
0x0005f85a: ret 0xffbe; 
0x0004e1af: ret 0xffbf; 
0x0006b3ec: ret 0xffc5; 
0x0006b39a: ret 0xffc9; 
0x0017570a: ret 0xffd3; 
0x0005e63a: ret 0xffd6; 
0x0006a214: ret 0xffd8; 
0x001ad087: ret 0xffdf; 
0x001378ba: ret 0xffe6; 
0x000abc5e: ret 0xffe7; 
0x000249bb: ret 0xffe8; 
0x000c552d: ret 0xffe9; 
0x00176d3c: ret 0xffea; 
0x00064042: ret 0xffeb; 
0x00156f5c: ret 0xffec; 
0x00146dbc: ret 0xffed; 
0x00148fad: ret 0xffee; 
0x001069da: ret 0xffef; 
0x00116e8f: ret 0xfff0; 
0x000f6eb0: ret 0xfff2; 
0x000e0cda: ret 0xfff3; 
0x00039dfa: ret 0xfff5; 
0x000acbdd: ret 0xfff6; 
0x000d7c28: ret 0xfff7; 
0x00039d37: ret 0xfff8; 
0x0002ef2d: ret 0xfff9; 
0x000694e0: ret 0xfffa; 
0x000fe9db: ret 0xfffb; 
0x0002cd0c: ret 0xfffc; 
0x000470c6: ret 0xfffd; 
0x00036db2: ret 0xfffe; 
0x000244bc: ret 0xffff; 
0x0005475a: ret 1; 
0x00028c07: ret 2; 
0x000c2da3: ret 3; 
0x0003aec3: ret 4; 
0x00045edf: ret 5; 
0x000239bc: ret 6; 
0x0019c561: ret 7; 
0x00037378: ret 8; 
0x000269a2: ret 9; 
0x0002324d: ret; 
0x000efee1: retf 0; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x00080402: retf 0; add byte ptr [ecx], bh; ret; 
0x0016ef94: retf 0x1089; mov eax, 1; add esp, 8; pop ebx; ret; 
0x000b99fb: retf 0x10e8; fmul qword ptr [eax + eax]; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008dd0b: retf 0x2273; movzx eax, byte ptr [edx]; pop ebx; pop esi; ret; 
0x000c1a5d: retf 0x3076; add eax, ecx; ret; 
0x000ddd8c: retf 0x348d; ret 0xe856; 
0x0013e6d7: retf 0x430f; ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x001323dc: retf 0x472; cmp ecx, edx; sbb eax, eax; ret; 
0x000c5507: retf 0x474; test edx, edx; jne 0xc5500; ret; 
0x000a5ec3: retf 0x488d; jmp dword ptr [ecx]; 
0x000e4b9e: retf 0x490f; ret 0x1c8d; 
0x000e383f: retf 0x490f; ret 0xc101; 
0x0009df4e: retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x00071c95: retf 0x4c8b; and al, 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x00109d9b: retf 0x5489; ret; 
0x0004089b: retf 0x5a8d; add dword ptr [ebx + 0xf382454], ecx; inc ebp; ret; 
0x001543b5: retf 0x5e5b; ret; 
0x001a3a10: retf 0x761a; sub al, 0x83; ret 0x7e10; 
0x00159788: retf 0x772; xor eax, eax; cmp ecx, edx; setne al; ret; 
0x0011f6c9: retf 0x7c8b; and al, 0x1c; sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x0005a676: retf 0x820f; mov edx, 0x89000000; aad 0x89; ret 0xe889; 
0x001220a3: retf 0x8930; push eax; or byte ptr [edx + 0x100], bh; mov word ptr [eax + 0x16], dx; ret; 
0x0008ef26: retf 0xa801; add ecx, dword ptr [edi]; inc esp; ret 0x978b; 
0x000f100c: retf 0xb60f; or byte ptr [ecx + ecx*8 - 0x3fce208b], al; pop ebx; ret; 
0x00083c4a: retf 0xc483; adc byte ptr [ecx], ah; ret 0xfa83; 
0x00150a39: retf 0xc483; or al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001a5998: retf 0xc801; call 0x1875fd; add ebx, 0x34a04; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a58d3: retf 0xc801; call 0x1875fd; add ebx, 0x34ac9; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3fc8: retf 0xc801; call 0x1875fd; add ebx, 0x362d0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a3eb9: retf 0xc801; call 0x1875fd; add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a8e4: retf 0xc801; call 0x1875fd; add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001998d7: retf 0xc801; call 0x1875fd; add ebx, 0x40641; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001988f7: retf 0xc801; call 0x1875fd; add ebx, 0x41461; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001969d8: retf 0xc801; call 0x1875fd; add ebx, 0x431c0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001968d3: retf 0xc801; call 0x1875fd; add ebx, 0x43205; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966c4: retf 0xc801; call 0x1875fd; add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001949c8: retf 0xc801; call 0x1875fd; add ebx, 0x44f50; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001948c3: retf 0xc801; call 0x1875fd; add ebx, 0x44f95; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001946b7: retf 0xc801; call 0x1875fd; add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001929c8: retf 0xc801; call 0x1875fd; add ebx, 0x46cd0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001928c3: retf 0xc801; call 0x1875fd; add ebx, 0x46d15; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926b7: retf 0xc801; call 0x1875fd; add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c205e: retf 0xc801; ret; 
0x0019b6e3: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d3: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199703: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019852d: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963cd: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019442d: retf 0xc801; sfence; call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001987e3: retf 0xc829; pop edi; call 0x1875fd; add ebx, 0x414b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8e9: retf 0xc829; pop esi; call 0x1875fd; add ebx, 0x3e8ee; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000c180f: retf 0xc839; ja 0xc1820; sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001543b3: retf 0xca75; pop ebx; pop esi; ret; 
0x000c2961: retf 0xce01; jmp ebx; 
0x000c2057: retf 0xd285; je 0xc2030; bsr ecx, edx; add eax, ecx; ret; 
0x000b9afb: retf 0xda39; jb 0xb9ac0; call 0x187611; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb13b: retf 0xda39; jb 0xbb100; call 0x187611; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10db: retf 0xda39; jb 0xc10a0; call 0x187611; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb02b: retf 0xe0e8; lds ecx, ptr [eax + eax]; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001503eb: retf 0xe; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4ea8]; test eax, eax; jne 0x150407; ret; 
0x00153c51: retf 0xec75; add esp, 8; pop ebx; ret; 
0x000432e0: retf 0xf183; pop ds; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x001a4f62: retf 0xf1d6; call dword ptr [ebx - 0x18]; 
0x0019e872: retf 0xf23c; call dword ptr [ebx - 0x18]; 
0x0010e442: retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x000bdd19: retf 0xf2e8; cwde; or al, 0; add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1019: retf 0xf2e8; or al, 0; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001aa01d: retf 0xf66; xlatb; ret; 
0x000933a3: retf 0xf93f; call dword ptr [eax - 0x18]; 
0x000dcbd6: retf 0xf945; call dword ptr [eax + 0x53]; 
0x0012622a: retf 0xf94f; call dword ptr [ecx + 0x51]; 
0x0004214d: retf 0xfac1; adc byte ptr [ecx], ch; ret 0xc269; 
0x000dfdb5: retf 0xfac1; add ch, byte ptr [ecx]; ret 0x48d; 
0x00177d12: retf 0xff7a; inc dword ptr [ebx - 0x2776eb3c]; pop ebx; pop esi; ret; 
0x0007aaf0: retf 0xff83; or byte ptr [ebp + ebx - 0x7d], dh; call dword ptr [eax]; 
0x00139994: retf 0xffef; push edx; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x000a9b8f: retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x0006ec51: retf 0xfff8; mov eax, dword ptr [ecx + eax*4 - 0x73934]; lea eax, [ecx + eax - 0x1ce54b]; jmp eax; 
0x000d5ec8: retf 0xfffc; dec dword ptr [ebx - 0x362f7b]; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x0019abf6: retf 0xfffe; add ebx, 0x3f4e7; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016740c: retf 0xfffe; add esp, 0x1c; ret; 
0x001a3e84: retf 0xfffe; jmp dword ptr [esi - 0x70]; 
0x001a430b: retf 0xffff; jmp dword ptr [esi + 0xf]; 
0x000a4a02: retf 1; add byte ptr [ebx + 0x45480], cl; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x000a5c72: retf 3; add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x001202b7: retf; adc dword ptr [eax], eax; push ebx; mov edx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00039ed1: retf; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; aad 0x2e; stc; call dword ptr [eax + 0x53]; 
0x001a5614: retf; add cl, byte ptr [edi]; xchg esp, eax; ret; 
0x000c1179: retf; add esi, ecx; call 0x187611; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1159: retf; add esi, ecx; call 0x187611; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1d9: retf; add esi, ecx; call 0x187611; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1b9: retf; add esi, ecx; call 0x187611; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b99: retf; add esi, ecx; call 0x187611; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b79: retf; add esi, ecx; call 0x187611; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0018fe7a: retf; clc; jmp dword ptr [esi - 0x70]; 
0x0013c1d1: retf; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x0013a700: retf; hlt; jmp dword ptr [esi - 0x70]; 
0x0010da4f: retf; inc dword ptr [ebx - 0x3e760036]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x00024f4a: retf; jle 0x24f6e; add byte ptr [ebx - 0x2697ef14], al; add dword ptr [eax], eax; add byte ptr [ebp - 0x6987380], cl; call dword ptr [eax + 0x6a]; 
0x00153be1: retf; jns 0x153be2; jmp dword ptr [esi - 0x70]; 
0x001926d7: retf; jo 0x1926de; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0012c924: retf; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x1b3; int 0x80; 
0x000d5ce1: retf; or al, 0; add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x000983ae: retf; pop ebx; mov eax, 0x16; pop esi; pop edi; ret; 
0x0015cc3f: retf; pop edi; stc; call dword ptr [eax - 1]; 
0x000a0a4b: retf; ret; 
0x001422b4: retf; stc; call dword ptr [esi + 0x6a]; 
0x0010d955: retf; std; call dword ptr [ecx + 0x6a]; 
0x0012d24b: retf; sti; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x001aa1a4: retf; test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x0012484b: retf; test dword ptr [ecx], edx; add byte ptr [ebx + 0x11082], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x001967d7: retf; xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013cee9: rol ax, 8; ret; 
0x000a51af: rol bh, 1; sub byte ptr [eax + 0x3c], 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00169479: rol byte ptr [eax + 0x440f0039], 0xc8; pop ebx; pop esi; mov eax, ecx; ret; 
0x00040c0d: rol byte ptr [eax + 0xd75003a], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00098778: rol byte ptr [eax + 0xf00197d], cl; xchg ebp, eax; ret 0xe2c1; 
0x00098f0f: rol byte ptr [eax + 0xf00197f], cl; xchg ebp, eax; ret 0xe2c1; 
0x000ff0b0: rol byte ptr [eax + 0xf004d7e], cl; xchg ebp, eax; ret 0xd201; 
0x00042c04: rol byte ptr [eax + eax], 1; add esp, 0x10; xor eax, eax; add esp, 8; pop ebx; ret; 
0x000ba0ca: rol byte ptr [eax + eax], cl; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0013726c: rol byte ptr [eax - 0x6bf0a006], 1; ret 0x2d3c; 
0x000567e0: rol byte ptr [eax - 0x79f0f607], 1; cmpsb byte ptr [esi], byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x0004ead3: rol byte ptr [eax - 0x79f0f607], 1; ret; 
0x000da0e8: rol byte ptr [eax*4 - 0x760d8a2e], 0xc8; pop ebx; ret; 
0x0018150c: rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x0017e9e3: rol byte ptr [eax], 0; add byte ptr [ecx - 0xb37b], cl; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x001150f3: rol byte ptr [eax], 0; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x00190d77: rol byte ptr [eax], 0xf7; ret 0xf; 
0x0010c526: rol byte ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129a57: rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001142eb: rol byte ptr [eax], 1; add byte ptr [ebx - 0x77cef3c], al; push dword ptr [edx + ebx*8 - 0x77]; ret 0xbc8d; 
0x0002439d: rol byte ptr [eax], 1; je 0x243bc; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0010c476: rol byte ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00129977: rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00040a94: rol byte ptr [eax], cl; neg edx; cmovs edx, ebx; cmovs eax, ecx; pop ebx; ret; 
0x00025392: rol byte ptr [eax], cl; neg edx; ret; 
0x00122adf: rol byte ptr [eax], cl; ret; 
0x000c2410: rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x0005be3c: rol byte ptr [ebp + edi*8 + 0xcc483ff], 1; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0008713c: rol byte ptr [ebp - 0x3d6af040], cl; mov eax, edx; ret; 
0x001347cb: rol byte ptr [ebp - 0x3db7f040], cl; add esp, 8; pop ebx; ret; 
0x00137fd9: rol byte ptr [ebp - 0x74698a0a], cl; cmp dword ptr [ecx + eax], 0; add byte ptr [ebx - 0x17701500], cl; ret; 
0x00034026: rol byte ptr [ebp - 0x76f58b2e], 0x44; and al, 0x14; call edx; 
0x0012edc4: rol byte ptr [ebp - 0x7cc38b2e], 0xec; or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x00134639: rol byte ptr [ebp - 0x7cf58a25], 0xc4; add al, 0x5b; pop esi; ret; 
0x00153e29: rol byte ptr [ebx + 0x108704c0], cl; cmp edx, 1; jg 0x153e38; ret; 
0x000fd504: rol byte ptr [ebx + 0x29740afb], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000a0f11: rol byte ptr [ebx + 0x440f02f8], cl; ret 0xec83; 
0x000b4037: rol byte ptr [ebx + 0x4a8d02eb], 1; add cl, byte ptr [edi]; test dword ptr [0x5bffffff], edi; ret; 
0x000b40bd: rol byte ptr [ebx + 0x4a8d06eb], 1; push es; jne 0xb3f81; pop ebx; ret; 
0x000b40db: rol byte ptr [ebx + 0x4a8d07eb], 1; pop es; jne 0xb3f81; pop ebx; ret; 
0x000b415f: rol byte ptr [ebx + 0x4a8d0beb], 1; or ecx, dword ptr [edi]; test dword ptr [0x5bfffffe], edx; ret; 
0x000b41d3: rol byte ptr [ebx + 0x4a8d0eeb], 1; push cs; jne 0xb3f81; pop ebx; ret; 
0x00043599: rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x000431b3: rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00043649: rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x00043254: rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00043293: rol byte ptr [ebx + 0x508d1ff0], 1; mov eax, edx; ret; 
0x00083b49: rol byte ptr [ebx + 0x525004ec], 1; push esi; call ecx; 
0x00041f8a: rol byte ptr [ebx + 0x5e5b04c4], 0x5f; pop ebp; ret; 
0x000270db: rol byte ptr [ebx + 0x5e5b0cc4], 0x5f; pop ebp; ret; 
0x00060ee5: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; pop ebp; ret; 
0x0012333a: rol byte ptr [ebx + 0x5e5b10c4], 0x5f; ret; 
0x0012ab2f: rol byte ptr [ebx + 0x5e5b10c4], cl; pop edi; ret; 
0x000b059a: rol byte ptr [ebx + 0x5e5b14c4], 1; pop edi; pop ebp; ret; 
0x000a9f77: rol byte ptr [ebx + 0x5e5b18c4], 1; pop edi; pop ebp; ret; 
0x00042a92: rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x00081525: rol byte ptr [ebx + 0x5e5b1cc4], 1; pop edi; pop ebp; ret; 
0x0004276c: rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0004dba9: rol byte ptr [ebx + 0x5e5b3cc4], 0x5f; pop ebp; ret; 
0x001b4564: rol byte ptr [ebx + 0x5e5b4cc4], 0x5f; pop ebp; ret; 
0x000518bb: rol byte ptr [ebx + 0x5e5b5cc4], cl; pop edi; pop ebp; ret; 
0x000b07e7: rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000b07f4: rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000b0801: rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x0013432d: rol byte ptr [ebx + 0x6a5008ec], cl; and al, ch; aaa; ret; 
0x000a9ca4: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xd14], dl; ret; 
0x000a9c74: rol byte ptr [ebx + 0x77740fa], 0x8b; test byte ptr [ecx - 0xe34], dl; ret; 
0x0005ec75: rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x0010e472: rol byte ptr [ebx + 0xf5bfff8], cl; inc esp; ret 0x2ec3; 
0x00103f95: rol byte ptr [ebx + eax*4], 0xc2; add al, 0x39; ret; 
0x00174a24: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xc86c37d], cl; call dword ptr [eax - 0x73]; 
0x00171fb6: rol byte ptr [ebx - 0x137cef3c], 1; or byte ptr [ebp - 0xcb1e37d], cl; call dword ptr [eax - 0x73]; 
0x00048947: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0x448b; 
0x000e40d5: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd329; 
0x000e665c: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd729; 
0x000d6a0d: rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x00053824: rol byte ptr [ebx - 0x177cfd20], 1; ret; 
0x0016ee29: rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x001380ee: rol byte ptr [ebx - 0x2f76fb3c], cl; pop ebx; pop esi; ret; 
0x00092bf9: rol byte ptr [ebx - 0x2ff60220], cl; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x000d5e7f: rol byte ptr [ebx - 0x363343], cl; call dword ptr [eax]; 
0x0009c5c7: rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c6e6: rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x000c1ff2: rol byte ptr [ebx - 0x3dfebf16], 0x7c; add eax, ecx; ret; 
0x000c2002: rol byte ptr [ebx - 0x3dfecf16], 0x7c; lea eax, es:[ecx + eax + 0x10]; ret; 
0x000c2012: rol byte ptr [ebx - 0x3dfedf16], 0x7c; push ss; lea eax, [ecx + eax + 0x20]; ret; 
0x000c2022: rol byte ptr [ebx - 0x3dfeef16], 0x7c; push es; lea eax, [ecx + eax + 0x30]; ret; 
0x0004336d: rol byte ptr [ebx - 0x3f7afe3e], 1; cmovne eax, edx; ret; 
0x00122b5c: rol byte ptr [ebx - 0x3f7c0f20], 0x26; mov edx, dword ptr [edx + 0xa0]; mov dword ptr [ecx + edx], eax; mov eax, 0xffffffff; ret; 
0x000431ce: rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x000fd53b: rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012cf5c: rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0010b5ab: rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0012cf1b: rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00170578: rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0009c6f5: rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053557: rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x000895f3: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0016e899: rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0013465d: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016fa30: rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x0013c924: rol byte ptr [ebx - 0x57ca818], 1; or dword ptr [edi], ecx; inc esi; ret 0xbe0f; 
0x00067bd7: rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x000a750a: rol byte ptr [ebx - 0x6114ef3c], 1; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00055a98: rol byte ptr [ebx - 0x6af0ffc8], cl; ret 0xc083; 
0x001877b1: rol byte ptr [ebx - 0x6bf00008], cl; ret 0x1389; 
0x0005ae9b: rol byte ptr [ebx - 0x6bf0fb08], cl; ret 0x48b; 
0x00179453: rol byte ptr [ebx - 0x6bf0fd08], cl; ret 0xf883; 
0x000c21dc: rol byte ptr [ebx - 0x73ee010], 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x000e0ed3: rol byte ptr [ebx - 0x78f0c408], 1; ret; 
0x00067066: rol byte ptr [ebx - 0x79f0f601], 1; push ecx; or dword ptr [eax], eax; add byte ptr [ebx - 0x58f7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0010d555: rol byte ptr [ebx - 0x7c99cf20], 1; clc; adc byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffc], ah; ret 0xf20; 
0x00169b55: rol byte ptr [ebx - 0x7f72f714], 1; js 0x169bbf; stc; call dword ptr [eax + 0x57]; 
0x000a61f2: rol byte ptr [ebx - 7], cl; call dword ptr [eax - 0x18]; 
0x001a9346: rol byte ptr [ebx], 0x5f; ret; 
0x0016e10e: rol byte ptr [ebx], 0x83; ret 0x8303; 
0x000fb6ec: rol byte ptr [ecx + 0x1cd1fa], 0; setne al; ret; 
0x000fb751: rol byte ptr [ecx + 0xadf5fa], 0; setne al; ret; 
0x00159f89: rol byte ptr [ecx + 0xc0fefb], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0x548d; 
0x0013f987: rol byte ptr [ecx + 0xe1], 0xc0; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0013f98d: rol byte ptr [ecx + 0xf9], 0x80; cmovne eax, edx; ret; 
0x0016ef47: rol byte ptr [ecx + ecx*4], 0x43; adc byte ptr [ebx + 0x1b804c4], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000cdcff: rol byte ptr [ecx + ecx*4], 3; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x000c5504: rol byte ptr [ecx + edi], 0xca; je 0xc550e; test edx, edx; jne 0xc5500; ret; 
0x001089d2: rol byte ptr [ecx + edi], 4; and al, 0x75; ret 0x95e9; 
0x000fb715: rol byte ptr [ecx - 0x52053106], 0x1b; setne al; ret; 
0x0004aac1: rol byte ptr [ecx - 0x7fffff19], cl; add byte ptr [edi], cl; xchg ebp, eax; ret 0xea83; 
0x0005a24c: rol byte ptr [ecx], 0x39; ret 0x1e74; 
0x0010996a: rol byte ptr [ecx], 0x39; ret 0x367e; 
0x000a9f6a: rol byte ptr [ecx], 0x39; ret 0x872; 
0x0004477e: rol byte ptr [ecx], 0x39; ret 0x8c0f; 
0x001099a0: rol byte ptr [ecx], 0x39; ret 0xda75; 
0x0012480b: rol byte ptr [ecx], 0x39; ret 0xe075; 
0x0010635f: rol byte ptr [ecx], 0x39; ret 0xe675; 
0x00123151: rol byte ptr [ecx], 0x39; ret 0xe975; 
0x000fee0b: rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x00052e41: rol byte ptr [ecx], 0x39; ret; 
0x0005f3e6: rol byte ptr [ecx], 0x39; ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000c3aca: rol byte ptr [ecx], 0x50; push esi; lea eax, [esp + 0x40]; push eax; push dword ptr [edi]; call ebx; 
0x0004321e: rol byte ptr [ecx], 0x5b; ret; 
0x001a9701: rol byte ptr [ecx], 0x5f; ret; 
0x000a85c4: rol byte ptr [ecx], 0x83; les ecx, ptr [ebx + ebp]; dec ebp; add byte ptr [ecx], ch; ret 0xd801; 
0x0013e461: rol byte ptr [ecx], 0x83; ret 0x3904; 
0x0009ee70: rol byte ptr [ecx], 0x83; ret 0x3910; 
0x0018322b: rol byte ptr [ecx], 0x83; ret 0x3914; 
0x00117436: rol byte ptr [ecx], 0x83; ret 0x5201; 
0x0018a34e: rol byte ptr [ecx], 0x83; ret 0x6610; 
0x001467e3: rol byte ptr [ecx], 0x83; ret 0x8301; 
0x00186fe0: rol byte ptr [ecx], 0x83; ret 0x8308; 
0x0002be2e: rol byte ptr [ecx], 0x83; ret 0x8801; 
0x00028486: rol byte ptr [ecx], 0x83; ret 0x8901; 
0x00028eff: rol byte ptr [ecx], 0x83; ret; 
0x000a8e40: rol byte ptr [ecx], 0x84; sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x000acc8e: rol byte ptr [ecx], 0x89; add eax, dword ptr [ebx - 0xf76fb3c]; pop ebx; pop esi; ret; 
0x000956e7: rol byte ptr [ecx], 0x89; inc ebp; add al, 0xe9; mov al, byte ptr [0xf7fffffd]; ret 0; 
0x000c69d9: rol byte ptr [ecx], 0x89; inc ecx; or byte ptr [edi], cl; nop; ret 0x4b8b; 
0x00189ca1: rol byte ptr [ecx], 0x89; ret 0x850f; 
0x00031137: rol byte ptr [ecx], 0x89; ret; 
0x000f2035: rol byte ptr [ecx], 0x89; test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0013ab21: rol byte ptr [ecx], 0x8b; adc esi, esi; ret 0xf20; 
0x00138041: rol byte ptr [ecx], 0x8b; dec edx; add al, 0x83; ret 0x8518; 
0x000c1f16: rol byte ptr [ecx], 0xc8; ret; 
0x000c22ec: rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x000c2452: rol byte ptr [ecx], 0xd0; ret; 
0x000c18a7: rol byte ptr [ecx], 0xf8; pop edi; ret; 
0x000c19f5: rol byte ptr [ecx], 0xf8; sub eax, 0x10; pop edi; ret; 
0x000ac2c1: rol byte ptr [ecx], 0xf; mov esi, 0xda390114; je 0xac2c0; pop ebx; ret; 
0x001a781c: rol byte ptr [ecx], 1; add byte ptr [eax], al; lea eax, [edi + 0xf]; pop edi; ret; 
0x001489c7: rol byte ptr [ecx], 1; add byte ptr [eax], al; mov eax, dword ptr [edx + eax]; ret; 
0x000b3dac: rol byte ptr [ecx], 1; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c38a8: rol byte ptr [ecx], 1; add byte ptr [eax], al; ret; 
0x001aa883: rol byte ptr [ecx], 1; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x00106bc2: rol byte ptr [ecx], 1; idiv dword ptr [esi]; jmp edi; 
0x0006cd81: rol byte ptr [ecx], 1; ret; 
0x000b07db: rol byte ptr [ecx], cl; rcr byte ptr [edi + 0x5e], 1; ret; 
0x000ab4ad: rol byte ptr [ecx], cl; ret; 
0x000b07e5: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f10c0], 1; ret; 
0x000b07f2: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f20c0], 1; ret; 
0x000b07ff: rol byte ptr [ecx], cl; rol byte ptr [ebx + 0x5e5f30c0], 1; ret; 
0x0010ba31: rol byte ptr [edi + 0x3fec87], 0; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x00153e2b: rol byte ptr [edi + eax*4], 0x10; cmp edx, 1; jg 0x153e38; ret; 
0x001a936c: rol byte ptr [edi], 0x5f; ret; 
0x00043731: rol byte ptr [edx + edx*8 + 0x8ba], 0; cmove eax, edx; ret; 
0x000d3263: rol byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; add eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x0002e077: rol byte ptr [edx], 0x39; ret 0x820f; 
0x0002cc06: rol byte ptr [edx], 0x39; ret; 
0x000ac4c7: rol byte ptr [edx], 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001a9706: rol byte ptr [edx], 0x5f; ret; 
0x0005373d: rol byte ptr [esi], 0; add byte ptr [eax], al; call 0x53700; jmp eax; 
0x001a971a: rol byte ptr [esi], 0x5f; ret; 
0x0009ae37: rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x0013fc9c: rol cl, 0xea; adc byte ptr [ecx + 0xf9], al; or byte ptr [edi], 0x44; ret 0x8dc3; 
0x00091d43: rol cl, 1; call 0x8938914d; clc; call dword ptr gs:[0x10]; 
0x0003c10e: rol cl, 1; cli; push ds; and eax, edx; ret; 
0x000ac5a4: rol dh, 1; inc edx; add al, byte ptr [eax]; pop ebx; pop esi; ret; 
0x000f1d88: rol dword ptr [0x878d0000], cl; pop dword ptr [edi - 7]; call dword ptr [eax - 0x73]; 
0x000d9efa: rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0009faf4: rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0019cd6c: rol dword ptr [eax + 0x75], 0x70; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x00182719: rol dword ptr [eax - 0x3effffff], 0xe9; add dh, bl; movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x000bb161: rol dword ptr [eax - 3], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003a11b: rol dword ptr [eax], 0; add byte ptr [ebp - 0x6b9f655], cl; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x0010e686: rol dword ptr [eax], 0; add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x000c276c: rol dword ptr [eax], 0; inc dword ptr [eax]; je 0xc2774; inc eax; pop edi; ret; 
0x000f0f4e: rol dword ptr [eax], 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000f0f1e: rol dword ptr [eax], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a87c7: rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1ce1: rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c1fa6: rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c1f77: rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001a8806: rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000d7b10: rol dword ptr [ebp - 0x1f7bf001], 1; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x001a832f: rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001164d1: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29134564; ret; 
0x00117f81: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29136014; ret; 
0x00119a21: rol dword ptr [ebp - 0x47ef8125], 0x26; add byte ptr [eax], al; add bl, dl; call 0x29137ab4; ret; 
0x000c1ca7: rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x0008a0c2: rol dword ptr [ebx + 0x505104ec], 0x56; call edx; 
0x0011be7c: rol dword ptr [ebx + 0x5e5b00d8], 1; pop edi; pop ebp; ret; 
0x0011ad5d: rol dword ptr [ebx + 0x5e5b00d8], 1; ret; 
0x00098794: rol dword ptr [ebx + 0x5e5b1cc4], cl; pop edi; pop ebp; ret; 
0x000c437b: rol dword ptr [ebx + 0xb813fe2], 1; add byte ptr [eax], al; add byte ptr [eax - 0x7cf9063f], al; ret 0xc680; 
0x00152a82: rol dword ptr [ebx + eax*4], 0xc4; sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000b99bd: rol dword ptr [ebx + edx], 0x11; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001348da: rol dword ptr [ebx - 0x3f7aef3c], 0xf; xchg esp, eax; ret 0x4483; 
0x0009f766: rol dword ptr [ebx - 0x3fceeb3c], cl; pop ebx; pop esi; ret; 
0x0017f1fa: rol dword ptr [ebx - 0x7bf00008], 0xea; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x001769e4: rol dword ptr [ecx + edx*2], 0x57; call dword ptr [eax + 8]; 
0x000432e5: rol dword ptr [ecx], 0x5b; mov eax, ecx; ret; 
0x000390cd: rol dword ptr [ecx], 0x83; cli; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00095125: rol dword ptr [ecx], 0x83; ret 0x8108; 
0x000c66e6: rol dword ptr [ecx], 0x83; ret 0x8801; 
0x000b04ca: rol dword ptr [ecx], 0x89; ret; 
0x000afef9: rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x001041f0: rol dword ptr [ecx], 9; ret 0xf983; 
0x000bb4cb: rol dword ptr [edi], 1; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000ba5ff: rol dword ptr [edi], cl; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bbd2d: rol dword ptr [edx + esi*8], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x0003dda7: rol dword ptr [esi], 0x83; ret 0x901; 
0x0014affd: rol dx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x0013ceea: rol eax, 8; ret; 
0x0003d4a6: rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000c16b2: rol ebx, 0x99; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000df242: rol ecx, 0xc9; add al, byte ptr [ecx - 0x70a3d707]; add dh, byte ptr [esi + 0xa]; mov eax, edx; ret; 
0x00098819: rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0009874e: rol ecx, 0xe9; add esi, dword ptr [edi + edi*4 - 0x77]; ret 0xca83; 
0x0003bddf: rol ecx, 1; call 0x10ed7f05; or eax, ecx; ret; 
0x0003c6fa: rol ecx, 9; mov dword ptr [edx + 0x14], ecx; mov dword ptr [edx + 0xc], ebp; mov dword ptr [edx + 0x18], eax; ret; 
0x0014affe: rol edx, 8; mov word ptr [ecx + 0xa], dx; pop ebx; pop esi; pop edi; ret; 
0x00024b6f: rol edx, 9; mov dword ptr [eax + 0x1a90], edx; pop ebx; pop esi; ret; 
0x00024a9f: rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x00149ff0: ror byte ptr [eax + 0xf10244c], 0x94; ret 0xa3c; 
0x000ba5fa: ror byte ptr [eax + eax], 1; add ecx, 0x1107d3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001278c1: ror byte ptr [eax + esi], 1; ror byte ptr [ecx], 0xc8; ret; 
0x0010e413: ror byte ptr [eax - 7], cl; call dword ptr [eax - 0x18]; 
0x000a2107: ror byte ptr [eax], 0x39; ret 0xf375; 
0x000ffd31: ror byte ptr [eax], 0x39; ret 0xf475; 
0x001597b6: ror byte ptr [eax], 0x50; call 0xc2920; add esp, 0x1c; ret; 
0x001a9724: ror byte ptr [eax], 0x5f; ret; 
0x001a4c71: ror byte ptr [eax], 0x83; ret 0x5608; 
0x001a39d2: ror byte ptr [eax], 0x83; ret 0x5708; 
0x0019e611: ror byte ptr [eax], 0x83; ret 0x8308; 
0x0014f286: ror byte ptr [eax], 0x83; ret 0x8908; 
0x0019cdf1: ror byte ptr [eax], 0x83; ret 0xf608; 
0x0017219b: ror byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00172178: ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00042576: ror byte ptr [ebp + 0x2bb6c48], cl; add byte ptr [eax], al; add byte ptr [eax + 0x7e], bh; call dword ptr gs:[0x10]; 
0x00061b9e: ror byte ptr [ebp + 0x32b20384], 0xf9; call dword ptr [eax + 0x6a]; 
0x000290bb: ror byte ptr [ebp + 0x490f0342], cl; ret 0xec83; 
0x000259f8: ror byte ptr [ebp + 0x5e5bf465], 0x5f; pop ebp; ret; 
0x00094b88: ror byte ptr [ebp + 0x6c504], 1; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0007cf81: ror byte ptr [ebp - 0x153efcb0], 1; add dh, dh; pop es; add dword ptr [edi], ecx; inc ebp; ret 0xec83; 
0x000a8c75: ror byte ptr [ebp - 0x2776feb0], 0xf; inc ebp; ret 0xc483; 
0x001539ed: ror byte ptr [ebp - 0x64cff70], 1; call dword ptr [edx - 0x73]; 
0x000bbfb7: ror byte ptr [ebp - 0x7af0efc0], cl; ret; 
0x00175e54: ror byte ptr [ebp - 0x7cfbdbac], 0xec; or byte ptr [ecx - 0x72540c29], cl; or dword ptr [edx + edi], 0xfffffff3; call dword ptr [edx - 0x73]; 
0x0013e6da: ror byte ptr [ebx + 0x29302444], 1; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013e586: ror byte ptr [ebx + 0x29302444], 1; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000cd365: ror byte ptr [ebx + 0x29642454], 1; ret; 
0x000ca243: ror byte ptr [ebx + 0x296c2454], 1; ret; 
0x0010993d: ror byte ptr [ebx + 0x39642444], 1; ret 0x8e0f; 
0x00131449: ror byte ptr [ebx + 0x3980044a], 0; je 0x131458; ret; 
0x00031d37: ror byte ptr [ebx + 0x41031841], 1; adc al, 0x39; ret 0x4d0f; 
0x00175e0a: ror byte ptr [ebx + 0x650c2454], 0x2b; adc eax, 0x14; jne 0x175e27; add esp, 0x1c; ret; 
0x001302c0: ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x000d9fc9: ror byte ptr [ebx + 0x75c9850a], 0x22; ret; 
0x00121ac9: ror byte ptr [ebx + 0x78c9850a], 8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x0003fcfc: ror byte ptr [ebx + 0x9082454], 1; ret 0xd389; 
0x001441ed: ror byte ptr [ebx + 0xf102444], 0x95; ret 0xc085; 
0x000460e2: ror byte ptr [ebx + 0xf402444], 0x45; ret 0x4489; 
0x00123078: ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000e08d0: ror byte ptr [ebx - 0x19c77944], 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000e018d: ror byte ptr [ebx - 0x1b1f7944], 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00133410: ror byte ptr [ebx - 0x5cf0f7fc], cl; fmul dword ptr [edi]; xchg edx, eax; ret 0xd089; 
0x00169383: ror byte ptr [ebx - 0x72d7db84], 1; xchg dword ptr [esi + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00132388: ror byte ptr [ebx - 0x74efdbbc], cl; inc eax; dec esp; call 0x132250; add esp, 4; ret; 
0x00140719: ror byte ptr [ebx - 0x76f3dbbc], 1; adc edi, dword ptr [ecx]; ret 0x6c74; 
0x001a9393: ror byte ptr [ebx], 0x5f; ret; 
0x00097bb0: ror byte ptr [ebx], 0xba; add dword ptr [0xa30f0000], 0xe9ac73c2; cmp dh, 0xff; dec dword ptr [ebp - 0x678df79]; call dword ptr [eax - 0x73]; 
0x000fb698: ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000fb696: ror byte ptr [ebx], 1; ror byte ptr [ebx], 1; mov edx, 0x20; cmovne eax, edx; ret; 
0x000ab76d: ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x0012c947: ror byte ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001165fb: ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x0005e06c: ror byte ptr [ecx + 0x29fa89d1], 1; ret 0x448d; 
0x0017a869: ror byte ptr [ecx + 0x315b1046], 0xc0; pop esi; pop edi; ret; 
0x00081746: ror byte ptr [ecx + 0x4c4830b], 0x5b; pop esi; ret; 
0x000ef675: ror byte ptr [ecx + 0x50202444], 0xe8; nop; ret 1; 
0x00040a54: ror byte ptr [ecx + 0x5a89104a], 0x14; pop ebx; pop esi; pop edi; ret; 
0x001216b9: ror byte ptr [ecx + 0x5e5b5053], 0x5f; ret; 
0x0003d6e3: ror byte ptr [ecx + 0x5f5e5b17], 0x5d; ret; 
0x000859a9: ror byte ptr [ecx + 0x8c48301], 1; xor eax, eax; pop ebx; ret; 
0x00093982: ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00135219: ror byte ptr [ecx + 0xf0c244c], 0x95; ret 0x44c7; 
0x000b043c: ror byte ptr [ecx + 0xf102454], 1; inc edi; ret 0x5350; 
0x000386bb: ror byte ptr [ecx - 0x1cf7b], 1; dec dword ptr [ebx - 0x1f77b]; dec dword ptr [ecx - 0x1f743]; dec dword ptr [ecx - 0x76267631]; ret; 
0x000385a5: ror byte ptr [ecx - 0x1f37b], 1; call dword ptr [eax - 1]; 
0x00055284: ror byte ptr [ecx - 0x22fbdbbc], 1; add al, 0x24; add esp, 0xc; ret; 
0x0003c67a: ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x000c24af: ror byte ptr [ecx - 0x3dbaf028], 0x83; les edx, ptr [ebx + ebx*2]; pop esi; ret; 
0x00121b16: ror byte ptr [ecx - 0x3fcef7bf], 1; pop ebx; ret; 
0x000f23c5: ror byte ptr [ecx - 0x49f7b], 1; call dword ptr [eax + 0x6a]; 
0x000f5cb6: ror byte ptr [ecx - 0x49f7b], 1; dec dword ptr [ebx - 0x49f63]; dec dword ptr [ebx - 0x47f7b]; inc dword ptr [ecx]; ret; 
0x000689fa: ror byte ptr [ecx - 0x5bb43], cl; dec dword ptr [edi]; dec edi; ret 0x8589; 
0x00035719: ror byte ptr [ecx - 0x7439760e], 1; inc ebp; les edi, ptr [ecx]; ret 0x830f; 
0x000a28fb: ror byte ptr [ecx - 0x744a8b3d], 1; push esi; or byte ptr [ecx], ch; ret 0xfa83; 
0x001ae903: ror byte ptr [ecx - 0x7693dbbc], 1; ret 0x4c89; 
0x000d4990: ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x00167721: ror byte ptr [ecx - 0x7ce7dbac], 1; ret 0xf01; 
0x001a9729: ror byte ptr [ecx], 0x5f; ret; 
0x0015445c: ror byte ptr [ecx], 0x89; inc esp; xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x001278c4: ror byte ptr [ecx], 0xc8; ret; 
0x0012791b: ror byte ptr [ecx], 0xf0; pop esi; pop edi; ret; 
0x00182ef4: ror byte ptr [ecx], 1; ret; 
0x000b056e: ror byte ptr [ecx], cl; ret 0xc031; 
0x001394b3: ror byte ptr [edi], 0x44; rcl dword ptr [eax - 0x73], 0x87; outsd dx, dword ptr [esi]; push esi; stc; call dword ptr [eax - 1]; 
0x00186f82: ror byte ptr [edi], 0x44; ret 0x178b; 
0x000c51b7: ror byte ptr [edi], 0x44; ret 0x4489; 
0x0012433d: ror byte ptr [edi], 0x44; ret 0x66c3; 
0x0010d941: ror byte ptr [edi], 0x44; ret 0xb58b; 
0x00124f8c: ror byte ptr [edi], 0x44; ret 0xc483; 
0x00166401: ror byte ptr [edi], 0x44; ret 0xec83; 
0x00026cf4: ror byte ptr [edi], 0x44; ret; 
0x001442c5: ror byte ptr [edi], 0x45; call 0x1078b6; jmp dword ptr [esi - 0x70]; 
0x00043372: ror byte ptr [edi], 0x45; ret 0x66c3; 
0x00134f31: ror byte ptr [edi], 0x48; ret 0x4639; 
0x00030217: ror byte ptr [edi], 0x48; ret 0xc083; 
0x00040c4d: ror byte ptr [edi], 0x48; ret 0xc483; 
0x00134c6a: ror byte ptr [edi], 0x48; ret 0xc629; 
0x000db160: ror byte ptr [edi], 0x48; ret 0xef29; 
0x0008dab1: ror byte ptr [edi], 0x48; ret 0xff50; 
0x001228b4: ror byte ptr [edi], 0x49; ret 0x8dc3; 
0x00157f65: ror byte ptr [edi], 0x4e; ret 0x4489; 
0x0009dbd8: ror byte ptr [edi], 0x4e; ret 0x578b; 
0x0011183f: ror byte ptr [edi], 0x4e; ret 0xe883; 
0x001a93bc: ror byte ptr [edi], 0x5f; ret; 
0x001262f1: ror byte ptr [edi], 0x84; aaa; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x00086f6a: ror byte ptr [edi], 0x84; aas; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0006d2f1: ror byte ptr [edi], 0x84; and ah, byte ptr [ebp - 0x7ad40001]; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x001672b4: ror byte ptr [edi], 0x84; call 0x841672ba; ret; 
0x00074185: ror byte ptr [edi], 0x84; clc; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x0012608f: ror byte ptr [edi], 0x84; cmp al, byte ptr [0xec830000]; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x00175752: ror byte ptr [edi], 0x84; cmpsd dword ptr [esi], dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x137cc3ba], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00066b71: ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; add al, 0; add byte ptr [ecx], bh; ret; 
0x0012614c: ror byte ptr [edi], 0x84; insb byte ptr es:[edi], dx; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x001670a0: ror byte ptr [edi], 0x84; leave; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x001260e0: ror byte ptr [edi], 0x84; leave; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x001262d7: ror byte ptr [edi], 0x84; mov al, byte ptr [0x8d000010]; xor eax, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x00097a97: ror byte ptr [edi], 0x84; mov dword ptr [0x8dfffffd], eax; xchg dword ptr [eax], esp; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x00108ae1: ror byte ptr [edi], 0x84; mov ebp, 0xf000001; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x00144cf2: ror byte ptr [edi], 0x84; mov ebx, 0x89fffffe; ret; 
0x0008547a: ror byte ptr [edi], 0x84; mov edi, 0x39000000; ret; 
0x0016db49: ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x0007c8fd: ror byte ptr [edi], 0x84; mov esp, 0x8b000000; inc esi; push 0x850fc085; ret 0; 
0x00077d55: ror byte ptr [edi], 0x84; movsb byte ptr es:[edi], byte ptr [esi]; adc eax, dword ptr [eax]; add byte ptr [ebx - 0x51773], cl; call ecx; 
0x00050d25: ror byte ptr [edi], 0x84; or dword ptr [eax + eax], eax; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x0007f2fc: ror byte ptr [edi], 0x84; pop ebp; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x001884fa: ror byte ptr [edi], 0x84; pop es; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00027295: ror byte ptr [edi], 0x84; push ebx; add al, byte ptr [eax]; add byte ptr [ebx - 0x17aff314], al; sti; ret 9; 
0x0008cb0a: ror byte ptr [edi], 0x84; push edi; add al, byte ptr [eax]; add byte ptr [ecx], bh; ret; 
0x000eb237: ror byte ptr [edi], 0x84; ret 0; 
0x000cf89a: ror byte ptr [edi], 0x84; ret 0x14; 
0x00047a86: ror byte ptr [edi], 0x84; ret 0x29; 
0x001069d7: ror byte ptr [edi], 0x84; ret 0xffef; 
0x0011ce78: ror byte ptr [edi], 0x84; ret 0xfffc; 
0x0014463a: ror byte ptr [edi], 0x84; ret 0xfffe; 
0x00186df7: ror byte ptr [edi], 0x84; ret 2; 
0x0012a2a7: ror byte ptr [edi], 0x84; ret 3; 
0x000278a6: ror byte ptr [edi], 0x84; ret; 
0x000803ff: ror byte ptr [edi], 0x84; retf 0; add byte ptr [ecx], bh; ret; 
0x000a5c6f: ror byte ptr [edi], 0x84; retf 3; add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x00181509: ror byte ptr [edi], 0x84; rol byte ptr [eax], 0; add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x001263a7: ror byte ptr [edi], 0x84; sbb byte ptr [eax + eax], cl; add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x00126059: ror byte ptr [edi], 0x84; sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x0017380b: ror byte ptr [edi], 0x84; sub eax, 0x83ffeb11; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0016c9fc: ror byte ptr [edi], 0x84; xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00085150: ror byte ptr [edi], 0x84; xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x00174f87: ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00073141: ror byte ptr [edi], 0x84; xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x00030a93: ror byte ptr [edi], 0x84; xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; je 0x30a9b; call dword ptr [eax + 0x56]; 
0x001a8708: ror byte ptr [edi], 0x85; add dword ptr [ecx], 0xf660000; xlatb; ret; 
0x000b43f4: ror byte ptr [edi], 0x85; add eax, 0xe9fffff6; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b88c4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff5; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b43d4: ror byte ptr [edi], 0x85; and eax, 0xe9fffff6; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000c1ee4: ror byte ptr [edi], 0x85; cmc; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001b2efc: ror byte ptr [edi], 0x85; cwde; or al, byte ptr [eax]; add byte ptr [ecx + 0x7c89113c], cl; adc dword ptr [ebx + eax*4], eax; ret 0x3908; 
0x000b428e: ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x001a8808: ror byte ptr [edi], 0x85; jno 0x1a880f; add byte ptr [eax], al; xor eax, eax; ret; 
0x001759a3: ror byte ptr [edi], 0x85; lahf; out dx, eax; ljmp 0x8908:0x24748bff; ret; 
0x000c1ca9: ror byte ptr [edi], 0x85; mov al, 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001246bf: ror byte ptr [edi], 0x85; mov edx, 0x83000000; in al, dx; or al, 0x89; ret; 
0x00183344: ror byte ptr [edi], 0x85; movsd dword ptr es:[edi], dword ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000c1c0b: ror byte ptr [edi], 0x85; out dx, al; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x0007c908: ror byte ptr [edi], 0x85; ret 0; 
0x0018b377: ror byte ptr [edi], 0x85; ret 0xfff3; 
0x000d79ad: ror byte ptr [edi], 0x85; ret 0xfffe; 
0x00076906: ror byte ptr [edi], 0x85; ret; 
0x001a87c9: ror byte ptr [edi], 0x85; xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x00024783: ror byte ptr [edi], 0x88; push ss; ret 0x11; 
0x000e4145: ror byte ptr [edi], 0x88; ret 0xb; 
0x00142a1f: ror byte ptr [edi], 0x88; ret 2; 
0x000eb24a: ror byte ptr [edi], 0x89; ret 0x25; 
0x0017ee21: ror byte ptr [edi], 0x89; ret; 
0x0012c6f8: ror byte ptr [edi], 0x8c; adc dword ptr [eax + 0x174ffef], ecx; ret; 
0x00109a84: ror byte ptr [edi], 0x94; ret 0x3f8b; 
0x001348df: ror byte ptr [edi], 0x94; ret 0x4483; 
0x000310e1: ror byte ptr [edi], 0x94; ret 0x5f3c; 
0x00175d4c: ror byte ptr [edi], 0x94; ret 0xc031; 
0x0003d6c1: ror byte ptr [edi], 0x94; ret; 
0x0010b5a8: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x00053554: ror byte ptr [edi], 0x94; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x00166f96: ror byte ptr [edi], 0x95; ret 0x3a3c; 
0x00179515: ror byte ptr [edi], 0x95; ret 0x41e9; 
0x0016edfe: ror byte ptr [edi], 0x95; ret 0xc483; 
0x0008713e: ror byte ptr [edi], 0x95; ret 0xd089; 
0x0003a9ae: ror byte ptr [edi], 0x95; ret; 
0x00170575: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x0016e896: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0016fa2d: ror byte ptr [edi], 0x95; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00055c76: ror byte ptr [edi], 0x95; ror byte ptr [edi], 0x95; ret; 
0x00123257: ror byte ptr [edi], 0x9e; ret 0xff85; 
0x00054f20: ror byte ptr [edi], 0xad; fadd dword ptr [edx + 0x74]; sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0009c5c4: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c6e3: ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003c677: ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x0012286a: ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x0015975b: ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x000431b0: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe9; mov eax, edx; ret; 
0x00043251: ror byte ptr [edi], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf1; mov eax, edx; ret; 
0x00149a64: ror byte ptr [edi], 1; dec edi; ret 0x4189; 
0x000feff9: ror byte ptr [edi], 1; dec edi; ret 0x568b; 
0x001713bf: ror byte ptr [edi], 1; dec edi; ret 0x8966; 
0x00122f2a: ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0010e39b: ror byte ptr [edi], 1; dec edi; ret 0xbce9; 
0x00060072: ror byte ptr [edi], 1; dec esp; ret 0xb60f; 
0x0010e27d: ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x0016970a: ror byte ptr [edi], 1; dec esp; ret 0xec83; 
0x000cc195: ror byte ptr [edi], 1; dec esp; ret; 
0x00042dc7: ror byte ptr [edi], 1; inc ebp; ret; 
0x0004a300: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0x8d52; 
0x001324f4: ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x000a6a1e: ror byte ptr [edi], 1; inc edi; ret 0x508d; 
0x000a441e: ror byte ptr [edi], 1; inc edi; ret 0xc083; 
0x0013ebce: ror byte ptr [edi], 1; inc edx; ret 0x578d; 
0x0007abb6: ror byte ptr [edi], 1; inc edx; ret 0x789; 
0x0013e6e2: ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013e592: ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x000c78fd: ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x0013e5a0: ror byte ptr [edi], 1; inc edx; ret 0xe883; 
0x000a8738: ror byte ptr [edi], 1; inc edx; ret 0xea89; 
0x00169e26: ror byte ptr [edi], 1; mov bh, 0x80; mov dl, 0xbb; stc; jmp dword ptr [esi - 0x77]; 
0x000434c1: ror byte ptr [edi], 1; mov bh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x000c8e3c: ror byte ptr [edi], 1; mov cs, word ptr [edi - 0x76ffffeb]; ret; 
0x0003a05b: ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x3a040; ret; 
0x0004340f: ror byte ptr [edi], 1; mov dh, 0xc0; tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x00043290: ror byte ptr [edi], 1; mov ebp, 0x1ff083c0; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0005f3e9: ror byte ptr [edi], 1; pushfd; ret 0xb60f; 
0x000ae541: ror byte ptr [edi], 1; test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x000c1920: ror byte ptr [edi], 1; test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x000fb2d5: ror byte ptr [edi], 1; test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; or ecx, dword ptr [eax - 7]; call dword ptr [eax - 1]; 
0x00132b16: ror byte ptr [edi], 1; xchg edx, eax; ret; 
0x000e3e28: ror byte ptr [edi], cl; dec ecx; ret 0x5c89; 
0x000e6346: ror byte ptr [edi], cl; dec ecx; ret 0xc483; 
0x00067736: ror byte ptr [edi], cl; dec ecx; ret 0xe883; 
0x000744d9: ror byte ptr [edi], cl; inc esp; ret; 
0x000db726: ror byte ptr [edi], cl; mov byte ptr [ebx], dh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg ebp, eax; ret 0xc238; 
0x000a399b: ror byte ptr [edi], cl; mov byte ptr [esi - 0x76fffffa], dl; ret; 
0x00028349: ror byte ptr [edi], cl; mov dh, 0xc2; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x000d655c: ror byte ptr [edi], cl; mov ss, word ptr [edi - 0x7cffffd9]; in al, dx; or byte ptr [ebp - 0x35ff7b], cl; dec dword ptr [ebx - 0x363373]; call dword ptr [eax - 0x73]; 
0x00049ce4: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00091ad2: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x001326f1: ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x00139979: ror byte ptr [edi], cl; sahf; ret 0xd108; 
0x0012c916: ror byte ptr [edi], cl; test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0016c865: ror byte ptr [edi], cl; test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x000a3ad6: ror byte ptr [edi], cl; test byte ptr [ebx], al; add eax, 0x5a8d0000; or dh, dh; ret; 
0x001a6d67: ror byte ptr [edi], cl; test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x0002f4ef: ror byte ptr [edi], cl; test byte ptr [esi - 0x7d000000], cl; ret; 
0x0010296c: ror byte ptr [edi], cl; test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x001aedda: ror byte ptr [edi], cl; test dword ptr [ecx + eax + 0x3c890000], ebx; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x0004490c: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xc220; 
0x000ff428: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd009; 
0x001552e0: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xd789; 
0x001440fa: ror byte ptr [edi], cl; xchg ebp, eax; ret 0xed85; 
0x001a972e: ror byte ptr [edx], 0x5f; ret; 
0x001a9742: ror byte ptr [esi], 0x5f; ret; 
0x0013f501: ror byte ptr [esi], 0x85; sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x0013f5a6: ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x00070dad: ror byte ptr [esi], cl; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000d76e4: ror cl, 0xff; call dword ptr [eax + 0x50]; 
0x00056557: ror cl, 0xff; call dword ptr [eax - 0x18]; 
0x00059502: ror cl, 0xff; call dword ptr [edi - 0x18]; 
0x00058b7d: ror cl, 0xff; call dword ptr [esi + 0x53]; 
0x00058446: ror cl, 0xff; dec dword ptr [ecx - 0x361f73]; dec dword ptr [ecx - 0x36274b]; call dword ptr [eax - 0x18]; 
0x00059b12: ror cl, 0xff; dec dword ptr [ecx - 0x362763]; call dword ptr [eax - 0x75]; 
0x000d793c: ror cl, 0xff; dec dword ptr [edi]; xchg ebp, eax; ret 0xb60f; 
0x0005966a: ror cl, 0xff; jmp dword ptr [esi - 0x70]; 
0x000d79c7: ror cl, 0xff; jmp eax; 
0x000bb3c9: ror dword ptr [eax], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e7b81: ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0008ff93: ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x000754ca: ror dword ptr [ebp + 0x8d04], 0; add byte ptr [ecx - 0x4ef73], cl; call dword ptr [eax + 0x53]; 
0x001a80e7: ror dword ptr [ebp + 0xf661049], 1; xlatb; ret 0xc085; 
0x00025962: ror dword ptr [ebp - 0x1876e1c0], 0x89; ret 0x25; 
0x000258c2: ror dword ptr [ebp - 0x1976e1c0], 0x89; ret 0x25; 
0x001a941a: ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1a9430; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x00087bb9: ror dword ptr [ebx + 0x190c2454], cl; ret 0x157d; 
0x00169e23: ror dword ptr [ebx - 0x48f02fbb], 0x80; mov dl, 0xbb; stc; jmp dword ptr [esi - 0x77]; 
0x00106816: ror dword ptr [ebx - 0x637647c4], cl; and al, 0x9c; add byte ptr [eax], al; add cl, ch; ret 0xfffa; 
0x00041c73: ror dword ptr [ecx + 0x10ebc111], cl; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x0012c705: ror dword ptr [ecx + 0x1b8c3], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00071c93: ror dword ptr [ecx + 0x244c8bca], 0x4c; mov dword ptr [esp + 4], ecx; jmp edx; 
0x000db21a: ror dword ptr [ecx + 0x4e1c1d3], 0xf; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x0007c42c: ror dword ptr [ecx + 0x9488], 1; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x00116601: ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x001326ed: ror dword ptr [ecx + 0xfd231d3], 0xa4; ret; 
0x0010cd01: ror dword ptr [ecx + eax*8 - 0x17], 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x00074571: ror dword ptr [ecx - 0x50363], cl; dec dword ptr [ebx - 0x4ff63]; call dword ptr [eax + 0x52]; 
0x0003bd11: ror dword ptr [ecx - 0x74f3dbac], 0x44; and al, 0x10; fld xword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c0c2: ror dword ptr [ecx - 0x74f7dbac], 0x44; and al, 0xc; fld qword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x0003c3ea: ror dword ptr [ecx - 0x74fbdbac], 0x44; and al, 8; fld dword ptr [esp + 4]; mov dword ptr [eax], ecx; ret; 
0x000539bc: ror dword ptr [ecx - 0x76180810], 1; ret; 
0x000e1223: ror dword ptr [ecx - 0x76b3db8c], cl; test ecx, 0xa40f02e1; ret; 
0x00189713: ror dword ptr [ecx - 0x76ebdbac], 1; ret 0xca29; 
0x00083c46: ror dword ptr [ecx - 0x7c357630], 0xc4; adc byte ptr [ecx], ah; ret 0xfa83; 
0x000e590a: ror dword ptr [ecx - 0x7ea7db8c], cl; ret; 
0x000b9b38: ror dword ptr [ecx], 0x12; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003c6fb: ror dword ptr [ecx], 0x89; dec edx; adc al, 0x89; push 0xc; mov dword ptr [edx + 0x18], eax; ret; 
0x0007c738: ror dword ptr [ecx], 0x89; mov bl, 0x9c; add byte ptr [eax], al; add byte ptr [ecx + 0xa08b], cl; add byte ptr [ecx + 0x52e8241c], cl; ret; 
0x000c10e6: ror dword ptr [edi + 0x300109f], 0xc; cdq; jmp ecx; 
0x000bbe12: ror dword ptr [edi + 0x30010f0], 0xc; cdq; jmp ecx; 
0x000c10a6: ror dword ptr [edi - 0x61], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x001aa189: ror dword ptr [edi], 0x74; adc eax, dword ptr [ebx - 0x218bfe20]; lea eax, [edi - 0x10]; pop edi; ret; 
0x0014c8a6: ror dword ptr [edi], 0xb7; pop ecx; add dh, byte ptr [ecx]; shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x000c1f13: ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x000bb012: ror dword ptr [edi], 0xfe; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00083be3: ror dword ptr [edi], 1; xchg esp, eax; ret; 
0x000fbb8d: ror dword ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x00040bc3: ror dword ptr [edx], 0; add byte ptr [eax], al; mov dword ptr [edx], ecx; ret; 
0x00139891: ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x0002501d: ror eax, 9; xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013d0a4: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d181: ror eax, 9; xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1e8: ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250aa: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00154bb9: ror eax, 9; xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x001547ff: ror eax, 9; xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x001398c0: ror eax, 9; xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003f5ef: ror eax, 9; xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x000df243: ror ecx, 2; cmp ecx, 0x28f5c28; jbe 0xdf258; mov eax, edx; ret; 
0x000c11a7: ror esi, 0x9e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0003d7a6: sahf; adc al, 0; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d786: sahf; adc al, 0; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x000a463a: sahf; adc byte ptr [eax], al; add byte ptr [ebp - 0x6be6e79], cl; call dword ptr [eax - 0x73]; 
0x000c1184: sahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0009f039: sahf; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx + ecx*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0009c695: sahf; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; ret; 
0x000b802e: sahf; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00060667: sahf; arpl cx, di; call dword ptr [eax + 0x68]; 
0x001708e5: sahf; arpl cx, di; call dword ptr [eax - 1]; 
0x0007fd70: sahf; cli; jmp dword ptr [esi - 0x70]; 
0x00123cbf: sahf; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0009e45e: sahf; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x0009599f: sahf; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0013086b: sahf; insd dword ptr es:[edi], dx; add eax, 0xa5c58100; lds edx, ptr [eax]; add byte ptr [edi + 0x31], dl; call dword ptr [esi + 0x53]; 
0x0012c996: sahf; mov dl, 0x54; stc; call dword ptr [ebx - 0x18]; 
0x0009e411: sahf; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x00138bde: sahf; or dword ptr [eax], eax; add byte ptr [ecx - 0x11b43], cl; dec dword ptr [ebp - 0x9763]; jmp dword ptr [esi - 0x70]; 
0x0015d608: sahf; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00100f8e: sahf; ret 0x5420; 
0x0013997b: sahf; ret 0xd108; 
0x00104f2a: sahf; ret 0xd201; 
0x000dfd2d: sahf; ret 0xd329; 
0x000db76c: sahf; ret 0xf883; 
0x00123259: sahf; ret 0xff85; 
0x000df20e: sahf; ret; 
0x00059c0e: sahf; sbb dword ptr [esi], ecx; add byte ptr [ebx - 0x36374b], cl; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x000dee45: sahf; stc; call dword ptr [eax - 0x18]; 
0x000dee45: sahf; stc; call dword ptr [eax - 0x18]; ret 0xf554; 
0x000d3258: sahf; stc; call dword ptr [eax - 0x73]; 
0x00089384: sahf; stc; jmp dword ptr [ebp - 0x75]; 
0x00161745: sahf; std; jmp dword ptr [esi - 0x70]; 
0x000a750f: sahf; sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x0003c58d: sal al, 0x89; ret; 
0x00094f0b: sal al, cl; cmpxchg dword ptr [esp + 4], edx; ret; 
0x00043749: sal bh, 0xd2; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0012286d: sal bh, 0xd8; add esp, 0xc; ret; 
0x000537a2: sal bh, 0xd8; pop esi; pop edi; ret; 
0x0012cf21: sal bh, 0xd8; ret; 
0x0003dee9: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0x56c3; 
0x000409d9: sal bh, 1; fmul dword ptr [edi]; dec eax; ret 0xf3c3; 
0x0013a92f: sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x00090e17: sal bl, 0xa5; pop esi; pop edi; ret; 
0x00043350: sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00043809: sal bl, 0xf; mov esp, 0xbad285c2; and byte ptr [eax], al; add byte ptr [eax], al; cmove eax, edx; ret; 
0x00043430: sal bl, 1; bsf eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004374b: sal bl, cl; bsf eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00043369: sal bl, cl; bsf edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x00027071: sal byte ptr [eax + ebp*8 - 0x73], 0x86; or al, 0x70; stc; call dword ptr [eax - 0x73]; 
0x000a2315: sal byte ptr [eax + ebx + 0x5b], 0x5e; pop edi; ret; 
0x001555ec: sal byte ptr [eax + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6bbc67f], cl; call dword ptr [eax + 0x52]; 
0x00176c5d: sal byte ptr [eax + ecx + 0x5b], 1; pop esi; pop edi; ret; 
0x000fdc55: sal byte ptr [eax + edi*2 - 0x7d], 0xec; or byte ptr [ebp - 0x6b7d77d], cl; call dword ptr [eax + 0x55]; 
0x0008d315: sal byte ptr [eax + edx + 0x39], 0xd0; jne 0x8d310; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x00176d7d: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x90; pop esi; pop edi; ret; 
0x00176e0d: sal byte ptr [eax + edx + 0x5b], 1; add eax, 0x94; pop esi; pop edi; ret; 
0x00176ced: sal byte ptr [eax + edx + 0x5b], 1; sub eax, -0x80; pop esi; pop edi; ret; 
0x0009843d: sal byte ptr [eax + edx - 0x7d], cl; cli; add dword ptr [ebp + 0x1b], esi; or dword ptr [eax], 0x40000000; xor eax, eax; ret; 
0x000e7d95: sal byte ptr [eax + esi - 0x7d], 0xec; or byte ptr [esi + 0x53], dl; call eax; 
0x000df02d: sal byte ptr [eax + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00078b34: sal byte ptr [eax - 0x75], 0x85; call 0x8a078b38; sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x0002886f: sal byte ptr [eax - 7], 1; call dword ptr [eax - 0x18]; 
0x000b0803: sal byte ptr [eax], 0x5f; pop esi; ret; 
0x000c0f32: sal byte ptr [eax], 0xe8; fsub dword ptr [esi + 0xc]; add byte ptr [ecx + 0x10a0bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdc99: sal byte ptr [eax], 0xe8; jno 0xbdc37; or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0016ee25: sal byte ptr [ebp + 0x10], 0x31; rol byte ptr [ebx - 0x2f76f73c], cl; pop ebx; ret; 
0x000983fd: sal byte ptr [ebp + 0x10], cl; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000436d9: sal byte ptr [ebp + 0x14], cl; bsr ebx, ebx; xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x00176318: sal byte ptr [ebp + 0x15], cl; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x00091062: sal byte ptr [ebp + 0x1b], cl; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x0016cf88: sal byte ptr [ebp + 0x1d], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x001872d1: sal byte ptr [ebp + 0x22], 0xb8; add al, 0; add byte ptr [eax], al; add esp, 0xc; ret; 
0x00114091: sal byte ptr [ebp + 0x27], 0x5b; mov eax, ecx; pop esi; pop edi; ret; 
0x00129ca9: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c09: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c379: sal byte ptr [ebp + 0x2c], 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0004aa80: sal byte ptr [ebp + 0x2d], 0xd9; test dword ptr [eax], esi; ret 0xfff9; 
0x0010c51e: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c46e: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c5e6: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x0010c2d6: sal byte ptr [ebp + 0x2f], 0x8b; pop esp; and al, 0x30; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0016d15b: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or al, 0x8b; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x0015ac2b: sal byte ptr [ebp + 0x32], 0x83; in al, dx; or byte ptr [ebp - 0x6beb379], cl; call dword ptr [eax + 0x53]; 
0x000b4241: sal byte ptr [ebp + 0x38], 0x83; ret; 
0x00129a53: sal byte ptr [ebp + 0x3a], 0xb8; rol byte ptr [eax], 1; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129973: sal byte ptr [ebp + 0x3a], 0xb8; rol byte ptr [eax], cl; add byte ptr [eax], al; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x000c2430: sal byte ptr [ebp + 0x3d], 0x66; pmovmskb eax, mm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000a711d: sal byte ptr [ebp + 0x40], 0x80; mov esi, 0x3c64; add byte ptr [edi - 0x7d], dh; in al, dx; or byte ptr [ebp - 0x6bb907a], cl; call dword ptr [ebx + 0x50]; 
0x0012bc69: sal byte ptr [ebp + 0x44], 0x8b; dec esp; and al, 0x10; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x0012aaf3: sal byte ptr [ebp + 0x4a], 0x83; in al, dx; add al, 0x57; push 2; push ebx; call esi; 
0x000c6a06: sal byte ptr [ebp + 0x4c], cl; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x00173afc: sal byte ptr [ebp + 0x61], 0x83; in al, dx; or byte ptr [ebp - 0x8b63], cl; call dword ptr [esi + 0x53]; 
0x001030b1: sal byte ptr [ebp + 0x7c], 0x89; clc; pop ebx; pop esi; pop edi; ret; 
0x0018618b: sal byte ptr [ebp + 0xa], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00177d92: sal byte ptr [ebp + 0xb], 0xc7; add eax, dword ptr [eax]; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0018649a: sal byte ptr [ebp + 0xb], cl; add esp, 8; pop ebx; ret; 
0x0003c979: sal byte ptr [ebp + 0xc], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0003c651: sal byte ptr [ebp + 0xc], 0x89; inc ebx; sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0017a9a1: sal byte ptr [ebp + 0xc], cl; add esp, 0xc; ret; 
0x0016c5e8: sal byte ptr [ebp + 0xd], 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x001498b0: sal byte ptr [ebp + 0xd], 0x5b; pop esi; pop edi; ret; 
0x00170708: sal byte ptr [ebp + 0xd], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00062038: sal byte ptr [ebp + 0xd], 0x83; les ecx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001146cf: sal byte ptr [ebp + 0xe], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a941f: sal byte ptr [ebp + 0xe], cl; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008f70e: sal byte ptr [ebp + 0xf], cl; xend; xor eax, eax; add esp, 0xc; ret; 
0x0003d66b: sal byte ptr [ebp + 2], cl; mov edx, dword ptr [eax]; xor eax, eax; test edx, edx; sete al; ret; 
0x0012b5d1: sal byte ptr [ebp + 4], cl; ret; 
0x0003cc98: sal byte ptr [ebp + 5], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0012b5f5: sal byte ptr [ebp + 8], cl; ret; 
0x0016de4c: sal byte ptr [ebp + 9], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000dfc9c: sal byte ptr [ebp + 9], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00150404: sal byte ptr [ebp + eax + 0x39], 0x50; or byte ptr [ebp - 0xc], dh; ret; 
0x0003516e: sal byte ptr [ebp + eax - 0x80], 0x38; add byte ptr [ebp + 0xa], dh; mov eax, edx; add esp, 0xc; ret; 
0x00043f75: sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x00177c1c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xc50637d], cl; call dword ptr [eax - 0x73]; 
0x0017225c: sal byte ptr [ebp + ebp*2 - 0x7d], 0xec; or bh, al; add byte ptr [edx], al; add byte ptr [eax], al; add byte ptr [ebp - 0xca9f37d], cl; call dword ptr [eax - 0x73]; 
0x000fb27c: sal byte ptr [ebp + ebx - 0x75], 0x85; pushfd; ljmp 0x8d08:0xec83ffff; or byte ptr [ebx], 0x48; stc; call dword ptr [eax + 0x53]; 
0x0016efbc: sal byte ptr [ebp + ebx*8 - 0x75], 0x43; adc byte ptr [ebp + 0x53890450], cl; adc bl, ch; ret; 
0x0009e6e9: sal byte ptr [ebp + ebx*8 - 0x7d], 0xf8; add al, 0x74; fmul dword ptr [ebp - 0x676a379]; call dword ptr [eax - 0x73]; 
0x0009ad80: sal byte ptr [ebp + ecx + 0x31], 0xc0; add esp, 8; pop ebx; ret; 
0x00188d70: sal byte ptr [ebp + ecx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x001842c0: sal byte ptr [ebp + ecx - 0x77], 0x54; and al, 4; jmp dword ptr [eax + 0x30]; 
0x0016ccf6: sal byte ptr [ebp + ecx - 0x7d], 0xec; or al, 0x8b; push eax; add al, 0x50; call dword ptr [edx + 0x10]; 
0x00030038: sal byte ptr [ebp + ecx - 0x7d], 0xf8; add esi, dword ptr [eax + ecx - 0x7d]; les ecx, ptr [eax]; pop ebx; ret; 
0x000f1044: sal byte ptr [ebp + ecx*8 + 0x5b], cl; ret; 
0x0009b3e8: sal byte ptr [ebp + edi - 0x73], 0x45; inc dword ptr [ebx - 0x69f00208]; ret; 
0x00060b17: sal byte ptr [ebp + edi - 0x7d], 0xec; add al, 0x6a; add eax, 0x6c838d50; je 0x60b1e; call dword ptr [eax - 0x18]; 
0x00173498: sal byte ptr [ebp + edi - 0x7d], 0xec; or al, 0x56; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0009d36e: sal byte ptr [ebp - 0x11], 0x89; inc ecx; adc byte ptr [ecx + 0x5e5b104e], cl; ret; 
0x000d9d8e: sal byte ptr [ebp - 0x11], cl; mov eax, ecx; pop ebx; pop esi; ret; 
0x00138085: sal byte ptr [ebp - 0x14], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0013bc72: sal byte ptr [ebp - 0x15], cl; call 0x13a0a0; lea esi, [esi]; add esp, 8; pop ebx; ret; 
0x00160665: sal byte ptr [ebp - 0x18], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001498f6: sal byte ptr [ebp - 0x19], 0x5b; pop esi; pop edi; ret; 
0x00177b08: sal byte ptr [ebp - 0x1b], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0008c379: sal byte ptr [ebp - 0x1c], cl; ret; 
0x0003a060: sal byte ptr [ebp - 0x23], cl; ret; 
0x0012af81: sal byte ptr [ebp - 0x24], 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x00034cc9: sal byte ptr [ebp - 0x24], 0x89; ret; 
0x00123e26: sal byte ptr [ebp - 0x29], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00123e87: sal byte ptr [ebp - 0x2a], 0x5b; xor eax, eax; pop esi; pop edi; ret; 
0x00181ac6: sal byte ptr [ebp - 0x39], 0x89; ret 0x838b; 
0x00123c7c: sal byte ptr [ebp - 0x41], 0x83; in al, dx; or byte ptr [ebp - 0x6b5676a], cl; call dword ptr [edx - 0x77]; 
0x000d37dc: sal byte ptr [ebp - 0x42], 0x83; ret; 
0x00028025: sal byte ptr [ebp - 0x48], 0x83; in al, dx; or al, 0x8d; test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x0012ab24: sal byte ptr [ebp - 0x58], 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x0009b052: sal byte ptr [ebp - 0x5d], 0xe9; ret; 
0x00123c9b: sal byte ptr [ebp - 0x60], 0x83; in al, dx; or byte ptr [ebp - 0x6b5646a], cl; call dword ptr [edx - 0x77]; 
0x000fb299: sal byte ptr [ebp - 0x6c], 0x83; in al, dx; or byte ptr [ebp - 0x14c77b], cl; call dword ptr [eax - 1]; 
0x001b10c5: sal byte ptr [ebp - 0x70], 0x89; ret 0xc589; 
0x000c71d8: sal byte ptr [ebp - 0x77], 0xd8; add esp, 4; pop ebx; pop esi; ret; 
0x000c6388: sal byte ptr [ebp - 0x77], 0xd8; pop ebx; pop esi; pop edi; ret; 
0x00123cba: sal byte ptr [ebp - 0x7f], 0x8d; xchg esi, eax; sahf; dec edx; stc; call dword ptr [eax + 0x50]; 
0x0008d319: sal byte ptr [ebp - 0xc], 1; mov eax, dword ptr [eax]; mov dword ptr [ecx], eax; ret; 
0x0009dabb: sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000da0eb: sal byte ptr [ebp - 0xe], cl; mov eax, ecx; pop ebx; ret; 
0x0008108b: sal byte ptr [ebp - 0xe], cl; ret; 
0x001363b6: sal byte ptr [ebp - 9], 0x83; ret 0x8b18; 
0x0013f504: sal byte ptr [ebx + 0x39], cl; ret 0x4572; 
0x001396c4: sal byte ptr [ebx + 9], 1; cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x001274ae: sal byte ptr [ebx + eax - 0x77], cl; inc edx; add al, 0x85; sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x00190062: sal byte ptr [ebx + ebp*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72e7dbbc], cl; cmp byte ptr [edi], 0x4a; stc; call dword ptr [eax + 0x53]; 
0x00103722: sal byte ptr [ebx + ebx - 0x7d], 1; ret; 
0x0016fa7b: sal byte ptr [ebx + ebx*8 - 0x7d], 0xec; add al, 0x83; ret; 
0x0010a994: sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0005ab2a: sal byte ptr [ebx + edx - 0x39], 0; das; jbe 0x5aabd; ret 0x40c7; 
0x0008e222: sal byte ptr [ebx + edx - 0x77], 0x4c; and al, 0x10; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x0016cb4d: sal byte ptr [ebx + edx - 0x7d], 0xec; or al, 0x8b; dec eax; add al, 0x50; call dword ptr [ecx + 0x10]; 
0x0002714f: sal byte ptr [ebx + edx - 0x7d], 0xec; or byte ptr [ebp - 0x216f336d], cl; call dword ptr [edx + 0x50]; 
0x0012d3aa: sal byte ptr [ebx + esi - 0x75], cl; pop esp; and al, 0xc; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x000a05e2: sal byte ptr [ebx + esi*2 - 0x75], 0x4c; and al, 0x64; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x001707e4: sal byte ptr [ecx + ebp - 0x7d], 0xec; add al, 0x83; ret; 
0x00043214: sal byte ptr [ecx + ebx + 0xf], cl; mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x0012c931: sal byte ptr [ecx + ecx + 0x5e], 0x5b; jl 0x24f10; ret; 
0x00150112: sal byte ptr [ecx + ecx + 0xf], 0x9f; ret; 
0x00043594: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xe8; mov eax, edx; ret; 
0x00043644: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx + 0x508d1ff0], 0xf0; mov eax, edx; ret; 
0x000431c9: sal byte ptr [ecx + ecx + 0xf], 0xbd; rol byte ptr [ebx - 0x3f7ce010], 1; ret; 
0x001878c4: sal byte ptr [ecx + ecx - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x00174a1c: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x001602f4: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016d938: sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x0009065c: sal byte ptr [ecx + edi + 0x31], cl; idiv byte ptr [eax + 0xf0]; call dword ptr gs:[0x10]; 
0x000fb104: sal byte ptr [ecx + edi - 0x7d], 0xec; or byte ptr [ebp - 0x15336b], cl; call dword ptr [edx + 0x50]; 
0x00090bfc: sal byte ptr [ecx + edx + 0x31], 0xc0; add esp, 4; pop ebx; pop esi; ret; 
0x000ac39c: sal byte ptr [ecx + edx + 0x39], 0xc8; jne 0xac390; mov eax, edx; pop ebx; ret; 
0x0008f2ec: sal byte ptr [ecx + edx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x00160baa: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d91: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x50; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x00160f40: sal byte ptr [ecx + edx - 0x7d], 0xec; or al, 0x53; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x00091ad0: sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x0013a92d: sal byte ptr [ecx], 1; sal bh, cl; pop ebx; pop esi; pop edi; ret; 
0x0008efd1: sal byte ptr [ecx], 1; sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x001969e2: sal byte ptr [ecx], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0003e061: sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x00042db3: sal byte ptr [ecx], cl; fld xword ptr [ecx]; sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x00089596: sal byte ptr [edi + eax + 0x5b], 0x5e; pop edi; ret; 
0x000e8709: sal byte ptr [edi + eax - 0x75], cl; dec edx; or byte ptr [ebp - 0x17f48a37], al; push 0x89fffffc; ret 0xc085; 
0x000337e6: sal byte ptr [edi + ebx - 0x7d], 0xec; or byte ptr [ebp - 0x68b9b7b], cl; call dword ptr [eax + 0x56]; 
0x00170729: sal byte ptr [edi + ebx*8 - 0x7d], 0xec; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x0014bb41: sal byte ptr [edi + edi - 0x7d], 0xec; add al, 0x89; ret; 
0x00188df6: sal byte ptr [edi + edx - 0x39], 0x43; push 0xffffffff; add esp, 4; pop ebx; pop esi; ret; 
0x0008e136: sal byte ptr [edi + edx - 0x77], 0x4c; and al, 0x14; mov dword ptr [esp + 0x10], edx; mov eax, dword ptr [eax + 0x14]; add esp, 0xc; jmp eax; 
0x000d9ef6: sal byte ptr [edi + edx - 0x78], cl; rol dword ptr [eax + 0x20740fe1], 1; ret; 
0x0007c5c2: sal byte ptr [edi + edx - 0x7d], 0xec; add al, 0x53; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x000a1106: sal byte ptr [edi + esi*4 + 0x39], cl; ret 0xb374; 
0x0004a48b: sal byte ptr [edi - 7], 1; call dword ptr [eax - 0x18]; 
0x00184137: sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x001274b5: sal byte ptr [edx + eax - 0x77], 0x10; ret; 
0x0014c731: sal byte ptr [edx + eax*2 - 0x7d], 0xec; or al, 0x89; ret; 
0x0005bb73: sal byte ptr [edx + ebp - 0x75], 0x5d; add al, 0x8b; inc ebp; or byte ptr [ecx], bh; ret; 
0x0012dc2b: sal byte ptr [edx + ebx - 0x75], 0x74; and al, 0x44; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x0016faae: sal byte ptr [edx + ebx - 0x7d], 0xec; add al, 0x83; ret; 
0x00172371: sal byte ptr [edx + ebx - 0x7d], 0xec; or al, 0x83; ret 0x5208; 
0x000e7dcf: sal byte ptr [edx + ebx - 0x7d], 0xec; or byte ptr [ebp + 0x520c2454], cl; push ebx; call eax; 
0x00147f1b: sal byte ptr [edx + ebx*2 + 0x38], cl; ret 0x5675; 
0x00176be3: sal byte ptr [edx + ecx + 0x5b], 0x5e; pop edi; ret; 
0x0004334b: sal byte ptr [edx + ecx + 0xf], 0xb6; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x000433ec: sal byte ptr [edx + ecx + 0xf], 0xb7; sal bl, 0xf; mov esp, 0x1508dc0; mov eax, edx; ret; 
0x00034028: sal byte ptr [edx + ecx - 0x77], cl; inc esp; and al, 0x14; call edx; 
0x00088fe3: sal byte ptr [edx + ecx*4 - 0x7d], 0xec; or byte ptr [ebx - 0x72efdba4], cl; adc dword ptr [edi], 0x3f; stc; call dword ptr [eax - 0x75]; 
0x0012847b: sal byte ptr [edx + edx + 0x5b], 0xb8; add dword ptr [eax], eax; add byte ptr [eax], al; pop esi; pop edi; ret; 
0x000984c0: sal byte ptr [edx + edx - 0x7d], 0xec; or al, 0xff; jae 0x984cd; call dword ptr [ebx]; 
0x00091303: sal byte ptr [edx + esi - 0x75], cl; dec ebx; or al, 0x89; clc; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0016c636: sal byte ptr [edx + esi*4 - 0x7d], 0xec; or byte ptr [ebp - 0xc3b7379], cl; call dword ptr [eax - 0x73]; 
0x00026104: sal byte ptr [edx + esi*8 - 0x73], cl; nop; or al, 0x70; stc; call dword ptr [edx - 0x73]; 
0x0004368e: sal byte ptr [esi + eax + 0xf], cl; mov ebp, 0x1ff083c2; ret; 
0x0007e137: sal byte ptr [esi + eax - 0x77], 0xf8; pop ebx; pop esi; pop edi; ret; 
0x001706b7: sal byte ptr [esi + eax - 0x7d], cl; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0012ede4: sal byte ptr [esi + ebx - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x659a779], cl; call dword ptr [eax + 0x55]; 
0x001242e7: sal byte ptr [esi + ecx + 0x39], cl; sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0008f1f7: sal byte ptr [esi + ecx - 0x75], cl; push eax; add al, 0x89; push esp; and al, 4; jmp dword ptr [eax]; 
0x0010a97f: sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x00148cd7: sal byte ptr [esi + ecx - 0x7d], cl; les ecx, ptr [eax]; mov eax, edx; pop ebx; ret; 
0x0016ede7: sal byte ptr [esi + edi - 0x7d], 0xec; or byte ptr [ebx + 0x74ff0443], cl; and al, 0x1c; push ebx; call dword ptr [eax + 4]; 
0x000c22e7: sal byte ptr [esi + edx + 0xf], 0xbc; rol byte ptr [ecx], 0xd0; add eax, ecx; ret; 
0x0013f5a9: sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x0017835a: sal byte ptr [esi + esi - 0x7d], 0xec; or al, 0x8b; inc ebx; or al, 0x57; call dword ptr [eax + 0x10]; 
0x0014ef5b: sal byte ptr [esi + esi*2 - 0x7d], cl; ret 0x8901; 
0x000fdd5a: sal byte ptr [esi - 0x7d], 0xec; or byte ptr [ebp - 0x6c0a97d], cl; call dword ptr [eax + 0x55]; 
0x000ac1f8: sal byte ptr [esp + eax + 0x39], 0xd8; jne 0xac1f0; mov eax, edx; pop ebx; ret; 
0x000c2f2d: sal byte ptr [esp + eax - 0x78], 0x64; adc dword ptr [ebx], eax; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0012b5cd: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12b5d8; ret; 
0x0012b5f1: sal byte ptr [esp + eax - 0x7b], 0xd2; jne 0x12b600; ret; 
0x000606a9: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x6a; add eax, 0x6c838d50; je 0x606b0; call dword ptr [eax - 0x18]; 
0x00144e6a: sal byte ptr [esp + eax*2 - 0x7d], 0xec; add al, 0x89; ret; 
0x000e7dfb: sal byte ptr [esp + ebp*4 - 0x7d], 0xf8; fidiv dword ptr [ebp + 0x3d]; lea ecx, [esp + 4]; mov eax, 0x109; call dword ptr gs:[0x10]; 
0x0012c899: sal byte ptr [esp + ecx + 0x5b], cl; setg al; pop esi; pop edi; ret; 
0x00142ed9: sal byte ptr [esp + ecx - 0x17], 0x6f; idiv bh; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; ret; 
0x001a9ee1: sal byte ptr [esp + ecx - 0x58], 1; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x0016d46d: sal byte ptr [esp + ecx*4 - 0x75], 0x43; add al, 0x83; in al, dx; or al, 0x53; call dword ptr [eax + 0x10]; 
0x0012edc6: sal byte ptr [esp + edi - 0x7d], cl; in al, dx; or byte ptr [ebp - 0x6598f79], cl; call dword ptr [eax + 0x55]; 
0x0008c420: sal byte ptr [esp + edx - 0x39], 0; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x00091189: sal byte ptr [esp + edx - 0x7d], 0xf8; add dword ptr [edx + 0x16], edi; mov eax, 0x5f; cmovne eax, edx; ret; 
0x001810d1: sal byte ptr [esp + esi - 0x7d], 0xec; or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x0016d915: sal byte ptr [esp - 0x7d], 0xec; or al, 0x57; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x00138529: sal byte ptr [esp - 0x7d], 0xec; or byte ptr [ebx - 1], dl; jae 0x138563; call eax; 
0x000b886c: sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00091740: sal dh, 1; ret 0x7501; 
0x001b1e0c: sal dh, cl; ret 0x7406; 
0x0009faf2: sal dh, cl; rol dword ptr [eax + 0x75], 0x28; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x0016c5a3: sal dl, 0xff; add esp, 0x18; lea eax, [ebx + 0xa64c]; pop ebx; ret; 
0x000c1145: sal dword ptr [eax], 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c54ef: sal dword ptr [ebp + 0x18], 1; ret; 
0x00047833: sal dword ptr [ebp - 0x16], 0x83; ret 0x8501; 
0x00055cca: sal dword ptr [ebp - 0xd], 0x8b; push esi; or al, 0xf7; ret 0; 
0x001242eb: sal dword ptr [ebp - 0xe], 1; mov eax, dword ptr [eax + 4]; pop ebx; ret; 
0x0013f5cc: sal dword ptr [ebx + 0x13], 0x5b; mov eax, 0xffffffff; pop esi; pop edi; ret; 
0x0009dab4: sal dword ptr [ebx + ebp*8 - 0x75], cl; inc eax; or al, 0x85; sal byte ptr [ebp - 0xe], 0x5b; ret; 
0x000bbcfe: sal dword ptr [ebx], 0xf2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10c4: sal dword ptr [ecx + 0x300109f], 0xc; cdq; jmp ecx; 
0x000aaa49: sal dword ptr [ecx + eax + 0x40], 1; pop edi; ret; 
0x0003c04a: sal dword ptr [ecx], 0xc8; shr eax, 0x1f; ret; 
0x001326ef: sal dword ptr [ecx], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x000ba61a: sal dword ptr [edi + 0x3001107], 0xc; cdq; jmp ecx; 
0x000c1101: sal dword ptr [edi + ebx*4 + 0x10], 0; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00081c79: sal dword ptr [edx - 0xc], 1; add eax, dword ptr [esp + 8]; pop ebx; ret; 
0x0013ec69: sal dword ptr [esi + edi*2 - 0x7d], 1; rol byte ptr [ecx], 0x83; ret; 
0x000bafed: sal dword ptr [esi + edi*8], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdcff: sal dword ptr [esi - 0x2e], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0012df7f: sal dword ptr [esi - 0x75], 0x5c; and al, 0x60; mov ecx, dword ptr [esp + 0x64]; mov eax, 0x19b; mov esi, edi; call dword ptr gs:[0x10]; 
0x00115dae: sal eax, cl; jmp dword ptr [ebp - 0x75]; 
0x000c1182: sal ebx, 0x9e; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c2c59: sal ebx, 0xa4; pop eax; mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret; 
0x000d6d38: sal ebx, 0xff; dec dword ptr [ebx - 0x364b7b]; call dword ptr [edi + 0x6a]; 
0x000c2d7a: sal ebx, 1; stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x0015c54d: sal ecx, 1; call dword ptr [eax + 0x6a]; 
0x000c0fff: sal esi, 0x9f; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00067ab3: sal esi, 0xff; dec dword ptr [ebx - 0x5ab4b]; jmp dword ptr [ebp - 0x5f]; 
0x000c7171: sal esi, 1; dec dword ptr [ebx - 0x72e3db84]; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c7191: sal esi, 1; jmp dword ptr [esi - 0x70]; 
0x000c720d: sal esi, 1; push esi; inc ecx; jnp 0xc7218; cmove eax, edx; ret; 
0x000c633d: sal esi, cl; push esi; inc ecx; jne 0xc6346; cmove eax, edx; ret; 
0x001607ab: sal esp, 1; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x001a9dd6: salc; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001944be: salc; add cl, byte ptr [ebx + 0x5b082444]; ret; 
0x0012aafe: salc; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0002f80b: salc; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00047197: salc; and esi, eax; mov eax, esi; pop esi; pop edi; ret; 
0x000471a4: salc; and esi, ecx; mov eax, esi; pop esi; pop edi; ret; 
0x00026bb4: salc; cmp al, 0x89; ret; 
0x001867d6: salc; dec ebp; sti; jmp dword ptr [esi - 0x70]; 
0x00155b05: salc; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00191145: salc; inc edx; clc; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e1f: salc; inc edx; clc; mov eax, edx; pop ebx; ret; 
0x001911b5: salc; inc edx; mul byte ptr [esi - 0x77]; inc edx; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00193ecf: salc; inc edx; test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x001a4f63: salc; int1; call dword ptr [ebx - 0x18]; 
0x00091829: salc; jae 0x91868; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000960d4: salc; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x000c2c60: salc; mov eax, dword ptr [esp + 4]; ret; 
0x000c2ce0: salc; mov eax, dword ptr [esp + 8]; cld; pop edi; ret; 
0x000c2cb6: salc; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00059d36: salc; movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00123e89: salc; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x0003a5f1: salc; push cs; add byte ptr [ebx + 0x478920c4], al; adc al, 0x89; ret; 
0x000c2d20: salc; ret; 
0x001905d6: salc; scasd eax, dword ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x000a75a9: salc; sub esp, 0xc; push eax; call edx; 
0x000abc36: salc; xchg al, bh; jmp dword ptr [esi - 0x70]; 
0x00131998: sar ah, 0xff; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0006525e: sar al, 0xff; jmp ecx; 
0x000651fb: sar al, 0xff; mov eax, edi; mov edi, ecx; jmp eax; 
0x0014c9e4: sar bh, 0xb4; and al, 0xec; add al, byte ptr [eax]; add byte ptr [esi - 0x18], dl; scasb al, byte ptr es:[edi]; ret 0xffff; 
0x001a493b: sar bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00128eaa: sar bh, 1; je 0x128ed2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x001175d9: sar bh, 1; jmp dword ptr [ebp - 0x5f]; 
0x00117ae6: sar bh, 1; jmp dword ptr [ebp - 0x75]; 
0x001b43ba: sar bh, cl; dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x001892a7: sar byte ptr [0x593], 1; ja 0x1892c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007b920: sar byte ptr [0x593], 1; ja 0x7bb90; sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0007bead: sar byte ptr [0x593], 1; ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee71: sar byte ptr [0x593], 1; ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000813bb: sar byte ptr [0x593], 1; ja 0x813f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00081b8d: sar byte ptr [0x593], 1; ja 0x81bc0; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x00085096: sar byte ptr [0x593], 1; ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008800f: sar byte ptr [0x593], 1; ja 0x88040; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088d38: sar byte ptr [0x593], 1; ja 0x88d80; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008bde1: sar byte ptr [0x593], 1; ja 0x8be40; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008be8b: sar byte ptr [0x593], 1; ja 0x8beb8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c680: sar byte ptr [0x593], 1; ja 0x8c6c0; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000df25c: sar byte ptr [0xa3d70b], cl; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00099837: sar byte ptr [eax + 0x10], cl; pop ebx; ret; 
0x000a1a06: sar byte ptr [eax + 0x163], 0xc6; xchg byte ptr [esp + edi], ah; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x0012ad77: sar byte ptr [eax + 0x16], 0x8b; inc esi; add al, 0x89; ret 0xe083; 
0x0010d674: sar byte ptr [eax + 0x1b4], cl; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x001244e4: sar byte ptr [eax + 0x2c], 0x83; in al, dx; add al, 0x89; ret; 
0x001009e0: sar byte ptr [eax + 0x2d], 0x8b; push esi; or byte ptr [ecx], bh; ret 0x267e; 
0x0008a77f: sar byte ptr [eax + 0x2e], 0x29; ret; 
0x000860a2: sar byte ptr [eax + 0x33], 1; ret; 
0x00061d9b: sar byte ptr [eax + 0x3a], 0x83; in al, dx; or byte ptr [ebp - 0x6cd3c7a], cl; call dword ptr [eax + 0x53]; 
0x00147afa: sar byte ptr [eax + 0x3b], 0x83; in al, dx; add al, 0x89; ret; 
0x00061e8e: sar byte ptr [eax + 0x3f], 0x83; in al, dx; or byte ptr [ebp - 0x6cd3c7a], cl; call dword ptr [eax + 0x53]; 
0x0013d7a0: sar byte ptr [eax + 0x70], 0x89; ret; 
0x0009427d: sar byte ptr [eax + 0xaf], cl; mov esi, 8; call dword ptr gs:[0x10]; 
0x0007d665: sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x00080163: sar byte ptr [eax + 0xb], 0x83; ret 0x8304; 
0x000e90f6: sar byte ptr [eax + 0xdc], 1; call dword ptr gs:[0x10]; 
0x00097b24: sar byte ptr [eax + 0xf0], cl; mov ecx, 7; xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009f757: sar byte ptr [eax + 1], cl; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x00154005: sar byte ptr [eax + 8], 0x83; les eax, ptr [ecx + ecx*4]; fcomp dword ptr [ebx + 0x5e]; ret; 
0x0012f6d5: sar byte ptr [eax + 8], 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x00189e94: sar byte ptr [eax + 9], 0x8b; push esp; and al, 4; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000c3828: sar byte ptr [eax + eax], 1; add byte ptr [ecx], al; xor eax, eax; pop ebx; ret; 
0x00174c1b: sar byte ptr [eax], 0x89; dec esp; and al, 8; mov dword ptr [esp + 4], eax; jmp edx; 
0x00180f55: sar byte ptr [eax], 0xf; inc esp; ret; 
0x000af28b: sar byte ptr [eax], cl; pop ecx; add eax, 0x4d8b1075; aam 0x83; ret 0xf01; 
0x000ee867: sar byte ptr [eax], cl; ret; 
0x001a9d24: sar byte ptr [ebx], 0x4a; cld; jne 0x1a9d30; pop ebx; ret; 
0x0008efd3: sar byte ptr [ebx], 0x54; and al, 4; setae al; ret; 
0x00104f58: sar byte ptr [ebx], 0xb4; and al, 4; add al, byte ptr [eax]; add byte ptr [edi], cl; dec esi; ret 0x4489; 
0x0007b977: sar byte ptr [ebx], 1; mov cl, 0x70; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x0007b982: sar byte ptr [ebx], 1; mov cl, 0x94; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x0007b96c: sar byte ptr [ebx], 1; mov cl, 0xec; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd009; 
0x000e7de9: sar byte ptr [ecx + 0x74], cl; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x00127b9c: sar byte ptr [ecx + 3], 0xc6; add eax, dword ptr [eax]; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000958de: sar byte ptr [ecx + 7], cl; xor esi, esi; call dword ptr gs:[0x10]; 
0x0015978c: sar byte ptr [ecx], 0xd1; setne al; ret; 
0x000434fc: sar byte ptr [ecx], 1; ret 0x920f; 
0x000434dd: sar byte ptr [ecx], 1; ret 0x9e0f; 
0x000e375a: sar byte ptr [ecx], 1; ret; 
0x000c78fb: sar byte ptr [ecx], 1; ror byte ptr [edi], 1; inc edx; ret 0xd9f7; 
0x000c10b9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x109fb1; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb119: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x10fd7d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9ad9: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x1e]; call 0x187611; add ecx, 0x11125d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c10f6: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x109f74; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb156: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x10fd40; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b16: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x5b]; call 0x187611; add ecx, 0x111220; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c110d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x109f5d; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb16d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x10fd29; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b2d: sar byte ptr [ecx], cl; fidiv dword ptr [edx - 0x72]; call 0x187611; add ecx, 0x111209; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00078546: sar byte ptr [ecx], cl; ret 0xa75; 
0x000437d4: sar byte ptr [edx + 0x10], cl; cmove eax, edx; ret; 
0x00098487: sar byte ptr [edx + 0x200], 0xf; inc esp; ret 0x118b; 
0x00043751: sar byte ptr [edx + 0x20], cl; cmove eax, edx; ret; 
0x00094636: sar byte ptr [edx + 1], 0xe8; mov esp, 0x81000f2f; ret; 
0x00043733: sar byte ptr [edx + 8], cl; cmove eax, edx; ret; 
0x000a91ae: sar byte ptr [edx - 1], 0x5b; cmove eax, edx; add eax, 1; ret; 
0x000908c0: sar byte ptr [edx], cl; cmove eax, edx; ret; 
0x0009329d: sar byte ptr [esi + 0x53053053], cl; call dword ptr gs:[0x10]; 
0x00143686: sar byte ptr [esi + 5], 0x80; cmp ebp, dword ptr [esi]; je 0x143698; add esp, 8; pop ebx; ret; 
0x00093c4c: sar byte ptr [esi + 8], cl; call dword ptr gs:[0x10]; 
0x0010d6dc: sar byte ptr [esi + 8], cl; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x00084402: sar byte ptr [esi], cl; stc; call dword ptr [eax - 0x18]; 
0x0009726b: sar cl, 1; jmp dword ptr [esi - 0x70]; 
0x00085f82: sar cl, cl; inc dword ptr [ebx + 0x45c710c4]; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x0010d539: sar dh, 0xff; call dword ptr [ebx - 0x18]; 
0x000738c0: sar dl, 0xff; dec dword ptr [ecx - 0x4ef4b]; call dword ptr [esi - 1]; 
0x0009ff79: sar dword ptr [0xfffff000], 0x77; pop es; mov eax, ecx; pop ebx; ret; 
0x0003ccd7: sar dword ptr [0xfffff001], cl; jae 0x24f10; ret; 
0x000bdcbd: sar dword ptr [eax + 0x30010d2], 0xc; xchg ecx, eax; jmp ecx; 
0x00092171: sar dword ptr [eax + 0xf0], 1; mov edx, 0x7fffffff; xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00042db7: sar dword ptr [eax + 2], 0xf; movsd dword ptr es:[edi], dword ptr [esi]; ret 0xe0d3; 
0x000c0fbd: sar dword ptr [eax], 0xa0; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00144ccb: sar dword ptr [eax], 0xf; dec edi; ret; 
0x000bb124: sar dword ptr [ebp - 3], 0x10; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000c0f3a: sar dword ptr [ebx + 0x30010a0], 0xc; xchg ecx, eax; jmp ecx; 
0x000b9b06: sar dword ptr [ebx], 0x12; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016eeb4: sar dword ptr [ecx], 1; dec eax; adc al, 0x72; ret 0x4889; 
0x000669e3: sar dword ptr [ecx], cl; ret; 
0x000bb1e2: sar dword ptr [edi + 0x30010fc], 0xc; cdq; jmp ecx; 
0x000b9b82: sar dword ptr [edi + 0x3001111], 0xc; cdq; jmp ecx; 
0x000b9a02: sar dword ptr [edi + 0x3001112], 0xc; xchg ecx, eax; jmp ecx; 
0x000c1039: sar dword ptr [edi + ebx*4 + 0xc030010], 0x91; jmp ecx; 
0x000b9bc7: sar dword ptr [edx + 0x11], 0x11; add byte ptr [ebx], al; or al, 0x99; jmp ecx; 
0x000bdd39: sar dword ptr [edx + edx*8], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00195da1: sar dword ptr [edx], 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c3869: sar dword ptr [esi], 1; jmp ecx; 
0x000982ae: sar eax, 0x1c; and eax, 3; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000982ee: sar eax, 0x1e; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0011eff7: sar eax, 0x1f; mov dword ptr [esp + 0xc], eax; mov eax, 0x8c; mov ecx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0003c41f: sar eax, 0x1f; not eax; and eax, edx; ret; 
0x0003c10a: sar eax, 0x1f; not eax; sar edx, 0x1e; and eax, edx; ret; 
0x0018e085: sar eax, 0x1f; ret; 
0x0003bd7b: sar eax, 0x1f; sub ecx, edx; not eax; and eax, ecx; ret; 
0x00064998: sar eax, 0xff; jmp ecx; 
0x00065a85: sar eax, 0xff; mov eax, edi; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x0008f241: sar eax, 1; and eax, 1; mov dword ptr [edx + 0x24], eax; mov dword ptr gs:[0x7c], edx; pop ebx; ret; 
0x0008fb09: sar eax, 1; and eax, 1; mov dword ptr [edx + 8], eax; mov dword ptr gs:[0x78], edx; pop ebx; ret; 
0x00090d7f: sar eax, 1; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000fbf4d: sar eax, 1; pop edi; pop ebp; ret; 
0x00090ddf: sar eax, 2; and eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000801d3: sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00082339: sar eax, 2; ret; 
0x000c21e0: sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0013a18d: sar eax, 5; add esp, 0xc; ret; 
0x001876bd: sar eax, 5; and dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x0018765e: sar eax, 5; and edx, dword ptr [ecx + eax*4]; setne al; movzx eax, al; ret; 
0x0018768d: sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x000b9ac6: sar ebx, 0x11; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0010d9b0: sar ebx, 0xff; call dword ptr [eax + 0x50]; 
0x0017e40b: sar ebx, 1; jmp dword ptr [esi - 0x70]; 
0x00081c8a: sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0003d4a3: sar ebx, 5; rol eax, cl; and dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x0003d443: sar ebx, 5; shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x000870e9: sar ecx, 1; jmp dword ptr [esi - 0x70]; 
0x0003d4f9: sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x00086dd4: sar ecx, cl; jmp dword ptr [esi - 0x70]; 
0x001a487b: sar edi, 0xff; jmp dword ptr [esi + 0xf]; 
0x0017ac8d: sar edi, 0xff; mov dword ptr [eax], 0; add esp, 0x14; pop ebx; pop esi; ret; 
0x000a3956: sar edi, 1; dec dword ptr [ebp - 0x666b77d]; call dword ptr [eax - 0x73]; 
0x001b43f8: sar edi, 1; dec dword ptr [ebx + 0x39402444]; ret 0x850f; 
0x00025f8e: sar edi, 1; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0017237d: sar edi, cl; inc dword ptr [ebx - 0x77cef3c]; add dword ptr [eax + 1], edi; sbb eax, -1; add esp, 0xc; ret; 
0x0003c10f: sar edx, 0x1e; and eax, edx; ret; 
0x0011f6ce: sar edx, 0x1f; call dword ptr gs:[0x10]; 
0x00153107: sar edx, 1; imul eax, edx, 0xb6db6db7; ret; 
0x00081d1f: sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x000fafe1: sar esi, 1; inc dword ptr [ebx - 0x3f7aef3c]; jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x000bb1a5: sar esp, 0xfc; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00140f2a: sbb ah, 0x2c; stc; call dword ptr [eax + 0x55]; 
0x00141a74: sbb ah, 0x2c; stc; call dword ptr [eax + 0x56]; 
0x00139d40: sbb ah, 0x2c; stc; call dword ptr [eax - 0x73]; 
0x000a9b17: sbb ah, 0x50; cmc; dec dword ptr [ebx + 0x19c99]; add dh, dh; ret; 
0x00157ee8: sbb ah, 0xb3; stc; call dword ptr [eax - 0x18]; 
0x000c633b: sbb ah, 0xd3; idiv bh; test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000c38d7: sbb ah, 1; add byte ptr [eax], al; ret; 
0x000c0fdc: sbb ah, byte ptr [eax + 0xc030010]; xchg ecx, eax; jmp ecx; 
0x00142c12: sbb al, 0; add byte ptr [eax], al; add byte ptr [ebp + 0x44c74004], cl; ret 8; 
0x001ad081: sbb al, 0; add byte ptr [eax], al; add cl, ch; ret 0xffdf; 
0x001b30df: sbb al, 0; add byte ptr [eax], al; add cl, ch; ret; 
0x001a192e: sbb al, 0; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x000744f6: sbb al, 0; add byte ptr [ecx], al; ret; 
0x000acadc: sbb al, 0x13; call 0x754cc1e2; add cl, byte ptr [ebp - 0x17b7436e]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000a9d68: sbb al, 0x1a; idiv bh; and ch, 2; lea edx, [edx - 0x17a8d4]; cmove eax, edx; ret; 
0x000a5ec1: sbb al, 0x21; retf 0x488d; jmp dword ptr [ecx]; 
0x00027041: sbb al, 0x24; call edi; 
0x000260de: sbb al, 0x24; call esi; 
0x0003c530: sbb al, 0x24; fld dword ptr [esp]; add esp, 4; ret; 
0x0003c4d9: sbb al, 0x24; fld dword ptr [esp]; mov dword ptr [edx], eax; add esp, 4; ret; 
0x000dad42: sbb al, 0x24; fld qword ptr [esp]; add esp, 0xc; ret; 
0x0003c290: sbb al, 0x24; fld qword ptr [esp]; add esp, 8; ret; 
0x00091bd1: sbb al, 0x24; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00091b9d: sbb al, 0x24; mov eax, 0xf0; xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x001508ab: sbb al, 0x24; mov ebx, edi; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x00026251: sbb al, 0x24; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x000268fb: sbb al, 0x24; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x001875fe: sbb al, 0x24; ret; 
0x00061a51: sbb al, 0x24; sub esp, 8; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x001344ca: sbb al, 0x29; rcl byte ptr [eax - 0x73]; xchg dword ptr [ebp + 0x55], esi; stc; call dword ptr [eax - 1]; 
0x0006eda0: sbb al, 0x29; ret; 
0x00034be5: sbb al, 0x2a; adc eax, 0x822b0500; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00159a42: sbb al, 0x31; dec dword ptr [ebx + 0x392c244c]; ret; 
0x0018805f: sbb al, 0x31; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x00112e67: sbb al, 0x31; fild dword ptr [ebp - 0x14f48a2e]; jo 0x112df4; ret; 
0x000251fd: sbb al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a1a04: sbb al, 0x31; sar byte ptr [eax + 0x163], 0xc6; xchg byte ptr [esp + edi], ah; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x000d9c62: sbb al, 0x39; dec edi; sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x0014d7dc: sbb al, 0x39; fmul dword ptr [edi]; pop dword ptr [ebx + 0x29000002]; ret; 
0x0014f04f: sbb al, 0x39; ret 0x1674; 
0x000fc57b: sbb al, 0x39; ret 0x4e0f; 
0x000e84d1: sbb al, 0x39; ret 0x8d0f; 
0x00170f25: sbb al, 0x39; ret 0x930f; 
0x000626aa: sbb al, 0x39; ret; 
0x000fdd24: sbb al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x00042fd7: sbb al, 0x50; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x001279ef: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x10; add esp, 0xc; ret; 
0x000ac70b: sbb al, 0x50; push dword ptr [esp + 0x1c]; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x000e7c5e: sbb al, 0x51; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x0016cf76: sbb al, 0x52; lea edx, [esi - 0xcfc34]; push edx; push 1; push ebx; call dword ptr [eax]; 
0x0016d09f: sbb al, 0x52; lea edx, [esi - 0xcfc34]; push edx; push 2; push ebx; call dword ptr [eax]; 
0x001777e8: sbb al, 0x53; call dword ptr [eax + 0xc]; 
0x0016edf3: sbb al, 0x53; call dword ptr [eax + 4]; 
0x0016ee41: sbb al, 0x53; call dword ptr [eax]; 
0x0017771c: sbb al, 0x53; call eax; 
0x0016c7c7: sbb al, 0x56; mov eax, dword ptr [esp + 0x20]; call eax; 
0x000aca61: sbb al, 0x58; call 0xc24eda67; ret; 
0x0009b354: sbb al, 0x5b; lea eax, [eax + eax - 1]; pop esi; pop edi; pop ebp; ret; 
0x00080196: sbb al, 0x5b; lea eax, [ecx + esi]; pop esi; pop edi; pop ebp; ret; 
0x000309f9: sbb al, 0x5b; mov eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x00175db4: sbb al, 0x5b; mov eax, edx; pop esi; pop edi; pop ebp; ret; 
0x000389d0: sbb al, 0x5b; mov eax, esi; pop esi; pop edi; pop ebp; ret; 
0x000338c9: sbb al, 0x5b; pop esi; mov eax, edi; pop edi; pop ebp; ret; 
0x0007e6b0: sbb al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000251ce: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x001213c3: sbb al, 0x5b; pop esi; pop edi; ret; 
0x000b01c4: sbb al, 0x5b; pop esi; ret; 
0x0008ab7b: sbb al, 0x5b; pop esi; sub eax, edi; pop edi; pop ebp; ret; 
0x000801d1: sbb al, 0x5b; sar eax, 2; pop esi; pop edi; pop ebp; ret; 
0x00148a45: sbb al, 0x5b; stc; call dword ptr [eax - 0x18]; 
0x000bbaba: sbb al, 0x5f; pop esi; pop ebx; ret; 
0x00163038: sbb al, 0x64; bnd call dword ptr [eax - 0x18]; 
0x0008f1a6: sbb al, 0x65; mov dword ptr [0x7c], eax; ret; 
0x0008f276: sbb al, 0x65; mov dword ptr [0x7c], edx; mov eax, dword ptr [eax + 0x24]; test eax, eax; jne 0x8f290; ret; 
0x0008f18d: sbb al, 0x65; mov edx, dword ptr [0x78]; mov dword ptr [eax + 0x20], edx; mov dword ptr gs:[0x7c], eax; ret; 
0x0017921e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x00087e2e: sbb al, 0x65; sub eax, dword ptr [0x14]; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x000dbfba: sbb al, 0x65; sub ecx, dword ptr [0x14]; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x0010c2f3: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c396: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c603: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x00129c26: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cc6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012f1ad: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f22c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f77d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7ed: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fc3d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fd3d: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x001301bc: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x0013ae31: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c081: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x0014c872: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f22: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x0016cda7: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00175f3a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fda: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x001848c9: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x001905c7: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x0003d21c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x00040cf6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x000535a6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x00092a99: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097685: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x00098939: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098da9: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c5: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099715: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c8c0: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2c: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009eb72: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff3a: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000dabe6: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dc22f: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000e7b22: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d40: sbb al, 0x65; sub edx, dword ptr [0x14]; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x001398bd: sbb al, 0x6a; add eax, 0x6509c8c1; xor eax, dword ptr [0x18]; push esi; call eax; 
0x000ef889: sbb al, 0x6a; add eax, ebp; das; ret 1; 
0x000336cc: sbb al, 0x73; pop ss; mov edx, dword ptr [ebx + eax*4 + 0x20]; pop ebx; mov eax, edx; ret; 
0x0003135d: sbb al, 0x73; stc; call dword ptr [eax - 0x73]; 
0x0011e4a7: sbb al, 0x74; mov dh, 0x89; ret; 
0x000a09aa: sbb al, 0x81; les esi, ptr [eax + eax + 0x5e5b0000]; ret; 
0x00187691: sbb al, 0x82; xor eax, eax; pop ebx; ret; 
0x0017a613: sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x00138ebe: sbb al, 0x83; in al, dx; add al, 0x83; ret; 
0x00041427: sbb al, 0x83; in al, dx; add al, 0xf; scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000360be: sbb al, 0x83; in al, dx; or al, 0x8d; xor dword ptr [ecx + 0x2e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0014da6b: sbb al, 0x83; insb byte ptr es:[edi], dx; and al, 0x14; add dword ptr [ecx], ebp; ret 0x828d; 
0x0010ba6f: sbb al, 0x83; les ebp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001797fe: sbb al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x001168b4: sbb al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; ret; 
0x00134590: sbb al, 0x83; les ecx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0008e846: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; jmp eax; 
0x000dc691: sbb al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00079ee3: sbb al, 0x83; ljmp 0xc483:0x4518901; adc al, 0x5b; pop esi; ret; 
0x0015a3b7: sbb al, 0x83; ret 0x8301; 
0x00127ec3: sbb al, 0x83; ret 0x8801; 
0x0013f0ae: sbb al, 0x83; ret 0x8802; 
0x0009b573: sbb al, 0x83; ret; 
0x000fee09: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret 0xef7f; 
0x000fef89: sbb al, 0x83; rol byte ptr [ecx], 0x39; ret; 
0x000ad19f: sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x00095123: sbb al, 0x83; rol dword ptr [ecx], 0x83; ret 0x8108; 
0x001597b4: sbb al, 0x83; ror byte ptr [eax], 0x50; call 0xc2920; add esp, 0x1c; ret; 
0x0008daaf: sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0016db47: sbb al, 0x85; ror byte ptr [edi], 0x84; mov esi, 0x83fffffe; in al, dx; or al, 0x56; call eax; 
0x000a3999: sbb al, 0x85; ror byte ptr [edi], cl; mov byte ptr [esi - 0x76fffffa], dl; ret; 
0x000df02b: sbb al, 0x85; sal byte ptr [eax + esi*2 - 0x75], 0x5c; and al, 0x60; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x00174a1a: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x55; call eax; 
0x0016c548: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x56; call eax; 
0x0016d936: sbb al, 0x85; sal byte ptr [ecx + ecx - 0x7d], 0xec; or al, 0x57; call eax; 
0x000a08cc: sbb al, 0x89; add al, 0x24; call esi; 
0x000352a0: sbb al, 0x89; call 0x5d62b102; ret; 
0x0003e232: sbb al, 0x89; call 0x5d634094; ret; 
0x00080044: sbb al, 0x89; call 0x5d675ea6; ret; 
0x000989ec: sbb al, 0x89; call 0x5d68e84e; ret; 
0x00099379: sbb al, 0x89; call 0x5d68f1db; ret; 
0x00099ad6: sbb al, 0x89; call 0x5d68f938; ret; 
0x000a1ccc: sbb al, 0x89; call 0x5d697b2e; ret; 
0x000a1d4e: sbb al, 0x89; call 0x5d697bb0; ret; 
0x0010eabb: sbb al, 0x89; call 0x5d70491d; ret; 
0x00152980: sbb al, 0x89; call 0x5d7487e2; ret; 
0x00154a44: sbb al, 0x89; call 0x5d74a8a6; ret; 
0x00167d40: sbb al, 0x89; call 0x5d75dba2; ret; 
0x0016ab80: sbb al, 0x89; call 0x5d7609e2; ret; 
0x0016b610: sbb al, 0x89; call 0x5d761472; ret; 
0x0016b8e0: sbb al, 0x89; call 0x5d761742; ret; 
0x00189d69: sbb al, 0x89; call 0x5d77fbcb; ret; 
0x000e84ce: sbb al, 0x89; dec esi; sbb al, 0x39; ret 0x8d0f; 
0x00038804: sbb al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000ac589: sbb al, 0x89; inc edx; add al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0003e7e7: sbb al, 0x89; je 0x3e80f; adc al, 0x89; ret 0x748b; 
0x0003052e: sbb al, 0x89; lds ecx, ptr [ecx + 0x77e8243c]; mov bh, 7; add byte ptr [ecx - 0x76bbdbbc], cl; ret 0xc483; 
0x0003309e: sbb al, 0x89; out 0x89, al; ret 0x25; 
0x001353f5: sbb al, 0x89; out 0x89, al; ret; 
0x000fd4a8: sbb al, 0x89; pop edx; and byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003915a: sbb al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x00035907: sbb al, 0x89; ret 0x25; 
0x000825e3: sbb al, 0x89; ret 0x4489; 
0x0017df90: sbb al, 0x89; ret 0x448b; 
0x00137645: sbb al, 0x89; ret 0x572b; 
0x001af323: sbb al, 0x89; ret 0x950f; 
0x000a9a1b: sbb al, 0x89; ret 0x98eb; 
0x0009f82f: sbb al, 0x89; ret 0xc031; 
0x0010a14e: sbb al, 0x89; ret 0xc085; 
0x0005a11d: sbb al, 0x89; ret 0xc801; 
0x00081130: sbb al, 0x89; ret 0xc883; 
0x001378e3: sbb al, 0x89; ret 0xc985; 
0x0008169f: sbb al, 0x89; ret 0xe8c1; 
0x0010ace8: sbb al, 0x89; ret 0xeac0; 
0x00063161: sbb al, 0x89; ret; 
0x00091ace: sbb al, 0x89; sal byte ptr [ecx], 1; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc11f; 
0x0009e63d: sbb al, 0x89; stc; call dword ptr [eax - 0x18]; 
0x00157b8c: sbb al, 0x89; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x00145f8d: sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x000ea375: sbb al, 0x89; xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x000c295e: sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00190ccc: sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0013aaa7: sbb al, 0x8b; inc ebp; or al, 0x85; ror byte ptr [edi], 0x84; ret; 
0x000db2a0: sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x0010c0c5: sbb al, 0x8b; je 0x10c0ed; inc esp; mov ebx, dword ptr [esp + 0x40]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000e7bf5: sbb al, 0x8b; je 0xe7c1d; inc esp; mov ebx, dword ptr [esp + 0x40]; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000ac31f: sbb al, 0x8b; jl 0xac347; sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x001926c6: sbb al, 0x8b; jmp ebx; 
0x000eaf7f: sbb al, 0x8b; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x00129e47: sbb al, 0x8b; pop esp; and al, 0x18; mov eax, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x0014ea4f: sbb al, 0x8b; push edx; or byte ptr [ecx], bh; ret 0x460f; 
0x000dee93: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd44: sbb al, 0x8b; push esp; and al, 0x34; mov ebx, dword ptr [esp + 0x30]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x00115864: sbb al, 0x8b; test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x00094bf4: sbb al, 0x8d; adc dword ptr [ebx + 0x40], -7; call dword ptr [eax + 0x6a]; 
0x00092092: sbb al, 0x8d; add ah, 0x83; stc; call dword ptr [eax - 0x18]; 
0x0013671f: sbb al, 0x8d; cmp dword ptr [eax], -0x57; stc; call dword ptr [eax - 0x73]; 
0x0014a86d: sbb al, 0x8d; inc ebx; add dword ptr [eax - 0x7bf0c406], eax; ret 1; 
0x00029fa3: sbb al, 0x8d; inc ebx; add ecx, dword ptr [edi]; dec ecx; ret; 
0x0014374e: sbb al, 0x8d; mov al, 0x84; ret 0xfff9; 
0x0005bbc7: sbb al, 0x8d; mov byte ptr [eax + eax + 0x48890000], bl; or byte ptr [ecx + 0x10890450], cl; ret; 
0x000c4fd0: sbb al, 0x8d; or byte ptr [eax - 0x64], 0xf9; call dword ptr [eax - 0x73]; 
0x000a1648: sbb al, 0x8d; push ebx; or dh, dh; ret 0xf0f; 
0x0016edda: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax + 4]; 
0x0016ee19: sbb al, 0x8d; push ecx; add al, 0x52; push ebx; call dword ptr [eax]; 
0x000ce0a6: sbb al, 0x8d; sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x0013438a: sbb al, 0x8d; sub byte ptr [edi + 0x55], 0xf9; call dword ptr [eax - 1]; 
0x0009658d: sbb al, 0x8d; sub esp, -0x7a; stc; call dword ptr [eax - 0x73]; 
0x0016dc98: sbb al, 0x8d; xchg al, bl; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x0015cf52: sbb al, 0x8d; xchg byte ptr [eax + 0x5f], dh; stc; call dword ptr [eax - 0x18]; 
0x000c74bb: sbb al, 0x8d; xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7104: sbb al, 0x8d; xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4c7c: sbb al, 0x8d; xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000fbc23: sbb al, 0x8e; je 0xfbc38; pop ebx; pop esi; ret; 
0x000c4fe3: sbb al, 0x9c; stc; call dword ptr [eax - 0x18]; 
0x00139d70: sbb al, 0xa9; stc; call dword ptr [eax - 0x73]; 
0x000a9280: sbb al, 0xb2; idiv bh; cmovne eax, edx; ret; 
0x001537c1: sbb al, 0xb3; stc; call dword ptr [eax - 0x73]; 
0x0012d46d: sbb al, 0xb8; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012d1e0: sbb al, 0xb8; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x0019272b: sbb al, 0xbb; jmp ebx; 
0x0018e084: sbb al, 0xc1; clc; pop ds; ret; 
0x0011f6cd: sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x00134b09: sbb al, 0xc6; add ah, byte ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x00134af5: sbb al, 0xc6; add cl, byte ptr [edx]; pop ebx; pop esi; pop edi; ret; 
0x000c720c: sbb al, 0xd1; idiv bh; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x000e7b83: sbb al, 0xdd; add al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0005ac15: sbb al, 0xe8; aad 0xb4; add al, byte ptr [eax]; add esp, 0x1c; ret; 
0x0013c1bb: sbb al, 0xe8; aas; imul edi, eax, -1; add esp, 0x18; pop ebx; ret; 
0x000c5568: sbb al, 0xe8; adc al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000aaab8: sbb al, 0xe8; and al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ce51a: sbb al, 0xe8; and byte ptr [eax], cl; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cadfa: sbb al, 0xe8; and byte ptr [edi], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00025f8b: sbb al, 0xe8; call ecx; 
0x000ac740: sbb al, 0xe8; cli; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x000ac7ce: sbb al, 0xe8; cmp al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x00127af2: sbb al, 0xe8; cmp byte ptr [ebx + esi*8 + 0x10c483ff], bl; add esp, 0xc; ret; 
0x0003ec31: sbb al, 0xe8; cmp dword ptr [ecx], eax; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122013: sbb al, 0xe8; cmpsd dword ptr [esi], dword ptr es:[edi]; push esp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00114783: sbb al, 0xe8; daa; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000470fc: sbb al, 0xe8; dec byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0013b714: sbb al, 0xe8; div byte ptr [eax + edi*8 - 1]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0009cd2c: sbb al, 0xe8; fidiv word ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x0009d55f: sbb al, 0xe8; imul ecx, edi, -1; inc dword ptr [ebx + 0x468b10c4]; add al, 0x89; ret 0xe283; 
0x000ac77a: sbb al, 0xe8; inc eax; imul eax, dword ptr [ecx], 0; add esp, 0x18; pop ebx; ret; 
0x00062114: sbb al, 0xe8; inc esi; inc ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00122048: sbb al, 0xe8; jb 0x1220a0; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x00066584: sbb al, 0xe8; jbe 0x66588; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00072c24: sbb al, 0xe8; jbe 0x72c28; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00127aa0: sbb al, 0xe8; mov bl, byte ptr [ebx + esi*8 + 0x1cc483ff]; ret; 
0x0013bf78: sbb al, 0xe8; mov byte ptr [0x83fff8ae], al; les ebx, ptr [eax]; pop ebx; ret; 
0x000c7b0c: sbb al, 0xe8; mov cs, word ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ac7fe: sbb al, 0xe8; or al, 0x40; add byte ptr [eax], al; add esp, 0x18; pop ebx; ret; 
0x000eaf20: sbb al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00115092: sbb al, 0xe8; or byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ad73f: sbb al, 0xe8; or eax, dword ptr [eax]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000cadbc: sbb al, 0xe8; pop esi; pop es; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00121fa4: sbb al, 0xe8; push ss; push ebp; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000ac82a: sbb al, 0xe8; pushal; add dword ptr gs:[eax], eax; add esp, 0x18; pop ebx; ret; 
0x0003e2ae: sbb al, 0xe8; pushfd; test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x00127a57: sbb al, 0xe8; rcr dword ptr [ebx + esi*8 + 0x10c483ff], cl; add esp, 0xc; ret; 
0x001368c8: sbb al, 0xe8; ret 0xeec8; 
0x000244ba: sbb al, 0xe8; ret 0xffff; 
0x0009e45c: sbb al, 0xe8; sahf; idiv edi; inc dword ptr [ebx - 0x3fe6fe08]; add esp, 0x1c; ret; 
0x0009f5f0: sbb al, 0xe8; sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0007987d: sbb al, 0xe8; std; aad 4; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x000ac6de: sbb al, 0xe8; sub al, 0x65; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x0009b662: sbb al, 0xe8; sub byte ptr [ebx - 8], bh; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x0008dabd: sbb al, 0xe8; sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x00190b26: sbb al, 0xe8; xchg esp, eax; cmp eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x1c; ret; 
0x0011f276: sbb al, 0xe8; xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001ac9df: sbb al, 0xe9; ret; 
0x000959f0: sbb al, 0xe9; stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00097166: sbb al, 0xe9; sub eax, 0x8dfffffe; je 0x97195; add bh, dh; ret 0; 
0x000fd131: sbb al, 0xeb; and dword ptr [ebp + 0xf002674], ecx; xchg esp, eax; ret; 
0x0016ca90: sbb al, 0xeb; cld; call dword ptr [eax - 0x73]; 
0x000aa89c: sbb al, 0xf0; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x00104b8e: sbb al, 0xf6; ret 0xf08; 
0x0010b55a: sbb al, 0xf9; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x001341d5: sbb al, 0xf; inc esp; ret 0x4589; 
0x000fb057: sbb al, 0xf; inc esp; ret 0x4c89; 
0x0014b1c8: sbb al, 0xf; mov bh, 0x50; add ah, byte ptr [esi - 0x3f]; ret 0xf08; 
0x0012cf1e: sbb al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x0017057b: sbb al, 0xf; mov dh, 0xc0; ret; 
0x000d9c65: sbb al, 0xf; test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000ba00d: sbb al, 0xf; test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000bb6b0: sbb al, 0xf; test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0014eb6d: sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x00053e1d: sbb al, 0xf; xchg edx, eax; ret 0x1e89; 
0x00053d1d: sbb al, 0xf; xchg edx, eax; ret 0xe89; 
0x000e8d90: sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x001a599d: sbb al, 0xfe; inc dword ptr [ecx + 0x34a04c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015216c: sbb al, 0xff; aaa; push eax; push dword ptr [esp + 0x24]; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0019598e: sbb al, 0xff; inc dword ptr [ecx + 0x43ecfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00157cb9: sbb al, 0xff; je 0x157ce1; xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x000db29c: sbb al, 0xff; je 0xdb2c4; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000db7b3: sbb al, 0xff; je 0xdb7db; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000dbdc6: sbb al, 0xff; je 0xdbdee; sbb al, 0x8b; inc esp; and al, 0x64; call eax; 
0x000ef885: sbb al, 0xff; je 0xef8ad; sbb al, 0x6a; add eax, ebp; das; ret 1; 
0x0008a6c2: sbb al, 0xff; jo 0x8a6fe; call 0x11f090; add esp, 0x18; pop ebx; ret; 
0x001733b7: sbb al, 0xff; mov al, 0x90; add dword ptr [eax], eax; add byte ptr [eax + 0x52], dl; call dword ptr [ecx + 0xc]; 
0x00038141: sbb al, 0xff; xor al, ch; ja 0x380ea; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x00070f89: sbb al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x00034bcf: sbb al, 1; add byte ptr [eax], al; add eax, dword ptr gs:[0]; ret; 
0x001a9490: sbb al, 1; add byte ptr [eax], al; lea eax, [eax + 7]; pop edi; ret; 
0x0012c8a9: sbb al, 1; add byte ptr [eax], al; mov ebx, 3; mov ecx, 0x7fffffff; mov esi, 5; call dword ptr gs:[0x10]; 
0x000c38c7: sbb al, 1; add byte ptr [eax], al; ret; 
0x001899c1: sbb al, 1; ret 0x4689; 
0x00091dd6: sbb al, 2; nop; xor eax, eax; pop ebx; pop edi; ret; 
0x000b3c60: sbb al, 3; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x00197deb: sbb al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000342d4: sbb al, 8; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x001150f2: sbb al, al; add byte ptr [eax], al; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0004d01b: sbb al, bl; mov byte ptr [eax], dh; ret 0xfff9; 
0x0002a492: sbb al, byte ptr [eax + ecx*4]; inc esp; sbb eax, 0x83028b00; ret; 
0x0004d982: sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00128af9: sbb al, byte ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00061065: sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x0006122f: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x317f01fa], al; add esp, 0x18; pop ebx; ret; 
0x0007db68: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x00024b75: sbb al, byte ptr [eax]; add byte ptr [ebx + 0x5e], bl; ret; 
0x0007dc1d: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x001a1b7e: sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00058de1: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; call dword ptr [eax - 1]; 
0x0005838b: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x363763], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax - 1]; 
0x000d7000: sbb al, byte ptr [eax]; add byte ptr [ebx - 0x364b63], cl; dec dword ptr [ecx - 0x361f73]; call dword ptr [eax + 0x52]; 
0x0007db7b: sbb al, byte ptr [eax]; add byte ptr [ecx], al; add esp, 4; pop ebx; pop esi; ret; 
0x00094b5c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008d67c: sbb al, byte ptr [eax]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0008f39d: sbb al, byte ptr [eax]; mov eax, dword ptr [esp + 4]; cmp dword ptr [eax], 1; je 0x8f3b0; ret; 
0x00095d5c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; lea eax, [eax + 0x2a0]; mov dword ptr [eax], edx; ret; 
0x0008f31c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008f33c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f35c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f37c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x00095d3c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d1c: sbb al, byte ptr [eax]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x000c4d02: sbb al, byte ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x000e7dd1: sbb al, byte ptr [ebx + 0x548d08ec]; and al, 0xc; push edx; push ebx; call eax; 
0x00125efc: sbb al, byte ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x0012ccce: sbb al, byte ptr [ebx + eax*4]; ret; 
0x00086469: sbb al, byte ptr [ecx + 0xa0c4]; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x001946b5: sbb al, byte ptr [ecx]; retf 0xc801; call 0x1875fd; add ebx, 0x451a1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001926b5: sbb al, byte ptr [ecx]; retf 0xc801; call 0x1875fd; add ebx, 0x46f21; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009f5f2: sbb al, byte ptr [esi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000b3962: sbb al, byte ptr [esi]; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x001767da: sbb al, ch; sbb eax, 0x8100010e; ret; 
0x000a87da: sbb al, ch; sbb eax, 0x81000dee; ret; 
0x000afeca: sbb al, ch; sub eax, 0x81000d77; ret; 
0x00112d39: sbb bh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x00195d9c: sbb bh, bh; inc dword ptr [ecx + 0x43ac1c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195d7e: sbb bh, bh; inc dword ptr [ecx + 0x43adfc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195b95: sbb bh, bh; inc dword ptr [ecx + 0x43cc8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0010d6fd: sbb bh, bh; jbe 0x10d709; call dword ptr [eax + 0xc]; 
0x0010e51e: sbb bh, bh; je 0x10e546; sbb byte ptr [edx - 1], ch; call 0x10e630; add esp, 0x1c; ret; 
0x0011e31d: sbb bh, bh; je 0x11e345; and byte ptr [ebx - 0x72cbdbbc], cl; sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0011ec7f: sbb bh, bh; je 0x11eca7; sbb byte ptr [edx - 0x64], ch; call 0x114c30; add esp, 0x1c; ret; 
0x0011f15f: sbb bh, bh; je 0x11f187; sbb byte ptr [edx - 0x64], ch; call 0x115710; add esp, 0x1c; ret; 
0x001200dc: sbb bh, bh; je 0x120104; sbb byte ptr [edx - 0x64], ch; call 0x115710; add esp, 0x1c; ret; 
0x00122f24: sbb bh, bh; je 0x122f4c; sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x0013a917: sbb bh, bh; je 0x13a93f; sub al, 0xe8; call dword ptr [esi]; 
0x0008daab: sbb bh, bh; je 0x8dad3; sbb al, 0x85; ror byte ptr [edi], 0x48; ret 0xff50; 
0x0009cd28: sbb bh, bh; je 0x9cd50; sbb al, 0xe8; fidiv word ptr [edi - 1]; jmp dword ptr [esi - 0x70]; 
0x000c4255: sbb bh, bh; je 0xc427d; sbb byte ptr [edx], ch; call 0xc47a0; add esp, 0x1c; ret; 
0x000dad80: sbb bh, bh; jo 0xdad88; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x000dadcd: sbb bh, bh; jo 0xdadd5; push dword ptr [eax]; call 0xdd5c0; add esp, 0x1c; ret; 
0x0018493e: sbb bh, bh; nop; jl 0x184946; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001a5905: sbb bh, byte ptr [eax + 1]; jg 0x1a5910; neg eax; ret; 
0x000c6cc5: sbb bh, byte ptr [ecx]; ret; 
0x000931d0: sbb bh, byte ptr [edx + 1]; xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x00121445: sbb bl, byte ptr [ebx + 0x5e]; pop edi; ret; 
0x000bba6c: sbb bl, byte ptr [edi + 0x5e]; pop ebx; ret; 
0x0013f2cd: sbb bl, ch; ret 0x5755; 
0x0013f9c7: sbb byte ptr [0xffffff], ah; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000a002a: sbb byte ptr [eax + 0x103], bh; mov ebx, esi; mov ecx, edi; call dword ptr gs:[0x10]; 
0x000e7fe8: sbb byte ptr [eax + 0x108], bh; mov dword ptr [esp + 0x14], edi; call dword ptr gs:[0x10]; 
0x0011f305: sbb byte ptr [eax + 0x129], bh; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x0003f34e: sbb byte ptr [eax + 0x50], dl; call 0x3f3b0; add esp, 0x1c; ret; 
0x00040e35: sbb byte ptr [eax + 0x50], dl; call 0x40920; add esp, 0x10; add esp, 0xc; ret; 
0x00040b65: sbb byte ptr [eax + 0x50], dl; call 0x40ea0; add esp, 0x10; add esp, 0xc; ret; 
0x00079c04: sbb byte ptr [eax + 0x57], dl; push ebx; mov eax, dword ptr [esp + 0x14]; call eax; 
0x00034baf: sbb byte ptr [eax + 0x65000000], 3; add eax, 0; ret; 
0x001301a5: sbb byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00186d79: sbb byte ptr [eax + 0x67], 0xf9; call dword ptr [eax - 0x18]; 
0x00130949: sbb byte ptr [eax + 0x75], bh; call dword ptr gs:[0x10]; 
0x00122a6b: sbb byte ptr [eax + 0xa], bh; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x000960c8: sbb byte ptr [eax + 0xf0], bh; mov ecx, 0x87; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x001a5c77: sbb byte ptr [eax + 1], bh; ja 0x1a5c81; neg eax; ret; 
0x0013dc4a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; 
0x0013dc4a: sbb byte ptr [eax + 6], bh; call dword ptr gs:[0x10]; pop ebx; ret; 
0x00083ae4: sbb byte ptr [eax + eax], al; add byte ptr [edx], ch; push edx; push eax; push esi; call dword ptr [ebx + 0x40]; 
0x001263aa: sbb byte ptr [eax + eax], cl; add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x0013aed4: sbb byte ptr [eax + ebx*4 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa2574]; cmovne eax, edx; pop ebx; ret; 
0x00087fd2: sbb byte ptr [eax - 0x18], dl; xchg dword ptr [ebx], edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00093209: sbb byte ptr [eax - 0x7c], 0xf9; call dword ptr [eax - 0x18]; 
0x0016e878: sbb byte ptr [eax - 0x7cffffdd], 0xec; or byte ptr [edx], ch; push ebx; call dword ptr [eax + 0x14]; 
0x0004a1e3: sbb byte ptr [eax - 7], bh; call dword ptr [eax - 0x18]; 
0x000a08ef: sbb byte ptr [eax], 0x3c; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [eax + 0x3c14], 0; ret; 
0x0013c5b7: sbb byte ptr [eax], 0xaa; stc; call dword ptr [eax - 0x18]; 
0x0016d44b: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x438b0cec], al; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00169875: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x000e91b6: sbb byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013106a: sbb byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00139897: sbb byte ptr [eax], al; add byte ptr [eax], al; call eax; 
0x00025023: sbb byte ptr [eax], al; add byte ptr [eax], al; jmp eax; 
0x0013d0aa: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d187: sbb byte ptr [eax], al; add byte ptr [eax], al; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1ee: sbb byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x0019050b: sbb byte ptr [eax], al; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; mov edi, dword ptr [esp + 0x1c]; call dword ptr gs:[0x10]; 
0x000250b0: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; jmp eax; 
0x00154bbf: sbb byte ptr [eax], al; add byte ptr [eax], al; pop edi; pop ebp; ret; 
0x00154805: sbb byte ptr [eax], al; add byte ptr [eax], al; push eax; call edx; 
0x001398c6: sbb byte ptr [eax], al; add byte ptr [eax], al; push esi; call eax; 
0x00024a9b: sbb byte ptr [eax], al; add byte ptr [eax], al; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x0003f5f5: sbb byte ptr [eax], al; add byte ptr [eax], al; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x000313d1: sbb byte ptr [eax], al; add byte ptr [ebp + 0x5b002674], cl; ret; 
0x000409bb: sbb byte ptr [eax], al; add dh, al; add al, 8; add byte ptr [ebx + 0x5e], bl; ret; 
0x00127de4: sbb byte ptr [eax], dl; add byte ptr [eax], al; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x00061644: sbb byte ptr [eax], dl; add byte ptr [eax], al; pop ebx; ret; 
0x0013b5bd: sbb byte ptr [eax], dl; add byte ptr [ebx - 0x7f72e714], al; lodsb al, byte ptr [esi]; push edi; stc; call dword ptr [eax - 0x18]; 
0x000db94e: sbb byte ptr [ebp + 0x1042484], cl; add byte ptr [eax], al; mov dword ptr [esp + 0x30], eax; push eax; mov eax, dword ptr [esp + 0x64]; call eax; 
0x0005b57c: sbb byte ptr [ebp + 0x23], dh; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x001441eb: sbb byte ptr [ebp + 0x24448bc0], al; adc byte ptr [edi], cl; xchg ebp, eax; ret 0xc085; 
0x00125c70: sbb byte ptr [ebp + 0x461080], cl; add byte ptr [eax - 0x18], dl; adc eax, dword ptr [ecx]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001498ae: sbb byte ptr [ebp + 0x5b0d75c0], al; pop esi; pop edi; ret; 
0x000a8c22: sbb byte ptr [ebp + 0x5b1075db], al; pop esi; pop edi; ret; 
0x000bba47: sbb byte ptr [ebp + 0x5e5f1947], cl; pop ebx; ret; 
0x000bba69: sbb byte ptr [ebp + 0x5e5f1a47], cl; pop ebx; ret; 
0x000bbab7: sbb byte ptr [ebp + 0x5e5f1c47], cl; pop ebx; ret; 
0x0015242d: sbb byte ptr [ebp + 0x6a], dl; add byte ptr [edi + 0x53], dl; call edx; 
0x00138510: sbb byte ptr [ebp + ecx - 0x7d], dh; les ecx, ptr [eax]; pop ebx; ret; 
0x00036286: sbb byte ptr [ebp - 0x18], dl; ret; 
0x0003cc53: sbb byte ptr [ebp - 0x2003537d], cl; dec dword ptr [edi]; inc esp; ret 0xe3e9; 
0x0014847b: sbb byte ptr [ebp - 0x47378a25], al; add dword ptr [eax], eax; add byte ptr [eax], al; pop ebx; ret; 
0x0011446c: sbb byte ptr [ebp - 0x65d5b7e], cl; call dword ptr [eax - 0x73]; 
0x0009c4f2: sbb byte ptr [ebp - 0x677b780], cl; call dword ptr [eax - 0x18]; 
0x000902f2: sbb byte ptr [ebp - 0x67c3b80], cl; call dword ptr [eax - 0x18]; 
0x000923a0: sbb byte ptr [ebp - 0x67c3b80], cl; call dword ptr [eax - 0x18]; ret; 
0x000650cd: sbb byte ptr [ebp - 0x67f1fb5], cl; pop edx; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00062b7b: sbb byte ptr [ebp - 0x6823f7a], cl; call dword ptr [eax - 0x73]; 
0x0007290e: sbb byte ptr [ebp - 0x6826b80], cl; call dword ptr [eax - 0x18]; 
0x0004d522: sbb byte ptr [ebp - 0x6879f79], cl; call dword ptr [eax - 0x73]; 
0x0004a1cd: sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x0004a405: sbb byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x0003defe: sbb byte ptr [ebp - 0x68a3b80], cl; call dword ptr [eax - 0x18]; 
0x000250be: sbb byte ptr [ebp - 0x6908380], cl; call dword ptr [eax - 0x18]; 
0x0017fef4: sbb byte ptr [ebp - 0x6996c80], cl; call dword ptr [eax - 0x18]; 
0x0016bdf0: sbb byte ptr [ebp - 0x69c5f80], cl; call dword ptr [eax - 0x18]; 
0x0016bdf0: sbb byte ptr [ebp - 0x69c5f80], cl; call dword ptr [eax - 0x18]; ret; 
0x0016b870: sbb byte ptr [ebp - 0x69c6b80], cl; call dword ptr [eax - 0x18]; 
0x0016b5a0: sbb byte ptr [ebp - 0x69c7880], cl; call dword ptr [eax - 0x18]; 
0x0016b190: sbb byte ptr [ebp - 0x69c8680], cl; call dword ptr [eax - 0x18]; 
0x0016ab10: sbb byte ptr [ebp - 0x69c9280], cl; call dword ptr [eax - 0x18]; 
0x0016a770: sbb byte ptr [ebp - 0x69ca180], cl; call dword ptr [eax - 0x18]; 
0x0016a0f0: sbb byte ptr [ebp - 0x69caf80], cl; call dword ptr [eax - 0x18]; 
0x0016a0f0: sbb byte ptr [ebp - 0x69caf80], cl; call dword ptr [eax - 0x18]; ret; 
0x00167cd0: sbb byte ptr [ebp - 0x69d6180], cl; call dword ptr [eax - 0x18]; 
0x0015d8db: sbb byte ptr [ebp - 0x6a0237b], cl; call dword ptr [eax - 1]; 
0x0015cc3c: sbb byte ptr [ebp - 0x6a03480], cl; call dword ptr [eax - 1]; 
0x0015cd0b: sbb byte ptr [ebp - 0x6a04580], cl; call dword ptr [eax - 1]; 
0x0015d277: sbb byte ptr [ebp - 0x6a0567a], cl; call dword ptr [eax - 1]; 
0x0013b5c2: sbb byte ptr [ebp - 0x6a85380], cl; call dword ptr [eax - 0x18]; 
0x0013a0b2: sbb byte ptr [ebp - 0x6a88480], cl; call dword ptr [eax - 0x18]; 
0x0019006b: sbb byte ptr [ebp - 0x6b5c080], cl; call dword ptr [eax + 0x53]; 
0x00112d37: sbb byte ptr [ebp - 0x6b62080], cl; call dword ptr [eax - 0x18]; 
0x0011236e: sbb byte ptr [ebp - 0x6b6c280], cl; call dword ptr [eax - 0x18]; 
0x000f0a5a: sbb byte ptr [ebp - 0x6b90d80], cl; call dword ptr [eax - 0x18]; 
0x0003feba: sbb byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0004007a: sbb byte ptr [ebp - 0x6d3237b], cl; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00080cba: sbb byte ptr [ebp - 0x6ff7d], cl; jmp dword ptr [ebp - 0x75]; 
0x0005340e: sbb byte ptr [ebp - 0x75], ah; xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0003a9f3: sbb byte ptr [ebp - 0x769a8b40], al; ret 0xa4eb; 
0x000c4245: sbb byte ptr [ebp - 0x76d7240], al; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x0009d487: sbb byte ptr [ebp - 0x76dbdbb4], cl; ret 0x4c89; 
0x0012fe7f: sbb byte ptr [ebp - 0x76efdbbc], cl; inc esp; and al, 0x24; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001363b4: sbb byte ptr [ebp - 0x7c088a40], al; ret 0x8b18; 
0x00148443: sbb byte ptr [ebp - 0x7cc78b25], al; rol byte ptr [ecx], 1; ret; 
0x000895cd: sbb byte ptr [ebp - 0x7cf18a25], al; les ecx, ptr [eax]; pop ebx; ret; 
0x00048b96: sbb byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6d06680]; call dword ptr [ebx + 0x6a]; 
0x0004889b: sbb byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x0017a5d7: sbb byte ptr [ebp - 0x95377], cl; dec dword ptr [ecx + 0x48891450]; add al, 0x5b; ret; 
0x00040940: sbb byte ptr [ebx + 0x10890253], cl; xor eax, eax; add esp, 8; pop ebx; ret; 
0x0005b11a: sbb byte ptr [ebx + 0x16c80], cl; add bh, bh; xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x0012d5a1: sbb byte ptr [ebx + 0x1974fffe], al; mov eax, 0x17c; call dword ptr gs:[0x10]; 
0x0010bec3: sbb byte ptr [ebx + 0x3910245c], cl; into; cmovbe ecx, esi; call dword ptr gs:[0x10]; 
0x001ae77d: sbb byte ptr [ebx + 0x39142444], cl; ret 0x840f; 
0x00030097: sbb byte ptr [ebx + 0x418901e8], al; add al, 0x83; les ecx, ptr [eax]; pop ebx; ret; 
0x0014f260: sbb byte ptr [ebx + 0x478910c4], al; adc al, 0x89; ret 0xc985; 
0x00092da6: sbb byte ptr [ebx + 0x488b685e], cl; add al, 0x8b; adc byte ptr [eax + 0xf1], bh; call dword ptr gs:[0x10]; 
0x000e84cb: sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00040904: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b31: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040e01: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e84: sbb byte ptr [ebx + 0x548b10c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x000c14ba: sbb byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000be034: sbb byte ptr [ebx + 0x5e082444], cl; ret; 
0x0013f1fc: sbb byte ptr [ebx + 0x5e5b04c4], al; pop edi; pop ebp; ret; 
0x000dfde6: sbb byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x000e9824: sbb byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0016d31e: sbb byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x00028780: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x00029eba: sbb byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0011f1b5: sbb byte ptr [ebx + 0x5e5b74c4], al; ret; 
0x0009bdfa: sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000a9f7a: sbb byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0003c221: sbb byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00034c57: sbb byte ptr [ebx + 0x5e], bl; ret; 
0x001877e2: sbb byte ptr [ebx + 0x74ff04ec], al; and al, 0x20; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00124291: sbb byte ptr [ebx + eax], 0; mov edx, dword ptr [esp + 8]; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x00124319: sbb byte ptr [ebx + eax], 0; pop ebx; ret; 
0x001537c0: sbb byte ptr [ebx + esi*4], 0xf9; call dword ptr [eax - 0x73]; 
0x0013743c: sbb byte ptr [ebx - 0x137c5383], cl; add al, 0x6a; add eax, 0x55fc978d; stc; call dword ptr [edx + 0x50]; 
0x00058478: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x363763]; call dword ptr [eax + 0x6a]; 
0x000d70e8: sbb byte ptr [ebx - 0x1f3efb14], al; add cl, byte ptr [ebx - 0x364b63]; call dword ptr [eax + 0x6a]; 
0x0004c47c: sbb byte ptr [ebx - 0x27efdbac], cl; mov byte ptr [eax], dh; ret 0xfff9; 
0x0016e5cb: sbb byte ptr [ebx - 0x3f7ae3c0], cl; je 0x16e5dc; sub esp, 0xc; push esi; call eax; 
0x0003c656: sbb byte ptr [ebx - 0x3fcef73c], al; pop ebx; ret; 
0x0012c6e6: sbb byte ptr [ebx - 0x47d7db84], cl; js 0x12c6ee; add byte ptr [eax], al; mov dword ptr [ecx], ebx; int 0x80; 
0x0012d469: sbb byte ptr [ebx - 0x47e3dbac], cl; mov dword ptr [0x8b000000], eax; pop esp; and al, 0x14; call dword ptr gs:[0x10]; 
0x0012d1dc: sbb byte ptr [ebx - 0x47e3dbac], cl; sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000fc9fc: sbb byte ptr [ebx - 0x49f0f314], al; ret; 
0x00061b98: sbb byte ptr [ebx - 0x49f0fe10], al; ror byte ptr [ebp + 0x32b20384], 0xf9; call dword ptr [eax + 0x6a]; 
0x00075801: sbb byte ptr [ebx - 0x4fb7b], cl; inc dword ptr [ecx]; ret; 
0x00074599: sbb byte ptr [ebx - 0x5037b], cl; inc dword ptr [ecx]; ret; 
0x000eaf7b: sbb byte ptr [ebx - 0x74e3dbac], cl; pop esp; and al, 0x14; mov esi, dword ptr [esp + 0x20]; mov edi, dword ptr [esp + 0x24]; call dword ptr gs:[0x10]; 
0x0011ff65: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x131; call dword ptr gs:[0x10]; 
0x0012e975: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x1a8; call dword ptr gs:[0x10]; 
0x0012ea55: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x83; call dword ptr gs:[0x10]; 
0x00125b65: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe5; call dword ptr gs:[0x10]; 
0x00127525: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe6; call dword ptr gs:[0x10]; 
0x00123a85: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xe7; call dword ptr gs:[0x10]; 
0x0012e5b5: sbb byte ptr [ebx - 0x74ebdbac], cl; dec esp; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; mov eax, 0xff; call dword ptr gs:[0x10]; 
0x0012945e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x101; call dword ptr gs:[0x10]; 
0x00114e5e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12a; call dword ptr gs:[0x10]; 
0x0011ed1e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x12f; call dword ptr gs:[0x10]; 
0x0012eb4e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x155; call dword ptr gs:[0x10]; 
0x0012e7ce: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x15; call dword ptr gs:[0x10]; 
0x0012e84e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ad; call dword ptr gs:[0x10]; 
0x0012e5ee: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1af; call dword ptr gs:[0x10]; 
0x0012e9ae: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1b8; call dword ptr gs:[0x10]; 
0x0012e80e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x1ba; call dword ptr gs:[0x10]; 
0x0012e6de: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x80; call dword ptr gs:[0x10]; 
0x0012ea1e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xa7; call dword ptr gs:[0x10]; 
0x0012d67e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xac; call dword ptr gs:[0x10]; 
0x00129d2e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe2; call dword ptr gs:[0x10]; 
0x001276fe: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe3; call dword ptr gs:[0x10]; 
0x00123b1e: sbb byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0xe4; call dword ptr gs:[0x10]; 
0x00157b88: sbb byte ptr [ebx - 0x76e3dbbc], cl; sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x00166e08: sbb byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000e3aeb: sbb byte ptr [ebx - 0x78f0f902], al; call dword ptr [edx]; 
0x00029204: sbb byte ptr [ebx - 0x7cfbdba4], cl; rol byte ptr [ecx], 0x83; ret 0x8901; 
0x000659e3: sbb byte ptr [ebx], al; cmp al, 0x82; mov eax, edi; mov edi, ecx; jmp eax; 
0x00031d3a: sbb byte ptr [ebx], al; inc ecx; adc al, 0x39; ret 0x4d0f; 
0x00066159: sbb byte ptr [ebx], al; mov word ptr [edx - 0x74014], es; jmp ecx; 
0x00065259: sbb byte ptr [ebx], al; mov word ptr [esi - 0x73f14], es; jmp ecx; 
0x00043190: sbb byte ptr [ecx + 0x10b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0016f81d: sbb byte ptr [ecx + 0x1b81058], cl; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x000430fe: sbb byte ptr [ecx + 0x20b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0012c922: sbb byte ptr [ecx + 0x244c8bcb], cl; adc byte ptr [eax + 0x1b3], bh; int 0x80; 
0x0003e054: sbb byte ptr [ecx + 0x244c8bfd], cl; adc al, 0xb8; xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x000ad1f1: sbb byte ptr [ecx + 0x245489f0], cl; adc byte ptr [ecx], ch; fdivr dword ptr [ecx]; fmul dword ptr [edi]; inc edx; ret; 
0x0011f6c7: sbb byte ptr [ecx + 0x247c8bca], cl; sbb al, 0xc1; cli; pop ds; call dword ptr gs:[0x10]; 
0x0002a5ca: sbb byte ptr [ecx + 0x29008bf2], cl; ret 0xfa83; 
0x0013439c: sbb byte ptr [ecx + 0x29c729da], cl; ret 0x7c01; 
0x000ac673: sbb byte ptr [ecx + 0x3428d02], cl; pop ebx; pop esi; ret; 
0x000a727c: sbb byte ptr [ecx + 0x3892073], cl; push eax; call ecx; 
0x00043162: sbb byte ptr [ecx + 0x40b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0008e6ed: sbb byte ptr [ecx + 0x4c48310], cl; pop ebx; pop esi; ret; 
0x0008eac1: sbb byte ptr [ecx + 0x57], dl; push eax; push edx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x000ac5b3: sbb byte ptr [ecx + 0x5bd08902], cl; pop esi; ret; 
0x00191ba3: sbb byte ptr [ecx + 0x85c8b1a], cl; cld; mov dword ptr [edx + ecx - 4], ebx; mov eax, edx; pop ebx; ret; 
0x000430d0: sbb byte ptr [ecx + 0x8b8c2], cl; add byte ptr [eax], al; pop ebx; sub eax, edx; ret; 
0x0008937e: sbb byte ptr [ecx + 0x9e82414], cl; sahf; stc; jmp dword ptr [ebp - 0x75]; 
0x000ac273: sbb byte ptr [ecx + ebx - 0x7d], dh; ret 0xf01; 
0x001ae857: sbb byte ptr [ecx + edi], al; ret 0x850f; 
0x000c720b: sbb byte ptr [ecx + edx*8], 0xf6; push esi; inc ecx; jnp 0xc7218; cmove eax, edx; ret; 
0x0008b86f: sbb byte ptr [ecx - 0x3fceefbd], cl; add esp, 4; pop ebx; pop esi; ret; 
0x00123a2f: sbb byte ptr [ecx - 0x723ca428], cl; and byte ptr [esp], 0xf9; call dword ptr [eax - 0x73]; 
0x001157fe: sbb byte ptr [ecx - 0x74540c10], cl; test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x000ad538: sbb byte ptr [ecx - 0x76287608], cl; ret 0x3990; 
0x000e84c4: sbb byte ptr [ecx - 0x76efdbb4], cl; dec esi; sbb byte ptr [ebx + 0x4e891c4f], cl; sbb al, 0x39; ret 0x8d0f; 
0x00038c8b: sbb byte ptr [ecx - 0x7c327611], cl; in al, dx; or al, 0x83; ret; 
0x00040ed3: sbb byte ptr [ecx - 0x7c3fcefe], cl; les ecx, ptr [eax]; pop ebx; ret; 
0x0016a2f5: sbb byte ptr [ecx - 0x7cefdbbc], cl; in al, dx; or byte ptr [ebp - 0x69d877d], cl; call dword ptr [eax + 0x51]; 
0x0014f1d9: sbb byte ptr [ecx - 0x7cff6abc], cl; ret 0x3b01; 
0x0017bde3: sbb byte ptr [ecx - 0x9f7b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00092d71: sbb byte ptr [ecx], 0xe5; call dword ptr [eax - 0x73]; 
0x001979ca: sbb byte ptr [ecx], ah; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00148526: sbb byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x0010943b: sbb byte ptr [ecx], al; ret 0x44c7; 
0x001094d4: sbb byte ptr [ecx], al; ret 0x7c80; 
0x001836a3: sbb byte ptr [ecx], al; ret 0xcdb8; 
0x0004ed9f: sbb byte ptr [ecx], al; ret 0xd389; 
0x001a3eb7: sbb byte ptr [ecx], al; retf 0xc801; call 0x1875fd; add ebx, 0x363df; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0002b7ca: sbb byte ptr [ecx], al; xor dword ptr [ecx], edi; ret; 
0x000d9c47: sbb byte ptr [ecx], bh; dec edi; sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x00094582: sbb byte ptr [ecx], bh; iretd; mov ebx, dword ptr [eax + 0x68]; cmovbe ecx, edi; mov eax, 0xf2; call dword ptr gs:[0x10]; 
0x001056f8: sbb byte ptr [ecx], bh; ret 0x4c0f; 
0x00051bdd: sbb byte ptr [ecx], bh; ret 0x6674; 
0x000cc684: sbb byte ptr [ecx], bh; ret 0x840f; 
0x0002929f: sbb byte ptr [ecx], bh; ret; 
0x00122f28: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; dec edi; ret 0x8d50; 
0x001324f2: sbb byte ptr [ecx], bh; ror byte ptr [edi], 1; inc ebx; shr byte ptr [ecx], 1; ret 0xe801; 
0x00128ea8: sbb byte ptr [ecx], bh; sar bh, 1; je 0x128ed2; sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000da067: sbb byte ptr [ecx], bh; sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x0013406c: sbb byte ptr [ecx], ch; ret 0xca39; 
0x001302be: sbb byte ptr [ecx], cl; ror byte ptr [ebx + 0x656c2454], 1; sub edx, dword ptr [0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x000ab4ab: sbb byte ptr [ecx], dh; rol byte ptr [ecx], cl; ret; 
0x000ab76b: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0x13c244c], cl; ret; 
0x00093980: sbb byte ptr [ecx], dh; ror byte ptr [ecx + 0xafb8c7], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0003a059: sbb byte ptr [ecx], dh; ror byte ptr [edi], 1; mov dh, 0x11; test dl, dl; jne 0x3a040; ret; 
0x000aae97: sbb byte ptr [ecx], dh; shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x000ba367: sbb byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000daea4: sbb byte ptr [edi], ah; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00095d36: sbb byte ptr [edi], cl; add byte ptr [0x1a70db], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d16: sbb byte ptr [edi], cl; add byte ptr [0x1a70fb], al; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00128eae: sbb byte ptr [edi], cl; dec edi; ret 0x8d50; 
0x000274d4: sbb byte ptr [edi], cl; mov bh, 0x81; pop eax; jo 0x274d4; jmp dword ptr [esi - 0x77]; 
0x0013f984: sbb byte ptr [edi], cl; mov bh, 0xc0; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x000ac323: sbb byte ptr [edi], cl; mov esi, 0xfc53906; xchg esp, eax; ret 0xc739; 
0x000e1b7c: sbb byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x000a9653: sbb byte ptr [edi], cl; test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x000d9c4a: sbb byte ptr [edi], cl; test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x001af46e: sbb byte ptr [edi], cl; xchg ebp, eax; ret 0xc208; 
0x00116605: sbb byte ptr [edi], cl; xchg ebp, eax; ret; 
0x0017c835: sbb byte ptr [edi], cl; xchg esp, eax; ret; 
0x00115458: sbb byte ptr [edx + 0x50], dl; call 0x115710; add esp, 0x10; add esp, 0xc; ret; 
0x00145cdb: sbb byte ptr [edx + 0x5a], 0xf9; call dword ptr [eax + 0x53]; 
0x0016b796: sbb byte ptr [edx + 0xa], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0005adda: sbb byte ptr [edx + 0xa], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x7d220; add esp, 0x1c; ret; 
0x00188bfe: sbb byte ptr [edx + 0xb], al; add byte ptr [ebx - 0x77], dl; ret; 
0x00167886: sbb byte ptr [edx + 1], ch; call 0x153f30; add esp, 0x1c; ret; 
0x00168cb6: sbb byte ptr [edx + 3], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016a016: sbb byte ptr [edx + 4], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016a696: sbb byte ptr [edx + 5], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016aa36: sbb byte ptr [edx + 6], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016bd16: sbb byte ptr [edx + 7], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016b0b6: sbb byte ptr [edx + 8], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0016b4c6: sbb byte ptr [edx + 9], ch; call 0x153f30; add esp, 0x1c; ret; 
0x000c552b: sbb byte ptr [edx + eax*8 - 0x17], 0xff; test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00159df3: sbb byte ptr [edx + ebp*8 - 0x7d], dh; ret 0x8b18; 
0x000a9d67: sbb byte ptr [edx + ebx], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x57; call 0xc24ead77; ret; 
0x000a92e7: sbb byte ptr [edx + ecx*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x0011ec83: sbb byte ptr [edx - 0x64], ch; call 0x114c30; add esp, 0x1c; ret; 
0x0011f13f: sbb byte ptr [edx - 0x64], ch; call 0x115530; add esp, 0x18; pop ebx; ret; 
0x0011f163: sbb byte ptr [edx - 0x64], ch; call 0x115710; add esp, 0x1c; ret; 
0x001441c8: sbb byte ptr [edx - 0x77], dl; ret 0xe889; 
0x0013fce8: sbb byte ptr [edx - 0x77], dl; ret 0xeac1; 
0x0010e522: sbb byte ptr [edx - 1], ch; call 0x10e630; add esp, 0x1c; ret; 
0x0010e4fc: sbb byte ptr [edx - 1], ch; call 0x10e8a0; add esp, 0x1c; ret; 
0x0007dc1c: sbb byte ptr [edx], 0; add byte ptr [ebx + 0xb7f01f8], al; ret; 
0x00094b5b: sbb byte ptr [edx], 0; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x000c50ac: sbb byte ptr [edx], 0x45; stc; call dword ptr [eax - 0x18]; 
0x0012bf1a: sbb byte ptr [edx], ch; call 0x12c160; add esp, 0x1c; ret; 
0x00167426: sbb byte ptr [edx], ch; call 0x153f30; add esp, 0x1c; ret; 
0x0003523c: sbb byte ptr [edx], ch; call 0x351e0; add esp, 0x1c; ret; 
0x0003d566: sbb byte ptr [edx], ch; call 0x3ce00; add esp, 0x1c; ret; 
0x000c4259: sbb byte ptr [edx], ch; call 0xc47a0; add esp, 0x1c; ret; 
0x000e7ade: sbb byte ptr [edx], ch; call 0xe7bd0; add esp, 0x10; mov eax, 1; add esp, 0xc; ret; 
0x0012799c: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0x61730; add esp, 0x1c; ret; 
0x000a8cd6: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; call 0xc2d40; add esp, 0x18; pop ebx; ret; 
0x0004a59a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x47a00; add esp, 0x1c; ret; 
0x0004d7ca: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4aec0; add esp, 0x1c; ret; 
0x000514ba: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0x4e940; add esp, 0x1c; ret; 
0x000cac6a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xc83a0; add esp, 0x1c; ret; 
0x000cdb9a: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xcb520; add esp, 0x1c; ret; 
0x000d14ea: sbb byte ptr [edx], ch; push dword ptr [esp + 0x1c]; push dword ptr [esp + 0x1c]; call 0xced40; add esp, 0x1c; ret; 
0x0011e0ff: sbb byte ptr [edx], ch; push eax; call 0x120d30; add esp, 0x10; add esp, 0xc; ret; 
0x000bb284: sbb byte ptr [edx], cl; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0008e95e: sbb byte ptr [esi + 0x57], dl; push edx; push ecx; mov eax, dword ptr [esp + 0x24]; call eax; 
0x0016a672: sbb byte ptr [esi + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016a772: sbb byte ptr [esi + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016a6c6: sbb byte ptr [esi + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x00192fca: sbb byte ptr [esi + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00095cff: sbb byte ptr [esi - 0x17af0007], al; pop es; out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x001881ba: sbb byte ptr [esi - 0x18], dl; pop ds; jns 0x1881b0; jmp dword ptr [ebp - 0x75]; 
0x000ac693: sbb byte ptr [esi - 0x77], ah; pop edx; add al, 0x89; add cl, byte ptr [ebp + 0x5e5b0542]; ret; 
0x00105828: sbb byte ptr [esi - 0x7f], ah; loope 0x10582c; add esi, esi; ret; 
0x00195a4a: sbb byte ptr [esi], bh; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001872bb: sbb byte ptr [esp + eax], bh; jne 0x249d3; mov eax, 8; add esp, 0xc; ret; 
0x00196eca: sbb byte ptr [esp + eax], ch; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000c4fe2: sbb byte ptr [esp + ebx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x0008e86f: sbb ch, ah; call dword ptr [eax - 0x18]; 
0x0003401f: sbb ch, ah; idiv edi; dec dword ptr [ecx - 0x2d7a3f88]; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0016171d: sbb ch, ah; jmp dword ptr [ebp - 0x75]; 
0x00027089: sbb ch, byte ptr [ecx]; stc; call dword ptr [eax - 0x18]; 
0x001693f2: sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000a2a35: sbb cl, bh; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x000b9fac: sbb cl, byte ptr [ebp - 0x7af0e581]; ljmp 0x5b5e:0x5f000005; ret; 
0x001685d7: sbb cl, byte ptr [ebx + 0x39682444]; ret 0x840f; 
0x00149e05: sbb cl, byte ptr [ebx + 0x39702444]; ret 0x840f; 
0x000da065: sbb cl, byte ptr [ebx + 0x741a3918]; aam 0xf; lahf; ret; 
0x0012dc2d: sbb cl, byte ptr [ebx - 0x47bbdb8c]; lodsb al, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ebx + 0x53564d41], bh; call dword ptr gs:[0x10]; 
0x00191ba5: sbb cl, byte ptr [ebx - 0x7603f7a4]; pop esp; or bh, ah; mov eax, edx; pop ebx; ret; 
0x0012cccb: sbb cl, byte ptr [ecx - 0x7cfbe584]; ret; 
0x0014770e: sbb cl, byte ptr [edi]; inc edx; ret 0xb60f; 
0x000b9faf: sbb cl, byte ptr [edi]; test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x0011b861: sbb cl, byte ptr [edx - 7]; call dword ptr [eax - 0x18]; 
0x0015b55a: sbb cl, ch; ret 0xfffc; 
0x0009c4e7: sbb dh, byte ptr [ecx + 0x2905000e]; or dword ptr [edx], ebx; add byte ptr [ebx - 0x7f72e714], al; dec eax; mov cl, bh; call dword ptr [eax - 0x18]; 
0x000da069: sbb dh, byte ptr [esp + edx*8 + 0xf]; lahf; ret; 
0x000a9da9: sbb dh, dh; inc dword ptr [eax - 0x6d72fd1b]; lodsb al, byte ptr [esi]; push esi; call 0xc24eadb7; ret; 
0x000a9d69: sbb dh, dh; inc dword ptr [eax - 0x6d72fd1b]; sub al, 0x57; call 0xc24ead77; ret; 
0x00121415: sbb dh, dh; ret 0x7540; 
0x001a9e87: sbb dh, dh; ret 0xf0f; 
0x0015e192: sbb dl, ah; std; jmp dword ptr [esi - 0x70]; 
0x0010e438: sbb dl, byte ptr [eax - 0x73]; add dword ptr [ecx + ecx*2], -7; call dword ptr [eax - 0x18]; 
0x0010e438: sbb dl, byte ptr [eax - 0x73]; add dword ptr [ecx + ecx*2], -7; call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x00131a8d: sbb dl, byte ptr [ebp - 7]; call dword ptr [eax + 0x57]; 
0x001a0d83: sbb dl, dh; call dword ptr [ebx - 0x18]; 
0x0015f171: sbb dword ptr [0x50fff960], -0x18; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0010b986: sbb dword ptr [eax + 0x17247c], eax; jne 0x10ba30; call ecx; 
0x0012d5a6: sbb dword ptr [eax + 0x17c], edi; call dword ptr gs:[0x10]; 
0x00176d91: sbb dword ptr [eax + 0x5b000001], 0x5e; pop edi; ret; 
0x001630fa: sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x18]; 
0x0016328d: sbb dword ptr [eax + 0x61], -7; call dword ptr [eax - 0x73]; 
0x00154d33: sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x000fdd23: sbb dword ptr [eax + ecx*2], -7; call dword ptr [eax + 0x55]; 
0x000dee43: sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; 
0x000dee43: sbb dword ptr [eax - 0x62], -7; call dword ptr [eax - 0x18]; ret 0xf554; 
0x000a3907: sbb dword ptr [eax - 0x6f], -7; call dword ptr [eax - 0x18]; 
0x0010e40f: sbb dword ptr [eax - 0x73], edx; adc edx, 0x48; stc; call dword ptr [eax - 0x18]; 
0x0010e930: sbb dword ptr [eax], -0x5e; stc; call dword ptr [eax - 0x73]; 
0x00094553: sbb dword ptr [eax], -0x7b; stc; call dword ptr [eax - 0x18]; 
0x00154e43: sbb dword ptr [eax], 0x5f; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x00069a6d: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x0016c52c: sbb dword ptr [eax], eax; add byte ptr [ebx - 0x76e7dbbc], cl; xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0009f8cc: sbb dword ptr [eax], eax; mov dword ptr [eax + 0x3c10], 0; ret; 
0x000a0a4d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x3fc; jbe 0xa0a60; ret; 
0x000a0ccd: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0x50; jbe 0xa0ce0; ret; 
0x000a0a8d: sbb dword ptr [eax], eax; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; cmp eax, 0xffff; jbe 0xa0aa0; ret; 
0x0009dacc: sbb dword ptr [eax], eax; mov ecx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3be4]; test eax, eax; jne 0x9dae7; ret; 
0x000a0a2c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x358], edx; ret; 
0x000a0a0c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x35c], edx; ret; 
0x000a0abc: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x394], edx; ret; 
0x000a0d6c: sbb dword ptr [eax], eax; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; nop; mov dword ptr [eax + 0x3c74], edx; ret; 
0x0009f59d: sbb dword ptr [eax], eax; push ebx; mov eax, 6; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0009fc23: sbb dword ptr [eax], eax; push ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000bb483: sbb dword ptr [eax], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0004a4d1: sbb dword ptr [eax], esi; stc; call dword ptr [eax - 0x18]; 
0x0012632f: sbb dword ptr [ebp + 0x51], -7; call dword ptr [eax + 0x55]; 
0x00024b61: sbb dword ptr [ebp - 0x1b505370], ecx; jmp dword ptr [ebp + 0x33]; 
0x00133277: sbb dword ptr [ebp - 0x76f38a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001332f2: sbb dword ptr [ebp - 0x76f68a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00133b3b: sbb dword ptr [ebp - 0x76f78a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x001334e6: sbb dword ptr [ebp - 0x76fa8a37], eax; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x00080a41: sbb dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00121346: sbb dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x00055b57: sbb dword ptr [ebx + eax*4], eax; ret; 
0x00148a44: sbb dword ptr [ebx + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x00122fc7: sbb dword ptr [ecx + 0x4a], -7; call dword ptr [eax - 1]; 
0x000aa8d8: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6a80c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9278: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b21c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9bc8: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6b78c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c48: sbb dword ptr [ecx + eax - 0x72fc0000], 0xf6bf2c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a9c08: sbb dword ptr [ecx + eax - 0x72ff0000], 0xf5450c92; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x001aede3: sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x00055b54: sbb dword ptr [ecx - 0x7cfbe694], ecx; ret; 
0x0009f919: sbb dword ptr [ecx], eax; add byte ptr [eax], al; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000b083d: sbb dword ptr [ecx], ebp; ret; 
0x0017a3b6: sbb dword ptr [ecx], edi; ret 0x1572; 
0x000a3ebf: sbb dword ptr [ecx], edi; ret 0x840f; 
0x00098e5b: sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000bba4a: sbb dword ptr [edi + 0x5e], ebx; pop ebx; ret; 
0x00095da5: sbb dword ptr [edi + ecx*4], -0x1b; call dword ptr [eax + 0x56]; 
0x00145269: sbb dword ptr [edi], ecx; inc ebx; ret 0xc589; 
0x00027271: sbb dword ptr [edi], ecx; mov bh, 0x97; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x00043216: sbb dword ptr [edi], ecx; mov ebp, 0x1ff083c2; add eax, 1; pop ebx; ret; 
0x000bb61d: sbb dword ptr [edi], ecx; test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0012607f: sbb dword ptr [edx], 0x4c; stc; call dword ptr [eax + 0x55]; 
0x00131a8c: sbb dword ptr [edx], 0x55; stc; call dword ptr [eax + 0x57]; 
0x001a8a33: sbb dword ptr [edx], eax; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000a24b3: sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x0012602e: sbb dword ptr [esi + 0x51], -7; call dword ptr [eax + 0x55]; 
0x00123944: sbb dword ptr [esi + 0x5f], -7; call dword ptr [eax + 0x6a]; 
0x00123944: sbb dword ptr [esi + 0x5f], -7; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x00171fbe: sbb dword ptr [esi + ecx*2], -0xd; call dword ptr [eax - 0x73]; 
0x000de49b: sbb dword ptr [esi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x000bb683: sbb dword ptr [esi], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00059c0f: sbb dword ptr [esi], ecx; add byte ptr [ebx - 0x36374b], cl; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x00163037: sbb dword ptr [esp], -0xe; call dword ptr [eax - 0x18]; 
0x00154cab: sbb eax, -0x71; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x0017238b: sbb eax, -1; add esp, 0xc; ret; 
0x000c09f0: sbb eax, -1; mov byte ptr [eax], bh; mov eax, edi; pop ebx; pop edi; ret; 
0x000b8475: sbb eax, -1; pop ebx; ret; 
0x000b7d06: sbb eax, -1; pop edi; pop ebx; ret; 
0x000c2bed: sbb eax, -1; pop esi; pop ebx; ret; 
0x0011be7d: sbb eax, 0; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0011ad5e: sbb eax, 0; pop ebx; pop esi; ret; 
0x00124eea: sbb eax, 0x14; mov dword ptr [esp + 0x100c], ebx; xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0006133d: sbb eax, 0x26b85300; add byte ptr [eax], al; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x0005abdd: sbb eax, 0x434c481; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x00061060: sbb eax, 0x4c838b00; sbb al, byte ptr [eax]; add byte ptr [ebp + 0x314574c0], al; jmp dword ptr [esi - 0x70]; 
0x00154ecb: sbb eax, 0x4e; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; call esi; 
0x000ba037: sbb eax, 0x562850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000e9952: sbb eax, 0x5b04c483; pop esi; ret; 
0x00190259: sbb eax, 0x5b18c483; ret; 
0x001605a2: sbb eax, 0x5b1cc483; pop esi; pop edi; pop ebp; ret; 
0x0009191d: sbb eax, 0x5b24c483; pop esi; ret; 
0x001725a6: sbb eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x000bb6da: sbb eax, 0x5bf850f; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9c7f: sbb eax, 0x5f000009; pop esi; pop ebx; ret; 
0x001b09f7: sbb eax, 0x66000005; cmp eax, 0x840f0800; ret; 
0x000699e2: sbb eax, 0x68fff933; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x0005f56a: sbb eax, 0x7b; stc; call dword ptr [eax - 0x73]; 
0x001767dc: sbb eax, 0x8100010e; ret; 
0x001733dc: sbb eax, 0x81000142; ret; 
0x00154bdc: sbb eax, 0x8100032a; ret; 
0x000a87dc: sbb eax, 0x81000dee; ret; 
0x000908dc: sbb eax, 0x81000f6d; ret; 
0x0008dadc: sbb eax, 0x81000f9b; ret; 
0x000859dc: sbb eax, 0x8100101c; ret; 
0x000817dc: sbb eax, 0x8100105e; ret; 
0x001969dc: sbb eax, 0x81ffff0c; ret; 
0x001892dc: sbb eax, 0x81ffffe3; ret; 
0x0003def8: sbb eax, 0x83001fef; in al, dx; sbb byte ptr [ebp - 0x68a3b80], cl; call dword ptr [eax - 0x18]; 
0x0002a496: sbb eax, 0x83028b00; ret; 
0x0007ac46: sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x0017409f: sbb eax, 0x8900002c; ret; 
0x0011eac6: sbb eax, 0x8908ec83; ret; 
0x00026bb2: sbb eax, 0x893cd66b; ret; 
0x000a495f: sbb eax, 0x89fffff0; ret; 
0x00111336: sbb eax, 0x8b056a50; jl 0x111361; adc byte ptr [ebp - 0x6b67779], cl; call dword ptr [eax - 0x73]; 
0x0016cf8a: sbb eax, 0x8b0cec83; inc ebx; add al, 0x53; call dword ptr [eax + 0x10]; 
0x00095c4c: sbb eax, 0x8dffffff; xchg al, dl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x0008638e: sbb eax, 0xa0c481; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009b273: sbb eax, 0xb881f180; lock add byte ptr [eax], al; add byte ptr [edx + 1], bh; xor esi, esi; call dword ptr gs:[0x10]; 
0x001a58d8: sbb eax, 0xc381fffe; leave; dec edx; add eax, dword ptr [eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019583e: sbb eax, 0xc381ffff; pop ds; inc eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001958f5: sbb eax, 0xc381ffff; push 0x300043f; sbb al, 0x8b; jmp ebx; 
0x000535ed: sbb eax, 0xc4830007; adc byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0019a8e2: sbb eax, 0xc801ca01; call 0x1875fd; add ebx, 0x3f7f4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001966c2: sbb eax, 0xc801ca01; call 0x1875fd; add ebx, 0x43414; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0016b08b: sbb eax, 0xec83000d; adc al, 0x8d; cmp byte ptr [ecx + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x000bb6d7: sbb eax, 0xf1d7f8d; test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x0009a748: sbb eax, dword ptr [eax]; add bh, dh; mov dword ptr [ecx], 0x74000000; aad 0x89; ret 0xe083; 
0x000ea517: sbb eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00094e95: sbb eax, dword ptr [eax]; add byte ptr [ebp + 6], dh; mov eax, edx; pop ebx; pop esi; ret; 
0x00095193: sbb eax, dword ptr [eax]; add byte ptr [ebp + 8], dh; xor eax, eax; pop ebx; ret; 
0x00090345: sbb eax, dword ptr [eax]; add byte ptr [ebx + 0x45a8b02], cl; mov ecx, dword ptr [edx + 8]; mov edx, dword ptr [edx + 0xc]; call dword ptr gs:[0x10]; 
0x0005089c: sbb eax, dword ptr [eax]; add byte ptr [ebx - 0x6bf0fe01], al; ret 0xeb39; 
0x0004f158: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501cb: sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x000327f3: sbb eax, dword ptr [eax]; add dh, dh; ret 0xf03; 
0x00120132: sbb eax, dword ptr [ebx + 0x5e5b74c4]; ret; 
0x001a6ff4: sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x001791c4: sbb eax, dword ptr [ebx - 0x95fb14]; push ebp; push esi; call edi; 
0x00098444: sbb eax, dword ptr [ecx + 8]; inc eax; xor eax, eax; ret; 
0x001a8241: sbb eax, dword ptr [ecx]; add byte ptr [eax], al; lea eax, [edi + 3]; pop edi; ret; 
0x00190cc7: sbb eax, dword ptr [esp + eax - 0x74e3fd00]; add edx, ecx; jmp ebx; 
0x00088020: sbb eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x00060bfc: sbb eax, eax; add esp, 0x1c; ret; 
0x00190866: sbb eax, eax; add esp, 0x2c; ret; 
0x00025819: sbb eax, eax; add esp, 0xc; ret; 
0x00061316: sbb eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00053823: sbb eax, eax; and eax, 2; sub eax, 1; ret; 
0x00175e09: sbb eax, eax; mov edx, dword ptr [esp + 0xc]; sub edx, dword ptr gs:[0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x000537a1: sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x001323e1: sbb eax, eax; ret; 
0x000c293d: sbb eax, eax; sbb eax, -1; pop ebx; ret; 
0x000c2beb: sbb eax, eax; sbb eax, -1; pop esi; pop ebx; ret; 
0x00131ffa: sbb ebp, dword ptr [esi - 0x7f74fff0]; adc byte ptr [ecx], al; add byte ptr [eax], al; mov eax, dword ptr [eax + 0x20]; ret; 
0x001715fc: sbb ebp, ebx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000bba9a: sbb ebx, dword ptr [edi + 0x5e]; pop ebx; ret; 
0x001673fa: sbb ebx, dword ptr [edx + 0xd]; add byte ptr [ebx - 0x7f72eb14], al; test dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x000fbceb: sbb ebx, ebp; ret; 
0x00043551: sbb ebx, edx; pop ebx; setb al; ret; 
0x00131797: sbb ecx, dword ptr [ebp - 0x6d47f6ec]; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x000b9fda: sbb ecx, dword ptr [ebp - 0x7af0e481]; mov esp, 0x5f000005; pop esi; pop ebx; ret; 
0x000a0547: sbb ecx, dword ptr [ebx + 0x244c8b18]; mov esi, dword ptr fs:[esp + 4]; mov eax, 0x199; call dword ptr gs:[0x10]; 
0x0005a119: sbb ecx, dword ptr [ebx - 0x76e3db8c]; ret 0xc801; 
0x000b9fdd: sbb ecx, dword ptr [edi]; test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x0011ad5c: sbb ecx, edx; sbb eax, 0; pop ebx; pop esi; ret; 
0x00164853: sbb edi, 0x61; stc; call dword ptr [eax - 0x18]; 
0x000a034b: sbb edi, dword ptr [eax + 0x106]; call dword ptr gs:[0x10]; 
0x000a028a: sbb edi, dword ptr [eax + 0x107]; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000a03bf: sbb edi, dword ptr [eax + 0x198]; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000bb107: sbb edi, ebp; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00195ce5: sbb edi, edi; inc dword ptr [ecx + 0x43b78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195c2e: sbb edi, edi; inc dword ptr [ecx + 0x43c2fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195ade: sbb edi, edi; inc dword ptr [ecx + 0x43d7fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00195a45: sbb edi, edi; inc dword ptr [ecx + 0x43e18c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x000da074: sbb edi, edi; mov eax, ebx; pop ebx; pop esi; ret; 
0x00079817: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [eax], dl; jp 0x79817; call dword ptr [eax - 0x18]; 
0x00155092: sbb edx, dword ptr [eax - 0x73]; xchg byte ptr [ebx + esi*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x0005bad5: sbb edx, dword ptr [eax - 0x73]; xchg dword ptr [eax], edx; jp 0x5bad5; call dword ptr [eax - 0x18]; 
0x001664f1: sbb edx, dword ptr [eax - 0x73]; xchg dword ptr [edx - 7], esi; call dword ptr [eax + 0x6a]; 
0x0003c13c: sbb edx, ebx; pop ebx; mov eax, edx; shr eax, 0x1f; ret; 
0x0013f548: sbb edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0010ee84: sbb esp, 0x2c; stc; call dword ptr [eax - 0x18]; 
0x00122afb: sbb esp, dword ptr [ebx - 0x47acffef]; sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00173896: sbb esp, ebp; inc dword ptr [ebx - 0x72afef3c]; and dword ptr [eax], 0xffffffb8; stc; call dword ptr [eax - 0x73]; 
0x00131ffb: scasb al, byte ptr es:[edi]; adc byte ptr [eax], al; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x0017946c: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ebx - 0x2f76eb3c], al; pop ebx; pop esi; ret; 
0x0003cb5d: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; lea edx, [esp + 0xa0]; call dword ptr gs:[0x10]; 
0x0003cc00: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; mov edx, ebp; call dword ptr gs:[0x10]; 
0x001a947e: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add dh, dh; ret 0xf40; 
0x0005b406: scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x00027524: scasb al, byte ptr es:[edi]; add dword ptr [eax], eax; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x0005e0d8: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; cmp byte ptr [edi + 0x31], 0xf9; call dword ptr [eax - 0x18]; 
0x0002a71b: scasb al, byte ptr es:[edi]; add eax, dword ptr [eax]; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0019b6e7: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d7: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199707: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198531: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963d1: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194431: scasb al, byte ptr es:[edi]; clc; call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001769b5: scasb al, byte ptr es:[edi]; fmul st(0), st(0); dec dword ptr [ebp - 0xcfc334a]; call dword ptr [ebp - 0x73]; 
0x001782fb: scasb al, byte ptr es:[edi]; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x0014c9ee: scasb al, byte ptr es:[edi]; ret 0xffff; 
0x00148fa0: scasb al, byte ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00180747: scasb al, byte ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x00051841: scasd eax, dword ptr es:[edi]; aad 1; ret 0xd889; 
0x0009df45: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [ecx - 0x76d7dbb4], cl; retf 0x4c8b; and al, 0x1c; call dword ptr gs:[0x10]; 
0x0009427f: scasd eax, dword ptr es:[edi]; add byte ptr [eax], al; add byte ptr [esi + 8], bh; call dword ptr gs:[0x10]; 
0x0003dddc: scasd eax, dword ptr es:[edi]; add eax, 0x1cc48300; ret; 
0x001905d7: scasd eax, dword ptr es:[edi]; cli; jmp dword ptr [esi - 0x70]; 
0x000bdd5e: scasd eax, dword ptr es:[edi]; cwde; or al, 0; add ecx, 0x10d212; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00024a95: scasd eax, dword ptr es:[edi]; in al, 0xff; xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x001693d0: scasd eax, dword ptr es:[edi]; in al, dx; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [esi + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x001951b3: scasd eax, dword ptr es:[edi]; inc esi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00041a51: scasd eax, dword ptr es:[edi]; lds eax, ptr [ecx]; fcom dword ptr [eax - 0x75]; inc esp; and al, 0x28; call eax; 
0x00041b3e: scasd eax, dword ptr es:[edi]; mov byte ptr [ecx], 0xf8; push eax; mov eax, dword ptr [esp + 0x28]; call eax; 
0x000d8c5d: scasd eax, dword ptr es:[edi]; mov dh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x000c105e: scasd eax, dword ptr es:[edi]; or al, 0; add ecx, 0x109f92; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00127e4c: scasd eax, dword ptr es:[edi]; out dx, al; call dword ptr [eax - 0x73]; 
0x00193c33: scasd eax, dword ptr es:[edi]; pop ecx; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0003a63c: scasd eax, dword ptr es:[edi]; ret 0x4f89; 
0x0004157c: scasd eax, dword ptr es:[edi]; ret 0x5750; 
0x0004142c: scasd eax, dword ptr es:[edi]; ret 0x8b50; 
0x000c566f: scasd eax, dword ptr es:[edi]; ret 0x948b; 
0x000835a7: scasd eax, dword ptr es:[edi]; ret 0xbe0f; 
0x00041b2f: scasd eax, dword ptr es:[edi]; ret; 
0x000537a0: scasd eax, dword ptr es:[edi]; sbb eax, eax; neg eax; pop esi; pop edi; ret; 
0x0014b924: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x0014b675: scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00079358: scasd eax, dword ptr es:[edi]; sti; dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x0008efd8: setae al; ret; 
0x000434ff: setb al; ret; 
0x000df262: setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x00133417: setb dl; mov eax, edx; pop ebx; pop esi; ret; 
0x000349bb: setbe al; ret; 
0x0010b5a9: sete al; add esp, 0x2c; movzx eax, al; ret; 
0x0009c6f3: sete al; add esp, 0xc; movzx eax, al; lea eax, [eax + eax + 2]; ret; 
0x00053555: sete al; add esp, 0xc; movzx eax, al; ret; 
0x00155604: sete al; add esp, 0xc; ret; 
0x0009c6e1: sete al; movzx eax, al; add eax, 2; add esp, 0xc; ret; 
0x00122868: sete al; movzx eax, al; neg eax; add esp, 0xc; ret; 
0x000944fc: sete al; movzx eax, al; ret; 
0x0009c5c2: sete al; movzx eax, al; sub eax, 2; add esp, 0xc; ret; 
0x0014c8d5: sete al; pop ebx; movzx eax, al; ret; 
0x0003d674: sete al; ret; 
0x001877b5: sete dl; mov dword ptr [ebx], edx; add esp, 8; pop ebx; ret; 
0x0012c89d: setg al; pop esi; pop edi; ret; 
0x0010cd2c: setg dl; shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x000434e0: setle al; ret; 
0x0012cf19: setne al; add esp, 0x1c; movzx eax, al; neg eax; ret; 
0x00170576: setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0012cf5a: setne al; add esp, 0x2c; movzx eax, al; neg eax; ret; 
0x000fd539: setne al; add esp, 4; add eax, eax; pop ebx; pop esi; ret; 
0x0016fa2e: setne al; add esp, 4; movzx eax, al; pop ebx; pop esi; ret; 
0x000895f1: setne al; add esp, 8; movzx eax, al; pop ebx; neg eax; ret; 
0x0016e897: setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0016fac5: setne al; movzx eax, al; add esp, 4; pop ebx; pop esi; ret; 
0x0012573b: setne al; movzx eax, al; add esp, 8; pop ebx; ret; 
0x00159759: setne al; movzx eax, al; neg eax; ret; 
0x0008f6b2: setne al; movzx eax, al; pop ebx; ret; 
0x0003d4ff: setne al; movzx eax, al; ret; 
0x001284e7: setne al; pop edi; movzx eax, al; ret; 
0x00125d0f: setne al; pop esi; pop edi; movzx eax, al; ret; 
0x000fb6f3: setne al; ret; 
0x0009ae35: setne al; shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00098817: setne cl; shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0016edff: setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008713f: setne dl; mov eax, edx; ret; 
0x0019b6e6: sfence; call 0x1875fd; add ebx, 0x3e9f2; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019a6d6: sfence; call 0x1875fd; add ebx, 0x3f842; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00199706: sfence; call 0x1875fd; add ebx, 0x40652; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00198530: sfence; call 0x1875fd; add ebx, 0x415a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001963d0: sfence; call 0x1875fd; add ebx, 0x43488; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00194430: sfence; call 0x1875fd; add ebx, 0x451a8; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0018829d: sgdt [eax]; add byte ptr [ebx + 0x73ff0cec], al; cmp al, ch; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001aa87c: shl byte ptr [0xf0f0f0f], 1; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000b07f6: shl byte ptr [eax], 0x5f; pop esi; ret; 
0x000c1080: shl byte ptr [eax], 0xe8; mov ah, byte ptr [ebp + 0xc]; add byte ptr [ecx + 0x109f6dc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0003dec3: shl byte ptr [ebp - 1], cl; adc eax, 0x10; add esp, 0x14; pop ebx; pop esi; ret; 
0x00141e75: shl byte ptr [ebx], 0x89; loope 0x141e03; ret 0x25; 
0x001396c1: shl byte ptr [ecx + edi], 0xd0; jae 0x1396d0; cmp dword ptr [eax + 4], ecx; jne 0x1396c0; mov eax, dword ptr [eax + 0x18]; ret; 
0x00191429: shl byte ptr [ecx - 1], 1; inc dword ptr [ecx + 0x47fb3c3]; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; jmp ebx; 
0x0004e2aa: shl byte ptr [ecx], 1; ret 0x1e74; 
0x0004e351: shl byte ptr [ecx], 1; ret 0xd285; 
0x001a3fd2: shl byte ptr [edx + 3], 1; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0014c8ac: shl byte ptr [esi + 0x39], 0x5a; add dh, byte ptr [ebp + eax + 0x5b]; ret; 
0x00190d73: shl byte ptr [esi + 0xf], 0x70; rol byte ptr [eax], 0xf7; ret 0xf; 
0x001a3911: shl byte ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c1ed6: shl byte ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x001a47ec: shl byte ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000437d1: shl byte ptr [esi - 0x7b], 0xd2; mov edx, 0x10; cmove eax, edx; ret; 
0x00122b61: shl byte ptr [esi], 0x8b; xchg edx, eax; mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x000b9b21: shl dword ptr [eax], 0x12; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x001a8c75: shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x000c2055: shl dword ptr [ecx], 1; retf 0xd285; je 0xc2030; bsr ecx, edx; add eax, ecx; ret; 
0x000ba62d: shl dword ptr [edi + eax + 0xc030011], 0x99; jmp ecx; 
0x0007cf55: shl dword ptr [edi - 6], 1; jmp dword ptr [esi - 0x70]; 
0x000c1ede: shl dword ptr [esi + 0xf], 0xd7; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x001a8c71: shl dword ptr [esi + 0xf], 0xd7; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x001a3fb5: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a4976: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3273; 
0x001a3fa0: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x3e73; 
0x001a495c: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x4c73; 
0x001a3f8b: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x5073; 
0x001a3f76: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6273; 
0x001a4942: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x6673; 
0x001a4042: shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x001a489c: shl dword ptr [esi + 0xf], 1; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x000c1b15: shl dword ptr [esi + 0xf], 1; xlatb; ret 0xc085; 
0x001a474c: shl dword ptr [esi + 0xf], cl; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x830f; 
0x0010bdfd: shl eax, 2; push eax; call 0x23198; add esp, 0x18; pop ebx; ret; 
0x0013f891: shl eax, 4; lea eax, [edx + eax + 8]; pop ebx; ret; 
0x0009773a: shl eax, 4; pop edi; pop ebp; ret; 
0x00186806: shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0009ae38: shl eax, 7; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00060618: shl eax, 8; and eax, 0x100; or eax, 7; mov dword ptr [edx], eax; mov eax, 1; ret; 
0x0003d446: shl eax, cl; or dword ptr [edx + ebx*4], eax; xor eax, eax; pop ebx; ret; 
0x00042d30: shl eax, cl; ret; 
0x0003d4f7: shl eax, cl; sar ecx, 5; and eax, dword ptr [edx + ecx*4]; setne al; movzx eax, al; ret; 
0x00053f4f: shl ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0018768b: shl ebx, cl; sar eax, 5; or dword ptr [edx + eax*4], ebx; xor eax, eax; pop ebx; ret; 
0x00148ce8: shl ecx, 4; add esp, 8; lea edx, [eax + ecx]; pop ebx; mov eax, edx; ret; 
0x0009881a: shl ecx, 7; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0013f9ed: shl edx, 0x10; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000983d3: shl edx, 0x1c; and eax, 0xcfffffff; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x00055280: shl edx, 0x1f; or eax, edx; mov dword ptr [esp + 4], eax; fld qword ptr [esp]; add esp, 0xc; ret; 
0x000552b7: shl edx, 0x1f; or eax, edx; mov dword ptr [esp], eax; fld dword ptr [esp]; add esp, 4; ret; 
0x0013f622: shl edx, 4; add edx, 8; cmp dword ptr [esp + 8], 0x80; cmovb eax, edx; ret; 
0x0013fa13: shl edx, 8; or eax, edx; bswap eax; mov dword ptr [ecx], eax; mov eax, ecx; ret 4; 
0x000c10df: shr al, 0x2c; or al, 0; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9aff: shr al, 0xc; fisttp dword ptr [eax + eax]; add ecx, 0x11123b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb13f: shr al, 0xcc; les ecx, ptr [eax + eax]; add ecx, 0x10fd5b; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0016d3c8: shr al, 0xe2; loope 0x16d3c9; jmp dword ptr [esi - 0x70]; 
0x0012f258: shr al, 1; push edx; ret; 
0x001301e8: shr al, 1; ret 0xb3; 
0x0008716b: shr al, 2; and eax, 1; xor eax, 1; ret; 
0x0008718b: shr al, 3; and eax, 1; xor eax, 1; ret; 
0x00087efb: shr al, 4; and eax, 1; ret; 
0x00087f1b: shr al, 5; and eax, 1; ret; 
0x0013974f: shr al, 6; and eax, 1; pop ebx; ret; 
0x000c0fd4: shr al, cl; aaa; or al, 0; add ecx, 0x10a01a; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdcf8: shr al, cl; adc ebx, dword ptr [ecx - 0x3e7efff4]; jbe 0xbdcd4; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0ff8: shr al, cl; adc esp, dword ptr [esi + 0xc]; add byte ptr [ecx + 0x109ff6c1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bb00b: shr al, cl; add dh, al; or al, 0; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bafe6: shr al, cl; and eax, 0x81000cc6; sal dword ptr [esi + edi*8], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000c1032: shr al, cl; fldenv [ebp + 0xc]; add byte ptr [ecx + 0x109fbcc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x000bdd32: shr al, cl; fstp dword ptr [eax - 0x3e7efff4]; cmp al, 0xd2; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017a740: shr al, cl; push 0xe; cld; jmp dword ptr [esi - 0x70]; 
0x000b99b6: shr al, cl; push ebp; fmul qword ptr [eax + eax]; add ecx, 0x111304; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c0fb6: shr al, cl; push ebp; or al, 0; add ecx, 0x10a038; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99db: shr al, cl; xor ah, bl; or al, 0; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001781bc: shr bl, 1; call dword ptr [eax - 0x73]; 
0x000aae99: shr bl, cl; or ecx, dword ptr [ebp - 0x7cffd98c]; ret 0x3901; 
0x001050d8: shr byte ptr [eax - 0x5f7bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0017be0f: shr byte ptr [eax - 0x72b00000], 1; xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016c44a: shr byte ptr [eax], 0xff; jo 0x16c463; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x0004d73a: shr byte ptr [ebx - 2], cl; dec dword ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x001aa8f5: shr byte ptr [ecx - 0x40], 1; add dword ptr [ecx], eax; add dword ptr [ecx], eax; shr eax, 0x18; ret; 
0x000c1d32: shr byte ptr [ecx], 0xc2; jbe 0xc1d70; add eax, edi; pop edi; ret; 
0x000c1d45: shr byte ptr [ecx], 0xc2; jbe 0xc1d70; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d55: shr byte ptr [ecx], 0xc2; jbe 0xc1d70; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1d65: shr byte ptr [ecx], 0xc2; jbe 0xc1d70; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x0004a303: shr byte ptr [ecx], 1; ret 0x8d52; 
0x001324f7: shr byte ptr [ecx], 1; ret 0xe801; 
0x000a8f7f: shr byte ptr [ecx], 1; ret 0xf001; 
0x000c9af4: shr byte ptr [ecx], 1; ret; 
0x0007cbb0: shr byte ptr [edx - 6], 1; jmp dword ptr [esi - 0x70]; 
0x0012ed61: shr byte ptr [edx], 0x8d; xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x00042dda: shr byte ptr [esi], cl; lea esi, [esi]; mov eax, 1; xor edx, edx; pop ebx; ret; 
0x001929d2: shr byte ptr [esp + eax], 1; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000af6e1: shr cl, 1; ret 0xffeb; 
0x000d4d02: shr cl, cl; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000c1088: shr dword ptr [ebp - 0x61], 0x10; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00114bdb: shr dword ptr [ecx + 2], 1; add byte ptr [eax + 0x5c8bda89], dl; and al, 4; mov eax, 0x85; call dword ptr gs:[0x10]; 
0x000bb178: shr dword ptr [ecx], 0xfd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000cb825: shr dword ptr [ecx], cl; jl 0xcb84d; and cl, ch; ret 3; 
0x000aa240: shr dword ptr [ecx], cl; ret; 
0x000ba712: shr dword ptr [edi], 6; adc dword ptr [eax], eax; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0007c779: shr eax, 0x10; mov byte ptr [ebx + 0x3e], al; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008c36f: shr eax, 0x10; mov byte ptr [edx + 0x3e], al; mov edx, dword ptr [edx + 0x34]; test edx, edx; jne 0x8c360; ret; 
0x00081142: shr eax, 0x10; mov byte ptr [esi + 0x3e], al; add esp, 4; pop ebx; pop esi; ret; 
0x00095e56: shr eax, 0x13; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x001aa888: shr eax, 0x18; ret; 
0x0010cd2f: shr eax, 0x1f; add esp, 8; or eax, edx; pop ebx; ret; 
0x000982ce: shr eax, 0x1f; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0003b37e: shr eax, 0x1f; pop edi; ret; 
0x0003b0cb: shr eax, 0x1f; ret; 
0x0003bde0: shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x0008f3bc: shr eax, 0xb; and eax, 1; mov dword ptr [edx + 0x1b08], eax; ret; 
0x0009adce: shr eax, 1; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x0013f867: shr eax, 1; ret; 
0x00053738: shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x53700; jmp eax; 
0x00091d44: shr eax, 3; je 0x91d78; mov eax, edi; call dword ptr gs:[0x10]; 
0x0013ee2f: shr eax, 3; sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x000a0a70: shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x001aa878: shr eax, 4; add eax, edx; and eax, 0xf0f0f0f; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x0016f3a5: shr eax, 5; ret 0xfffc; 
0x0013fc94: shr eax, 8; and ecx, 0xc0000000; shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0012d551: shr eax, cl; and eax, 3; ret; 
0x00042e3c: shr eax, cl; ret; 
0x000bdd88: shr ebp, 0xd1; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00041c76: shr ebx, 0x10; and ebx, 0x3ff; xor eax, ebx; pop ebx; ret; 
0x00054f4f: shr ebx, cl; mov dword ptr [edi], ebx; pop ebx; pop esi; pop edi; ret; 
0x0003bde3: shr ecx, 0x10; or eax, ecx; ret; 
0x0007ac44: shr ecx, 1; sbb eax, 0x83fffffd; jmp dword ptr [eax]; 
0x0010cd8b: shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0010cd03: shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000a4ce8: shr ecx, cl; imul edi, ebp, -1; jmp dword ptr [esi - 0x70]; 
0x000bb032: shr edi, 0xfd; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0013fc9d: shr edx, 0x10; cmp ecx, 0x80000000; cmove eax, edx; ret; 
0x0013f982: shr edx, 0x18; movzx eax, ax; and ecx, 0xc0000000; cmp ecx, 0x80000000; cmovne eax, edx; ret; 
0x0003a057: shr edx, 0x18; xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x3a040; ret; 
0x00042ea6: shr edx, cl; test cl, 0x20; je 0x42eb1; mov eax, edx; xor edx, edx; ret; 
0x001278bf: shrd eax, edx, 0xc; xor al, al; or eax, ecx; ret; 
0x00122dc0: shufps xmm0, xmmword ptr [eax], 0; mov eax, ebx; add esp, 4; pop ebx; pop esi; ret; 
0x0007891d: sidt [ecx - 0x4fb73]; call dword ptr [eax + 0x50]; 
0x00078c6a: sidt [ecx - 0x51373]; call dword ptr [eax + 0x50]; 
0x00095d37: sldt word ptr [0x1a70db]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2a4], edx; ret; 
0x00095d17: sldt word ptr [0x1a70fb]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x2ac], edx; ret; 
0x00094b57: sldt word ptr [0x1a82bb]; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008f377: sldt word ptr [0x1ada9b]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x29c], edx; ret; 
0x0008f357: sldt word ptr [0x1adabb]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x298], edx; ret; 
0x0008f337: sldt word ptr [0x1adadb]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x294], edx; ret; 
0x0008f317: sldt word ptr [0x1adafb]; mov edx, dword ptr [esp + 4]; mov edx, dword ptr [edx]; mov dword ptr [eax + 0x290], edx; ret; 
0x0008d677: sldt word ptr [0x1af79b]; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x001145e1: sldt word ptr [eax]; add byte ptr [ebx - 0x74f3dbb4], cl; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x00150b0b: sldt word ptr [eax]; add byte ptr [ecx - 0x761c761f], cl; ret 0x25; 
0x0012789b: sldt word ptr [eax]; and eax, 0xfffff000; or eax, edx; ret; 
0x001a7f24: sldt word ptr [eax]; jne 0x1a7d20; xor eax, eax; pop edi; ret; 
0x0013edee: sldt word ptr [ebx + 0x74ff14ec]; and al, 0x1c; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0008f397: sldt word ptr [ecx + 0x1ada7bc2]; add byte ptr [ebx - 0x7cfbdbbc], cl; cmp byte ptr [ecx], al; je 0x8f3b0; ret; 
0x0008848a: sldt word ptr [ecx + 0x1b4988c6]; add byte ptr [ebx - 0x77], dl; ret; 
0x00080160: stc; add al, byte ptr [ebp - 0x7cf48740]; ret 0x8304; 
0x0007391b: stc; add bh, byte ptr [ecx]; fnstenv [ecx + ebx - 0x7d]; in al, dx; or byte ptr [ebx - 0x4ff63], cl; call dword ptr [edx + 0x50]; 
0x00058979: stc; add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x000c3651: stc; add byte ptr [ecx + eax + 0x40], dh; sub eax, dword ptr [esp + 4]; ret; 
0x001a50fd: stc; add byte ptr [edi], cl; test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x001a39c9: stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00159ecd: stc; add dh, byte ptr [edi + ecx - 0x77]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0008239b: stc; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x00041364: stc; add dword ptr [ebp + eax - 0x18], esi; ret; 
0x0012bb5d: stc; add dword ptr [edi + 0x2f], edi; add esp, 8; pop ebx; ret; 
0x0003eff1: stc; add dword ptr [edi + 0x74], edi; sub esp, 8; push 0; push edx; call eax; 
0x00173977: stc; add dword ptr [edi], ecx; test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x17390e; ret 0x25; 
0x0010ce82: stc; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010ccff: stc; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0016e502: stc; add esi, dword ptr [esi + 0xa]; mov eax, 2; pop ebx; pop esi; ret; 
0x0003ddaf: stc; and al, 0x75; fmul qword ptr [ecx + 0x5f5e5bd8]; ret; 
0x00123cc1: stc; call dword ptr [eax + 0x50]; 
0x000617db: stc; call dword ptr [eax + 0x51]; 
0x00023471: stc; call dword ptr [eax + 0x52]; 
0x00039edc: stc; call dword ptr [eax + 0x53]; 
0x000acd5f: stc; call dword ptr [eax + 0x55]; 
0x00030493: stc; call dword ptr [eax + 0x56]; 
0x000345ae: stc; call dword ptr [eax + 0x57]; 
0x00028886: stc; call dword ptr [eax + 0x68]; 
0x00024797: stc; call dword ptr [eax + 0x6a]; 
0x00123947: stc; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x0017a683: stc; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x0016bcf5: stc; call dword ptr [eax + 0x6a]; pop es; call 0x153e50; add esp, 0x1c; ret; 
0x0016aa15: stc; call dword ptr [eax + 0x6a]; push es; call 0x153e50; add esp, 0x1c; ret; 
0x00106f29: stc; call dword ptr [eax - 0x17]; 
0x0002325b: stc; call dword ptr [eax - 0x18]; 
0x00151bd1: stc; call dword ptr [eax - 0x18]; aaa; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001516d1: stc; call dword ptr [eax - 0x18]; aaa; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0005afd1: stc; call dword ptr [eax - 0x18]; aaa; xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x001367e6: stc; call dword ptr [eax - 0x18]; and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x0008d9e6: stc; call dword ptr [eax - 0x18]; and ch, byte ptr [ecx - 6]; jmp dword ptr [esi - 0x70]; 
0x00153b2b: stc; call dword ptr [eax - 0x18]; fld qword ptr [edi]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000edc16: stc; call dword ptr [eax - 0x18]; hlt; jmp dword ptr [esi - 0x70]; 
0x00151811: stc; call dword ptr [eax - 0x18]; imul dword ptr [edx]; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0005b9c5: stc; call dword ptr [eax - 0x18]; inc ebx; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x001831c6: stc; call dword ptr [eax - 0x18]; inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x00059dc6: stc; call dword ptr [eax - 0x18]; inc edx; movsd dword ptr es:[edi], dword ptr [esi]; std; jmp dword ptr [esi - 0x70]; 
0x001131c4: stc; call dword ptr [eax - 0x18]; inc esp; adc edx, esi; jmp dword ptr [esi - 0x70]; 
0x00151591: stc; call dword ptr [eax - 0x18]; ja 0x1515c4; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151a91: stc; call dword ptr [eax - 0x18]; ja 0x151abf; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151951: stc; call dword ptr [eax - 0x18]; mov bh, 0x29; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151451: stc; call dword ptr [eax - 0x18]; mov bh, 0x2e; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00189f0f: stc; call dword ptr [eax - 0x18]; pop ecx; aad 0xef; jmp dword ptr [esi - 0x70]; 
0x00095d01: stc; call dword ptr [eax - 0x18]; pop es; out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x001514f1: stc; call dword ptr [eax - 0x18]; pop ss; out dx, al; jmp dword ptr [esi - 0x70]; 
0x001519f1: stc; call dword ptr [eax - 0x18]; pop ss; sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x000efe74: stc; call dword ptr [eax - 0x18]; push ebx; hlt; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x001518b1: stc; call dword ptr [eax - 0x18]; push edi; sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x00079ab6: stc; call dword ptr [eax - 0x18]; push edx; test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0002ac46: stc; call dword ptr [eax - 0x18]; ret 0x96; 
0x000dee46: stc; call dword ptr [eax - 0x18]; ret 0xf554; 
0x00125666: stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x000923a5: stc; call dword ptr [eax - 0x18]; ret; 
0x0010e43e: stc; call dword ptr [eax - 0x18]; retf 0xf25e; jmp dword ptr [esi - 0x70]; 
0x001693ee: stc; call dword ptr [eax - 0x18]; sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00096a6d: stc; call dword ptr [eax - 0x18]; wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x00151771: stc; call dword ptr [eax - 0x18]; xchg edi, eax; sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x0015f174: stc; call dword ptr [eax - 0x18]; xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x00151b31: stc; call dword ptr [eax - 0x18]; xlatb; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x00151631: stc; call dword ptr [eax - 0x18]; xlatb; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0015f246: stc; call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x001257d5: stc; call dword ptr [eax - 0x39]; 
0x000256f7: stc; call dword ptr [eax - 0x73]; 
0x0012565f: stc; call dword ptr [eax - 0x73]; adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x00093392: stc; call dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x0017a67c: stc; call dword ptr [eax - 0x73]; xor dword ptr [ecx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00088ff1: stc; call dword ptr [eax - 0x75]; 
0x000f0970: stc; call dword ptr [eax - 0x77]; 
0x00024766: stc; call dword ptr [eax - 1]; 
0x00060774: stc; call dword ptr [ebp + 0x50]; 
0x00060b33: stc; call dword ptr [ebp + 0x56]; 
0x00097bde: stc; call dword ptr [ebp + 0x57]; 
0x00172a9f: stc; call dword ptr [ebp + 0x6a]; 
0x001617c2: stc; call dword ptr [ebp - 0x73]; 
0x00134c2c: stc; call dword ptr [ebp - 1]; 
0x0003fccd: stc; call dword ptr [ebx + 0x50]; 
0x0012a16d: stc; call dword ptr [ebx + 0x57]; 
0x00048ba1: stc; call dword ptr [ebx + 0x6a]; 
0x0012c999: stc; call dword ptr [ebx - 0x18]; 
0x0015320b: stc; call dword ptr [ebx - 0x73]; 
0x0006083a: stc; call dword ptr [ecx + 0x50]; 
0x0012622c: stc; call dword ptr [ecx + 0x51]; 
0x0008e31d: stc; call dword ptr [ecx + 0x52]; 
0x00175895: stc; call dword ptr [ecx + 0x6a]; 
0x001582b3: stc; call dword ptr [ecx - 0x17]; 
0x0013cf7a: stc; call dword ptr [ecx - 0x77]; 
0x00163d86: stc; call dword ptr [ecx - 1]; 
0x0012a2d0: stc; call dword ptr [edi + 0x50]; 
0x001435b7: stc; call dword ptr [edi + 0x52]; 
0x00181082: stc; call dword ptr [edi + 0x53]; 
0x00173f16: stc; call dword ptr [edi + 0x56]; 
0x00024862: stc; call dword ptr [edi + 0x57]; 
0x000531ad: stc; call dword ptr [edi + 0x6a]; 
0x0012a52f: stc; call dword ptr [edi - 0x7f]; 
0x0002802f: stc; call dword ptr [edi - 1]; 
0x00027b8f: stc; call dword ptr [edx + 0x50]; 
0x000fe2b7: stc; call dword ptr [edx + 0x52]; 
0x0016eb3e: stc; call dword ptr [edx + 0x6a]; 
0x00141591: stc; call dword ptr [edx - 0x46]; 
0x0002610b: stc; call dword ptr [edx - 0x73]; 
0x00038987: stc; call dword ptr [edx - 0x77]; 
0x00109884: stc; call dword ptr [edx - 1]; 
0x0003435d: stc; call dword ptr [esi + 0x50]; 
0x00061cd3: stc; call dword ptr [esi + 0x52]; 
0x000233d8: stc; call dword ptr [esi + 0x53]; 
0x00181d4d: stc; call dword ptr [esi + 0x57]; 
0x0005783f: stc; call dword ptr [esi + 0x6a]; 
0x001764b7: stc; call dword ptr [esi - 1]; 
0x0009e215: stc; call dword ptr gs:[0x10]; 
0x00106bbe: stc; clc; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x001132e7: stc; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x0008e978: stc; dec dword ptr [ebp + 0xb6]; add byte ptr [edx - 0x77], dl; ret; 
0x0010ba2b: stc; dec dword ptr [ebp - 0x3fceff8a]; xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x001411d4: stc; dec dword ptr [ebp - 0x68b934e]; call dword ptr [eax + 0x56]; 
0x00141159: stc; dec dword ptr [ebp - 0x68b936d]; call dword ptr [eax - 0x77]; 
0x00095cc9: stc; dec dword ptr [ebp - 0x692737f]; call dword ptr [eax - 0x73]; 
0x0013cf74: stc; dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x00106c2d: stc; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x000fb1d7: stc; dec dword ptr [ebp - 0x6b81580]; call dword ptr [ebx + 0x50]; 
0x00106f23: stc; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x0004041d: stc; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0013c20b: stc; dec dword ptr [ebp - 0x7417ff8a]; fdivp st(7); jmp dword ptr [esi - 0x70]; 
0x00123071: stc; dec dword ptr [ebx + 0x314c2444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x00128ff1: stc; dec dword ptr [ebx + 0x31502444]; ror byte ptr [ebx + 0xfc08500], cl; dec eax; ret 0xc483; 
0x000cc1de: stc; dec dword ptr [ebx - 0x27b7dbbc]; mov byte ptr [eax], dh; ret 0xfff9; 
0x0004d016: stc; dec dword ptr [ebx - 0x27e7dbbc]; mov byte ptr [eax], dh; ret 0xfff9; 
0x000a2a36: stc; dec dword ptr [ebx - 0x72ebdb8c]; xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x001269d1: stc; dec dword ptr [ecx + 0x3c938d16]; jl 0x1269d0; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00126d78: stc; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x00127390: stc; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x00126406: stc; dec dword ptr [ecx + 0x7c938d16]; jo 0x126405; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012695c: stc; dec dword ptr [ecx + 0xc938d16]; jl 0x12695b; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0002726d: stc; dec dword ptr [ecx - 0x48f0e6b0]; xchg edi, eax; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x000381dd: stc; dec dword ptr [ecx - 0x48f0f7b0]; xchg ebx, eax; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00027fa1: stc; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x00126b2b: stc; dec dword ptr [ecx - 0x536c72ea]; push -0xa; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0012722c: stc; dec dword ptr [ecx - 0x636c72ea]; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x00126bca: stc; dec dword ptr [ecx - 0x6c72f3aa]; cld; ret 0xffe7; 
0x0003febf: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe33: stc; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00040423: stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x00040313: stc; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003fee0: stc; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0003fd16: stc; dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x0003a204: stc; dec dword ptr [edi]; inc ebp; call 0x2b9f6; jmp dword ptr [esi - 0x70]; 
0x0011cada: stc; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x001581dd: stc; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x00123263: stc; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x0005ab27: stc; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x00085f83: stc; inc dword ptr [ebx + 0x45c710c4]; add byte ptr [eax], al; add byte ptr [eax], al; add bl, ch; ret; 
0x0008e71e: stc; inc dword ptr [ebx - 0x3b7cef3c]; add al, 0x5b; pop esi; ret; 
0x0009088c: stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x00087556: stc; inc dword ptr [ebx - 0x3fceeb3c]; pop ebx; pop esi; ret; 
0x0008e313: stc; inc dword ptr [ebx - 0x72aff314]; and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x0003a123: stc; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x000959f2: stc; inc dword ptr [ebx - 0x7e45f440]; add eax, 0xa30f0000; ret 0x830f; 
0x00111311: stc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x001535c0: stc; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00111f48: stc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000900e7: stc; jmp dword ptr [ebp - 0x39]; 
0x00047345: stc; jmp dword ptr [ebp - 0x75]; 
0x001291e6: stc; jmp dword ptr [ecx]; 
0x0019e8d6: stc; jmp dword ptr [esi + 0xf]; 
0x000848ba: stc; jmp dword ptr [esi - 0x70]; 
0x00027277: stc; jmp dword ptr [esi - 0x77]; 
0x000d8c13: stc; mov dh, 0xf5; dec dword ptr [ebx - 0x364b73]; dec dword ptr [ebp - 0x661c37f]; call dword ptr [eax - 0x73]; 
0x0010b55b: stc; mov dword ptr [eax], 0; mov dword ptr [eax + 8], 0; mov dword ptr [eax + 4], 0; pop ebx; ret; 
0x000952c0: stc; mov ebx, eax; mov eax, 0x10e; call dword ptr gs:[0x10]; 
0x00190d54: stc; mov word ptr [edx - 3], ax; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x000685bd: stc; or dh, byte ptr [edx + ebx*8 - 0x7d]; mov ebp, 0xfffffa6c; dec dword ptr [edi]; xchg ebp, eax; ret; 
0x00121088: stc; or dword ptr [esp + esi - 0x75], esi; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x0013b0d3: stc; or esp, edi; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000c6df1: stc; pop edi; cmovg eax, edx; ret; 
0x001a7e22: stc; pop edi; ret; 
0x000650d2: stc; pop edx; jbe 0x65a70; mov edi, dword ptr [esp + 0x58]; jmp eax; 
0x00070da9: stc; pop edx; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x000c377e: stc; pop esi; ret; 
0x0017e5a7: stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00094663: stc; ret; 
0x001a6ff1: stc; sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000df247: stc; sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdf258; mov eax, edx; ret; 
0x0007987f: std; aad 4; add byte ptr [ebx - 0x76aff33c], al; ret; 
0x000bb126: std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb034: std; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001a24b6: std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0019d3b2: std; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x001a530a: std; add al, 0x76; ret; 
0x001a9609: std; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x000d4aa1: std; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001a775f: std; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019dead: std; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00160fb4: std; call dword ptr [eax + 0x50]; 
0x000606bc: std; call dword ptr [eax - 0x73]; 
0x00060717: std; call dword ptr [ebp + 0x50]; 
0x0010d956: std; call dword ptr [ecx + 0x6a]; 
0x0010e0a5: std; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0005b5a0: std; dec dword ptr [ebp - 0x686637a]; call dword ptr [eax - 0x73]; 
0x00114b54: std; dec dword ptr [ebx + 0x390c2454]; ret 0x6274; 
0x00059be6: std; dec dword ptr [ebx - 0x363743]; dec dword ptr [ebp - 0x6876f79]; call dword ptr [eax - 0x73]; 
0x00059bc1: std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x000564a5: std; dec dword ptr [ebx - 0x72fbdb84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0005df90: std; dec dword ptr [ebx - 0x8b4b]; dec dword ptr [ebp - 0x6845f7a]; call dword ptr [eax - 0x73]; 
0x0005dfb5: std; dec dword ptr [ebx - 0x8b63]; dec dword ptr [ebp - 0x6845f7d]; call dword ptr [eax - 0x73]; 
0x0005e0c2: std; dec dword ptr [ebx - 0x8b6b]; dec dword ptr [ebp - 0x6845f7e]; call dword ptr [eax - 0x73]; 
0x00060b2a: std; dec dword ptr [ecx - 0x7c72dbfc]; stc; call dword ptr [ebp + 0x56]; 
0x000c630f: std; fcompi st(6); jmp dword ptr [esi - 0x70]; 
0x0003bf69: std; fstp st(1); ret; 
0x0011f394: std; idiv bh; add esp, 0x2c; ret; 
0x0005be3e: std; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x0005bb9e: std; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000f0459: std; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x00140797: std; jmp dword ptr [ebp - 0x5f]; 
0x00046c1f: std; jmp dword ptr [esi - 0x70]; 
0x00173431: std; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00190d58: std; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195fa3: std; mov byte ptr [edx - 1], al; mov eax, edx; pop ebx; ret; 
0x001a4145: std; mov eax, 0; jne 0x1a4a06; pop ebx; ret; 
0x001a721b: std; mov eax, 0; jne 0x1a72f0; pop ebx; ret; 
0x000bb29f: std; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00092bfc: std; or eax, edx; mov dword ptr [ecx], eax; xor eax, eax; ret; 
0x001a7e52: std; pop edi; ret; 
0x000e8d8f: std; sbb al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x001884af: std; xor bl, bh; jmp dword ptr [esi - 0x70]; 
0x0013de6a: sti; adc al, 0xf; xchg esp, eax; ret; 
0x0012d24c: sti; adc byte ptr [eax], al; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x000b9ac7: sti; adc dword ptr [ecx], edx; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x0002b7d2: sti; add al, 0x77; xor byte ptr [ecx], cl; ret; 
0x00111605: sti; add cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x00030768: sti; add cl, byte ptr [edi]; xchg esi, eax; ret; 
0x00111577: sti; add dword ptr [edi], ecx; xchg ebp, eax; ret; 
0x0013ee79: sti; add dword ptr [edi], ecx; xchg esi, eax; ret 0xd008; 
0x000d7a98: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc139; 
0x0004992f: sti; add dword ptr [edi], ecx; xchg esp, eax; ret 0xc639; 
0x000d850c: sti; add eax, 0x891fe083; ret 0x840f; 
0x000a9173: sti; bsf eax, dword ptr [esp + 4]; mov edx, 0xffffffff; cmove eax, edx; add eax, 1; ret; 
0x0012d243: sti; call 0x187601; add edx, 0x10fbcb; mov eax, 0x123; call dword ptr gs:[0x10]; 
0x00131ff3: sti; call 0x187605; add eax, 0x10ae1b; mov eax, dword ptr [eax + 0x110]; mov eax, dword ptr [eax + 0x20]; ret; 
0x00094b53: sti; call 0x187605; add eax, 0x1a82bb; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x0008d673: sti; call 0x187605; add eax, 0x1af79b; mov eax, dword ptr [eax + 0xe6c]; ret; 
0x0003d7a3: sti; call 0x187605; add eax, 0x1ff66b; mov eax, dword ptr [eax + 0x1f0]; ret; 
0x0003d783: sti; call 0x187605; add eax, 0x1ff68b; mov eax, dword ptr [eax + 0x1f4]; ret; 
0x00034be3: sti; call 0x187605; add eax, 0x20822b; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bc3: sti; call 0x187605; add eax, 0x20824b; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba3: sti; call 0x187605; add eax, 0x20826b; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0002f803: sti; call 0x187605; add eax, 0x20d60b; mov eax, dword ptr [eax + 0x10e0]; ret; 
0x00026083: sti; call 0x187605; add eax, 0x216d8b; mov eax, dword ptr [eax + 0x10bc]; ret; 
0x00026063: sti; call 0x187605; add eax, 0x216dab; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x00025513: sti; call 0x187605; add eax, 0x2178fb; mov eax, dword ptr [eax + 0xa0]; add eax, dword ptr gs:[0]; ret; 
0x00024f93: sti; call 0x187605; add eax, 0x217e7b; lea eax, [eax - 0x69094]; ret; 
0x00024f73: sti; call 0x187605; add eax, 0x217e9b; lea eax, [eax - 0x6908c]; ret; 
0x001508ae: sti; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x0010b251: sti; clc; call dword ptr [ecx + 0x6a]; 
0x000f1077: sti; dec dword ptr [ebp + 0x26b4]; add byte ptr [eax], al; xor eax, eax; ret; 
0x001831b0: sti; dec dword ptr [ebp - 0x644977a]; call dword ptr [eax - 0x73]; 
0x00079359: sti; dec dword ptr [ebp - 0x692937a]; call dword ptr [eax - 0x73]; 
0x0018805a: sti; dec dword ptr [ebx + 0x311c2444]; fild dword ptr [eax + 0xf72007d]; xchg esp, eax; ret; 
0x0017f47a: sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645137a]; call dword ptr [eax - 0x73]; 
0x000a7de0: sti; dec dword ptr [ecx - 0x7917dbe4]; idiv ch; jmp dword ptr [esi - 0x70]; 
0x00116e33: sti; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0011f529: sti; idiv bh; add esp, 0x2c; ret; 
0x0010beeb: sti; inc dword ptr [ebx - 0x3fceef3c]; pop ebx; pop esi; pop edi; ret; 
0x00140853: sti; jmp dword ptr [esi - 0x3f]; 
0x000796ff: sti; jmp dword ptr [esi - 0x70]; 
0x00173ab1: sti; jp 0x173ab0; jmp dword ptr [esi - 0x70]; 
0x0002551a: sti; js 0x2553e; add byte ptr [ebx + 0xa080], cl; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x001800b8: sti; lock inc dword ptr [ebx + 0x448b10c4]; and al, 0xc; add esp, 0x18; pop ebx; ret; 
0x00190d14: sti; mov byte ptr [edx - 1], al; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00091520: sti; mov dword ptr [edi + 0x10], 0; mov ecx, dword ptr [edi + 0xc]; xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x00193e38: sti; mov dword ptr [edx - 4], eax; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e38: sti; mov dword ptr [edx - 4], eax; mov eax, edx; pop ebx; ret; 
0x0009c693: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; 
0x0009c693: sti; mov eax, 0x9e; call dword ptr gs:[0x10]; ret; 
0x0008c633: sti; mov eax, 0xffffffff; mov edx, eax; ret; 
0x0008be53: sti; mov eax, 0xffffffff; ret; 
0x0016c483: sti; mov eax, 1; ret; 
0x0016e713: sti; mov eax, 2; ret; 
0x0008f1a3: sti; mov eax, dword ptr [eax + 0x1c]; mov dword ptr gs:[0x7c], eax; ret; 
0x0003bbe3: sti; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x00190623: sti; mov eax, dword ptr [esp + 0x10]; mov dword ptr [eax], 0; mov eax, 0xffffffff; ret; 
0x0017a753: sti; mov eax, dword ptr [esp + 4]; add dword ptr [eax + 0x14], 4; mov eax, 1; ret; 
0x0013f3a3: sti; mov eax, dword ptr [esp + 4]; add eax, 9; and eax, 0xfffffff8; add eax, 0xc; ret; 
0x00087ee3: sti; mov eax, dword ptr [esp + 4]; and dword ptr [eax], 0xffffffcf; ret; 
0x000349a3: sti; mov eax, dword ptr [esp + 4]; and eax, 0x7f; ret; 
0x0013ced3: sti; mov eax, dword ptr [esp + 4]; bswap eax; ret; 
0x00099e63: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; xor eax, eax; ret; 
0x000915b3: sti; mov eax, dword ptr [esp + 4]; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00150133: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x10]; ret; 
0x0017a793: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x14]; ret; 
0x0008d6a3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x34]; ret; 
0x00187193: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x4c]; ret; 
0x001871b3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x50]; ret; 
0x00187243: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x54]; ret; 
0x00187233: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x58]; ret; 
0x001871c3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x5c]; ret; 
0x0009e493: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x64]; ret; 
0x00121aa3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax + 8]; and eax, 0x100f; ret; 
0x000871a3: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x200; ret; 
0x00087153: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; and eax, 0x804; ret; 
0x000e8e03: sti; mov eax, dword ptr [esp + 4]; mov eax, dword ptr [eax]; ret; 
0x0017a773: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 0xc]; add dword ptr [eax + 0x14], edx; mov eax, 1; ret; 
0x00114543: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x110], edx; xor eax, eax; ret; 
0x001871a3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0x4c], edx; ret; 
0x00091093: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 0xc], edx; xor eax, eax; ret; 
0x0010cef3: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov dword ptr [eax + 4], edx; xor eax, eax; ret; 
0x0008d333: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + 8]; sub eax, dword ptr [edx + 8]; ret; 
0x00187153: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax + edx*4]; mov eax, dword ptr [eax]; ret; 
0x00031483: sti; mov eax, dword ptr [esp + 4]; mov edx, dword ptr [esp + 8]; mov eax, dword ptr [eax]; sub eax, dword ptr [edx]; ret; 
0x00087ef3: sti; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 4; and eax, 1; ret; 
0x00087f13: sti; mov eax, dword ptr [esp + 4]; movzx eax, byte ptr [eax]; shr al, 5; and eax, 1; ret; 
0x0008d6b3: sti; mov eax, dword ptr [esp + 4]; ret; 
0x0008b463: sti; mov eax, dword ptr [esp + 4]; test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x000944f3: sti; mov eax, dword ptr [esp + 8]; cmp dword ptr [esp + 4], eax; sete al; movzx eax, al; ret; 
0x00034b23: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x38]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00034b43: sti; mov eax, dword ptr [esp + 8]; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [eax + 0x3c]; mov eax, dword ptr [eax + edx*4]; ret; 
0x00099ee3: sti; mov eax, dword ptr gs:[8]; ret; 
0x00094f03: sti; mov eax, dword ptr gs:[8]; xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x00088219: sti; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x000973f6: sti; mov ecx, 7; mov dword ptr [edi + 4], edx; xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x0017a393: sti; mov edx, dword ptr [esp + 4]; mov eax, dword ptr [edx + 0xc]; sub eax, dword ptr [edx + 0x10]; ret; 
0x0003dee3: sti; mov edx, dword ptr [esp + 4]; mov eax, edx; neg eax; cmovs eax, edx; ret; 
0x00091293: sti; mov edx, dword ptr [esp + 8]; mov eax, 0x16; cmp edx, 0x3fff; ja 0x912b0; ret; 
0x00059d11: sti; movsd dword ptr es:[edi], dword ptr [esi]; std; dec dword ptr [ebx - 0x36374b]; dec dword ptr [ebp - 0x6876f7a]; call dword ptr [eax - 0x73]; 
0x0013cee3: sti; movzx eax, word ptr [esp + 4]; rol ax, 8; ret; 
0x00193e87: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, dword ptr [esp + 8]; pop ebx; ret; 
0x00195e77: sti; movzx ecx, byte ptr [eax - 1]; mov byte ptr [edx - 1], cl; mov eax, edx; pop ebx; ret; 
0x00098dc3: sti; nop; xor eax, eax; ret; 
0x000fd506: sti; or dh, byte ptr [ecx + ebp - 0x7d]; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a7e42: sti; pop edi; ret; 
0x0014a6ff: sti; push dword ptr [eax + esi - 0x75]; test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000d4c12: sti; push dword ptr [esi + eax - 0x77]; fcomp dword ptr [ebx + 0x5e]; pop edi; ret; 
0x0010e453: sti; push ebx; mov eax, 0x2b; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0013dc43: sti; push ebx; mov eax, dword ptr [esp + 8]; mov ebx, dword ptr [eax]; mov eax, 6; call dword ptr gs:[0x10]; 
0x000272a1: sti; ret 9; 
0x00024cd3: sti; ret; 
0x0014eb6c: sti; sbb al, 0xf; xchg edi, eax; ret 0xd008; 
0x000a78df: sti; std; jmp dword ptr [esi - 0x70]; 
0x00167423: sti; sub esp, 0x18; push 0; call 0x153f30; add esp, 0x1c; ret; 
0x0003d563: sti; sub esp, 0x18; push 0; call 0x3ce00; add esp, 0x1c; ret; 
0x0016b793: sti; sub esp, 0x18; push 0xa; call 0x153f30; add esp, 0x1c; ret; 
0x00167883: sti; sub esp, 0x18; push 1; call 0x153f30; add esp, 0x1c; ret; 
0x00168cb3: sti; sub esp, 0x18; push 3; call 0x153f30; add esp, 0x1c; ret; 
0x0016a013: sti; sub esp, 0x18; push 4; call 0x153f30; add esp, 0x1c; ret; 
0x0016a693: sti; sub esp, 0x18; push 5; call 0x153f30; add esp, 0x1c; ret; 
0x0016aa33: sti; sub esp, 0x18; push 6; call 0x153f30; add esp, 0x1c; ret; 
0x0016bd13: sti; sub esp, 0x18; push 7; call 0x153f30; add esp, 0x1c; ret; 
0x0016b0b3: sti; sub esp, 0x18; push 8; call 0x153f30; add esp, 0x1c; ret; 
0x0016b4c3: sti; sub esp, 0x18; push 9; call 0x153f30; add esp, 0x1c; ret; 
0x00098c0c: sti; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0015440a: sti; xor dword ptr [ebx], eax; add byte ptr [ecx + 0xe8a06c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000349b3: sti; xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x0008c583: sti; xor eax, eax; ret; 
0x0009668d: sti; xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00086ad2: stosb byte ptr es:[edi], al; add al, byte ptr [eax]; add byte ptr [ebx - 0x137c3bbb], cl; or al, 0x56; call dword ptr [eax + 0x30]; 
0x000e7f62: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [eax + 0x194], bh; call dword ptr gs:[0x10]; 
0x000a6dda: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x4489b], cl; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0011edcd: stosb byte ptr es:[edi], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b24c4], al; ret; 
0x00149312: stosb byte ptr es:[edi], al; and eax, 0xc483fff3; adc byte ptr [ebx - 0x6272f314], al; jo 0x14937b; stc; call dword ptr [ebx - 0x18]; 
0x00080660: stosb byte ptr es:[edi], al; cli; jmp dword ptr [esi - 0x70]; 
0x0007ffb8: stosb byte ptr es:[edi], al; cmp al, 0xfa; jmp dword ptr [esi - 0x70]; 
0x0011318b: stosb byte ptr es:[edi], al; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0013ba96: stosb byte ptr es:[edi], al; hlt; jmp dword ptr [esi - 0x70]; 
0x00114669: stosb byte ptr es:[edi], al; idiv edi; add esp, 0x2c; ret; 
0x000c2d7c: stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x001262ae: stosb byte ptr es:[edi], al; push eax; stc; call dword ptr [eax + 0x55]; 
0x001a0d82: stosb byte ptr es:[edi], al; sbb dl, dh; call dword ptr [ebx - 0x18]; 
0x0013c5b9: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x0013c560: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x00038dab: stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 1]; 
0x00079822: stosb byte ptr es:[edi], al; sti; jmp dword ptr [esi - 0x70]; 
0x0010f65b: stosb byte ptr es:[edi], al; sub cl, bh; call dword ptr [eax + 0x6a]; 
0x00116581: stosd dword ptr es:[edi], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x10c2444], cl; ret 0xfa81; 
0x00050c90: stosd dword ptr es:[edi], eax; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00170a07: stosd dword ptr es:[edi], eax; cld; jmp dword ptr [esi - 0x70]; 
0x0019e8db: stosd dword ptr es:[edi], eax; fadd st(1), st(0); stc; jmp dword ptr [esi + 0xf]; 
0x000acc51: stosd dword ptr es:[edi], eax; idiv bh; cmovne eax, edx; ret; 
0x000acd5c: stosd dword ptr es:[edi], eax; insb byte ptr es:[edi], dx; je 0xacd59; call dword ptr [eax + 0x55]; 
0x0002606a: stosd dword ptr es:[edi], eax; insd dword ptr es:[edi], dx; and dword ptr [eax], eax; mov eax, dword ptr [eax + 0x10b8]; ret; 
0x000ddfe3: stosd dword ptr es:[edi], eax; mov al, byte ptr [0xf00003e]; xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x001814f9: stosd dword ptr es:[edi], eax; mov cl, 0x66; stc; call dword ptr [ebp + 0x56]; 
0x0010bd4e: stosd dword ptr es:[edi], eax; mov eax, 0xc3810007; ret 0x1310; 
0x000c2d78: stosd dword ptr es:[edi], eax; mov ecx, edx; rep stosb byte ptr es:[edi], al; mov eax, dword ptr [esp + 8]; pop edi; ret; 
0x00150a54: stosd dword ptr es:[edi], eax; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0003a120: stosd dword ptr es:[edi], eax; or dword ptr [esi - 7], eax; inc dword ptr [ebx - 0x7c72f314]; out 0x2e, eax; stc; call dword ptr [eax - 0x18]; 
0x0010cd07: stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0013a8c8: stosd dword ptr es:[edi], eax; popfd; out dx, al; jmp dword ptr [esi - 0x70]; 
0x0012e261: stosd dword ptr es:[edi], eax; push cs; idiv bh; add esp, 0x2c; ret; 
0x00076ed1: stosd dword ptr es:[edi], eax; ret 0xffff; 
0x001410d2: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax + 0x56]; 
0x0013f38b: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x0013ed93: stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x001411d3: stosd dword ptr es:[edi], eax; stc; dec dword ptr [ebp - 0x68b934e]; call dword ptr [eax + 0x56]; 
0x000797ab: stosd dword ptr es:[edi], eax; sti; jmp dword ptr [esi - 0x70]; 
0x000304da: stosd dword ptr es:[edi], eax; sub edi, ecx; call dword ptr [eax + 0x56]; 
0x0010e0c3: stosd dword ptr es:[edi], eax; test al, 0xfe; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0005f57b: stosd dword ptr es:[edi], eax; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0013cebc: str word ptr [ebx + 0xc880]; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0004a44d: str word ptr [ebx - 0x72e7db84]; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x0004a6a9: str word ptr [ecx]; ret 0x840f; 
0x0009da50: sub ah, 0x3b; add byte ptr [eax], al; mov dword ptr [eax + 0xc], ecx; ret; 
0x000300a4: sub ah, 0x72; stc; call dword ptr [eax - 0x73]; 
0x00156557: sub ah, 0x93; int1; call dword ptr [eax - 1]; 
0x0013a198: sub ah, 0xa9; stc; call dword ptr [eax - 0x18]; 
0x0015bc9f: sub ah, 0xda; int1; call dword ptr [eax - 0x73]; 
0x000c3917: sub ah, 1; add byte ptr [eax], al; ret; 
0x000acb18: sub al, 0; idiv bh; and ch, 2; lea edx, [edx - 0x18c994]; cmove eax, edx; ret; 
0x00095192: sub al, 0x1b; add byte ptr [eax], al; jne 0x951a0; xor eax, eax; pop ebx; ret; 
0x000a0289: sub al, 0x1b; mov eax, 0x107; mov ebx, dword ptr [ebp]; call dword ptr gs:[0x10]; 
0x000726c4: sub al, 0x20; add byte ptr [eax], al; add byte ptr [ecx - 0x76cfdbbc], cl; ret 0x44c7; 
0x000a5eea: sub al, 0x21; ret 0x448b; 
0x00055304: sub al, 0x24; add esp, 0x1c; ret; 
0x0009e228: sub al, 0x24; call 0x23190; mov dword ptr [esp], esi; call edi; 
0x00160f4d: sub al, 0x24; call ebx; 
0x00160bb7: sub al, 0x24; call edi; 
0x001508b5: sub al, 0x24; call esi; 
0x0018760e: sub al, 0x24; ret; 
0x0018854c: sub al, 0x2b; inc esi; and al, 0x29; ret; 
0x000876a2: sub al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x000606c1: sub al, 0x32; stc; call dword ptr [eax + 0x6a]; 
0x001505eb: sub al, 0x33; int1; call dword ptr [esi + 0x50]; 
0x00121d3e: sub al, 0x38; mov eax, 0x36; call dword ptr gs:[0x10]; 
0x00159a48: sub al, 0x39; ret; 
0x0010a97d: sub al, 0x39; sal byte ptr [esi + ecx - 0x77], 1; ret 0xf189; 
0x000aca58: sub al, 0x3f; idiv bh; and ch, 2; lea edx, [edx - 0x17a7e4]; cmove eax, edx; ret; 
0x00131556: sub al, 0x46; out dx, eax; call dword ptr [eax - 0x18]; 
0x0012c8d3: sub al, 0x47; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0016477b: sub al, 0x4d; int1; call dword ptr [eax - 0x73]; 
0x001412cd: sub al, 0x50; push dword ptr [esp + 0x2c]; call 0x1407d0; add esp, 0x2c; ret; 
0x0009aa8e: sub al, 0x52; call 0x94f20; add esp, 0x20; add esp, 0xc; ret; 
0x0008ed22: sub al, 0x52; push ecx; push edi; call eax; 
0x0008a620: sub al, 0x55; push edi; push ebx; call dword ptr [esi + 0x40]; 
0x001769c4: sub al, 0x55; push esi; push 3; push edi; call dword ptr [eax]; 
0x000a9d71: sub al, 0x57; call 0xc24ead77; ret; 
0x000a4810: sub al, 0x58; add dword ptr [ecx + 0x63e9047e], ecx; idiv bh; dec dword ptr [ebp - 0x666ab79]; call dword ptr [eax - 0x73]; 
0x001736b6: sub al, 0x58; pop edx; push 0; push edi; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x14]; 
0x0008e297: sub al, 0x5b; pop esi; pop edi; pop ebp; jmp eax; 
0x000234cd: sub al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x000ac6e0: sub al, 0x65; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000c10e1: sub al, 0x65; or al, 0; add ecx, 0x109f8f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00120c8e: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d0e: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00124053: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x0012b7a1: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x0009c632: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x000a04fa: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000dacb4: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dc5b3: sub al, 0x65; sub edx, dword ptr [0x14]; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x00143228: sub al, 0x66; cmp ebx, 0x950f0308; ret; 
0x001463ea: sub al, 0x6a; lldt word ptr [ebx - 0x77]; ret; 
0x0012e29b: sub al, 0x6a; pushfd; call 0x11f2e0; add esp, 0x20; add esp, 0xc; ret; 
0x00028884: sub al, 0x6c; stc; call dword ptr [eax + 0x68]; 
0x0002879f: sub al, 0x6c; stc; call dword ptr [eax - 0x73]; 
0x001a6ff2: sub al, 0x74; sbb eax, dword ptr [ebx - 0x7bf0d207]; ret 0; 
0x000d9cb5: sub al, 0x75; pop eax; pop edi; pop esi; ret; 
0x0005dfad: sub al, 0x7b; stc; call dword ptr [eax - 0x18]; 
0x000c866e: sub al, 0x81; ret 0; 
0x00034c4e: sub al, 0x81; ret 0x200; 
0x00173380: sub al, 0x82; cld; jmp dword ptr [esi - 0x70]; 
0x001244e6: sub al, 0x83; in al, dx; add al, 0x89; ret; 
0x000293db: sub al, 0x83; les ebx, ptr [ebx + ebx*2 + 0x5e]; pop edi; pop ebp; jmp eax; 
0x00175a2b: sub al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001841ba: sub al, 0x83; les esi, ptr [eax]; pop ebx; pop esi; pop edi; jmp eax; 
0x001a3a13: sub al, 0x83; ret 0x7e10; 
0x0013f18b: sub al, 0x83; ret 0x8902; 
0x001062d2: sub al, 0x83; ret; 
0x00172176: sub al, 0x83; ror byte ptr [eax], 0x89; inc esp; and al, 4; jmp edx; 
0x00082029: sub al, 0x83; stc; call dword ptr [eax - 0x73]; 
0x00038e46: sub al, 0x89; call 0x5d62eca8; ret; 
0x000e7f14: sub al, 0x89; call 0x5d6ddd76; ret; 
0x000f0816: sub al, 0x89; call 0x5d6e6678; ret; 
0x0010ab06: sub al, 0x89; call 0x5d700968; ret; 
0x0010ec8f: sub al, 0x89; call 0x5d704af1; ret; 
0x0010edad: sub al, 0x89; call 0x5d704c0f; ret; 
0x0009074d: sub al, 0x89; fcomp dword ptr [ebx + 0x5e]; pop edi; pop ebp; ret; 
0x000ad19b: sub al, 0x89; je 0xad1c3; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x0016eea0: sub al, 0x89; pop eax; xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000dc030: sub al, 0x89; rcr byte ptr [ebx + 0x5e], 1; pop edi; pop ebp; ret; 
0x000a02f3: sub al, 0x89; ret 0x408b; 
0x0003fec4: sub al, 0x89; ret 0x4489; 
0x0003fe38: sub al, 0x89; ret 0xc189; 
0x000a26c0: sub al, 0x89; ret; 
0x001b2998: sub al, 0x89; test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x000348a5: sub al, 0x8b; add al, 0x90; ret; 
0x0017236d: sub al, 0x8b; add al, byte ptr [ebp - 0x7ce58b40]; in al, dx; or al, 0x83; ret 0x5208; 
0x0012f40d: sub al, 0x8b; inc esp; and al, 0x68; mov dword ptr [esp + 0x30], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x0009bdf4: sub al, 0x8b; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x00121e79: sub al, 0x8b; je 0x121ea1; inc esp; mov ebx, dword ptr [esp + 0x40]; lea edx, [esp + 8]; call dword ptr gs:[0x10]; 
0x0012600d: sub al, 0x8b; jl 0x126035; xor byte ptr [ebp - 0x6b32d7d], cl; call dword ptr [eax + 0x55]; 
0x00129cab: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x00129c0b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x0010c37b: sub al, 0x8b; pop esp; and al, 0x30; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x00034966: sub al, 0x8b; test byte ptr [eax + 0x200], dl; ret; 
0x00043c5b: sub al, 0x8b; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x00128aef: sub al, 0x8d; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x0017cd8d: sub al, 0x8d; inc esi; adc byte ptr [ecx], al; ret; 
0x0016d264: sub al, 0x8d; test al, 0xcc; add esi, ebx; jmp dword ptr [ebp - 0x75]; 
0x00049279: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481aa: sub al, 0x8d; test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004b666: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e2: sub al, 0x8d; test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x000a569f: sub al, 0x8d; xchg eax, edx; cwde; stc; call dword ptr [eax - 0x73]; 
0x000a2b30: sub al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x00161580: sub al, 0xa0; std; jmp dword ptr [esi - 0x70]; 
0x0012bb20: sub al, 0xa5; stc; call dword ptr [eax - 0x18]; 
0x0012ed66: sub al, 0xa6; stc; call dword ptr [eax - 0x18]; 
0x00132977: sub al, 0xa7; stc; call dword ptr [eax - 0x18]; 
0x001a9e83: sub al, 0xa8; pcmpeqw mm3, qword ptr [eax]; test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x001411d1: sub al, 0xab; stc; dec dword ptr [ebp - 0x68b934e]; call dword ptr [eax + 0x56]; 
0x0014f788: sub al, 0xaf; stc; call dword ptr [eax - 0x18]; 
0x0014fa80: sub al, 0xb1; stc; call dword ptr [eax - 0x73]; 
0x000a05ec: sub al, 0xb8; add al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00115955: sub al, 0xb8; sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a9c50: sub al, 0xbf; idiv bh; cmovne eax, edx; ret; 
0x000a0182: sub al, 0xc7; inc esp; and al, 0x34; add al, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0015ad67: sub al, 0xc9; int1; call dword ptr [eax + 0x6a]; 
0x000a08ad: sub al, 0xdd; clc; jmp dword ptr [ebp - 1]; 
0x0011f4d3: sub al, 0xe8; aaa; cld; idiv bh; add esp, 0x2c; ret; 
0x000438d6: sub al, 0xe8; and al, 0; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0011feea: sub al, 0xe8; and dl, dh; idiv bh; add esp, 0x2c; ret; 
0x00101a8b: sub al, 0xe8; call dword ptr [esi]; 
0x0018df70: sub al, 0xe8; cmp bh, ah; idiv edi; add esp, 0x2c; ret; 
0x000e3120: sub al, 0xe8; dec edx; dec eax; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0019085e: sub al, 0xe8; dec esp; ljmp 0xc019:0xd8f7fffc; add esp, 0x2c; ret; 
0x00136522: sub al, 0xe8; fadd st(7); clc; dec dword ptr [ebx - 0x7ccbdbb4]; les ecx, ptr [ecx + ecx*4]; ret; 
0x0012be2d: sub al, 0xe8; fnsave dword ptr [edx]; idiv bh; add esp, 0x2c; ret; 
0x00128ba5: sub al, 0xe8; idiv bh; add esp, 0x28; pop ebx; ret; 
0x00123f26: sub al, 0xe8; in al, 0xb1; idiv bh; add esp, 0x2c; ret; 
0x0011f526: sub al, 0xe8; in al, 0xfb; idiv bh; add esp, 0x2c; ret; 
0x00121025: sub al, 0xe8; in eax, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x0011f69d: sub al, 0xe8; insd dword ptr es:[edi], dx; cli; idiv bh; add esp, 0x2c; ret; 
0x00128c91: sub al, 0xe8; jns 0x128cf9; idiv bh; add esp, 0x2c; ret; 
0x000fbb20: sub al, 0xe8; ljmp 0x2cc4:0x83fff935; ret; 
0x00121053: sub al, 0xe8; mov bh, 0xe0; idiv bh; add esp, 0x2c; ret; 
0x00051632: sub al, 0xe8; mov byte ptr [eax], al; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0003cd59: sub al, 0xe8; mov cl, 0x23; add eax, 0x2cc48300; ret; 
0x00114758: sub al, 0xe8; mov dl, 0xa9; idiv edi; add esp, 0x2c; ret; 
0x00160252: sub al, 0xe8; mov eax, 0x89000246; xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00114666: sub al, 0xe8; movsb byte ptr es:[edi], byte ptr [esi]; stosb byte ptr es:[edi], al; idiv edi; add esp, 0x2c; ret; 
0x00128765: sub al, 0xe8; movsd dword ptr es:[edi], dword ptr [esi]; imul esi, esi, 0x28c483ff; pop ebx; ret; 
0x000516b0: sub al, 0xe8; or al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0018dfa0: sub al, 0xe8; or bh, ah; idiv edi; add esp, 0x2c; ret; 
0x0018796b: sub al, 0xe8; pop ds; aad 0xf8; inc dword ptr [ebx - 0x77cef3c]; push dword ptr [esp + edi*4 - 0x77]; ret 0xe283; 
0x000614cc: sub al, 0xe8; push cs; dec esi; add al, byte ptr [eax]; add esp, 0x2c; ret; 
0x000e5f88: sub al, 0xe8; ret 0xf3d1; 
0x000e5b88: sub al, 0xe8; ret 0xf3d5; 
0x00190788: sub al, 0xe8; ret 0xfcd4; 
0x000ecaf7: sub al, 0xe8; ret; 
0x0004d980: sub al, 0xe8; sbb al, byte ptr [eax]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0013b0d1: sub al, 0xe8; stc; or esp, edi; inc dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x00094661: sub al, 0xe8; stc; ret; 
0x0012e25f: sub al, 0xe8; stosd dword ptr es:[edi], eax; push cs; idiv bh; add esp, 0x2c; ret; 
0x0010c880: sub al, 0xe8; sub dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x0012cde1: sub al, 0xe8; sub dword ptr [ebx], esp; idiv bh; add esp, 0x2c; ret; 
0x00091896: sub al, 0xe8; test byte ptr [esi], dh; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x001150d5: sub al, 0xe8; xor eax, 0x83fff7a0; les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x000fde61: sub al, 0xe9; mov ebx, 0x83fffffd; in al, dx; or byte ptr [ebp - 0x6b7ef7d], cl; call dword ptr [eax + 0x55]; 
0x00151636: sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x00140f2c: sub al, 0xf9; call dword ptr [eax + 0x55]; 
0x00114d78: sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x00031fe6: sub al, 0xf9; call dword ptr [eax - 0x18]; 
0x00139d42: sub al, 0xf9; call dword ptr [eax - 0x73]; 
0x00106bbd: sub al, 0xf9; clc; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00106f22: sub al, 0xf9; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x0004041c: sub al, 0xf9; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003febe: sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe32: sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00040312: sub al, 0xf9; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003fedf: sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0003fd15: sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x001581dc: sub al, 0xf9; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0008e312: sub al, 0xf9; inc dword ptr [ebx - 0x72aff314]; and dword ptr [edi + edi], 0xfffffff9; call dword ptr [ecx + 0x52]; 
0x00063585: sub al, 0xf; mov dh, 0x94; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x0012cf5f: sub al, 0xf; mov dh, 0xc0; neg eax; ret; 
0x0010b5ae: sub al, 0xf; mov dh, 0xc0; ret; 
0x0011e35f: sub al, 0xf; xchg ebp, eax; ret 0x7c89; 
0x00149172: sub al, 0xf; xchg ebp, eax; ret; 
0x00030409: sub al, 0xf; xchg esp, eax; ret 0xca08; 
0x000c4893: sub al, 0xff; aaa; mov eax, dword ptr [esp + 0x38]; call eax; 
0x001949cd: sub al, 0xff; inc dword ptr [ecx + 0x44f50c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001302f6: sub al, 0xff; je 0x13031e; sub byte ptr [edx + 0xb], ch; call 0x8f110; add esp, 0x2c; ret; 
0x00190780: sub al, 0xff; je 0x1907a8; sub al, 0xff; je 0x1907ac; sub al, 0xe8; ret 0xfcd4; 
0x00190784: sub al, 0xff; je 0x1907ac; sub al, 0xe8; ret 0xfcd4; 
0x0008e9d7: sub al, 0xff; je 0x8e9ff; cmp al, 0x51; push dword ptr [esp + 0x3c]; call eax; 
0x000fbb1c: sub al, 0xff; je 0xfbb44; sub al, 0xe8; ljmp 0x2cc4:0x83fff935; ret; 
0x00115957: sub al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d1e2: sub al, 1; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x14]; mov esi, dword ptr [esp + 0x20]; call dword ptr gs:[0x10]; 
0x000c3907: sub al, 1; add byte ptr [eax], al; ret; 
0x0016f185: sub al, 1; ret 0x5689; 
0x000888a7: sub al, 1; ret 0xe852; 
0x00064149: sub al, 1; ret; 
0x00093084: sub al, 2; add byte ptr [eax], al; sub esp, 0xc; mov eax, dword ptr [edi + 0x228]; push edx; call eax; 
0x00196e04: sub al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0008fd57: sub al, 6; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; pop ebx; ret; 
0x0008fd0b: sub al, 6; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x000a08c6: sub al, bh; dec dword ptr [ebx - 0x76e3dbbc]; add al, 0x24; call esi; 
0x0019702b: sub al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017270a: sub al, byte ptr [ebx + 0x5e5b5cc4]; pop edi; pop ebp; ret; 
0x00114e68: sub al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00167352: sub al, ch; dec eax; ret 0xfff5; 
0x001469ac: sub al, ch; mov esi, 0x89ffff4b; ret 0x2eb8; 
0x0017e3c7: sub al, ch; ret; 
0x000ebb22: sub al, dh; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x0011447e: sub bh, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0018baf8: sub bh, 0xff; dec dword ptr [ebx - 0x46f7b]; jmp dword ptr [ebp - 0x75]; 
0x0012cef0: sub bh, 0xff; ret; 
0x00178b35: sub bh, ah; call dword ptr [eax - 0x73]; 
0x000308b5: sub bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x00194dbe: sub bh, bh; inc dword ptr [ecx + 0x44a9fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194d25: sub bh, bh; inc dword ptr [ecx + 0x44b38c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194bd5: sub bh, bh; inc dword ptr [ecx + 0x44c88c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194b1e: sub bh, bh; inc dword ptr [ecx + 0x44d3fc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011f2c2: sub bh, bh; je 0x11f2ea; sub byte ptr [edx - 0x64], ch; call 0x11f2e0; add esp, 0x2c; ret; 
0x00133327: sub bh, bh; je 0x13334f; cmp al, 0xe8; outsd dx, dword ptr [esi]; add bh, cl; jmp dword ptr [ebp - 0x75]; 
0x00036840: sub bh, bh; je 0x36868; sub byte ptr [edx], ch; call 0x367d0; add esp, 0x2c; ret; 
0x0016c44b: sub bh, bh; jo 0x16c463; push eax; push edx; call dword ptr [ecx + 0xc]; 
0x000a025d: sub bh, byte ptr [eax + 0x107]; call dword ptr gs:[0x10]; 
0x0012c7ab: sub bh, byte ptr [eax - 1]; add esp, 8; pop ebx; ret; 
0x000287e9: sub bh, cl; call dword ptr [eax - 0x18]; 
0x00028891: sub bh, cl; call dword ptr [eax - 0x73]; 
0x000c6a88: sub bh, cl; jmp dword ptr [ebp - 0x75]; 
0x00171c59: sub bl, ch; or al, 0x8d; je 0x171c85; add byte ptr [ecx], ch; ret; 
0x000c4d30: sub byte ptr [0x440f0000], bh; ret 0x8b65; 
0x0012605c: sub byte ptr [0xec830000], al; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x00128af7: sub byte ptr [eax + 0x1a], bh; call dword ptr gs:[0x10]; 
0x000a51b1: sub byte ptr [eax + 0x3c], 0; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x00089e62: sub byte ptr [eax + 0x56], dl; call dword ptr [edx + 0x48]; 
0x0016e122: sub byte ptr [eax + 0x57], dl; call dword ptr [ecx + 0x18]; 
0x0012fda1: sub byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x0012c6ea: sub byte ptr [eax + 0x78], bh; mov dword ptr [ecx], ebx; int 0x80; 
0x00114f3c: sub byte ptr [eax + 0xdd], bh; call dword ptr gs:[0x10]; 
0x000acb17: sub byte ptr [eax + eax], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x00197224: sub byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a9b34: sub byte ptr [eax + ebx*4 - 0xb], 0xff; and ebx, 1; lea edx, [edx - 0xa2564]; cmovne eax, edx; pop ebx; ret; 
0x00038132: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 0x75]; 
0x000ce0a8: sub byte ptr [eax + edi*8], 0xff; call dword ptr [eax - 1]; 
0x000d4b4c: sub byte ptr [eax - 0x73], dl; inc esp; and al, 0x34; push eax; push dword ptr [esi + 8]; call ebx; 
0x0018471c: sub byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x001503f3: sub byte ptr [eax - 0x7affffb2], 0xc0; jne 0x150407; ret; 
0x00169ad6: sub byte ptr [eax - 0x7d], dl; rcr byte ptr [eax], 0x50; call 0x169880; add esp, 0x2c; ret; 
0x00054f26: sub byte ptr [eax - 0xa], dl; ret 0x7501; 
0x0015f244: sub byte ptr [eax - 7], ah; call dword ptr [eax - 0x18]; 
0x0015f244: sub byte ptr [eax - 7], ah; call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x0013cf72: sub byte ptr [eax - 7], bl; dec dword ptr [ebp - 0x6a7cc7a]; call dword ptr [ecx - 0x77]; 
0x000fdc5d: sub byte ptr [eax - 7], cl; call dword ptr [eax + 0x55]; 
0x0008b8e4: sub byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0011ffa1: sub byte ptr [eax], al; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x000ec30c: sub byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0016aa12: sub byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax + 0x6a]; 
0x0016ab12: sub byte ptr [ebp + 0x63], 0xf9; call dword ptr [eax - 0x18]; 
0x0016aa66: sub byte ptr [ebp + 0x63], 0xf9; jmp dword ptr [ebp - 0x75]; 
0x000d9caa: sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x000c4d25: sub byte ptr [ebp + 0x788a8bc0], al; add dword ptr [eax], eax; add byte ptr [ebp + 0x3d2892], cl; add byte ptr [edi], cl; inc esp; ret 0x8b65; 
0x0013af07: sub byte ptr [ebp + ecx*2 - 0x6674000b], 0x9c; add dword ptr [eax], eax; add dh, dh; ret; 
0x0012caec: sub byte ptr [ebp - 0x57c16b0], cl; add dword ptr [edi], ecx; xchg edi, eax; ret 0xf883; 
0x00183a06: sub byte ptr [ebp - 0x644b379], cl; call dword ptr [eax - 0x73]; 
0x0017bc64: sub byte ptr [ebp - 0x6454779], cl; call dword ptr [eax - 0x73]; 
0x00169387: sub byte ptr [ebp - 0x649db79], cl; call dword ptr [eax - 0x73]; 
0x0011ea64: sub byte ptr [ebp - 0x65ccb7d], cl; call dword ptr [eax - 0x73]; 
0x00095777: sub byte ptr [ebp - 0x67c3b80], cl; call dword ptr [eax - 0x18]; 
0x00051207: sub byte ptr [ebp - 0x6878779], cl; call dword ptr [eax - 0x73]; 
0x00051306: sub byte ptr [ebp - 0x687c379], cl; call dword ptr [eax - 0x73]; 
0x00183a4c: sub byte ptr [ebp - 0x690b379], cl; call dword ptr [eax - 0x73]; 
0x0002948b: sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax + 0x68]; 
0x00029323: sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x0016bd44: sub byte ptr [ebp - 0x69c5f80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b7c4: sub byte ptr [ebp - 0x69c6b80], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b4f4: sub byte ptr [ebp - 0x69c7880], cl; jmp dword ptr [ebp - 0x75]; 
0x0016b0e4: sub byte ptr [ebp - 0x69c8680], cl; jmp dword ptr [ebp - 0x75]; 
0x0016aa64: sub byte ptr [ebp - 0x69c9280], cl; jmp dword ptr [ebp - 0x75]; 
0x0016a6c4: sub byte ptr [ebp - 0x69ca180], cl; jmp dword ptr [ebp - 0x75]; 
0x00167c24: sub byte ptr [ebp - 0x69d6180], cl; jmp dword ptr [ebp - 0x75]; 
0x001678b4: sub byte ptr [ebp - 0x69d6d80], cl; jmp dword ptr [ebp - 0x75]; 
0x00145560: sub byte ptr [ebp - 0x6a5d07d], cl; call dword ptr [eax + 0x68]; 
0x0003f82f: sub byte ptr [ebp - 0x6d0dd7d], cl; call dword ptr [eax - 0x18]; 
0x000df16e: sub byte ptr [ebp - 0x72b28b0a], al; push esp; and al, 0x2c; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000d1c7d: sub byte ptr [ebp - 0x7d368], cl; call dword ptr [ebx - 1]; 
0x0004fb2a: sub byte ptr [ebp - 0x7d368], cl; dec dword ptr [ebp - 0x6d06680]; call dword ptr [ebx + 0x6a]; 
0x0004f83b: sub byte ptr [ebp - 0x7d379], cl; call dword ptr [eax - 0x73]; 
0x000d1952: sub byte ptr [ebp - 0x7d380], cl; call dword ptr [eax - 1]; 
0x000381e5: sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x00121086: sub byte ptr [ebx + 0x347409f9], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000e0a59: sub byte ptr [ebx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x00173df8: sub byte ptr [ebx + 0x50510450], cl; call dword ptr [edx + 8]; 
0x001772a5: sub byte ptr [ebx + 0x50510850], cl; call dword ptr [edx + 0xc]; 
0x00134d7b: sub byte ptr [ebx + 0x53500cc4], al; push 0x2000001; call dword ptr [ebp + 0x14]; 
0x00125c0e: sub byte ptr [ebx + 0x548b20c4], al; and al, 0xc; sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x00171ca3: sub byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x001580de: sub byte ptr [ebx + 0x5e5b2cc4], al; pop edi; pop ebp; ret; 
0x000a69a8: sub byte ptr [ebx + 0x5e5b3cc4], al; pop edi; pop ebp; ret; 
0x0002a04d: sub byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; jmp eax; 
0x0002d6e3: sub byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x0012b79d: sub byte ptr [ebx + 0x652c2454], cl; sub edx, dword ptr [0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x001791c2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x001791c2: sub byte ptr [ebx + ebx - 0x7d], dh; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; call edi; 
0x0009a112: sub byte ptr [ebx + edi], 0; push eax; call 0x90b90; add esp, 0x1c; ret; 
0x00184080: sub byte ptr [ebx - 0x2776db3c], al; pop ebx; pop esi; ret; 
0x0003ca8a: sub byte ptr [ebx - 0x2776ef3c], al; pop ebx; pop esi; pop edi; ret; 
0x001213a7: sub byte ptr [ebx - 0x47efdbb4], cl; daa; add dword ptr [eax], eax; add byte ptr [ebx - 0x64], bh; call dword ptr gs:[0x10]; 
0x00128aeb: sub byte ptr [ebx - 0x72d3db8c], cl; inc ebx; inc dword ptr [ebx + 0x287602f8]; mov eax, 0x1a; call dword ptr gs:[0x10]; 
0x000e09bc: sub byte ptr [ebx - 0x72dbdbbc], cl; and byte ptr [edx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x000e0a53: sub byte ptr [ebx - 0x72dbdbbc], cl; sub byte ptr [ebx + 0x46], 0xf9; call dword ptr [eax + 0x53]; 
0x0009bdf0: sub byte ptr [ebx - 0x74d3db84], cl; insb byte ptr es:[edi], dx; and al, 0x30; int 0x80; 
0x00126009: sub byte ptr [ebx - 0x74d3db8c], cl; jl 0x126035; xor byte ptr [ebp - 0x6b32d7d], cl; call dword ptr [eax + 0x55]; 
0x001214a7: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00121427: sub byte ptr [ebx - 0x74ebdbb4], cl; pop esp; and al, 0x10; or dh, 0x80; mov eax, 0x127; call dword ptr gs:[0x10]; 
0x00157b8e: sub byte ptr [ebx - 0x74ebdbbc], cl; or cl, ch; ret 0xfffe; 
0x000ad197: sub byte ptr [ebx - 0x76d3dbac], cl; je 0xad1c3; sbb al, 0x83; rol byte ptr [ecx], 0x83; ret; 
0x000ecddb: sub byte ptr [ebx - 0x76d7dbb4], cl; ret 0xf983; 
0x00184267: sub byte ptr [ebx - 0x7aebdbac], cl; sal byte ptr [edx + eax - 0x75], cl; add al, byte ptr [ebx]; inc ebx; add al, 0x89; ret; 
0x0003726b: sub byte ptr [ebx - 0x7bf0d3c0], cl; ret; 
0x0013f187: sub byte ptr [ebx - 0x7cd3db8c], cl; ret 0x8902; 
0x001352e3: sub byte ptr [ebx - 0xaff33c], al; je 0x13530f; or al, 0x68; add dword ptr [eax], eax; add byte ptr [edx], al; call dword ptr [ebp + 0x14]; 
0x0009b664: sub byte ptr [ebx - 8], bh; dec dword ptr [ebp - 0x3b7c00bb]; adc byte ptr [ebx - 0x69f00208], al; ret; 
0x00180664: sub byte ptr [ebx], ch; ljmp 0xec83:0x10c483ff; or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x0002c647: sub byte ptr [ebx], ch; stc; call dword ptr [eax - 0x18]; 
0x000679a4: sub byte ptr [ebx], dl; add ch, bl; fdivr dword ptr [ecx]; ret 0x840f; 
0x0017e8ed: sub byte ptr [ecx + 0x245c89d9], cl; adc byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc105; 
0x000379be: sub byte ptr [ecx + 0x39f329cb], cl; ret; 
0x00024763: sub byte ptr [ecx + 0x59], 0xf9; call dword ptr [eax - 1]; 
0x00175b59: sub byte ptr [ecx + 0x6a], dl; add al, 0x50; call dword ptr [edx + 0x14]; 
0x0005b01d: sub byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x66600; add esp, 0x1c; ret; 
0x00080b3d: sub byte ptr [ecx + eax], 0; push dword ptr [eax]; call 0x72ca0; add esp, 0x1c; ret; 
0x0014b9b0: sub byte ptr [ecx - 0x4436b], cl; jmp dword ptr [ebp - 0x5f]; 
0x001772a1: sub byte ptr [ecx - 0x74d7dbac], cl; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000fccb0: sub byte ptr [ecx - 0x76ebdbbc], cl; ret 0x478b; 
0x0014f2d3: sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x4424bc66; ret 0x148b; 
0x00070cee: sub byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x0011f23e: sub byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001a8264: sub byte ptr [ecx], al; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x0003d63b: sub byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x000a73eb: sub byte ptr [ecx], al; je 0xa74c8; sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x000a75a6: sub byte ptr [ecx], al; jne 0xa7580; sub esp, 0xc; push eax; call edx; 
0x00081fc4: sub byte ptr [ecx], al; ret 0xe852; 
0x000d9ca7: sub byte ptr [ecx], bh; dec edi; sub byte ptr [ebp + 0x63], dh; pop edi; pop esi; ret; 
0x0004828a: sub byte ptr [ecx], bh; ret 0x840f; 
0x00147c1d: sub byte ptr [ecx], bh; ret 0x9f7e; 
0x0019069e: sub byte ptr [ecx], cl; rcr byte ptr [ebx + 0xf], 1; mov dh, 0xc0; neg eax; ret; 
0x001ac865: sub byte ptr [ecx], dh; call ebx; 
0x000ea40c: sub byte ptr [ecx], dh; not byte ptr [ebp - 0x18]; fstp xword ptr [ecx]; cmc; jmp dword ptr [ebp - 0x5f]; 
0x0005ec73: sub byte ptr [ecx], dh; rol byte ptr [ebx + 0xf41087f], cl; xchg esp, eax; ret 0x6a52; 
0x000f0622: sub byte ptr [edi + 0x2e], 0xf9; call dword ptr [eax - 0x75]; 
0x0013438c: sub byte ptr [edi + 0x55], 0xf9; call dword ptr [eax - 1]; 
0x000d9ce7: sub byte ptr [edi + 0x5e], bl; ret; 
0x00024f9f: sub byte ptr [edi + ebp*2 - 7], 0xff; ret; 
0x000df248: sub byte ptr [edi + ecx*4 + 2], bl; jbe 0xdf258; mov eax, edx; ret; 
0x000aca57: sub byte ptr [edi + edi], 0xf6; inc dword ptr [eax - 0x6d72fd1b]; sbb al, 0x58; call 0xc24eda67; ret; 
0x001926d1: sub byte ptr [edi - 1], cl; inc dword ptr [ecx + 0x470cbc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011e327: sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x001a845c: sub byte ptr [edi], 1; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x00108e9b: sub byte ptr [edi], cl; mov dh, 0x46; add al, 0x89; ret 0xe283; 
0x0005fd3b: sub byte ptr [edi], cl; mov dh, 0x56; or al, 0xf6; ret 0xf01; 
0x0005a114: sub byte ptr [edi], cl; mov esi, 0x8b1b244c; je 0x5a141; sbb al, 0x89; ret 0xc801; 
0x0017e902: sub byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001302fa: sub byte ptr [edx + 0xb], ch; call 0x8f110; add esp, 0x2c; ret; 
0x001933ba: sub byte ptr [edx + 4], ah; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011f2c6: sub byte ptr [edx - 0x64], ch; call 0x11f2e0; add esp, 0x2c; ret; 
0x0011f38f: sub byte ptr [edx - 0x64], ch; call 0x8f110; add esp, 0x2c; ret; 
0x00084491: sub byte ptr [edx - 0x75], dl; inc esp; and al, 0x34; push eax; call ebx; 
0x000614f4: sub byte ptr [edx - 1], ch; push dword ptr [esp + 0x2c]; call 0x7f080; add esp, 0x2c; ret; 
0x0002cef2: sub byte ptr [edx - 7], dh; call dword ptr [eax - 0x73]; 
0x0009308d: sub byte ptr [edx], al; add byte ptr [eax], al; push edx; call eax; 
0x00036844: sub byte ptr [edx], ch; call 0x367d0; add esp, 0x2c; ret; 
0x0009a9dc: sub byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x2c]; call 0x94f20; add esp, 0x2c; ret; 
0x00029141: sub byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x60]; push dword ptr [esp + 0x5c]; push dword ptr [esp + 0x64]; call edi; 
0x00115220: sub byte ptr [esi + 0x5f], bl; ret; 
0x0008d67f: sub byte ptr [esi + ecx], 0; ret; 
0x0017d4e7: sub byte ptr [esi - 7], ah; call dword ptr [eax - 0x18]; 
0x00154524: sub byte ptr [esi - 7], bl; call dword ptr [eax - 0x73]; 
0x000d8cd2: sub byte ptr [esi], al; add byte ptr [ebx - 0x364b43], cl; dec dword ptr [ebp - 0x661c379]; call dword ptr [eax - 0x73]; 
0x001462ac: sub byte ptr [esp + esi*2 - 7], 0xff; push eax; call 0x351e0; add esp, 0x10; add esp, 0xc; ret; 
0x00151816: sub ch, dh; jmp dword ptr [esi - 0x70]; 
0x000c4758: sub cl, 0x44; stc; call dword ptr [eax - 0x18]; 
0x0010f65c: sub cl, bh; call dword ptr [eax + 0x6a]; 
0x00025e00: sub cl, bh; call dword ptr [eax - 0x18]; 
0x00024ed2: sub cl, bh; call dword ptr [eax - 1]; 
0x000eac50: sub cl, byte ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x0009f752: sub cl, byte ptr [ebp - 1]; push dword ptr [ecx]; sar byte ptr [eax + 1], cl; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x0005bb75: sub cl, byte ptr [ebx + 0x458b045d]; or byte ptr [ecx], bh; ret; 
0x0012d465: sub cl, byte ptr [ebx - 0x74e7dbb4]; push esp; and al, 0x1c; mov eax, 0xa3; mov ebx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00094b56: sub cl, byte ptr [edi]; add byte ptr [0x1a82bb], al; mov eax, dword ptr [eax + 0x3b34]; ret; 
0x000a4747: sub cl, byte ptr [edi]; xchg ebp, eax; ret; 
0x000a7278: sub dh, bh; mov dword ptr [ebx + 0x18], ebp; mov dword ptr [ebx + 0x20], esi; mov dword ptr [ebx], eax; push eax; call ecx; 
0x000fad3e: sub dh, byte ptr [esp + eax + 0x3c]; aas; jne 0xfad59; mov eax, 1; ret; 
0x00151a96: sub dh, ch; jmp dword ptr [esi - 0x70]; 
0x000a7494: sub dh, dh; ret 0x7502; 
0x00041897: sub dh, dh; ret 0x7503; 
0x000fb1da: sub dl, 0x47; stc; call dword ptr [ebx + 0x50]; 
0x00034be6: sub dl, byte ptr [0x822b0500]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x90]; add eax, dword ptr gs:[0]; ret; 
0x00034bc6: sub dl, byte ptr [0x824b0500]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x1d8]; add eax, dword ptr gs:[0]; ret; 
0x00034ba6: sub dl, byte ptr [0x826b0500]; and byte ptr [eax], al; mov eax, dword ptr [eax + 0x98]; add eax, dword ptr gs:[0]; ret; 
0x0010c882: sub dl, byte ptr [ebx]; add byte ptr [eax], al; add esp, 0x2c; ret; 
0x00024b06: sub dl, byte ptr [esi]; add byte ptr [0x21830b], al; mov edx, dword ptr [eax + 0x120]; test edx, edx; je 0x24b19; ret; 
0x000302fb: sub dword ptr [eax + 0x2b], -7; call dword ptr [eax - 0x18]; 
0x00176e21: sub dword ptr [eax + 0x5b000001], 0x5e; pop edi; ret; 
0x00154db4: sub dword ptr [eax + 0x6f], 0; add byte ptr [eax], al; mov dword ptr [ebx + 0x6f58], 0; call esi; 
0x00154d2c: sub dword ptr [eax + 0x7f], -0x39; sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x0008e7bd: sub dword ptr [eax + 1], 0x43890000; or al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x0019718b: sub dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013f8ee: sub dword ptr [eax + edi*8], -1; call dword ptr [eax + 0x6a]; 
0x00179bdc: sub dword ptr [eax - 0x46], -7; call dword ptr [eax - 0x73]; 
0x00142561: sub dword ptr [eax - 0xc], 1; je 0x142570; add esp, 4; pop ebx; pop esi; ret; 
0x000ebb21: sub dword ptr [eax], -0x10; clc; inc dword ptr [ecx]; fidivr word ptr [esi]; jmp esi; 
0x000fdc5c: sub dword ptr [eax], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00154523: sub dword ptr [eax], 0x5e; stc; call dword ptr [eax - 0x73]; 
0x0015f243: sub dword ptr [eax], 0x60; stc; call dword ptr [eax - 0x18]; 
0x0015f243: sub dword ptr [eax], 0x60; stc; call dword ptr [eax - 0x18]; xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x000f0519: sub dword ptr [eax], 0x6afff9a0; add eax, 0x6c818d50; je 0xf051f; call dword ptr [eax - 0x18]; 
0x00114797: sub dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0013f3e6: sub dword ptr [eax], eax; add byte ptr [eax], al; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x000d62d6: sub dword ptr [eax], eax; add byte ptr [ebx - 0x366f7b], cl; inc dword ptr [ebx - 0x7bf0cfc8]; ret; 
0x0010dda0: sub dword ptr [ebp + 0x5e5bf465], ecx; pop edi; pop ebp; ret; 
0x00184066: sub dword ptr [ebx + 0x505208ec], eax; call dword ptr [ebx + 0x24]; 
0x0007da5f: sub dword ptr [ebx + 0x515604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080375: sub dword ptr [ebx + 0x525604ec], eax; push ebx; call dword ptr [ebp + 0x1c]; 
0x000fd509: sub dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00148396: sub dword ptr [ebx + 0x5e5b1cc4], eax; pop edi; pop ebp; ret; 
0x000deeef: sub dword ptr [ebx + 0x5e5b24c4], eax; ret; 
0x001413af: sub dword ptr [ebx + 0x5e5b4cc4], eax; pop edi; pop ebp; ret; 
0x001765e7: sub dword ptr [ebx + 0x65], -7; call dword ptr [eax + 0x6a]; 
0x0009aaec: sub dword ptr [ebx + 0xc], 1; pop ebx; pop esi; pop edi; ret; 
0x00082028: sub dword ptr [ebx + eax*4], -7; call dword ptr [eax - 0x73]; 
0x001505ea: sub dword ptr [ebx + esi], -0xf; call dword ptr [esi + 0x50]; 
0x00185063: sub dword ptr [ebx - 0x3776ef3c], eax; pop ebx; pop esi; pop edi; ret; 
0x0012cde3: sub dword ptr [ebx], esp; idiv bh; add esp, 0x2c; ret; 
0x000eb1d4: sub dword ptr [ecx + 0x2c], -7; call dword ptr [eax - 0x18]; 
0x0009a815: sub dword ptr [ecx + 0x90c4], eax; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x00068675: sub dword ptr [ecx + 0xf], -0x7b; ret 0x14; 
0x00065a83: sub dword ptr [ecx + eax*8 - 8], 0x8bf889ff; jl 0x65ab1; pop eax; jmp eax; 
0x0011f307: sub dword ptr [ecx], eax; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x000721c8: sub dword ptr [ecx], eax; ret 0x598d; 
0x00123675: sub dword ptr [edi + 0x2e], -7; call dword ptr [eax + 0x6a]; 
0x0012618d: sub dword ptr [edi + 0x4e], -7; call dword ptr [eax + 0x55]; 
0x0015ac23: sub dword ptr [edi - 0x3b7c000a], eax; adc byte ptr [ebp - 0x7ccd8a40], al; in al, dx; or byte ptr [ebp - 0x6beb379], cl; call dword ptr [eax + 0x53]; 
0x001a503c: sub dword ptr [edi - 0x7cfffffe], -0x13; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x0011bd54: sub dword ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x0003ea41: sub dword ptr [edi], 0x46; stc; jmp dword ptr [esi - 0x77]; 
0x00145562: sub dword ptr [edi], 0x5a; stc; call dword ptr [eax + 0x68]; 
0x00163294: sub dword ptr [edx + 0x61], -7; call dword ptr [eax - 0x18]; 
0x000606c0: sub dword ptr [edx + esi], -7; call dword ptr [eax + 0x6a]; 
0x0008fd56: sub dword ptr [esi + eax], 0; add byte ptr [eax], al; pop ebx; ret; 
0x000fdff3: sub dword ptr [esi], 0x48; stc; call dword ptr [eax + 0x55]; 
0x00172a6c: sub eax, -0x49; stc; call dword ptr [eax - 0x73]; 
0x0010dffb: sub eax, -0x5f; stc; call dword ptr [eax - 0x73]; 
0x00176cf1: sub eax, -0x80; pop esi; pop edi; ret; 
0x000c19bb: sub eax, 0x10; pop edi; ret; 
0x00115757: sub eax, 0x14; mov dword ptr [esp + 0x18c], ebp; mov ebp, dword ptr [esp + 0x1b8]; call dword ptr gs:[0x10]; 
0x00104989: sub eax, 0x31fffff7; fucomi st(3); ret 0xc901; 
0x001009e2: sub eax, 0x3908568b; ret 0x267e; 
0x0012aae2: sub eax, 0x5704ec83; push 1; push ebx; call esi; 
0x0008c5f2: sub eax, 0x5b04c483; pop esi; ret; 
0x0016f2e8: sub eax, 0x5b10c483; pop esi; pop edi; ret; 
0x001817ac: sub eax, 0x5b3cc483; pop esi; pop edi; pop ebp; ret; 
0x00162fb4: sub eax, 0x5bf4658d; pop esi; pop edi; pop ebp; ret; 
0x001345cc: sub eax, 0x81000530; ret; 
0x000afecc: sub eax, 0x81000d77; ret; 
0x001a3fcc: sub eax, 0x81fffe36; ret; 
0x001949cc: sub eax, 0x81ffff2c; ret; 
0x001929cc: sub eax, 0x81ffff4c; ret; 
0x0017380e: sub eax, 0x83ffeb11; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x0008dabf: sub eax, 0x83ffffff; les ebx, ptr [eax]; pop ebx; ret; 
0x00122b01: sub eax, 0x8b000000; pop esp; and al, 8; call dword ptr gs:[0x10]; 
0x001484b0: sub eax, 0x8beb0574; lea esi, [esi]; xor eax, eax; ret; 
0x000a23d2: sub eax, 0x8d04ec83; test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x00097168: sub eax, 0x8dfffffe; je 0x97195; add bh, dh; ret 0; 
0x001948c8: sub eax, 0xc381ffff; xchg ebp, eax; dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0013a0ad: sub eax, 0xec830010; sbb byte ptr [ebp - 0x6a88480], cl; call dword ptr [eax - 0x18]; 
0x001831c0: sub eax, 0xee868d50; stc; call dword ptr [eax - 0x18]; 
0x001831c0: sub eax, 0xee868d50; stc; call dword ptr [eax - 0x18]; inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x00149c91: sub eax, 1; add esp, 4; pop ebx; pop esi; ret; 
0x0013ee32: sub eax, 1; mov byte ptr [edx + 1], al; mov eax, 2; ret; 
0x0008add8: sub eax, 1; mov dword ptr [ebx + 0x1ab8], eax; add esp, 8; pop ebx; ret; 
0x00030098: sub eax, 1; mov dword ptr [ecx + 4], eax; add esp, 8; pop ebx; ret; 
0x0007dae4: sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x00087ea4: sub eax, 1; mov dword ptr [edx + 0x1a98], eax; ret; 
0x0008d7a4: sub eax, 1; mov dword ptr [edx + 0x1ab8], eax; ret; 
0x0005ad64: sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x00053828: sub eax, 1; ret; 
0x000a0a6d: sub eax, 1; shr eax, 4; add eax, 1; mov dword ptr [edx + 0x388], eax; ret; 
0x0009c5c8: sub eax, 2; add esp, 0xc; ret; 
0x0012360f: sub eax, dword ptr [0x14]; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x00154932: sub eax, dword ptr [0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x001772b6: sub eax, dword ptr [0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177326: sub eax, dword ptr [0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177396: sub eax, dword ptr [0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f9: sub eax, dword ptr [0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177459: sub eax, dword ptr [0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c6: sub eax, dword ptr [0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177546: sub eax, dword ptr [0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x00177a37: sub eax, dword ptr [0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a86: sub eax, dword ptr [0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x00179220: sub eax, dword ptr [0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x0003b077: sub eax, dword ptr [0x14]; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e6: sub eax, dword ptr [0x14]; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003f28a: sub eax, dword ptr [0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39d: sub eax, dword ptr [0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0005f703: sub eax, dword ptr [0x14]; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00087e30: sub eax, dword ptr [0x14]; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x00196f64: sub eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009436d: sub eax, dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x0010e456: sub eax, dword ptr [eax]; add byte ptr [eax], al; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x00081b94: sub eax, dword ptr [ebx + 0x565308ec]; call dword ptr [edi + 0x18]; 
0x001734cf: sub eax, dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00035481: sub eax, dword ptr [ebx + 4]; add esp, 4; pop ebx; pop esi; ret; 
0x00134994: sub eax, dword ptr [ebx + 4]; pop ebx; pop esi; pop edi; ret; 
0x000c52ec: sub eax, dword ptr [ebx - 0x7bf0fa08]; push 0x8dffffff; xchg byte ptr [eax - 0x64], bl; stc; call dword ptr [eax - 0x73]; 
0x000406cd: sub eax, dword ptr [ecx]; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00087243: sub eax, dword ptr [edx + 0x10]; ret; 
0x00087105: sub eax, dword ptr [edx + 0x18]; sar eax, 2; ret; 
0x00087113: sub eax, dword ptr [edx + 0x1c]; ret; 
0x0008dd53: sub eax, dword ptr [edx + 0xc]; ret; 
0x00087235: sub eax, dword ptr [edx + 0xc]; sar eax, 2; ret; 
0x0008d33f: sub eax, dword ptr [edx + 8]; ret; 
0x00082336: sub eax, dword ptr [edx + 8]; sar eax, 2; ret; 
0x00034bea: sub eax, dword ptr [edx - 0x7f74ffe0]; nop; add byte ptr [eax], al; add byte ptr [ebp + 3], ah; add eax, 0; ret; 
0x0003148e: sub eax, dword ptr [edx]; ret; 
0x0016f07b: sub eax, dword ptr [esi + 0xc]; add esp, 4; add eax, edx; pop ebx; pop esi; ret; 
0x000c3656: sub eax, dword ptr [esp + 4]; ret; 
0x0012360e: sub eax, dword ptr gs:[0x14]; jne 0x12361f; add esp, 0x418; pop ebx; ret; 
0x00154931: sub eax, dword ptr gs:[0x14]; jne 0x15493e; add esp, 0x1c; ret; 
0x001772b5: sub eax, dword ptr gs:[0x14]; jne 0x1772c2; add esp, 0x4c; ret; 
0x00177325: sub eax, dword ptr gs:[0x14]; jne 0x177332; add esp, 0x4c; ret; 
0x00177395: sub eax, dword ptr gs:[0x14]; jne 0x1773a2; add esp, 0x4c; ret; 
0x001773f8: sub eax, dword ptr gs:[0x14]; jne 0x177405; add esp, 0x4c; ret; 
0x00177458: sub eax, dword ptr gs:[0x14]; jne 0x177465; add esp, 0x4c; ret; 
0x001774c5: sub eax, dword ptr gs:[0x14]; jne 0x1774d2; add esp, 0x4c; ret; 
0x00177545: sub eax, dword ptr gs:[0x14]; jne 0x177552; add esp, 0x4c; ret; 
0x00177a36: sub eax, dword ptr gs:[0x14]; jne 0x177a43; add esp, 0x1c; ret; 
0x00177a85: sub eax, dword ptr gs:[0x14]; jne 0x177abc; add esp, 0x1c; ret; 
0x0017921f: sub eax, dword ptr gs:[0x14]; jne 0x17922c; add esp, 0x2c; ret; 
0x0003b076: sub eax, dword ptr gs:[0x14]; jne 0x3b087; mov eax, edx; add esp, 0x1c; ret 4; 
0x0003c5e5: sub eax, dword ptr gs:[0x14]; jne 0x3c5f3; add esp, 0x18; pop ebx; ret; 
0x0003f289: sub eax, dword ptr gs:[0x14]; jne 0x3f296; add esp, 0x1c; ret; 
0x0003f39c: sub eax, dword ptr gs:[0x14]; jne 0x3f3a9; add esp, 0x1c; ret; 
0x0005f702: sub eax, dword ptr gs:[0x14]; jne 0x5f71e; add esp, 0x78; pop ebx; ret; 
0x00087e2f: sub eax, dword ptr gs:[0x14]; jne 0x87e4c; add esp, 0x28; pop ebx; ret; 
0x001a5625: sub eax, ebp; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x001436c5: sub eax, ebx; add esp, 8; pop ebx; ret; 
0x000c610a: sub eax, ebx; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x0016f06d: sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x001a33e9: sub eax, ecx; pop ebp; pop ebx; ret; 
0x0019e525: sub eax, ecx; pop ebp; ret; 
0x001a0bdc: sub eax, ecx; pop ebx; ret; 
0x001987e4: sub eax, ecx; pop edi; call 0x1875fd; add ebx, 0x414b4; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0019b8ea: sub eax, ecx; pop esi; call 0x1875fd; add ebx, 0x3e8ee; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001a52bf: sub eax, ecx; pop esi; pop edi; pop ebp; pop ebx; ret; 
0x001a3d41: sub eax, ecx; pop esi; pop edi; pop ebp; ret; 
0x001a4d5b: sub eax, ecx; pop esi; pop edi; pop ebx; ret; 
0x001a3a4d: sub eax, ecx; pop esi; pop edi; ret; 
0x0019cd78: sub eax, ecx; ret; 
0x000b07d7: sub eax, edi; bsf edx, edx; add eax, edx; pop edi; pop esi; ret; 
0x0008ab7e: sub eax, edi; pop edi; pop ebp; ret; 
0x00088546: sub eax, edx; cdq; push edx; push eax; push ebx; call dword ptr [esi + 0x40]; 
0x001892a6: sub eax, edx; cmp eax, 0x593; ja 0x1892c0; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0007beac: sub eax, edx; cmp eax, 0x593; ja 0x7bfb0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee70: sub eax, edx; cmp eax, 0x593; ja 0x7ef11; sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x000813ba: sub eax, edx; cmp eax, 0x593; ja 0x813f8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00085095: sub eax, edx; cmp eax, 0x593; ja 0x853e0; sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0008800e: sub eax, edx; cmp eax, 0x593; ja 0x88040; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00088d37: sub eax, edx; cmp eax, 0x593; ja 0x88d80; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008bde0: sub eax, edx; cmp eax, 0x593; ja 0x8be40; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x0008be8a: sub eax, edx; cmp eax, 0x593; ja 0x8beb8; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x000859a8: sub eax, edx; mov dword ptr [ecx], eax; add esp, 8; xor eax, eax; pop ebx; ret; 
0x00090e52: sub eax, edx; mov dword ptr [ecx], eax; mov eax, dword ptr [esp + 0xc]; mov dword ptr [eax], edx; xor eax, eax; ret; 
0x001a6d99: sub eax, edx; pop edi; pop esi; pop ebx; ret; 
0x00082b30: sub eax, edx; push eax; push edx; push edi; call dword ptr [ebx + 0x38]; 
0x00042f73: sub eax, edx; ret; 
0x0003c443: sub eax, edx; shr eax, 0x1f; ret; 
0x00083b48: sub eax, edx; sub esp, 4; push eax; push edx; push esi; call ecx; 
0x0003fa83: sub eax, esp; call dword ptr [eax - 0x73]; 
0x00173f13: sub ebp, 0x64; stc; call dword ptr [edi + 0x56]; 
0x0015084a: sub ebp, ebp; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000bb179: sub ebp, edi; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00180665: sub ebp, edx; inc dword ptr [ebx - 0x137cef3c]; or byte ptr [ebp - 0x6994e7d], cl; call dword ptr [ebp + 0x50]; 
0x00151776: sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x000bb006: sub ebx, 0x10; bsf edx, edx; call 0x187611; add ecx, 0x10fe0f; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99d6: sub ebx, 0x10; bsf edx, edx; call 0x187611; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b39ea: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b422a: sub ebx, 0x10; lea ecx, [edx + 0x10]; jne 0xb3f81; pop ebx; ret; 
0x00161e0b: sub ebx, 0x60; stc; call dword ptr [eax - 0x18]; 
0x000b4142: sub ebx, 0xa; lea ecx, [edx + 0xa]; jne 0xb3f81; pop ebx; ret; 
0x000b4160: sub ebx, 0xb; lea ecx, [edx + 0xb]; jne 0xb3f81; pop ebx; ret; 
0x000b39b0: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4180: sub ebx, 0xc; lea ecx, [edx + 0xc]; jne 0xb3f81; pop ebx; ret; 
0x000b3d74: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41a4: sub ebx, 0xd; lea ecx, [edx + 0xd]; jne 0xb3f81; pop ebx; ret; 
0x000b3da4: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b41d4: sub ebx, 0xe; lea ecx, [edx + 0xe]; jne 0xb3f81; pop ebx; ret; 
0x000b3dd4: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4204: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb3f81; pop ebx; ret; 
0x000b86d5: sub ebx, 0xf; lea ecx, [edx + 0xf]; jne 0xb83d1; pop ebx; ret; 
0x000b3c36: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4016: sub ebx, 1; lea ecx, [edx + 1]; jne 0xb3f81; pop ebx; ret; 
0x000b4038: sub ebx, 2; lea ecx, [edx + 2]; jne 0xb3f81; pop ebx; ret; 
0x000b3c7e: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b405e: sub ebx, 3; lea ecx, [edx + 3]; jne 0xb3f81; pop ebx; ret; 
0x000b4076: sub ebx, 4; lea ecx, [edx + 4]; jne 0xb3f81; pop ebx; ret; 
0x000b3c9c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b409c: sub ebx, 5; lea ecx, [edx + 5]; jne 0xb3f81; pop ebx; ret; 
0x000b3cbe: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40be: sub ebx, 6; lea ecx, [edx + 6]; jne 0xb3f81; pop ebx; ret; 
0x000b3cdc: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b40dc: sub ebx, 7; lea ecx, [edx + 7]; jne 0xb3f81; pop ebx; ret; 
0x000b40fa: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb3f81; pop ebx; ret; 
0x000b858b: sub ebx, 8; lea ecx, [edx + 8]; jne 0xb83d1; pop ebx; ret; 
0x000b3d00: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3f80; pop edi; pop ebx; ret; 
0x000b4120: sub ebx, 9; lea ecx, [edx + 9]; jne 0xb3f81; pop ebx; ret; 
0x0013d461: sub ebx, dword ptr [ebp - 0x12]; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x00155044: sub ebx, dword ptr [ebx - 0x77]; rcr byte ptr [esi + 0x5f], 1; ret; 
0x000c1178: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x109ef3; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1158: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x109f13; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1d8: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1b8: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x10fcdf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b98: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x11119f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b9b78: sub ebx, ecx; add esi, ecx; call 0x187611; add ecx, 0x1111bf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x0008c788: sub ebx, edx; lea eax, [ebx - 1]; pop ebx; ret; 
0x00081c88: sub ebx, edx; sar ebx, 2; lea eax, [ebx - 1]; pop ebx; ret; 
0x0010cd88: sub ecx, -0x80; shr ecx, 2; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x00164929: sub ecx, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00053f95: sub ecx, 1; jae 0x53f90; mov eax, edx; pop ebx; pop esi; ret; 
0x0005af99: sub ecx, 1; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x00084b54: sub ecx, 1; mov dword ptr [edx + 4], ecx; pop ebx; pop esi; pop edi; ret; 
0x00042d52: sub ecx, 1; mov eax, 2; bsr ecx, ecx; shl eax, cl; ret; 
0x00042d22: sub ecx, 1; mov eax, 2; movzx ecx, cl; bsr ecx, ecx; shl eax, cl; ret; 
0x00042e03: sub ecx, 1; mov eax, 2; movzx ecx, cx; bsr ecx, ecx; shl eax, cl; ret; 
0x0005afb0: sub ecx, 1; xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x000a6ad1: sub ecx, 4; and eax, 1; cmovne eax, ecx; pop ebx; ret; 
0x000254fb: sub ecx, dword ptr [0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x000dbfbc: sub ecx, dword ptr [0x14]; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x0016f06a: sub ecx, dword ptr [esi + 0x2c]; sub eax, ecx; add esp, 4; pop ebx; pop esi; ret; 
0x000254fa: sub ecx, dword ptr gs:[0x14]; jne 0x25507; add esp, 0x1c; ret; 
0x000dbfbb: sub ecx, dword ptr gs:[0x14]; jne 0xdbfc9; add esp, 0x28; pop ebx; ret; 
0x0016f16a: sub ecx, eax; push ecx; push edx; mov dword ptr [esp + 0x14], edx; push dword ptr [esi]; call dword ptr [esi + 0x20]; 
0x0008a0c1: sub ecx, eax; sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0003c049: sub ecx, eax; xor eax, ecx; shr eax, 0x1f; ret; 
0x000405cd: sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0010ce81: sub ecx, edi; add ecx, 0x150; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x0010ccfe: sub ecx, edi; add ecx, 0x4c; shr ecx, 2; rep stosd dword ptr es:[edi], eax; pop edi; ret; 
0x000df5f6: sub ecx, edi; call dword ptr [eax + 0x53]; 
0x000dd909: sub ecx, edi; call dword ptr [eax + 0x56]; 
0x0014909f: sub ecx, edi; call dword ptr [eax + 0x57]; 
0x000363cc: sub ecx, edi; call dword ptr [eax + 0x6a]; 
0x0002708a: sub ecx, edi; call dword ptr [eax - 0x18]; 
0x001253a9: sub ecx, edi; call dword ptr [eax - 0x73]; 
0x0012565e: sub ecx, edi; call dword ptr [eax - 0x73]; adc esp, 0x4a; stc; call dword ptr [eax - 0x18]; ret 0xf56e; 
0x0002802e: sub ecx, edi; call dword ptr [edi - 1]; 
0x00027b8e: sub ecx, edi; call dword ptr [edx + 0x50]; 
0x0009088b: sub ecx, edi; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x0013b24d: sub ecx, edi; jmp dword ptr [ebp - 0x75]; 
0x0008ff92: sub ecx, edx; lea eax, [ecx + eax + 0x4000]; ret; 
0x0003bd7e: sub ecx, edx; not eax; and eax, ecx; ret; 
0x001503ea: sub ecx, edx; push cs; add byte ptr [ebx - 0x74fbdbac], cl; sub byte ptr [eax - 0x7affffb2], 0xc0; jne 0x150407; ret; 
0x0003bdde: sub ecx, edx; shr eax, 0x1f; shr ecx, 0x10; or eax, ecx; ret; 
0x000c1814: sub edi, 0x10; add eax, edi; pop edi; ret; 
0x001a94eb: sub edi, 0x10; jb 0x1a95b0; lea eax, [eax + 0xf]; pop edi; ret; 
0x001a9560: sub edi, 0xa; jb 0x1a95b0; lea eax, [eax + 9]; pop edi; ret; 
0x001a9570: sub edi, 0xb; jb 0x1a95b0; lea eax, [eax + 0xa]; pop edi; ret; 
0x001a9580: sub edi, 0xd; jb 0x1a95b0; lea eax, [eax + 0xc]; pop edi; ret; 
0x001a9590: sub edi, 0xe; jb 0x1a95b0; lea eax, [eax + 0xd]; pop edi; ret; 
0x001a95a0: sub edi, 0xf; jb 0x1a95b0; lea eax, [eax + 0xe]; pop edi; ret; 
0x001a9500: sub edi, 2; jb 0x1a95b0; lea eax, [eax + 1]; pop edi; ret; 
0x001a9510: sub edi, 3; jb 0x1a95b0; lea eax, [eax + 2]; pop edi; ret; 
0x001a9458: sub edi, 4; jb 0x1a95b0; lea eax, [eax + 3]; pop edi; ret; 
0x001a9520: sub edi, 5; jb 0x1a95b0; lea eax, [eax + 4]; pop edi; ret; 
0x001a9530: sub edi, 6; jb 0x1a95b0; lea eax, [eax + 5]; pop edi; ret; 
0x001a9540: sub edi, 7; jb 0x1a95b0; lea eax, [eax + 6]; pop edi; ret; 
0x001a948b: sub edi, 8; jb 0x1a95b0; lea eax, [eax + 7]; pop edi; ret; 
0x001a9550: sub edi, 9; jb 0x1a95b0; lea eax, [eax + 8]; pop edi; ret; 
0x00030492: sub edi, ecx; call dword ptr [eax + 0x56]; 
0x00029bc3: sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000301ab: sub edi, ecx; call dword ptr [eax - 1]; 
0x0003018d: sub edi, ecx; call dword ptr [edx + 0x50]; 
0x00194c6e: sub edi, edi; inc dword ptr [ecx + 0x44befc3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00194a85: sub edi, edi; inc dword ptr [ecx + 0x44dd8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00148bdf: sub edi, edi; jmp dword ptr [esi - 0x70]; 
0x001050d6: sub edi, esi; shr byte ptr [eax - 0x5f7bf0fa], 1; adc byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x000c2023: sub edx, 0x10; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x30]; ret; 
0x001a84bb: sub edx, 0x10; jb 0x1a8590; lea eax, [edi + 0xf]; pop edi; ret; 
0x000c2013: sub edx, 0x20; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x20]; ret; 
0x000c2003: sub edx, 0x30; add edx, eax; jl 0xc2030; lea eax, [ecx + eax + 0x10]; ret; 
0x000c1ff3: sub edx, 0x40; add edx, eax; jl 0xc2030; add eax, ecx; ret; 
0x0003b0c3: sub edx, 0x7fff0000; mov eax, edx; shr eax, 0x1f; ret; 
0x001a8540: sub edx, 0xa; jb 0x1a8590; lea eax, [edi + 9]; pop edi; ret; 
0x001a8550: sub edx, 0xb; jb 0x1a8590; lea eax, [edi + 0xa]; pop edi; ret; 
0x001a8492: sub edx, 0xc; jb 0x1a8590; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a8560: sub edx, 0xd; jb 0x1a8590; lea eax, [edi + 0xc]; pop edi; ret; 
0x001a8570: sub edx, 0xe; jb 0x1a8590; lea eax, [edi + 0xd]; pop edi; ret; 
0x001a8580: sub edx, 0xf; jb 0x1a8590; lea eax, [edi + 0xe]; pop edi; ret; 
0x00079ee4: sub edx, 1; mov dword ptr [ecx + 4], edx; add esp, 0x14; pop ebx; pop esi; ret; 
0x001a84e0: sub edx, 2; jb 0x1a8590; lea eax, [edi + 1]; pop edi; ret; 
0x001a84f0: sub edx, 3; jb 0x1a8590; lea eax, [edi + 2]; pop edi; ret; 
0x001a8427: sub edx, 4; jb 0x1a8590; lea eax, [edi + 3]; pop edi; ret; 
0x001a8500: sub edx, 5; jb 0x1a8590; lea eax, [edi + 4]; pop edi; ret; 
0x001a8510: sub edx, 6; jb 0x1a8590; lea eax, [edi + 5]; pop edi; ret; 
0x001a8520: sub edx, 7; jb 0x1a8590; lea eax, [edi + 6]; pop edi; ret; 
0x001a8458: sub edx, 8; jb 0x1a8590; lea eax, [edi + 7]; pop edi; ret; 
0x000b01bd: sub edx, 8; jne 0xb0188; mov dword ptr [eax + 0x1c], esi; pop ebx; pop esi; ret; 
0x001a8530: sub edx, 9; jb 0x1a8590; lea eax, [edi + 8]; pop edi; ret; 
0x0010c2f5: sub edx, dword ptr [0x14]; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c398: sub edx, dword ptr [0x14]; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c605: sub edx, dword ptr [0x14]; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e571: sub edx, dword ptr [0x14]; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x00113466: sub edx, dword ptr [0x14]; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x0011ec5c: sub edx, dword ptr [0x14]; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00120c90: sub edx, dword ptr [0x14]; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d10: sub edx, dword ptr [0x14]; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00121f74: sub edx, dword ptr [0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x00124055: sub edx, dword ptr [0x14]; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x00124484: sub edx, dword ptr [0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00124f1b: sub edx, dword ptr [0x14]; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125c17: sub edx, dword ptr [0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x00129c28: sub edx, dword ptr [0x14]; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cc8: sub edx, dword ptr [0x14]; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012b7a3: sub edx, dword ptr [0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc3a: sub edx, dword ptr [0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f147: sub edx, dword ptr [0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1af: sub edx, dword ptr [0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f22e: sub edx, dword ptr [0x14]; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2a7: sub edx, dword ptr [0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f313: sub edx, dword ptr [0x14]; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f393: sub edx, dword ptr [0x14]; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f67e: sub edx, dword ptr [0x14]; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f77f: sub edx, dword ptr [0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7ef: sub edx, dword ptr [0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbd7: sub edx, dword ptr [0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc3f: sub edx, dword ptr [0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fcc7: sub edx, dword ptr [0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd3f: sub edx, dword ptr [0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffae: sub edx, dword ptr [0x14]; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c5: sub edx, dword ptr [0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130133: sub edx, dword ptr [0x14]; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301be: sub edx, dword ptr [0x14]; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302c6: sub edx, dword ptr [0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x00130355: sub edx, dword ptr [0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x0013ae33: sub edx, dword ptr [0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c083: sub edx, dword ptr [0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x001465a0: sub edx, dword ptr [0x14]; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465e8: sub edx, dword ptr [0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146637: sub edx, dword ptr [0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x0014851c: sub edx, dword ptr [0x14]; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485bc: sub edx, dword ptr [0x14]; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x0014867c: sub edx, dword ptr [0x14]; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x0014871c: sub edx, dword ptr [0x14]; jne 0x14874d; add esp, 0x11c; ret; 
0x00148c41: sub edx, dword ptr [0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x0014c874: sub edx, dword ptr [0x14]; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f24: sub edx, dword ptr [0x14]; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x0016cda9: sub edx, dword ptr [0x14]; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00172c57: sub edx, dword ptr [0x14]; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e10: sub edx, dword ptr [0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x00175f3c: sub edx, dword ptr [0x14]; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fdc: sub edx, dword ptr [0x14]; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x00176320: sub edx, dword ptr [0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x001763a3: sub edx, dword ptr [0x14]; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x00177246: sub edx, dword ptr [0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x001792d2: sub edx, dword ptr [0x14]; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c2: sub edx, dword ptr [0x14]; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x00179699: sub edx, dword ptr [0x14]; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x00179739: sub edx, dword ptr [0x14]; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f7: sub edx, dword ptr [0x14]; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x0017987b: sub edx, dword ptr [0x14]; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x0017990f: sub edx, dword ptr [0x14]; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a149: sub edx, dword ptr [0x14]; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1e9: sub edx, dword ptr [0x14]; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a289: sub edx, dword ptr [0x14]; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a329: sub edx, dword ptr [0x14]; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa20: sub edx, dword ptr [0x14]; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa80: sub edx, dword ptr [0x14]; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aaea: sub edx, dword ptr [0x14]; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab9a: sub edx, dword ptr [0x14]; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff85: sub edx, dword ptr [0x14]; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x0018047f: sub edx, dword ptr [0x14]; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x00181039: sub edx, dword ptr [0x14]; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x001848cb: sub edx, dword ptr [0x14]; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x0018720f: sub edx, dword ptr [0x14]; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a7: sub edx, dword ptr [0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190252: sub edx, dword ptr [0x14]; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001905c9: sub edx, dword ptr [0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x0003d079: sub edx, dword ptr [0x14]; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d21e: sub edx, dword ptr [0x14]; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d631: sub edx, dword ptr [0x14]; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dad1: sub edx, dword ptr [0x14]; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db51: sub edx, dword ptr [0x14]; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbda: sub edx, dword ptr [0x14]; jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003e1b8: sub edx, dword ptr [0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0004090d: sub edx, dword ptr [0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b3a: sub edx, dword ptr [0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040cf8: sub edx, dword ptr [0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x00040e0a: sub edx, dword ptr [0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8d: sub edx, dword ptr [0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x00041eab: sub edx, dword ptr [0x14]; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x000535a8: sub edx, dword ptr [0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x0005ae26: sub edx, dword ptr [0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x0006163a: sub edx, dword ptr [0x14]; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c1: sub edx, dword ptr [0x14]; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x00092a9b: sub edx, dword ptr [0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f7: sub edx, dword ptr [0x14]; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097687: sub edx, dword ptr [0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x0009893b: sub edx, dword ptr [0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098dab: sub edx, dword ptr [0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c7: sub edx, dword ptr [0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099717: sub edx, dword ptr [0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c634: sub edx, dword ptr [0x14]; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c2: sub edx, dword ptr [0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2e: sub edx, dword ptr [0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd8e: sub edx, dword ptr [0x14]; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009eb74: sub edx, dword ptr [0x14]; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff3c: sub edx, dword ptr [0x14]; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000a04fc: sub edx, dword ptr [0x14]; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000c656b: sub edx, dword ptr [0x14]; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dabe8: sub edx, dword ptr [0x14]; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac6c: sub edx, dword ptr [0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000dacb6: sub edx, dword ptr [0x14]; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad18: sub edx, dword ptr [0x14]; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dc231: sub edx, dword ptr [0x14]; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc5b5: sub edx, dword ptr [0x14]; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000e54f0: sub edx, dword ptr [0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79b0: sub edx, dword ptr [0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b24: sub edx, dword ptr [0x14]; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d42: sub edx, dword ptr [0x14]; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e8b68: sub edx, dword ptr [0x14]; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bda: sub edx, dword ptr [0x14]; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c7e: sub edx, dword ptr [0x14]; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000efebd: sub edx, dword ptr [0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x000f11f6: sub edx, dword ptr [0x14]; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d06: sub edx, dword ptr [0x14]; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af6: sub edx, dword ptr [0x14]; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7626: sub edx, dword ptr [0x14]; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8436: sub edx, dword ptr [0x14]; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x0008d368: sub edx, dword ptr [eax + 0xc]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x0008d378: sub edx, dword ptr [eax + 8]; mov eax, dword ptr [ecx + 8]; sub eax, edx; ret; 
0x00081d1c: sub edx, dword ptr [ebx + 8]; sar edx, 2; mov eax, dword ptr [ecx + 8]; pop ebx; sub eax, edx; ret; 
0x0010c2f4: sub edx, dword ptr gs:[0x14]; jne 0x10c349; add esp, 0x28; pop ebx; ret; 
0x0010c397: sub edx, dword ptr gs:[0x14]; jne 0x10c3e9; add esp, 0x28; pop ebx; ret; 
0x0010c604: sub edx, dword ptr gs:[0x14]; jne 0x10c659; add esp, 0x28; pop ebx; ret; 
0x0010e570: sub edx, dword ptr gs:[0x14]; jne 0x10e623; add esp, 0x68; pop ebx; ret; 
0x00113465: sub edx, dword ptr gs:[0x14]; jne 0x113486; add esp, 0x78; pop ebx; ret; 
0x0011ec5b: sub edx, dword ptr gs:[0x14]; jne 0x11ec6b; movzx eax, al; add esp, 0x4c; ret; 
0x00120c8f: sub edx, dword ptr gs:[0x14]; jne 0x120c9d; add esp, 0x38; pop ebx; ret; 
0x00120d0f: sub edx, dword ptr gs:[0x14]; jne 0x120d1d; add esp, 0x38; pop ebx; ret; 
0x00121f73: sub edx, dword ptr gs:[0x14]; jne 0x121f87; add esp, 0x1c; ret; 
0x00124054: sub edx, dword ptr gs:[0x14]; jne 0x124062; add esp, 0x38; pop ebx; ret; 
0x00124483: sub edx, dword ptr gs:[0x14]; jne 0x124490; add esp, 0x1c; ret; 
0x00124f1a: sub edx, dword ptr gs:[0x14]; jne 0x124f3f; add esp, 0x1018; pop ebx; ret; 
0x00125c16: sub edx, dword ptr gs:[0x14]; jne 0x125c23; add esp, 0x1c; ret; 
0x00129c27: sub edx, dword ptr gs:[0x14]; jne 0x129c79; add esp, 0x28; pop ebx; ret; 
0x00129cc7: sub edx, dword ptr gs:[0x14]; jne 0x129d19; add esp, 0x28; pop ebx; ret; 
0x0012b7a2: sub edx, dword ptr gs:[0x14]; jne 0x12b7af; add esp, 0x3c; ret; 
0x0012bc39: sub edx, dword ptr gs:[0x14]; jne 0x12bc46; add esp, 0x1c; ret; 
0x0012f146: sub edx, dword ptr gs:[0x14]; jne 0x12f153; add esp, 0x1c; ret; 
0x0012f1ae: sub edx, dword ptr gs:[0x14]; jne 0x12f1bb; add esp, 0x2c; ret; 
0x0012f22d: sub edx, dword ptr gs:[0x14]; jne 0x12f259; add esp, 0x28; pop ebx; ret; 
0x0012f2a6: sub edx, dword ptr gs:[0x14]; jne 0x12f2b3; add esp, 0x1c; ret; 
0x0012f312: sub edx, dword ptr gs:[0x14]; jne 0x12f339; add esp, 0x18; pop ebx; ret; 
0x0012f392: sub edx, dword ptr gs:[0x14]; jne 0x12f3b9; add esp, 0x18; pop ebx; ret; 
0x0012f67d: sub edx, dword ptr gs:[0x14]; jne 0x12f6a9; add esp, 0x18; pop ebx; ret; 
0x0012f77e: sub edx, dword ptr gs:[0x14]; jne 0x12f78b; add esp, 0x2c; ret; 
0x0012f7ee: sub edx, dword ptr gs:[0x14]; jne 0x12f7fb; add esp, 0x2c; ret; 
0x0012fbd6: sub edx, dword ptr gs:[0x14]; jne 0x12fbe3; add esp, 0x1c; ret; 
0x0012fc3e: sub edx, dword ptr gs:[0x14]; jne 0x12fc4b; add esp, 0x2c; ret; 
0x0012fcc6: sub edx, dword ptr gs:[0x14]; jne 0x12fcd3; add esp, 0x1c; ret; 
0x0012fd3e: sub edx, dword ptr gs:[0x14]; jne 0x12fd4b; add esp, 0x2c; ret; 
0x0012ffad: sub edx, dword ptr gs:[0x14]; jne 0x12ffd9; add esp, 0x18; pop ebx; ret; 
0x001300c4: sub edx, dword ptr gs:[0x14]; jne 0x1300d1; add esp, 0x1c; ret; 
0x00130132: sub edx, dword ptr gs:[0x14]; jne 0x130159; add esp, 0x18; pop ebx; ret; 
0x001301bd: sub edx, dword ptr gs:[0x14]; jne 0x1301e9; add esp, 0x28; pop ebx; ret; 
0x001302c5: sub edx, dword ptr gs:[0x14]; jne 0x1302d2; add esp, 0x7c; ret; 
0x00130354: sub edx, dword ptr gs:[0x14]; jne 0x130361; add esp, 0x1c; ret; 
0x0013ae32: sub edx, dword ptr gs:[0x14]; jne 0x13ae45; add esp, 0x2c; ret; 
0x0013c082: sub edx, dword ptr gs:[0x14]; jne 0x13c095; add esp, 0x2c; ret; 
0x0014659f: sub edx, dword ptr gs:[0x14]; jne 0x1465b4; add esp, 0x18; pop ebx; ret; 
0x001465e7: sub edx, dword ptr gs:[0x14]; jne 0x1465f4; add esp, 0x1c; ret; 
0x00146636: sub edx, dword ptr gs:[0x14]; jne 0x146643; add esp, 0x1c; ret; 
0x0014851b: sub edx, dword ptr gs:[0x14]; jne 0x148564; add esp, 0x118; pop ebx; ret; 
0x001485bb: sub edx, dword ptr gs:[0x14]; jne 0x148620; add esp, 0x118; pop ebx; ret; 
0x0014867b: sub edx, dword ptr gs:[0x14]; jne 0x1486cb; add esp, 0x118; pop ebx; ret; 
0x0014871b: sub edx, dword ptr gs:[0x14]; jne 0x14874d; add esp, 0x11c; ret; 
0x00148c40: sub edx, dword ptr gs:[0x14]; jne 0x148c8c; add esp, 0x1c; ret; 
0x0014c873: sub edx, dword ptr gs:[0x14]; jne 0x14c883; movzx eax, ax; add esp, 0x2c; ret; 
0x00150f23: sub edx, dword ptr gs:[0x14]; jne 0x150f31; add esp, 0x28; pop ebx; ret; 
0x0016cda8: sub edx, dword ptr gs:[0x14]; jne 0x16cdb6; add esp, 0x28; pop ebx; ret; 
0x00172c56: sub edx, dword ptr gs:[0x14]; jne 0x172cd6; add esp, 0x18; pop ebx; ret; 
0x00175e0f: sub edx, dword ptr gs:[0x14]; jne 0x175e27; add esp, 0x1c; ret; 
0x00175f3b: sub edx, dword ptr gs:[0x14]; jne 0x175f57; add esp, 0x28; pop ebx; ret; 
0x00175fdb: sub edx, dword ptr gs:[0x14]; jne 0x175ff7; add esp, 0x28; pop ebx; ret; 
0x0017631f: sub edx, dword ptr gs:[0x14]; jne 0x176337; add esp, 0x1c; ret; 
0x001763a2: sub edx, dword ptr gs:[0x14]; jne 0x1763b7; add esp, 0x18; pop ebx; ret; 
0x00177245: sub edx, dword ptr gs:[0x14]; jne 0x177252; add esp, 0x4c; ret; 
0x001792d1: sub edx, dword ptr gs:[0x14]; jne 0x179339; add esp, 0x18; pop ebx; ret; 
0x001793c1: sub edx, dword ptr gs:[0x14]; jne 0x179429; add esp, 0x18; pop ebx; ret; 
0x00179698: sub edx, dword ptr gs:[0x14]; jne 0x1796dc; add esp, 0x18; pop ebx; ret; 
0x00179738: sub edx, dword ptr gs:[0x14]; jne 0x17977c; add esp, 0x18; pop ebx; ret; 
0x001797f6: sub edx, dword ptr gs:[0x14]; jne 0x17981b; add esp, 0x18; pop ebx; ret; 
0x0017987a: sub edx, dword ptr gs:[0x14]; jne 0x1798b7; add esp, 0x18; pop ebx; ret; 
0x0017990e: sub edx, dword ptr gs:[0x14]; jne 0x179954; add esp, 0x18; pop ebx; ret; 
0x0017a148: sub edx, dword ptr gs:[0x14]; jne 0x17a18c; add esp, 0x18; pop ebx; ret; 
0x0017a1e8: sub edx, dword ptr gs:[0x14]; jne 0x17a22c; add esp, 0x18; pop ebx; ret; 
0x0017a288: sub edx, dword ptr gs:[0x14]; jne 0x17a2cc; add esp, 0x18; pop ebx; ret; 
0x0017a328: sub edx, dword ptr gs:[0x14]; jne 0x17a36c; add esp, 0x18; pop ebx; ret; 
0x0017aa1f: sub edx, dword ptr gs:[0x14]; jne 0x17aa2f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aa7f: sub edx, dword ptr gs:[0x14]; jne 0x17aa8f; movzx eax, al; add esp, 0x1c; ret; 
0x0017aae9: sub edx, dword ptr gs:[0x14]; jne 0x17aaf7; add esp, 0x18; pop ebx; ret; 
0x0017ab99: sub edx, dword ptr gs:[0x14]; jne 0x17aba7; add esp, 0x18; pop ebx; ret; 
0x0017ff84: sub edx, dword ptr gs:[0x14]; jne 0x17ffc4; add esp, 0x18; pop ebx; ret; 
0x0018047e: sub edx, dword ptr gs:[0x14]; jne 0x180499; add esp, 0x18; pop ebx; ret; 
0x00181038: sub edx, dword ptr gs:[0x14]; jne 0x181059; add esp, 0x18; pop ebx; ret; 
0x001848ca: sub edx, dword ptr gs:[0x14]; jne 0x1848d8; add esp, 0x28; pop ebx; ret; 
0x0018720e: sub edx, dword ptr gs:[0x14]; jne 0x18721c; add esp, 0x18; pop ebx; ret; 
0x0018a0a6: sub edx, dword ptr gs:[0x14]; jne 0x18a0b3; add esp, 0x1c; ret; 
0x00190251: sub edx, dword ptr gs:[0x14]; jne 0x190277; add esp, 0x18; pop ebx; ret; 
0x001905c8: sub edx, dword ptr gs:[0x14]; jne 0x1905d5; add esp, 0x2c; ret; 
0x0003d078: sub edx, dword ptr gs:[0x14]; jne 0x3d097; add esp, 0x98; pop ebx; ret; 
0x0003d21d: sub edx, dword ptr gs:[0x14]; jne 0x3d25c; add esp, 0x28; pop ebx; ret; 
0x0003d630: sub edx, dword ptr gs:[0x14]; jne 0x3d641; add esp, 0x128; pop ebx; ret; 
0x0003dad0: sub edx, dword ptr gs:[0x14]; jne 0x3daef; add esp, 0x98; pop ebx; ret; 
0x0003db50: sub edx, dword ptr gs:[0x14]; jne 0x3db6f; add esp, 0x98; pop ebx; ret; 
0x0003dbd9: sub edx, dword ptr gs:[0x14]; jne 0x3dbe9; add esp, 0x9c; ret; 
0x0003e1b7: sub edx, dword ptr gs:[0x14]; jne 0x3e1c4; add esp, 0x1c; ret; 
0x0004090c: sub edx, dword ptr gs:[0x14]; jne 0x40919; add esp, 0x1c; ret; 
0x00040b39: sub edx, dword ptr gs:[0x14]; jne 0x40b46; add esp, 0x1c; ret; 
0x00040cf7: sub edx, dword ptr gs:[0x14]; jne 0x40d04; add esp, 0x2c; ret; 
0x00040e09: sub edx, dword ptr gs:[0x14]; jne 0x40e16; add esp, 0x1c; ret; 
0x00040e8c: sub edx, dword ptr gs:[0x14]; jne 0x40e99; add esp, 0x1c; ret; 
0x00041eaa: sub edx, dword ptr gs:[0x14]; jne 0x41eec; add esp, 0x18; pop ebx; ret; 
0x000535a7: sub edx, dword ptr gs:[0x14]; jne 0x535b4; add esp, 0x2c; ret; 
0x0005ae25: sub edx, dword ptr gs:[0x14]; jne 0x5ae3f; add esp, 0x1c; ret; 
0x00061639: sub edx, dword ptr gs:[0x14]; jne 0x6164a; add esp, 0x1018; pop ebx; ret; 
0x000616c0: sub edx, dword ptr gs:[0x14]; jne 0x616ce; add esp, 0x78; pop ebx; ret; 
0x00092a9a: sub edx, dword ptr gs:[0x14]; jne 0x92aa7; add esp, 0x2c; ret; 
0x000975f6: sub edx, dword ptr gs:[0x14]; jne 0x97604; add esp, 0x28; pop ebx; ret; 
0x00097686: sub edx, dword ptr gs:[0x14]; jne 0x97693; add esp, 0x2c; ret; 
0x0009893a: sub edx, dword ptr gs:[0x14]; jne 0x98947; add esp, 0x2c; ret; 
0x00098daa: sub edx, dword ptr gs:[0x14]; jne 0x98db7; add esp, 0x2c; ret; 
0x000992c6: sub edx, dword ptr gs:[0x14]; jne 0x992d3; add esp, 0x2c; ret; 
0x00099716: sub edx, dword ptr gs:[0x14]; jne 0x99723; add esp, 0x2c; ret; 
0x0009c633: sub edx, dword ptr gs:[0x14]; jne 0x9c687; add esp, 0x38; pop ebx; ret; 
0x0009c8c1: sub edx, dword ptr gs:[0x14]; jne 0x9c8e7; add esp, 0x2c; ret; 
0x0009cb2d: sub edx, dword ptr gs:[0x14]; jne 0x9cb57; add esp, 0x2c; ret; 
0x0009cd8d: sub edx, dword ptr gs:[0x14]; jne 0x9cdb7; add esp, 0x18; pop ebx; ret; 
0x0009eb73: sub edx, dword ptr gs:[0x14]; jne 0x9eb81; add esp, 0x28; pop ebx; ret; 
0x0009ff3b: sub edx, dword ptr gs:[0x14]; jne 0x9ff49; add esp, 0x28; pop ebx; ret; 
0x000a04fb: sub edx, dword ptr gs:[0x14]; jne 0xa0509; add esp, 0x38; pop ebx; ret; 
0x000c656a: sub edx, dword ptr gs:[0x14]; jne 0xc659c; add esp, 0x18; pop ebx; ret; 
0x000dabe7: sub edx, dword ptr gs:[0x14]; jne 0xdabff; add esp, 0x28; pop ebx; ret; 
0x000dac6b: sub edx, dword ptr gs:[0x14]; jne 0xdac78; add esp, 0x1c; ret; 
0x000dacb5: sub edx, dword ptr gs:[0x14]; jne 0xdacc3; add esp, 0x38; pop ebx; ret; 
0x000dad17: sub edx, dword ptr gs:[0x14]; jne 0xdad25; add esp, 0x48; pop ebx; ret; 
0x000dc230: sub edx, dword ptr gs:[0x14]; jne 0xdc279; add esp, 0x28; pop ebx; ret; 
0x000dc5b4: sub edx, dword ptr gs:[0x14]; jne 0xdc5d8; add esp, 0x38; pop ebx; ret; 
0x000e54ef: sub edx, dword ptr gs:[0x14]; jne 0xe54fc; add esp, 0x1c; ret; 
0x000e79af: sub edx, dword ptr gs:[0x14]; jne 0xe79bc; add esp, 0x1c; ret; 
0x000e7b23: sub edx, dword ptr gs:[0x14]; jne 0xe7b62; add esp, 0x28; pop ebx; ret; 
0x000e7d41: sub edx, dword ptr gs:[0x14]; jne 0xe7d4f; add esp, 0x28; pop ebx; ret; 
0x000e8b67: sub edx, dword ptr gs:[0x14]; jne 0xe8b78; add esp, 0xe8; pop ebx; ret; 
0x000e8bd9: sub edx, dword ptr gs:[0x14]; jne 0xe8bea; add esp, 0xe8; pop ebx; ret; 
0x000e8c7d: sub edx, dword ptr gs:[0x14]; jne 0xe8c8e; add esp, 0xe8; pop ebx; ret; 
0x000efebc: sub edx, dword ptr gs:[0x14]; jne 0xefed7; add esp, 0x1c; ret; 
0x000f11f5: sub edx, dword ptr gs:[0x14]; jne 0xf1216; add esp, 0x78; pop ebx; ret; 
0x000f3d05: sub edx, dword ptr gs:[0x14]; jne 0xf3d26; add esp, 0x78; pop ebx; ret; 
0x000f4af5: sub edx, dword ptr gs:[0x14]; jne 0xf4b16; add esp, 0x78; pop ebx; ret; 
0x000f7625: sub edx, dword ptr gs:[0x14]; jne 0xf7646; add esp, 0x78; pop ebx; ret; 
0x000f8435: sub edx, dword ptr gs:[0x14]; jne 0xf8456; add esp, 0x78; pop ebx; ret; 
0x000c1d33: sub edx, eax; jbe 0xc1d70; add eax, edi; pop edi; ret; 
0x000c1d46: sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x10]; pop edi; ret; 
0x000c1d56: sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x20]; pop edi; ret; 
0x000c1d66: sub edx, eax; jbe 0xc1d70; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000c21e3: sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0017a3bb: sub edx, eax; mov dword ptr [ecx + 0xc], eax; mov eax, 1; mov dword ptr [ecx + 0x14], edx; ret; 
0x00153103: sub edx, eax; pop edi; pop ebp; sar edx, 1; imul eax, edx, 0xb6db6db7; ret; 
0x00089768: sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x0016f64e: sub edx, eax; push edx; push edi; push dword ptr [ebx]; call dword ptr [ebx + 0x20]; 
0x00053736: sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x53700; jmp eax; 
0x001228b1: sub edx, eax; test eax, eax; cmovns eax, edx; ret; 
0x000c1018: sub edx, ecx; call 0x187611; add ecx, 0x109fd5; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bdd18: sub edx, ecx; call 0x187611; add ecx, 0x10d255; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000bb02a: sub edx, ecx; call 0x187611; add ecx, 0x10fdef; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000b99fa: sub edx, ecx; call 0x187611; add ecx, 0x1112bf; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000c1a5c: sub edx, ecx; jbe 0xc1a90; add eax, ecx; ret; 
0x00134ca6: sub esi, 1; jae 0x134c80; add esp, 4; pop ebx; pop esi; ret; 
0x0016ef30: sub esi, eax; push esi; push eax; push dword ptr [ebx]; call dword ptr [ebx + 8]; 
0x00053734: sub esi, eax; sub edx, eax; shr eax, 2; lea eax, [eax + eax*8 + 6]; call 0x53700; jmp eax; 
0x00151956: sub esi, ebp; jmp dword ptr [esi - 0x70]; 
0x001aa7b4: sub esi, ebx; movq mm0, qword ptr [ecx]; movdqu xmmword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x0009f956: sub esi, esp; call dword ptr [eax - 0x73]; 
0x0014ee3c: sub esp, -0x50; stc; call dword ptr [eax + 0x68]; 
0x00146695: sub esp, -0x53; stc; call dword ptr [eax + 0x6a]; 
0x0009658f: sub esp, -0x7a; stc; call dword ptr [eax - 0x73]; 
0x0009f944: sub esp, -0x80; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0010c424: sub esp, 0x14; push 0; push 0; call 0x10c3f0; add esp, 0x1c; ret; 
0x0012e1d4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x12e1f0; add esp, 0x1c; ret; 
0x0003ebf4: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x3e360; add esp, 0x1c; ret; 
0x0003e264: sub esp, 0x14; push 0; push dword ptr [esp + 0x1c]; call 0x47110; add esp, 0x1c; ret; 
0x001483d4: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x148300; add esp, 0x1c; ret; 
0x00098204: sub esp, 0x14; push 1; push dword ptr [esp + 0x1c]; call 0x980c0; add esp, 0x1c; ret; 
0x001412e4: sub esp, 0x14; push 2; push dword ptr [esp + 0x1c]; call 0x140620; add esp, 0x1c; ret; 
0x001883d0: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x187ac0; add esp, 0x18; pop ebx; ret; 
0x00043000: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x1aa850; add esp, 0x18; pop ebx; ret; 
0x0010be80: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x00085a60: sub esp, 0x14; push dword ptr [esp + 0x1c]; call 0x7b8c0; add esp, 0x18; pop ebx; ret; 
0x00127db0: sub esp, 0x14; push dword ptr [esp + 0x20]; call 0x23190; add esp, 0x18; pop ebx; ret; 
0x0009a10e: sub esp, 0x18; lea eax, [eax + 0x3b6c]; push eax; call 0x90b90; add esp, 0x1c; ret; 
0x0007dc30: sub esp, 0x18; lea eax, [edx + 0x1a80]; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x0008d7d0: sub esp, 0x18; lea eax, [edx + 0x1ab4]; push eax; call 0x8fc80; add esp, 0x1c; ret; 
0x00167424: sub esp, 0x18; push 0; call 0x153f30; add esp, 0x1c; ret; 
0x0003d564: sub esp, 0x18; push 0; call 0x3ce00; add esp, 0x1c; ret; 
0x0016b794: sub esp, 0x18; push 0xa; call 0x153f30; add esp, 0x1c; ret; 
0x00167884: sub esp, 0x18; push 1; call 0x153f30; add esp, 0x1c; ret; 
0x00168cb4: sub esp, 0x18; push 3; call 0x153f30; add esp, 0x1c; ret; 
0x0016a014: sub esp, 0x18; push 4; call 0x153f30; add esp, 0x1c; ret; 
0x0016a694: sub esp, 0x18; push 5; call 0x153f30; add esp, 0x1c; ret; 
0x0016aa34: sub esp, 0x18; push 6; call 0x153f30; add esp, 0x1c; ret; 
0x0016bd14: sub esp, 0x18; push 7; call 0x153f30; add esp, 0x1c; ret; 
0x0016b0b4: sub esp, 0x18; push 8; call 0x153f30; add esp, 0x1c; ret; 
0x0016b4c4: sub esp, 0x18; push 9; call 0x153f30; add esp, 0x1c; ret; 
0x00087fd0: sub esp, 0x18; push eax; call 0x8bb60; add esp, 0x1c; ret; 
0x0007fb80: sub esp, 0x18; push ecx; call 0x817d0; add esp, 0x1c; ret; 
0x000a08a4: sub esp, 0x28; mov edi, dword ptr [esp + 0x3c]; lea ecx, [ebp - 0x722d4]; call dword ptr gs:[0x10]; 
0x00156693: sub esp, 0x46; int1; call dword ptr [eax - 0x73]; 
0x001659e3: sub esp, 0x4b; int1; call dword ptr [eax - 0x73]; 
0x001622f7: sub esp, 0x56; bnd call dword ptr [eax - 0x18]; 
0x001649f7: sub esp, 0x7d; bnd call dword ptr [eax - 0x18]; 
0x00090044: sub esp, 0xc; add ebx, 8; add esi, 8; push eax; call ecx; 
0x0015443b: sub esp, 0xc; lea eax, [ebx + 4]; push eax; call edi; 
0x00174dba: sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x0017429a: sub esp, 0xc; lea edx, [ebx + 0x4c]; push edx; call eax; 
0x00160767: sub esp, 0xc; lea edx, [ebx + 0xa28c]; push edx; call eax; 
0x001715dd: sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x001721ee: sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x000815b5: sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x001719bd: sub esp, 0xc; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x00174f8e: sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x000e9e40: sub esp, 0xc; mov eax, dword ptr [ebp - 0x2c]; push esi; call eax; 
0x000f1c0d: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x10]; 
0x000f1800: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5b4]; call dword ptr [eax + 0x14]; 
0x000f1b69: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5c0]; push dword ptr [ebp - 0x5dc]; call dword ptr [eax + 0x18]; 
0x000f8e4d: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x10]; 
0x000f8a40: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5c4]; call dword ptr [eax + 0x14]; 
0x000f8da9: sub esp, 0xc; mov eax, dword ptr [ebp - 0x5d0]; push dword ptr [ebp - 0x5ec]; call dword ptr [eax + 0x18]; 
0x0016c7da: sub esp, 0xc; mov eax, dword ptr [ebx + 0x10]; push esi; call dword ptr [eax + 0x10]; 
0x0016e82a: sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0017835d: sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x0016d490: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; add esi, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016cf8b: sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x00177840: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 0x14]; 
0x00177730: sub esp, 0xc; mov eax, dword ptr [ebx + 8]; push ebx; call dword ptr [eax + 4]; 
0x00093088: sub esp, 0xc; mov eax, dword ptr [edi + 0x228]; push edx; call eax; 
0x001769ee: sub esp, 0xc; mov eax, dword ptr [edi + 4]; push edi; call dword ptr [eax + 0x10]; 
0x001763ef: sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x0016cb50: sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0009c462: sub esp, 0xc; mov edi, dword ptr [edi + 0xc]; push dword ptr [eax + 4]; call dword ptr [eax]; 
0x00175abe: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0x10]; 
0x0017558d: sub esp, 0xc; mov edx, dword ptr [eax + 0x20]; push eax; call dword ptr [edx + 0xc]; 
0x0016ccf9: sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x000e9b38: sub esp, 0xc; mov esi, dword ptr [ebp - 0x2c]; mov eax, dword ptr [ebp - 0x3c]; push edi; call eax; 
0x000907dc: sub esp, 0xc; push 0; call 0x8fd70; add esp, 0x1c; ret; 
0x000243a1: sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x0009182c: sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x0012ac09: sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x000a7510: sub esp, 0xc; push dword ptr [esp + 0x14]; call eax; 
0x00160bad: sub esp, 0xc; push eax; call 0x184910; mov dword ptr [esp], ebp; call edi; 
0x00160d94: sub esp, 0xc; push eax; call 0x184910; mov dword ptr [esp], ebp; call esi; 
0x0016c870: sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x00175cd0: sub esp, 0xc; push eax; call dword ptr [edx + 0x10]; 
0x000a75aa: sub esp, 0xc; push eax; call edx; 
0x00174a08: sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x0016ea0e: sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x00174a1f: sub esp, 0xc; push ebp; call eax; 
0x00173812: sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00157ab3: sub esp, 0xc; push ebx; call 0x184910; add esp, 0x10; mov eax, ebx; call eax; 
0x00160f43: sub esp, 0xc; push ebx; call 0x184910; mov dword ptr [esp], ebp; call ebx; 
0x0002f7b1: sub esp, 0xc; push ebx; call 0x184910; mov dword ptr [esp], esi; call ebx; 
0x0016d473: sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x00088bae: sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x000813c3: sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00088017: sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00026247: sub esp, 0xc; push ecx; call 0x184910; mov dword ptr [esp], ebx; mov ecx, dword ptr [ebp - 0x3c]; call ecx; 
0x00027037: sub esp, 0xc; push edi; call 0x184910; mov dword ptr [esp], ebx; call edi; 
0x0016d93b: sub esp, 0xc; push edi; call eax; 
0x0016d918: sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x000268f1: sub esp, 0xc; push edx; call 0x184910; mov dword ptr [esp], ebx; mov edx, dword ptr [ebp - 0x44]; call edx; 
0x000260d4: sub esp, 0xc; push esi; call 0x184910; mov dword ptr [esp], ebx; call esi; 
0x0016ca06: sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x00086ad9: sub esp, 0xc; push esi; call dword ptr [eax + 0x30]; 
0x0008c18f: sub esp, 0xc; push esi; call dword ptr [ebp + 0x30]; 
0x0007beb9: sub esp, 0xc; push esi; call dword ptr [ebx + 0x30]; 
0x0007ee7d: sub esp, 0xc; push esi; call dword ptr [ebx + 0x34]; 
0x0018915a: sub esp, 0xc; push esi; call dword ptr [ebx + 0x44]; 
0x0008bde9: sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x001892af: sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x000a74c8: sub esp, 0xc; push esi; call eax; 
0x0012c942: sub esp, 0xc; push esi; call edx; 
0x0012c942: sub esp, 0xc; push esi; call edx; mov ebx, eax; mov eax, 1; call dword ptr gs:[0x10]; 
0x0017349b: sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x0003f1e5: sub esp, 0xc; ror eax, 9; xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000e79d4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe79e8; add esp, 0xc; ret; 
0x000e7ac4: sub esp, 0xc; xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7ad8; add esp, 0xc; ret; 
0x001397d2: sub esp, 0xc; xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0003c52c: sub esp, 4; fstp dword ptr [esp]; fld dword ptr [esp]; add esp, 4; ret; 
0x0008ef41: sub esp, 4; mov edx, dword ptr [ebx]; push esi; push eax; push ecx; call edx; 
0x0018de8b: sub esp, 4; mov edx, dword ptr [esp + 0x14]; mov ebx, dword ptr [esp + 0x10]; call dword ptr gs:[0x10]; 
0x001791c5: sub esp, 4; push -1; push ebp; push esi; call edi; 
0x0008cf29: sub esp, 4; push 0; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0007d9e0: sub esp, 4; push 0x10; push ebp; push esi; call dword ptr [eax + 0x1c]; 
0x0007ed8e: sub esp, 4; push dword ptr [ebp + 0x14]; push dword ptr [ebp + 0xc]; push esi; call dword ptr [ebx + 0x2c]; 
0x00184b6f: sub esp, 4; push dword ptr [ebx]; push dword ptr [esi]; push dword ptr [esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00134fc2: sub esp, 4; push dword ptr [esp + 0x1c]; push 0; push 0x2000004; call eax; 
0x001877e3: sub esp, 4; push dword ptr [esp + 0x20]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x0007c61f: sub esp, 4; push dword ptr [esp + 0x30]; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x000413db: sub esp, 4; push dword ptr [esp + 8]; push esi; push edi; mov eax, dword ptr [esp + 0x10]; call eax; 
0x00024ddf: sub esp, 4; push eax; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call esi; 
0x0008aa90: sub esp, 4; push eax; push ebp; push esi; call dword ptr [ebx + 0x38]; 
0x00083b4a: sub esp, 4; push eax; push edx; push esi; call ecx; 
0x00024ea0: sub esp, 4; push ebp; push dword ptr [esp + 0x40]; push dword ptr [esp + 0x40]; call dword ptr [esi]; 
0x000884cc: sub esp, 4; push ebp; push edi; push ebx; call dword ptr [esi + 0x3c]; 
0x0007eb54: sub esp, 4; push ebx; push dword ptr [ebp - 0x1c]; push esi; call dword ptr [eax + 0x2c]; 
0x0007c5c5: sub esp, 4; push ebx; push dword ptr [esp + 0x1c]; push dword ptr [esi + 0x98]; call eax; 
0x00079945: sub esp, 4; push ebx; push edi; push eax; call dword ptr [ebp + 0x1c]; 
0x0012ab27: sub esp, 4; push ecx; push 3; push ebx; call edx; 
0x0008a0c3: sub esp, 4; push ecx; push eax; push esi; call edx; 
0x0012aacf: sub esp, 4; push edi; push 0; push ebx; call esi; 
0x0012aae3: sub esp, 4; push edi; push 1; push ebx; call esi; 
0x0012aaf6: sub esp, 4; push edi; push 2; push ebx; call esi; 
0x0007ff38: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [eax + 0x1c]; 
0x0007c935: sub esp, 4; push edi; push dword ptr [ebp + 8]; push esi; call dword ptr [ebx + 0x1c]; 
0x0008ad08: sub esp, 4; push edx; push dword ptr [esp + 0x3c]; push ebp; call dword ptr [esi + 0x20]; 
0x0007e452: sub esp, 4; push esi; push dword ptr [ebp + 8]; push edx; call dword ptr [ebx + 0x1c]; 
0x0008827e: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push ebp; call dword ptr [eax + 0x1c]; 
0x0008002f: sub esp, 4; push esi; push dword ptr [esp + 0x38]; push edi; call dword ptr [eax + 0x1c]; 
0x000883fe: sub esp, 4; push esi; push ebp; push edi; call dword ptr [eax + 0x1c]; 
0x0007da60: sub esp, 4; push esi; push ecx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00080376: sub esp, 4; push esi; push edx; push ebx; call dword ptr [ebp + 0x1c]; 
0x00089765: sub esp, 4; sub edx, eax; push edx; push eax; push esi; call dword ptr [edi + 0x38]; 
0x00172ef0: sub esp, 8; add esi, 0xc; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x0012af72: sub esp, 8; and ebx, 0xfffffffe; push dword ptr [ebx]; push esi; call edi; 
0x00125b40: sub esp, 8; call 0x125780; mov dword ptr [ebx + 0x4600], eax; add esp, 8; pop ebx; ret; 
0x0003c28c: sub esp, 8; fstp qword ptr [esp]; fld qword ptr [esp]; add esp, 8; ret; 
0x00089e5c: sub esp, 8; lea eax, [esp + 0x28]; push eax; push esi; call dword ptr [edx + 0x48]; 
0x00088615: sub esp, 8; lea eax, [esp + 0x38]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x00083770: sub esp, 8; lea eax, [esp + 0x40]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0007b7a3: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [ebx + 0x48]; 
0x0008891f: sub esp, 8; lea eax, [esp + 8]; push eax; push esi; call dword ptr [edi + 0x48]; 
0x0016c8f3: sub esp, 8; lea ebp, [esp + 0x40]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x0008bf49: sub esp, 8; lea ebx, [edx + 1]; push eax; push esi; call dword ptr [ebp + 0xc]; 
0x000e7c58: sub esp, 8; lea ecx, [esp + 0x1c]; push ecx; mov dword ptr [esp + 0x18], ecx; push ebx; call eax; 
0x000f1208: sub esp, 8; lea edx, [esp + 0x14]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x001760b5: sub esp, 8; lea edx, [esp + 0x20]; push edx; push eax; call edi; 
0x00189728: sub esp, 8; lea edx, [esp + 0x38]; push edx; push esi; call dword ptr [eax + 0x48]; 
0x000e7dd2: sub esp, 8; lea edx, [esp + 0xc]; push edx; push ebx; call eax; 
0x000f8448: sub esp, 8; lea edx, [esp + 8]; push edx; push eax; call dword ptr [ecx + 0x20]; 
0x0012b032: sub esp, 8; mov dword ptr [ebp - 0x30], edx; push dword ptr [eax]; mov eax, dword ptr [ebp - 0x3c]; push dword ptr [ebp - 0x38]; call eax; 
0x0016d3b8: sub esp, 8; mov dword ptr [ebx], eax; push dword ptr [ebx + 8]; push esi; call dword ptr [ebx + 0xc]; 
0x001769da: sub esp, 8; mov dword ptr [ecx], 0xe; add ecx, 4; push ecx; push edi; call dword ptr [eax + 8]; 
0x00171869: sub esp, 8; mov eax, dword ptr [eax]; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016c790: sub esp, 8; mov eax, dword ptr [ebx + 0x10]; push dword ptr [esp + 0x14]; push esi; call dword ptr [eax + 4]; 
0x001744c1: sub esp, 8; mov eax, dword ptr [ebx + 0x50]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00171849: sub esp, 8; mov eax, dword ptr [ebx + 0xb0]; push dword ptr [esp + 0x30]; push esi; call dword ptr [eax + 4]; 
0x00172e0b: sub esp, 8; mov eax, dword ptr [ebx + 4]; push 8; push ebx; call dword ptr [eax + 0x18]; 
0x0016edea: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 4]; 
0x0016ee38: sub esp, 8; mov eax, dword ptr [ebx + 4]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax]; 
0x00172e50: sub esp, 8; mov eax, dword ptr [ebx + 4]; push esi; push ebx; call dword ptr [eax + 0x24]; 
0x001775e0: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x14]; push ebx; call dword ptr [eax]; 
0x001777df: sub esp, 8; mov eax, dword ptr [ebx + 8]; push dword ptr [esp + 0x1c]; push ebx; call dword ptr [eax + 0xc]; 
0x0016e27f: sub esp, 8; mov eax, dword ptr [edi + 4]; and ebp, 0xfffffffc; push ebp; push edi; call dword ptr [eax + 0x18]; 
0x0016e189: sub esp, 8; mov eax, dword ptr [edi + 4]; push 0x20; push edi; call dword ptr [eax + 0x18]; 
0x0016e23b: sub esp, 8; mov eax, dword ptr [edi + 4]; push 8; push edi; call dword ptr [eax + 0x18]; 
0x00179ace: sub esp, 8; mov eax, dword ptr [esi + 4]; push ebx; push esi; call dword ptr [eax + 4]; 
0x0016c90f: sub esp, 8; mov ecx, dword ptr [eax + 0x20]; push ebp; push eax; call dword ptr [ecx + 8]; 
0x00174f5f: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push edi; push eax; call dword ptr [edx + 4]; 
0x0016c7ab: sub esp, 8; mov edx, dword ptr [eax + 0x20]; push esi; push eax; call dword ptr [edx + 4]; 
0x0016e20e: sub esp, 8; mov edx, dword ptr [edi + 4]; and eax, 0xfffffffc; push eax; push edi; call dword ptr [edx + 0x18]; 
0x00082cea: sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0008988a: sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0016e87d: sub esp, 8; push 0; push ebx; call dword ptr [eax + 0x14]; 
0x0003eff5: sub esp, 8; push 0; push edx; call eax; 
0x0007b92c: sub esp, 8; push 0; push esi; call dword ptr [ebx + 8]; 
0x0016c7c1: sub esp, 8; push dword ptr [esp + 0x1c]; push esi; mov eax, dword ptr [esp + 0x20]; call eax; 
0x00061a53: sub esp, 8; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x28]; mov eax, dword ptr [esp + 0x34]; call eax; 
0x000f1a3f: sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8c7f: sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x000a7580: sub esp, 8; push eax; push dword ptr [ebx + 0x24]; call edx; 
0x0011432c: sub esp, 8; push ebp; push ecx; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00177828: sub esp, 8; push ebx; lea edx, [esp + 0x38]; push edx; call dword ptr [eax + 0xc]; 
0x0013852c: sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x00081b95: sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000a7502: sub esp, 8; push ecx; push dword ptr [ebx + 0x24]; call eax; 
0x0003f530: sub esp, 8; push ecx; push dword ptr [esp + 0x4c]; call eax; 
0x00184067: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x001840ee: sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000a73f3: sub esp, 8; push esi; push dword ptr [ebx + 0x24]; call eax; 
0x0008c688: sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x000e7d98: sub esp, 8; push esi; push ebx; call eax; 
0x00183a3f: sub esp, dword ptr [edi - 7]; call dword ptr [eax - 0x18]; 
0x00089889: sub sp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x000f308d: syscall; 
0x000bb58d: sysret; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a7db2: test ah, 0x20; jne 0x1a7e50; lea eax, [edi - 4]; pop edi; ret; 
0x001a8932: test ah, 0x20; jne 0x1a89d0; lea eax, [ecx + 0xc]; ret; 
0x001a8b72: test ah, 0x20; jne 0x1a8c20; add edx, 0xc; jl 0x1a8c50; lea eax, [ecx + 0xc]; ret; 
0x001a8f79: test ah, 0x20; jne 0x1a9030; test ah, 0x40; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001a78f6: test ah, 0x40; jne 0x1a79e0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a82b2: test ah, 0x40; jne 0x1a83f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a8f82: test ah, 0x40; jne 0x1a9040; lea eax, [edx + 0xf]; ret; 
0x001aa140: test ah, 0xf0; jne 0x1aa160; lea eax, [edi - 8]; pop edi; ret; 
0x001a9eb4: test ah, 0xf; jne 0x1a9ed0; test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001a9ef0: test ah, 1; jne 0x1a9f10; lea eax, [ecx + 0xc]; ret; 
0x0003c366: test ah, 2; fchs; fcmove st(0), st(1); fstp st(1); ret; 
0x0003bc94: test ah, 2; je 0x3bc9b; fchs; ret; 
0x0003c034: test ah, 2; je 0x3c03b; fchs; ret; 
0x001a7d89: test ah, 2; jne 0x1a7e20; lea eax, [edi - 8]; pop edi; ret; 
0x001a8909: test ah, 2; jne 0x1a89a0; lea eax, [ecx + 8]; ret; 
0x001a8b48: test ah, 2; jne 0x1a8bf0; add edx, 8; jl 0x1a8c50; lea eax, [ecx + 8]; ret; 
0x001a8f50: test ah, 2; jne 0x1a9000; test ah, 4; jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x001a8289: test ah, 4; jne 0x1a83c0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a8f59: test ah, 4; jne 0x1a9010; lea eax, [edx + 0xb]; ret; 
0x00074119: test ah, bl; adc al, byte ptr [eax]; add byte ptr [ebx - 0x5137b], cl; inc dword ptr [ebx - 0x177cf714]; add dword ptr [ecx - 0x5037b], ecx; call dword ptr [esi - 1]; 
0x001108bf: test ah, bl; add byte ptr [eax], al; add byte ptr [eax - 0x7bf0ffc2], al; ret 0xb; 
0x00114ecf: test ah, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0f107], al; ret; 
0x0007c8c7: test ah, cl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001a5100: test ah, cl; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0fb03], al; ret; 
0x0017ca32: test al, 0; add byte ptr [eax - 0x73], dl; add dword ptr [ecx], 0x63; stc; call dword ptr [eax + 0x6a]; 
0x0017be10: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0017e10e: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; call dword ptr [eax + 0x6a]; 
0x0017e59f: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x0017b061: test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edx + 0x63], esi; stc; call dword ptr [eax + 0x6a]; 
0x001a8b14: test al, 0; add byte ptr [eax], al; add edx, 4; jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x001a8f34: test al, 0; add byte ptr [eax], al; lea eax, [edx + 7]; ret; 
0x00114ae3: test al, 0; add byte ptr [eax], al; mov eax, 0x133; call dword ptr gs:[0x10]; 
0x001149ba: test al, 0; add byte ptr [eax], al; mov esi, dword ptr [esp + 0xac]; call dword ptr gs:[0x10]; 
0x00171832: test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x00161fe4: test al, 0x11; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x0019853a: test al, 0x15; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0012922b: test al, 0x1c; ret 0xfff9; 
0x001a7d60: test al, 0x20; jne 0x1a7df0; lea eax, [edi - 0xc]; pop edi; ret; 
0x001a88e0: test al, 0x20; jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a8b10: test al, 0x20; jne 0x1a8bc0; add edx, 4; jl 0x1a8c50; lea eax, [ecx + 4]; ret; 
0x001a8f28: test al, 0x20; jne 0x1a8fd0; test al, 0x40; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x0002346f: test al, 0x30; stc; call dword ptr [eax + 0x52]; 
0x00080a08: test al, 0x33; cli; jmp dword ptr [esi - 0x70]; 
0x001a78a4: test al, 0x40; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x001a8260: test al, 0x40; jne 0x1a8390; lea eax, [edi + 7]; pop edi; ret; 
0x001a88d8: test al, 0x40; jne 0x1a8980; test al, 0x20; jne 0x1a8970; lea eax, [ecx + 4]; ret; 
0x001a8f30: test al, 0x40; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x001953ba: test al, 0x44; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001503f4: test al, 0x4e; add byte ptr [eax], al; test eax, eax; jne 0x150407; ret; 
0x0019443a: test al, 0x51; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0010d1b0: test al, 0x6c; push es; in eax, dx; call dword ptr [ebp + 0x6a]; 
0x00095fd7: test al, 0x74; ret 0xfff9; 
0x00154d2d: test al, 0x7f; add byte ptr [eax], al; add bh, al; sbb dword ptr [eax + 0x7f], 0; add byte ptr [eax], al; call esi; 
0x0012ab26: test al, 0x83; in al, dx; add al, 0x51; push 3; push ebx; call edx; 
0x001778e7: test al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0005c7df: test al, 0x83; rcr byte ptr [ebx], 0x89; ret 0x25; 
0x0016df9c: test al, 0x83; ret; 
0x0009db69: test al, 0x88; stc; call dword ptr [eax - 0x18]; 
0x000d47cf: test al, 0x89; ret 0x458b; 
0x00093298: test al, 0x8b; dec ebp; movsb byte ptr es:[edi], byte ptr [esi]; xor edx, edx; mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x00111caa: test al, 0x8b; jl 0x111cd2; or byte ptr [ebp - 0x65dbf79], cl; call dword ptr [eax - 0x73]; 
0x000a6a3e: test al, 0x98; stc; call dword ptr [eax - 0x73]; 
0x000a5b9b: test al, 0x99; stc; call dword ptr [eax - 0x73]; 
0x000efb42: test al, 0x9f; stc; call dword ptr [eax - 0x73]; 
0x0015a621: test al, 0xb4; stc; call dword ptr [eax - 0x18]; 
0x00129214: test al, 0xc; ret 0xfff9; 
0x0016d266: test al, 0xcc; add esi, ebx; jmp dword ptr [ebp - 0x75]; 
0x0008783c: test al, 0xe4; call dword ptr [eax - 1]; 
0x0017abe6: test al, 0xf0; inc dword ptr [ebx - 0x2f08e33c]; shr eax, 0x1f; ret; 
0x001aa075: test al, 0xf0; jne 0x1aa130; lea eax, [edi - 0x10]; pop edi; ret; 
0x0013ba36: test al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x000aa8e1: test al, 0xf6; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a875d: test al, 0xf7; call dword ptr [ebp - 1]; 
0x00137dde: test al, 0xf9; call dword ptr [eax + 0x6a]; 
0x001367e5: test al, 0xf9; call dword ptr [eax - 0x18]; 
0x001367e5: test al, 0xf9; call dword ptr [eax - 0x18]; and bl, bl; out dx, eax; jmp dword ptr [esi - 0x70]; 
0x00137196: test al, 0xf9; call dword ptr [eax - 0x75]; 
0x00137384: test al, 0xf9; call dword ptr [edx + 0x50]; 
0x001a9dda: test al, 0xf; jne 0x1a9ea0; test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x00079abb: test al, 0xfb; jmp dword ptr [esi - 0x70]; 
0x0010e0c4: test al, 0xfe; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0006c035: test al, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x0012e983: test al, 1; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00176e22: test al, 1; add byte ptr [eax], al; pop ebx; pop esi; pop edi; ret; 
0x0009859b: test al, 1; je 0x985e0; mov eax, 0xf0; mov ecx, 0x80; call dword ptr gs:[0x10]; 
0x001a9ee4: test al, 1; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x00099834: test al, 1; jne 0x9980a; mov eax, 0x10; pop ebx; ret; 
0x001a7d3b: test al, 2; jne 0x1a7dc0; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a875b: test al, 2; jne 0x1a8940; mov eax, ecx; ret; 
0x001a8a69: test al, 2; jne 0x1a8b90; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x001a8f05: test al, 2; jne 0x1a8fa0; test al, 4; jne 0x1a8fb0; lea eax, [edx + 3]; ret; 
0x001a823d: test al, 4; jne 0x1a8360; lea eax, [edi + 3]; pop edi; ret; 
0x001a8753: test al, 4; jne 0x1a8950; test al, 2; jne 0x1a8940; mov eax, ecx; ret; 
0x001a8f0d: test al, 4; jne 0x1a8fb0; lea eax, [edx + 3]; ret; 
0x000d7b14: test al, ah; add dword ptr [eax], eax; add byte ptr [ebx - 0x362743], al; call dword ptr [ecx + 0xf]; 
0x00181d7b: test al, ah; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7472f714], al; into; stc; call dword ptr [ecx - 0x77]; 
0x0018150b: test al, al; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x001a9ee0: test al, al; je 0x1a9ef0; test al, 1; jne 0x1a9f00; lea eax, [ecx + 4]; ret; 
0x0009ad7f: test al, al; je 0x9ad90; xor eax, eax; add esp, 8; pop ebx; ret; 
0x001872d0: test al, al; jne 0x1872f6; mov eax, 4; add esp, 0xc; ret; 
0x000c3360: test al, al; jne 0xc3358; xor eax, eax; ret; 
0x000fad60: test al, al; jne 0xfad31; xor eax, eax; ret; 
0x00074187: test al, bh; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x000acd65: test al, bh; call dword ptr [esi + 0x50]; 
0x00043f6b: test al, bh; or al, byte ptr [eax]; add byte ptr [ebx - 0x7af3dbbc], cl; sal byte ptr [ebp + ebp*2 - 0x73], 0x46; inc byte ptr [ebx - 0x6bf00220]; ret 0xfe83; 
0x0007c7cb: test bh, 4; add dl, byte ptr [esi]; add byte ptr [eax], al; add byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x0007810c: test bh, ah; mov edx, 0x852bffff; mov eax, 0x83fffffb; in al, dx; or al, 0x89; ret; 
0x0012638f: test bh, al; or al, 0; add byte ptr [ebp - 0x6ad4c7d], cl; call dword ptr [ecx + 0x51]; 
0x00126223: test bh, al; or al, byte ptr [eax]; add byte ptr [ebp - 0x6b0357d], cl; call dword ptr [ecx + 0x51]; 
0x0007f6ac: test bh, bl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001261ba: test bh, cl; or dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f714], al; aad 0x4e; stc; call dword ptr [eax + 0x55]; 
0x0014e27f: test bh, dh; add byte ptr [eax], al; add dh, dh; ret 0xf08; 
0x00049cde: test bh, dh; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0006b1cd: test bh, dh; and dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf801; 
0x000b4ae4: test bh, dl; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000a8a38: test bl, ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76c3dbbc], cl; ret 0x448b; 
0x000847a0: test bl, ch; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x00039ed0: test bl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f714], al; aad 0x2e; stc; call dword ptr [eax + 0x53]; 
0x0012c918: test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x000fedd8: test bl, dl; add dword ptr [eax], eax; add byte ptr [ebx + 0x48b9f14], cl; and al, 0x29; ret 0x5689; 
0x00089df8: test bl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret 0x820f; 
0x000d7eeb: test byte ptr [0x31000009], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x001b09f6: test byte ptr [0x66000005], bl; cmp eax, 0x840f0800; ret; 
0x00075226: test byte ptr [0x83000001], al; ret 0x8904; 
0x0017380d: test byte ptr [0x83ffeb11], ch; in al, dx; or al, 0x55; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00145c34: test byte ptr [0x89000001], ah; ret 0xe283; 
0x00131065: test byte ptr [eax + 0x18bb01ce], 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00034968: test byte ptr [eax + 0x200], dl; ret; 
0x0008560b: test byte ptr [eax + 0x39000000], ch; ret; 
0x0007c8ff: test byte ptr [eax + eax + 0x468b0000], bh; push 0x850fc085; ret 0; 
0x0016c867: test byte ptr [eax + eax + 0x54890000], al; and al, 4; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x001a3cb1: test byte ptr [eax + eax - 0x127d0000], bl; or byte ptr [edi], cl; test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x0012ed77: test byte ptr [eax + eax - 0x137d0000], al; add al, 0x89; ret; 
0x000c2dc0: test byte ptr [eax + eax - 0x8be0000], dl; ret 3; 
0x0004927b: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x70e9; 
0x000481ac: test byte ptr [eax + eax*4], ah; add al, byte ptr [eax]; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x001b024e: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add bh, dh; ret; 
0x0002e679: test byte ptr [eax + eax*4], ah; add byte ptr [eax], al; add byte ptr [eax - 1], dl; je 0x2e6a7; push dword ptr fs:[esp + 0x64]; call esi; 
0x00137f0a: test byte ptr [eax + eax], 0x81; ret; 
0x00190cc8: test byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; add edx, ecx; jmp ebx; 
0x001a96b1: test byte ptr [eax + eax], bh; add byte ptr [eax + 0xc], bh; pop edi; ret; 
0x00105bd5: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76cbdbbc], cl; ret; 
0x000d06f3: test byte ptr [eax + ebp*4], ah; add byte ptr [eax], al; add cl, ch; cmp cl, 0xff; call dword ptr [eax + 0x6a]; 
0x0011eaae: test byte ptr [eax + ebp*8], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x6b5d17a], cl; call dword ptr [eax - 0x18]; 
0x0006e561: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x3920246c], cl; ret; 
0x000cf027: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ecbdbac], cl; ret 0; 
0x000c8665: test byte ptr [eax + ebx*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x7ed3dbac], cl; ret 0; 
0x00115804: test byte ptr [eax + ebx], ah; add dword ptr [eax], eax; add byte ptr [ebx + 0xf14247c], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0016c163: test byte ptr [eax + ecx*4], ah; add al, 0; add byte ptr [ebp - 0x69d617d], cl; call dword ptr [eax - 0x18]; 
0x0014de35: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x1008b11], cl; ret 0x5052; 
0x001b299a: test byte ptr [eax + ecx*4], ah; add byte ptr [eax], al; add byte ptr [ebx - 0x76f7dbbc], cl; ret 0x8489; 
0x0012614e: test byte ptr [eax + ecx], ch; add byte ptr [ebx - 0x7c72f714], al; or byte ptr [esi - 7], cl; call dword ptr [eax + 0x55]; 
0x0003da1f: test byte ptr [eax + edi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001578c8: test byte ptr [eax + edx*4], ah; add al, 0; add byte ptr [ecx - 0x76cbdbbc], cl; ret; 
0x000626a1: test byte ptr [eax + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx + 0x391c246c], cl; ret; 
0x00115866: test byte ptr [eax + edx], ah; add dword ptr [eax], eax; add byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc10c; 
0x0014da90: test byte ptr [eax + esi*4], ah; add byte ptr [eax], al; add byte ptr [eax + 0x6a], dl; add eax, ebp; ret 0xf9a2; 
0x001a9661: test byte ptr [eax - 0x48000000], bh; or byte ptr [eax], al; add byte ptr [eax], al; pop edi; ret; 
0x001742f4: test byte ptr [eax - 0x6d910], dl; notrack jmp eax; lea esi, [esi]; xor eax, eax; pop ebx; ret; 
0x001262d9: test byte ptr [eax - 0x72fffff0], ah; xor eax, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x0008aa11: test byte ptr [eax - 0x75000000], bh; inc esi; add al, 0x8b; push esi; or byte ptr [ecx], ch; ret 0xfa39; 
0x0002c4c0: test byte ptr [eax - 0x75000000], dl; jl 0x2c4ec; and al, 0x89; ret 0xfa29; 
0x00095f21: test byte ptr [eax - 0x77000000], bh; ret 0xe281; 
0x000444bd: test byte ptr [eax - 0x7cfffffc], bl; ret 0x3101; 
0x000dd873: test byte ptr [eax - 0x7cfffffd], cl; in al, dx; or byte ptr [ebp - 0x6b9d27d], cl; call dword ptr [eax + 0x56]; 
0x0008490c: test byte ptr [eax - 0x7d000000], al; in al, dx; or al, 0x8d; or dword ptr [eax - 4], 0xffffffff; call dword ptr [eax - 0x73]; 
0x0013d64a: test byte ptr [eax - 0x7d000000], cl; ret 0x8303; 
0x001050dc: test byte ptr [eax - 0x9fffff0], ah; ret 0xf02; 
0x0016032f: test byte ptr [eax - 7], ah; call dword ptr [eax - 0x18]; 
0x0017df33: test byte ptr [eax], 0; add byte ptr [eax - 0x73], dl; xchg byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x0003e291: test byte ptr [eax], 0; add esp, 0x1c; ret; 
0x0008b468: test byte ptr [eax], 0x80; jne 0x8b470; ret; 
0x00080d86: test byte ptr [eax], ah; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebp - 0x6ff7d], cl; call dword ptr [eax - 0x73]; 
0x00049dc7: test byte ptr [eax], ah; add byte ptr [eax], al; add cl, ch; ret; 
0x0005e69f: test byte ptr [eax], ah; add byte ptr [eax], al; add dh, dh; ret 0xf01; 
0x000f0ec7: test byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0012d036: test byte ptr [eax], al; add byte ptr [eax], al; lea ecx, [esp + 0xc]; mov eax, 0xc5; call dword ptr gs:[0x10]; 
0x0016c868: test byte ptr [eax], al; add byte ptr [eax], al; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x0012d073: test byte ptr [eax], al; add byte ptr [eax], al; mov eax, 0x6c; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0013093d: test byte ptr [eax], al; add byte ptr [eax], al; mov ebx, 3; mov dword ptr [esp + 0x18], eax; mov eax, 0x75; call dword ptr gs:[0x10]; 
0x001263a9: test byte ptr [eax], bl; or al, 0; add byte ptr [ebp - 0x6acf87d], cl; call dword ptr [edx + 0x52]; 
0x0012605b: test byte ptr [eax], ch; add eax, 0xec830000; or byte ptr [ebp - 0x6b4397d], cl; call dword ptr [eax + 0x55]; 
0x000cd53b: test byte ptr [eax], ch; add eax, dword ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0010d914: test byte ptr [eax], dh; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x00064387: test byte ptr [eax], dh; dec esp; ret 0xfff8; 
0x00034b89: test byte ptr [eax], dl; add dword ptr [eax], eax; add byte ptr [ebx], ah; inc esp; and al, 8; ret; 
0x000ca439: test byte ptr [ebp + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0008505e: test byte ptr [ebp + 0x39000001], bh; ret; 
0x00184718: test byte ptr [ebp + 0x50282444], -0x73; xchg dword ptr [esi + esi*2 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x00108ae3: test byte ptr [ebp + 0xf000001], bh; mov dh, 0x43; add al, 0x89; ret 0xe283; 
0x0016ed32: test byte ptr [ebp - 0x69b827d], cl; call dword ptr [edx + 0x6a]; 
0x0009724a: test byte ptr [ebp - 0x72000002], dl; test esp, ecx; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x00138eb4: test byte ptr [ebp - 0x74000002], bh; inc ebx; and byte ptr [ebx - 0x137ce3ad], cl; add al, 0x83; ret; 
0x000390fd: test byte ptr [ebp - 0x77000000], ch; ret 0xab8b; 
0x0018511e: test byte ptr [ebp - 0x77000000], cl; ret 0xe283; 
0x00110bab: test byte ptr [ebp - 0x7cfffff1], ah; ret; 
0x00062c8b: test byte ptr [ebp - 0x7cfffff2], dl; ret; 
0x0013e45b: test byte ptr [ebp - 0x7cfffff9], bl; rol byte ptr [ecx], 0x83; ret 0x3904; 
0x001578f8: test byte ptr [ebp - 0x7cfffffe], bl; in al, dx; or byte ptr [ecx + 0x24448bc7], cl; and byte ptr [ebp - 0x6a13180], cl; call dword ptr [eax + 0x55]; 
0x0015b826: test byte ptr [ebp - 0x7d000000], cl; ret 0x8014; 
0x000e1b7e: test byte ptr [ebp - 0x9fffffb], dh; ret; 
0x0010d55e: test byte ptr [ebp - 0x9fffffc], ah; ret 0xf20; 
0x000a75a4: test byte ptr [ebx + 0x28], 1; jne 0xa7580; sub esp, 0xc; push eax; call edx; 
0x00050c8f: test byte ptr [ebx + 0x31000003], ch; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0004b741: test byte ptr [ebx + 0x39102444], cl; ret 0x840f; 
0x0008ff8c: test byte ptr [ebx + 0x5e5b0c43], 0x29; ror dword ptr [ebp + 0x40000184], 1; add byte ptr [eax], al; ret; 
0x0008fc96: test byte ptr [ebx + 0x650c245c], -1; adc eax, 0x10; pop ebx; pop esi; ret; 
0x0006f5d8: test byte ptr [ebx + 0x7c8001e8], 0x24; push eax; and byte ptr [edi], cl; test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x000c18a0: test byte ptr [ebx + 1], bl; add byte ptr [eax], al; bsr eax, eax; add eax, edi; pop edi; ret; 
0x0012623d: test byte ptr [ebx + ecx], dh; add byte ptr [ebp - 0x6afff7d], cl; call dword ptr [edx + 0x52]; 
0x0016e515: test byte ptr [ebx - 0x138], cl; mov dword ptr [esp + 0x10], edx; pop ebx; pop esi; jmp eax; 
0x00097a99: test byte ptr [ebx - 0x72000003], ah; xchg dword ptr [eax], esp; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x0002b310: test byte ptr [ebx - 0x74000002], bh; jl 0x2b33c; cmp al, 0x8d; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x001ab50a: test byte ptr [ebx - 0x743e76c6], 0x5a; add al, 0x83; ret 0xd304; 
0x0017f6eb: test byte ptr [ebx - 0x74c7dba4], cl; inc esi; or byte ptr [ecx], al; ret; 
0x000ae543: test byte ptr [ebx - 0x75000000], dh; pop ebp; rol byte ptr [ecx], 1; ret; 
0x00144cf4: test byte ptr [ebx - 0x76000002], bh; ret; 
0x00126040: test byte ptr [ebx - 0x7cfffffd], dh; in al, dx; or byte ptr [ebp - 0x6b4a37d], cl; call dword ptr [eax + 0x55]; 
0x001810b0: test byte ptr [ebx - 0x7d000000], bl; in al, dx; or byte ptr [ebp - 0x699316a], cl; call dword ptr [edx - 0x77]; 
0x000301a0: test byte ptr [ebx - 0x7d000000], cl; in al, dx; or byte ptr [ebp - 0x6d47b7d], cl; call dword ptr [eax - 1]; 
0x001814f0: test byte ptr [ebx - 0x7d000000], dh; in al, dx; or byte ptr [ebp - 0x6994e55], cl; call dword ptr [ebp + 0x56]; 
0x001a3cba: test byte ptr [ebx - 0x7d000000], dl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000919cf: test byte ptr [ebx - 0x7ffbdbb4], -0xf; add edi, 0x8704; add byte ptr [eax], al; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00033d4d: test byte ptr [ebx - 0x814], dh; test eax, eax; je 0x33d59; call eax; 
0x001a33e3: test byte ptr [ebx - 0x86474], al; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bd6: test byte ptr [ebx - 0x86474], al; sub eax, ecx; pop ebx; ret; 
0x0017dc7f: test byte ptr [ebx - 0x936b], cl; inc dword ptr [ecx]; ret 0x458b; 
0x00181471: test byte ptr [ebx - 0xf76fb3c], 0x5b; pop esi; ret; 
0x000a5bae: test byte ptr [ebx - 7], al; call dword ptr [eax - 0x18]; 
0x0019a9eb: test byte ptr [ebx], 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00183edc: test byte ptr [ebx], al; add byte ptr [eax], al; mov dword ptr [ebx + 0xc], eax; add esp, 0x28; pop ebx; ret; 
0x00174a00: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x137cafb9], cl; or al, 0x55; call dword ptr [eax + 0x10]; 
0x00027bae: test byte ptr [ebx], al; add dword ptr [eax], eax; add byte ptr [ecx - 0x76ff743b], cl; ret 0xce80; 
0x000a3ad8: test byte ptr [ebx], al; add eax, 0x5a8d0000; or dh, dh; ret; 
0x00173fa3: test byte ptr [ebx], al; lodsb al, byte ptr [esi]; and edi, ecx; call dword ptr [eax + 0x52]; 
0x00061ba0: test byte ptr [ebx], al; mov dl, 0x32; stc; call dword ptr [eax + 0x6a]; 
0x000744f4: test byte ptr [ebx], bh; sbb al, 0; add byte ptr [ecx], al; ret; 
0x000d5a50: test byte ptr [ebx], ch; adc byte ptr [eax], al; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x8eb; 
0x000301aa: test byte ptr [ebx], ch; stc; call dword ptr [eax - 1]; 
0x000a9c07: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabaf4]; cmovne eax, edx; ret; 
0x0013af67: test byte ptr [ecx + 0x19c], 1; lea edx, [edx - 0xabb04]; cmovne eax, edx; ret; 
0x00122d57: test byte ptr [ecx + 0x39000000], al; ret; 
0x000c6340: test byte ptr [ecx + 0x75], 2; cmove eax, edx; ret; 
0x000a9d30: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x000a9cf0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x1797b4]; cmove eax, edx; ret; 
0x000abc70: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179b54]; cmove eax, edx; ret; 
0x000aa8a0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17a084]; cmove eax, edx; ret; 
0x000acae0: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x17b744]; cmove eax, edx; ret; 
0x000acb60: test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x18c604]; cmove eax, edx; ret; 
0x000abca0: test byte ptr [ecx + 0x76], 0x10; cmove eax, edx; ret; 
0x000acbe0: test byte ptr [ecx + 0x7b], 4; cmove eax, edx; ret; 
0x00096be3: test byte ptr [ecx + 0x80e1], 0; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0002b1cb: test byte ptr [ecx + eax], bh; add byte ptr [ebx - 0x72c3db84], cl; xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0006c379: test byte ptr [ecx + eax], dh; add byte ptr [ebx - 0x5e76b], cl; dec dword ptr [ebx - 0x5cb63]; inc dword ptr [ecx]; ret 0x389; 
0x0013493c: test byte ptr [ecx + edx*2 + 1], 0x40; cmove edx, eax; mov eax, edx; pop ebx; ret; 
0x0006ec55: test byte ptr [ecx - 0x73934], al; lea eax, [ecx + eax - 0x1ce54b]; jmp eax; 
0x00064971: test byte ptr [ecx - 0x76000007], bl; ret; 
0x00190d31: test byte ptr [ecx - 0x769905be], 0x42; dec byte ptr [ebx + 0x5b082444]; ret; 
0x00186bb6: test byte ptr [ecx - 0x76ffffff], al; ret 0x808b; 
0x0003ebbf: test byte ptr [ecx - 0x7c000008], bl; rol byte ptr [ecx], 0x89; ret; 
0x00138e4a: test byte ptr [ecx - 0x7cfffffe], dh; in al, dx; or byte ptr [ebp - 0xcb43], cl; call dword ptr [edi + 0x6a]; 
0x00140a2a: test byte ptr [ecx - 0x7cfffffe], dl; in al, dx; or al, 0x31; call dword ptr [ebp + 1]; 
0x000a9655: test byte ptr [ecx - 0x7cffffff], ah; ret 0xe901; 
0x0017397a: test byte ptr [ecx - 0x7d000000], ah; rcr byte ptr [ebx], 0x89; loope 0x17390e; ret 0x25; 
0x000a24aa: test byte ptr [ecx - 0x7d000000], ch; in al, dx; add al, 0x8d; sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x00138ed3: test byte ptr [ecx - 0x837b], cl; call dword ptr [esi + 0x6a]; 
0x000a9cab: test byte ptr [ecx - 0xd14], dl; ret; 
0x000a9c7b: test byte ptr [ecx - 0xe34], dl; ret; 
0x00091b61: test byte ptr [ecx], 0xeb; call dword ptr gs:[0x10]; 
0x001a7168: test byte ptr [ecx], al; add byte ptr [eax], al; pop ebx; ret; 
0x00111571: test byte ptr [ecx], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x6af0fe05], al; ret; 
0x0006ec5c: test byte ptr [ecx], al; mov ch, 0x1a; jecxz 0x6ec61; jmp eax; 
0x0015451a: test byte ptr [ecx], bh; add dword ptr [eax], eax; add byte ptr [ebx - 0x7c72f314], al; sub byte ptr [esi - 7], bl; call dword ptr [eax - 0x73]; 
0x00129208: test byte ptr [ecx], bh; add dword ptr [eax], eax; add byte ptr [edi], cl; xchg dword ptr [0xdb000001], ecx; test al, 0xc; ret 0xfff9; 
0x001694c1: test byte ptr [ecx], bh; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7c72f314], al; inc edx; arpl cx, di; call dword ptr [eax - 0x18]; 
0x00050d27: test byte ptr [ecx], cl; add al, 0; add byte ptr [ebx - 0x7cdfdb84], cl; jmp dword ptr [eax]; 
0x000b4b3a: test byte ptr [ecx], dl; idiv bh; inc dword ptr [eax + 0xf000a79]; test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x0008547c: test byte ptr [edi + 0x39000000], bh; ret; 
0x00085c6c: test byte ptr [edi + 0x39000000], dh; ret; 
0x000fb64e: test byte ptr [edi + edi*8 - 1], ch; inc dword ptr [ecx + 0x654973fa]; push edx; mov edx, 0x20; cmovne eax, edx; ret; 
0x0013823c: test byte ptr [edi - 0x74ffffff], dl; push esi; or al, 0xf6; ret 0xf04; 
0x0008fa14: test byte ptr [edi - 0x75000000], ah; dec esp; and al, 0xc; mov eax, 0x1a6; xor edx, edx; call dword ptr gs:[0x10]; 
0x00175754: test byte ptr [edi - 0x75000000], ah; inc esi; cmp al, 0x83; in al, dx; or al, 0x55; call dword ptr [eax + 0x10]; 
0x001894b4: test byte ptr [edi - 0x75000000], dl; outsb dx, byte ptr [esi]; or bh, dh; ret 0x202; 
0x0010b809: test byte ptr [edi - 0x77000000], ch; ret 0x583b; 
0x00030687: test byte ptr [edi - 0x7cffffff], dh; rol byte ptr [ecx], 0x83; ret; 
0x000a966f: test byte ptr [edi - 0x7cffffff], dl; ret 0xe901; 
0x001a39cc: test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x000dfff5: test byte ptr [edi - 0x9ffffe3], bh; ret; 
0x000fda08: test byte ptr [edi - 0xe], dl; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0015ac1c: test byte ptr [edi - 7], bl; call dword ptr [eax + 0x55]; 
0x001a6e03: test byte ptr [edi], -0x4a; push esi; imul byte ptr [ecx]; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x000ef672: test byte ptr [edi], -0x6b; ror byte ptr [ecx + 0x50202444], 0xe8; nop; ret 1; 
0x0010740b: test byte ptr [edi], -0x6c; ret 0xd008; 
0x0010d294: test byte ptr [edi], -0x6c; ret 0xff85; 
0x0013da3a: test byte ptr [edi], -0x78; add dword ptr ss:[eax], eax; add byte ptr [ebx - 0x76bbdbbc], cl; ret; 
0x00043ace: test byte ptr [edi], -0x7b; ret; 
0x00116da1: test byte ptr [edi], -0x7c; nop; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce7dbbc], cl; ret; 
0x0008a4a7: test byte ptr [edi], -0x7c; ret 0; 
0x001b3c9d: test byte ptr [edi], -0x7c; ret 0xfffd; 
0x001ae871: test byte ptr [edi], -0x7c; ret 1; 
0x000cd8b6: test byte ptr [edi], -0x7c; ret; 
0x000bb4a6: test byte ptr [edi], 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001884fc: test byte ptr [edi], al; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000b4b44: test byte ptr [edi], al; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00086f6c: test byte ptr [edi], bh; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x000d69b7: test byte ptr [edi], bl; add al, byte ptr [eax]; add byte ptr [ebx - 0x363343], al; call dword ptr [eax]; 
0x0006f1f5: test byte ptr [edi], ch; or dword ptr [eax], eax; add byte ptr [ecx], al; ret; 
0x0018829c: test byte ptr [edi], cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x73ff0cec], al; cmp al, ch; movsb byte ptr es:[edi], byte ptr [esi]; ret; 
0x001262f3: test byte ptr [edi], dh; adc byte ptr [eax], al; add byte ptr [ebp - 0x6aeeb7d], cl; call dword ptr [edx + 0x52]; 
0x00063224: test byte ptr [edi], dh; or eax, dword ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret 0x44c7; 
0x0006dc35: test byte ptr [edi], dh; ret; 
0x00152e8c: test byte ptr [edx + 0x39000001], bh; ret 0x840f; 
0x00073143: test byte ptr [edx + 0x39000004], dl; ret; 
0x000944a2: test byte ptr [edx + 0x80], 0x10; jne 0x944b8; xor eax, eax; add esp, 0xc; ret; 
0x0009a928: test byte ptr [edx + ecx], cl; add byte ptr [esi - 0x70], ah; nop; endbr32; xor eax, eax; ret; 
0x00096976: test byte ptr [edx - 0x72000002], bh; xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x000649ab: test byte ptr [edx - 0x72ffffeb], dh; push eax; add dword ptr [ecx + 0xc60455], ecx; and eax, 0xfffb62e9; jmp dword ptr [esi - 0x70]; 
0x00069c09: test byte ptr [edx - 0x74ffffe2], ch; test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x001799d1: test byte ptr [edx - 0x77000000], bl; ret; 
0x0014ebd8: test byte ptr [edx - 0x7c000002], bl; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x00093d2d: test byte ptr [edx - 0x7c000005], bl; jecxz 0x93d55; jne 0x938cc; lea ecx, [ebp + 0x220]; mov eax, 0x9b; call dword ptr gs:[0x10]; 
0x00174f89: test byte ptr [edx - 0x7cfffffc], dl; in al, dx; or al, 0x8b; inc ebp; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x000c2d9d: test byte ptr [edx - 0x8ffffff], dl; ret 3; 
0x001a6d69: test byte ptr [edx - 0xa000000], ah; ret 0x7501; 
0x0002ab81: test byte ptr [edx - 7], dh; call dword ptr [eax - 0x73]; 
0x000b3c86: test byte ptr [edx], 0; add byte ptr [edi + 0x5b], bl; ret; 
0x0005b79d: test byte ptr [edx], 0x20; je 0x5b7b0; add esp, 0xc; ret; 
0x0007958d: test byte ptr [edx], 0x20; je 0x795a0; add esp, 0xc; ret; 
0x00126091: test byte ptr [edx], bh; add eax, 0xec830000; or byte ptr [ebp - 0x6b3ac7d], cl; call dword ptr [eax + 0x55]; 
0x0007db7a: test byte ptr [edx], bl; add byte ptr [eax], al; add dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x0007dae9: test byte ptr [edx], bl; add byte ptr [eax], al; ret; 
0x000d6072: test byte ptr [edx], dh; or al, 0; add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x0007d03d: test byte ptr [esi + 0x39000001], cl; ret; 
0x0011e255: test byte ptr [esi + 4], bh; add byte ptr [eax], al; mov ebx, dword ptr [esp + 0x20]; mov eax, 0xb7; mov ecx, esi; call dword ptr gs:[0x10]; 
0x0006f5e2: test byte ptr [esi + eax], ah; add byte ptr [ecx], al; ret; 
0x0010e272: test byte ptr [esi - 0x45ffffff], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ror byte ptr [edi], 1; dec esp; ret 0xdae9; 
0x001850d5: test byte ptr [esi - 0x77000000], dh; ret 0xe283; 
0x0016db4b: test byte ptr [esi - 0x7c000002], bh; in al, dx; or al, 0x56; call eax; 
0x001087de: test byte ptr [esi - 0x7c000006], dh; into; call dword ptr [edi + 0x57]; 
0x00126118: test byte ptr [esi - 0x7cfffff9], dh; in al, dx; or byte ptr [ebp - 0x6b2877d], cl; call dword ptr [eax + 0x55]; 
0x00030a95: test byte ptr [esi - 0x7cffffff], dl; in al, dx; or byte ptr [ebp - 0x68b9b79], cl; call dword ptr [eax + 0x56]; 
0x000ee6e3: test byte ptr [esi - 0x7d000000], bl; ret 0x8901; 
0x0002f4f1: test byte ptr [esi - 0x7d000000], cl; ret; 
0x0008c5ee: test byte ptr [esi], 0x80; jne 0x8c620; add esp, 4; pop ebx; pop esi; ret; 
0x000815b0: test byte ptr [esi], 2; jne 0x81630; sub esp, 0xc; mov eax, dword ptr [eax + 0x88]; push esi; call dword ptr [eax + 0x34]; 
0x000cb6e8: test byte ptr [esi], al; add byte ptr [ebx + 0x7c8310c4], al; and al, 0x18; adc byte ptr [edi], cl; xchg esp, eax; ret 0xf883; 
0x00062d06: test byte ptr [esi], al; dec esp; ret 0xfff8; 
0x000593e6: test byte ptr [esi], ch; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x0005c6fd: test byte ptr [esi], cl; or dword ptr [eax], eax; add byte ptr [eax - 0xcb43], al; jmp dword ptr [esi - 0x75]; 
0x00091898: test byte ptr [esi], dh; add byte ptr [eax], al; add esp, 0x20; add esp, 0xc; ret; 
0x000696fe: test byte ptr [esi], dl; cmp byte ptr [eax], al; add byte ptr [ebx - 0x5cb7b], cl; call ecx; 
0x0014eca0: test byte ptr [esp + eax*4], ah; add byte ptr [eax], al; add byte ptr [ebp - 0x6a4087d], cl; call dword ptr [eax - 0x73]; 
0x000db950: test byte ptr [esp + eax], ah; add dword ptr [eax], eax; add byte ptr [ecx + 0x50302444], cl; mov eax, dword ptr [esp + 0x64]; call eax; 
0x00066b73: test byte ptr [esp + eax], ch; add byte ptr [ecx], bh; ret; 
0x000ca610: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x39082444], cl; ret; 
0x0009b45e: test byte ptr [esp + ebp*4], ah; add byte ptr [eax], al; add dh, dh; ret 0xf02; 
0x0004f155: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0x8d2e; 
0x000501c8: test byte ptr [esp + ecx*4], ah; sbb eax, dword ptr [eax]; add byte ptr [ecx - 0x76c7dbbc], cl; ret 0xd5e9; 
0x0014a704: test byte ptr [esp + edx*4], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x0011577c: test byte ptr [esp + edx], ah; add dword ptr [eax], eax; add byte ptr [ecx], dh; fisttp dword ptr [ecx - 0x763e7611]; ret 0xc031; 
0x0009e50e: test byte ptr [esp + esi*4], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x47dfdbbc], cl; mov dl, 0; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0004b668: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0x8d2e; 
0x0004c6e4: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx - 0x76dfdbbc], cl; ret 0xc5e9; 
0x001684ad: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x840f; 
0x00043c5d: test byte ptr [esp + esi*8], ah; add byte ptr [eax], al; add cl, dl; call 0x21061cec; ret 0xb60f; 
0x000d104e: test byte ptr [esp], ah; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret; 
0x0015d943: test byte ptr [esp], ah; or dword ptr [eax], eax; add byte ptr [eax + 0x56], dl; mov edx, dword ptr [esp + 0x3c]; call edx; 
0x0019ce14: test ch, 0x40; jne 0x19cde0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0006f73f: test ch, ah; add eax, dword ptr [eax]; add byte ptr [ecx], al; ret; 
0x001047b5: test ch, al; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001a9608: test ch, bh; add byte ptr [eax], al; add byte ptr [eax + 4], bh; pop edi; ret; 
0x0005be3d: test ch, bh; inc dword ptr [ebx + 0x5e5b0cc4]; pop edi; pop ebp; ret; 
0x000b4aee: test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00140016: test ch, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x41f0d0ec], cl; ret; 
0x000a73ee: test ch, dl; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f714], al; jae 0xa741e; call eax; 
0x0010296e: test ch, dl; add eax, dword ptr [eax]; add byte ptr [ebx - 0x7cf3dbbc], cl; ret 0xc704; 
0x00042ea8: test cl, 0x20; je 0x42eb1; mov eax, edx; xor edx, edx; ret; 
0x0019cd6b: test cl, 0x40; jne 0x19cde0; movzx ecx, byte ptr [eax + 7]; movzx eax, byte ptr [edx + 7]; sub eax, ecx; ret; 
0x0009faf3: test cl, 0x40; jne 0x9fb20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x00058978: test cl, bh; add byte ptr [eax], al; add byte ptr [ebx - 0x362f43], al; call dword ptr [ecx + 0xf]; 
0x00092e53: test cl, bh; call dword ptr [eax + 0x68]; 
0x0009320b: test cl, bh; call dword ptr [eax - 0x18]; 
0x00093391: test cl, bh; call dword ptr [eax - 0x73]; 
0x00093391: test cl, bh; call dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x00092f0f: test cl, bh; call dword ptr [edx + 0x50]; 
0x000c1922: test cl, bl; add byte ptr [eax], al; add byte ptr [edi], cl; mov ebp, 0x5ff801c0; ret; 
0x00030182: test cl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x6c72f714], al; jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x001670a2: test cl, cl; add byte ptr [eax], al; add byte ptr [ebx - 0x7cefdbac], cl; ret 0x8902; 
0x001260e2: test cl, cl; add eax, 0xec830000; or byte ptr [ebp - 0x6b2ef7d], cl; call dword ptr [eax + 0x55]; 
0x00113280: test cl, cl; jne 0x113263; xor eax, eax; pop ebx; ret; 
0x000f1010: test cl, cl; jne 0xf0ff3; xor eax, eax; pop ebx; ret; 
0x000f3b20: test cl, cl; jne 0xf3b03; xor eax, eax; pop ebx; ret; 
0x000f4910: test cl, cl; jne 0xf48f3; xor eax, eax; pop ebx; ret; 
0x000f7440: test cl, cl; jne 0xf7423; xor eax, eax; pop ebx; ret; 
0x000f8250: test cl, cl; jne 0xf8233; xor eax, eax; pop ebx; ret; 
0x0010d28a: test cl, dh; add byte ptr [eax], al; add byte ptr [ebx - 0x7aebdb84], cl; test byte ptr [edi], -0x6c; ret 0xff85; 
0x00134d9a: test cl, dl; add eax, dword ptr [eax]; add byte ptr [ecx], bh; ret; 
0x001a75c5: test dh, 0x20; jne 0x1a7610; test dh, 0x40; jne 0x1a7614; add eax, 0xf; ret; 
0x001a75ca: test dh, 0x40; jne 0x1a7614; add eax, 0xf; ret; 
0x001a7817: test dh, 0x40; jne 0x1a79f0; lea eax, [edi + 0xf]; pop edi; ret; 
0x001a93b2: test dh, 0x40; jne 0x1a9741; add eax, 0xf; pop edi; ret; 
0x001a9eb9: test dh, 0xf; jne 0x1a9f20; lea eax, [ecx + 0xc]; ret; 
0x001a75ac: test dh, 2; jne 0x1a7600; test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x001a75b1: test dh, 4; jne 0x1a7604; add eax, 0xb; ret; 
0x001a785d: test dh, 4; jne 0x1a79f0; lea eax, [edi + 0xb]; pop edi; ret; 
0x001a9389: test dh, 4; jne 0x1a972d; add eax, 0xb; pop edi; ret; 
0x001a964e: test dh, al; add byte ptr [eax], al; add byte ptr [ebx - 0x7bf0fc01], al; ret 0; 
0x00126169: test dh, al; or byte ptr [eax], al; add byte ptr [ebx - 0x7c72f714], al; cmp cl, byte ptr [esi - 7]; call dword ptr [eax + 0x55]; 
0x0004d143: test dh, bh; add al, byte ptr [eax]; add byte ptr [ecx], dh; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x0007fe7d: test dh, bh; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001a9dd5: test dh, dl; add byte ptr [eax], al; add byte ptr [eax - 0x417af0f1], ch; add byte ptr [eax], al; add dh, dh; ret 0xf0f; 
0x001a7585: test dl, 0x20; jne 0x1a75f0; test dl, 0x40; jne 0x1a75f4; add eax, 7; ret; 
0x001a758a: test dl, 0x40; jne 0x1a75f4; add eax, 7; ret; 
0x001a7774: test dl, 0x40; jne 0x1a79f0; lea eax, [edi + 7]; pop edi; ret; 
0x001a9362: test dl, 0x40; jne 0x1a9719; add eax, 7; pop edi; ret; 
0x001a9de2: test dl, 0xf; jne 0x1a9f20; lea eax, [ecx + 4]; ret; 
0x0006b818: test dl, 0xff; dec dword ptr [ebx - 0x58f7b]; jmp dword ptr [ebp - 0x75]; 
0x001a7566: test dl, 2; jne 0x1a75e0; test dl, 4; jne 0x1a75e4; add eax, 3; ret; 
0x001a756b: test dl, 4; jne 0x1a75e4; add eax, 3; ret; 
0x001a77ba: test dl, 4; jne 0x1a79f0; lea eax, [edi + 3]; pop edi; ret; 
0x001a933c: test dl, 4; jne 0x1a9705; add eax, 3; pop edi; ret; 
0x0006f257: test dl, ah; or al, byte ptr [eax]; add byte ptr [edi], cl; mov esi, 0x89c68900; ret; 
0x00191bcb: test dl, bh; jmp dword ptr [esi - 0x70]; 
0x00075371: test dl, bl; add al, byte ptr [eax]; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00069dfb: test dl, bl; xor byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0007417f: test dl, ch; adc dword ptr [eax], eax; add byte ptr [ebp - 0x77bf040], al; adc al, 0; add byte ptr [ebp - 0x4cb7b], cl; call dword ptr [ecx - 1]; 
0x00051851: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx + 0x390c2444], cl; ret; 
0x0017f1ff: test dl, ch; add byte ptr [eax], al; add byte ptr [ebx - 0x7af0fdc8], al; ret; 
0x0017ad48: test dl, ch; inc dword ptr [ebx + 0x5e5b2cc4]; pop edi; pop ebp; ret; 
0x00080401: test dl, cl; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000a5c71: test dl, cl; add eax, dword ptr [eax]; add byte ptr [ebp + 0x94c85], cl; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x001132b3: test dl, dl; je 0x113284; pop ebx; ret; 
0x000d9ef5: test dl, dl; je 0xd9f10; mov cl, dl; and cl, 0xf; je 0xd9f20; ret; 
0x000f1043: test dl, dl; je 0xf1014; pop ebx; ret; 
0x000f3b53: test dl, dl; je 0xf3b24; pop ebx; ret; 
0x000f4943: test dl, dl; je 0xf4914; pop ebx; ret; 
0x000f7473: test dl, dl; je 0xf7444; pop ebx; ret; 
0x000f8283: test dl, dl; je 0xf8254; pop ebx; ret; 
0x0003a05f: test dl, dl; jne 0x3a040; ret; 
0x000a8e42: test dl, dl; mov edx, 0; cmove eax, edx; ret; 
0x00043732: test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x00028348: test dl, dl; movzx eax, dl; mov edx, 0xffffffff; cmovs eax, edx; ret; 
0x00069a6b: test dl, dl; sbb dword ptr [eax], eax; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0x9589; 
0x00076dfa: test dword ptr [0x3900000c], esi; ret 0x840f; 
0x000a75be: test dword ptr [0x5bfff7ce], edx; pop esi; pop edi; ret; 
0x000b4167: test dword ptr [0x5bfffffe], edx; ret; 
0x000b403f: test dword ptr [0x5bffffff], edi; ret; 
0x000c29cd: test dword ptr [0x5e000002], eax; xor eax, eax; pop ebx; ret; 
0x000b9c7e: test dword ptr [0x5f000009], ebx; pop esi; pop ebx; ret; 
0x000b88c6: test dword ptr [0xe9fffff5], esp; pushal; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000b43f6: test dword ptr [0xe9fffff6], eax; inc eax; idiv edi; jmp dword ptr [esi + 0xf]; 
0x000b43d6: test dword ptr [0xe9fffff6], esp; pushal; idiv edi; jmp dword ptr [esi + 0xf]; 
0x0010e3be: test dword ptr [0xf7fffffd], edi; ret 0x67; 
0x000f23e1: test dword ptr [eax + 0x1fffffb], eax; ret; 
0x0002802c: test dword ptr [eax + 0x29], edi; stc; call dword ptr [edi - 1]; 
0x0003e7a0: test dword ptr [eax + 0x29fffffc], edi; ret; 
0x0003fcca: test dword ptr [eax + 0x2f], eax; stc; call dword ptr [ebx + 0x50]; 
0x000b3ddb: test dword ptr [eax + 0x5f000001], esp; pop ebx; ret; 
0x000b3ce3: test dword ptr [eax + 0x5f000002], ebx; pop ebx; ret; 
0x000c1f0b: test dword ptr [eax + 0x66000000], esi; pmovmskb eax, mm1; bsr eax, eax; add eax, ecx; ret; 
0x00027fa8: test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x000bb23b: test dword ptr [eax + 0xa], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x00077dfd: test dword ptr [eax + 0xffffffb], edi; test eax, esp; ret; 
0x001a47b1: test dword ptr [eax + 2], edx; add byte ptr [eax], al; pop ebx; ret; 
0x000b9c5b: test dword ptr [eax + 9], eax; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001a40b1: test dword ptr [eax + 9], edx; add byte ptr [eax], al; pop ebx; ret; 
0x001a789f: test dword ptr [eax + eax + 0x40a80000], edi; jne 0x1a7970; lea eax, [edi + 7]; pop edi; ret; 
0x000fe14e: test dword ptr [eax + eax + 0x4f60000], ebx; inc edx; add dword ptr [esi + ecx - 0x77], esi; ret; 
0x000d9c67: test dword ptr [eax + eax + 0x5e5f0000], esp; ret; 
0x000fb4d7: test dword ptr [eax + eax - 0x2f770000], edx; pop ebx; ret; 
0x00184cf7: test dword ptr [eax + eax - 0x3b7d0000], ebp; adc byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a03fe: test dword ptr [eax + eax - 0x3b7d0000], ebx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0012dd86: test dword ptr [eax + eax - 0x3b7d0000], edx; and byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x0013ccf5: test dword ptr [eax + ebx*2], eax; stc; call dword ptr [eax - 0x18]; 
0x000b9cdf: test dword ptr [eax + ecx + 0x5e5f0000], edi; pop ebx; ret; 
0x000b9d27: test dword ptr [eax + ecx], esi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00027f9e: test dword ptr [eax + esi*2 - 7], esp; dec dword ptr [ecx - 0x48f0f7bd]; test dword ptr [eax + 0x70], ebp; stc; jmp dword ptr [esi - 0x77]; 
0x001a8f2b: test dword ptr [eax - 0x58000000], esp; inc eax; jne 0x1a8fe0; lea eax, [edx + 7]; ret; 
0x000d66ee: test dword ptr [eax - 0x72000037], edx; inc esi; dec dword ptr [edi]; dec edi; ret 0x48d; 
0x001a8f33: test dword ptr [eax - 0x73000000], ebp; inc edx; pop es; ret; 
0x001a7d63: test dword ptr [eax - 0x73000000], ecx; inc edi; hlt; pop edi; ret; 
0x00069a71: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00069c0f: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069e01: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000684d7: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x000682fe: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x0006875f: test dword ptr [eax - 0x74000005], edi; xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x000f25e6: test dword ptr [eax - 0x76000005], ecx; ret 0xe329; 
0x00068742: test dword ptr [eax - 0x76000005], edi; lea esi, [edx + edi*8 - 1]; call dword ptr [eax - 0x18]; 
0x00069a48: test dword ptr [eax - 0x76000005], edi; lea esp, [edx + edi*8 - 1]; dec dword ptr [ecx - 0x5976b]; call dword ptr [eax - 0x18]; 
0x000d776c: test dword ptr [eax - 0x76000037], edi; ret 0x12e9; 
0x000d6432: test dword ptr [eax - 0x76000037], edi; ret 0xb48d; 
0x001a873b: test dword ptr [eax - 0x77ffffff], esi; ret 0xe280; 
0x00068737: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x29; ret; 
0x0006c812: test dword ptr [eax - 0x7c000005], edi; in al, dx; or al, 0x89; ret; 
0x000f2ee1: test dword ptr [eax - 0x7c000005], edx; in al, dx; or al, 0x8d; add al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00056885: test dword ptr [eax - 0x7c000037], edi; mov ebp, 0xffffc9d0; adc byte ptr [ecx - 0x362743], cl; dec dword ptr [ebx - 0x6bf06ff4]; ret 0xf980; 
0x0016d9a2: test dword ptr [eax - 0x7cfffffe], edi; ret; 
0x00148a3b: test dword ptr [eax - 0x7cffffff], eax; in al, dx; or al, 0x8d; sbb dword ptr [ebx + ebx*2], -7; call dword ptr [eax - 0x18]; 
0x00155bd3: test dword ptr [eax - 0x7d000000], ebp; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00112ab3: test dword ptr [eax - 0x7d000000], ebp; ret 0x8d01; 
0x001a8b13: test dword ptr [eax - 0x7d000000], ebp; ret 0xf04; 
0x001a39c3: test dword ptr [eax - 0x7d000000], ebp; stc; add byte ptr [edi], cl; test byte ptr [edi - 0x7d000000], cl; ror byte ptr [eax], 0x83; ret 0x5708; 
0x00161273: test dword ptr [eax - 0x7d000000], edi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00161813: test dword ptr [eax - 0x7d000000], esi; clc; add dword ptr [ebp + 0xf04004c], ecx; xchg esp, eax; ret 0x448b; 
0x00171f8f: test dword ptr [eax - 0x7d000000], esi; in al, dx; or al, 0x56; call dword ptr [eax + 0x10]; 
0x0014c12c: test dword ptr [eax - 0x9fffffc], ecx; ret; 
0x000fd613: test dword ptr [eax - 0xa000000], ecx; ret 0x7420; 
0x00173d27: test dword ptr [eax - 4], edi; jmp dword ptr [esi - 0x70]; 
0x0007beb5: test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x000b3d7b: test dword ptr [eax], eax; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000d3dae: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ebx + 0x448b8614], cl; cmp dword ptr [ecx + edi], eax; ret 0x8f0f; 
0x000a1c18: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], al; fidivr dword ptr [ecx]; ret 0xa72; 
0x000d4311: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0x328b; 
0x000d3122: test dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [ecx], ch; ret 0xa8b; 
0x00114be7: test dword ptr [eax], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000a5d58: test dword ptr [eax], eax; cdq; stc; call dword ptr [eax + 0x68]; 
0x000d7a8c: test dword ptr [eax], eax; in eax, 0xff; dec dword ptr [ebx - 0x35e373]; inc dword ptr [ebx - 0x6bf0fe05]; ret 0xc139; 
0x000c49bb: test dword ptr [eax], eax; pushfd; stc; call dword ptr [eax - 0x73]; 
0x00164f53: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x001a91f0: test dword ptr [eax], ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x79f0bf11], al; ret 1; 
0x00163a23: test dword ptr [eax], ebx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000bb283: test dword ptr [eax], ebx; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000f2f7b: test dword ptr [eax], ecx; add byte ptr [eax], al; add byte ptr [ebx - 0x46f63], cl; call dword ptr [esi + 0x51]; 
0x001570c3: test dword ptr [eax], ecx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0015dd63: test dword ptr [eax], edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x000c2bb4: test dword ptr [eax], edx; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00156b1b: test dword ptr [eax], edx; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0016540b: test dword ptr [eax], esi; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0004aa84: test dword ptr [eax], esi; ret 0xfff9; 
0x0016356b: test dword ptr [eax], esp; add dword ptr [eax], eax; add byte ptr [ebx + 0x4c8d01f8], al; add byte ptr [edi + ecx], al; xchg esp, eax; ret 0x448b; 
0x0014a181: test dword ptr [ebp + 0x2e], ebp; stc; call dword ptr [eax + 0x52]; 
0x0014a1c3: test dword ptr [ebp + 0x2e], ebp; stc; call dword ptr [eax + 0x53]; 
0x000531aa: test dword ptr [ebp + 0x30], esp; stc; call dword ptr [edi + 0x6a]; 
0x001a5b6e: test dword ptr [ebp + 0x5b000000], edi; ret; 
0x00183346: test dword ptr [ebp + 0x5b000000], esp; pop esi; pop edi; ret; 
0x001a485c: test dword ptr [ebp + 0x5b000001], esp; ret; 
0x001a467c: test dword ptr [ebp + 0x5b000003], eax; ret; 
0x001a414c: test dword ptr [ebp + 0x5b000008], esi; ret; 
0x000c2a41: test dword ptr [ebp + 0x5e000001], esp; xor eax, eax; pop ebx; ret; 
0x000bb2e6: test dword ptr [ebp + 0x5f000009], esi; pop esi; pop ebx; ret; 
0x001a44a6: test dword ptr [ebp + 5], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000ba00f: test dword ptr [ebp + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x000b9fdf: test dword ptr [ebp + eax + 0x5e5f0000], edi; pop ebx; ret; 
0x000972f9: test dword ptr [ebp + eax*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x000b8866: test dword ptr [ebp - 0x1600000b], eax; sal dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x001a7756: test dword ptr [ebp - 0x57fffffe], edx; and byte ptr [edi], cl; test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x001a88b6: test dword ptr [ebp - 0x58000000], edx; add cl, byte ptr [edi]; test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001a8ae6: test dword ptr [ebp - 0x58000000], esi; add cl, byte ptr [edi]; test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x001a7db6: test dword ptr [ebp - 0x73000000], edx; inc edi; cld; pop edi; ret; 
0x00110ca9: test dword ptr [ebp - 0x74fffff1], esp; jl 0x110cd5; or byte ptr [ebp - 0x65dcb79], cl; call dword ptr [eax + 0x68]; 
0x0002931b: test dword ptr [ebp - 0x74ffffff], ebx; jl 0x29347; sub byte ptr [ebp - 0x6943379], cl; call dword ptr [eax - 0x73]; 
0x000486eb: test dword ptr [ebp - 0x76fffff7], ebx; ret; 
0x00092256: test dword ptr [ebp - 0x77000000], ebp; ret 0xca83; 
0x001a8866: test dword ptr [ebp - 0x78000000], eax; ret 0xe280; 
0x0014a0f6: test dword ptr [ebp - 0x7c000003], esp; ret; 
0x001a8aee: test dword ptr [ebp - 0x7d000000], ebx; ret 0xf00; 
0x0012264a: test dword ptr [ebp - 0x7d000000], ecx; les ebx, ptr [eax]; mov eax, ebx; pop ebx; ret; 
0x001a8b76: test dword ptr [ebp - 0x7d000000], esp; ret 0xf0c; 
0x00166027: test dword ptr [ebp - 3], edx; jmp dword ptr [esi - 0x70]; 
0x000c7531: test dword ptr [ebp - 7], eax; call dword ptr [eax - 0x18]; 
0x00134c2a: test dword ptr [ebp - 7], edx; call dword ptr [ebp - 1]; 
0x001a7d3e: test dword ptr [ebp], edi; add byte ptr [eax], al; lea eax, [edi - 0x10]; pop edi; ret; 
0x001a88be: test dword ptr [ebp], edi; add byte ptr [eax], al; mov eax, ecx; ret; 
0x001414a1: test dword ptr [ebx + 0x30], esp; stc; call dword ptr [eax - 0x77]; 
0x000bb4f8: test dword ptr [ebx + 0x5f000007], esp; pop esi; pop ebx; ret; 
0x000d9bc0: test dword ptr [ebx + 1], ecx; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x001a7778: test dword ptr [ebx + 2], esi; add byte ptr [eax], al; lea eax, [edi + 7]; pop edi; ret; 
0x001a4278: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop ebx; ret; 
0x000bb528: test dword ptr [ebx + 7], esi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9c40: test dword ptr [ebx + 9], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000c8222: test dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x000b3c5f: test dword ptr [ebx + eax], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000c49cb: test dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00145f8f: test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x00145f86: test dword ptr [ebx + edi*8 + 0x458bffff], esi; sbb al, 0x89; test dword ptr [ebx + edi*8 + 0x458bffff], edi; and byte ptr [ecx - 0x4477b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0010fdc9: test dword ptr [ebx + edi*8 - 0x137c0001], ecx; or al, 0x8d; add al, 0x47; stc; call dword ptr [eax - 0x18]; 
0x0013199d: test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x0012a17e: test dword ptr [ebx + edi*8 - 1], ebp; call dword ptr [eax - 0x18]; 
0x000f2099: test dword ptr [ebx + edi*8 - 1], ebp; jmp dword ptr [eax]; 
0x0012a163: test dword ptr [ebx + edi*8 - 1], ecx; call dword ptr [eax - 0x73]; 
0x0013195b: test dword ptr [ebx + edi*8 - 1], ecx; call ecx; 
0x0012a15d: test dword ptr [ebx + edi*8 - 1], edi; dec dword ptr [ecx - 0x4b37b]; call dword ptr [eax - 0x73]; 
0x000f2038: test dword ptr [ebx + edi*8 - 1], edi; inc dword ptr [ecx]; ret; 
0x0012a0a6: test dword ptr [ebx + edi*8 - 1], esi; dec dword ptr [edi]; test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x000f36af: test dword ptr [ebx + edi*8 - 1], esp; dec dword ptr [ebx - 0x49773]; inc dword ptr [ecx]; rol byte ptr [ecx], 1; ret; 
0x0012a022: test dword ptr [ebx + edi*8 - 1], esp; jmp dword ptr [ebp - 0x5f]; 
0x001ae100: test dword ptr [ebx - 0x74fffff7], ebx; xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x00058b77: test dword ptr [ebx - 0x7a740001], esi; ror cl, 0xff; call dword ptr [esi + 0x53]; 
0x0010a79b: test dword ptr [ebx - 0x7c000006], esp; ret 0x8301; 
0x001a938d: test dword ptr [ebx - 0x7cfffffd], ebx; ror byte ptr [ebx], 0x5f; ret; 
0x00175c47: test dword ptr [ebx - 0x7f000000], ebx; les esp, ptr [eax + 0x5b000000]; pop esi; pop edi; ret; 
0x000b8138: test dword ptr [ebx - 0x7ffffffe], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001050e5: test dword ptr [ebx - 0x9fffff1], ebp; ret 0xf04; 
0x001a932e: test dword ptr [ebx - 0xa000000], ecx; ret 0xf02; 
0x0019a8ef: test dword ptr [ebx], 0x8b1c0300; jmp ebx; 
0x001a467d: test dword ptr [ebx], eax; add byte ptr [eax], al; pop ebx; ret; 
0x000bb398: test dword ptr [ebx], eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b42b0: test dword ptr [ebx], ebp; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000e22c5: test dword ptr [ebx], ebx; out 0xff, eax; call dword ptr [ebp + 0x55]; 
0x000b42d0: test dword ptr [ebx], ecx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000bb260: test dword ptr [ebx], edi; or al, byte ptr [eax]; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00179dfd: test dword ptr [ecx + 0x56], esi; stc; call dword ptr [eax + 0x6a]; 
0x001a4380: test dword ptr [ecx + 0x5b000006], eax; ret; 
0x000b41db: test dword ptr [ecx + 0x5bfffffd], esp; ret; 
0x000b40e3: test dword ptr [ecx + 0x5bfffffe], ebx; ret; 
0x000d9c82: test dword ptr [ecx + 0x5f000000], ecx; pop esi; ret; 
0x000b9d02: test dword ptr [ecx + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x0013fe84: test dword ptr [ecx + 0x6afff958], ebp; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x001a5ae2: test dword ptr [ecx + 1], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x001a880a: test dword ptr [ecx + 2], esi; add byte ptr [eax], al; xor eax, eax; ret; 
0x000b9e32: test dword ptr [ecx + 7], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb322: test dword ptr [ecx + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x001aeddc: test dword ptr [ecx + eax + 0x3c890000], ebx; sbb dword ptr [ecx - 0x7cfbe684], ecx; ret; 
0x00157935: test dword ptr [ecx + eax - 0x137d0000], ecx; or byte ptr [ebx - 0x72dfdbbc], cl; adc bh, 0x5e; stc; call dword ptr [eax + 0x55]; 
0x000916c2: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; add esp, 0x94; pop ebx; pop esi; ret; 
0x000d9c07: test dword ptr [ecx + eax], eax; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000c42fc: test dword ptr [ecx + eax], edx; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000d9bd7: test dword ptr [ecx + eax], esi; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x000d5d4e: test dword ptr [ecx + ecx*8 - 0x137c0001], esi; or byte ptr [ebp - 0x7d348], cl; call dword ptr [edi + 0x53]; 
0x000d7ee2: test dword ptr [ecx + ecx*8 - 0x77c0001], eax; dec dword ptr [edi]; test byte ptr [0x31000009], cl; ror byte ptr [edi], cl; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x00056c52: test dword ptr [ecx + ecx*8 - 1], ebp; dec dword ptr [ebx - 0x36977b]; dec dword ptr [ebx - 0x366763]; dec dword ptr [ebx - 0x36936b]; inc dword ptr [ecx]; ret; 
0x000a5c77: test dword ptr [ecx + ecx], ecx; add byte ptr [ecx - 0x9ebdbbc], cl; ret 0xf04; 
0x00093d36: test dword ptr [ecx - 0x72000005], edx; lea esp, [eax]; add al, byte ptr [eax]; add byte ptr [eax + 0x9b], bh; call dword ptr gs:[0x10]; 
0x00091982: test dword ptr [ecx - 0x76fffffe], esi; ret 0x1c8b; 
0x00098f49: test dword ptr [ecx - 0x77000000], ecx; ret 0xf283; 
0x001a24b0: test dword ptr [ecx - 0x7cfffff2], ebp; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0016d025: test dword ptr [ecx - 0x7d000000], ebx; les esi, ptr [ebx + ebx*2]; pop esi; ret; 
0x001a944a: test dword ptr [ecx - 0xa000000], esi; ret 0xf04; 
0x00111df5: test dword ptr [ecx - 7], ecx; call dword ptr [eax - 0x18]; 
0x0006ab17: test dword ptr [ecx], 0x83d689d2; in al, dx; or byte ptr [ebx - 0x58f63], cl; call dword ptr [esi + 0x50]; 
0x001251f0: test dword ptr [ecx], 0x8901558d; ret; 
0x000571ca: test dword ptr [ecx], eax; adc al, 0; add byte ptr [ebx - 0x362f43], al; call dword ptr [eax]; 
0x000bb482: test dword ptr [ecx], ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00044774: test dword ptr [ecx], edi; adc dword ptr [eax], eax; add byte ptr [ebx - 0x7cb3dbbc], cl; rol byte ptr [ecx], 0x39; ret 0x8c0f; 
0x0012484c: test dword ptr [ecx], edx; add byte ptr [ebx + 0x11082], cl; add byte ptr [ebx - 0x3f7af3c0], cl; je 0x12485d; ret; 
0x000400d4: test dword ptr [ecx], edx; add dword ptr [eax], eax; add byte ptr [ecx - 0x76e7dbbc], cl; ret; 
0x000de502: test dword ptr [ecx], esi; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000bb36a: test dword ptr [ecx], esi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0005cf6a: test dword ptr [ecx], esp; add al, byte ptr [eax]; add dh, dh; ret 0xf10; 
0x0013fddc: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x0014909d: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x57]; 
0x00149cf0: test dword ptr [edi + 0x29], esp; stc; call dword ptr [eax - 0x73]; 
0x0014907c: test dword ptr [edi + 0x5b], ebx; stc; call dword ptr [eax - 0x18]; 
0x000b40c5: test dword ptr [edi + 0x5bfffffe], esi; ret; 
0x000d9c4c: test dword ptr [edi + 0x5f000000], edi; pop esi; ret; 
0x000bb70c: test dword ptr [edi + 0x5f000005], ecx; pop esi; pop ebx; ret; 
0x000bb6dc: test dword ptr [edi + 0x5f000005], edi; pop esi; pop ebx; ret; 
0x000bb3fc: test dword ptr [edi + 0x5f000008], ebx; pop esi; pop ebx; ret; 
0x000bb304: test dword ptr [edi + 0x5f000009], edx; pop esi; pop ebx; ret; 
0x000bb73c: test dword ptr [edi + 5], ebx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb42c: test dword ptr [edi + 8], ebp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9e0f: test dword ptr [edi + eax + 0x5e5f0000], ecx; pop ebx; ret; 
0x001a42f5: test dword ptr [edi + eax], ecx; add byte ptr [eax], al; pop ebx; ret; 
0x00025121: test dword ptr [edi + ebp*2 - 7], edi; call dword ptr [eax - 0x18]; 
0x0013263d: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebp - 0x10aa5380]; call dword ptr [eax + 0x6a]; 
0x0017c5a7: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0x8f63]; dec dword ptr [ebx - 0x2abb7700]; les ecx, ptr [ebx - 0xb77b]; dec dword ptr [ecx + 0x1c8d544]; ret; 
0x00142d39: test dword ptr [edi + edi*8 - 1], eax; dec dword ptr [ebx - 0xaf6b]; dec dword ptr [ebx - 0x9363]; dec dword ptr [ebp + 0x48d4004]; ret; 
0x0017ec07: test dword ptr [edi + edi*8 - 1], ebp; call dword ptr [ecx + 0x6a]; 
0x0017eba8: test dword ptr [edi + edi*8 - 1], ebx; call dword ptr [eax + 0x6a]; 
0x0012489f: test dword ptr [edi + edi*8 - 1], ebx; dec dword ptr [ecx + 0x14a165f3]; add byte ptr [eax], al; add byte ptr [ecx - 0x79721bbb], cl; les ecx, ptr [edx - 7]; call dword ptr [eax - 0x73]; 
0x000afac5: test dword ptr [edi + edi*8 - 1], ebx; inc dword ptr [ebx + 0x440ffff8]; ret; 
0x00173b6a: test dword ptr [edi + edi*8 - 1], ecx; call dword ptr [eax + 0x56]; 
0x0017e9e8: test dword ptr [edi + edi*8 - 1], ecx; dec dword ptr [ecx - 0xbf6b]; dec dword ptr [ecx - 0xaf4b]; jmp dword ptr [ebp - 0x75]; 
0x0014288b: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [eax + 0x6a]; 
0x00138c0f: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [ebx + 0x6a]; 
0x00138ed5: test dword ptr [edi + edi*8 - 1], edi; call dword ptr [esi + 0x6a]; 
0x0017eb6a: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebp + 0x5e5bf465]; pop edi; pop ebp; ret; 
0x000fb2d7: test dword ptr [edi + edi*8 - 1], edx; dec dword ptr [ebx - 0x15637b]; inc dword ptr [ebx - 0x7f72f714]; or ecx, dword ptr [eax - 7]; call dword ptr [eax - 1]; 
0x000329bd: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; 
0x000329bd: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ebx - 0x974b]; call dword ptr [edx - 0x18]; ret 0xff07; 
0x00173b64: test dword ptr [edi + edi*8 - 1], esi; dec dword ptr [ecx - 0xb37b]; call dword ptr [eax + 0x56]; 
0x0005d87d: test dword ptr [edi + edi*8 - 1], esi; jmp dword ptr [ebp - 0x75]; 
0x00173cdc: test dword ptr [edi + edi*8 - 1], esp; call dword ptr [eax + 0x6a]; 
0x0005dd19: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ebx + 0x4589b055]; mov eax, 0xfff87ee9; call dword ptr [eax + 0x52]; 
0x0014261a: test dword ptr [edi + edi*8 - 1], esp; dec dword ptr [ecx - 0xa373]; jmp dword ptr [ebp - 0x5f]; 
0x00025dbb: test dword ptr [edi + edi*8 - 1], esp; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0002e236: test dword ptr [edi - 0x74000002], ecx; jl 0x2e262; cmp byte ptr [ebp - 0x695b379], cl; call dword ptr [eax - 0x73]; 
0x00103f1e: test dword ptr [edi - 0x7cfffffb], ebx; ret; 
0x0012a0ac: test dword ptr [edi - 0x7cfffffe], esi; in al, dx; or byte ptr [ebp - 0x46b7b], cl; call dword ptr [eax + 0x6a]; 
0x001a8b4c: test dword ptr [edi - 0x7d000000], ebx; ret 0xf08; 
0x000b822c: test dword ptr [edi - 0x7fffffff], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001a9474: test dword ptr [edi - 0xa000000], esp; ret 0xf20; 
0x00192e74: test dword ptr [edi - 1], eax; inc dword ptr [ecx + 0x46768c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x001a6d94: test dword ptr [edi], 0x29f756b6; rcr byte ptr [edi + 0x5e], 1; pop ebx; ret; 
0x00193ed1: test dword ptr [edi], 0x88ff48b6; dec edx; dec dword ptr [ebx + 0x5b082444]; ret; 
0x000bb76c: test dword ptr [edi], ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000d9bec: test dword ptr [edi], ebx; add dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; ret; 
0x000bb45c: test dword ptr [edi], edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b80a4: test dword ptr [edi], esp; add eax, dword ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000c2b4c: test dword ptr [edx + 0x5e000000], ebx; xor eax, eax; pop ebx; ret; 
0x000b39f1: test dword ptr [edx + 0x5f000005], ecx; pop ebx; ret; 
0x000b9f19: test dword ptr [edx + 0x5f000006], eax; pop esi; pop ebx; ret; 
0x000b9ee9: test dword ptr [edx + 0x5f000006], esi; pop esi; pop ebx; ret; 
0x000b9de9: test dword ptr [edx + 0x5f000007], esi; pop esi; pop ebx; ret; 
0x000b9bf9: test dword ptr [edx + 0x5f000009], esp; pop esi; pop ebx; ret; 
0x00179de0: test dword ptr [edx + 0x6afff964], ecx; add eax, 0x6c858d50; je 0x179de6; call dword ptr [eax - 0x18]; 
0x001a8a29: test dword ptr [edx + 1], esp; add byte ptr [eax], al; add edx, 0; jl 0x1a8c50; mov eax, ecx; ret; 
0x000b3d29: test dword ptr [edx + 2], edx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000ba039: test dword ptr [edx + 5], esp; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x0004a8df: test dword ptr [edx + eax*8 - 7], eax; jmp dword ptr [ebp - 0x75]; 
0x000b3d07: test dword ptr [edx + eax], esi; add byte ptr [edi + 0x5b], bl; ret; 
0x000b3d57: test dword ptr [edx + eax], esp; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000fb280: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax + 0x53]; 
0x000fb2dd: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebp - 0x6b7f480], cl; call dword ptr [eax - 1]; 
0x000fb3e1: test dword ptr [edx + ebp*8 - 0x137c0001], ebx; or byte ptr [ebx - 0x73], dl; xor bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x000fb199: test dword ptr [edx + ebp*8 - 0x7f720001], ebx; lds eax, ptr [edi - 7]; call dword ptr [eax + 0x6a]; 
0x00179df6: test dword ptr [edx + edi*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x000f15d6: test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x000f8b64: test dword ptr [edx + edi*8 - 1], eax; jmp dword ptr [ebp - 0x75]; 
0x00068842: test dword ptr [edx + edi*8 - 1], ebp; call dword ptr [eax - 1]; 
0x0006c2bb: test dword ptr [edx + edi*8 - 1], ebp; dec dword ptr [ebx - 0x59b43]; jmp dword ptr [ebp - 0x5f]; 
0x000f198e: test dword ptr [edx + edi*8 - 1], ecx; inc dword ptr [ebp - 0x74bc8b40]; test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x000f8f8c: test dword ptr [edx + edi*8 - 1], edx; call dword ptr [eax - 0x75]; 
0x000f1924: test dword ptr [edx + edi*8 - 1], edx; jmp dword ptr [ebp - 0x75]; 
0x0006a5fd: test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x0006d581: test dword ptr [edx + edi*8 - 1], esi; dec dword ptr [ebx - 0x4476b]; dec dword ptr [ebx - 0x56f7b]; inc dword ptr [ebp + 0x392374db]; ret 0x850f; 
0x000682db: test dword ptr [edx + edi*8 - 1], esp; dec dword ptr [ebp - 0x4477b]; call dword ptr [eax - 0x18]; 
0x000e255a: test dword ptr [edx - 0x7600000f], edx; ret 0xe283; 
0x00099149: test dword ptr [edx - 0x77000000], esp; ret 0xf283; 
0x0011edcc: test dword ptr [edx - 0x7d000000], ebp; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x001246c1: test dword ptr [edx - 0x7d000000], edi; in al, dx; or al, 0x89; ret; 
0x000325c9: test dword ptr [edx - 0x9000003], eax; ret 0xf03; 
0x001a935d: test dword ptr [edx - 0x9fffffd], esi; ret 0xf40; 
0x000322b1: test dword ptr [edx - 0xa000000], ebx; ret 0x7503; 
0x00167403: test dword ptr [edx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016751b: test dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x00167457: test dword ptr [edx - 7], esp; jmp dword ptr [ebp - 0x75]; 
0x000ba099: test dword ptr [edx], eax; add eax, 0x5e5f0000; pop ebx; ret; 
0x000b3961: test dword ptr [edx], ebx; push es; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x0005eef1: test dword ptr [edx], edx; add eax, dword ptr [eax]; add byte ptr [edi], cl; mov dh, 0x57; or al, 0xf6; ret 0xf40; 
0x000b9d89: test dword ptr [edx], edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000445ca: test dword ptr [edx], edx; or eax, 0x44830000; and al, 0x4c; add dword ptr [ebx + 0x394c2444], ecx; ret 0x8c0f; 
0x000ba069: test dword ptr [edx], esi; add eax, 0x5e5f0000; pop ebx; ret; 
0x00130f91: test dword ptr [esi + 0x31570010], edi; call dword ptr [esi + 0x53]; 
0x000a23d7: test dword ptr [esi + 0x42], ebx; stc; call dword ptr [eax + 0x53]; 
0x000b3cc5: test dword ptr [esi + 0x5f000002], esi; pop ebx; ret; 
0x000a818c: test dword ptr [esi + 0x6afff944], edx; add eax, 0x6c858d50; je 0xa8192; call dword ptr [eax - 0x18]; 
0x00185a29: test dword ptr [esi + 0xf000002], ecx; mov bh, 0x50; adc byte ptr [esi - 9], ah; ret 0x7f8; 
0x000b391d: test dword ptr [esi + 6], ebx; add byte ptr [eax], al; pop edi; pop ebx; ret; 
0x000b9d45: test dword ptr [esi + 8], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000b9c1d: test dword ptr [esi + 9], edi; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb345: test dword ptr [esi + 9], edx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000bb61f: test dword ptr [esi + eax], edi; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x001a7745: test dword ptr [esi - 0x57fffffe], esp; adc byte ptr [edi], cl; test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x001a7d8d: test dword ptr [esi - 0x73000000], ecx; inc edi; clc; pop edi; ret; 
0x0011028b: test dword ptr [esi - 0x7c000002], edi; ret 0x8902; 
0x001a93b6: test dword ptr [esi - 0x7cfffffd], eax; ror byte ptr [edi], 0x5f; ret; 
0x001a9366: test dword ptr [esi - 0x7cfffffd], ebp; rol byte ptr [edi], 0x5f; ret; 
0x0017946b: test dword ptr [esi - 0x7d000000], ebp; les edx, ptr [ecx + ecx*4]; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x000e7db8: test dword ptr [esi - 0x7d000000], edi; les edx, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0010e578: test dword ptr [esi - 0x7d000000], esp; les ebp, ptr [eax + 0x5b]; ret; 
0x000b8536: test dword ptr [esi - 0x7f000002], edx; cmp byte ptr [ecx], al; sbb eax, -1; pop ebx; ret; 
0x000b802d: test dword ptr [esi - 0x7ffffffd], ebx; cmp byte ptr [ecx], al; sbb eax, -1; pop edi; pop ebx; ret; 
0x001a9354: test dword ptr [esi - 0x9fffffd], esi; ret 0xf20; 
0x001a947d: test dword ptr [esi - 0xa000000], ebp; ret 0xf40; 
0x001a9ddd: test dword ptr [esi - 0xa000000], edi; ret 0xf0f; 
0x000f5a59: test dword ptr [esi], eax; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x0014c1fe: test dword ptr [esi], ebx; add al, byte ptr [eax]; add dh, dh; ret; 
0x001a77ad: test dword ptr [esi], edi; add al, byte ptr [eax]; add byte ptr [eax + 0x76850f04], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf04; 
0x000b3c3d: test dword ptr [esi], edi; add eax, dword ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0018a789: test dword ptr [esi], edx; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b9d65: test dword ptr [esi], esi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0014a58c: test dword ptr [esi], esi; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000f9379: test dword ptr [esi], esp; adc al, 0; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000a8195: test dword ptr [esp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x000337ed: test dword ptr [esp + esi*2 - 7], esp; call dword ptr [eax + 0x56]; 
0x000437d2: test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x00174721: test eax, 0x51fffffe; push ecx; push dword ptr [esp + 0x40]; push ebp; call esi; 
0x00168c55: test eax, 0x68fff962; add dword ptr [eax], 0x8d500000; xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0013fe85: test eax, 0x6afff958; add eax, 0x6c858d50; je 0x13fe8a; call dword ptr [eax - 0x18]; 
0x00181417: test eax, 0x728d0000; jmp dword ptr [esi - 0x7d]; 
0x00155750: test eax, 0x8100031e; ret; 
0x000a24ab: test eax, 0x83000000; in al, dx; add al, 0x8d; sbb dword ptr [esi + 0x42], -7; call dword ptr [eax + 0x56]; 
0x0008c18b: test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x001a24b1: test eax, 0x8300000e; std; adc byte ptr [ebp - 0x79f00f93], cl; call dword ptr [eax]; 
0x0010bdd3: test eax, 0x83fff83e; les edx, ptr [eax]; add esp, 4; pop ebx; pop esi; ret; 
0x0004a563: test eax, 0x8dfffe9d; xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x001497c9: test eax, 0xaefc838d; stc; call dword ptr [eax - 0x73]; 
0x0017fffe: test eax, 0xf8830000; add dword ptr [edi + 0x22], edi; add esp, 8; pop ebx; ret; 
0x00124f8b: test eax, eax; cmove eax, edx; add esp, 0xc; ret; 
0x0012433c: test eax, eax; cmove eax, edx; ret; 
0x00043371: test eax, eax; cmovne eax, edx; ret; 
0x001228b3: test eax, eax; cmovns eax, edx; ret; 
0x001347cc: test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0010bc23: test eax, eax; je 0x10bb5f; call eax; 
0x0010bcc3: test eax, eax; je 0x10bbb2; call eax; 
0x00123755: test eax, eax; je 0x1237a0; call eax; 
0x00123899: test eax, eax; je 0x123938; call eax; 
0x00124858: test eax, eax; je 0x12485d; ret; 
0x00124f6c: test eax, eax; je 0x124f78; add esp, 0xc; ret; 
0x00124fbc: test eax, eax; je 0x124fc8; add esp, 0xc; ret; 
0x001274b4: test eax, eax; je 0x1274ba; mov dword ptr [eax], edx; ret; 
0x0012b5cc: test eax, eax; je 0x12b5d4; test edx, edx; jne 0x12b5d8; ret; 
0x0012b5f0: test eax, eax; je 0x12b5f8; test edx, edx; jne 0x12b600; ret; 
0x0012c930: test eax, eax; je 0x12c93d; pop esi; pop ebx; jl 0x24f10; ret; 
0x0012dc2a: test eax, eax; je 0x12dc48; mov esi, dword ptr [esp + 0x44]; mov eax, 0xac; mov ebx, 0x53564d41; call dword ptr gs:[0x10]; 
0x00138528: test eax, eax; je 0x138550; sub esp, 8; push ebx; push dword ptr [ebx + 0x30]; call eax; 
0x0013acb3: test eax, eax; je 0x13acc0; add esp, 8; pop ebx; ret; 
0x0014e906: test eax, eax; je 0x14e910; add esp, 0x18; pop ebx; ret; 
0x00150403: test eax, eax; je 0x15040c; cmp dword ptr [eax + 8], edx; jne 0x150400; ret; 
0x001602f3: test eax, eax; je 0x160300; sub esp, 0xc; push esi; call eax; 
0x00160683: test eax, eax; je 0x160690; sub esp, 0xc; push esi; call eax; 
0x00160763: test eax, eax; je 0x160776; sub esp, 0xc; lea edx, [ebx + 0xa28c]; push edx; call eax; 
0x0016c549: test eax, eax; je 0x16c556; sub esp, 0xc; push esi; call eax; 
0x0016ca1c: test eax, eax; je 0x16ca29; sub esp, 0xc; push esi; call eax; 
0x0016c9fb: test eax, eax; je 0x16ca94; mov eax, dword ptr [ebx + 0x10]; sub esp, 0xc; push esi; call dword ptr [eax + 0x10]; 
0x0016cb4c: test eax, eax; je 0x16cb63; sub esp, 0xc; mov ecx, dword ptr [eax + 4]; push eax; call dword ptr [ecx + 0x10]; 
0x0016ccf5: test eax, eax; je 0x16cd06; sub esp, 0xc; mov edx, dword ptr [eax + 4]; push eax; call dword ptr [edx + 0x10]; 
0x0016cd39: test eax, eax; je 0x16cd48; add esp, 8; pop ebx; ret; 
0x0016d46c: test eax, eax; je 0x16d3fc; mov eax, dword ptr [ebx + 4]; sub esp, 0xc; push ebx; call dword ptr [eax + 0x10]; 
0x0016d914: test eax, eax; je 0x16d8bc; sub esp, 0xc; push edi; mov eax, dword ptr [esp + 0x98]; call dword ptr [eax + 0x10]; 
0x0016d937: test eax, eax; je 0x16d944; sub esp, 0xc; push edi; call eax; 
0x0016db48: test eax, eax; je 0x16da0e; sub esp, 0xc; push esi; call eax; 
0x0016dc43: test eax, eax; je 0x16dc50; sub esp, 0xc; push esi; call eax; 
0x0016e5cf: test eax, eax; je 0x16e5dc; sub esp, 0xc; push esi; call eax; 
0x0016e826: test eax, eax; je 0x16e848; sub esp, 0xc; mov eax, dword ptr [ebx + 0x2398]; push esi; call dword ptr [eax + 0x10]; 
0x0016ea06: test eax, eax; je 0x16eb0b; sub esp, 0xc; push ebp; call dword ptr [esi]; 
0x001715d9: test eax, eax; je 0x1715ec; sub esp, 0xc; lea edx, [ebx + 0xac]; push edx; call eax; 
0x00171fad: test eax, eax; je 0x171fba; sub esp, 0xc; push esi; call eax; 
0x001721ea: test eax, eax; je 0x1721fa; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001734b6: test eax, eax; je 0x1734c3; sub esp, 0xc; push esi; call eax; 
0x00173497: test eax, eax; je 0x1734d8; sub esp, 0xc; push esi; mov eax, dword ptr [esp + 0x18]; call dword ptr [eax + 0x10]; 
0x00173671: test eax, eax; je 0x17367e; sub esp, 0xc; push edi; call eax; 
0x00174a1b: test eax, eax; je 0x174a28; sub esp, 0xc; push ebp; call eax; 
0x00174db6: test eax, eax; je 0x174dc6; sub esp, 0xc; lea edx, [ebx + 0x38]; push edx; call eax; 
0x00174f86: test eax, eax; je 0x175420; sub esp, 0xc; mov eax, dword ptr [ebp + 0x3c]; push edi; call dword ptr [eax + 0x10]; 
0x00175751: test eax, eax; je 0x175800; mov eax, dword ptr [esi + 0x3c]; sub esp, 0xc; push ebp; call dword ptr [eax + 0x10]; 
0x00176be2: test eax, eax; je 0x176bf0; pop ebx; pop esi; pop edi; ret; 
0x00177baa: test eax, eax; je 0x177bba; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x001782d3: test eax, eax; je 0x1782e3; sub esp, 0xc; lea edx, [edi + 8]; push edx; call eax; 
0x00178359: test eax, eax; je 0x178393; sub esp, 0xc; mov eax, dword ptr [ebx + 0xc]; push edi; call dword ptr [eax + 0x10]; 
0x001842bf: test eax, eax; je 0x1842d0; mov dword ptr [esp + 4], edx; jmp dword ptr [eax + 0x30]; 
0x0017380a: test eax, eax; je 0x2493f; sub esp, 0xc; push ebp; mov eax, dword ptr [esp + 0x48]; call dword ptr [eax + 0x10]; 
0x00033d53: test eax, eax; je 0x33d59; call eax; 
0x0003d383: test eax, eax; je 0x3d397; mov dword ptr [eax + 4], 0; mov dword ptr [eax], 0; xor eax, eax; ret; 
0x00042469: test eax, eax; je 0x42478; add esp, 8; pop ebx; ret; 
0x00042ef9: test eax, eax; je 0x42f03; bsr eax, eax; add eax, 1; ret; 
0x00042f18: test eax, eax; je 0x42f22; bsr eax, eax; add eax, 1; ret; 
0x00042f38: test eax, eax; je 0x42f42; bsr eax, eax; add eax, 1; ret; 
0x00042fa9: test eax, eax; je 0x42fb3; bsr eax, eax; add eax, 1; ret; 
0x000431c8: test eax, eax; je 0x431d5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x000431e8: test eax, eax; je 0x431f5; bsr eax, eax; xor eax, 0x1f; add eax, 1; ret; 
0x00043480: test eax, eax; je 0x43490; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0005ad60: test eax, eax; je 0x5ad70; sub eax, 1; mov dword ptr [edx + 4], eax; ret; 
0x0007c678: test eax, eax; je 0x7c690; mov edx, dword ptr [edx + 0x98]; mov dword ptr [esp + 4], edx; jmp eax; 
0x0007dae0: test eax, eax; je 0x7daf0; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x0007dc00: test eax, eax; je 0x7dc10; sub eax, 1; mov dword ptr [edx + 0x1a84], eax; ret; 
0x00087ea0: test eax, eax; je 0x87eb0; sub eax, 1; mov dword ptr [edx + 0x1a98], eax; ret; 
0x00089595: test eax, eax; je 0x895a0; pop ebx; pop esi; pop edi; ret; 
0x0008c41f: test eax, eax; je 0x8c437; mov dword ptr [eax], 0; mov dword ptr [eax + 4], 0; mov dword ptr [eax + 8], 0; ret; 
0x0008d7a0: test eax, eax; je 0x8d7b0; sub eax, 1; mov dword ptr [edx + 0x1ab8], eax; ret; 
0x0008e221: test eax, eax; je 0x8e238; mov dword ptr [esp + 0x10], ecx; mov eax, dword ptr [eax + 4]; add esp, 0xc; jmp eax; 
0x000984bf: test eax, eax; je 0x984d5; sub esp, 0xc; push dword ptr [ebx + 4]; call dword ptr [ebx]; 
0x000a05e1: test eax, eax; je 0xa0658; mov ecx, dword ptr [esp + 0x64]; lea esi, [esp + 0x2c]; mov eax, 0x104; call dword ptr gs:[0x10]; 
0x000a2314: test eax, eax; je 0xa2330; pop ebx; pop esi; pop edi; ret; 
0x000c22e6: test eax, eax; je 0xc2300; bsf eax, eax; add eax, edx; add eax, ecx; ret; 
0x000df02c: test eax, eax; je 0xdf0a0; mov ebx, dword ptr [esp + 0x60]; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000e7d94: test eax, eax; je 0xe7dc8; sub esp, 8; push esi; push ebx; call eax; 
0x000e871a: test eax, eax; je 0xe8730; imul eax, dword ptr [esp + 0x10], 0x34; add eax, dword ptr [edx]; add esp, 0xc; ret; 
0x0012c6f7: test eax, eax; jl 0x24f10; je 0x12c702; ret; 
0x0010c2d5: test eax, eax; jne 0x10c308; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd6; call dword ptr gs:[0x10]; 
0x0010c378: test eax, eax; jne 0x10c3a8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xce; call dword ptr gs:[0x10]; 
0x0010c46d: test eax, eax; jne 0x10c4a0; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd2; call dword ptr gs:[0x10]; 
0x0010c51d: test eax, eax; jne 0x10c550; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd0; call dword ptr gs:[0x10]; 
0x0010c5e5: test eax, eax; jne 0x10c618; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xd5; call dword ptr gs:[0x10]; 
0x001146ce: test eax, eax; jne 0x1146e0; add esp, 4; pop ebx; pop esi; ret; 
0x00127e5f: test eax, eax; jne 0x127e1c; add esp, 0xc; ret; 
0x00129972: test eax, eax; jne 0x1299b0; mov eax, 0xd2; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129a52: test eax, eax; jne 0x129a90; mov eax, 0xd0; mov ebx, 0xffffffff; mov edx, 0xffffffff; call dword ptr gs:[0x10]; 
0x00129c08: test eax, eax; jne 0x129c38; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcc; call dword ptr gs:[0x10]; 
0x00129ca8: test eax, eax; jne 0x129cd8; mov ebx, dword ptr [esp + 0x30]; mov eax, 0xcb; call dword ptr gs:[0x10]; 
0x0012ac05: test eax, eax; jne 0x12ac28; sub esp, 0xc; push dword ptr [ebx]; call esi; 
0x0012bc68: test eax, eax; jne 0x12bcb0; mov ecx, dword ptr [esp + 0x10]; mov eax, 0x3e; call dword ptr gs:[0x10]; 
0x00138084: test eax, eax; jne 0x138074; add esp, 4; pop ebx; pop esi; ret; 
0x0013977b: test eax, eax; jne 0x139790; mov ecx, dword ptr [edx]; test ecx, ecx; je 0x139798; ret; 
0x0013efab: test eax, eax; jne 0x13efc0; mov eax, ebx; pop ebx; ret; 
0x001498af: test eax, eax; jne 0x1498c0; pop ebx; pop esi; pop edi; ret; 
0x001498f5: test eax, eax; jne 0x1498e0; pop ebx; pop esi; pop edi; ret; 
0x0014f93e: test eax, eax; jne 0x14f950; add esp, 4; pop ebx; pop esi; ret; 
0x001503f8: test eax, eax; jne 0x150407; ret; 
0x00160664: test eax, eax; jne 0x160650; add esp, 4; pop ebx; pop esi; ret; 
0x0016cf87: test eax, eax; jne 0x16cfa8; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016d15a: test eax, eax; jne 0x16d190; sub esp, 0xc; mov eax, dword ptr [ebx + 4]; push ebx; call dword ptr [eax + 0x10]; 
0x0016de4b: test eax, eax; jne 0x16de58; add esp, 4; pop ebx; pop esi; ret; 
0x00177b07: test eax, eax; jne 0x177af0; add esp, 8; pop ebx; ret; 
0x00183343: test eax, eax; jne 0x1833f0; pop ebx; pop esi; pop edi; ret; 
0x0018618a: test eax, eax; jne 0x186198; add esp, 4; pop ebx; pop esi; ret; 
0x001a8330: test eax, eax; jne 0x1a8400; xor eax, eax; pop edi; ret; 
0x001a8c78: test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x001a87c8: test eax, eax; jne 0x1a8a00; xor eax, eax; ret; 
0x001a8807: test eax, eax; jne 0x1a8a80; xor eax, eax; ret; 
0x00024af9: test eax, eax; jne 0x24af0; ret; 
0x0003c978: test eax, eax; jne 0x3c988; add esp, 8; pop ebx; ret; 
0x0003cc97: test eax, eax; jne 0x3cca0; add esp, 8; pop ebx; ret; 
0x0005ad49: test eax, eax; jne 0x5ad64; mov dword ptr [edx + 8], 0; mov dword ptr [edx], 0; ret; 
0x00062037: test eax, eax; jne 0x62048; add esp, 8; mov eax, ebx; pop ebx; ret; 
0x000845dd: test eax, eax; jne 0x845f0; mov ecx, dword ptr [edx + 0x28]; cmp dword ptr [edx + 0x24], ecx; cmove eax, ecx; ret; 
0x00087e80: test eax, eax; jne 0x87ea4; mov dword ptr [edx + 0x1a9c], 0; mov dword ptr [edx + 0x1a94], 0; ret; 
0x0008d301: test eax, eax; jne 0x8d318; ret; 
0x0008d780: test eax, eax; jne 0x8d7a4; mov dword ptr [edx + 0x1abc], 0; mov dword ptr [edx + 0x1ab4], 0; ret; 
0x0008f281: test eax, eax; jne 0x8f290; ret; 
0x0009daba: test eax, eax; jne 0x9dab0; pop ebx; ret; 
0x0009dad8: test eax, eax; jne 0x9dae7; ret; 
0x000a754b: test eax, eax; jne 0xa7540; xor eax, eax; ret; 
0x000a7619: test eax, eax; jne 0xa7610; mov eax, ecx; ret; 
0x000a8e28: test eax, eax; jne 0xa8e33; ret; 
0x000c1ce2: test eax, eax; jne 0xc1d40; xor eax, eax; pop edi; ret; 
0x000c1ca8: test eax, eax; jne 0xc1d60; xor eax, eax; pop edi; ret; 
0x000c1f78: test eax, eax; jne 0xc1ff0; xor eax, eax; ret; 
0x000c1fa7: test eax, eax; jne 0xc2010; xor eax, eax; ret; 
0x000c242f: test eax, eax; jne 0xc2470; pmovmskb eax, xmm1; bsf eax, eax; lea eax, [edx + eax + 0x30]; ret; 
0x000da0c5: test eax, eax; jne 0xda0bc; xor edx, edx; mov eax, edx; ret; 
0x000fafe7: test eax, eax; jne 0xfaff0; add esp, 8; pop ebx; ret; 
0x0012f6d4: test eax, eax; js 0x12f6e0; add esp, 8; pop ebx; ret; 
0x00189e93: test eax, eax; js 0x189ea0; mov edx, dword ptr [esp + 4]; mov dword ptr [edx], eax; xor eax, eax; ret; 
0x00084e2c: test eax, eax; js 0x84e38; ret; 
0x0009a373: test eax, eax; js 0x9a380; mov dword ptr [edx + 0x3b34], eax; xor eax, eax; ret; 
0x0010b5a7: test eax, eax; sete al; add esp, 0x2c; movzx eax, al; ret; 
0x00053553: test eax, eax; sete al; add esp, 0xc; movzx eax, al; ret; 
0x00155602: test eax, eax; sete al; add esp, 0xc; ret; 
0x00170574: test eax, eax; setne al; add esp, 0x1c; movzx eax, al; ret; 
0x0016e895: test eax, eax; setne al; add esp, 8; movzx eax, al; pop ebx; ret; 
0x0016edfd: test eax, eax; setne dl; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0008713d: test eax, eax; setne dl; mov eax, edx; ret; 
0x000b0533: test eax, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7cd174c6], cl; ret 0x8304; 
0x0004cda2: test eax, ebp; or byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x000b3ca3: test eax, ebx; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x000419e3: test eax, ebx; add byte ptr [eax], al; add dh, dh; ret 0xf03; 
0x000b9ca3: test eax, edi; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b3dab: test eax, edx; add dword ptr [eax], eax; add byte ptr [edi + 0x5b], bl; ret; 
0x000a61de: test eax, esi; cwde; stc; call dword ptr [eax - 0x73]; 
0x00077e03: test eax, esp; ret; 
0x0014d526: test ebp, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x1c895], cl; add bh, dh; ret 0; 
0x000a74d3: test ebp, ebp; jne 0xa7409; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00039eec: test ebp, ebx; stc; call dword ptr [eax + 0x53]; 
0x000d4aa0: test ebp, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001a775e: test ebp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x0019deac: test ebp, edi; add eax, 0xfd830000; adc byte ptr [ebp - 0x79f00f93], cl; ret; 
0x00162fe4: test ebp, edi; jmp dword ptr [esi - 0x70]; 
0x000bb29e: test ebp, edi; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00039ed9: test ebp, edx; stc; call dword ptr [eax + 0x53]; 
0x000b80d6: test ebp, esi; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x000c1ee6: test ebp, esi; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x0010dff5: test ebp, esi; add eax, dword ptr [eax]; add byte ptr [ebp - 0x65e177d], cl; call dword ptr [eax - 0x73]; 
0x000f1a5e: test ebx, ebx; add al, byte ptr [eax]; add dh, dh; test dword ptr [edx + edi*8 - 1], eax; call dword ptr [eax]; 
0x00184063: test ebx, ebx; je 0x184090; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x24]; 
0x001840ea: test ebx, ebx; je 0x184110; sub esp, 8; push edx; push eax; call dword ptr [ebx + 0x28]; 
0x000433b9: test ebx, ebx; je 0x433d0; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x0004385e: test ebx, ebx; je 0x43868; pop ebx; ret; 
0x0013463a: test ebx, ebx; jne 0x134648; add esp, 4; pop ebx; pop esi; ret; 
0x0014847c: test ebx, ebx; jne 0x148448; mov eax, 1; pop ebx; ret; 
0x001877a2: test ebx, ebx; jne 0x1877b0; add esp, 8; pop ebx; ret; 
0x001890be: test ebx, ebx; jne 0x1890d0; add esp, 8; pop ebx; ret; 
0x000895ce: test ebx, ebx; jne 0x895e0; add esp, 8; pop ebx; ret; 
0x000a8c23: test ebx, ebx; jne 0xa8c37; pop ebx; pop esi; pop edi; ret; 
0x000a0344: test ebx, ebx; jns 0xa034c; add ebx, ebx; mov ebx, dword ptr [ebx]; mov eax, 0x106; call dword ptr gs:[0x10]; 
0x000a025a: test ebx, ebx; js 0xa0288; mov eax, 0x107; call dword ptr gs:[0x10]; 
0x000eb51a: test ebx, ebx; js 0xeb578; mov eax, 0x166; lea ecx, [ebp - 0x6d324]; mov edi, 0x1000; call dword ptr gs:[0x10]; 
0x000d5ce0: test ebx, ecx; or al, 0; add byte ptr [ebx - 0x79f09f08], al; ret 0xc; 
0x000bb3c8: test ebx, edx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000e1229: test ecx, 0xa40f02e1; ret; 
0x000c276b: test ecx, 0xff0000; je 0xc2774; inc eax; pop edi; ret; 
0x0010e685: test ecx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b54c4], al; ret; 
0x000d9c22: test ecx, ebp; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000b7de2: test ecx, ebp; add eax, 0x38800000; add dword ptr [ebx + 0x5b5fffd8], eax; ret; 
0x000bb6b2: test ecx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c49ec: test ecx, ebp; inc esp; stc; call dword ptr [eax - 0x18]; 
0x0016cc6f: test ecx, ebp; ret 0xfffe; 
0x0010b983: test ecx, ecx; je 0x10b9a0; cmp byte ptr [esp + 0x17], 0; jne 0x10ba30; call ecx; 
0x00127486: test ecx, ecx; je 0x12748d; mov dword ptr [ecx + 4], edx; mov dword ptr [edx], ecx; mov dword ptr [edx + 4], eax; ret; 
0x0013531c: test ecx, ecx; je 0x135328; xor eax, eax; pop ebx; ret; 
0x00139781: test ecx, ecx; je 0x139798; ret; 
0x000437a2: test ecx, ecx; je 0x437b0; pop ebx; ret; 
0x00086291: test ecx, ecx; je 0x86298; mov byte ptr [edx], 0; pop ebx; ret; 
0x000c229d: test ecx, ecx; je 0xc22b0; bsf ecx, ecx; add eax, ecx; ret; 
0x00133278: test ecx, ecx; jne 0x133288; mov eax, edx; pop ebx; pop esi; ret; 
0x001332f3: test ecx, ecx; jne 0x133300; mov eax, edx; pop ebx; pop esi; ret; 
0x001334e7: test ecx, ecx; jne 0x1334f0; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b3c: test ecx, ecx; jne 0x133b48; mov eax, edx; pop ebx; pop esi; ret; 
0x00133b9c: test ecx, ecx; jne 0x133ba8; mov eax, edx; pop ebx; pop esi; ret; 
0x00133d87: test ecx, ecx; jne 0x133d90; mov eax, edx; pop ebx; pop esi; ret; 
0x0016e033: test ecx, ecx; jne 0x16e058; mov dword ptr [eax], 0; pop ebx; ret; 
0x0018614e: test ecx, ecx; jne 0x186158; ret; 
0x000a0df5: test ecx, ecx; jne 0xa0e00; add esp, 8; pop ebx; ret; 
0x000d9ff6: test ecx, ecx; jne 0xd9fd8; add eax, 1; ret; 
0x000d9fcc: test ecx, ecx; jne 0xd9ff2; ret; 
0x00121acc: test ecx, ecx; js 0x121ad8; mov eax, dword ptr [edx + 8]; and eax, 0x100f; ret; 
0x000fba28: test ecx, ecx; js 0xfba30; ret; 
0x0008239a: test ecx, edi; add dword ptr [eax], eax; add byte ptr [ecx], bh; ret; 
0x0009437d: test ecx, edi; call dword ptr [eax + 0x68]; 
0x00094555: test ecx, edi; call dword ptr [eax - 0x18]; 
0x00096a6c: test ecx, edi; call dword ptr [eax - 0x18]; wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x000942f5: test ecx, edi; call dword ptr [eax - 0x73]; 
0x0006e485: test edi, 0xc4830000; and byte ptr [ecx], al; ret; 
0x000b8104: test edi, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x0012c91a: test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0012c90e: test edi, ebp; dec dword ptr [ebx - 0x7af3dbac]; ror byte ptr [edi], cl; test bl, dh; test edi, ebp; call dword ptr [ebx + 0x56]; 
0x0012ac17: test edi, ebp; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000b81fc: test edi, ecx; add dword ptr [eax], eax; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x001a8cd0: test edi, edi; je 0x1a8d30; bsr edi, edi; add eax, edi; pop edi; ret; 
0x00061407: test edi, edi; je 0x61430; mov eax, 0x161; call dword ptr gs:[0x10]; 
0x000c20b0: test edi, edi; je 0xc2110; bsr edi, edi; add eax, edi; pop edi; ret; 
0x0013a8fe: test edi, edi; jne 0x13a910; pop ebx; pop esi; pop edi; ret; 
0x000a75bb: test edi, edi; jne 0x243d8; pop ebx; pop esi; pop edi; ret; 
0x00036b3d: test edi, edi; jne 0x36b10; pop ebx; pop esi; pop edi; ret; 
0x00149cf7: test edi, esi; pop ebx; stc; call dword ptr [eax - 0x18]; 
0x000d7fde: test edi, esp; add byte ptr [eax], al; add byte ptr [ebx - 0x364763], cl; dec dword ptr [ebx - 0x36334b]; call dword ptr [edi - 1]; 
0x0010e79c: test edx, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b64c4], al; ret; 
0x0015a3af: test edx, ebp; add dword ptr [eax], eax; add byte ptr [ebx - 0x7ce3db8c], cl; ret 0x8301; 
0x000b9fb1: test edx, ebp; add eax, 0x5e5f0000; pop ebx; ret; 
0x000c2361: test edx, ebx; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x000b9cc1: test edx, ebx; or byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000bb2c1: test edx, ebx; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x0019e871: test edx, ecx; cmp al, 0xf2; call dword ptr [ebx - 0x18]; 
0x001a4f61: test edx, ecx; salc; int1; call dword ptr [ebx - 0x18]; 
0x000ba0c9: test edx, edx; add al, 0; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000a61f1: test edx, edx; inc ebx; stc; call dword ptr [eax - 0x18]; 
0x0012d3a9: test edx, edx; je 0x12d3e0; mov ebx, dword ptr [esp + 0xc]; mov eax, 0x178; call dword ptr gs:[0x10]; 
0x00148cd6: test edx, edx; je 0x148ce8; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0016c864: test edx, edx; je 0x16c8f0; mov dword ptr [esp + 4], edx; sub esp, 0xc; push eax; call dword ptr [ecx + 0xc]; 
0x001706b6: test edx, edx; je 0x1706c0; add esp, 4; pop ebx; pop esi; ret; 
0x00170786: test edx, edx; je 0x170790; add esp, 4; pop ebx; pop esi; ret; 
0x00170846: test edx, edx; je 0x170850; add esp, 4; pop ebx; pop esi; ret; 
0x001763eb: test edx, edx; je 0x1763fe; sub esp, 0xc; mov eax, dword ptr [edx + 0x20]; push edx; call dword ptr [eax + 0x10]; 
0x001a575b: test edx, edx; je 0x1a5740; add eax, ecx; pop ebx; pop esi; ret; 
0x00024b14: test edx, edx; je 0x24b19; ret; 
0x00033a77: test edx, edx; je 0x33a7d; call edx; 
0x00034027: test edx, edx; je 0x34035; mov dword ptr [esp + 0x14], eax; call edx; 
0x0004368d: test edx, edx; je 0x43697; bsr eax, edx; xor eax, 0x1f; ret; 
0x000436ad: test edx, edx; je 0x436b7; bsr eax, edx; xor eax, 0x1f; ret; 
0x0008f1f6: test edx, edx; je 0x8f208; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0008f2eb: test edx, edx; je 0x8f300; mov edx, dword ptr [eax + 4]; mov dword ptr [esp + 4], edx; jmp dword ptr [eax]; 
0x0009065b: test edx, edx; je 0x90698; xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00091302: test edx, edx; je 0x91338; mov ecx, dword ptr [ebx + 0xc]; mov eax, edi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000c2058: test edx, edx; je 0xc2030; bsr ecx, edx; add eax, ecx; ret; 
0x0012b5d0: test edx, edx; jne 0x12b5d8; ret; 
0x0012b5f4: test edx, edx; jne 0x12b600; ret; 
0x0017a9a0: test edx, edx; jne 0x17a9b0; add esp, 0xc; ret; 
0x0017ab10: test edx, edx; jne 0x17ab20; add esp, 0xc; ret; 
0x00186499: test edx, edx; jne 0x1864a8; add esp, 8; pop ebx; ret; 
0x001a941e: test edx, edx; jne 0x1a9430; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x0008108a: test edx, edx; jne 0x81080; ret; 
0x0008c378: test edx, edx; jne 0x8c360; ret; 
0x0008f70d: test edx, edx; jne 0x8f720; xend; xor eax, eax; add esp, 0xc; ret; 
0x00091061: test edx, edx; jne 0x91080; and dword ptr [eax + 8], 0xfffffffe; xor eax, eax; ret; 
0x000983fc: test edx, edx; jne 0x98410; and dword ptr [eax], 0x7fffffff; xor eax, eax; ret; 
0x000b9bb9: test edx, edx; jne 0xb9b2b; call 0x187611; add ecx, 0x11117a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000bb1f9: test edx, edx; jne 0xbb16b; call 0x187611; add ecx, 0x10fc9a; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c1199: test edx, edx; jne 0xc110b; call 0x187611; add ecx, 0x109ece; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c550a: test edx, edx; jne 0xc5500; ret; 
0x000d9d8d: test edx, edx; jne 0xd9d80; mov eax, ecx; pop ebx; pop esi; ret; 
0x000da0ea: test edx, edx; jne 0xda0e0; mov eax, ecx; pop ebx; ret; 
0x000dfc9b: test edx, edx; jne 0xdfca8; add esp, 4; pop ebx; pop esi; ret; 
0x000e7de8: test edx, edx; jns 0xe7e60; mov eax, 0x193; mov ecx, esi; call dword ptr gs:[0x10]; 
0x000908bf: test edx, edx; mov edx, 0; cmove eax, edx; ret; 
0x000437d3: test edx, edx; mov edx, 0x10; cmove eax, edx; ret; 
0x00043750: test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0003d672: test edx, edx; sete al; ret; 
0x0010ace0: test edx, esi; add byte ptr [eax], al; add byte ptr [edi], cl; mov dh, 0x45; sbb al, 0x89; ret 0xeac0; 
0x00099c19: test edx, esp; add byte ptr [eax], al; add byte ptr [ecx], dh; fild dword ptr [eax + 0xf00197f]; xchg ebp, eax; ret; 
0x000c1c0d: test esi, ebp; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret 0xc085; 
0x001a774d: test esi, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf10; 
0x00153072: test esi, edi; jmp dword ptr [esi - 0x70]; 
0x000f2159: test esi, esi; adc eax, dword ptr [eax]; add byte ptr [ebp - 0x45b7b], cl; dec dword ptr [ebx - 0x46f63]; dec dword ptr [ecx - 0x48f7b]; call dword ptr [eax - 0x75]; 
0x000b3c85: test esi, esi; add al, byte ptr [eax]; add byte ptr [edi + 0x5b], bl; ret; 
0x0018edb5: test esi, esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x129b5380]; call dword ptr [eax + 0x6a]; 
0x0018cdf5: test esi, esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x14599380]; call dword ptr [eax + 0x6a]; 
0x0018b0b5: test esi, esi; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x1492b380]; call dword ptr [eax + 0x6a]; 
0x00113cab: test esi, esi; je 0x113cc6; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x0009d3ef: test esi, esi; je 0x9d440; mov dword ptr [esi + 0x10], edx; pop ebx; pop esi; ret; 
0x000df16f: test esi, esi; je 0xdf1c0; lea edx, [esp + 0x2c]; mov eax, 0x68; call dword ptr gs:[0x10]; 
0x000f1a3b: test esi, esi; je 0xf1a56; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f454b: test esi, esi; je 0xf4566; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f533b: test esi, esi; je 0xf5356; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f7e6b: test esi, esi; je 0xf7e86; sub esp, 8; push eax; push dword ptr [ebp - 0x5dc]; call esi; 
0x000f8c7b: test esi, esi; je 0xf8c96; sub esp, 8; push eax; push dword ptr [ebp - 0x5ec]; call esi; 
0x0015da6b: test esi, esi; jne 0x15da50; pop ebx; pop esi; pop edi; ret; 
0x00025ffd: test esi, esi; jne 0x25fe4; add esp, 4; pop ebx; pop esi; ret; 
0x0004050c: test esi, esi; jne 0x404f4; add esp, 4; pop ebx; pop esi; ret; 
0x0008cdf7: test esi, esi; jne 0x8cde0; add esp, 4; pop ebx; pop esi; ret; 
0x000f9cb5: test esi, esp; idiv edi; dec dword ptr [ebx - 0x46f7b]; dec dword ptr [ebx - 0x4936b]; dec dword ptr [ebp - 0x144b8380]; call dword ptr [eax + 0x6a]; 
0x000b39b7: test esp, eax; add eax, 0x5b5f0000; ret; 
0x001a9337: test esp, eax; add eax, dword ptr [eax]; add dh, dh; ret 0xf04; 
0x001257d2: test esp, ebp; dec edx; stc; call dword ptr [eax - 0x39]; 
0x001a4b9f: test esp, ebx; add dword ptr [eax], eax; add byte ptr [ebx - 0x7bf0ff07], al; ret; 
0x0015d8dd: test esp, ebx; pop edi; stc; call dword ptr [eax - 1]; 
0x0004041a: test esp, ebx; sub al, 0xf9; dec dword ptr [ebp - 0x6d0c86b]; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x0003febc: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0x4489; 
0x0003fe30: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76d3dbbc]; ret 0xc189; 
0x00040310: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76ebdbbc]; ret; 
0x0003fedd: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret 0xbfe9; 
0x0003fd13: test esp, ebx; sub al, 0xf9; dec dword ptr [ecx - 0x76f7dbbc]; ret; 
0x00097212: test esp, ecx; insd dword ptr es:[edi], dx; stc; call dword ptr [eax - 0x73]; 
0x000788de: test esp, edi; add byte ptr [eax], al; add dh, dh; ret; 
0x001a9f83: test esp, edi; add dword ptr [eax], eax; add byte ptr [esi - 0x77], dl; ret 0xfe89; 
0x001a776f: test esp, edi; add dword ptr [eax], eax; add dh, dh; ret 0xf40; 
0x0003fa81: test esp, edi; sub eax, esp; call dword ptr [eax - 0x73]; 
0x000d9c37: test esp, edx; add byte ptr [eax], al; add byte ptr [edi + 0x5e], bl; ret; 
0x000eb5e3: test esp, esp; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00043351: tzcnt eax, eax; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004372e: tzcnt eax, eax; test dl, dl; mov edx, 8; cmove eax, edx; ret; 
0x000437ce: tzcnt eax, eax; test dx, dx; mov edx, 0x10; cmove eax, edx; ret; 
0x0004379e: tzcnt eax, ecx; test ecx, ecx; je 0x437b0; pop ebx; ret; 
0x0004374c: tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x00043868: tzcnt ecx, ecx; pop ebx; lea eax, [ecx + 0x20]; ret; 
0x0004336a: tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x001966c9: ud0; inc dword ptr [ecx + 0x43414c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00176f59: ud1; ret; 
0x00024399: ud2; cmp dword ptr [ebp - 0x30], 0; je 0x243bc; sub esp, 0xc; push dword ptr [ebp - 0x34]; call dword ptr [ebp - 0x38]; 
0x001489bc: verr word ptr [ebp - 0x75]; adc eax, 0; mov eax, dword ptr [eax + 0x1d0]; mov eax, dword ptr [edx + eax]; ret; 
0x0003bbda: verr word ptr [esi - 0x70]; nop; endbr32; mov eax, dword ptr [esp + 0x10]; and eax, 0x80000000; ret; 
0x0003cab6: verr word ptr [esi - 0x70]; nop; nop; nop; mov eax, 0xad; int 0x80; 
0x00127547: vpxor xmm7, xmm4, xmm7; ret; 
0x00141241: wait; aas; out dx, eax; call dword ptr [ebx + 0x50]; 
0x001810b1: wait; add byte ptr [eax], al; add byte ptr [ebx - 0x6972f714], al; into; stc; call dword ptr [edx - 0x77]; 
0x00175c48: wait; add byte ptr [eax], al; add byte ptr [ecx + 0xa0c4], al; add byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000a915f: wait; add dword ptr [eax], eax; add esp, 0x18; pop ebx; ret; 
0x000a6ddf: wait; dec eax; add al, 0; add byte ptr [ebx + 0x39242444], cl; ret; 
0x0015e5f1: wait; dec ebx; in al, dx; jmp dword ptr [ebp - 0x75]; 
0x00123ca3: wait; dec edx; stc; call dword ptr [edx - 0x77]; 
0x001a4ac5: wait; fadd st(1), st(0); stc; jmp dword ptr [esi + 0xf]; 
0x00096a71: wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x0010477a: wait; idiv bh; jmp dword ptr [esi - 0x70]; 
0x001a0bd2: wait; idiv edi; mov eax, dword ptr [ebx + eax*4 - 0x86474]; sub eax, ecx; pop ebx; ret; 
0x001a33e6: wait; idiv edi; sub eax, ecx; pop ebp; pop ebx; ret; 
0x001a0bd9: wait; idiv edi; sub eax, ecx; pop ebx; ret; 
0x000e5446: wait; jecxz 0xe5448; call dword ptr [eax + 0x57]; 
0x00140851: wait; push es; sti; jmp dword ptr [esi - 0x3f]; 
0x00080b7a: wait; ret 0x1b; 
0x000c45f0: wait; stc; call dword ptr [eax - 0x18]; 
0x000c45e0: wait; stc; call dword ptr [eax - 0x73]; 
0x000adcbe: wait; stc; call dword ptr [edx - 0x73]; 
0x0006ec58: xabort -1; lea eax, [ecx + eax - 0x1ce54b]; jmp eax; 
0x00136525: xbegin 0x245ff12a; xor al, 0x83; les ecx, ptr [ecx + ecx*4]; ret; 
0x0012a52c: xchg ah, ah; movsb byte ptr es:[edi], byte ptr [esi]; stc; call dword ptr [edi - 0x7f]; 
0x000c6a59: xchg ah, ah; pushfd; stc; call dword ptr [eax - 0x18]; 
0x001248b0: xchg ah, al; dec edx; stc; call dword ptr [eax - 0x73]; 
0x000dbec1: xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x0005b5eb: xchg ah, bh; js 0x5b5e8; call dword ptr [eax - 0x18]; 
0x00106f20: xchg ah, bl; sub al, 0xf9; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x00095c64: xchg ah, bl; test ecx, edi; call dword ptr [eax - 0x18]; 
0x00096a6a: xchg ah, bl; test ecx, edi; call dword ptr [eax - 0x18]; wait; fdivr st(1); jmp dword ptr [esi - 0x70]; 
0x000a1b0a: xchg ah, ch; cmp esp, esi; call dword ptr [eax + 0x57]; 
0x0006525c: xchg ah, ch; sar al, 0xff; jmp ecx; 
0x0012a6e4: xchg ah, cl; push ebx; stc; call dword ptr [eax + 0x68]; 
0x0009338f: xchg ah, cl; test cl, bh; call dword ptr [eax - 0x73]; 
0x0009338f: xchg ah, cl; test cl, bh; call dword ptr [eax - 0x73]; xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x000796e6: xchg ah, dh; jle 0x796e3; call dword ptr [eax - 0x73]; 
0x000fb834: xchg al, ah; cmc; clc; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x000e0190: xchg al, ah; in al, 0xf8; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x00059c2c: xchg al, ah; jbe 0x59c29; call dword ptr [eax - 0x18]; 
0x0005b9b2: xchg al, ah; jns 0x5b9af; call dword ptr [eax - 0x73]; 
0x0013eda4: xchg al, ah; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x18]; 
0x00062b7d: xchg al, al; jge 0x62b7a; call dword ptr [eax - 0x73]; 
0x0006eb65: xchg al, al; jge 0x6eb62; call dword ptr [eax - 0x73]; 
0x0017ad21: xchg al, al; stc; call dword ptr [eax - 0x73]; 
0x000dbeba: xchg al, bh; cmp eax, 0x8d500000; xchg ah, bh; fucompi st(1); call dword ptr [eax - 0x73]; 
0x000abc37: xchg al, bh; jmp dword ptr [esi - 0x70]; 
0x0016dc9a: xchg al, bl; mov dh, 0xf9; call dword ptr [eax - 0x73]; 
0x000256f4: xchg al, bl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x00059dc3: xchg al, ch; das; stc; call dword ptr [eax - 0x18]; 
0x001867d4: xchg al, ch; salc; dec ebp; sti; jmp dword ptr [esi - 0x70]; 
0x000843e5: xchg al, ch; stc; call dword ptr [eax - 0x18]; 
0x0005b597: xchg al, cl; js 0x5b594; call dword ptr [eax - 0x18]; 
0x00078a50: xchg al, dh; jge 0x78a4d; call dword ptr [eax + 0x68]; 
0x000790d5: xchg al, dh; jge 0x790d2; call dword ptr [eax + 0x68]; 
0x0011aadd: xchg al, dh; jmp dword ptr [ebp - 0x75]; 
0x000a67df: xchg al, dh; xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00029be4: xchg al, dl; jo 0x29be1; call dword ptr [eax - 0x18]; 
0x001435b4: xchg al, dl; lodsb al, byte ptr [esi]; stc; call dword ptr [edi + 0x52]; 
0x000e2fe6: xchg al, dl; sahf; stc; call dword ptr [eax - 0x73]; 
0x00095b62: xchg al, dl; xchg cl, bh; call dword ptr [eax + 0x68]; 
0x00095ba1: xchg al, dl; xchg cl, bh; call dword ptr [eax + 0x6a]; 
0x00095c51: xchg al, dl; xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001a24bc: xchg bh, bh; adc byte ptr [eax], al; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0003229b: xchg bh, dh; inc dword ptr [ecx]; fnstcw word ptr [esi]; jmp ecx; 
0x00061da2: xchg bl, al; xor bh, cl; call dword ptr [eax + 0x53]; 
0x0011ead2: xchg bl, bh; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0012a4ce: xchg bl, ch; push ebx; stc; call dword ptr [eax + 0x57]; 
0x0009837b: xchg byte ptr [eax + 0x39000002], dh; ret; 
0x0015cf54: xchg byte ptr [eax + 0x5f], dh; stc; call dword ptr [eax - 0x18]; 
0x0005b5b3: xchg byte ptr [eax + 0x79], ch; stc; call dword ptr [eax - 0x18]; 
0x000793a4: xchg byte ptr [eax + 0x7e], al; stc; call dword ptr [eax - 0x18]; 
0x00176069: xchg byte ptr [eax + edi - 0xd], bh; call dword ptr [eax - 0x48]; 
0x001248b7: xchg byte ptr [eax + esi - 7], dh; call dword ptr [eax - 0x18]; 
0x00027517: xchg byte ptr [eax + esi*2], ah; stc; call dword ptr [eax - 0x73]; 
0x00027075: xchg byte ptr [eax + esi*2], cl; stc; call dword ptr [eax - 0x73]; 
0x001831b3: xchg byte ptr [eax - 0x45], ch; stc; call dword ptr [eax - 0x73]; 
0x00148f9e: xchg byte ptr [eax - 0x52], al; stc; call dword ptr [eax - 0x73]; 
0x0014901c: xchg byte ptr [eax - 0x52], bh; stc; call dword ptr [eax - 0x73]; 
0x00112219: xchg byte ptr [eax - 0x5e], al; stc; call dword ptr [eax - 0x73]; 
0x000c52f7: xchg byte ptr [eax - 0x64], bl; stc; call dword ptr [eax - 0x73]; 
0x000a20b1: xchg byte ptr [eax - 0x67], ah; stc; call dword ptr [eax - 0x73]; 
0x000a2a96: xchg byte ptr [eax - 0x71], ah; stc; call dword ptr [eax - 0x18]; 
0x000981d8: xchg byte ptr [eax - 0x79], ah; stc; call dword ptr [eax - 0x73]; 
0x000843d5: xchg byte ptr [eax - 0x7d], dl; stc; call dword ptr [eax - 0x73]; 
0x00126294: xchg byte ptr [eax - 7], dl; call dword ptr [eax + 0x55]; 
0x000a2a1a: xchg byte ptr [eax], ah; cdq; stc; call dword ptr [eax - 0x73]; 
0x0012e4ab: xchg byte ptr [eax], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00085a39: xchg byte ptr [eax], al; add byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x000e08d3: xchg byte ptr [eax], bh; out 0xf8, al; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0013c744: xchg byte ptr [eax], bh; stosb byte ptr es:[edi], al; stc; call dword ptr [eax - 0x73]; 
0x0013f389: xchg byte ptr [eax], bh; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x18]; 
0x0009697c: xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x000969a5: xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax + 0x6a]; 
0x00096a57: xchg byte ptr [eax], cl; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x0005b5cf: xchg byte ptr [eax], dh; jns 0x5b5cc; call dword ptr [eax - 0x18]; 
0x0007981a: xchg byte ptr [eax], dl; jp 0x79817; call dword ptr [eax - 0x18]; 
0x000952a0: xchg byte ptr [ebp + 0x26b4], cl; add byte ptr [eax], al; mov eax, 0xe0; call dword ptr gs:[0x10]; 
0x001880d3: xchg byte ptr [ebp + 0x30], ah; stc; call dword ptr [eax - 0x18]; 
0x000a20c4: xchg byte ptr [ebp + 0x42], al; stc; call dword ptr [eax - 0x18]; 
0x000a2b42: xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; 
0x000a2b42: xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; ret; 
0x000959e9: xchg byte ptr [ebp + eax*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x00079340: xchg byte ptr [ebp + ebp*2 - 7], ch; call dword ptr [eax - 0x73]; 
0x00062b90: xchg byte ptr [ebp + edi*2 - 7], cl; call dword ptr [eax - 0x18]; 
0x0015d5f4: xchg byte ptr [ebp + esi*4 - 7], bh; call dword ptr [eax - 0x73]; 
0x001431de: xchg byte ptr [ebp - 0x75000000], bl; add dword ptr [ebx - 0x79f0f008], eax; xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x0002752a: xchg byte ptr [ebx + 0x29], bl; stc; call dword ptr [eax - 0x18]; 
0x000d3db5: xchg byte ptr [ebx + 0x39043944], cl; ret 0x8f0f; 
0x00095b6e: xchg byte ptr [ebx + 0x40], ch; stc; call dword ptr [eax - 0x73]; 
0x00096988: xchg byte ptr [ebx + 0x40], dh; stc; call dword ptr [eax - 0x73]; 
0x00158ea1: xchg byte ptr [ebx + 0x5f], bl; stc; call dword ptr [eax + 0x6a]; 
0x0008309b: xchg byte ptr [ebx + eax*4], bh; stc; call dword ptr [eax - 0x73]; 
0x0002a0a6: xchg byte ptr [ebx + ebp*2 - 7], cl; call dword ptr [eax - 0x73]; 
0x0013f376: xchg byte ptr [ebx + ebp*4 - 7], ah; call dword ptr [eax - 0x73]; 
0x0013ed91: xchg byte ptr [ebx + ebp*4], ah; stc; call dword ptr [eax - 0x73]; 
0x000c5307: xchg byte ptr [ebx + ebx*4 - 7], dl; call dword ptr [eax - 0x18]; 
0x0005dfac: xchg byte ptr [ebx + edi*2], ch; stc; call dword ptr [eax - 0x18]; 
0x00155095: xchg byte ptr [ebx + esi*4 - 7], ch; call dword ptr [eax - 0x18]; 
0x001a93b7: xchg byte ptr [ebx], al; add byte ptr [eax], al; add eax, 0xf; pop edi; ret; 
0x00082ce6: xchg byte ptr [ebx], al; add byte ptr [eax], al; sub esp, 8; push -1; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0011b830: xchg byte ptr [ebx], al; dec edx; stc; call dword ptr [eax - 0x18]; 
0x0013cf77: xchg byte ptr [ebx], dh; pop eax; stc; call dword ptr [ecx - 0x77]; 
0x00078a63: xchg byte ptr [ecx + 0x33], al; stc; call dword ptr [eax - 0x18]; 
0x00162f91: xchg byte ptr [ecx + 0x61], al; stc; call dword ptr [eax + 0x6a]; 
0x000a2b36: xchg byte ptr [ecx + 0x68fff941], dl; adc al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg byte ptr [ebp + 0x42], ch; stc; call dword ptr [eax - 0x18]; 
0x000a2b2f: xchg byte ptr [ecx + ebx*4], ch; stc; call dword ptr [eax - 0x73]; 
0x0015b2aa: xchg byte ptr [ecx + ecx*8], ch; int1; call dword ptr [eax + 0x6a]; 
0x000a210e: xchg byte ptr [ecx + ecx], cl; add byte ptr [ecx], bh; ret; 
0x0005b9c2: xchg byte ptr [ecx + edi*2 - 0x17af0007], bh; inc ebx; mov ebp, edi; jmp dword ptr [esi - 0x70]; 
0x0005e020: xchg byte ptr [ecx + esi - 7], cl; call dword ptr [eax - 0x18]; 
0x00122f3d: xchg byte ptr [ecx], al; add byte ptr [ebx - 0xf76db3c], al; pop ebx; pop esi; ret; 
0x00059c76: xchg byte ptr [ecx], bl; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00100de9: xchg byte ptr [ecx], ch; ret 0x1be; 
0x00124ab5: xchg byte ptr [edi + 0x2e], ch; stc; call dword ptr [eax - 1]; 
0x000a712d: xchg byte ptr [edi + 0x44], ch; stc; call dword ptr [ebx + 0x50]; 
0x00106c2a: xchg byte ptr [edi + 0x48], al; stc; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x001393a1: xchg byte ptr [edi + 0x56], ah; stc; call dword ptr [ebx + 0x50]; 
0x000981e8: xchg byte ptr [edi + eax*4], bh; stc; call dword ptr [eax - 0x18]; 
0x0002502d: xchg byte ptr [edi + ebp*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x0014d038: xchg byte ptr [edi + ebp*4 - 7], ah; call dword ptr [eax - 0x18]; 
0x000df32a: xchg byte ptr [edi + ebx*8 - 0x17], bl; call dword ptr [eax - 0x73]; 
0x000a2a73: xchg byte ptr [edi + ecx*4], dh; stc; call dword ptr [eax - 0x18]; 
0x000a1ab0: xchg byte ptr [edi + edi - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x000a1ac2: xchg byte ptr [edi + edi - 0x1a], cl; call dword ptr [eax + 0x57]; 
0x0007980a: xchg byte ptr [edi + edi*2], ah; stc; call dword ptr [eax - 0x73]; 
0x00059d2f: xchg byte ptr [edi + esi*2 - 7], ah; call dword ptr [eax - 0x18]; 
0x001a5045: xchg byte ptr [edi - 0x7cfffffe], al; ret 0x8310; 
0x001a3bbe: xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x001a1b7c: xchg byte ptr [edi], bh; sbb al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x0012a3b3: xchg byte ptr [edi], bl; aas; stc; call dword ptr [eax + 0x6a]; 
0x001a329c: xchg byte ptr [edi], bl; add eax, dword ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001a148c: xchg byte ptr [edi], ch; and dword ptr [eax], eax; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x00122c54: xchg byte ptr [edi], ch; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00132976: xchg byte ptr [edi], ch; stc; call dword ptr [eax - 0x18]; 
0x00059c9b: xchg byte ptr [edi], ch; xor cl, bh; call dword ptr [eax - 0x18]; 
0x001a2bac: xchg byte ptr [edi], cl; or al, byte ptr [eax]; add byte ptr [ebx + 0xf6610c1], al; outsd dx, dword ptr [esi]; fsub st(1), st(0); ret; 
0x001880cc: xchg byte ptr [edx + 0x30], ch; stc; call dword ptr [eax - 0x73]; 
0x001431e9: xchg byte ptr [edx + 0x39000000], dl; ret 0x820f; 
0x0011222c: xchg byte ptr [edx + 0x49], cl; stc; call dword ptr [eax - 0x18]; 
0x0013cf92: xchg byte ptr [edx + 0x58], al; stc; call dword ptr [ecx + 0x50]; 
0x0017efa0: xchg byte ptr [edx + 0x66], ch; stc; call dword ptr [eax - 0x18]; 
0x00093396: xchg byte ptr [edx + 0x68fff93f], bh; ret 0; 
0x00070e59: xchg byte ptr [edx + 0xd], ah; add byte ptr [eax], al; mov dword ptr [esp + 4], ecx; mov dword ptr [esp + 0x48], 1; jmp eax; 
0x00029bc1: xchg byte ptr [edx], al; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0011b860: xchg byte ptr [edx], bl; dec edx; stc; call dword ptr [eax - 0x18]; 
0x00027088: xchg byte ptr [edx], bl; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x001740e1: xchg byte ptr [edx], dh; stc; call dword ptr [edi + 0x50]; 
0x000a19cd: xchg byte ptr [edx], dl; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0002755a: xchg byte ptr [esi + 0x29], cl; stc; call dword ptr [eax - 0x18]; 
0x000e2ff9: xchg byte ptr [esi + 0x46], bh; stc; call dword ptr [eax - 0x18]; 
0x00131555: xchg byte ptr [esi + eax*2], ch; out dx, eax; call dword ptr [eax - 0x18]; 
0x00139388: xchg byte ptr [esi + ebp*2 - 7], ch; call dword ptr [eax - 0x75]; 
0x00079388: xchg byte ptr [esi + edi*2 - 7], bh; call dword ptr [eax - 0x18]; 
0x00079350: xchg byte ptr [esi + edi*2], al; stc; call dword ptr [eax - 0x18]; 
0x000fbc17: xchg byte ptr [esi + edx - 0x77], bh; ret 0xd139; 
0x000650d5: xchg byte ptr [esi - 0x74fffff7], dl; jl 0x65101; pop eax; jmp eax; 
0x0017df39: xchg byte ptr [esi - 7], al; call dword ptr [eax - 0x18]; 
0x0011eab5: xchg byte ptr [esi], ch; dec edx; stc; call dword ptr [eax - 0x18]; 
0x000a1b40: xchg byte ptr [esp + edi - 0x1a], ch; call dword ptr [eax + 0x57]; 
0x000a1a0d: xchg byte ptr [esp + edi], ah; add byte ptr [ecx], al; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x00023258: xchg byte ptr [esp + esi*2 - 7], ch; call dword ptr [eax - 0x18]; 
0x0005bcfb: xchg ch, bh; jmp dword ptr [esi - 0x70]; 
0x00059bdd: xchg ch, cl; das; stc; call dword ptr [eax - 0x18]; 
0x00186598: xchg ch, dl; add byte ptr [eax], al; add byte ptr [eax - 0x7af0cf06], al; ret; 
0x00095b64: xchg cl, bh; call dword ptr [eax + 0x68]; 
0x00095ba3: xchg cl, bh; call dword ptr [eax + 0x6a]; 
0x00095cc2: xchg cl, bh; call dword ptr [eax - 0x18]; 
0x00095d00: xchg cl, bh; call dword ptr [eax - 0x18]; pop es; out 0xf9, al; jmp dword ptr [esi - 0x70]; 
0x000957fc: xchg cl, bh; call dword ptr [eax - 0x73]; 
0x001831c3: xchg dh, ch; stc; call dword ptr [eax - 0x18]; 
0x001831c3: xchg dh, ch; stc; call dword ptr [eax - 0x18]; inc edx; adc ebx, ebp; jmp dword ptr [esi - 0x70]; 
0x00029c07: xchg dh, cl; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000abc9d: xchg dh, dh; push esi; inc ecx; jbe 0xabcb4; cmove eax, edx; ret; 
0x000a7de6: xchg dh, dh; std; jmp dword ptr [esi - 0x70]; 
0x00029abe: xchg dl, ah; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0013c754: xchg dl, ch; push edi; stc; call dword ptr [eax - 0x18]; 
0x000933a2: xchg dl, cl; aas; stc; call dword ptr [eax - 0x18]; 
0x000a4a01: xchg dl, cl; add dword ptr [eax], eax; add byte ptr [ebx + 0x45480], cl; add byte ptr [ecx + 0x39c189cb], cl; ret; 
0x00070dac: xchg dl, dl; push cs; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00084401: xchg dl, dl; stc; call dword ptr [eax - 0x18]; 
0x000699e1: xchg dword ptr [0x68fff933], ebx; or al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], esi; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x0007b79e: xchg dword ptr [0x83000001], ecx; in al, dx; or byte ptr [ebp + 0x50082444], cl; push esi; call dword ptr [ebx + 0x48]; 
0x00071dd6: xchg dword ptr [0x89fffff2], edi; ret 0xc083; 
0x0012920e: xchg dword ptr [0xdb000001], ecx; test al, 0xc; ret 0xfff9; 
0x000479da: xchg dword ptr [eax + 0x2f], edi; stc; call dword ptr [eax - 0x18]; 
0x0008a4eb: xchg dword ptr [eax + 0x6a000000], edi; add byte ptr [edi + 0x56], dl; push ebx; call dword ptr [ebp + 0x40]; 
0x0002ac66: xchg dword ptr [eax + 0x71], ebp; stc; call dword ptr [eax - 0x18]; 
0x0002b80b: xchg dword ptr [eax + 0x72], ebp; stc; call dword ptr [eax - 0x73]; 
0x00040f9d: xchg dword ptr [eax + 0x76], ebp; stc; call dword ptr [eax - 0x73]; 
0x0004a1cf: xchg dword ptr [eax + 0x78], ecx; stc; call dword ptr [eax - 0x73]; 
0x00051209: xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x0004d524: xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x0005bcf3: xchg dword ptr [eax + 0x7a], esp; stc; call dword ptr [eax - 0x18]; 
0x00098062: xchg dword ptr [eax + 0xf0], edi; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0007ee78: xchg dword ptr [eax + eax - 0x137d0000], edx; or al, 0x56; call dword ptr [ebx + 0x34]; 
0x0010d5a0: xchg dword ptr [eax + eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0014c7c5: xchg dword ptr [eax + eax], esi; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x001867a5: xchg dword ptr [eax + ecx*4], ecx; hlt; call dword ptr [eax - 0x18]; 
0x000479c7: xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax + 0x68]; 
0x0004a407: xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x000479d3: xchg dword ptr [eax + esi - 7], edx; call dword ptr [eax - 0x73]; 
0x0002756b: xchg dword ptr [eax + esi*2], esp; stc; call dword ptr [eax - 0x73]; 
0x0004a43d: xchg dword ptr [eax + esi], eax; stc; call dword ptr [eax - 0x18]; 
0x0008ef79: xchg dword ptr [eax - 0x1b], ecx; call dword ptr [eax - 0x18]; 
0x00179140: xchg dword ptr [eax - 0x46], edx; stc; call dword ptr [eax - 0x73]; 
0x00168c4d: xchg dword ptr [eax - 0x4a], eax; stc; call dword ptr [eax - 0x73]; 
0x0015d9dc: xchg dword ptr [eax - 0x4b], ecx; stc; call dword ptr [eax - 0x18]; 
0x0012edeb: xchg dword ptr [eax - 0x5a], ebx; stc; call dword ptr [eax + 0x55]; 
0x0012edcd: xchg dword ptr [eax - 0x5a], esi; stc; call dword ptr [eax + 0x55]; 
0x00111cb0: xchg dword ptr [eax - 0x5e], eax; stc; call dword ptr [eax - 0x73]; 
0x00113fe5: xchg dword ptr [eax - 0x5e], ebx; stc; call dword ptr [eax + 0x68]; 
0x000c74bd: xchg dword ptr [eax - 0x63], ebx; stc; call dword ptr [eax - 0x73]; 
0x000c7106: xchg dword ptr [eax - 0x63], ecx; stc; call dword ptr [eax - 0x73]; 
0x000a6a73: xchg dword ptr [eax - 0x68], ecx; stc; call dword ptr [eax - 0x18]; 
0x000a4fd2: xchg dword ptr [eax - 0x6b], esi; stc; call dword ptr [eax - 0x18]; 
0x000e80bb: xchg dword ptr [eax - 0x73000000], ebx; dec esp; and al, 0xc; mov eax, 0x194; call dword ptr gs:[0x10]; 
0x000fb82d: xchg dword ptr [eax - 0x74ffffff], esi; mov esp, 0xf8f5e086; inc dword ptr [ecx]; idiv dword ptr [esi]; jmp edi; 
0x0009eafe: xchg dword ptr [eax - 0x77], edi; stc; call dword ptr [eax - 0x73]; 
0x0009e62c: xchg dword ptr [eax - 0x77], esi; stc; call dword ptr [eax - 0x73]; 
0x0009d1d0: xchg dword ptr [eax - 0x78], ebp; stc; call dword ptr [eax - 0x18]; 
0x000e120b: xchg dword ptr [eax - 0x7c000012], edx; ret; 
0x000919d9: xchg dword ptr [eax], eax; add byte ptr [eax], al; add byte ptr [eax + 0xf0], bh; call dword ptr gs:[0x10]; 
0x001a9525: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [eax + 4]; pop edi; ret; 
0x001a8bc5: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [ecx + 5]; ret; 
0x001a8505: xchg dword ptr [eax], eax; add byte ptr [eax], al; lea eax, [edi + 4]; pop edi; ret; 
0x000960cf: xchg dword ptr [eax], eax; add byte ptr [eax], al; mov esi, edx; mov dword ptr [esp + 0x18], 0; call dword ptr gs:[0x10]; 
0x0014bbc5: xchg dword ptr [eax], eax; add byte ptr [ebp - 0x7cc08b40], al; in al, dx; add al, 0x89; ret; 
0x0009437b: xchg dword ptr [eax], eax; test ecx, edi; call dword ptr [eax + 0x68]; 
0x000942f3: xchg dword ptr [eax], eax; test ecx, edi; call dword ptr [eax - 0x73]; 
0x0010d90c: xchg dword ptr [eax], ebp; add al, byte ptr [eax]; add byte ptr [ebp + 0x30840fc0], al; add dword ptr [eax], eax; add byte ptr [ebx - 0x1477b], cl; jmp dword ptr [ebp - 0x75]; 
0x0002c646: xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x0004a1e2: xchg dword ptr [eax], ebx; js 0x4a1df; call dword ptr [eax - 0x18]; 
0x0004d537: xchg dword ptr [eax], ebx; js 0x4d534; call dword ptr [eax - 0x18]; 
0x0005121c: xchg dword ptr [eax], ebx; js 0x51219; call dword ptr [eax - 0x18]; 
0x00059959: xchg dword ptr [eax], ebx; js 0x59956; call dword ptr [eax - 0x18]; 
0x000d11d3: xchg dword ptr [eax], ebx; js 0xd11d0; call dword ptr [eax - 0x18]; 
0x000d8ac5: xchg dword ptr [eax], ebx; js 0xd8ac2; call dword ptr [eax - 0x18]; 
0x0002abb6: xchg dword ptr [eax], ecx; jno 0x2abb3; call dword ptr [eax - 0x18]; 
0x0002b901: xchg dword ptr [eax], ecx; jno 0x2b8fe; call dword ptr [eax - 0x18]; 
0x0002dc17: xchg dword ptr [eax], ecx; jno 0x2dc14; call dword ptr [eax - 0x18]; 
0x0002e3ba: xchg dword ptr [eax], ecx; jno 0x2e3b7; call dword ptr [eax - 0x18]; 
0x0002f118: xchg dword ptr [eax], ecx; jno 0x2f115; call dword ptr [eax - 0x18]; 
0x00157f0a: xchg dword ptr [eax], ecx; mov ah, 0xf9; call dword ptr [eax - 0x73]; 
0x0014ff40: xchg dword ptr [eax], ecx; mov cl, 0xf9; call dword ptr [eax - 0x73]; 
0x0017c747: xchg dword ptr [eax], ecx; pop esp; stc; call dword ptr [eax - 0x18]; 
0x0002acac: xchg dword ptr [eax], edi; jno 0x2aca9; call dword ptr [eax - 0x18]; 
0x0002dbf4: xchg dword ptr [eax], edi; jno 0x2dbf1; call dword ptr [eax - 0x18]; 
0x0002e405: xchg dword ptr [eax], edi; jno 0x2e402; call dword ptr [eax - 0x18]; 
0x0002f0e0: xchg dword ptr [eax], edi; jno 0x2f0dd; call dword ptr [eax - 0x18]; 
0x001537e3: xchg dword ptr [eax], edi; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x000c295a: xchg dword ptr [eax], edx; add byte ptr [ebx], al; sbb al, 0x8b; add edx, ecx; add esi, ecx; jmp ebx; 
0x00153e2d: xchg dword ptr [eax], edx; cmp edx, 1; jg 0x153e38; ret; 
0x0005bad8: xchg dword ptr [eax], edx; jp 0x5bad5; call dword ptr [eax - 0x18]; 
0x000a1c9b: xchg dword ptr [eax], esi; inc edx; stc; call dword ptr [eax + 0x53]; 
0x000620e4: xchg dword ptr [eax], esi; jge 0x620e1; call dword ptr [eax - 0x73]; 
0x0005bac8: xchg dword ptr [eax], esi; jp 0x5bac5; call dword ptr [eax - 0x73]; 
0x000699ed: xchg dword ptr [eax], esi; xor edi, ecx; call dword ptr [eax - 0x18]; 
0x000c7189: xchg dword ptr [eax], esp; popfd; stc; call dword ptr [eax - 0x18]; 
0x00131afa: xchg dword ptr [eax], esp; push ebp; stc; call dword ptr [eax + 0x6a]; 
0x00097a9f: xchg dword ptr [eax], esp; xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x000a5332: xchg dword ptr [eax], esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x001344cf: xchg dword ptr [ebp + 0x55], esi; stc; call dword ptr [eax - 1]; 
0x000caa4b: xchg dword ptr [ebp + ebx*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x001328b7: xchg dword ptr [ebp + edx*2 - 0x11], ebp; dec dword ptr [edi]; inc ebp; ret 0xec83; 
0x000d4987: xchg dword ptr [ebp - 0x76e68137], eax; pop ebp; aam 0x31; ror byte ptr [ecx - 0x7c0ffe35], cl; ret 0x8d01; 
0x000c8d33: xchg dword ptr [ebx + 0x39102444], ecx; ret 0x840f; 
0x000cc680: xchg dword ptr [ebx + 0x39182444], ecx; ret 0x840f; 
0x000a4611: xchg dword ptr [ebx + eax*2], ecx; stc; call dword ptr [eax - 0x18]; 
0x00086670: xchg dword ptr [ebx + eax*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x00047982: xchg dword ptr [ebx + eax*4], eax; ret 0x8901; 
0x00047822: xchg dword ptr [ebx + eax*4], eax; ret; 
0x0002ac76: xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x0002a843: xchg dword ptr [ebx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00140eca: xchg dword ptr [ebx + ebp*4 - 7], esi; call dword ptr [eax - 0x73]; 
0x000c4c8e: xchg dword ptr [ebx + ebx*4 - 7], edx; call dword ptr [eax - 0x18]; 
0x00183a08: xchg dword ptr [ebx + edi*4 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0003135c: xchg dword ptr [ebx + esi*2], ebx; stc; call dword ptr [eax - 0x73]; 
0x000256ee: xchg dword ptr [ebx - 0x72fbdb8c], ecx; xchg al, bl; outsd dx, dword ptr [esi]; stc; call dword ptr [eax - 0x73]; 
0x0016b4a3: xchg dword ptr [ebx - 7], esp; call dword ptr [eax + 0x6a]; 
0x0016b5a3: xchg dword ptr [ebx - 7], esp; call dword ptr [eax - 0x18]; 
0x0016b4f7: xchg dword ptr [ebx - 7], esp; jmp dword ptr [ebp - 0x75]; 
0x001537f6: xchg dword ptr [ebx], eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x0009436c: xchg dword ptr [ebx], ebp; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00183a3e: xchg dword ptr [ebx], ebp; stc; call dword ptr [eax - 0x18]; 
0x00087fd5: xchg dword ptr [ebx], edi; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0014ff72: xchg dword ptr [ebx], edx; pop ebp; stc; call dword ptr [eax - 0x18]; 
0x00110ae9: xchg dword ptr [ebx], esi; dec ecx; stc; call dword ptr [eax - 0x73]; 
0x001693eb: xchg dword ptr [ebx], esp; stc; call dword ptr [eax - 0x18]; 
0x001693eb: xchg dword ptr [ebx], esp; stc; call dword ptr [eax - 0x18]; sbb ch, byte ptr [edi - 0x4a170014]; and ebp, edi; jmp dword ptr [esi - 0x70]; 
0x00179147: xchg dword ptr [ecx + 0x56], esi; stc; call dword ptr [eax + 0x6a]; 
0x00183a84: xchg dword ptr [ecx + 0x67], eax; stc; call dword ptr [eax - 0x18]; 
0x000a5326: xchg dword ptr [ecx + 0x68fff941], edx; or eax, 0x8d500000; xchg dword ptr [eax], esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00168c54: xchg dword ptr [ecx + 0x68fff962], ebp; add dword ptr [eax], 0x8d500000; xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0015ac32: xchg dword ptr [ecx + eax*2 - 7], ecx; call dword ptr [eax + 0x53]; 
0x000d5c89: xchg dword ptr [ecx + eax*4], eax; ret 0; 
0x0007d087: xchg dword ptr [ecx + eax], edx; add byte ptr [ebx - 0xa8fb14], al; jne 0x7d09b; push esi; call dword ptr [ebx + 0x1c]; 
0x0009f954: xchg dword ptr [ecx + ebp - 0x1a], ebx; call dword ptr [eax - 0x73]; 
0x000a4633: xchg dword ptr [ecx + ebx*4 - 7], edx; call dword ptr [eax + 0x68]; 
0x000a45fe: xchg dword ptr [ecx + ebx*4 - 7], edx; call dword ptr [eax - 0x73]; 
0x00110af0: xchg dword ptr [ecx + ecx*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x0009e6f2: xchg dword ptr [ecx + ecx*4 - 7], ebx; call dword ptr [eax - 0x73]; 
0x0009db55: xchg dword ptr [ecx + ecx*4], eax; stc; call dword ptr [eax - 0x73]; 
0x0009e63c: xchg dword ptr [ecx + ecx*4], ebx; stc; call dword ptr [eax - 0x18]; 
0x0009e702: xchg dword ptr [ecx + ecx*4], edi; stc; call dword ptr [eax - 0x18]; 
0x0015ad66: xchg dword ptr [ecx + ecx*8], ebp; int1; call dword ptr [eax + 0x6a]; 
0x000eee1b: xchg dword ptr [ecx - 0x4500000b], esi; add dword ptr [eax + eax], eax; or byte ptr [edi], 0xa3; ret 0x830f; 
0x0008c18a: xchg dword ptr [ecx - 0x7d000000], ebp; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x0017be15: xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00157f1a: xchg dword ptr [ecx], eax; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00131498: xchg dword ptr [ecx], eax; push ebp; stc; call dword ptr [eax - 0x18]; 
0x0004a4d0: xchg dword ptr [ecx], ebx; xor cl, bh; call dword ptr [eax - 0x18]; 
0x000873fe: xchg dword ptr [ecx], ecx; aas; stc; call dword ptr [eax + 0x56]; 
0x0009908a: xchg dword ptr [ecx], edi; add dword ptr [eax], eax; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x00075222: xchg dword ptr [ecx], edi; or cl, byte ptr [edi]; test byte ptr [0x83000001], al; ret 0x8904; 
0x000751ad: xchg dword ptr [ecx], edi; or dh, byte ptr [esi + ebp - 0x7d]; ret 0x8904; 
0x00141276: xchg dword ptr [ecx], esp; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0015330c: xchg dword ptr [edi + 0x29], esp; stc; call dword ptr [eax + 0x53]; 
0x0010ba32: xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0009efd5: xchg dword ptr [edi + 0x41], esi; stc; call dword ptr [eax - 0x73]; 
0x000f0b70: xchg dword ptr [edi + 0x47], ebp; stc; call dword ptr [eax - 0x73]; 
0x001394b9: xchg dword ptr [edi + 0x56], ebp; stc; call dword ptr [eax - 1]; 
0x00166566: xchg dword ptr [edi + 0x62], ebp; stc; call dword ptr [eax + 0x6a]; 
0x0017e113: xchg dword ptr [edi + 0x63], eax; stc; call dword ptr [eax + 0x6a]; 
0x0017e5a4: xchg dword ptr [edi + 0x63], eax; stc; push dword ptr [ecx]; call dword ptr [eax + 0x6a]; 
0x00183a4e: xchg dword ptr [edi + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0004a55c: xchg dword ptr [edi + esi*2 - 7], esp; call dword ptr [eax - 0x18]; 
0x000e09fc: xchg dword ptr [edi - 0x7c00000a], ebx; ret; 
0x001693c8: xchg dword ptr [edi], eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0004a516: xchg dword ptr [edi], ebp; xor cl, bh; call dword ptr [eax - 0x18]; 
0x0009434a: xchg dword ptr [edi], ebx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x00093fb9: xchg dword ptr [edi], ecx; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0008cf24: xchg dword ptr [edi], edi; add eax, dword ptr [eax]; add byte ptr [ebx + 0x6a04ec], al; push 0; push esi; call dword ptr [ebp + 0x2c]; 
0x0002757e: xchg dword ptr [edi], edi; sub ecx, edi; call dword ptr [eax - 0x18]; 
0x0003f5f9: xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x0007dc1a: xchg dword ptr [edx + 0x1a80], eax; cmp eax, 1; jg 0x7dc30; ret; 
0x0008d7ba: xchg dword ptr [edx + 0x1ab4], eax; cmp eax, 1; jg 0x8d7d0; ret; 
0x0004a4ad: xchg dword ptr [edx + 0x30], eax; stc; call dword ptr [eax - 0x18]; 
0x0004e915: xchg dword ptr [edx + 0x30], ecx; stc; call dword ptr [eax - 0x73]; 
0x00111cc3: xchg dword ptr [edx + 0x49], ecx; stc; call dword ptr [eax - 0x18]; 
0x0017b066: xchg dword ptr [edx + 0x63], esi; stc; call dword ptr [eax + 0x6a]; 
0x0002c63a: xchg dword ptr [edx + 0x68fff92a], edi; add byte ptr [edx], 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [eax], ebp; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x000902c0: xchg dword ptr [edx + eax], edx; add byte ptr [eax], al; add dword ptr [eax], eax; add byte ptr [eax], al; mov edx, 1; call dword ptr gs:[0x10]; 
0x0007b927: xchg dword ptr [edx + eax], esp; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0002e384: xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax + 0x68]; 
0x0002e0cf: xchg dword ptr [edx + ebp*2 - 7], ecx; call dword ptr [eax - 0x73]; 
0x0002e361: xchg dword ptr [edx + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0013c55e: xchg dword ptr [edx + ebp*4 - 7], esp; call dword ptr [eax - 0x73]; 
0x0009b8c8: xchg dword ptr [edx + ebp*8 - 0x1b], ebx; call dword ptr [eax - 0x73]; 
0x00150977: xchg dword ptr [edx + edi - 0xf], ecx; call dword ptr [ebx + 0x50]; 
0x0002c55a: xchg dword ptr [edx + esi*2 - 7], eax; call dword ptr [eax - 0x73]; 
0x0002db32: xchg dword ptr [edx + esi*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x0018fd44: xchg dword ptr [edx - 7], ebp; call dword ptr [eax - 0x73]; 
0x00123bac: xchg dword ptr [edx - 7], ecx; call dword ptr [eax - 0x18]; 
0x001664f4: xchg dword ptr [edx - 7], esi; call dword ptr [eax + 0x6a]; 
0x000a4e42: xchg dword ptr [edx*4 - 0x17af0007], edi; ret; 
0x000c4d01: xchg dword ptr [edx], ebx; inc ebp; stc; call dword ptr [eax - 0x18]; 
0x00092e49: xchg dword ptr [edx], ecx; add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x00110add: xchg dword ptr [edx], esi; stc; call dword ptr [eax + 0x68]; 
0x001106db: xchg dword ptr [edx], esi; stc; call dword ptr [eax - 0x73]; 
0x00113177: xchg dword ptr [edx], esp; stc; call dword ptr [eax - 0x73]; 
0x0009eb11: xchg dword ptr [esi + 0x41], ebx; stc; call dword ptr [eax - 0x18]; 
0x000a4e1f: xchg dword ptr [esi + 0x43], ecx; stc; call dword ptr [eax - 0x18]; 
0x001106ee: xchg dword ptr [esi + 0x49], edx; stc; call dword ptr [eax - 0x18]; 
0x00031715: xchg dword ptr [esi + eax*2 - 0x21], ebp; call dword ptr [eax + 0x6a]; 
0x00139490: xchg dword ptr [esi + ebp*2 - 7], ebp; call dword ptr [eax - 0x75]; 
0x000daad7: xchg dword ptr [esi + ebp*2 - 7], ecx; call dword ptr [eax + 0x56]; 
0x000d8ab2: xchg dword ptr [esi + ebx*4], edi; stc; call dword ptr [eax - 0x73]; 
0x0018471f: xchg dword ptr [esi + esi*2 - 0xc], ebp; call dword ptr [eax - 0x73]; 
0x0004a539: xchg dword ptr [esi + esi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x00169389: xchg dword ptr [esi + esi*4], esp; stc; call dword ptr [eax - 0x73]; 
0x00118715: xchg dword ptr [esi - 0x3b7c0006], ebp; adc byte ptr [ecx], bh; ret; 
0x00082ce5: xchg dword ptr [esi - 0x7cfffffd], eax; in al, dx; or byte ptr [edx - 1], ch; push dword ptr [ebx]; call dword ptr [edi + 0xc]; 
0x0012ed65: xchg dword ptr [esi], ebp; stc; call dword ptr [eax - 0x18]; 
0x001582b0: xchg dword ptr [esi], ebx; pop edi; stc; call dword ptr [ecx - 0x17]; 
0x000fef31: xchg dword ptr [esi], ecx; add al, byte ptr [eax]; add byte ptr [ecx], al; ret; 
0x00140ee1: xchg dword ptr [esi], edx; push esi; stc; call dword ptr [eax + 0x6a]; 
0x00183a1b: xchg dword ptr [esi], edx; stc; call dword ptr [eax - 0x18]; 
0x000233d5: xchg dword ptr [esi], esi; stc; call dword ptr [esi + 0x53]; 
0x001581ea: xchg dword ptr [esi], esp; pop edi; stc; call dword ptr [ecx + 0x50]; 
0x00028883: xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax + 0x68]; 
0x0002879e: xchg dword ptr [esp + ebp*2], ebp; stc; call dword ptr [eax - 0x73]; 
0x00028f71: xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax + 0x68]; 
0x00028e03: xchg dword ptr [esp + ebp*2], ecx; stc; call dword ptr [eax - 0x73]; 
0x00140c56: xchg dword ptr [esp + ebp*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000c4c7e: xchg dword ptr [esp + ebx*4], ecx; stc; call dword ptr [eax - 0x73]; 
0x000f0487: xchg dword ptr [esp + esi*2 - 7], ebp; call dword ptr [eax - 0x18]; 
0x00030a9e: xchg dword ptr [esp + esi*2 - 7], esp; call dword ptr [eax + 0x56]; 
0x00092e48: xchg dword ptr fs:[edx], ecx; add byte ptr [ebx - 0x72fbdb84], cl; xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x000a4fbf: xchg eax, eax; cwde; stc; call dword ptr [eax - 0x73]; 
0x001131c1: xchg eax, eax; dec ecx; stc; call dword ptr [eax - 0x18]; 
0x0004a4f3: xchg eax, ebp; das; stc; call dword ptr [eax - 0x18]; 
0x00168c60: xchg eax, ebx; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x0014efd5: xchg eax, ecx; mov al, 0xf9; call dword ptr [eax - 0x73]; 
0x0008aa8b: xchg eax, edi; add byte ptr [eax], al; add byte ptr [ebx + 0x555004ec], al; push esi; call dword ptr [ebx + 0x38]; 
0x0016939c: xchg eax, edi; mov ch, 0xf9; call dword ptr [eax - 0x18]; 
0x000a56a1: xchg eax, edx; cwde; stc; call dword ptr [eax - 0x73]; 
0x0004a48a: xchg eax, edx; ja 0x4a487; call dword ptr [eax - 0x18]; 
0x0004d632: xchg eax, edx; ja 0x4d62f; call dword ptr [eax - 0x18]; 
0x00051498: xchg eax, edx; ja 0x51495; call dword ptr [eax - 0x18]; 
0x00059d0a: xchg eax, edx; ja 0x59d07; call dword ptr [eax - 0x18]; 
0x000d12d7: xchg eax, edx; ja 0xd12d4; call dword ptr [eax - 0x18]; 
0x0002886e: xchg eax, edx; jo 0x2886b; call dword ptr [eax - 0x18]; 
0x00028f61: xchg eax, edx; jo 0x28f5e; call dword ptr [eax - 0x18]; 
0x0002947d: xchg eax, edx; jo 0x2947a; call dword ptr [eax - 0x18]; 
0x0002abde: xchg eax, edx; jo 0x2abdb; call dword ptr [eax - 0x18]; 
0x0002daff: xchg eax, edx; jo 0x2dafc; call dword ptr [eax - 0x18]; 
0x0002e3e2: xchg eax, edx; jo 0x2e3df; call dword ptr [eax - 0x18]; 
0x0002f054: xchg eax, edx; jo 0x2f051; call dword ptr [eax - 0x18]; 
0x0017be0e: xchg eax, edx; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [ecx], eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x00093fa6: xchg eax, esi; test cl, bh; call dword ptr [eax + 0x68]; 
0x000942d1: xchg eax, esi; test cl, bh; call dword ptr [eax - 0x73]; 
0x000a4e0c: xchg eax, esp; cwde; stc; call dword ptr [eax - 0x73]; 
0x0004a3f7: xchg eax, esp; jbe 0x4a3f4; call dword ptr [eax - 0x18]; 
0x0004d710: xchg eax, esp; jbe 0x4d70d; call dword ptr [eax - 0x18]; 
0x000513e6: xchg eax, esp; jbe 0x513e3; call dword ptr [eax - 0x18]; 
0x000caba0: xchg eax, esp; jbe 0xcab9d; call dword ptr [eax - 0x18]; 
0x001578e6: xchg eax, esp; pop esi; stc; call dword ptr [eax + 0x55]; 
0x00092e51: xchg eax, esp; test cl, bh; call dword ptr [eax + 0x68]; 
0x000a56b4: xchg eax, esp; xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x00040420: xchg ebp, eax; aaa; das; stc; dec dword ptr [ecx - 0x76ebdbac]; ret; 
0x001a7757: xchg ebp, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x27af0e0], ch; add dword ptr [eax], eax; add dh, dh; ret 0xf20; 
0x000707b5: xchg ebp, eax; add byte ptr [ecx], al; ret; 
0x00195264: xchg ebp, eax; and edi, edi; inc dword ptr [ecx + 0x445f8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00180e17: xchg ebp, eax; cmpsd dword ptr [esi], dword ptr es:[edi]; sti; jmp dword ptr [esi - 0x70]; 
0x000dae27: xchg ebp, eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x001948cd: xchg ebp, eax; dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00098e59: xchg ebp, eax; inc ebx; sbb dword ptr [ecx], esi; rcr byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x00061458: xchg ebp, eax; mov al, byte ptr [0x89000000]; ret; 
0x0006a43c: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x840f; 
0x0006d8f9: xchg ebp, eax; mov eax, 0x39fffffb; ret 0x850f; 
0x00069a77: xchg ebp, eax; mov esp, 0x1fffffb; ret 0x9589; 
0x00069c15: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xd801; 
0x00069e07: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf001; 
0x000684dd: xchg ebp, eax; mov esp, 0x1fffffb; ret 0xf801; 
0x00068304: xchg ebp, eax; mov esp, 0x83fffffb; mov byte ptr [ecx], 1; ret 0x9589; 
0x00068765: xchg ebp, eax; mov esp, 0x8bfffffb; lea esi, [edx + edi*8 - 1]; inc dword ptr [ecx]; ret 0xd801; 
0x00196d64: xchg ebp, eax; or bh, bh; inc dword ptr [ecx + 0x42d78c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00155925: xchg ebp, eax; pop esi; stc; call dword ptr [eax - 0x18]; 
0x0006c215: xchg ebp, eax; push 0x89fffffa; ret 0x858b; 
0x0012634a: xchg ebp, eax; push ecx; stc; call dword ptr [eax + 0x55]; 
0x00125d10: xchg ebp, eax; rcr byte ptr [esi + 0x5f], 0xf; mov dh, 0xc0; ret; 
0x00166f98: xchg ebp, eax; ret 0x3a3c; 
0x0008c3d1: xchg ebp, eax; ret 0x40c7; 
0x00179517: xchg ebp, eax; ret 0x41e9; 
0x000622cb: xchg ebp, eax; ret 0x448b; 
0x0013521f: xchg ebp, eax; ret 0x44c7; 
0x00159f91: xchg ebp, eax; ret 0x548d; 
0x000c84ac: xchg ebp, eax; ret 0x6eb; 
0x0011e361: xchg ebp, eax; ret 0x7c89; 
0x001350e2: xchg ebp, eax; ret 0x8b52; 
0x000d5a5a: xchg ebp, eax; ret 0x8eb; 
0x000d7bc5: xchg ebp, eax; ret 0x9d8b; 
0x00055a35: xchg ebp, eax; ret 0xb60f; 
0x00055a9d: xchg ebp, eax; ret 0xc083; 
0x001441f3: xchg ebp, eax; ret 0xc085; 
0x000c8522: xchg ebp, eax; ret 0xc208; 
0x00104f39: xchg ebp, eax; ret 0xc209; 
0x0004490e: xchg ebp, eax; ret 0xc220; 
0x00099976: xchg ebp, eax; ret 0xc231; 
0x000db72e: xchg ebp, eax; ret 0xc238; 
0x00087266: xchg ebp, eax; ret 0xc283; 
0x0016ee00: xchg ebp, eax; ret 0xc483; 
0x0003fb62: xchg ebp, eax; ret 0xca21; 
0x000f18a3: xchg ebp, eax; ret 0xd001; 
0x000ff42a: xchg ebp, eax; ret 0xd009; 
0x00087140: xchg ebp, eax; ret 0xd089; 
0x0015b77e: xchg ebp, eax; ret 0xd120; 
0x00148eaa: xchg ebp, eax; ret 0xd184; 
0x000ff0b6: xchg ebp, eax; ret 0xd201; 
0x0014917a: xchg ebp, eax; ret 0xd384; 
0x000553a1: xchg ebp, eax; ret 0xd689; 
0x00048677: xchg ebp, eax; ret 0xd789; 
0x00091379: xchg ebp, eax; ret 0xe2c1; 
0x000a4a6e: xchg ebp, eax; ret 0xe683; 
0x00142bd6: xchg ebp, eax; ret 0xe8c0; 
0x000475a8: xchg ebp, eax; ret 0xea81; 
0x0004aac9: xchg ebp, eax; ret 0xea83; 
0x001440fc: xchg ebp, eax; ret 0xed85; 
0x00166f9f: xchg ebp, eax; ret 0xf389; 
0x0016f317: xchg ebp, eax; ret 0xfffc; 
0x0003a9b0: xchg ebp, eax; ret; 
0x0010b359: xchg ebp, eax; rol byte ptr [ebx + 0x5e5b1cc4], 0x5f; pop ebp; ret; 
0x000fd53a: xchg ebp, eax; rol byte ptr [ebx - 0x3ffefb3c], 0x5b; pop esi; ret; 
0x0012cf5b: xchg ebp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; neg eax; ret; 
0x0012cf1a: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; neg eax; ret; 
0x00170577: xchg ebp, eax; rol byte ptr [ebx - 0x49f0e33c], 0xc0; ret; 
0x000895f2: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; neg eax; ret; 
0x0016e898: xchg ebp, eax; rol byte ptr [ebx - 0x49f0f73c], 0xc0; pop ebx; ret; 
0x0013465c: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; neg eax; ret; 
0x0016fa2f: xchg ebp, eax; rol byte ptr [ebx - 0x49f0fb3c], 0xc0; pop ebx; pop esi; ret; 
0x00067bd6: xchg ebp, eax; rol byte ptr [ebx - 0x59343], 0xff; xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0009ae36: xchg ebp, eax; rol cl, 0xe0; pop es; mov dword ptr [edx + 4], eax; xor eax, eax; ret; 
0x00098818: xchg ebp, eax; rol ecx, 0xe1; pop es; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000ef674: xchg ebp, eax; ror byte ptr [ecx + 0x50202444], 0xe8; nop; ret 1; 
0x00055c78: xchg ebp, eax; ror byte ptr [edi], 0x95; ret; 
0x0015975a: xchg ebp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; ret; 
0x000a4e44: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; 
0x000a4e44: xchg ebp, eax; stc; call dword ptr [eax - 0x18]; ret; 
0x000ffef7: xchg ebp, eax; xor dh, dl; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x00086680: xchg ebp, ebx; dec eax; stc; call dword ptr [eax - 0x18]; 
0x0004a3d4: xchg ebp, ecx; das; stc; call dword ptr [eax - 0x18]; 
0x0005bb9d: xchg ebp, edi; inc dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000943c1: xchg ebp, esi; aas; stc; call dword ptr [eax - 0x18]; 
0x000a4646: xchg ebp, esi; inc edx; stc; call dword ptr [eax - 0x18]; 
0x0012738d: xchg ebx, eax; aam 0x50; stc; dec dword ptr [ecx + 0x5c938d16]; ret 0xffe9; 
0x00038984: xchg ebx, eax; adc byte ptr [ebp - 7], dh; call dword ptr [edx - 0x77]; 
0x00154460: xchg ebx, eax; add al, 0x83; ret 0x8301; 
0x000b8139: xchg ebx, eax; add al, byte ptr [eax]; add byte ptr [eax - 0x277cfec8], al; call ptr [edi + 0x5b]; ret; 
0x00100fd0: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0x7540; 
0x0010112c: xchg ebx, eax; add byte ptr [eax], 0; add dh, dh; ret 0xf40; 
0x001892a9: xchg ebx, eax; add eax, 0x11770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x44]; 
0x0008be8d: xchg ebx, eax; add eax, 0x25770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x00088011: xchg ebx, eax; add eax, 0x29770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x30]; 
0x00081b8f: xchg ebx, eax; add eax, 0x2b770000; sub esp, 8; push ebx; push esi; call dword ptr [edi + 0x18]; 
0x000813bd: xchg ebx, eax; add eax, 0x35770000; sub esp, 0xc; push ebx; call dword ptr [esi + 0x10]; 
0x0008c682: xchg ebx, eax; add eax, 0x38770000; sub esp, 8; push esi; push ebx; call dword ptr [edi + 0x18]; 
0x00088d3a: xchg ebx, eax; add eax, 0x40770000; sub esp, 0xc; push ebx; call dword ptr [edi + 0x44]; 
0x0008bde3: xchg ebx, eax; add eax, 0x57770000; sub esp, 0xc; push esi; call dword ptr [edi + 0x34]; 
0x00089884: xchg ebx, eax; add eax, 0x66770000; sub esp, 8; push -1; push dword ptr [ecx]; call dword ptr [eax + 0xc]; 
0x0007b922: xchg ebx, eax; add eax, 0x870f0000; add al, byte ptr fs:[eax]; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x0007beaf: xchg ebx, eax; add eax, 0x870f0000; test dword ptr [eax], 0xec830000; or al, 0x56; call dword ptr [ebx + 0x30]; 
0x0008c185: xchg ebx, eax; add eax, 0x870f0000; test eax, 0x83000000; in al, dx; or al, 0x56; call dword ptr [ebp + 0x30]; 
0x000c3c0a: xchg ebx, eax; call 0xf0c3c4c; inc esp; ret 0xff50; 
0x000f98e4: xchg ebx, eax; cld; call dword ptr [edi - 1]; 
0x00126bd0: xchg ebx, eax; cld; ret 0xffe7; 
0x00126d7d: xchg ebx, eax; dec esp; ret 0xfff6; 
0x0014115c: xchg ebx, eax; insb byte ptr es:[edi], dx; je 0x141159; call dword ptr [eax - 0x77]; 
0x00156559: xchg ebx, eax; int1; call dword ptr [eax - 1]; 
0x00181514: xchg ebx, eax; into; stc; call dword ptr [edx - 0x77]; 
0x00061cd0: xchg ebx, eax; jge 0x61d03; stc; call dword ptr [esi + 0x52]; 
0x0003018b: xchg ebx, eax; jle 0x301b9; stc; call dword ptr [edx + 0x50]; 
0x00126b30: xchg ebx, eax; lodsb al, byte ptr [esi]; push -0xa; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0010e0a3: xchg ebx, eax; mov al, 0xfd; clc; inc dword ptr [ecx]; fdivr dword ptr [esi]; jmp eax; 
0x0011bd29: xchg ebx, eax; or al, 0xdf; in eax, dx; call dword ptr [edx - 0x73]; 
0x00126d75: xchg ebx, eax; or byte ptr [eax - 7], dl; dec dword ptr [ecx + 0x4c938d16]; ret 0xfff6; 
0x0015b07c: xchg ebx, eax; pop edi; stc; call dword ptr [eax + 0x55]; 
0x001602e4: xchg ebx, eax; pop esp; pushal; stc; call dword ptr [edx + 0x50]; 
0x00127395: xchg ebx, eax; pop esp; ret 0xffe9; 
0x0010deca: xchg ebx, eax; push 0x1fff8fc; fdivr dword ptr [esi]; jmp eax; 
0x00127231: xchg ebx, eax; pushfd; mov dh, dh; dec dword ptr [ebx + 0x56897440]; add al, 0x89; ret 0xeac1; 
0x0013dacf: xchg ebx, eax; ret; 
0x0017fef7: xchg ebx, eax; stc; call dword ptr [eax - 0x18]; 
0x0005afd6: xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000381e4: xchg ebx, eax; sub byte ptr [ebp - 7], dh; jmp dword ptr [esi - 0x77]; 
0x0007c930: xchg ebx, ebp; add byte ptr [eax], al; add byte ptr [ebx - 0xa8fb14], al; jne 0x7c944; push esi; call dword ptr [ebx + 0x1c]; 
0x0015d4cc: xchg ebx, ebp; pop edi; stc; call dword ptr [eax - 0x18]; 
0x00092e65: xchg ecx, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x00186801: xchg ecx, eax; adc byte ptr [ecx], al; add byte ptr [eax], al; shl eax, 5; lea eax, [eax + edx + 0x5c]; ret; 
0x0016c9ff: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x137cefbd], cl; or al, 0x56; call dword ptr [eax + 0x10]; 
0x00085153: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x17aff314], al; mov al, byte ptr [0x89ffff72]; ret; 
0x00167512: xchg ecx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x7a72f314], al; test dword ptr [edx - 7], esp; call dword ptr [eax - 0x18]; 
0x001607fb: xchg ecx, eax; cwde; pushal; stc; call dword ptr [edx + 0x50]; 
0x00109881: xchg ecx, eax; dec ecx; dec eax; stc; call dword ptr [edx - 1]; 
0x001597bb: xchg ecx, eax; idiv bh; add esp, 0x1c; ret; 
0x000a4640: xchg ecx, eax; inc ecx; stc; call dword ptr [eax - 0x73]; 
0x0012810b: xchg ecx, eax; je 0x128161; stc; call dword ptr [edx + 0x50]; 
0x000b99c4: xchg ecx, eax; jmp ecx; 
0x000fb5bc: xchg ecx, eax; jne 0xfb620; ret; 
0x0007c437: xchg ecx, eax; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0005bece: xchg ecx, eax; mov eax, esi; pop ebx; pop esi; pop edi; ret; 
0x0015c0a1: xchg ecx, eax; or byte ptr [eax], al; add byte ptr [esi - 0x3f], ah; ret 0xf08; 
0x00146dbb: xchg ecx, eax; ret 0xffed; 
0x000470c5: xchg ecx, eax; ret 0xfffd; 
0x001715fb: xchg ecx, eax; sbb ebp, ebx; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000a3909: xchg ecx, eax; stc; call dword ptr [eax - 0x18]; 
0x00024abe: xchg ecx, eax; xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x000c4ce1: xchg ecx, ebp; inc esp; stc; call dword ptr [eax - 0x18]; 
0x0009697e: xchg ecx, edi; call dword ptr [eax + 0x68]; 
0x000969a7: xchg ecx, edi; call dword ptr [eax + 0x6a]; 
0x000981ea: xchg ecx, edi; call dword ptr [eax - 0x18]; 
0x00096a59: xchg ecx, edi; call dword ptr [eax - 0x73]; 
0x000870e8: xchg ecx, edx; stc; jmp dword ptr [esi - 0x70]; 
0x000620f4: xchg ecx, esp; xor bh, cl; call dword ptr [eax - 0x18]; 
0x0002eaf2: xchg edi, eax; add al, byte ptr [eax]; add byte ptr [ebx + 0x39082444], cl; ret; 
0x00188c2c: xchg edi, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x575504ec], al; push ebx; call dword ptr [esi + 0x3c]; 
0x00137446: xchg edi, eax; cld; push ebp; stc; call dword ptr [edx + 0x50]; 
0x001581da: xchg edi, eax; fsubr qword ptr [ecx + edi*8]; dec dword ptr [edi]; inc esp; ret 0xec83; 
0x0005d68e: xchg edi, eax; hlt; jg 0x5d68a; call dword ptr [edx + 0x51]; 
0x000e1db5: xchg edi, eax; in al, 0xff; push esi; ret; 
0x00097bd6: xchg edi, eax; inc eax; stc; call dword ptr [eax - 0x18]; 
0x0003deb5: xchg edi, eax; mov ecx, 0x4c8b0005; and al, 0x20; mov eax, 0xaf; xor edx, edx; call dword ptr gs:[0x10]; 
0x000c2d1e: xchg edi, eax; mov esi, edx; ret; 
0x000a7389: xchg edi, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [esp + 0xc], eax; call dword ptr [edx]; 
0x000bb305: xchg edi, eax; or dword ptr [eax], eax; add byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x00027274: xchg edi, eax; pop eax; jo 0x27271; jmp dword ptr [esi - 0x77]; 
0x00141234: xchg edi, eax; pop ecx; stc; call dword ptr [eax - 0x73]; 
0x0014eb6f: xchg edi, eax; ret 0xd008; 
0x000ecbbc: xchg edi, eax; ret 0xda08; 
0x0012caf4: xchg edi, eax; ret 0xf883; 
0x001539e5: xchg edi, eax; ret 0xfff3; 
0x0013dac6: xchg edi, eax; ret; 
0x000a5d6d: xchg edi, eax; stc; call dword ptr [eax - 0x18]; 
0x00151775: xchg edi, eax; sub ebp, esi; jmp dword ptr [esi - 0x70]; 
0x00027b8c: xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x0013bcd5: xchg edi, eax; xchg esp, eax; clc; jmp dword ptr [esi - 0x70]; 
0x0013c56e: xchg edi, ecx; push edi; stc; call dword ptr [eax - 0x18]; 
0x0009438f: xchg edx, eax; aas; stc; call dword ptr [eax - 0x18]; 
0x000c4786: xchg edx, eax; adc byte ptr [0x440f0000], bh; ret 0x4489; 
0x00174f8a: xchg edx, eax; add al, 0; add byte ptr [ebx + 0x458b0cec], al; cmp al, 0x57; call dword ptr [eax + 0x10]; 
0x00073144: xchg edx, eax; add al, 0; add byte ptr [ecx], bh; ret; 
0x0013179c: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x4ff63], cl; dec dword ptr [ebx - 0x50773]; jmp dword ptr [ebp - 1]; 
0x001431ea: xchg edx, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret 0x820f; 
0x001318de: xchg edx, eax; add byte ptr [eax], al; add byte ptr [edx + 8], bh; call dword ptr gs:[0x10]; 
0x001844b7: xchg edx, eax; add byte ptr [ebx], 0; add byte ptr [ecx + 0x28c48303], cl; pop ebx; ret; 
0x000c2d9e: xchg edx, eax; add dword ptr [eax], eax; add bh, dh; ret 3; 
0x0004a533: xchg edx, eax; add eax, dword ptr [eax]; add byte ptr [eax - 0x73], dl; xchg dword ptr [esi + esi*2 - 7], esi; call dword ptr [eax - 0x18]; 
0x000c4249: xchg edx, eax; clc; cmp al, 0; add byte ptr [edi], cl; inc esp; ret 0xff50; 
0x000acb65: xchg edx, eax; cld; cmp edi, esp; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aaa80: xchg edx, eax; cmp al, 0x65; call 0xc24eba87; ret; 
0x0007c57e: xchg edx, eax; cwde; add byte ptr [eax], al; add byte ptr [ecx + 0x5b082454], cl; jmp eax; 
0x0004a41a: xchg edx, eax; das; stc; call dword ptr [eax - 0x18]; 
0x00123c65: xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x000a9cf5: xchg edx, eax; dec esp; push 0x440fffe8; ret 0x66c3; 
0x000a9d35: xchg edx, eax; fsubr qword ptr [eax - 0x18]; dec dword ptr [edi]; inc esp; ret 0x66c3; 
0x000aca1f: xchg edx, eax; in al, dx; movsb byte ptr es:[edi], byte ptr [esi]; idiv bh; cmovne eax, edx; ret; 
0x000acc4f: xchg edx, eax; in al, dx; stosd dword ptr es:[edi], eax; idiv bh; cmovne eax, edx; ret; 
0x0010b8ea: xchg edx, eax; inc ebx; clc; jmp dword ptr [esi - 0x70]; 
0x000acb20: xchg edx, eax; insb byte ptr es:[edi], dx; out 0xff, eax; cmove eax, edx; ret; 
0x000aa8a5: xchg edx, eax; jl 0xaa907; call 0xc24eb8ac; ret; 
0x000c1064: xchg edx, eax; lahf; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000abc75: xchg edx, eax; lodsb al, byte ptr [esi]; call 0xc24ecc7c; ret; 
0x000acaa0: xchg edx, eax; lodsb al, byte ptr [esi]; push edi; call 0xc24edaa7; ret; 
0x000a9db0: xchg edx, eax; lodsb al, byte ptr [esi]; push esi; call 0xc24eadb7; ret; 
0x000a9b8d: xchg edx, eax; lodsb al, byte ptr [esi]; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x000fba38: xchg edx, eax; mov al, byte ptr [0x83000000]; cmp al, 0x11; je 0xfba2c; mov eax, 0xffffffff; ret; 
0x00024f29: xchg edx, eax; mov al, byte ptr [0x89000000]; add al, 0x11; mov eax, 0xffffffff; ret; 
0x0013aedd: xchg edx, eax; mov edx, ds; cmc; dec dword ptr [edi]; inc ebp; ret 0xc35b; 
0x000acae5: xchg edx, eax; mov esp, 0xfffe848; inc esp; ret 0x66c3; 
0x0013ae8d: xchg edx, eax; mov esp, 0xffff5ba; inc ebp; ret 0xc35b; 
0x00171561: xchg edx, eax; mov word ptr [eax], es; add byte ptr [eax], al; mov dword ptr [eax + 8], edx; ret; 
0x000a9c0f: xchg edx, eax; or al, 0x45; cmc; dec dword ptr [edi]; inc ebp; ret 0x66c3; 
0x000a92c0: xchg edx, eax; or al, 0x5b; call 0xc24ea2c7; ret; 
0x000aa8df: xchg edx, eax; or al, 0xa8; idiv bh; cmovne eax, edx; ret; 
0x000574d2: xchg edx, eax; or dword ptr [eax], eax; add byte ptr [ebx - 0x36377b], cl; jmp dword ptr [ebp - 0x75]; 
0x000df294: xchg edx, eax; pop esp; fucompi st(1); call dword ptr [ecx + 0x52]; 
0x00160b98: xchg edx, eax; pop esp; pushal; stc; call dword ptr [edx + 0x50]; 
0x0013af2d: xchg edx, eax; pushfd; retf 0xfff5; cmovne eax, edx; pop ebx; ret; 
0x00053e1f: xchg edx, eax; ret 0x1e89; 
0x00054175: xchg edx, eax; ret 0x789; 
0x001a561a: xchg edx, eax; ret 0xb60f; 
0x000df263: xchg edx, eax; ret 0xc281; 
0x00133418: xchg edx, eax; ret 0xd089; 
0x00171141: xchg edx, eax; ret 0xd689; 
0x00053d1f: xchg edx, eax; ret 0xe89; 
0x000542bb: xchg edx, eax; ret; 
0x000aca60: xchg edx, eax; sbb al, 0x58; call 0xc24eda67; ret; 
0x000a927f: xchg edx, eax; sbb al, 0xb2; idiv bh; cmovne eax, edx; ret; 
0x001782fa: xchg edx, eax; scasb al, byte ptr es:[edi]; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x000a392d: xchg edx, eax; stc; call dword ptr [eax - 0x18]; 
0x000a9d70: xchg edx, eax; sub al, 0x57; call 0xc24ead77; ret; 
0x000a9c4f: xchg edx, eax; sub al, 0xbf; idiv bh; cmovne eax, edx; ret; 
0x000c4d2f: xchg edx, eax; sub byte ptr [0x440f0000], bh; ret 0x8b65; 
0x0005e0ba: xchg edx, eax; xor ecx, edi; call dword ptr [eax - 0x18]; 
0x00094328: xchg edx, ebx; aas; stc; call dword ptr [eax - 0x18]; 
0x000a482f: xchg edx, ebx; inc edx; stc; call dword ptr [eax - 0x18]; 
0x000dcbd5: xchg edx, ecx; inc ebp; stc; call dword ptr [eax + 0x53]; 
0x001918ab: xchg edx, edi; jmp dword ptr [esi - 0x70]; 
0x000eb6f4: xchg edx, esi; inc esi; stc; call dword ptr [eax - 0x18]; 
0x000287e7: xchg edx, esp; sub bh, cl; call dword ptr [eax - 0x18]; 
0x000547c9: xchg esi, eax; add al, 0x83; ret 0x8501; 
0x000547c2: xchg esi, eax; add al, 0x8d; dec edi; add dword ptr [ecx - 0x7cfb69b4], ecx; ret 0x8501; 
0x0009930d: xchg esi, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3a9], cl; push 0x39000000; ret 0x6974; 
0x000e7b7c: xchg esi, eax; add dword ptr [eax], eax; add bh, dh; ror dword ptr [ebp + 0x2dd1c], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00030a96: xchg esi, eax; add dword ptr [eax], eax; add byte ptr [ebx - 0x7872f714], al; je 0x30a9b; call dword ptr [eax + 0x56]; 
0x00092dfa: xchg esi, eax; and byte ptr [edx], al; add byte ptr [eax], al; mov eax, 0x9c; call dword ptr gs:[0x10]; 
0x0014158e: xchg esi, eax; arpl word ptr [eax], si; stc; call dword ptr [edx - 0x46]; 
0x00123c83: xchg esi, eax; cwde; dec edx; stc; call dword ptr [edx - 0x77]; 
0x0004d616: xchg esi, eax; fisttp word ptr [esi]; add byte ptr [ebx - 0x72e7db84], cl; xchg dword ptr [eax + 0x78], esp; stc; call dword ptr [eax - 0x73]; 
0x00064380: xchg esi, eax; insb byte ptr es:[edi], dx; ret 0xfff8; 
0x001810b9: xchg esi, eax; into; stc; call dword ptr [edx - 0x77]; 
0x000a72cb: xchg esi, eax; lea esi, [esi]; mov eax, dword ptr [esp + 0xc]; mov eax, dword ptr [eax + 0x8c]; call dword ptr [eax]; 
0x00131991: xchg esi, eax; lock add eax, dword ptr [eax]; add byte ptr [ecx - 0x33f7b], cl; inc edi; test dword ptr [ebx + edi*8 - 1], eax; jmp dword ptr [eax]; 
0x000a9d2d: xchg esi, eax; out 0xff, eax; test byte ptr [ecx + 0x75], 2; lea edx, [edx - 0x179724]; cmove eax, edx; ret; 
0x001aa0cd: xchg esi, eax; pop esi; lea eax, [edi - 0x10]; pop edi; ret; 
0x00128eb5: xchg esi, eax; push ebx; stc; call dword ptr [eax + 0x6a]; 
0x000390d3: xchg esi, eax; ret 0xb60f; 
0x000e1bdf: xchg esi, eax; ret 0xc931; 
0x0013ee7c: xchg esi, eax; ret 0xd008; 
0x0003076b: xchg esi, eax; ret; 
0x00123cbe: xchg esi, eax; sahf; dec edx; stc; call dword ptr [eax + 0x50]; 
0x000a5334: xchg esi, eax; stc; call dword ptr [eax - 0x18]; 
0x000a7ddf: xchg esi, eax; sti; dec dword ptr [ecx - 0x7917dbe4]; idiv ch; jmp dword ptr [esi - 0x70]; 
0x00106bbc: xchg esi, eax; sub al, 0xf9; clc; dec dword ptr [ecx + 0x3ef701d0]; jmp edi; 
0x00137382: xchg esi, eax; test al, 0xf9; call dword ptr [edx + 0x50]; 
0x00123ca2: xchg esi, eax; wait; dec edx; stc; call dword ptr [edx - 0x77]; 
0x00123c64: xchg esi, eax; xchg edx, eax; dec edx; stc; call dword ptr [edx - 0x77]; 
0x0005afcf: xchg esi, eax; xor cl, bh; call dword ptr [eax - 0x18]; 
0x00173aec: xchg esi, ecx; stc; call dword ptr [eax + 0x53]; 
0x00175add: xchg esi, ecx; stc; call dword ptr [eax - 0x73]; 
0x00028896: xchg esi, ecx; sub bh, cl; call dword ptr [eax - 0x18]; 
0x0011cad8: xchg esp, eax; add al, 0xf9; dec dword ptr [edi]; inc ebp; ret 0x4489; 
0x00024abf: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x33], dh; ret; 
0x00083897: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebp - 0x75371], cl; dec dword ptr [ecx - 0x7e30d621]; call dword ptr [ebx + 0xf000005]; 
0x0012dd87: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e5b20c4], al; pop edi; ret; 
0x000916c9: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5e], bl; ret; 
0x0003cf5e: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0x5f], bl; ret; 
0x0012d14b: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx + 0xa024b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x0009c2a0: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x2776fb3c], al; pop ebx; pop esi; ret; 
0x000986f7: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x5e9ae3ab], cl; push 0x39000000; ret 0x840f; 
0x0007c42f: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0x6e76a7b8], cl; mov byte ptr [eax], al; add byte ptr [eax], al; ret; 
0x0007ee79: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ebx - 0xa9f314], al; push ebx; xor al, 0x89; ret 0xc483; 
0x0014a706: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], bh; ret; 
0x001ade84: xchg esp, eax; add byte ptr [eax], al; add byte ptr [ecx], cl; ret 0xbc89; 
0x0007b985: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edi], cl; xchg esp, eax; ret 0xd008; 
0x000c2dc1: xchg esp, eax; add byte ptr [eax], al; add byte ptr [edx - 9], al; ret 3; 
0x00176e12: xchg esp, eax; add byte ptr [eax], al; add byte ptr [esi + 0x5f], bl; ret; 
0x00089e57: xchg esp, eax; add eax, 0xec830000; or byte ptr [ebp + 0x50282444], cl; push esi; call dword ptr [edx + 0x48]; 
0x00174f47: xchg esp, eax; and al, 0x4c; add dword ptr [eax], eax; add byte ptr [edx + 0x57], dl; call dword ptr [eax + 4]; 
0x001b1e88: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add byte ptr [ecx + 0x100000e1], al; add byte ptr [ecx - 0x9f7dbbc], cl; ret 0xf07; 
0x001b079a: xchg esp, eax; and al, 0x80; add byte ptr [eax], al; add dh, dh; ret 0x7407; 
0x00063588: xchg esp, eax; and al, 0x83; add byte ptr [eax], al; add byte ptr [ecx], al; ret; 
0x001ab6ac: xchg esp, eax; and al, 0x84; add byte ptr [eax], al; add byte ptr [ebx - 0x7ce7dba4], cl; ret; 
0x001ae106: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add bh, dh; ret 0; 
0x00055a2e: xchg esp, eax; and al, 0x8c; add byte ptr [eax], al; add byte ptr [edi], cl; xchg ebp, eax; ret 0xb60f; 
0x001b3776: xchg esp, eax; and al, 0x90; add byte ptr [eax], al; add cl, ch; jmp esi; 
0x00114ae1: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [eax + 0x133], bh; call dword ptr gs:[0x10]; 
0x001149b8: xchg esp, eax; and al, 0xa8; add byte ptr [eax], al; add byte ptr [ebx + 0xac24b4], cl; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00114ce0: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x132], bh; call dword ptr gs:[0x10]; 
0x00114c71: xchg esp, eax; and al, 0xb8; add byte ptr [eax], al; add byte ptr [eax + 0x1c4], bh; mov esi, dword ptr [esp + 0xbc]; call dword ptr gs:[0x10]; 
0x0016e873: xchg esp, eax; and eax, dword ptr [eax]; add byte ptr [ebx + 0x239880], cl; add byte ptr [ebx + 0x6a08ec], al; push ebx; call dword ptr [eax + 0x14]; 
0x0016b773: xchg esp, eax; arpl cx, di; call dword ptr [eax + 0x6a]; 
0x0016b873: xchg esp, eax; arpl cx, di; call dword ptr [eax - 0x18]; 
0x0016b7c7: xchg esp, eax; arpl cx, di; jmp dword ptr [ebp - 0x75]; 
0x0013bcd6: xchg esp, eax; clc; jmp dword ptr [esi - 0x70]; 
0x00190c9b: xchg esp, eax; cli; jmp dword ptr [esi - 0x70]; 
0x00190b28: xchg esp, eax; cmp eax, 0xd8f7fffd; sbb eax, eax; add esp, 0x1c; ret; 
0x00132967: xchg esp, eax; cmpsd dword ptr [esi], dword ptr es:[edi]; stc; call dword ptr [eax - 0x73]; 
0x00126212: xchg esp, eax; dec edi; stc; call dword ptr [eax + 0x55]; 
0x000327d9: xchg esp, eax; jae 0x327d5; call dword ptr [eax - 0x73]; 
0x00062fbe: xchg esp, eax; jge 0x62fba; call dword ptr [eax - 0x18]; 
0x00066244: xchg esp, eax; jge 0x66240; call dword ptr [eax - 0x18]; 
0x0006ee8c: xchg esp, eax; jge 0x6ee88; call dword ptr [eax - 0x18]; 
0x00072911: xchg esp, eax; jge 0x7290d; call dword ptr [eax - 0x18]; 
0x000282a4: xchg esp, eax; jo 0x282a0; call dword ptr [eax - 0x73]; 
0x0015a5b0: xchg esp, eax; mov ch, 0xf9; call dword ptr [eax - 0x73]; 
0x0003c8cb: xchg esp, eax; mov ebp, esp; adc al, byte ptr [eax]; add byte ptr [edi], cl; xchg esp, eax; ret 0xec83; 
0x000607aa: xchg esp, eax; mov edx, dword ptr [ecx + edi*4 - 8]; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0003ad18: xchg esp, eax; or byte ptr [eax], dl; add byte ptr [ebp - 0x1116feba], cl; idiv edi; jmp dword ptr [esi - 0x70]; 
0x00060823: xchg esp, eax; or dword ptr [eax - 0x46], 0xfffffff8; inc dword ptr [ecx]; fidivr dword ptr [esi]; jmp edx; 
0x0014ee50: xchg esp, eax; pop esp; stc; call dword ptr [eax - 0x18]; 
0x000d11c1: xchg esp, eax; popfd; stc; call dword ptr [eax - 0x73]; 
0x0012bb04: xchg esp, eax; push esp; stc; call dword ptr [eax - 0x18]; 
0x001877b6: xchg esp, eax; ret 0x1389; 
0x00137271: xchg esp, eax; ret 0x2d3c; 
0x000469a3: xchg esp, eax; ret 0x38e9; 
0x0003065b: xchg esp, eax; ret 0x3a3c; 
0x00109a86: xchg esp, eax; ret 0x3f8b; 
0x001348e1: xchg esp, eax; ret 0x4483; 
0x0015b052: xchg esp, eax; ret 0x4489; 
0x000448e0: xchg esp, eax; ret 0x448b; 
0x00064846: xchg esp, eax; ret 0x44c7; 
0x0005aea0: xchg esp, eax; ret 0x48b; 
0x0003221b: xchg esp, eax; ret 0x4c89; 
0x00146bfb: xchg esp, eax; ret 0x5484; 
0x00030e64: xchg esp, eax; ret 0x5f3c; 
0x0005ec7b: xchg esp, eax; ret 0x6a52; 
0x00064b2a: xchg esp, eax; ret 0x748b; 
0x00100536: xchg esp, eax; ret 0x87eb; 
0x000842ae: xchg esp, eax; ret 0x9e3b; 
0x00149ff6: xchg esp, eax; ret 0xa3c; 
0x000eb7b3: xchg esp, eax; ret 0xb60f; 
0x00175d4e: xchg esp, eax; ret 0xc031; 
0x0014bd24: xchg esp, eax; ret 0xc083; 
0x00159424: xchg esp, eax; ret 0xc084; 
0x000d7a9b: xchg esp, eax; ret 0xc139; 
0x00064ec7: xchg esp, eax; ret 0xc221; 
0x000ca035: xchg esp, eax; ret 0xc339; 
0x0019069a: xchg esp, eax; ret 0xc483; 
0x00064e00: xchg esp, eax; ret 0xc629; 
0x00049932: xchg esp, eax; ret 0xc639; 
0x00091c97: xchg esp, eax; ret 0xc689; 
0x000ac32a: xchg esp, eax; ret 0xc739; 
0x00047bd0: xchg esp, eax; ret 0xc8b; 
0x0003040b: xchg esp, eax; ret 0xca08; 
0x0010049d: xchg esp, eax; ret 0xca83; 
0x0007b98a: xchg esp, eax; ret 0xd008; 
0x0007b969: xchg esp, eax; ret 0xd009; 
0x0016731f: xchg esp, eax; ret 0xd1e9; 
0x000ecbb1: xchg esp, eax; ret 0xd309; 
0x000db89d: xchg esp, eax; ret 0xd338; 
0x0010d3f5: xchg esp, eax; ret 0xd789; 
0x001004d7: xchg esp, eax; ret 0xe6eb; 
0x000508a3: xchg esp, eax; ret 0xeb39; 
0x0003c8d2: xchg esp, eax; ret 0xec83; 
0x00046152: xchg esp, eax; ret 0xf685; 
0x000c8574: xchg esp, eax; ret 0xf883; 
0x0005689b: xchg esp, eax; ret 0xf980; 
0x00043f7f: xchg esp, eax; ret 0xfe83; 
0x0010d296: xchg esp, eax; ret 0xff85; 
0x0003bfad: xchg esp, eax; ret 0xfff9; 
0x00030760: xchg esp, eax; ret; 
0x00135c9e: xchg esp, eax; rol byte ptr [ebx + 0x5e5b2cc4], 0x5f; pop ebp; ret; 
0x0010b5aa: xchg esp, eax; rol byte ptr [ebx - 0x49f0d33c], 0xc0; ret; 
0x0009c6f4: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; lea eax, [eax + eax + 2]; ret; 
0x00053556: xchg esp, eax; rol byte ptr [ebx - 0x49f0f33c], 0xc0; ret; 
0x0009c5c3: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd18], 0xc; ret; 
0x0009c6e2: xchg esp, eax; ror byte ptr [edi], 0xb6; rol byte ptr [ebx - 0x3b7cfd40], 0xc; ret; 
0x0003c676: xchg esp, eax; ror byte ptr [edi], 0xb6; ror byte ptr [ecx - 0x3b7ce7bd], 8; xor eax, eax; pop ebx; ret; 
0x00122869: xchg esp, eax; ror byte ptr [edi], 0xb6; sal bh, 0xd8; add esp, 0xc; ret; 
0x0014f33a: xchg esp, eax; scasd eax, dword ptr es:[edi]; stc; call dword ptr [eax - 0x18]; 
0x000a4867: xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x00141045: xchg esp, eax; stosd dword ptr es:[edi], eax; stc; call dword ptr [eax - 0x73]; 
0x0005d68d: xchg esp, eax; xchg edi, eax; hlt; jg 0x5d68a; call dword ptr [edx + 0x51]; 
0x0015f178: xchg esp, eax; xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x0010ba33: xchg esp, ebp; aas; add byte ptr [eax], al; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x0010ba7c: xchg esp, ebp; aas; add byte ptr [eax], al; push eax; call 0x8fc80; call dword ptr [esi]; 
0x0002b1d5: xchg esp, ebp; push -7; call dword ptr [eax - 0x73]; 
0x0017e10c: xchg esp, ebp; test al, 0; add byte ptr [eax - 0x73], dl; xchg dword ptr [edi + 0x63], eax; stc; call dword ptr [eax + 0x6a]; 
0x000699da: xchg esp, ebx; jge 0x699d7; call dword ptr [eax - 0x73]; 
0x0002ab93: xchg esp, ebx; jno 0x2ab90; call dword ptr [eax - 0x18]; 
0x0002b81e: xchg esp, ebx; jno 0x2b81b; call dword ptr [eax - 0x18]; 
0x0002db68: xchg esp, ebx; jno 0x2db65; call dword ptr [eax - 0x18]; 
0x0002f077: xchg esp, ebx; jno 0x2f074; call dword ptr [eax - 0x18]; 
0x00114d76: xchg esp, ebx; sub al, 0xf9; call dword ptr [eax + 0x56]; 
0x0002c5a0: xchg esp, ecx; push -7; call dword ptr [eax + 0x68]; 
0x0002c094: xchg esp, ecx; push -7; call dword ptr [eax - 0x73]; 
0x0003136f: xchg esp, ecx; sub edi, ecx; call dword ptr [eax - 0x18]; 
0x00187b1f: xchg esp, edi; add dword ptr [eax], eax; add byte ptr [ebx + 0x6a08ec], al; push esi; call dword ptr [ebx + 8]; 
0x00183a61: xchg esp, edi; stc; call dword ptr [eax - 0x18]; 
0x000a4865: xchg esp, esp; xchg esp, eax; stc; call dword ptr [eax - 0x18]; 
0x0008f711: xend; xor eax, eax; add esp, 0xc; ret; 
0x001aa8f3: xgetbv; imul eax, eax, 0x1010101; shr eax, 0x18; ret; 
0x000d6a08: xlatb; add bh, dh; out 0x89, eax; rol byte ptr [ebx - 0x173e031e], 1; add al, byte ptr [ecx]; ret 0xd889; 
0x0012db97: xlatb; add byte ptr [eax], al; add byte ptr [ebp - 1], ah; adc eax, 0x10; mov ebx, edx; ret; 
0x000da90e: xlatb; add byte ptr [ecx], bh; ret; 
0x00070da7: xlatb; cmp ecx, 0x5a; jbe 0x71c83; mov ecx, dword ptr [esp + 0x4c]; mov dword ptr [esp + 4], ecx; jmp eax; 
0x00151b35: xlatb; daa; out dx, al; jmp dword ptr [esi - 0x70]; 
0x000b4ae5: xlatb; idiv bh; inc dword ptr [eax + 0xf000d79]; test ch, cl; idiv bh; jmp dword ptr [esi + 0xf]; 
0x00091403: xlatb; jae 0x913d0; mov ecx, dword ptr [ebx + 0xc]; mov eax, 0xf0; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x000c235c: xlatb; les eax, ptr [ebp - 0x257af040]; add byte ptr [eax], al; add bh, dh; ret 0x3f; 
0x001a8705: xlatb; les eax, ptr [ebp - 0x7e7af040]; add dword ptr [eax], eax; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000c1ee1: xlatb; les eax, ptr [ebp - 0xa7af040]; add byte ptr [eax], al; add byte ptr [esi + 0xf], ah; xlatb; ret; 
0x000df25f: xlatb; mov dword ptr [0xc2920f00], eax; add edx, 0x16d; mov eax, edx; ret; 
0x001742b5: xlatb; out dx, al; ljmp 0x5e5b:0x10c483ff; pop edi; ret; 
0x00123e28: xlatb; pop ebx; xor eax, eax; pop esi; pop edi; ret; 
0x00157943: xlatb; pop esi; stc; call dword ptr [eax + 0x55]; 
0x00156764: xlatb; pop esi; stc; call dword ptr [eax - 0x18]; 
0x00161c52: xlatb; pushal; stc; call dword ptr [eax - 0x18]; 
0x00161e05: xlatb; pushal; stc; call dword ptr [eax - 0x73]; 
0x001a81f2: xlatb; ret 0x498d; 
0x000c1b18: xlatb; ret 0xc085; 
0x000b0ad2: xlatb; ret; 
0x001aa01c: xlatb; retf 0xf66; xlatb; ret; 
0x000c240f: xlatb; rol byte ptr [ebp + 0x663b75c0], 0xf; xlatb; ret 0xc085; 
0x001a87c6: xlatb; rol dword ptr [ebp + 0x30850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c1ce0: xlatb; rol dword ptr [ebp + 0x315a75c0], 0xc0; pop edi; ret; 
0x000c1fa5: xlatb; rol dword ptr [ebp + 0x316575c0], 0xc0; ret; 
0x000c1f76: xlatb; rol dword ptr [ebp + 0x317475c0], 0xc0; ret; 
0x001a8805: xlatb; rol dword ptr [ebp + 0x71850fc0], 2; add byte ptr [eax], al; xor eax, eax; ret; 
0x001a832e: xlatb; rol dword ptr [ebp - 0x377af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x000c1ca6: xlatb; rol dword ptr [ebp - 0x4f7af040], 0; add byte ptr [eax], al; xor eax, eax; pop edi; ret; 
0x001a9419: xlatb; ror dword ptr [ebp - 0x2d7aefc0], 1; jne 0x1a9430; mov eax, dword ptr [esp + 0xc]; pop edi; ret; 
0x000c1f12: xlatb; ror dword ptr [edi], 0xbd; rol byte ptr [ecx], 0xc8; ret; 
0x001a8c74: xlatb; shl dword ptr [ecx], 0xd0; test eax, eax; jne 0x1a88a0; xor eax, eax; ret; 
0x00086a36: xlatb; stc; jmp dword ptr [esi - 0x70]; 
0x00151635: xlatb; sub al, 0xee; jmp dword ptr [esi - 0x70]; 
0x0009be05: xlatb; xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x0005d537: xor ah, 0x7f; clc; call dword ptr [eax + 0x56]; 
0x000c45de: xor ah, 0x9b; stc; call dword ptr [eax - 0x73]; 
0x00150124: xor ah, 0xff; add esp, 0x14; mov eax, ebx; pop ebx; pop esi; ret; 
0x0003d78f: xor ah, 1; add byte ptr [eax], al; ret; 
0x00071bd7: xor ah, al; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x00070a8b: xor ah, al; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73734]; add ecx, eax; jmp ecx; 
0x000bb1dd: xor ah, al; or al, 0; add ecx, 0x10fcbf; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000b99dd: xor ah, bl; or al, 0; add ecx, 0x1112df; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x001740e2: xor ah, byte ptr [ebp - 7]; call dword ptr [edi + 0x50]; 
0x00172115: xor ah, ch; call dword ptr [eax - 0x73]; 
0x000df323: xor al, 0; add byte ptr [eax], al; add byte ptr [eax - 0x73], dl; xchg byte ptr [edi + ebx*8 - 0x17], bl; call dword ptr [eax - 0x73]; 
0x0011f278: xor al, 0; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0012e201: xor al, 0; add byte ptr [eax], al; mov ecx, dword ptr [esp + 0xc]; mov ebx, dword ptr [esp + 8]; call dword ptr gs:[0x10]; 
0x0014c7c6: xor al, 0; add byte ptr [ebp - 0x7cbd8b40], al; in al, dx; or al, 0x89; ret; 
0x000fd717: xor al, 0x24; call 0x23190; add esp, 0x14; pop ebx; pop esi; ret; 
0x0016c534: xor al, 0x24; call dword ptr [eax + 0x10]; 
0x0002f7bb: xor al, 0x24; call ebx; 
0x0009e230: xor al, 0x24; call edi; 
0x00160259: xor al, 0x24; mov eax, dword ptr [esp + 0x2c]; call eax; 
0x00160cdd: xor al, 0x24; push 0x400; push dword ptr [esp + 0xc]; push ebp; call edi; 
0x001579ad: xor al, 0x24; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x48]; push dword ptr [esp + 0x10]; call edi; 
0x0018760a: xor al, 0x24; ret; 
0x001398d7: xor al, 0x24; ror eax, 9; xor eax, dword ptr gs:[0x18]; call eax; 
0x001adf52: xor al, 0x29; ret 0x3b8; 
0x00108182: xor al, 0x29; ret 0x448b; 
0x0016f407: xor al, 0x29; ret 0xfa01; 
0x0013002b: xor al, 0x31; rcr byte ptr [ebx + 0x5e], 0x5f; ret; 
0x000d9ce2: xor al, 0x39; dec edi; xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x00145297: xor al, 0x39; ret 0x470f; 
0x0004f242: xor al, 0x39; ret 0x840f; 
0x00094b60: xor al, 0x3b; add byte ptr [eax], al; ret; 
0x0009a379: xor al, 0x3b; add byte ptr [eax], al; xor eax, eax; ret; 
0x000fe120: xor al, 0x48; stc; call dword ptr [eax + 0x55]; 
0x00084496: xor al, 0x50; call ebx; 
0x000d4b51: xor al, 0x50; push dword ptr [esi + 8]; call ebx; 
0x000c4b51: xor al, 0x50; push ebp; call esi; 
0x000c7312: xor al, 0x51; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], ecx; push eax; push ebp; call esi; 
0x000c4b48: xor al, 0x52; lea eax, [esp + 0x64]; mov dword ptr [esp + 0x34], edx; push eax; push ebp; call esi; 
0x0013b949: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x80ba0; add esp, 0x2c; ret; 
0x0013b549: xor al, 0x52; push dword ptr [esp + 0x2c]; call 0x862e0; add esp, 0x2c; ret; 
0x0016d5df: xor al, 0x56; push ecx; push 5; push ebx; call dword ptr [eax]; 
0x001217d7: xor al, 0x5b; pop esi; pop edi; ret; 
0x00040aec: xor al, 0x5b; pop esi; ret 4; 
0x001141c3: xor al, 0x5b; pop esi; ret; 
0x00124c43: xor al, 0x74; ret 0x4c8b; 
0x00127eed: xor al, 0x75; mov al, 0x83; ret 0xeb03; 
0x000d9ce5: xor al, 0x75; sub byte ptr [edi + 0x5e], bl; ret; 
0x000cf030: xor al, 0x81; ret 0; 
0x001165f6: xor al, 0x83; add dword ptr [ecx], eax; ror byte ptr [ecx + 0x290c245c], cl; ror dword ptr [ecx + 0xf18245c], cl; xchg ebp, eax; ret; 
0x001810d3: xor al, 0x83; in al, dx; or byte ptr [ebp - 0x699404a], cl; call dword ptr [esi + 0x53]; 
0x00040c93: xor al, 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00179882: xor al, 0x83; les ebx, ptr [eax]; pop ebx; ret; 
0x0007d644: xor al, 0x83; les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x0014f2d7: xor al, 0x83; les ecx, ptr [ecx + ecx*4]; call 0x4424bc66; ret 0x148b; 
0x0013652b: xor al, 0x83; les ecx, ptr [ecx + ecx*4]; ret; 
0x0012faa0: xor al, 0x83; les edi, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x001222cc: xor al, 0x83; les esp, ptr [eax]; pop ebx; pop esi; pop edi; ret; 
0x0009ba6e: xor al, 0x83; les esp, ptr [ebx + ebx*2]; pop esi; ret; 
0x0017d416: xor al, 0x83; ret 0x5204; 
0x0008a953: xor al, 0x83; ret 0x8901; 
0x0002d45b: xor al, 0x83; ret 0xc704; 
0x0004084b: xor al, 0x83; ret; 
0x00189c9f: xor al, 0x83; rol byte ptr [ecx], 0x89; ret 0x850f; 
0x0008c377: xor al, 0x85; sal byte ptr [ebp - 0x1c], cl; ret; 
0x0007d663: xor al, 0x85; sar byte ptr [eax + 0xb], 0x83; ret 0x8301; 
0x0012f554: xor al, 0x89; inc esp; and al, 0x38; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x001212f0: xor al, 0x89; push eax; inc eax; pop ebx; pop esi; ret; 
0x0016eea3: xor al, 0x89; rcr byte ptr [ebx + 0x5e], 1; ret; 
0x0007ee83: xor al, 0x89; ret 0xc483; 
0x0014ac94: xor al, 0x89; ret 0xcac1; 
0x000a63cd: xor al, 0x89; ret; 
0x0011f0bb: xor al, 0x8b; dec esp; and al, 0x38; mov ebx, dword ptr [esp + 0x30]; mov edi, dword ptr [esp + 0x3c]; call dword ptr gs:[0x10]; 
0x0012108b: xor al, 0x8b; pop esp; and al, 0x20; mov eax, 0xdd; call dword ptr gs:[0x10]; 
0x000dee97: xor al, 0x8b; pop esp; and al, 0x30; lea ecx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012dd48: xor al, 0x8b; pop esp; and al, 0x30; mov ecx, edx; call dword ptr gs:[0x10]; 
0x000425b7: xor al, 0x8b; push eax; cmp byte ptr [ebx + 0x408b3c48], cl; inc eax; ret; 
0x00177235: xor al, 0x8b; push eax; or byte ptr [ecx + 0x50], dl; call dword ptr [edx + 0xc]; 
0x000cfa27: xor al, 0x8d; add byte ptr [eax], 0xc1; stc; call dword ptr [eax + 0x53]; 
0x000a6dfd: xor al, 0x8d; and dword ptr [edi], 0x44; stc; call dword ptr [eax - 0x18]; 
0x0011e2eb: xor al, 0x8d; cmp bl, 0x49; stc; call dword ptr [eax - 0x18]; 
0x0008333a: xor al, 0x8d; inc edx; add al, 0x89; inc ecx; adc byte ptr [ecx - 0x9ec74c6], cl; ret 0x7502; 
0x0012f4c1: xor al, 0x8d; inc esp; and al, 0x24; mov dword ptr [esp + 0x38], eax; mov eax, 0x66; call dword ptr gs:[0x10]; 
0x00190485: xor al, 0x8d; jl 0x1904ad; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x000a1350: xor al, 0x8d; or bh, 0x41; stc; call dword ptr [eax - 0x18]; 
0x0011e325: xor al, 0x8d; sub byte ptr [edi], 0x46; stc; call dword ptr [eax - 0x18]; 
0x00027b8a: xor al, 0x8d; xchg edi, eax; sub ecx, edi; call dword ptr [edx + 0x50]; 
0x000a2a74: xor al, 0x8f; stc; call dword ptr [eax - 0x18]; 
0x000a29af: xor al, 0x90; stc; call dword ptr [eax - 0x18]; 
0x00110ade: xor al, 0xa2; stc; call dword ptr [eax + 0x68]; 
0x001106dc: xor al, 0xa2; stc; call dword ptr [eax - 0x73]; 
0x0011ea67: xor al, 0xa3; stc; call dword ptr [eax - 0x73]; 
0x00190278: xor al, 0xb3; cli; jmp dword ptr [esi - 0x70]; 
0x0017f478: xor al, 0xc1; sti; dec dword ptr [ebx - 0xef4b]; dec dword ptr [ebp - 0x645137a]; call dword ptr [eax - 0x73]; 
0x00107929: xor al, 0xe8; popal; mov eax, 0xc483fff1; adc cl, ch; ret 0xfffb; 
0x00108a47: xor al, 0xe8; ret; 
0x0014fca6: xor al, 0xed; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x0018a3d0: xor al, 0xf2; jmp dword ptr [esi - 0x70]; 
0x00128431: xor al, 0xf5; inc dword ptr [ebx - 0x3b7cef3c]; or byte ptr [eax + 1], bh; pop ebx; ret; 
0x00066d8a: xor al, 0xf6; inc eax; jmp dword ptr [eax]; 
0x000a0eeb: xor al, 0xf9; jmp dword ptr [esi - 0x70]; 
0x00034b0e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x1000; ret; 
0x00034aee: xor al, 0xf; mov bh, 4; push eax; and eax, 0x100; ret; 
0x00034ace: xor al, 0xf; mov bh, 4; push eax; and eax, 0x2000; ret; 
0x00034a4e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x200; ret; 
0x00034a8e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x4000; ret; 
0x000349ee: xor al, 0xf; mov bh, 4; push eax; and eax, 0x400; ret; 
0x00034a6e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x8000; ret; 
0x00034a2e: xor al, 0xf; mov bh, 4; push eax; and eax, 0x800; ret; 
0x0003492e: xor al, 0xf; mov bh, 4; push eax; and eax, 1; ret; 
0x00034a0e: xor al, 0xf; mov bh, 4; push eax; and eax, 2; ret; 
0x00034aae: xor al, 0xf; mov bh, 4; push eax; and eax, 4; ret; 
0x000349ce: xor al, 0xf; mov bh, 4; push eax; and eax, 8; ret; 
0x001781a6: xor al, 0xfc; call dword ptr [eax - 0x73]; 
0x000ea300: xor al, 0xfc; jmp dword ptr [esi - 0x70]; 
0x000bafee: xor al, 0xfe; adc byte ptr [eax], al; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x00158109: xor al, 0xfe; jmp dword ptr [esi - 0x70]; 
0x00157cc6: xor al, 0xff; je 0x157cee; inc eax; call esi; 
0x000c742e: xor al, 0xff; je 0xc7456; inc eax; push ebp; call esi; 
0x000e56d8: xor al, 1; add byte ptr [eax], al; add bl, ch; ret; 
0x0007106e: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x000713d4: xor al, 1; add byte ptr [eax], al; add byte ptr [ebx + 0x39102444], cl; ret 0x8c0f; 
0x0003d804: xor al, 1; add byte ptr [eax], al; mov eax, ecx; ret; 
0x000d9bd8: xor al, 1; add byte ptr [eax], al; pop edi; pop esi; ret; 
0x0003d7af: xor al, 1; add byte ptr [eax], al; ret; 
0x0003367f: xor al, 2; push dword ptr [esp + 0x1c]; call 0x33690; add esp, 0x1c; ret; 
0x000abd1f: xor al, 2; push dword ptr [esp + 0x1c]; call 0xabd30; add esp, 0x1c; ret; 
0x0005abe0: xor al, 4; add byte ptr [eax], al; pop ebx; pop esi; ret; 
0x001963db: xor al, 4; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0011ae48: xor al, 8; push edx; push dword ptr [esi + 0xc]; call dword ptr [esi + 0x24]; 
0x00064ca4: xor al, ah; add edi, dword ptr [edx + eax*4]; mov eax, edi; mov edi, ecx; jmp eax; 
0x001278c3: xor al, al; or eax, ecx; ret; 
0x00183698: xor al, bh; inc edx; or byte ptr [eax], al; add byte ptr [eax], al; add byte ptr [ebx + 0x1182454], cl; ret 0xcdb8; 
0x000ba06a: xor al, byte ptr [0x5e5f0000]; pop ebx; ret; 
0x00059c26: xor al, byte ptr [eax + eax]; add byte ptr [eax - 0x73], dl; xchg al, ah; jbe 0x59c29; call dword ptr [eax - 0x18]; 
0x0004a3f1: xor al, byte ptr [eax + eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4a3f4; call dword ptr [eax - 0x18]; 
0x0004d70a: xor al, byte ptr [eax + eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x4d70d; call dword ptr [eax - 0x18]; 
0x000513e0: xor al, byte ptr [eax + eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0x513e3; call dword ptr [eax - 0x18]; 
0x000cab9a: xor al, byte ptr [eax + eax]; add byte ptr [eax - 0x73], dl; xchg eax, esp; jbe 0xcab9d; call dword ptr [eax - 0x18]; 
0x001968de: xor al, byte ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x00122d99: xor al, byte ptr [eax - 0x76d00088]; ret 0x1b75; 
0x00122d5f: xor al, byte ptr [eax - 0x76fffe88]; ret 0x4f75; 
0x0016d15d: xor al, byte ptr [ebx + 0x438b0cec]; add al, 0x53; call dword ptr [eax + 0x10]; 
0x000ea377: xor al, byte ptr [ebx + 0x5e5b04c4]; ret; 
0x0016f373: xor al, byte ptr [ebx + 0x5e5b14c4]; ret; 
0x0015ac2d: xor al, byte ptr [ebx - 0x7872f714]; dec esp; inc ecx; stc; call dword ptr [eax + 0x53]; 
0x00114ce7: xor al, byte ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x00090888: xor al, ch; add ch, byte ptr [ecx]; stc; inc dword ptr [ebx - 0x3fcee73c]; pop ebx; ret; 
0x000dae72: xor al, ch; dec eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005b122: xor al, ch; fdiv dword ptr [eax + eax + 0x1cc48300]; ret; 
0x000c0f33: xor al, ch; fsub dword ptr [esi + 0xc]; add byte ptr [ecx + 0x10a0bbc1], al; add byte ptr [ebx], al; or al, 0x91; jmp ecx; 
0x00038143: xor al, ch; ja 0x380ea; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x000bdc9a: xor al, ch; jno 0xbdc37; or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x000614a3: xor al, ch; push edi; push ecx; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x0005b403: xor al, ch; push edi; scasb al, byte ptr es:[edi]; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000dae25: xor al, ch; xchg ebp, eax; daa; add byte ptr [eax], al; add esp, 0x1c; ret; 
0x000fb3eb: xor bh, 0x47; stc; call dword ptr [eax - 0x18]; 
0x00024918: xor bh, 0x63; stc; call dword ptr [eax - 0x18]; 
0x000b43bc: xor bh, 0xff; jmp dword ptr [esi + 0xf]; 
0x00152ea3: xor bh, al; inc esp; ret 4; 
0x00097bdc: xor bh, al; stc; call dword ptr [ebp + 0x57]; 
0x00030103: xor bh, bh; inc dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0011b43d: xor bh, bh; ja 0x11b44d; call dword ptr [edi + 0x24]; 
0x0011b6b9: xor bh, bh; ja 0x11b6c9; call dword ptr [edi + 0x24]; 
0x0011c56d: xor bh, bh; ja 0x11c57d; call dword ptr [edi + 0x24]; 
0x0011c7e9: xor bh, bh; ja 0x11c7f9; call dword ptr [edi + 0x24]; 
0x0011d6dd: xor bh, bh; ja 0x11d6ed; call dword ptr [edi + 0x24]; 
0x0011d959: xor bh, bh; ja 0x11d969; call dword ptr [edi + 0x24]; 
0x00025d12: xor bh, bh; jae 0x25d1a; call edi; 
0x0011b7e2: xor bh, bh; jbe 0x11b7f2; call dword ptr [esi + 0x24]; 
0x0011c912: xor bh, bh; jbe 0x11c922; call dword ptr [esi + 0x24]; 
0x0011da82: xor bh, bh; jbe 0x11da92; call dword ptr [esi + 0x24]; 
0x0008eb49: xor bh, bh; je 0x8eb71; cmp al, 0x51; call eax; 
0x0015f179: xor bh, bh; jmp dword ptr [ebp - 0x75]; 
0x001482f8: xor bh, bh; jmp dword ptr [esi - 0x70]; 
0x000c1621: xor bh, bh; mov byte ptr [eax + 0x40], bh; mov eax, dword ptr [esp + 0xc]; pop ebx; pop esi; ret; 
0x00061da4: xor bh, cl; call dword ptr [eax + 0x53]; 
0x000606c2: xor bh, cl; call dword ptr [eax + 0x6a]; 
0x000620f6: xor bh, cl; call dword ptr [eax - 0x18]; 
0x00060931: xor bh, cl; call dword ptr [ebp + 0x50]; 
0x00060839: xor bh, cl; call dword ptr [ecx + 0x50]; 
0x00060a8d: xor bh, cl; call dword ptr [esi + 0x6a]; 
0x00030356: xor bl, bh; call dword ptr [eax - 1]; 
0x00030328: xor bl, bh; call dword ptr [edx - 1]; 
0x00030236: xor bl, bh; call dword ptr [esi + 0x50]; 
0x001884b0: xor bl, bh; jmp dword ptr [esi - 0x70]; 
0x0003bf20: xor bl, bl; cmp byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x001503b4: xor bl, byte ptr [ebp - 7]; call dword ptr [eax - 0x18]; 
0x000a0e0a: xor bl, byte ptr [edi]; add al, byte ptr [eax]; add esp, 0x10; add esp, 8; pop ebx; ret; 
0x0013acac: xor byte ptr [0xc483fffe], dh; adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0009a8e6: xor byte ptr [eax + 0x14f], bh; call dword ptr gs:[0x10]; 
0x001222a0: xor byte ptr [eax + 0x154], bh; xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0012f415: xor byte ptr [eax + 0x66], bh; call dword ptr gs:[0x10]; 
0x00062aef: xor byte ptr [eax + 0x7d], 0xf9; call dword ptr [eax - 0x18]; 
0x00129caf: xor byte ptr [eax + 0xcb], bh; call dword ptr gs:[0x10]; 
0x00129c0f: xor byte ptr [eax + 0xcc], bh; call dword ptr gs:[0x10]; 
0x0010c37f: xor byte ptr [eax + 0xce], bh; call dword ptr gs:[0x10]; 
0x0010c524: xor byte ptr [eax + 0xd0], bh; call dword ptr gs:[0x10]; 
0x0010c474: xor byte ptr [eax + 0xd2], bh; call dword ptr gs:[0x10]; 
0x0010c5ec: xor byte ptr [eax + 0xd5], bh; call dword ptr gs:[0x10]; 
0x0010c2dc: xor byte ptr [eax + 0xd6], bh; call dword ptr gs:[0x10]; 
0x0017409a: xor byte ptr [eax + eax], al; add al, ch; sbb eax, 0x8900002c; ret; 
0x00196aab: xor byte ptr [eax + eax], al; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a29ae: xor byte ptr [eax + edx*4], 0xf9; call dword ptr [eax - 0x18]; 
0x000db959: xor byte ptr [eax - 0x75], dl; inc esp; and al, 0x64; call eax; 
0x0013614e: xor byte ptr [eax - 0x9f3af75], dl; ret 0x7504; 
0x000a9356: xor byte ptr [eax - 1], 0x2a; cmp ecx, eax; jne 0xa9350; mov eax, edx; pop ebx; ret; 
0x0002f2bb: xor byte ptr [eax - 1], 0xff; jmp dword ptr [ebp - 0x5f]; 
0x0014f80e: xor byte ptr [eax], 0xb0; stc; call dword ptr [eax - 0x18]; 
0x00069dfd: xor byte ptr [eax], al; add byte ptr [ebx - 0x4477b], cl; dec dword ptr [ebx - 0x4436b]; inc dword ptr [ecx]; ret 0xf001; 
0x0017683f: xor byte ptr [eax], al; mov eax, 1; pop ebx; pop esi; pop edi; ret; 
0x000c1620: xor byte ptr [eax], dh; dec dword ptr [eax + 0x448b4078]; and al, 0xc; pop ebx; pop esi; ret; 
0x0008c5f0: xor byte ptr [ebp + 0x2d], 0x83; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x000d9cd0: xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00157cbd: xor byte ptr [ebp + 0x50482444], cl; push dword ptr [esp + 0x34]; push dword ptr [esp + 0x40]; call esi; 
0x0007c625: xor byte ptr [ebp + 0x5110244c], cl; push dword ptr [edx + 0x98]; call eax; 
0x000bbd80: xor byte ptr [ebp + 0x5e5f4047], cl; pop ebx; ret; 
0x0004823e: xor byte ptr [ebp + 0x7ff48184], cl; clc; call dword ptr [eax - 1]; 
0x0004f194: xor byte ptr [ebp + 0x7ff48384], cl; clc; call dword ptr [eax + 0x52]; 
0x00157d1d: xor byte ptr [ebp - 0x10], 0x39; ret; 
0x00162f8f: xor byte ptr [ebp - 0x69ebe7a], cl; call dword ptr [eax + 0x6a]; 
0x00123942: xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; 
0x00123942: xor byte ptr [ebp - 0x6a0a17d], cl; call dword ptr [eax + 0x6a]; add al, ch; jmp dword ptr [ebp - 0xb]; 
0x00158e9f: xor byte ptr [ebp - 0x6a0a47a], cl; call dword ptr [eax + 0x6a]; 
0x001237aa: xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax + 0x6a]; 
0x00123453: xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x00126011: xor byte ptr [ebp - 0x6b32d7d], cl; call dword ptr [eax + 0x55]; 
0x00106c28: xor byte ptr [ebp - 0x6b7b87a], cl; dec dword ptr [ebp - 0x6b7dd72]; call dword ptr [eax - 0x77]; 
0x0004fb5d: xor byte ptr [ebp - 0x6d06280], cl; call dword ptr [eax + 0x56]; 
0x00106f1e: xor byte ptr [ebp - 0x6d3237a], cl; dec dword ptr [ebp - 0x6c0a972]; call dword ptr [eax - 0x17]; 
0x00024ece: xor byte ptr [ebp - 0x6d7317d], cl; call dword ptr [eax - 1]; 
0x00024eeb: xor byte ptr [ebp - 0x6d74b7d], cl; call dword ptr [eax - 1]; 
0x000ddfe9: xor byte ptr [ebp - 1], 0xff; call dword ptr [edi - 0x75]; 
0x000620e5: xor byte ptr [ebp - 7], bh; call dword ptr [eax - 0x73]; 
0x00178266: xor byte ptr [ebx + 0x448908c0], al; and al, 4; jmp edx; 
0x000e7d97: xor byte ptr [ebx + 0x535608ec], al; call eax; 
0x0016f18a: xor byte ptr [ebx + 0x568b3046], cl; sub al, 0x89; ret; 
0x000c11d6: xor byte ptr [ebx + 0x5b0c2444], cl; pop esi; ret; 
0x000bdda1: xor byte ptr [ebx + 0x5e082444], cl; ret; 
0x00081cd5: xor byte ptr [ebx + 0x5e5b04c4], al; ret; 
0x0013d87c: xor byte ptr [ebx + 0x5e5b0cc4], al; pop edi; pop ebp; ret; 
0x0002fa91: xor byte ptr [ebx + 0x5e5b10c4], al; pop edi; ret; 
0x00180213: xor byte ptr [ebx + 0x5e5b14c4], al; ret; 
0x00025457: xor byte ptr [ebx + 0x5e5b1cc4], al; pop edi; pop ebp; ret; 
0x0003be7e: xor byte ptr [ebx + 0x5e5b40c4], al; pop edi; ret; 
0x0013640d: xor byte ptr [ebx + 0x5e5b5cc4], al; pop edi; pop ebp; ret; 
0x0002a7d9: xor byte ptr [ebx + 0x5e5b7cc4], al; pop edi; pop ebp; jmp eax; 
0x001841bd: xor byte ptr [ebx + 0x5e], bl; pop edi; jmp eax; 
0x00092f07: xor byte ptr [ebx + 0x5e], bl; pop edi; ret; 
0x000bdc97: xor byte ptr [ebx + 0x71e830c0], al; cdq; or al, 0; add ecx, 0x10d2d4; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0017a60d: xor byte ptr [ebx + 0x74ed852f], cl; sbb al, 0x83; in al, dx; add al, 0x6a; call dword ptr [ebp + 0x56]; 
0x0013f59e: xor byte ptr [ebx + 0x84c8d17], cl; or al, 0x83; ror byte ptr [esi], 0x85; sal byte ptr [esi + esi + 0x39], cl; ret 0x1f72; 
0x000ba707: xor byte ptr [ebx + esi*8 + 0xe8ffff], 0xcf; or al, 0; add ecx, 0x11062f; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x000c0f30: xor byte ptr [ebx - 0x2717cf40], al; or al, 0; add ecx, 0x10a0bb; add ecx, dword ptr [ecx + edx*4]; jmp ecx; 
0x0008d2fd: xor byte ptr [ebx - 0x3f7acfc0], cl; jne 0x8d318; ret; 
0x000390cb: xor byte ptr [ebx - 0x57cfe3f], al; or dword ptr [edi], ecx; xchg esi, eax; ret 0xb60f; 
0x00190481: xor byte ptr [ebx - 0x72cbdbac], cl; jl 0x1904ad; or byte ptr [eax + 0x75], bh; mov ebx, 3; call dword ptr gs:[0x10]; 
0x0006141f: xor byte ptr [ebx - 0x77], bl; rcr byte ptr [esi + 0x5f], 1; pop ebp; ret; 
0x00071dd1: xor byte ptr [ebx - 0x78f0f606], al; cmp eax, 0x89fffff2; ret 0xc083; 
0x00152e87: xor byte ptr [ebx - 0x7bf00006], al; mov edx, 0x39000001; ret 0x840f; 
0x00102ae2: xor byte ptr [ebx - 0x7cebdbbc], cl; ret 0x8904; 
0x0003813d: xor byte ptr [ebx - 0xe3dbbc], cl; xor al, ch; ja 0x380ea; or byte ptr [eax], al; add esp, 0x1c; ret; 
0x000699ee: xor byte ptr [ebx], dh; stc; call dword ptr [eax - 0x18]; 
0x0014f2cd: xor byte ptr [ecx + 0x24448bc1], cl; sub byte ptr [ecx - 0x7ccbdbbc], cl; les ecx, ptr [ecx + ecx*4]; call 0x4424bc66; ret 0x148b; 
0x00081cd0: xor byte ptr [ecx + 0x30738906], cl; add esp, 4; pop ebx; pop esi; ret; 
0x0010ef6c: xor byte ptr [ecx + 0x35cc4], al; add byte ptr [ebx + 0x5e], bl; pop edi; pop ebp; ret; 
0x0015b045: xor byte ptr [ecx + 0x44830c78], cl; and al, 0x34; add dword ptr [ebx - 0x6bf09f02], eax; ret 0x4489; 
0x001390ae: xor byte ptr [ecx + 0x4d89847d], cl; mov byte ptr [ecx - 0x836b], cl; call dword ptr [esi + 0x6a]; 
0x00184286: xor byte ptr [ecx + 0x5f5e5bd8], cl; ret; 
0x0017c990: xor byte ptr [ecx + 0x5f5e5bf0], cl; ret; 
0x00149099: xor byte ptr [ecx + 0x67858dc7], cl; sub ecx, edi; call dword ptr [eax + 0x57]; 
0x001220a4: xor byte ptr [ecx + 0xba0850], cl; add dword ptr [eax], eax; add byte ptr [esi - 0x77], ah; push eax; push ss; ret; 
0x000d5ebc: xor byte ptr [ecx - 0x36477b], cl; inc dword ptr [ebx - 0x78f0f608]; retf 0xfffc; dec dword ptr [ebx - 0x362f7b]; inc dword ptr [ebx - 0x363343]; call dword ptr [eax]; 
0x000c9313: xor byte ptr [ecx - 0x76227612], cl; ret; 
0x0005b5d0: xor byte ptr [ecx - 7], bh; call dword ptr [eax - 0x18]; 
0x00187692: xor byte ptr [ecx], 0xc0; pop ebx; ret; 
0x00098425: xor byte ptr [ecx], 0xc0; ret; 
0x0015f24a: xor byte ptr [ecx], 0xff; jmp dword ptr [ebp - 0x75]; 
0x000707ae: xor byte ptr [ecx], al; add byte ptr [eax], al; add byte ptr [ebx + 0x100955c], cl; ret; 
0x001206fe: xor byte ptr [ecx], al; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000c2005: xor byte ptr [ecx], al; ret 0x267c; 
0x000452d1: xor byte ptr [ecx], al; ret 0x448b; 
0x0004509b: xor byte ptr [ecx], al; ret 0xb60f; 
0x000d9ccd: xor byte ptr [ecx], bh; dec edi; xor byte ptr [ebp + 0x3d], dh; pop edi; pop esi; ret; 
0x00168ab3: xor byte ptr [ecx], bh; ret 0x1074; 
0x00186033: xor byte ptr [ecx], bh; ret 0x820f; 
0x00152e44: xor byte ptr [ecx], bh; ret 0x840f; 
0x0011e54f: xor byte ptr [ecx], bh; ret 0xc389; 
0x0007e4d7: xor byte ptr [ecx], bh; ret; 
0x0010a992: xor byte ptr [ecx], bh; sal byte ptr [ebx + ecx - 0x77], 1; ret 0xf189; 
0x0013e6de: xor byte ptr [ecx], ch; fadd dword ptr [ecx]; ror byte ptr [edi], 1; inc edx; ret 0xd129; 
0x0013e58a: xor byte ptr [ecx], ch; fmul dword ptr [ebx + 0x120245c]; ror byte ptr [edi], 1; inc edx; ret 0xd329; 
0x0017b528: xor byte ptr [ecx], ch; ret 0x5356; 
0x000ac936: xor byte ptr [ecx], ch; ret; 
0x0002b7d5: xor byte ptr [ecx], cl; ret; 
0x00132da2: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f606]; ret; 
0x0013376a: xor byte ptr [ecx], dh; fild dword ptr [ebx - 0x69f0f608]; ret; 
0x00121dbd: xor byte ptr [ecx], dh; ret 0xe281; 
0x0004315c: xor byte ptr [edi + 0x16], dh; add byte ptr [ebx - 0x3d76e73c], al; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00123a45: xor byte ptr [edi + 0x4a], 0xf9; call dword ptr [eax - 0x18]; 
0x00140f09: xor byte ptr [edi + 0x59], 0xf9; call dword ptr [eax + 0x6a]; 
0x000ba680: xor byte ptr [edi + 0x5e], bl; pop ebx; ret; 
0x000b0804: xor byte ptr [edi + 0x5e], bl; ret; 
0x000c1146: xor byte ptr [edi + 0xc030010], bl; cdq; jmp ecx; 
0x00024f7f: xor byte ptr [edi + ebp*2 - 7], 0xff; ret; 
0x00187e75: xor byte ptr [edi - 0x18], dl; jl 0x187e6b; jmp dword ptr [ebp - 0x75]; 
0x0007a473: xor byte ptr [edi], cl; mov dh, 0x57; add ecx, ebp; ret; 
0x000c1d62: xor byte ptr [edi], cl; mov esp, 0x76c229c0; push es; lea eax, [edi + eax + 0x30]; pop edi; ret; 
0x000b4286: xor byte ptr [edi], cl; mov fs, word ptr [ebx - 0x7a000008]; ror byte ptr [edi], 0x85; dec ebx; idiv bh; jmp dword ptr [esi + 0xf]; 
0x000d5a4e: xor byte ptr [edi], cl; test byte ptr [ebx], ch; adc byte ptr [eax], al; add byte ptr [ebp + 0xff089ff], al; xchg ebp, eax; ret 0x8eb; 
0x000486e9: xor byte ptr [edi], cl; test dword ptr [ebp - 0x76fffff7], ebx; ret; 
0x00067bde: xor byte ptr [edi], cl; xchg esp, eax; ret; 
0x0008ec21: xor byte ptr [edx + 0x51], dl; call eax; 
0x00160177: xor byte ptr [edx + eax], 0x81; ret; 
0x0008d7bb: xor byte ptr [edx + ebx - 0x77d0000], 1; jg 0x8d7d0; ret; 
0x000a1c9c: xor byte ptr [edx - 7], al; call dword ptr [eax + 0x53]; 
0x0005bac9: xor byte ptr [edx - 7], bh; call dword ptr [eax - 0x73]; 
0x00137d29: xor byte ptr [edx], 0x56; stc; call dword ptr [eax - 0x75]; 
0x001a87cc: xor byte ptr [edx], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x000c7094: xor byte ptr [edx], ch; push dword ptr [esp + 0x2c]; push dword ptr [esp + 0x38]; push dword ptr [esp + 0x38]; push ebp; call esi; 
0x0002970b: xor byte ptr [edx], ch; push ebx; push dword ptr [esp + 0x6c]; push dword ptr [esp + 0x68]; push dword ptr [esp + 0x70]; call edi; 
0x001a3fb1: xor byte ptr [esi + 0xf], ah; out dx, eax; shl dword ptr [esi + 0xf], 1; cmp byte ptr [edi], dl; ret 0x2c73; 
0x001a81ef: xor byte ptr [esi + 0xf], ah; xlatb; ret 0x498d; 
0x000c1c2b: xor byte ptr [esi + 0xf], ah; xlatb; ret; 
0x00176fe7: xor byte ptr [esi + eax - 0x7d], dh; les eax, ptr [ebx + ebx*2]; pop esi; ret; 
0x00188aa5: xor byte ptr [esi - 0x18], dl; adc al, 0x5e; out dx, eax; jmp dword ptr [ecx]; 
0x0010d558: xor byte ptr [esi - 0x7d], ah; clc; adc byte ptr [edi], cl; test byte ptr [ebp - 0x9fffffc], ah; ret 0xf20; 
0x000345ac: xor byte ptr [esi], ch; stc; call dword ptr [eax + 0x57]; 
0x001a8496: xor ch, 0; add byte ptr [eax], al; lea eax, [edi + 0xb]; pop edi; ret; 
0x001948c7: xor ch, byte ptr [0xc381ffff]; xchg ebp, eax; dec edi; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x000a1d17: xor ch, byte ptr [ecx]; ret 0x850f; 
0x000c20f6: xor ch, ch; add eax, ecx; pop edi; ret; 
0x0009bdf8: xor ch, cl; sbb byte ptr [ebx + 0x5e], 0x5f; pop ebp; ret; 
0x0003205d: xor cl, 0x2b; stc; call dword ptr [eax - 0x18]; 
0x0008fc49: xor cl, 0x80; call dword ptr gs:[0x10]; 
0x0008fcca: xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fcca: xor cl, 0x81; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000919d4: xor cl, 0x81; mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x0009152b: xor cl, 0x81; mov dword ptr [edi], 0; call dword ptr gs:[0x10]; 
0x000921e0: xor cl, 0x81; mov eax, 0xf0; mov edx, 1; xor esi, esi; call dword ptr gs:[0x10]; 
0x00098060: xor cl, 0x87; mov eax, 0xf0; xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x00023470: xor cl, bh; call dword ptr [eax + 0x52]; 
0x0004a43f: xor cl, bh; call dword ptr [eax - 0x18]; 
0x0005afd0: xor cl, bh; call dword ptr [eax - 0x18]; aaa; xchg ebx, eax; std; jmp dword ptr [esi - 0x70]; 
0x000479d5: xor cl, bh; call dword ptr [eax - 0x73]; 
0x000f096f: xor cl, bh; call dword ptr [eax - 0x77]; 
0x000531ac: xor cl, bh; call dword ptr [edi + 0x6a]; 
0x00141590: xor cl, bh; call dword ptr [edx - 0x46]; 
0x00061cd2: xor cl, bh; call dword ptr [esi + 0x52]; 
0x0005ab26: xor cl, bh; inc dword ptr [ebp - 0x38ec8b40]; add byte ptr [edi], ch; jbe 0x5aabd; ret 0x40c7; 
0x000900e6: xor cl, bh; jmp dword ptr [ebp - 0x39]; 
0x001291d5: xor cl, bl; ror byte ptr [edi], 0x9e; ret 0xff85; 
0x000d6073: xor cl, byte ptr [eax + eax]; add byte ptr [ebx - 0x364b7b], cl; jmp dword ptr [ebp - 0x75]; 
0x000ac652: xor cl, byte ptr [ebp + 0x5e5b0142]; ret; 
0x000afef1: xor cl, byte ptr [ebp - 0x157c07a8]; add al, 0x83; rol dword ptr [ecx], 0xeb; adc eax, 0x8300768d; ret 0x8b20; 
0x001928c7: xor cl, byte ptr [ebp - 1]; inc dword ptr [ecx + 0x46d15c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00136ba2: xor cl, byte ptr [ebx - 0x137c53bb]; add al, 0x6a; add eax, 0x5653808d; stc; call dword ptr [eax - 0x75]; 
0x00091305: xor cl, byte ptr [ebx - 0x776f3b5]; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x001537da: xor cl, byte ptr [ebx]; out dx, al; dec dword ptr [ebx - 0x72f7db84]; xchg dword ptr [eax], edi; mov bl, 0xf9; call dword ptr [eax - 0x73]; 
0x000ac5a2: xor cl, byte ptr [ecx + 0x242c6d0]; add byte ptr [ebx + 0x5e], bl; ret; 
0x000c63da: xor cl, ch; cmc; inc dword ptr [ebx + 0x5e5b10c4]; pop edi; ret; 
0x000e7901: xor cl, ch; das; idiv edi; call dword ptr [eax + 0x55]; 
0x000cd322: xor cl, ch; pop esp; idiv edi; dec dword ptr [edi]; movsb byte ptr es:[edi], byte ptr [esi]; ret 0xc102; 
0x000c07f3: xor cl, cl; mov byte ptr [eax], cl; mov eax, edi; pop ebx; pop edi; ret; 
0x000b88ac: xor dh, 0xff; jmp dword ptr [esi + 0xf]; 
0x000512ba: xor dh, bh; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + 0x78], edi; stc; call dword ptr [eax - 0x73]; 
0x00051300: xor dh, bh; dec dword ptr [ebx - 0x72d7db84]; xchg dword ptr [eax + edi*2], edi; stc; call dword ptr [eax - 0x73]; 
0x000ffbaa: xor dh, dh; ret 0x7404; 
0x00160116: xor dh, dl; call dword ptr [eax - 0x73]; 
0x000ffef8: xor dh, dl; inc dword ptr [ebx - 0x3fceef3c]; add esp, 8; pop ebx; ret; 
0x000ec966: xor dl, 0x46; stc; call dword ptr [eax - 0x18]; 
0x001918a9: xor dl, 0x87; cli; jmp dword ptr [esi - 0x70]; 
0x0019a8a9: xor dl, 0xf7; stc; jmp dword ptr [esi - 0x70]; 
0x00137d2a: xor dl, byte ptr [esi - 7]; call dword ptr [eax - 0x75]; 
0x0015a95e: xor dword ptr [eax + 0x5f], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x000d325d: xor dword ptr [eax + 0x68fff945], 0xffffffc0; add al, byte ptr [eax]; add byte ptr [eax - 0x73], dl; add eax, -0x66; stc; call dword ptr [eax - 0x18]; 
0x001969e3: xor dword ptr [eax + eax], eax; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0017588b: xor dword ptr [eax + eax], edx; add byte ptr [ecx - 0x757c723b], cl; stc; call dword ptr [ecx + 0x6a]; 
0x000fe11f: xor dword ptr [eax + ecx*2], 0xfffffff9; call dword ptr [eax + 0x55]; 
0x0017184d: xor dword ptr [eax - 0x1000000], 0x74; and al, 0x30; push esi; call dword ptr [eax + 4]; 
0x0017182b: xor dword ptr [eax - 0x1000000], 0xffffffb3; test al, 0; add byte ptr [eax], al; push dword ptr [esp + 0x28]; push esi; call dword ptr [eax + 0xc]; 
0x0013c5b4: xor dword ptr [eax - 0x73], edx; sbb byte ptr [eax], 0xaa; stc; call dword ptr [eax - 0x18]; 
0x000f0edb: xor dword ptr [eax - 0xd], eax; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x000345ab: xor dword ptr [eax], 0x2e; stc; call dword ptr [eax + 0x57]; 
0x000d3256: xor dword ptr [eax], 0xffffff9e; stc; call dword ptr [eax - 0x73]; 
0x0013445c: xor dword ptr [ebp + 0x55], 0xfffffff9; call dword ptr [edx + 0x50]; 
0x0013313b: xor dword ptr [ebp - 0x76e98b37], eax; ret; 
0x00080867: xor dword ptr [ebx + 0x5e5b04c4], eax; ret; 
0x00137fb6: xor dword ptr [ebx + 0x5e5b2cc4], eax; pop edi; pop ebp; ret; 
0x000fbb9c: xor dword ptr [ebx + 0x5e], ebx; pop edi; ret; 
0x0007c61e: xor dword ptr [ebx + 0x74ff04ec], eax; and al, 0x30; lea ecx, [esp + 0x10]; push ecx; push dword ptr [edx + 0x98]; call eax; 
0x00028f8b: xor dword ptr [ebx + 0x7c8b0000], 0x878d4c24; or al, 0x6c; stc; call dword ptr [eax + 0x68]; 
0x0015f32b: xor dword ptr [ebx], 0x60; stc; call dword ptr [eax - 0x18]; 
0x0011ea66: xor dword ptr [ebx], 0xfffffff9; call dword ptr [eax - 0x73]; 
0x001544ba: xor dword ptr [ebx], eax; add byte ptr [ecx + 0xe8957c3], al; add byte ptr [ecx + 0x144ec], al; add byte ptr [ecx - 0x1437b], cl; jmp dword ptr [ebp - 0x5f]; 
0x0015440b: xor dword ptr [ebx], eax; add byte ptr [ecx + 0xe8a06c6], al; add byte ptr [ebx - 0x77], dl; ret; 
0x000360c3: xor dword ptr [ecx + 0x2e], 0xfffffff9; call dword ptr [eax - 0x18]; 
0x0016f56e: xor dword ptr [ecx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; 
0x0017a680: xor dword ptr [ecx + 0x56], 0xfffffff9; call dword ptr [eax + 0x6a]; add al, ch; ret; 
0x00034213: xor dword ptr [ecx + 0x5f5e5b10], ecx; pop ebp; ret; 
0x00123447: xor dword ptr [ecx + eax - 0x4c750000], 0; add dword ptr [eax], eax; add bh, bh; xor byte ptr [ebp - 0x6a69b7d], cl; call dword ptr [eax - 1]; 
0x00060a8b: xor dword ptr [ecx], 0x32; stc; call dword ptr [esi + 0x6a]; 
0x000f0eda: xor dword ptr [ecx], 0x40; inc ebx; mov eax, 0x41; call dword ptr gs:[0x10]; 
0x001587aa: xor dword ptr [ecx], 0x5f; stc; call dword ptr [eax - 0x18]; 
0x0015893d: xor dword ptr [ecx], 0x5f; stc; call dword ptr [eax - 0x73]; 
0x0011ff73: xor dword ptr [ecx], eax; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000bb36b: xor dword ptr [ecx], ecx; add byte ptr [eax], al; pop edi; pop esi; pop ebx; ret; 
0x000a3b0f: xor dword ptr [ecx], edi; ret 0x840f; 
0x0002b7cc: xor dword ptr [ecx], edi; ret; 
0x0012eadb: xor dword ptr [edi + ebp*8 - 1], esp; ret; 
0x000819e7: xor dword ptr [edi + edi*8 - 1], 0xffffffff; pop ebx; mov eax, dword ptr [edx]; pop esi; pop edi; ret; 
0x001587ab: xor dword ptr [edi - 7], ebx; call dword ptr [eax - 0x18]; 
0x0015893e: xor dword ptr [edi - 7], ebx; call dword ptr [eax - 0x73]; 
0x00126315: xor dword ptr [edi], 0x51; stc; call dword ptr [eax + 0x55]; 
0x001998f1: xor dword ptr [edi], eax; add al, 0; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x0009be3d: xor dword ptr [edx + eax - 0x3b7d0000], 0x18; pop ebx; ret; 
0x001503b3: xor dword ptr [edx], 0x5d; stc; call dword ptr [eax - 0x18]; 
0x00060a8c: xor dword ptr [edx], esi; stc; call dword ptr [esi + 0x6a]; 
0x0008019a: xor dword ptr [esi + 0x5f], ebx; pop ebp; ret; 
0x0016aa1b: xor dword ptr [esi + edi*8 + 0x1cc483ff], edx; ret; 
0x001a3bb5: xor dword ptr [esi - 0x7cffffff], 0xffffffed; adc byte ptr [edi], cl; xchg byte ptr [edi - 0x7cffffff], cl; ret 0x8310; 
0x000de503: xor dword ptr [esi - 7], eax; call dword ptr [eax - 0x18]; 
0x00060b30: xor dword ptr [esi], 0x65; stc; call dword ptr [ebp + 0x56]; 
0x00199af1: xor dword ptr [esp + eax], eax; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x00053411: xor eax, 0x14; mov dword ptr [esp + 0x14], esi; mov esi, dword ptr [esp + 0x28]; mov ebx, dword ptr [esi + 8]; call dword ptr gs:[0x10]; 
0x0004321a: xor eax, 0x1f; add eax, 1; pop ebx; ret; 
0x000431cf: xor eax, 0x1f; add eax, 1; ret; 
0x00043294: xor eax, 0x1f; lea edx, [eax + 1]; mov eax, edx; ret; 
0x0004364a: xor eax, 0x1f; lea edx, [eax - 0x10]; mov eax, edx; ret; 
0x000431b4: xor eax, 0x1f; lea edx, [eax - 0x17]; mov eax, edx; ret; 
0x0004359a: xor eax, 0x1f; lea edx, [eax - 0x18]; mov eax, edx; ret; 
0x00043255: xor eax, 0x1f; lea edx, [eax - 0xf]; mov eax, edx; ret; 
0x000435c5: xor eax, 0x1f; ret; 
0x000c21dd: xor eax, 0x1f; sar eax, 3; sub edx, eax; lea ecx, [edx + 3]; mov eax, ecx; ret; 
0x0005cab5: xor eax, 0x20c0950f; ret; 
0x00070fd5: xor eax, 0x246c8be0; inc eax; mov dword ptr [esp + 4], ecx; mov ebx, dword ptr [ebp + edx*4]; add ebx, eax; jmp ebx; 
0x0003e05c: xor eax, 0x31000001; sal byte ptr [ecx], cl; div byte ptr [ecx]; jmp dword ptr [ebp - 1]; 
0x00076dfb: xor eax, 0x3900000c; ret 0x840f; 
0x001262df: xor eax, 0x50; stc; call dword ptr [ecx + 0x51]; 
0x000813c2: xor eax, 0x530cec83; call dword ptr [esi + 0x10]; 
0x00130c5f: xor eax, 0x5b6cc483; pop esi; pop edi; pop ebp; ret; 
0x0004dce5: xor eax, 0x7fffffff; ret; 
0x001979c4: xor eax, 0x81fffefc; ret; 
0x00196ec4: xor eax, 0x81ffff07; ret; 
0x00194fc4: xor eax, 0x81ffff26; ret; 
0x00192fc4: xor eax, 0x81ffff46; ret; 
0x001150d7: xor eax, 0x83fff7a0; les esp, ptr [eax]; add esp, 8; pop ebx; ret; 
0x00175397: xor eax, 0x83fffc71; les ecx, ptr [ecx + ebp*8]; ret 0xfffc; 
0x0009b3cd: xor eax, 0x8908ec83; ret; 
0x0008b010: xor eax, 0x89ffffff; ret 0xef89; 
0x0004a4d7: xor eax, 0x8bfffe9e; jl 0x4a502; sbb byte ptr [ebp - 0x687b779], cl; call dword ptr [eax - 0x73]; 
0x000f74a6: xor eax, 0xb48dfffb; add byte ptr es:[eax], al; add byte ptr [eax], al; xor eax, eax; ret; 
0x0013acad: xor eax, 0xc483fffe; adc byte ptr [ebp - 0x7cf68b40], al; les ecx, ptr [eax]; pop ebx; ret; 
0x0003a9ab: xor eax, 0xfc08400; xchg ebp, eax; ret; 
0x000413da: xor eax, 0xff04ec83; je 0x41405; or byte ptr [esi + 0x57], dl; mov eax, dword ptr [esp + 0x10]; call eax; 
0x000d32a7: xor eax, 0xffffff9d; stc; call dword ptr [eax - 0x18]; 
0x0014c908: xor eax, 1; pop ebx; ret; 
0x00087171: xor eax, 1; ret; 
0x00139895: xor eax, dword ptr [0x18]; call eax; 
0x00025021: xor eax, dword ptr [0x18]; jmp eax; 
0x0013d0a8: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d185: xor eax, dword ptr [0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1ec: xor eax, dword ptr [0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ae: xor eax, dword ptr [0x18]; pop edi; pop ebp; jmp eax; 
0x00154bbd: xor eax, dword ptr [0x18]; pop edi; pop ebp; ret; 
0x00154803: xor eax, dword ptr [0x18]; push eax; call edx; 
0x001398c4: xor eax, dword ptr [0x18]; push esi; call eax; 
0x0003f5f3: xor eax, dword ptr [0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x001967d8: xor eax, dword ptr [eax + eax]; add ebx, dword ptr [ebx + ecx*4]; jmp ebx; 
0x001229a7: xor eax, dword ptr [eax]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x000757f1: xor eax, dword ptr [eax]; add byte ptr [ebx - 0x5177b], cl; call ecx; 
0x00038c5c: xor eax, dword ptr [eax]; add cl, al; cli; add al, byte ptr [ecx - 0xccc1e]; inc dword ptr [ecx]; ret 0xd089; 
0x0016d395: xor eax, dword ptr [ebx + 0x5e5b14c4]; ret; 
0x0005bc34: xor eax, dword ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x000255a2: xor eax, dword ptr [ebx + 0x5e5b20c4]; pop edi; ret; 
0x000e833f: xor eax, dword ptr [ebx + 0x5e5b30c4]; pop edi; ret; 
0x000e9270: xor eax, dword ptr [ebx + 0x5e5b70c4]; pop edi; ret; 
0x0016ea84: xor eax, dword ptr [ebx - 0x72affb14]; adc dword ptr [esi], 0x56; stc; call dword ptr [eax + 0x6a]; 
0x00040b69: xor eax, dword ptr [ebx]; add byte ptr [eax], al; add esp, 0x10; add esp, 0xc; ret; 
0x001aa86d: xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x00114ae8: xor eax, dword ptr [ecx]; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001aa873: xor eax, dword ptr [ecx]; ret 0xd089; 
0x000860a4: xor eax, dword ptr [ecx]; ret; 
0x00139894: xor eax, dword ptr gs:[0x18]; call eax; 
0x00025020: xor eax, dword ptr gs:[0x18]; jmp eax; 
0x0013d0a7: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push edi; call eax; 
0x0013d184: xor eax, dword ptr gs:[0x18]; lea edx, [esp + 0x10]; push edx; push esi; call eax; 
0x0003f1eb: xor eax, dword ptr gs:[0x18]; mov dword ptr [ebp + edi], edx; push dword ptr [ebx + 4]; call eax; 
0x000250ad: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; jmp eax; 
0x00154bbc: xor eax, dword ptr gs:[0x18]; pop edi; pop ebp; ret; 
0x00154802: xor eax, dword ptr gs:[0x18]; push eax; call edx; 
0x001398c3: xor eax, dword ptr gs:[0x18]; push esi; call eax; 
0x0003f5f2: xor eax, dword ptr gs:[0x18]; xchg dword ptr [edi], edx; cmp edx, 1; jg 0x3f6c0; call eax; 
0x00123339: xor eax, eax; add esp, 0x10; pop ebx; pop esi; pop edi; ret; 
0x0003f417: xor eax, eax; add esp, 0x14; pop ebx; pop esi; ret; 
0x0008f714: xor eax, eax; add esp, 0xc; ret; 
0x0003a332: xor eax, eax; add esp, 4; pop ebx; pop esi; ret; 
0x00040946: xor eax, eax; add esp, 8; pop ebx; ret; 
0x000fbc20: xor eax, eax; cmp dword ptr [esi + ecx*4], ebx; je 0xfbc38; pop ebx; pop esi; ret; 
0x000e79d7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe79e8; add esp, 0xc; ret; 
0x000e7ac7: xor eax, eax; cmp dword ptr [esp + 0x14], 1; je 0xe7ad8; add esp, 0xc; ret; 
0x000349b4: xor eax, eax; cmp dword ptr [esp + 4], 0x7f; setbe al; ret; 
0x001a9d23: xor eax, eax; cmp ecx, dword ptr [edx - 4]; jne 0x1a9d30; pop ebx; ret; 
0x0015978b: xor eax, eax; cmp ecx, edx; setne al; ret; 
0x000fb714: xor eax, eax; cmp edx, 0x1badface; setne al; ret; 
0x000fb6eb: xor eax, eax; cmp edx, 0x1cd1; setne al; ret; 
0x000a9c73: xor eax, eax; cmp edx, 0x40; ja 0xa9c81; mov eax, dword ptr [ecx + edx*4 - 0xe34]; ret; 
0x000a9ca3: xor eax, eax; cmp edx, 0x40; ja 0xa9cb1; mov eax, dword ptr [ecx + edx*4 - 0xd14]; ret; 
0x000fb750: xor eax, eax; cmp edx, 0xadf5; setne al; ret; 
0x0008efd2: xor eax, eax; cmp edx, dword ptr [esp + 4]; setae al; ret; 
0x0014c8ab: xor eax, eax; cmp word ptr [edx + 2], bx; je 0x14c8b8; pop ebx; ret; 
0x001216b8: xor eax, eax; mov dword ptr [ebx + 0x50], edx; pop ebx; pop esi; pop edi; ret; 
0x000874e1: xor eax, eax; mov dword ptr [ebx + 4], edx; pop ebx; pop esi; ret; 
0x00081745: xor eax, eax; mov dword ptr [ebx], ecx; add esp, 4; pop ebx; pop esi; ret; 
0x00091174: xor eax, eax; mov dword ptr [ecx + 4], edx; ret; 
0x000a1a05: xor eax, eax; mov eax, 0x163; mov byte ptr [esi + 0x3c64], 1; lea ebx, [esi + 0x3c5c]; call dword ptr gs:[0x10]; 
0x00131448: xor eax, eax; mov ecx, dword ptr [edx + 4]; cmp byte ptr [ecx], 0; je 0x131458; ret; 
0x000d9fc8: xor eax, eax; mov ecx, dword ptr [edx]; test ecx, ecx; jne 0xd9ff2; ret; 
0x0005b797: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x5b7b0; add esp, 0xc; ret; 
0x00079587: xor eax, eax; mov edx, dword ptr [esp + 0x10]; test byte ptr [edx], 0x20; je 0x795a0; add esp, 0xc; ret; 
0x0012791a: xor eax, eax; or eax, esi; pop esi; pop edi; ret; 
0x001a3d52: xor eax, eax; pop ebp; ret; 
0x00090f49: xor eax, eax; pop ebx; pop edi; ret; 
0x001398ee: xor eax, eax; pop ebx; pop esi; pop ebp; ret; 
0x000251fe: xor eax, eax; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x00040f5c: xor eax, eax; pop ebx; pop esi; pop edi; ret; 
0x00040d42: xor eax, eax; pop ebx; pop esi; ret; 
0x0003c65a: xor eax, eax; pop ebx; ret; 
0x001a52d1: xor eax, eax; pop edi; pop ebp; pop ebx; ret; 
0x001a4d70: xor eax, eax; pop edi; pop ebx; ret; 
0x000d9ba4: xor eax, eax; pop edi; pop esi; ret; 
0x000c1820: xor eax, eax; pop edi; ret; 
0x000a639b: xor eax, eax; pop edx; pop ebx; pop esi; ret; 
0x000405ea: xor eax, eax; pop esi; pop edi; pop ebp; ret; 
0x00053d50: xor eax, eax; pop esi; pop edi; ret; 
0x00090e16: xor eax, eax; rep movsd dword ptr es:[edi], dword ptr [esi]; pop esi; pop edi; ret; 
0x0003d394: xor eax, eax; ret; 
0x0003d670: xor eax, eax; test edx, edx; sete al; ret; 
0x0004379c: xor eax, eax; tzcnt eax, ecx; test ecx, ecx; je 0x437b0; pop ebx; ret; 
0x00043808: xor eax, eax; tzcnt eax, edx; test edx, edx; mov edx, 0x20; cmove eax, edx; ret; 
0x0010ba30: xor eax, eax; xchg dword ptr [edi + 0x3fec], eax; cmp eax, 1; jg 0x10ba78; call dword ptr [esi]; 
0x00041c7f: xor eax, ebx; pop ebx; ret; 
0x0003c04b: xor eax, ecx; shr eax, 0x1f; ret; 
0x000434fb: xor eax, edx; cmp edx, eax; setb al; ret; 
0x000434dc: xor eax, edx; cmp edx, eax; setle al; ret; 
0x0003a05a: xor eax, edx; movzx edx, byte ptr [ecx]; test dl, dl; jne 0x3a040; ret; 
0x00164ac1: xor ebp, 0x61; stc; call dword ptr [eax - 0x18]; 
0x00164c62: xor ebp, 0x61; stc; call dword ptr [eax - 0x73]; 
0x000260d9: xor ebp, eax; adc eax, 0x241c8900; call esi; 
0x0012c93d: xor ebp, ebp; and esp, 0xfffffff0; sub esp, 0xc; push esi; call edx; 
0x0014fda6: xor ebp, ebp; dec dword ptr [ecx - 0x76e7dbbc]; ret; 
0x00062acc: xor ebp, ecx; ret 0xfffd; 
0x000f0458: xor ebp, edi; inc dword ptr [ebx + 0x78310c4]; add dword ptr [ecx], eax; ret; 
0x000436df: xor ebx, 0x1f; lea eax, [ebx + 0x20]; pop ebx; ret; 
0x0013cf78: xor ebx, dword ptr [eax - 7]; call dword ptr [ecx - 0x77]; 
0x001131e3: xor ebx, dword ptr [edx + edx + 0x4c8b5300]; and al, 0x10; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0018dd79: xor ebx, eax; cli; dec dword ptr [ebx - 0x46f43]; dec dword ptr [ebp - 0x65f1f79]; call dword ptr [eax - 0x73]; 
0x00154032: xor ebx, ebx; add esp, 4; mov eax, ebx; pop ebx; pop esi; ret; 
0x000940af: xor ebx, ebx; call dword ptr gs:[0x10]; 
0x000dc369: xor ebx, ebx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0xdc380; pop ebx; ret; 
0x00124ef6: xor ebx, ebx; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00024d7a: xor ebx, ebx; lea esi, [esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x000931d6: xor ebx, ebx; lea esi, cs:[esi]; mov eax, edx; call dword ptr gs:[0x10]; 
0x001222a6: xor ebx, ebx; mov dword ptr [esp + 0x18], edx; xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x000c53f0: xor ebx, ebx; mov eax, ebx; pop ebx; pop esi; pop edi; ret; 
0x00122389: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00122329: xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov esi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001397d5: xor ebx, ebx; mov ecx, esp; mov eax, 0xba; call dword ptr gs:[0x10]; 
0x0003de0c: xor ebx, ebx; mov edx, dword ptr [esp + 0x10]; lea ecx, [edi - 0x785a4]; call dword ptr gs:[0x10]; 
0x000432e1: xor ecx, 0x1f; add ecx, 1; pop ebx; mov eax, ecx; ret; 
0x00043613: xor ecx, 0x1f; lea eax, [ecx + 0x20]; pop ebx; ret; 
0x00042e39: xor ecx, 0x1f; shr eax, cl; ret; 
0x0012d3ac: xor ecx, dword ptr [ebx - 0x47f3dba4]; js 0x12d3b5; add byte ptr [eax], al; call dword ptr gs:[0x10]; 
0x001508a9: xor ecx, dword ptr [ecx - 0x476dbe4]; call 0x23190; mov dword ptr [esp], ebp; call esi; 
0x000ac18c: xor ecx, dword ptr [ecx - 0x760e7605]; aad 0x83; ret 0x3801; 
0x00110aea: xor ecx, dword ptr [ecx - 7]; call dword ptr [eax - 0x73]; 
0x00035184: xor ecx, ecx; call 0x34c60; mov edx, dword ptr [esp + 0x14]; add esp, 0xc; mov eax, edx; ret; 
0x0011f619: xor ecx, ecx; call dword ptr gs:[0x10]; 
0x0011f619: xor ecx, ecx; call dword ptr gs:[0x10]; cmp eax, 0xfffff000; ja 0x11f630; pop ebx; ret; 
0x00154a8f: xor ecx, ecx; cmp eax, 2; jne 0x154aa0; mov eax, ecx; ret; 
0x0009a969: xor ecx, ecx; lock cmpxchg dword ptr [edx], ecx; mov eax, 0x10; cmove eax, ecx; ret; 
0x000e7b79: xor ecx, ecx; mov eax, 0x196; not ebx; lea ebx, [ebx*8 + 2]; call dword ptr gs:[0x10]; 
0x0014e9d6: xor ecx, ecx; mov eax, ecx; pop ebx; pop esi; ret; 
0x00040563: xor ecx, ecx; mov ebx, 0; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x0009125f: xor ecx, ecx; or dword ptr [edx + 8], 8; mov dword ptr [edx + 0x10], eax; mov eax, ecx; ret; 
0x00043300: xor ecx, ecx; pop ebx; mov eax, ecx; ret; 
0x00095719: xor ecx, ecx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0005dbd2: xor ecx, edi; call dword ptr [eax + 0x57]; 
0x0005dffd: xor ecx, edi; call dword ptr [eax - 0x18]; 
0x0002567e: xor edi, 0x3ecf01ff; jmp edi; 
0x0014eca7: xor edi, 0x5b; stc; call dword ptr [eax - 0x73]; 
0x000a9f18: xor edi, dword ptr [ecx]; ret 0x3d73; 
0x000fad3c: xor edi, dword ptr [edx + ebp]; je 0xfad45; cmp al, 0x3f; jne 0xfad59; mov eax, 1; ret; 
0x000617da: xor edi, ecx; call dword ptr [eax + 0x51]; 
0x00068967: xor edi, ecx; call dword ptr [eax - 0x18]; 
0x00078a5e: xor edi, ecx; call dword ptr [eax - 0x73]; 
0x000fe2b6: xor edi, ecx; call dword ptr [edx + 0x52]; 
0x00185bcb: xor edi, edi; aaa; push dword ptr [esp + 0xc]; mov eax, dword ptr [esp + 0x14]; call eax; 
0x0003e064: xor edi, edi; call dword ptr gs:[0x10]; 
0x00194435: xor edi, edi; inc dword ptr [ecx + 0x451a8c3]; add byte ptr [ebx], al; sbb al, 0x8b; jmp ebx; 
0x0015f24b: xor edi, edi; jmp dword ptr [ebp - 0x75]; 
0x0009be06: xor edi, edi; jmp dword ptr [esi - 0x70]; 
0x00184b73: xor edi, edi; push dword ptr ss:[esp + 0x10]; mov eax, dword ptr [esp + 0x18]; call eax; 
0x00080a09: xor edi, edx; jmp dword ptr [esi - 0x70]; 
0x00042f6a: xor edx, 0x1f; mov eax, 0x40; pop ebx; sub eax, edx; ret; 
0x00121239: xor edx, 0x20; mov dword ptr [eax + 0x30], ecx; mov dword ptr [eax + 0x28], edx; pop ebx; ret; 
0x000ebc44: xor edx, 0x46; stc; call dword ptr [eax - 0x18]; 
0x0013cb0a: xor edx, 0x57; stc; call dword ptr [eax + 0x6a]; 
0x00051c27: xor edx, 0x7fffffff; pop edi; pop ebp; ret; 
0x000435bd: xor edx, 0xffffffff; je 0x435c8; bsr eax, edx; xor eax, 0x1f; ret; 
0x000435dd: xor edx, 0xffffffff; je 0x435e8; bsr eax, edx; xor eax, 0x1f; ret; 
0x00024a99: xor edx, dword ptr [0x18]; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x000de4ff: xor edx, dword ptr [eax - 0x73]; test dword ptr [ecx], esi; inc esi; stc; call dword ptr [eax - 0x18]; 
0x00024a98: xor edx, dword ptr gs:[0x18]; rol edx, 9; mov dword ptr [eax + 0x1a90], edx; ret; 
0x00153e28: xor edx, edx; add eax, 4; xchg dword ptr [eax], edx; cmp edx, 1; jg 0x153e38; ret; 
0x001380ed: xor edx, edx; add esp, 4; mov eax, edx; pop ebx; pop esi; ret; 
0x0016ee28: xor edx, edx; add esp, 8; mov eax, edx; pop ebx; ret; 
0x0003dec2: xor edx, edx; call dword ptr gs:[0x10]; 
0x0003dec2: xor edx, edx; call dword ptr gs:[0x10]; add esp, 0x14; pop ebx; pop esi; ret; 
0x0010e471: xor edx, edx; cmp eax, -1; pop ebx; cmove eax, edx; ret; 
0x000df25b: xor edx, edx; cmp eax, 0xa3d70b; setb dl; add edx, 0x16d; mov eax, edx; ret; 
0x0013a92e: xor edx, edx; div ebx; pop ebx; pop esi; pop edi; ret; 
0x00042575: xor edx, edx; lea ecx, [eax + 0x6c]; mov ebx, 2; mov eax, 0x7e; call dword ptr gs:[0x10]; 
0x00094f0a: xor edx, edx; lock cmpxchg dword ptr [esp + 4], edx; ret; 
0x0005afb3: xor edx, edx; mov dword ptr [eax], ecx; mov eax, edx; add esp, 0xc; ret; 
0x0009849a: xor edx, edx; mov dword ptr [ecx], eax; mov eax, edx; ret; 
0x0010d673: xor edx, edx; mov eax, 0x1b4; mov ecx, 0xffffffff; call dword ptr gs:[0x10]; 
0x0009427c: xor edx, edx; mov eax, 0xaf; mov esi, 8; call dword ptr gs:[0x10]; 
0x0009f756: xor edx, edx; mov eax, 1; call 0x9f6c0; mov dword ptr [esp], esi; call ebx; 
0x00132387: xor edx, edx; mov eax, dword ptr [esp + 0x10]; mov eax, dword ptr [eax + 0x4c]; call 0x132250; add esp, 4; ret; 
0x0016ee7c: xor edx, edx; mov eax, edx; pop ebx; pop esi; ret; 
0x0008799d: xor edx, edx; mov eax, edx; pop ebx; ret; 
0x00095e08: xor edx, edx; mov eax, edx; ret; 
0x000958dd: xor edx, edx; mov ecx, 7; xor esi, esi; call dword ptr gs:[0x10]; 
0x00093981: xor edx, edx; mov edi, eax; mov eax, 0xaf; call dword ptr gs:[0x10]; 
0x0009329c: xor edx, edx; mov esi, 0x53053053; call dword ptr gs:[0x10]; 
0x00093c4b: xor edx, edx; mov esi, 8; call dword ptr gs:[0x10]; 
0x0010d6db: xor edx, edx; mov esi, 8; mov ecx, dword ptr [ebp - 0x144]; call dword ptr gs:[0x10]; 
0x000ac3b0: xor edx, edx; pop ebx; mov eax, edx; ret; 
0x00094ea7: xor edx, edx; pop ebx; pop esi; mov eax, edx; ret; 
0x00042de5: xor edx, edx; pop ebx; ret; 
0x00042eaf: xor edx, edx; ret; 
0x000405cb: xor edx, edx; sub ecx, ebx; call dword ptr gs:[0x10]; 
0x0009faf1: xor edx, edx; test cl, 0x40; jne 0x9fb20; add ebx, 1; mov eax, 0x115; call dword ptr gs:[0x10]; 
0x001347ca: xor edx, edx; test eax, eax; cmovs eax, edx; add esp, 8; pop ebx; ret; 
0x0008713b: xor edx, edx; test eax, eax; setne dl; mov eax, edx; ret; 
0x00043368: xor edx, edx; tzcnt edx, eax; add edx, 1; test eax, eax; cmovne eax, edx; ret; 
0x0009335d: xor edx, edx; xor esi, esi; call dword ptr gs:[0x10]; 
0x0003e060: xor edx, edx; xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x0009ac78: xor esi, dword ptr [ebp + 5]; xor eax, eax; pop ebx; pop esi; ret; 
0x00150a52: xor esi, dword ptr [ebp - 0x55]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x0009e40f: xor esi, dword ptr [ebp - 0x62]; mov edx, 1; mov eax, 0xf0; mov ecx, 0x81; call dword ptr gs:[0x10]; 
0x001aa86b: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx + 0x333333e2]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x001aa871: xor esi, dword ptr [ebx]; xor eax, dword ptr [ecx]; ret 0xd089; 
0x0016feea: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0016fd4f: xor esi, dword ptr [ebx]; xor esi, dword ptr [ecx]; ret; 
0x0016feec: xor esi, dword ptr [ecx]; ret 0xe0c1; 
0x0016fd51: xor esi, dword ptr [ecx]; ret; 
0x00096516: xor esi, dword ptr [edi + eax - 0x77]; ret 0xc3e9; 
0x001505ec: xor esi, ecx; call dword ptr [esi + 0x50]; 
0x000bbcff: xor esi, edx; adc byte ptr [eax], al; add ecx, dword ptr [ecx + ebx*4]; jmp ecx; 
0x00091b60: xor esi, esi; add ebx, ebp; call dword ptr gs:[0x10]; 
0x00181470: xor esi, esi; add esp, 4; mov eax, esi; pop ebx; pop esi; ret; 
0x00096be2: xor esi, esi; and ecx, 0x80; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0008fbd8: xor esi, esi; call dword ptr gs:[0x10]; 
0x00091eb9: xor esi, esi; lea ebx, [edi + eax + 0x20]; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x001222ac: xor esi, esi; lea edx, [esp + 0xc]; call dword ptr gs:[0x10]; 
0x00097b2f: xor esi, esi; mov dword ptr [ebx + 4], edx; xor edx, edx; call dword ptr gs:[0x10]; 
0x0009065f: xor esi, esi; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00090286: xor esi, esi; mov eax, ebp; call dword ptr gs:[0x10]; 
0x0008fc95: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; 
0x0008fc95: xor esi, esi; mov ebx, dword ptr [esp + 0xc]; call dword ptr gs:[0x10]; pop ebx; pop esi; ret; 
0x000999a2: xor esi, esi; mov ebx, ebp; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00098c09: xor esi, esi; mov ebx, edi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000901ba: xor esi, esi; mov ecx, 0x81; mov edx, 1; call dword ptr gs:[0x10]; 
0x00096308: xor esi, esi; mov ecx, dword ptr [eax]; mov eax, 0xf0; not ecx; and ecx, 0x80; call dword ptr gs:[0x10]; 
0x0008fa6e: xor esi, esi; mov ecx, dword ptr [esp + 0xc]; mov eax, 0xf0; xor edx, edx; call dword ptr gs:[0x10]; 
0x000919ce: xor esi, esi; mov ecx, dword ptr [esp + 4]; xor cl, 0x81; mov dword ptr [edi + eax*4], 0; mov eax, 0xf0; call dword ptr gs:[0x10]; 
0x00098646: xor esi, esi; mov edx, 0x7fffffff; mov dword ptr [ebx], 2; call dword ptr gs:[0x10]; 
0x0009147d: xor esi, esi; mov edx, 0x7fffffff; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x000903f8: xor esi, esi; mov edx, 1; add ebx, 0x10; call dword ptr gs:[0x10]; 
0x00189ee4: xor esi, esi; mov edx, 1; call dword ptr gs:[0x10]; 
0x00091ba4: xor esi, esi; mov edx, 1; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00092370: xor esi, esi; mov edx, eax; mov eax, 0xf0; or edx, 2; call dword ptr gs:[0x10]; 
0x00091cb0: xor esi, esi; mov edx, eax; mov eax, ebp; or edx, 2; call dword ptr gs:[0x10]; 
0x00130495: xor esi, esi; mov edx, ebx; mov ebx, 0xe; call dword ptr gs:[0x10]; 
0x00131064: xor esi, esi; or dh, 1; mov ebx, 0x18; call dword ptr gs:[0x10]; 
0x000c2530: xor esi, esi; pop ebx; mov eax, esi; pop esi; pop edi; ret; 
0x00130f3b: xor esi, esi; push ebx; mov ebx, 0x16; mov edi, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x00130389: xor esi, esi; push ebx; mov ebx, 0xd; mov ecx, dword ptr [esp + 0x14]; mov edx, dword ptr [esp + 0x18]; call dword ptr gs:[0x10]; 
0x00098500: xor esi, esi; push ebx; mov ebx, dword ptr [esp + 0x10]; mov dword ptr [ebx], 0; call dword ptr gs:[0x10]; 
0x0008fcbf: xor esi, esi; push ebx; mov ecx, dword ptr [esp + 0x10]; mov ebx, dword ptr [esp + 0xc]; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x00122386: xor esi, esi; push ebx; xor ebx, ebx; mov ecx, dword ptr [esp + 0x10]; mov edx, dword ptr [esp + 0x14]; call dword ptr gs:[0x10]; 
0x001a943c: xor esi, esi; ret 0xf01; 
0x0008fc47: xor esi, esi; xor cl, 0x80; call dword ptr gs:[0x10]; 
0x00091f55: xor esi, esi; xor cl, 0x81; call dword ptr gs:[0x10]; 
0x0003e062: xor esi, esi; xor edi, edi; call dword ptr gs:[0x10]; 
0x000973ff: xor esi, esi; xor edx, edx; call dword ptr gs:[0x10]; 
0x00132044: xor esp, 0x66000047; add dword ptr [eax + ebx*2], 1; pop ebx; ret; 
0x00056eb3: xor esp, 0x7f; clc; call dword ptr [eax + 0x51]; 
0x000481e5: xor esp, 0x7f; clc; call dword ptr [eax + 0x52]; 
0x00056f38: xor esp, 0x7f; clc; call dword ptr [eax - 1]; 
0x0015f32c: xor esp, dword ptr [eax - 7]; call dword ptr [eax - 0x18]; 
0x001aa79c: xor esp, dword ptr [esi + 0xf]; adc al, byte ptr [ecx]; movlpd qword ptr [edx], xmm0; mov eax, edi; pop edi; ret; 
0x000712eb: xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x736b4]; add ecx, eax; jmp ecx; 
0x00072437: xor esp, eax; mov ebx, dword ptr [esp + 0xc]; mov ecx, dword ptr [ebx + edx*4 - 0x73834]; add ecx, eax; jmp ecx; 

46654 gadgets found
